{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjA1NTU5", "number": 3975, "reviewThreads": {"totalCount": 52, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0MzozMVrOERdJhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDo1Mzo0MlrOE28ucA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzM4ODIwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0MzozMVrOG2LJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0MzozMVrOG2LJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ1ODg0NQ==", "bodyText": "You have this variable just to use it in return, you can get rid of it and return just binding.getRoot()", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459458845", "createdAt": "2020-07-23T13:43:31Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzQwMTQyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0NjoyNVrOG2LREQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0NjoyNVrOG2LREQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2MDg4MQ==", "bodyText": "Do you really need this here? I don't think so because here you just want to add the default text no_date_selected which btw I don't like because it's not consistent with other widgets. @lognaturel can we maybe get rid of it?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459460881", "createdAt": "2020-07-23T13:46:25Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;\n \n     public DateWidget(Context context, QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();\n+\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.widgetButton.setOnClickListener(v -> onButtonClick(binding.widgetButton.getId()));\n+        }\n+\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n         if (getFormEntryPrompt().getAnswerValue() == null) {\n             clearAnswer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzQxNDQyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0OToyM1rOG2LZTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo0OToyM1rOG2LZTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2Mjk5MA==", "bodyText": "Do we really need this field? Can't we just relay on the label, (or even on date which is nullable)? Checking if it contains the default message or is empty if we get rid of it (look at my other comment regarding the default message)", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459462990", "createdAt": "2020-07-23T13:49:23Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;\n-\n     private DatePickerDetails datePickerDetails;\n+    private boolean isNullAnswer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzQyMjUxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1MTowNVrOG2LeSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1MTowNVrOG2LeSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NDI2Nw==", "bodyText": "I would give it a more meaningful name like selectedDate?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459464267", "createdAt": "2020-07-23T13:51:05Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -15,113 +15,88 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.DatePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.util.AttributeSet;\n+import android.util.TypedValue;\n import android.view.View;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.DatePicker;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n \n import org.javarosa.core.model.data.DateData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n-import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n import org.odk.collect.android.logic.DatePickerDetails;\n import org.odk.collect.android.utilities.DateTimeUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n-\n-/**\n- * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n- * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class DateWidget extends QuestionWidget implements DatePickerDialog.OnDateSetListener, BinaryWidget {\n-    Button dateButton;\n-    TextView dateTextView;\n-\n-    boolean isNullAnswer;\n+public class DateWidget extends QuestionWidget implements BinaryWidget {\n+    WidgetAnswerBinding binding;\n \n     private LocalDateTime date;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzQzNjU2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1NDowNFrOG2Lm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1NDowNFrOG2Lm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NjQ2OA==", "bodyText": "As in DateWidget you don't need this variable just return binding.getRoot() at the bottom", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459466468", "createdAt": "2020-07-23T13:54:04Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -69,241 +45,73 @@ public TimeWidget(Context context, final QuestionDetails prompt) {\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        View answerView = binding.getRoot();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzQ0MTEwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1NDo1NFrOG2Lpsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1NDo1NFrOG2Lpsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2NzE4Nw==", "bodyText": "As in DateWidget I think we don't need this filed and we can relay on the label.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459467187", "createdAt": "2020-07-23T13:54:54Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,52 +15,28 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonWidget;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonWidget, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n-\n     private boolean nullAnswer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODEzNTY4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozMjo1MFrOG2SeuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMToyNDoyN1rOG2cF8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ==", "bodyText": "What if we have at least two Time widgets on one screen then even if you change the second one , the first one will be edited because as opposed to setBinaryData which checks if a widget is waiting for data this just takes the first one? Am I missing something?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459579065", "createdAt": "2020-07-23T16:32:50Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -698,6 +705,58 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (currentView != null) {\n+            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n+                if (qw instanceof DateWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                } else if (qw instanceof DateTimeWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateTimeWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQzMQ==", "bodyText": "Also the fact that here you use onTimeSet and above setBinaryData is not consistent i think it would be good to use setBinaryData in all cases. I know that name doesn't match very well since originally it was created for media widgets so I would rename it to just setAnswer maybe.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459710431", "createdAt": "2020-07-23T20:31:15Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -698,6 +705,58 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (currentView != null) {\n+            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n+                if (qw instanceof DateWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                } else if (qw instanceof DateTimeWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateTimeWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNTE4NA==", "bodyText": "I totally agree with you that using setBinaryData() at all places will be consistent. I didn't know that we can have two Time widgets on one screen for ODK X Forms. I usually use ODK Build to build testing forms. I didn't see any feature like that to include two Time widgets on one screen there.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459735184", "createdAt": "2020-07-23T21:21:39Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -698,6 +705,58 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (currentView != null) {\n+            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n+                if (qw instanceof DateWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                } else if (qw instanceof DateTimeWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateTimeWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczNjU2Mg==", "bodyText": "Theoretically it is possible that's why we use waitForData()/cancelWaitingForData to mark widgets that should receive answers.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459736562", "createdAt": "2020-07-23T21:24:27Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -698,6 +705,58 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (currentView != null) {\n+            for (QuestionWidget qw : ((ODKView) currentView).getWidgets()) {\n+                if (qw instanceof DateWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                } else if (qw instanceof DateTimeWidget) {\n+                    LocalDateTime date = new LocalDateTime()\n+                            .withYear(year)\n+                            .withMonthOfYear(month + 1)\n+                            .withDayOfMonth(dayOfMonth)\n+                            .withHourOfDay(0)\n+                            .withMinuteOfHour(0)\n+                            .withSecondOfMinute(0)\n+                            .withMillisOfSecond(0);\n+                    ((DateTimeWidget) qw).setBinaryData(date);\n+                    widgetValueChanged(qw);\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU3OTA2NQ=="}, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODE0OTE4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNjoyNFrOG2Sm_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNjoyNFrOG2Sm_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTE4MA==", "bodyText": "Please create a view model for this dialog instead of using such a trick to prevent data from clearing.\nBTW it would be good to have a vie model for CustomDatePickerDialog too.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459581180", "createdAt": "2020-07-23T16:36:24Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.joda.time.DateTime;\n+import org.odk.collect.android.R;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    public static final String CURRENT_TIME = \"CURRENT_TIME\";\n+    public static final String TIME_PICKER_THEME = \"TIME_PICKER_THEME\";\n+\n+    private TimePickerDialog.OnTimeSetListener listener;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimePickerDialog.OnTimeSetListener) {\n+            listener = (TimePickerDialog.OnTimeSetListener) context;\n+        }\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        DateTime date = (DateTime) getArguments().getSerializable(CURRENT_TIME);\n+        setRetainInstance(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODE2OTMyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/widget_answer.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0MTo1MVrOG2Sz0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0MTo1MVrOG2Sz0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NDQ2NA==", "bodyText": "If you use the same values for start/end or top/bottom you can use layout_marginVertical/layout_marginHorizontal and do that in one line.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459584464", "createdAt": "2020-07-23T16:41:51Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/widget_answer.xml", "diffHunk": "@@ -5,22 +5,20 @@\n     android:layout_height=\"wrap_content\">\n \n     <org.odk.collect.android.views.MultiClickSafeButton\n-        android:id=\"@+id/url_button\"\n+        android:id=\"@+id/widget_button\"\n         style=\"@style/Widget.Collect.Button.Custom\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n         android:padding=\"@dimen/margin_small\"\n-        android:text=\"@string/open_url\"\n         android:layout_marginStart=\"@dimen/margin_standard\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk4MjM2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozODozNFrOG2au7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozODozNFrOG2au7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNDI4NA==", "bodyText": "Why do we need this here?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459714284", "createdAt": "2020-07-23T20:38:34Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -97,56 +123,90 @@ public IAnswerData getAnswer() {\n \n     @Override\n     public void clearAnswer() {\n-        dateWidget.clearAnswerWithoutValueChangeEvent();\n-        timeWidget.clearAnswerWithoutValueChangeEvent();\n+        isDateNull = true;\n+        binding.dateAnswerText.setText(R.string.no_date_selected);\n+        setDateToCurrent();\n \n+        isTimeNull = true;\n+        binding.timeAnswerText.setText(R.string.no_time_selected);\n+        setTimeToCurrent();\n         widgetValueChanged();\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        dateWidget.setOnLongClickListener(l);\n-        timeWidget.setOnLongClickListener(l);\n+        binding.dateButton.setOnLongClickListener(l);\n+        binding.dateAnswerText.setOnLongClickListener(l);\n+\n+        binding.timeButton.setOnLongClickListener(l);\n+        binding.timeAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        dateWidget.cancelLongPress();\n-        timeWidget.cancelLongPress();\n+        binding.dateButton.cancelLongPress();\n+        binding.dateAnswerText.cancelLongPress();\n+\n+        binding.timeButton.cancelLongPress();\n+        binding.timeAnswerText.cancelLongPress();\n     }\n \n     @Override\n     public void setBinaryData(Object answer) {\n-        dateWidget.setBinaryData(answer);\n+        if (answer instanceof LocalDateTime) {\n+            date = (LocalDateTime) answer;\n+            isDateNull = false;\n+            DateTimeWidgetUtils.setDateLabel(getContext(), binding.dateAnswerText, (Date) getAnswer().getValue(), datePickerDetails);\n+        }\n     }\n \n-    public DateWidget getDateWidget() {\n-        return dateWidget;\n+    @Override\n+    public void onButtonClick(int buttonId) {\n+        DateTimeWidgetUtils.createTimePickerDialog((FormEntryActivity) getContext(), hourOfDay, minuteOfHour);\n     }\n \n-    // Exposed for testing purposes to avoid reflection.\n-    public void setDateWidget(DateWidget dateWidget) {\n-        this.dateWidget = dateWidget;\n+    @Override\n+    public void widgetValueChanged(QuestionWidget changedWidget) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk5NTg3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/date_time_widget_answer.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0Mjo0MVrOG2a3Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0Mjo0MVrOG2a3Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjM1NQ==", "bodyText": "Can't we simplify this and just include layout/widget_answer twice?\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <include\n        layout=\"@layout/widget_answer\"\n        android:id=\"@+id/date_widget\"/>\n\n    <include\n        layout=\"@layout/widget_answer\"\n        android:id=\"@+id/time_widget\"/>\n\n</LinearLayout>", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459716355", "createdAt": "2020-07-23T20:42:41Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/date_time_widget_answer.xml", "diffHunk": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <org.odk.collect.android.views.MultiClickSafeButton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTAzMDY1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1MzozN1rOG2bL8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1MzozN1rOG2bL8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMTcxMw==", "bodyText": "It's weird that we pass boolean nullAnswer here I think we should check for it before we use this method.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459721713", "createdAt": "2020-07-23T20:53:37Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTAzNTU0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NTowN1rOG2bO5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NTowN1rOG2bO5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMjQ3MA==", "bodyText": "it should be a part of widget class, passing TextView dateAnswerText just to setText on it is strange.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459722470", "createdAt": "2020-07-23T20:55:07Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTAzNjY4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NToyNVrOG2bPiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NToyNVrOG2bPiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMjYzMg==", "bodyText": "As above it should be a part of widget class.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459722632", "createdAt": "2020-07-23T20:55:25Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTA0Mjc1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NzoxNVrOG2bTRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo1NzoxNVrOG2bTRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyMzU5MA==", "bodyText": "FormEntryPrompt prompt is used just to get its index so please pass the index only.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459723590", "createdAt": "2020-07-23T20:57:15Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTA1NDAzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMTowMDozMVrOG2baIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMToxMToxNFrOG2gf-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw==", "bodyText": "i think we can get rid of this DATE_PICKER_DIALOG static value and use CustomDatePickerDialog.class.getName() in all cases.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459725347", "createdAt": "2020-07-23T21:00:31Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case ETHIOPIAN:\n+                CustomDatePickerDialog dialog = EthiopianDatePickerDialog.newInstance(prompt.getIndex(), date, datePickerDetails);\n+                dialog.show(activity.getSupportFragmentManager(), DATE_PICKER_DIALOG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTczMDUwNA==", "bodyText": "And also i'm wondering if we can simplify it somehow like:\n    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n                                            LocalDateTime date) {\n\n        Bundle bundle = new Bundle();\n        bundle.putInt(DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n        bundle.putSerializable(CURRENT_DATE, date);\n        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n\n        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n    }\n    \n    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n        switch (datePickerType) {\n            case ETHIOPIAN:\n                return CustomDatePickerDialog.class;\n            case COPTIC:\n                return CopticDatePickerDialog.class;\n            case ISLAMIC:\n                return IslamicDatePickerDialog.class;\n            case BIKRAM_SAMBAT:\n                return BikramSambatDatePickerDialog.class;\n            case MYANMAR:\n                return MyanmarDatePickerDialog.class;\n            case PERSIAN:\n                return PersianDatePickerDialog.class;\n            default:\n                return FixedDatePickerDialog.class;\n        }\n    }\n\nyou would need to add some fixes in handling those values we pass to dialogs but I think it's possible?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459730504", "createdAt": "2020-07-23T21:11:29Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case ETHIOPIAN:\n+                CustomDatePickerDialog dialog = EthiopianDatePickerDialog.newInstance(prompt.getIndex(), date, datePickerDetails);\n+                dialog.show(activity.getSupportFragmentManager(), DATE_PICKER_DIALOG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw=="}, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgwODc2Mg==", "bodyText": "Ohh that's great! I'll work on it.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459808762", "createdAt": "2020-07-24T01:11:14Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.widget.TextView;\n+\n+import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+import java.util.Date;\n+\n+import static org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog.DATE_PICKER_DIALOG;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.CURRENT_TIME;\n+import static org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog.TIME_PICKER_THEME;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.CURRENT_DATE;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_DETAILS;\n+import static org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog.DATE_PICKER_THEME;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return !nullAnswer\n+                ? new TimeData(localDateTime.toDate())\n+                : null;\n+    }\n+\n+    public static void setDateLabel(Context context, TextView dateAnswerText, Date date, DatePickerDetails datePickerDetails) {\n+        dateAnswerText.setText(DateTimeUtils.getDateTimeLabel(date, datePickerDetails, false, context));\n+    }\n+\n+    public static void setTimeLabel(TextView timeAnswerText, int hourOfDay, int minuteOfHour, boolean nullAnswer) {\n+        timeAnswerText.setText(getTimeData(hourOfDay, minuteOfHour, nullAnswer).getDisplayText());\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormEntryPrompt prompt, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case ETHIOPIAN:\n+                CustomDatePickerDialog dialog = EthiopianDatePickerDialog.newInstance(prompt.getIndex(), date, datePickerDetails);\n+                dialog.show(activity.getSupportFragmentManager(), DATE_PICKER_DIALOG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcyNTM0Nw=="}, "originalCommit": {"oid": "f369b5c5978f0604b784825cb5e5867fefbf985e"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDQ3MDAwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMDo0M1rOG2oIjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMDo0M1rOG2oIjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzMzgzOA==", "bodyText": "You won't need negation if you turn the order:\n        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_date_selected))\n                ? null\n                : new DateData(selectedDate.toDate());", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459933838", "createdAt": "2020-07-24T09:00:43Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateWidget.java", "diffHunk": "@@ -83,291 +48,69 @@ public DateWidget(Context context, QuestionDetails prompt) {\n \n     public DateWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createWidget(context);\n     }\n \n-    protected void createWidget(Context context) {\n-        datePickerDetails = DateTimeUtils.getDatePickerDetails(getFormEntryPrompt().getQuestion().getAppearanceAttr());\n-        dateButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_date), getAnswerFontSize(), this);\n-        dateTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        addViews(context);\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-            setDateToCurrent();\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n         } else {\n-            date = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n-            setDateLabel();\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showDatePickerDialog(\n+                    (FormEntryActivity) getContext(), prompt.getIndex(), datePickerDetails, selectedDate));\n         }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedDate = DateTimeWidgetUtils.getCurrentDate();\n+            binding.widgetAnswerText.setText(R.string.no_date_selected);\n+        } else {\n+            selectedDate = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                    (Date) getAnswer().getValue(), datePickerDetails, false, context));\n+        }\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        dateButton.setOnLongClickListener(l);\n-        dateTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        dateButton.cancelLongPress();\n-        dateTextView.cancelLongPress();\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n+        selectedDate = DateTimeWidgetUtils.getCurrentDate();\n+        binding.widgetAnswerText.setText(R.string.no_date_selected);\n         widgetValueChanged();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        isNullAnswer = true;\n-        dateTextView.setText(R.string.no_date_selected);\n-        setDateToCurrent();\n-    }\n-\n     @Override\n     public IAnswerData getAnswer() {\n-        return isNullAnswer ? null : new DateData(date.toDate());\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_date_selected))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDQ3MzEzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMTo0OVrOG2oKhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMTo0OVrOG2oKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNDM0Mw==", "bodyText": "You won't need negation if you turn the order:\n        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n                ? null\n                : DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour);", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459934343", "createdAt": "2020-07-24T09:01:49Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n \n-    private boolean nullAnswer;\n-\n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-    @Override\n-    public void cancelLongPress() {\n-        super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.createTimePickerDialog(\n+                    (FormEntryActivity) getContext(), hourOfDay, minuteOfHour));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n+        if (prompt.getAnswerValue() == null) {\n+            setTimeToCurrent();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n         } else {\n             Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n             DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n \n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n+            hourOfDay = dateTime.getHourOfDay();\n+            minuteOfHour = dateTime.getMinuteOfHour();\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour).getDisplayText());\n+        }\n \n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n+        return binding.getRoot();\n     }\n \n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n+    @Override\n+    public void clearAnswer() {\n+        setTimeToCurrent();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n+    @Override\n+    public IAnswerData getAnswer() {\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDQ4MjU2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowNDo0M1rOG2oQRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowNDo0M1rOG2oQRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNTgxMw==", "bodyText": "I think it's not consistent than in this widget we keep separate values hour, minute and in DateWidget we keep LocalDateTime wouldn't it be better to have TimeData field here instead of hour/minute?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459935813", "createdAt": "2020-07-24T09:04:43Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDUwMjUyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowOTozMlrOG2obJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTo0MjoyNFrOG2pWaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzODU5Ng==", "bodyText": "As I said in one of my previous comments it would be good to rename this method because now it is used in many widgets not just binary ones. setData maybe?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459938596", "createdAt": "2020-07-24T09:09:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n \n-    private boolean nullAnswer;\n-\n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-    @Override\n-    public void cancelLongPress() {\n-        super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.createTimePickerDialog(\n+                    (FormEntryActivity) getContext(), hourOfDay, minuteOfHour));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n+        if (prompt.getAnswerValue() == null) {\n+            setTimeToCurrent();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n         } else {\n             Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n             DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n \n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n+            hourOfDay = dateTime.getHourOfDay();\n+            minuteOfHour = dateTime.getMinuteOfHour();\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour).getDisplayText());\n+        }\n \n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n+        return binding.getRoot();\n     }\n \n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n+    @Override\n+    public void clearAnswer() {\n+        setTimeToCurrent();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n+    @Override\n+    public IAnswerData getAnswer() {\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour)\n+                : null;\n     }\n \n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+    @Override\n+    public void setOnLongClickListener(OnLongClickListener l) {\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();\n-\n-        this.hourOfDay = timePicker.getCurrentHour();\n-        this.minuteOfHour = timePicker.getCurrentMinute();\n-\n-        setTimeLabel();\n-        widgetValueChanged();\n+    public void cancelLongPress() {\n+        super.cancelLongPress();\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onButtonClick(int buttonId) {\n-        if (nullAnswer) {\n-            setTimeToCurrent();\n-        } else {\n-            updateTime(hourOfDay, minuteOfHour, true);\n+    public void setBinaryData(Object answer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk1Mzc2OQ==", "bodyText": "Oh okay right Sorry I forgot.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459953769", "createdAt": "2020-07-24T09:42:24Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,106 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n     private int hourOfDay;\n     private int minuteOfHour;\n \n-    private boolean nullAnswer;\n-\n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n-    }\n-\n-    @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n-    }\n-\n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n-    }\n-\n-    @Override\n-    public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n     }\n \n     @Override\n-    public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n-    }\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-    @Override\n-    public void cancelLongPress() {\n-        super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.createTimePickerDialog(\n+                    (FormEntryActivity) getContext(), hourOfDay, minuteOfHour));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n+        if (prompt.getAnswerValue() == null) {\n+            setTimeToCurrent();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n         } else {\n             Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n             DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n \n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n+            hourOfDay = dateTime.getHourOfDay();\n+            minuteOfHour = dateTime.getMinuteOfHour();\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour).getDisplayText());\n+        }\n \n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n+        return binding.getRoot();\n     }\n \n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n+    @Override\n+    public void clearAnswer() {\n+        setTimeToCurrent();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n+    @Override\n+    public IAnswerData getAnswer() {\n+        return !binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? DateTimeWidgetUtils.getTimeData(hourOfDay, minuteOfHour)\n+                : null;\n     }\n \n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+    @Override\n+    public void setOnLongClickListener(OnLongClickListener l) {\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();\n-\n-        this.hourOfDay = timePicker.getCurrentHour();\n-        this.minuteOfHour = timePicker.getCurrentMinute();\n-\n-        setTimeLabel();\n-        widgetValueChanged();\n+    public void cancelLongPress() {\n+        super.cancelLongPress();\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onButtonClick(int buttonId) {\n-        if (nullAnswer) {\n-            setTimeToCurrent();\n-        } else {\n-            updateTime(hourOfDay, minuteOfHour, true);\n+    public void setBinaryData(Object answer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzODU5Ng=="}, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 229}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDUzMDMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToxNzo0NlrOG2oreQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToxNzo0NlrOG2oreQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0Mjc3Nw==", "bodyText": "Please create methods that return true/false based on labels and use instead of these fields.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459942777", "createdAt": "2020-07-24T09:17:46Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,175 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n+\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private int hourOfDay;\n+    private int minuteOfHour;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private boolean isDateNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDU0NDgwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyMjozN1rOG2o0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyMjozN1rOG2o0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NDk4MQ==", "bodyText": "Those fields are now hared between CustomDatePickerDialog and FixedDatePickerDialog so shouldn't placed in CustomDatePickerDialog. This class would be probably a better place.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459944981", "createdAt": "2020-07-24T09:22:37Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDU1Mzk5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyNTozNlrOG2o5ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyNTozNlrOG2o5ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NjM5OA==", "bodyText": "Could be one line, it's short enough.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459946398", "createdAt": "2020-07-24T09:25:36Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDU2MjE3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyODoxOVrOG2o-TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToyODoxOVrOG2o-TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NzU5Ng==", "bodyText": "Make sure this method name is consistent with showDatePickerDialog it should also start with show not create.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459947596", "createdAt": "2020-07-24T09:28:19Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n+        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n+        switch (datePickerType) {\n+            case ETHIOPIAN:\n+                return EthiopianDatePickerDialog.class;\n+            case COPTIC:\n+                return CopticDatePickerDialog.class;\n+            case ISLAMIC:\n+                return IslamicDatePickerDialog.class;\n+            case BIKRAM_SAMBAT:\n+                return BikramSambatDatePickerDialog.class;\n+            case MYANMAR:\n+                return MyanmarDatePickerDialog.class;\n+            case PERSIAN:\n+                return PersianDatePickerDialog.class;\n+            default:\n+                return FixedDatePickerDialog.class;\n+        }\n+    }\n+\n+    public static void createTimePickerDialog(FormEntryActivity activity, int hourOfDay, int minuteOfHour) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDU2ODM2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTozMDoyOVrOG2pB7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTozMDoyOVrOG2pB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0ODUyNw==", "bodyText": "please rename it to getDatePickerTheme or something like that because now it's confusing and other contributors migt think it should be used for building TimePickers as well.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r459948527", "createdAt": "2020-07-24T09:30:29Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+\n+    private DateTimeWidgetUtils() {\n+    }\n+\n+    public static TimeData getTimeData(int hourOfDay, int minuteOfHour) {\n+        // use picker time, convert to today's date, store as utc\n+        DateTime localDateTime = new DateTime()\n+                .withTime(hourOfDay, minuteOfHour, 0, 0);\n+\n+        return new TimeData(localDateTime.toDate());\n+    }\n+\n+    public static LocalDateTime getCurrentDate() {\n+        return LocalDateTime\n+                .now()\n+                .withHourOfDay(0)\n+                .withMinuteOfHour(0)\n+                .withSecondOfMinute(0)\n+                .withMillisOfSecond(0);\n+    }\n+\n+    public static void showDatePickerDialog(FormEntryActivity activity, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomDatePickerDialog.DATE_PICKER_THEME, getTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(CustomDatePickerDialog.DATE, date);\n+        bundle.putSerializable(CustomDatePickerDialog.DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(CustomDatePickerDialog.FORM_INDEX, formIndex);\n+\n+        DialogUtils.showIfNotShowing(getClass(datePickerDetails.getDatePickerType()), bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static Class getClass(DatePickerDetails.DatePickerType datePickerType) {\n+        switch (datePickerType) {\n+            case ETHIOPIAN:\n+                return EthiopianDatePickerDialog.class;\n+            case COPTIC:\n+                return CopticDatePickerDialog.class;\n+            case ISLAMIC:\n+                return IslamicDatePickerDialog.class;\n+            case BIKRAM_SAMBAT:\n+                return BikramSambatDatePickerDialog.class;\n+            case MYANMAR:\n+                return MyanmarDatePickerDialog.class;\n+            case PERSIAN:\n+                return PersianDatePickerDialog.class;\n+            default:\n+                return FixedDatePickerDialog.class;\n+        }\n+    }\n+\n+    public static void createTimePickerDialog(FormEntryActivity activity, int hourOfDay, int minuteOfHour) {\n+        ThemeUtils themeUtils = new ThemeUtils(activity);\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(CustomTimePickerDialog.TIME_PICKER_THEME, themeUtils.getHoloDialogTheme());\n+        bundle.putSerializable(CustomTimePickerDialog.CURRENT_TIME, new DateTime().withTime(hourOfDay, minuteOfHour, 0, 0));\n+\n+        DialogUtils.showIfNotShowing(CustomTimePickerDialog.class, bundle, activity.getSupportFragmentManager());\n+    }\n+\n+    private static int getTheme(ThemeUtils themeUtils, DatePickerDetails datePickerDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce2d8d772001cea191113a2a0505ba5b142ee0"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTA2MTIyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNDozM1rOG2tqEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNDozM1rOG2tqEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNDMzOQ==", "bodyText": "No need to cast to Date.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460024339", "createdAt": "2020-07-24T12:34:33Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n import java.util.Date;\n \n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n-\n-    private int hourOfDay;\n-    private int minuteOfHour;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showTimePickerDialog(\n+                    (FormEntryActivity) getContext(), selectedTime));\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime((Date) getFormEntryPrompt().getAnswerValue().getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTA2NDYyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNTozMlrOG2tr9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNTozMlrOG2tr9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNDgyMg==", "bodyText": "To be consistent with DateWidget please use selectedDate name here.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460024822", "createdAt": "2020-07-24T12:35:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTA2NTczOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNTo1N1rOG2tsrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjozNTo1N1rOG2tsrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyNTAwNA==", "bodyText": "To be consistent with TimeWidget please use selectedTime name here.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460025004", "createdAt": "2020-07-24T12:35:57Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private DateTime time;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTA5NDIxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NTowNVrOG2t98Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NTowNVrOG2t98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyOTQyNQ==", "bodyText": "This combination is a bit confusing clearAnswerWithoutValueChangeListener() + widgetValueChanged() if you want to keep that first method I think it would be better to rename it to something like resetAnswerFields() or clearAnswerFields().", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460029425", "createdAt": "2020-07-24T12:45:05Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,161 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+\n+import java.util.Date;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime date;\n+    private DatePickerDetails datePickerDetails;\n+    private DateTime time;\n \n     public DateTimeWidget(Context context, QuestionDetails prompt) {\n         super(context, prompt);\n+    }\n+\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = DateTimeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+        datePickerDetails = DateTimeUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n \n-        dateWidget = new DateWidget(context, prompt, true);\n-        timeWidget = new TimeWidget(context, prompt, true);\n+        if (prompt.isReadOnly()) {\n+            binding.dateWidget.widgetButton.setVisibility(GONE);\n+            binding.timeWidget.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.dateWidget.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.timeWidget.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.dateWidget.widgetButton.setText(getContext().getString(R.string.select_date));\n+            binding.timeWidget.widgetButton.setText(getContext().getString(R.string.select_time));\n \n-        dateWidget.getAudioVideoImageTextLabel().getLabelTextView().setVisibility(GONE);\n-        dateWidget.getHelpTextLayout().setVisibility(GONE);\n+            binding.dateWidget.widgetButton.setOnClickListener(v -> DateTimeWidgetUtils.showDatePickerDialog(\n+                    (FormEntryActivity) context, prompt.getIndex(), datePickerDetails, date));\n+            binding.timeWidget.widgetButton.setOnClickListener(v ->\n+                    DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), time));\n+        }\n+        binding.dateWidget.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+        binding.timeWidget.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        timeWidget.getAudioVideoImageTextLabel().getLabelTextView().setVisibility(GONE);\n-        timeWidget.getHelpTextLayout().setVisibility(GONE);\n+        if (getFormEntryPrompt().getAnswerValue() == null) {\n+            clearAnswerWithoutValueChangeListener();\n+        } else {\n+            date = new LocalDateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.dateWidget.widgetAnswerText.setText(DateTimeUtils.getDateTimeLabel(\n+                    date.toDate(), datePickerDetails, false, context));\n \n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(dateWidget);\n-        if (!dateWidget.isDayHidden()) {\n-            linearLayout.addView(timeWidget);\n+            time = new DateTime((Date) getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.timeWidget.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(time).getDisplayText());\n         }\n-        addAnswerView(linearLayout);\n \n-        timeWidget.setValueChangedListener(this);\n-        dateWidget.setValueChangedListener(this);\n+        return binding.getRoot();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        if (isNullAnswer()) {\n+        if (isNullValue()) {\n             return null;\n         } else {\n-            if (timeWidget.isNullAnswer()) {\n-                timeWidget.setTimeToCurrent();\n-                timeWidget.setTimeLabel();\n-            } else if (dateWidget.isNullAnswer()) {\n-                dateWidget.setDateToCurrent();\n-                dateWidget.setDateLabel();\n+            LocalDateTime ldt;\n+            if (isTimeNull()) {\n+                ldt = DateTimeUtils.getLocalDateTime(date.getYear(),\n+                        date.getMonthOfYear(), date.getDayOfMonth(), 0, 0);\n+                time = DateTime.now();\n+            } else if (isDateNull()) {\n+                ldt = new LocalDateTime()\n+                        .withHourOfDay(time.getHourOfDay())\n+                        .withMinuteOfHour(time.getMinuteOfHour());\n+\n+                date = DateTimeWidgetUtils.getCurrentDate();\n+            } else {\n+                ldt = DateTimeUtils.getLocalDateTime(date.getYear(), date.getMonthOfYear(),\n+                        date.getDayOfMonth(), time.getHourOfDay(), time.getMinuteOfHour());\n             }\n-\n-            int year = dateWidget.getDate().getYear();\n-            int month = dateWidget.getDate().getMonthOfYear();\n-            int day = dateWidget.getDate().getDayOfMonth();\n-            int hour = timeWidget.getHour();\n-            int minute = timeWidget.getMinute();\n-\n-            LocalDateTime ldt = new LocalDateTime()\n-                    .withYear(year)\n-                    .withMonthOfYear(month)\n-                    .withDayOfMonth(day)\n-                    .withHourOfDay(hour)\n-                    .withMinuteOfHour(minute)\n-                    .withSecondOfMinute(0)\n-                    .withMillisOfSecond(0);\n-\n             return new DateTimeData(ldt.toDate());\n         }\n     }\n \n     @Override\n     public void clearAnswer() {\n-        dateWidget.clearAnswerWithoutValueChangeEvent();\n-        timeWidget.clearAnswerWithoutValueChangeEvent();\n-\n+        clearAnswerWithoutValueChangeListener();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTEwMTkzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NzozMFrOG2uCsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NzozMFrOG2uCsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMDY0MQ==", "bodyText": "Please make sure that the same format is used like above (datePickerTheme not DATE_PICKER_THEME) btw it would be good to have a lint/checkstyle for that.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460030641", "createdAt": "2020-07-24T12:47:30Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {\n+    public static final String FORM_INDEX = \"formIndex\";\n+    public static final String DATE = \"date\";\n+    public static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n+    public static final String DATE_PICKER_THEME = \"DATE_PICKER_THEME\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTIzMjAwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoyNjozOFrOG2vRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo0OTo1M1rOG5fr-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA==", "bodyText": "This two methods still don't work like expected please take a look at onDateChanged/onRankingChanged\nand also you probably don't need this method at all because there is existing onDateChanged can you use it?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460050820", "createdAt": "2020-07-24T13:26:38Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNjQ5OA==", "bodyText": "@grzesiek2010 I checked the code of DatePickerDialog.\n@Override  public void onClick(@NonNull DialogInterface dialog, int which) { switch (which) { case BUTTON_POSITIVE: if (mDateSetListener != null) { mDatePicker.clearFocus(); mDateSetListener.onDateSet(mDatePicker, mDatePicker.getYear(), mDatePicker.getMonth(), mDatePicker.getDayOfMonth()); } break; case BUTTON_NEGATIVE: cancel(); break; } }\nonDateSet is called on clicking the positive button. Do I need to override the onClick() method?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r460226498", "createdAt": "2020-07-24T18:42:44Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MTAzOQ==", "bodyText": "I think I don't understand...\nIn FixedDatePickerDialog you have:\nprivate DatePickerDialog.OnDateSetListener listener;\n\nbut in CustomDatePickerDialog you have\nprivate CustomDatePickerDialogListener listener;\n\nend then you end up with two different methods in FormEntryActivity:\nonDateChanged and onDateSet I think you can share use just one listener probably:\nprivate DatePickerDialog.OnDateSetListener listener;\n\nbecause you won't be able to use CustomDatePickerDialogListener in FixedDatePickerDialog\nis that clear?\nThis was just the first problem, another one is that your methods should work like onDateChanged/onRankingChanged\nI mean they should use setData() otherwise you just pass an answer to the first question what won't work in case of having multiple questions on the same screen.\nThe difference between your approach and the one we need to have is that as I said you add an answer to the first question but you should do the same we do in CustomDatePickerDialog where we set formController.setIndexWaitingForData() and then using if you use setData the method is able to find the widget that is waiting for answer.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462081039", "createdAt": "2020-07-29T07:00:52Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU5MjcxMw==", "bodyText": "Oh now I get it. Sorry for misunderstanding", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462592713", "createdAt": "2020-07-29T21:13:30Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MTE3OQ==", "bodyText": "Great this looks good now.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462941179", "createdAt": "2020-07-30T11:49:53Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -700,6 +708,44 @@ private void nonblockingCreateSavePointData() {\n         }\n     }\n \n+    @Override\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDgyMA=="}, "originalCommit": {"oid": "54c371ebd725b1682d770a801358b122a9b30384"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDg3ODc5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/widget_answer.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzowOToyNVrOG4rbVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMToxMjoyNFrOG5en7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4NDk1MQ==", "bodyText": "Instead of setting android:layout_marginHorizontal=\"@dimen/margin_standard\" here and below it would be better to set hroizontalPadding just once in the parent LinearLayout.\nI also think that the parent LinearLayout should have some verticalPadding margin_small or margin_extra_small because otherwise those widgets might be too close to each other if you use field-list.\nHave you tested such a scenario? If so please attach a screenshot.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462084951", "createdAt": "2020-07-29T07:09:25Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/widget_answer.xml", "diffHunk": "@@ -5,25 +5,21 @@\n     android:layout_height=\"wrap_content\">\n \n     <org.odk.collect.android.views.MultiClickSafeButton\n-        android:id=\"@+id/url_button\"\n+        android:id=\"@+id/widget_button\"\n         style=\"@style/Widget.Collect.Button.Custom\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:padding=\"@dimen/margin_small\"\n-        android:text=\"@string/open_url\"\n-        android:layout_marginStart=\"@dimen/margin_standard\"\n-        android:layout_marginEnd=\"@dimen/margin_standard\"\n-        android:layout_marginTop=\"@dimen/margin_extra_small\">\n+        android:layout_marginHorizontal=\"@dimen/margin_standard\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6671975c17deaa22def655bb5ba5e4c42de9a3fd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYwMzE5MA==", "bodyText": "Currently, I'm using widget_answer.xml for URL widget and Date and Time widgets. You were correct, there was some spacing issue in case of multiple widgets on the same screen. I added vertical padding as margin_small.\n\n\n\nOn master\nOn Rework Date Widget branch\n\n\n\n\n\n\n\n\n\nIs it fine?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462603190", "createdAt": "2020-07-29T21:34:38Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/res/layout/widget_answer.xml", "diffHunk": "@@ -5,25 +5,21 @@\n     android:layout_height=\"wrap_content\">\n \n     <org.odk.collect.android.views.MultiClickSafeButton\n-        android:id=\"@+id/url_button\"\n+        android:id=\"@+id/widget_button\"\n         style=\"@style/Widget.Collect.Button.Custom\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:padding=\"@dimen/margin_small\"\n-        android:text=\"@string/open_url\"\n-        android:layout_marginStart=\"@dimen/margin_standard\"\n-        android:layout_marginEnd=\"@dimen/margin_standard\"\n-        android:layout_marginTop=\"@dimen/margin_extra_small\">\n+        android:layout_marginHorizontal=\"@dimen/margin_standard\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4NDk1MQ=="}, "originalCommit": {"oid": "6671975c17deaa22def655bb5ba5e4c42de9a3fd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMzc1Ng==", "bodyText": "Yes I think like for now it's ok. I guess once you finish reworking all the widgets we should go through all layouts and make sure they are consistent because we might miss something (you changing the code and me reviewing it).", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462923756", "createdAt": "2020-07-30T11:12:24Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/widget_answer.xml", "diffHunk": "@@ -5,25 +5,21 @@\n     android:layout_height=\"wrap_content\">\n \n     <org.odk.collect.android.views.MultiClickSafeButton\n-        android:id=\"@+id/url_button\"\n+        android:id=\"@+id/widget_button\"\n         style=\"@style/Widget.Collect.Button.Custom\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"wrap_content\"\n-        android:padding=\"@dimen/margin_small\"\n-        android:text=\"@string/open_url\"\n-        android:layout_marginStart=\"@dimen/margin_standard\"\n-        android:layout_marginEnd=\"@dimen/margin_standard\"\n-        android:layout_marginTop=\"@dimen/margin_extra_small\">\n+        android:layout_marginHorizontal=\"@dimen/margin_standard\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4NDk1MQ=="}, "originalCommit": {"oid": "6671975c17deaa22def655bb5ba5e4c42de9a3fd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDMzMDI0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo0MjoxOFrOG5fexw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTozNDozM1rOG50o8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ==", "bodyText": "This method name also should be changed like you did with setData() in this case it might be setWidgetData() without binary word because as i said before it is no longer used only by binary widgets.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462937799", "createdAt": "2020-07-30T11:42:18Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2643,11 +2646,20 @@ public void onNumberPickerValueSelected(int widgetId, int value) {\n     }\n \n     @Override\n-    public void onDateChanged(LocalDateTime date) {\n-        ODKView odkView = getCurrentViewIfODKView();\n-        if (odkView != null) {\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (getCurrentViewIfODKView() != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(date);\n+            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5OTI3MA==", "bodyText": "Also the BinaryDataReceiver class has wrong name again it's not just for binary widgets.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462999270", "createdAt": "2020-07-30T13:33:59Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2643,11 +2646,20 @@ public void onNumberPickerValueSelected(int widgetId, int value) {\n     }\n \n     @Override\n-    public void onDateChanged(LocalDateTime date) {\n-        ODKView odkView = getCurrentViewIfODKView();\n-        if (odkView != null) {\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (getCurrentViewIfODKView() != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(date);\n+            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MTY0Ng==", "bodyText": "I renamed it to WidgetDataReceiver. Is it fine?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463271646", "createdAt": "2020-07-30T21:07:06Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2643,11 +2646,20 @@ public void onNumberPickerValueSelected(int widgetId, int value) {\n     }\n \n     @Override\n-    public void onDateChanged(LocalDateTime date) {\n-        ODKView odkView = getCurrentViewIfODKView();\n-        if (odkView != null) {\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (getCurrentViewIfODKView() != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(date);\n+            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NDQ2NA==", "bodyText": "Yes seems fine.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463284464", "createdAt": "2020-07-30T21:34:33Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2643,11 +2646,20 @@ public void onNumberPickerValueSelected(int widgetId, int value) {\n     }\n \n     @Override\n-    public void onDateChanged(LocalDateTime date) {\n-        ODKView odkView = getCurrentViewIfODKView();\n-        if (odkView != null) {\n+    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n+        if (getCurrentViewIfODKView() != null) {\n             QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n-            setBinaryWidgetData(date);\n+            setBinaryWidgetData(DateTimeUtils.getLocalDateTime(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNzc5OQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM4NDM1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowMDozOFrOG5f_cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1OTo0OVrOG8YiHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA==", "bodyText": "What is the reason to have DateTimeWidgetUtils and DateTimeUtils as separate classes? Shouldn't it be just one class?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462946160", "createdAt": "2020-07-30T12:00:38Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MzI2MQ==", "bodyText": "I just thought that the methods in DateTimeUtils are very much specific to getting a particular format of Date and Time Data. Although the names of both classes are very similar.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463273261", "createdAt": "2020-07-30T21:10:40Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU3MTcwNA==", "bodyText": "Should we have a single class here, just DateTimeUtils?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463571704", "createdAt": "2020-07-31T12:06:31Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0Njc1OQ==", "bodyText": "I think we should review those classes because even if it make sense to keep them both at least we need to move some methods. For example in DateTimeWidgetUtils you have getCurrentDate()/getTimeData() where it would be better to have it in DateTimeUtils on the other hand in DateTimeUtils you have getDateTimeLabel() where it should probably be in DateTimeWidgetUtils because it's a label for widgets.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463846759", "createdAt": "2020-07-31T21:13:25Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1MDAxMQ==", "bodyText": "Okay sure! I will review them.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463850011", "createdAt": "2020-07-31T21:18:06Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4MDQ2OQ==", "bodyText": "Is this cleaning done? Because I doubt.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465080469", "createdAt": "2020-08-04T14:12:30Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NDM4Nw==", "bodyText": "Yes done in e2765b1", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465244387", "createdAt": "2020-08-04T18:24:21Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMzE0MQ==", "bodyText": "What about: getDatePickerDetails/getDateTimeLabel/getGregorianDateTimeLabel shouldn't it also be a part of DateTimeWidgetUtils?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465633141", "createdAt": "2020-08-05T10:38:09Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2OTY5Mw==", "bodyText": "Right @grzesiek2010, they should be a part of WidgetUtils", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465969693", "createdAt": "2020-08-05T19:59:49Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.javarosa.core.model.data.TimeData;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+\n+public class DateTimeWidgetUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NjE2MA=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDQxNjAzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxMTowOFrOG5gSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzoxMjoxNVrOG_gofw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ==", "bodyText": "You still didn't implement view model as I said before (too keep data) so your picker will reset values for example if your rotate your device. This is something we should test automatically.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462951085", "createdAt": "2020-07-30T12:11:08Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA3NzMwMw==", "bodyText": "You implemented the viewmodel but you don't use values stored there so the result is the same once you rotate your device everything is reset. As above would be good to have a test for it.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465077303", "createdAt": "2020-08-04T14:08:13Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0Mjc4NA==", "bodyText": "I tested it on my device. Values didn't change on device rotation. When displaying the DatePickerDialog, I use date value passed by the widget to set the dialog to that value. Am I missing something?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465242784", "createdAt": "2020-08-04T18:21:39Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY0MDM1Mg==", "bodyText": "I think it happens only in custom date pickers like coptic/ethiopian etc. Did you test them?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465640352", "createdAt": "2020-08-05T10:53:06Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY3MjUwNw==", "bodyText": "Oh right I need to take care of the dates displayed in the textview of the dialog.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465672507", "createdAt": "2020-08-05T11:55:12Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MjEwMA==", "bodyText": "Should I write the test for CusotmDatePickerDialog as I ddin't use the viewmodel to set the values shown on the dialog on screen orientation change.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465972100", "createdAt": "2020-08-05T20:04:08Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4Mjk4NQ==", "bodyText": "It would be good to have a test that confirms everything is fine after recreation.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466382985", "createdAt": "2020-08-06T12:41:38Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIzMzY5Mw==", "bodyText": "That would mean writing tests for all CustomDatePickerDialogs, should I write them as part of this PR itself?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469233693", "createdAt": "2020-08-12T12:49:06Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIzNzQ2NA==", "bodyText": "I wanted to say please file a separate issue but it would be great to have at least those that check if values don change on recreation so it shouldn't be a big deal.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469237464", "createdAt": "2020-08-12T12:55:26Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0ODEyNw==", "bodyText": "Oh sure! I will add tests for that as part of this PR, and all the other tests as a different PR, after filing a separate issue.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469248127", "createdAt": "2020-08-12T13:12:15Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -16,97 +16,55 @@\n \n package org.odk.collect.android.fragments.dialogs;\n \n+import android.app.DatePickerDialog;\n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n import android.view.View;\n+import android.widget.DatePicker;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA4NQ=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDQ1NjI1OnYy", "diffSide": "LEFT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoyMzoyMlrOG5grUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyODo1NlrOG7jDxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw==", "bodyText": "Removing this you have broken #3948 so it's a regression. In order to fix this you need to do the same now in FormEnryActivity where onTimeSet is used. Unfortunately we don't have any test for it. Could you write one? Or at leas please file an issue to do that in the future.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462957393", "createdAt": "2020-07-30T12:23:22Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> {\n+                DateTimeWidgetUtils.setWidgetWaitingForData(prompt.getIndex());\n+                DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), selectedTime);\n+            });\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+        }\n+\n+        return binding.getRoot();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n+    @Override\n+    public void clearAnswer() {\n+        selectedTime = DateTime.now();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n+        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? null\n+                : DateTimeWidgetUtils.getTimeData(selectedTime);\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n-\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-        } else {\n-            Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n-            DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n-\n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n-\n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n-    }\n-\n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n-    }\n-\n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n-    }\n-\n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NDgwMA==", "bodyText": "Oh sorry @grzesiek2010. I will implement the viewModel and then I'll write tests for the same.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r463274800", "createdAt": "2020-07-30T21:13:49Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> {\n+                DateTimeWidgetUtils.setWidgetWaitingForData(prompt.getIndex());\n+                DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), selectedTime);\n+            });\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+        }\n+\n+        return binding.getRoot();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n+    @Override\n+    public void clearAnswer() {\n+        selectedTime = DateTime.now();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n+        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? null\n+                : DateTimeWidgetUtils.getTimeData(selectedTime);\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n-\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-        } else {\n-            Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n-            DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n-\n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n-\n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n-    }\n-\n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n-    }\n-\n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n-    }\n-\n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA2NDk0MQ==", "bodyText": "Still not fixed. Have you tested it?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465064941", "createdAt": "2020-08-04T13:51:20Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> {\n+                DateTimeWidgetUtils.setWidgetWaitingForData(prompt.getIndex());\n+                DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), selectedTime);\n+            });\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+        }\n+\n+        return binding.getRoot();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n+    @Override\n+    public void clearAnswer() {\n+        selectedTime = DateTime.now();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n+        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? null\n+                : DateTimeWidgetUtils.getTimeData(selectedTime);\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n-\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-        } else {\n-            Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n-            DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n-\n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n-\n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n-    }\n-\n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n-    }\n-\n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n-    }\n-\n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5MzU3NA==", "bodyText": "Sorry for this. I fixed this in 731dc65", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465093574", "createdAt": "2020-08-04T14:28:56Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);\n-        createTimeButton();\n-        timeTextView = createAnswerTextView(getContext(), getAnswerFontSize());\n-        createTimePickerDialog();\n-        addViews();\n     }\n \n     @Override\n-    public void clearAnswer() {\n-        clearAnswerWithoutValueChangeEvent();\n-        widgetValueChanged();\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = WidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.widgetButton.setVisibility(GONE);\n+        } else {\n+            binding.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.widgetButton.setText(getContext().getString(R.string.select_time));\n+            binding.widgetButton.setOnClickListener(v -> {\n+                DateTimeWidgetUtils.setWidgetWaitingForData(prompt.getIndex());\n+                DateTimeWidgetUtils.showTimePickerDialog((FormEntryActivity) getContext(), selectedTime);\n+            });\n+        }\n+        binding.widgetAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+        if (prompt.getAnswerValue() == null) {\n+            selectedTime = DateTime.now();\n+            binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        } else {\n+            selectedTime = new DateTime(getFormEntryPrompt().getAnswerValue().getValue());\n+            binding.widgetAnswerText.setText(DateTimeWidgetUtils.getTimeData(selectedTime).getDisplayText());\n+        }\n+\n+        return binding.getRoot();\n     }\n \n-    void clearAnswerWithoutValueChangeEvent() {\n-        nullAnswer = true;\n-        timeTextView.setText(R.string.no_time_selected);\n+    @Override\n+    public void clearAnswer() {\n+        selectedTime = DateTime.now();\n+        binding.widgetAnswerText.setText(R.string.no_time_selected);\n+        widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        // use picker time, convert to today's date, store as utc\n-        DateTime localDateTime = new DateTime()\n-                .withTime(hourOfDay, minuteOfHour, 0, 0);\n-\n-        return !nullAnswer\n-                ? new TimeData(localDateTime.toDate())\n-                : null;\n+        return binding.widgetAnswerText.getText().equals(getContext().getString(R.string.no_time_selected))\n+                ? null\n+                : DateTimeWidgetUtils.getTimeData(selectedTime);\n     }\n \n     @Override\n     public void setOnLongClickListener(OnLongClickListener l) {\n-        timeButton.setOnLongClickListener(l);\n-        timeTextView.setOnLongClickListener(l);\n+        binding.widgetButton.setOnLongClickListener(l);\n+        binding.widgetAnswerText.setOnLongClickListener(l);\n     }\n \n     @Override\n     public void cancelLongPress() {\n         super.cancelLongPress();\n-        timeButton.cancelLongPress();\n-        timeTextView.cancelLongPress();\n-    }\n-\n-    private void createTimeButton() {\n-        timeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.select_time), getAnswerFontSize(), this);\n-    }\n-\n-    private void addViews() {\n-        LinearLayout linearLayout = new LinearLayout(getContext());\n-        linearLayout.setOrientation(LinearLayout.VERTICAL);\n-        linearLayout.addView(timeButton);\n-        linearLayout.addView(timeTextView);\n-        addAnswerView(linearLayout, WidgetViewUtils.getStandardMargin(getContext()));\n-    }\n-\n-    public void setTimeLabel() {\n-        nullAnswer = false;\n-        timeTextView.setText(getAnswer().getDisplayText());\n-    }\n-\n-    private void createTimePickerDialog() {\n-        timePickerDialog = new CustomTimePickerDialog(getContext(), this, 0, 0);\n-        timePickerDialog.setCanceledOnTouchOutside(false);\n-\n-        if (getFormEntryPrompt().getAnswerValue() == null) {\n-            clearAnswer();\n-        } else {\n-            Date date = (Date) getFormEntryPrompt().getAnswerValue().getValue();\n-\n-            DateTime dateTime = new DateTime(date);\n-            updateTime(dateTime, true);\n-        }\n-    }\n-\n-    public int getHour() {\n-        return hourOfDay;\n-    }\n-\n-    public int getMinute() {\n-        return minuteOfHour;\n-    }\n-\n-    public boolean isNullAnswer() {\n-        return nullAnswer;\n-    }\n-\n-    public void setTimeToCurrent() {\n-        updateTime(DateTime.now(), false);\n-    }\n-\n-    public void updateTime(DateTime dateTime) {\n-        updateTime(dateTime, true);\n-    }\n-\n-    public void updateTime(DateTime dateTime, boolean shouldUpdateLabel) {\n-        updateTime(dateTime.getHourOfDay(), dateTime.getMinuteOfHour(), shouldUpdateLabel);\n-    }\n-\n-    public void updateTime(int hourOfDay, int minuteOfHour, boolean shouldUpdateLabel) {\n-        this.hourOfDay = hourOfDay;\n-        this.minuteOfHour = minuteOfHour;\n-\n-        timePickerDialog.updateTime(hourOfDay, minuteOfHour);\n-\n-        if (shouldUpdateLabel) {\n-            setTimeLabel();\n-        }\n+        binding.widgetButton.cancelLongPress();\n+        binding.widgetAnswerText.cancelLongPress();\n     }\n \n     @Override\n-    public void onTimeSet(TimePicker timePicker, int hourOfDay, int minute) {\n-        timePicker.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NzM5Mw=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDQ5Nzk0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjozNToyNlrOG5hEXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNToxMToyOFrOG7k9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg==", "bodyText": "This isPartOfDateTimeWidget doesn't make sense anymore it is called only from the same class with false value (look above). It was implemented to fix #3761 but now as you have a separate DateTimeWidget which doesn't contain two widgets inside as before it is probably no longer an issue. So you can remove the code implemented in #3770", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462963806", "createdAt": "2020-07-30T12:35:26Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA3MDQxOQ==", "bodyText": "You didn't remove the whole code implemented in https://github.com/getodk/collect/pull/3770/files for example registerForContextMenu parameters still exists in QuestionWidget which is always true.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465070419", "createdAt": "2020-08-04T13:58:49Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEyNDc5OA==", "bodyText": "I removed it from the QuestionWidget in b95a8d5", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465124798", "createdAt": "2020-08-04T15:11:28Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/TimeWidget.java", "diffHunk": "@@ -15,295 +15,94 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n-import android.app.TimePickerDialog;\n+import android.app.Activity;\n import android.content.Context;\n-import android.content.res.TypedArray;\n-import android.graphics.Color;\n-import android.graphics.drawable.ColorDrawable;\n-import android.os.Build;\n-import android.text.format.DateFormat;\n-import android.util.AttributeSet;\n-import android.view.Window;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n-import android.widget.TimePicker;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.IAnswerData;\n-import org.javarosa.core.model.data.TimeData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.DateTime;\n import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.WidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.Field;\n-import java.util.Date;\n-\n-import timber.log.Timber;\n-\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createAnswerTextView;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-\n-/**\n- * Displays a TimePicker widget.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- */\n @SuppressLint(\"ViewConstructor\")\n-public class TimeWidget extends QuestionWidget implements ButtonClickListener, TimePickerDialog.OnTimeSetListener {\n-    private TimePickerDialog timePickerDialog;\n-\n-    Button timeButton;\n-    final TextView timeTextView;\n+public class TimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    WidgetAnswerBinding binding;\n \n-    private int hourOfDay;\n-    private int minuteOfHour;\n-\n-    private boolean nullAnswer;\n+    private DateTime selectedTime;\n \n     public TimeWidget(Context context, final QuestionDetails prompt) {\n         this(context, prompt, false);\n     }\n \n     public TimeWidget(Context context, QuestionDetails prompt, boolean isPartOfDateTimeWidget) {\n         super(context, prompt, !isPartOfDateTimeWidget);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzgwNg=="}, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDY4MjgwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzoyNDowN1rOG5i1ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzoyNDowN1rOG5i1ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5Mjc0MA==", "bodyText": "Can't we use LocalDateTime here only instead of LocalDateTime and DateTime. DateTime seems redundant since you can save both date and time in LocalDateTime.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r462992740", "createdAt": "2020-07-30T13:24:07Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/DateTimeWidget.java", "diffHunk": "@@ -15,139 +15,163 @@\n package org.odk.collect.android.widgets;\n \n import android.annotation.SuppressLint;\n+import android.app.Activity;\n import android.content.Context;\n-import android.widget.LinearLayout;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import org.javarosa.core.model.data.DateTimeData;\n import org.javarosa.core.model.data.IAnswerData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.joda.time.DateTime;\n import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.databinding.DateTimeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.listeners.WidgetValueChangedListener;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n \n /**\n  * Displays a DatePicker widget. DateWidget handles leap years and does not allow dates that do not\n  * exist.\n- *\n- * @author Carl Hartung (carlhartung@gmail.com)\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-\n @SuppressLint(\"ViewConstructor\")\n-public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver, WidgetValueChangedListener, ButtonClickListener {\n+public class DateTimeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    DateTimeWidgetAnswerBinding binding;\n \n-    DateWidget dateWidget;\n-    TimeWidget timeWidget;\n+    private LocalDateTime selectedDate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed632d502fdf66ea73e169e7c715d49b67d871f1"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODIyNjMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxNjowNFrOG8DTpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyMzowNlrOG8q98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg==", "bodyText": "Do we need this? I know it was needed in TimePickerDialog but here?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465621926", "createdAt": "2020-08-05T10:16:04Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n+        view.clearFocus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2OTkxOQ==", "bodyText": "Oh okay I'll check once", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465669919", "createdAt": "2020-08-05T11:49:50Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n+        view.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MDg1MA==", "bodyText": "@grzesiek2010 I found that view.clearFocus() does not make any difference on the DatePicker or TimePicker dialogs. I too remember it was required for the Time Picker dialog to hide the extra window behind the dialog, but even without it, I don't see that window now.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465970850", "createdAt": "2020-08-05T20:01:53Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n+        view.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3MTcyOQ==", "bodyText": "In TimePicker it is required now as you removed it I can reproduce #3948 again.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466271729", "createdAt": "2020-08-06T09:23:06Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    private final MutableLiveData<LocalDateTime> selectedDate = new MutableLiveData<>();\n+    private final MutableLiveData<DateTime> selectedTime = new MutableLiveData<>();\n+\n+    private final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {\n+        view.clearFocus();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMTkyNg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODI4NDM5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDozMzo1N1rOG8D3TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMDowMjozNlrOG-xADQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg==", "bodyText": "This class seems redundant you can use DateTimeWidgetUtils everywhere you need. Or maybe I missed something important?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465631052", "createdAt": "2020-08-05T10:33:57Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY3MTAzOA==", "bodyText": "Oh actually I used to that I can verify the method calls to the DateTimeWidgetUtils, and then right separate tests to verify that the behaviour of the methods in DateTimeWidgetUtils. I can pass a mock of DateTimeWidgetListener in the Date time widgets constructor, and then verify method calls.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r465671038", "createdAt": "2020-08-05T11:52:11Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5ODM1Ng==", "bodyText": "But you don't need an interface to achieve that you can use mock with verify on DateTimeWidgetUtils in the same way. That's why I said it seems like a redundant abstraction.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466298356", "createdAt": "2020-08-06T09:50:43Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMxNzczOA==", "bodyText": "Yes right I can mock DateTimeWidgetUtils class but I was not able to use verify for any static method.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466317738", "createdAt": "2020-08-06T10:28:00Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3ODUxNg==", "bodyText": "But you don't verify static methods in your tests so I don't understand what the problem was. From what I see all tests will work without that interface too.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466378516", "createdAt": "2020-08-06T12:33:18Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMTM1Ng==", "bodyText": "The interface will act as a wrapper for the static methods, so I can verify any calls to them in the widget test, and I verified the behaviour of static method calls by verifying again the interface methods.\nIn DateTimeWidgetUtilsTest, I used dateTimeWidgetUtils.displayTimePickerDialog to check if the Time Picker dialog is displayed whenever this method is called. This verifies the behaviour of static method showTimePickerDialog.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466401356", "createdAt": "2020-08-06T13:12:46Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNzY3Ng==", "bodyText": "Oh I understand, without that interface, I will have to check whether some dialog is displayed in the widget test, and I can verify whether correct arguments are passed, by checking the bundle of the displayed dialog fragment, then I can test separately whether the correct dialog class is displayed in the DateTimeWidgetUtilsTest. I'll remove the abstrcation.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466407676", "createdAt": "2020-08-06T13:22:37Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwMzQ2Nw==", "bodyText": "@grzesiek2010 I had some doubt regarding removing this abstraction completely. Currently, I'm verifying dateTimeWidgetUtils.displayDatePickerDialog() is called with valid arguments. I don't need to verify here that correct datePickerDetails argument is passed to the function, as that is extracted in the DateTimeWidgetUtils class. So I can write all the tests verifying that different dialogs are displayed for datePickerType only once for the tests for DateTimeWidgetUtils class. I need not verify this for all the widgets separately.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467903467", "createdAt": "2020-08-10T13:29:20Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1NjEyNQ==", "bodyText": "Which test are you talking about? I did what I expected by myself to give it a try and all test you have added seem to work well b6e2850", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468456125", "createdAt": "2020-08-11T09:41:57Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2NzcyNQ==", "bodyText": "Sorry for not understanding earlier. I understand now, I can simply remove the static methods as I cannot verify them, nonetheless, I access them using public wrapper functions, so I can simply verify them for the test.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468467725", "createdAt": "2020-08-11T10:02:36Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/DateTimeWidgetListener.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+import android.content.Context;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+\n+public interface DateTimeWidgetListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzMTA1Mg=="}, "originalCommit": {"oid": "075c2c1c8b7a495dd9594d980af168f1b2720d45"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjQxODQxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTozMTozOFrOG8rmwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTozMTozOFrOG8rmwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4MjE3OA==", "bodyText": "This works but it's not a proper solution. You already have ViewModel and it is a component you should use to store data and make sure it persists. I mean passing data from a widget to dialog using bundle is ok but then you should unpack it and store in your viewmodel.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466282178", "createdAt": "2020-08-06T09:31:38Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -82,6 +82,12 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {\n                 .create();\n     }\n \n+    @Override\n+    public void onDestroyView() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac04f4c93371c0e79f5990d00f637fafa9970bd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzAwMTk0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjoyNToxOVrOG8xNnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0NTozOVrOG-2HAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw==", "bodyText": "I think it should be viewmodel's responsibility not to return null, so this check should be moved there and here you should just call viewModel.getDate();", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466374047", "createdAt": "2020-08-06T12:25:19Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMDA3NA==", "bodyText": "Should I pass all the other arguments to the ViewModel too? Now That I have a ViewModel, it seems like I should use just one way of communicating with the fragment.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r466410074", "createdAt": "2020-08-06T13:26:02Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyNzI3MQ==", "bodyText": "You mean those you access via getArguments().getSerializable if so yeah I think it should be stored in viewmodel.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467627271", "createdAt": "2020-08-09T20:49:02Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNTgwOA==", "bodyText": "I tried to get all those values using the ViewModel, but now I have two instances of DateTimeViewModel class in the dialogs. I see that you have an idea of instantiating all the widgets inside fragments, that is really cool, and it will solve this problem. Is it fine to have two instances of the ViewModel for now?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r467905808", "createdAt": "2020-08-10T13:32:52Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1ODA4MA==", "bodyText": "Why do you need two viewmodels? am I missing something?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468458080", "createdAt": "2020-08-11T09:45:22Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MjgzMg==", "bodyText": "So for passing the values using viewmodel, I would be needing the viewmodel to be created using the FormEntryActivity right?, and that is against your idea of creating the viewModel using dialog context. Sorry If I'm misinterpreting things", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468542832", "createdAt": "2020-08-11T12:30:23Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MDIwMw==", "bodyText": "I think you want to pass those arguments to CustomDatePickerDialog using viewmodel? If so that's not what I wanted. I just said that you can store them in the existing view model (unique for every CustomDatePickerDialog) after receiving them via getArguments().getSerializable  so it's ok to pass them to dialog like now but then would be good to store and access via viewmodel. Is that what made confusion?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468550203", "createdAt": "2020-08-11T12:43:34Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MTQyNw==", "bodyText": "Oh alright! I understand it now. Thanks!", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468551427", "createdAt": "2020-08-11T12:45:39Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -242,7 +189,11 @@ public int getYear() {\n     }\n \n     public LocalDateTime getDate() {\n-        return date;\n+        if (viewModel.getDate() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NDA0Nw=="}, "originalCommit": {"oid": "3a7c45bfeac0377b61173c808dcedb88bdd7bc92"}, "originalPosition": 218}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTk0MDYwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzo1MjoxNFrOG_NDsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMjowNzoxMlrOG_eNxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyNzQwOQ==", "bodyText": "This is added but never used.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468927409", "createdAt": "2020-08-11T23:52:14Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.joda.time.chrono.CopticChronology;\n+import org.joda.time.chrono.EthiopicChronology;\n+import org.joda.time.chrono.IslamicChronology;\n+import org.joda.time.chrono.PersianChronologyKhayyamBorkowski;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.MyanmarDateUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n+\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.Locale;\n+\n+import bikramsambat.BikramSambatDate;\n+import bikramsambat.BsCalendar;\n+import bikramsambat.BsException;\n+import bikramsambat.BsGregorianDate;\n+import mmcalendar.MyanmarDate;\n+import mmcalendar.MyanmarDateConverter;\n+import timber.log.Timber;\n+\n+public class DateTimeWidgetUtils {\n+    public static final String DATE = \"date\";\n+    public static final String TIME = \"time\";\n+    public static final String DIALOG_THEME = \"dialog_theme\";\n+    public static final String DATE_PICKER_DETAILS = \"date_picker_details\";\n+    public static final String FORM_INDEX = \"form_index\";\n+\n+    public static void setWidgetWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    public static DatePickerDetails getDatePickerDetails(String appearance) {\n+        DatePickerDetails.DatePickerType datePickerType = DatePickerDetails.DatePickerType.GREGORIAN;\n+        DatePickerDetails.DatePickerMode datePickerMode = DatePickerDetails.DatePickerMode.CALENDAR;\n+        if (appearance != null) {\n+            appearance = appearance.toLowerCase(Locale.US);\n+            if (appearance.contains(WidgetAppearanceUtils.ETHIOPIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ETHIOPIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.COPTIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.COPTIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.ISLAMIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ISLAMIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.BIKRAM_SAMBAT)) {\n+                datePickerType = DatePickerDetails.DatePickerType.BIKRAM_SAMBAT;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.MYANMAR)) {\n+                datePickerType = DatePickerDetails.DatePickerType.MYANMAR;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.PERSIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.PERSIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.NO_CALENDAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            }\n+\n+            if (appearance.contains(WidgetAppearanceUtils.MONTH_YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.MONTH_YEAR;\n+            } else if (appearance.contains(WidgetAppearanceUtils.YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.YEAR;\n+            }\n+        }\n+\n+        return new DatePickerDetails(datePickerType, datePickerMode);\n+    }\n+\n+    public static String getDateTimeLabel(Date date, DatePickerDetails datePickerDetails, boolean containsTime, Context context) {\n+        String gregorianDateText = getGregorianDateTimeLabel(date, datePickerDetails, containsTime, Locale.getDefault());\n+\n+        DateTime customDate;\n+        String[] monthArray;\n+\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case GREGORIAN:\n+                return gregorianDateText;\n+            case ETHIOPIAN:\n+                customDate = new DateTime(date).withChronology(EthiopicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.ethiopian_months);\n+                break;\n+            case COPTIC:\n+                customDate = new DateTime(date).withChronology(CopticChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.coptic_months);\n+                break;\n+            case ISLAMIC:\n+                customDate = new DateTime(date).withChronology(IslamicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.islamic_months);\n+                break;\n+            case BIKRAM_SAMBAT:\n+                customDate = new DateTime(date);\n+                monthArray = BsCalendar.MONTH_NAMES.toArray(new String[BsCalendar.MONTH_NAMES.size()]);\n+                break;\n+            case MYANMAR:\n+                customDate = new DateTime(date);\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+                monthArray = MyanmarDateUtils.getMyanmarMonthsArray(myanmarDate.getYearInt());\n+                break;\n+            case PERSIAN:\n+                customDate = new DateTime(date).withChronology(PersianChronologyKhayyamBorkowski.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.persian_months);\n+                break;\n+            default:\n+                Timber.w(\"Not supported date type.\");\n+                return null;\n+        }\n+\n+        String customDateText = \"\";\n+\n+        SimpleDateFormat df = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case BIKRAM_SAMBAT:\n+                BikramSambatDate bikramSambatDate;\n+                try {\n+                    Calendar calendar = Calendar.getInstance();\n+                    calendar.setTime(date);\n+                    bikramSambatDate = BsCalendar.getInstance().toBik(new BsGregorianDate(\n+                            calendar.get(Calendar.YEAR),\n+                            calendar.get(Calendar.MONTH) + 1,\n+                            calendar.get(Calendar.DAY_OF_MONTH)));\n+                    String day = datePickerDetails.isSpinnerMode() ? bikramSambatDate.day + \" \" : \"\";\n+                    String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[bikramSambatDate.month - 1] + \" \" : \"\";\n+\n+                    if (containsTime) {\n+                        customDateText = day + month + bikramSambatDate.year + \", \" + df.format(customDate.toDate());\n+                    } else {\n+                        customDateText = day + month + bikramSambatDate.year;\n+                    }\n+                } catch (BsException e) {\n+                    Timber.e(e);\n+                }\n+                break;\n+            case MYANMAR: {\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+\n+                String day = datePickerDetails.isSpinnerMode() ? myanmarDate.getMonthDay() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[MyanmarDateUtils.getMonthId(myanmarDate)] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + myanmarDate.getYearInt() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + myanmarDate.getYearInt();\n+                }\n+                break;\n+            }\n+            default:\n+                String day = datePickerDetails.isSpinnerMode() ? customDate.getDayOfMonth() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[customDate.getMonthOfYear() - 1] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + customDate.getYear() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + customDate.getYear();\n+                }\n+        }\n+\n+        return String.format(context.getString(R.string.custom_date), customDateText, gregorianDateText);\n+    }\n+\n+    public void showTimePickerDialog(Context context, LocalDateTime dateTime) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, themeUtils.getHoloDialogTheme());\n+        bundle.putSerializable(TIME, dateTime);\n+\n+        DialogUtils.showIfNotShowing(CustomTimePickerDialog.class, bundle, ((AppCompatActivity) context).getSupportFragmentManager());\n+    }\n+\n+    public void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 211}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwODUxOA==", "bodyText": "Sorry I missed", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469208518", "createdAt": "2020-08-12T12:07:12Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/DateTimeWidgetUtils.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import android.content.Context;\n+import android.os.Build;\n+import android.os.Bundle;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import org.javarosa.core.model.FormIndex;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.joda.time.chrono.CopticChronology;\n+import org.joda.time.chrono.EthiopicChronology;\n+import org.joda.time.chrono.IslamicChronology;\n+import org.joda.time.chrono.PersianChronologyKhayyamBorkowski;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.fragments.dialogs.BikramSambatDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CopticDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.CustomTimePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.FixedDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.IslamicDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.MyanmarDatePickerDialog;\n+import org.odk.collect.android.fragments.dialogs.PersianDatePickerDialog;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DialogUtils;\n+import org.odk.collect.android.utilities.MyanmarDateUtils;\n+import org.odk.collect.android.utilities.ThemeUtils;\n+import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n+\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.Locale;\n+\n+import bikramsambat.BikramSambatDate;\n+import bikramsambat.BsCalendar;\n+import bikramsambat.BsException;\n+import bikramsambat.BsGregorianDate;\n+import mmcalendar.MyanmarDate;\n+import mmcalendar.MyanmarDateConverter;\n+import timber.log.Timber;\n+\n+public class DateTimeWidgetUtils {\n+    public static final String DATE = \"date\";\n+    public static final String TIME = \"time\";\n+    public static final String DIALOG_THEME = \"dialog_theme\";\n+    public static final String DATE_PICKER_DETAILS = \"date_picker_details\";\n+    public static final String FORM_INDEX = \"form_index\";\n+\n+    public static void setWidgetWaitingForData(FormIndex formIndex) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            formController.setIndexWaitingForData(formIndex);\n+        }\n+    }\n+\n+    public static DatePickerDetails getDatePickerDetails(String appearance) {\n+        DatePickerDetails.DatePickerType datePickerType = DatePickerDetails.DatePickerType.GREGORIAN;\n+        DatePickerDetails.DatePickerMode datePickerMode = DatePickerDetails.DatePickerMode.CALENDAR;\n+        if (appearance != null) {\n+            appearance = appearance.toLowerCase(Locale.US);\n+            if (appearance.contains(WidgetAppearanceUtils.ETHIOPIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ETHIOPIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.COPTIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.COPTIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.ISLAMIC)) {\n+                datePickerType = DatePickerDetails.DatePickerType.ISLAMIC;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.BIKRAM_SAMBAT)) {\n+                datePickerType = DatePickerDetails.DatePickerType.BIKRAM_SAMBAT;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.MYANMAR)) {\n+                datePickerType = DatePickerDetails.DatePickerType.MYANMAR;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.PERSIAN)) {\n+                datePickerType = DatePickerDetails.DatePickerType.PERSIAN;\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            } else if (appearance.contains(WidgetAppearanceUtils.NO_CALENDAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.SPINNERS;\n+            }\n+\n+            if (appearance.contains(WidgetAppearanceUtils.MONTH_YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.MONTH_YEAR;\n+            } else if (appearance.contains(WidgetAppearanceUtils.YEAR)) {\n+                datePickerMode = DatePickerDetails.DatePickerMode.YEAR;\n+            }\n+        }\n+\n+        return new DatePickerDetails(datePickerType, datePickerMode);\n+    }\n+\n+    public static String getDateTimeLabel(Date date, DatePickerDetails datePickerDetails, boolean containsTime, Context context) {\n+        String gregorianDateText = getGregorianDateTimeLabel(date, datePickerDetails, containsTime, Locale.getDefault());\n+\n+        DateTime customDate;\n+        String[] monthArray;\n+\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case GREGORIAN:\n+                return gregorianDateText;\n+            case ETHIOPIAN:\n+                customDate = new DateTime(date).withChronology(EthiopicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.ethiopian_months);\n+                break;\n+            case COPTIC:\n+                customDate = new DateTime(date).withChronology(CopticChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.coptic_months);\n+                break;\n+            case ISLAMIC:\n+                customDate = new DateTime(date).withChronology(IslamicChronology.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.islamic_months);\n+                break;\n+            case BIKRAM_SAMBAT:\n+                customDate = new DateTime(date);\n+                monthArray = BsCalendar.MONTH_NAMES.toArray(new String[BsCalendar.MONTH_NAMES.size()]);\n+                break;\n+            case MYANMAR:\n+                customDate = new DateTime(date);\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+                monthArray = MyanmarDateUtils.getMyanmarMonthsArray(myanmarDate.getYearInt());\n+                break;\n+            case PERSIAN:\n+                customDate = new DateTime(date).withChronology(PersianChronologyKhayyamBorkowski.getInstance());\n+                monthArray = context.getResources().getStringArray(R.array.persian_months);\n+                break;\n+            default:\n+                Timber.w(\"Not supported date type.\");\n+                return null;\n+        }\n+\n+        String customDateText = \"\";\n+\n+        SimpleDateFormat df = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n+        switch (datePickerDetails.getDatePickerType()) {\n+            case BIKRAM_SAMBAT:\n+                BikramSambatDate bikramSambatDate;\n+                try {\n+                    Calendar calendar = Calendar.getInstance();\n+                    calendar.setTime(date);\n+                    bikramSambatDate = BsCalendar.getInstance().toBik(new BsGregorianDate(\n+                            calendar.get(Calendar.YEAR),\n+                            calendar.get(Calendar.MONTH) + 1,\n+                            calendar.get(Calendar.DAY_OF_MONTH)));\n+                    String day = datePickerDetails.isSpinnerMode() ? bikramSambatDate.day + \" \" : \"\";\n+                    String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[bikramSambatDate.month - 1] + \" \" : \"\";\n+\n+                    if (containsTime) {\n+                        customDateText = day + month + bikramSambatDate.year + \", \" + df.format(customDate.toDate());\n+                    } else {\n+                        customDateText = day + month + bikramSambatDate.year;\n+                    }\n+                } catch (BsException e) {\n+                    Timber.e(e);\n+                }\n+                break;\n+            case MYANMAR: {\n+                MyanmarDate myanmarDate = MyanmarDateConverter.convert(customDate.getYear(),\n+                        customDate.getMonthOfYear(), customDate.getDayOfMonth(), customDate.getHourOfDay(),\n+                        customDate.getMinuteOfHour(), customDate.getSecondOfMinute());\n+\n+                String day = datePickerDetails.isSpinnerMode() ? myanmarDate.getMonthDay() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[MyanmarDateUtils.getMonthId(myanmarDate)] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + myanmarDate.getYearInt() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + myanmarDate.getYearInt();\n+                }\n+                break;\n+            }\n+            default:\n+                String day = datePickerDetails.isSpinnerMode() ? customDate.getDayOfMonth() + \" \" : \"\";\n+                String month = datePickerDetails.isSpinnerMode() || datePickerDetails.isMonthYearMode() ? monthArray[customDate.getMonthOfYear() - 1] + \" \" : \"\";\n+\n+                if (containsTime) {\n+                    customDateText = day + month + customDate.getYear() + \", \" + df.format(customDate.toDate());\n+                } else {\n+                    customDateText = day + month + customDate.getYear();\n+                }\n+        }\n+\n+        return String.format(context.getString(R.string.custom_date), customDateText, gregorianDateText);\n+    }\n+\n+    public void showTimePickerDialog(Context context, LocalDateTime dateTime) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, themeUtils.getHoloDialogTheme());\n+        bundle.putSerializable(TIME, dateTime);\n+\n+        DialogUtils.showIfNotShowing(CustomTimePickerDialog.class, bundle, ((AppCompatActivity) context).getSupportFragmentManager());\n+    }\n+\n+    public void showDatePickerDialog(Context context, FormIndex formIndex, DatePickerDetails datePickerDetails,\n+                                            LocalDateTime date) {\n+        ThemeUtils themeUtils = new ThemeUtils(context);\n+\n+        Bundle bundle = new Bundle();\n+        bundle.putInt(DIALOG_THEME, getDatePickerTheme(themeUtils, datePickerDetails));\n+        bundle.putSerializable(DATE, date);\n+        bundle.putSerializable(DATE_PICKER_DETAILS, datePickerDetails);\n+        bundle.putSerializable(FORM_INDEX, formIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyNzQwOQ=="}, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 211}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTk0NDk2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzo1NDo0NlrOG_NGSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMzo1NDo0NlrOG_NGSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkyODA3NQ==", "bodyText": "Should be stored in view model too.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468928075", "createdAt": "2020-08-11T23:54:46Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -18,137 +18,97 @@\n \n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import android.view.View;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {\n-    public static final String DATE_PICKER_DIALOG = \"datePickerDialog\";\n-\n-    private static final String FORM_INDEX = \"formIndex\";\n-    private static final String DATE = \"date\";\n-    private static final String DATE_PICKER_DETAILS = \"datePickerDetails\";\n-\n     private NumberPicker dayPicker;\n     private NumberPicker monthPicker;\n     private NumberPicker yearPicker;\n \n-    private LocalDateTime date;\n-\n     private TextView gregorianDateText;\n \n-    private FormIndex formIndex;\n-\n     private DatePickerDetails datePickerDetails;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTk1OTc5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowMjoxN1rOG_NO6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowMjoxN1rOG_NO6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMDI4Mw==", "bodyText": "Values you acres via DateTimeWidgetUtils.TIME and DateTimeWidgetUtils.DIALOG_THEME should be stored in viewmodel like you do in CustomDatePickerDialog.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468930283", "createdAt": "2020-08-12T00:02:17Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.lifecycle.ViewModelProvider;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    private DateTimeViewModel viewModel;\n+    private TimeChangeListener timeChangeListener;\n+\n+    public interface TimeChangeListener {\n+        void onTimeChanged(DateTime selectedTime);\n+    }\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimeChangeListener) {\n+            timeChangeListener = (TimeChangeListener) context;\n+        }\n+\n+        viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.getSelectedTime().observe(this, dateTime -> {\n+            timeChangeListener.onTimeChanged(dateTime);\n+        });\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        LocalDateTime time = (LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTk2MjkzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowNDoyMVrOG_NQ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowNDoyMVrOG_NQ3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMDc4MA==", "bodyText": "Would be good to move getDateAsGregorian and getDateWithSkippedDaylightSavingGapIfExists methods out of this class to DateTimeUtils.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468930780", "createdAt": "2020-08-12T00:04:21Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomDatePickerDialog.java", "diffHunk": "@@ -18,137 +18,97 @@\n \n import android.app.Dialog;\n import android.content.Context;\n-import android.content.DialogInterface;\n import android.os.Bundle;\n import androidx.fragment.app.DialogFragment;\n import androidx.appcompat.app.AlertDialog;\n+import androidx.lifecycle.ViewModelProvider;\n+\n import android.view.View;\n import android.widget.NumberPicker;\n import android.widget.TextView;\n \n-import org.javarosa.core.model.FormIndex;\n import org.joda.time.LocalDateTime;\n import org.joda.time.chrono.GregorianChronology;\n import org.odk.collect.android.R;\n-import org.odk.collect.android.application.Collect;\n import org.odk.collect.android.logic.DatePickerDetails;\n-import org.odk.collect.android.javarosawrapper.FormController;\n import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n \n /**\n  * @author Grzegorz Orczykowski (gorczykowski@soldevelo.com)\n  */\n public abstract class CustomDatePickerDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTk5MjYyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDoyMDoxMVrOG_NiPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDoyMDoxMVrOG_NiPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzNTIzMQ==", "bodyText": "This is not your fault because probably it worked in the same way on master but it's not consistent. Only TimePicker is not cancelable in all other cases where we use dialogs like datePicker/RankingWidget/NumberPicker it is possible to close such a dialog clicking outside of it so I think timePicker should follow the same approach.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r468935231", "createdAt": "2020-08-12T00:20:11Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CustomTimePickerDialog.java", "diffHunk": "@@ -0,0 +1,165 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.Dialog;\n+import android.app.TimePickerDialog;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.graphics.Color;\n+import android.graphics.drawable.ColorDrawable;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.text.format.DateFormat;\n+import android.util.AttributeSet;\n+import android.view.Window;\n+import android.widget.TimePicker;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.lifecycle.ViewModelProvider;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.odk.collect.android.widgets.viewmodels.DateTimeViewModel;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+\n+import timber.log.Timber;\n+\n+public class CustomTimePickerDialog extends DialogFragment {\n+    private DateTimeViewModel viewModel;\n+    private TimeChangeListener timeChangeListener;\n+\n+    public interface TimeChangeListener {\n+        void onTimeChanged(DateTime selectedTime);\n+    }\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof TimeChangeListener) {\n+            timeChangeListener = (TimeChangeListener) context;\n+        }\n+\n+        viewModel = new ViewModelProvider(this).get(DateTimeViewModel.class);\n+        viewModel.getSelectedTime().observe(this, dateTime -> {\n+            timeChangeListener.onTimeChanged(dateTime);\n+        });\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        LocalDateTime time = (LocalDateTime) getArguments().getSerializable(DateTimeWidgetUtils.TIME);\n+\n+        TimePickerDialog dialog = new TimePickerDialog(requireContext(), getArguments().getInt(DateTimeWidgetUtils.DIALOG_THEME),\n+                viewModel.timeSetListener, time.getHourOfDay(),\n+                time.getMinuteOfHour(), DateFormat.is24HourFormat(requireContext()));\n+\n+        dialog.setTitle(requireContext().getString(R.string.select_time));\n+        fixSpinner(requireContext(), time.getHourOfDay(), time.getMinuteOfHour(),\n+                DateFormat.is24HourFormat(requireContext()));\n+\n+        Window window = dialog.getWindow();\n+        if (window != null) {\n+            window.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n+        }\n+\n+        setCancelable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4556e07bee64749d40e0fdd2f06d57e8aa9d2321"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjAwMTgxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMzowNDoyNFrOG_gVIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNjo1MzowMVrOG_-UgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MzE3MQ==", "bodyText": "Hi @grzesiek2010! I had a doubt. Here, I just test whether the date answer shown in widgetAnswerText is same as that returned by DateTimeWidgetUtils.getDateTimeLAbel() method. I do not write unit tests for all the different cases when datePickerDetails are different, and for different formats. Is it fine here just to check for one case, and have a check for all the other cases in DateTimeWidgetUtilsTest class?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469243171", "createdAt": "2020-08-12T13:04:24Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java", "diffHunk": "@@ -2,65 +2,158 @@\n \n import android.view.View;\n \n-import androidx.annotation.NonNull;\n-\n import org.javarosa.core.model.QuestionDef;\n import org.javarosa.core.model.data.DateData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n+import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.Mock;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.base.GeneralDateTimeWidgetTest;\n+import org.odk.collect.android.listeners.WidgetValueChangedListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.support.TestScreenContextActivity;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.robolectric.RobolectricTestRunner;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.mockValueChangedListener;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithQuestionDefAndAnswer;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithReadOnlyAndQuestionDef;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.widgetTestActivity;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class DateWidgetTest {\n+    private TestScreenContextActivity widgetActivity;\n+    private DateTimeWidgetUtils widgetUtils;\n+    private View.OnLongClickListener onLongClickListener;\n+\n+    private QuestionDef questionDef;\n+    private LocalDateTime dateAnswer;\n+\n+    @Before\n+    public void setUp() {\n+        widgetActivity = widgetTestActivity();\n+\n+        questionDef = mock(QuestionDef.class);\n+        onLongClickListener = mock(View.OnLongClickListener.class);\n+        widgetUtils = mock(DateTimeWidgetUtils.class);\n+\n+        dateAnswer = DateTimeUtils.getSelectedDate(new LocalDateTime().withDate(2010, 5, 12), LocalDateTime.now());\n+    }\n+\n+    @Test\n+    public void usingReadOnlyOption_doesNotShowButton() {\n+        DateWidget widget = createWidget(promptWithReadOnlyAndQuestionDef(questionDef));\n+        assertEquals(widget.binding.widgetButton.getVisibility(), View.GONE);\n+    }\n+\n+    @Test\n+    public void whenPromptIsNotReadOnly_buttonShowsCorrectText() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetButton.getText(), widget.getContext().getString(R.string.select_date));\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptDoesNotHaveAnswer_returnsNull() {\n+        assertThat(createWidget(promptWithQuestionDefAndAnswer(questionDef, null)).getAnswer(), nullValue());\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptHasAnswer_returnsDate() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate())));\n+        assertEquals(widget.getAnswer().getDisplayText(), new DateData(dateAnswer.toDate()).getDisplayText());\n+    }\n \n-public class DateWidgetTest extends GeneralDateTimeWidgetTest<DateWidget, DateData> {\n+    @Test\n+    public void whenPromptDoesNotHaveAnswer_answerTextViewShowsNoDateSelected() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetAnswerText.getText(), widget.getContext().getString(R.string.no_date_selected));\n+    }\n+\n+    @Test\n+    public void whenPromptHasAnswer_answerTextViewShowsCorrectDate() {\n+        FormEntryPrompt prompt = promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate()));\n+        DatePickerDetails datePickerDetails = DateTimeWidgetUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+        DateWidget widget = createWidget(prompt);\n+\n+        assertEquals(widget.binding.widgetAnswerText.getText(),\n+                DateTimeWidgetUtils.getDateTimeLabel(dateAnswer.toDate(), datePickerDetails, false, widget.getContext()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "608085353ec71a8f9ea700f3b9c00e475afbcf5a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTczNDUyOA==", "bodyText": "Yeah I think it's fine", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469734528", "createdAt": "2020-08-13T06:53:01Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/DateWidgetTest.java", "diffHunk": "@@ -2,65 +2,158 @@\n \n import android.view.View;\n \n-import androidx.annotation.NonNull;\n-\n import org.javarosa.core.model.QuestionDef;\n import org.javarosa.core.model.data.DateData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.joda.time.LocalDateTime;\n+import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.Mock;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.widgets.base.GeneralDateTimeWidgetTest;\n+import org.odk.collect.android.listeners.WidgetValueChangedListener;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.support.TestScreenContextActivity;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+import org.odk.collect.android.widgets.utilities.DateTimeWidgetUtils;\n+import org.robolectric.RobolectricTestRunner;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.mockValueChangedListener;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithQuestionDefAndAnswer;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithReadOnlyAndQuestionDef;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.widgetTestActivity;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class DateWidgetTest {\n+    private TestScreenContextActivity widgetActivity;\n+    private DateTimeWidgetUtils widgetUtils;\n+    private View.OnLongClickListener onLongClickListener;\n+\n+    private QuestionDef questionDef;\n+    private LocalDateTime dateAnswer;\n+\n+    @Before\n+    public void setUp() {\n+        widgetActivity = widgetTestActivity();\n+\n+        questionDef = mock(QuestionDef.class);\n+        onLongClickListener = mock(View.OnLongClickListener.class);\n+        widgetUtils = mock(DateTimeWidgetUtils.class);\n+\n+        dateAnswer = DateTimeUtils.getSelectedDate(new LocalDateTime().withDate(2010, 5, 12), LocalDateTime.now());\n+    }\n+\n+    @Test\n+    public void usingReadOnlyOption_doesNotShowButton() {\n+        DateWidget widget = createWidget(promptWithReadOnlyAndQuestionDef(questionDef));\n+        assertEquals(widget.binding.widgetButton.getVisibility(), View.GONE);\n+    }\n+\n+    @Test\n+    public void whenPromptIsNotReadOnly_buttonShowsCorrectText() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetButton.getText(), widget.getContext().getString(R.string.select_date));\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptDoesNotHaveAnswer_returnsNull() {\n+        assertThat(createWidget(promptWithQuestionDefAndAnswer(questionDef, null)).getAnswer(), nullValue());\n+    }\n+\n+    @Test\n+    public void getAnswer_whenPromptHasAnswer_returnsDate() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate())));\n+        assertEquals(widget.getAnswer().getDisplayText(), new DateData(dateAnswer.toDate()).getDisplayText());\n+    }\n \n-public class DateWidgetTest extends GeneralDateTimeWidgetTest<DateWidget, DateData> {\n+    @Test\n+    public void whenPromptDoesNotHaveAnswer_answerTextViewShowsNoDateSelected() {\n+        DateWidget widget = createWidget(promptWithQuestionDefAndAnswer(questionDef, null));\n+        assertEquals(widget.binding.widgetAnswerText.getText(), widget.getContext().getString(R.string.no_date_selected));\n+    }\n+\n+    @Test\n+    public void whenPromptHasAnswer_answerTextViewShowsCorrectDate() {\n+        FormEntryPrompt prompt = promptWithQuestionDefAndAnswer(questionDef, new DateData(dateAnswer.toDate()));\n+        DatePickerDetails datePickerDetails = DateTimeWidgetUtils.getDatePickerDetails(prompt.getQuestion().getAppearanceAttr());\n+        DateWidget widget = createWidget(prompt);\n+\n+        assertEquals(widget.binding.widgetAnswerText.getText(),\n+                DateTimeWidgetUtils.getDateTimeLabel(dateAnswer.toDate(), datePickerDetails, false, widget.getContext()));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI0MzE3MQ=="}, "originalCommit": {"oid": "608085353ec71a8f9ea700f3b9c00e475afbcf5a"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTIwNDY5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowNTo1OFrOG_-qvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzowNTo1OFrOG_-qvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MDIyMg==", "bodyText": "You should be consequent here. Below you have private props accessed via getters, would be good to keep one approach.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469740222", "createdAt": "2020-08-13T07:05:58Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -23,7 +24,9 @@\n         setSelectedTime(hourOfDay, minuteOfHour);\n     };\n \n-    public LocalDateTime date;\n+    public LocalDateTime localDateTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "608085353ec71a8f9ea700f3b9c00e475afbcf5a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTIyODE4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzoxMzozNVrOG_-42Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNzoxMzozNVrOG_-42Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc0MzgzMw==", "bodyText": "You can get rid of curly brackets here.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r469743833", "createdAt": "2020-08-13T07:13:35Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/viewmodels/DateTimeViewModel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.odk.collect.android.widgets.viewmodels;\n+\n+import android.app.DatePickerDialog;\n+import android.app.TimePickerDialog;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDateTime;\n+import org.odk.collect.android.logic.DatePickerDetails;\n+import org.odk.collect.android.utilities.DateTimeUtils;\n+\n+public class DateTimeViewModel extends ViewModel {\n+    public final DatePickerDialog.OnDateSetListener dateSetListener = (view, year, monthOfYear, dayOfMonth) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "608085353ec71a8f9ea700f3b9c00e475afbcf5a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDUyNTE4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CopticDatePickerDialog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDo1MDo1MlrOHwBGfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTo0ODo1M1rOHxyvEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw==", "bodyText": "Could you explain this change to me. You added a similar code to other date dialogs as well and I think I understand why we check if copticDay > copticDate.dayOfMonth() a few lines above since it's possible that when we change months we might move from one that has more days than another but is that possible that the number which represents months is negative?", "url": "https://github.com/getodk/collect/pull/3975#discussion_r520111743", "createdAt": "2020-11-09T20:50:52Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CopticDatePickerDialog.java", "diffHunk": "@@ -82,6 +73,10 @@ private LocalDateTime getCurrentCopticDate() {\n             copticDay = copticDate.dayOfMonth().getMaximumValue();\n         }\n \n+        if (copticDay < copticDate.dayOfMonth().getMinimumValue()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEyNDQyMQ==", "bodyText": "Hi @grzesiek2010! Some of the unit tests fails without this code. Actually when the widget does not have any answer, and the user opens up the date picker dialog, the view model sets the value of selected date as null, and we get the default value for day as 0, while it must be in the range [1,30/31] for custom date picker dialogs.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r521124421", "createdAt": "2020-11-11T05:39:48Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CopticDatePickerDialog.java", "diffHunk": "@@ -82,6 +73,10 @@ private LocalDateTime getCurrentCopticDate() {\n             copticDay = copticDate.dayOfMonth().getMaximumValue();\n         }\n \n+        if (copticDay < copticDate.dayOfMonth().getMinimumValue()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw=="}, "originalCommit": {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk3MzUyMQ==", "bodyText": "Ok I see, thanks.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r521973521", "createdAt": "2020-11-12T09:48:53Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/CopticDatePickerDialog.java", "diffHunk": "@@ -82,6 +73,10 @@ private LocalDateTime getCurrentCopticDate() {\n             copticDay = copticDate.dayOfMonth().getMaximumValue();\n         }\n \n+        if (copticDay < copticDate.dayOfMonth().getMinimumValue()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMTc0Mw=="}, "originalCommit": {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDUzNDg4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDo1Mzo0MlrOHwBMRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDo1Mzo0MlrOHwBMRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExMzIyMg==", "bodyText": "Please rename this method to setWidgetData() since like in this case it's not only about binary files.", "url": "https://github.com/getodk/collect/pull/3975#discussion_r520113222", "createdAt": "2020-11-09T20:53:42Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2632,6 +2629,15 @@ public void onCancelFormLoading() {\n         finish();\n     }\n \n+    private void onDataChanged(Object data) {\n+        ODKView odkView = getCurrentViewIfODKView();\n+        if (odkView != null) {\n+            QuestionWidget widgetGettingNewValue = getWidgetWaitingForBinaryData();\n+            setBinaryWidgetData(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69d65837accd84d7f485ae3cfaab2ed5aaf2cae"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3241, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}