{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTQxMTEw", "number": 3606, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo0MjozMFrODamxgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODowNFrODb1uQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI0ODMyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo0MjozMFrOFhp3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1NTozMlrOFiRLGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMzI5MQ==", "bodyText": "Should be getOfflineLayersPath to match the others.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370833291", "createdAt": "2020-01-24T20:42:30Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -68,4 +67,8 @@ public static String getMetadataPath() {\n     public static String getCachePath() {\n         return getOdkRoot() + File.separator + \".cache\";\n     }\n+\n+    public static String getOfflineLayers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32fa40cadbfef936b6e5ce2460083859652fe0c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3NzI3Mg==", "bodyText": "It is called getOfflineLayersDirPath() (which matches all the others) in the final version so probably you looked at a commit where I moved the static filed from Collect class here and created a method everything using Android Studio so it wasn't even a name that I created.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371477272", "createdAt": "2020-01-27T20:55:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -68,4 +67,8 @@ public static String getMetadataPath() {\n     public static String getCachePath() {\n         return getOdkRoot() + File.separator + \".cache\";\n     }\n+\n+    public static String getOfflineLayers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMzI5MQ=="}, "originalCommit": {"oid": "c32fa40cadbfef936b6e5ce2460083859652fe0c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI1MTAyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo0Mzo0NVrOFhp5Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1OTo1MVrOFiRSqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMzc0Mw==", "bodyText": "Do these really belong here?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370833743", "createdAt": "2020-01-24T20:43:45Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -77,4 +75,8 @@ public static String getSETTINGS() {\n     public static String getTmpfilePath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfb2d2235e2dd35bedef90376fbf6b47911b23b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3OTIxMA==", "bodyText": "In my opinion yes but you can try to change it :)", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371479210", "createdAt": "2020-01-27T20:59:51Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -77,4 +75,8 @@ public static String getSETTINGS() {\n     public static String getTmpfilePath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzMzc0Mw=="}, "originalCommit": {"oid": "edfb2d2235e2dd35bedef90376fbf6b47911b23b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI1NzczOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo0Njo0NlrOFhp9mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1ODoyNlrOFiRQMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNDg0MQ==", "bodyText": "By naming conventions, it should be Odk. How about getStorageRootPath?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370834841", "createdAt": "2020-01-24T20:46:46Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -40,50 +40,50 @@ public static void createODKDirs() throws RuntimeException {\n         }\n     }\n \n-    public static String[] getODKDirs() {\n+    public static String[] getODKDirPaths() {\n         return new String[]{\n-                getOdkRoot(),\n-                getFormsPath(),\n-                getInstancesPath(),\n-                getCachePath(),\n-                getMetadataPath(),\n-                getOfflineLayers()\n+                getMainODKDirPath(),\n+                getFormsDirPath(),\n+                getInstancesDirPath(),\n+                getCacheDirPath(),\n+                getMetadataDirPath(),\n+                getOfflineLayersDirPath()\n             };\n     }\n \n-    public static String getOdkRoot() {\n+    public static String getMainODKDirPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f548d71bf541c40e22bebd01f7c72d18031a6a4c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3ODU3Nw==", "bodyText": "I have a method called getStoragePath() which returns a path to sd card/scoped storage so getStorageRootPath would be too similar... wee need to emphasize it's odk dir.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371478577", "createdAt": "2020-01-27T20:58:26Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -40,50 +40,50 @@ public static void createODKDirs() throws RuntimeException {\n         }\n     }\n \n-    public static String[] getODKDirs() {\n+    public static String[] getODKDirPaths() {\n         return new String[]{\n-                getOdkRoot(),\n-                getFormsPath(),\n-                getInstancesPath(),\n-                getCachePath(),\n-                getMetadataPath(),\n-                getOfflineLayers()\n+                getMainODKDirPath(),\n+                getFormsDirPath(),\n+                getInstancesDirPath(),\n+                getCacheDirPath(),\n+                getMetadataDirPath(),\n+                getOfflineLayersDirPath()\n             };\n     }\n \n-    public static String getOdkRoot() {\n+    public static String getMainODKDirPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNDg0MQ=="}, "originalCommit": {"oid": "f548d71bf541c40e22bebd01f7c72d18031a6a4c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI2OTUyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo1MjowNVrOFhqFBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMToxNDoxMVrOFihTrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNjc0Mg==", "bodyText": "I don't think primary/secondary is easy to understand. How about:\n\ngetScopedExternalFilesDir or getAppExternalFilesDir\ngetUnscopedExternalFilesDir or getRootExternalFilesDir", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370836742", "createdAt": "2020-01-24T20:52:05Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -54,8 +54,26 @@ public static void createODKDirs() throws RuntimeException {\n             };\n     }\n \n+    private static String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "153da3fe08282ddcd004ae23f4de7954103907d7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4Mjg2OQ==", "bodyText": "Primary and secondary are words used across Android doc. I feel like Scoped Storage is something more, it represents the whole change which forces use to use the primary external storage so to be honest I prefer my naming. What do you think @seadowg?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371482869", "createdAt": "2020-01-27T21:08:08Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -54,8 +54,26 @@ public static void createODKDirs() throws RuntimeException {\n             };\n     }\n \n+    private static String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNjc0Mg=="}, "originalCommit": {"oid": "153da3fe08282ddcd004ae23f4de7954103907d7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NTQ3Mw==", "bodyText": "Can you link out to the Android doc you're referring to? I think that in Android primary would refer to internal storage and secondary to the (first) physical sdcard.\nI think that means the primary/secondary naming is inaccurate if it intends to match Android so it's important to change:\n\nEnvironment.getExternalStorageDirectory(): \"Return the primary shared/external storage directory.\"\nContext.getExternalFilesDir(): \"Returns the absolute path to the directory on the primary shared/external storage device where the application can place persistent files it owns\"\n\nSo the paths are on the same media. The difference is whether the storage area is scoped or not / belongs to the app or not.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371485473", "createdAt": "2020-01-27T21:13:50Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -54,8 +54,26 @@ public static void createODKDirs() throws RuntimeException {\n             };\n     }\n \n+    private static String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNjc0Mg=="}, "originalCommit": {"oid": "153da3fe08282ddcd004ae23f4de7954103907d7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0MTYxMg==", "bodyText": "Ahh ok i think I read this answer https://stackoverflow.com/a/29404440/5479029 which is obviously wrong. Sorry I think you are right and the names you proposed make sense.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371741612", "createdAt": "2020-01-28T11:14:11Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -54,8 +54,26 @@ public static void createODKDirs() throws RuntimeException {\n             };\n     }\n \n+    private static String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNjc0Mg=="}, "originalCommit": {"oid": "153da3fe08282ddcd004ae23f4de7954103907d7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjI3NDYwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo1NDoxNlrOFhqIMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozMzoxN1rOFiSNkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNzU1Mw==", "bodyText": "Inlining this in isStorageAvailable would be clearer, I think.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370837553", "createdAt": "2020-01-24T20:54:16Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -43,6 +42,14 @@ public static void createODKDirs() throws RuntimeException {\n         }\n     }\n \n+    private static boolean isStorageAvailable() {\n+        return getStorageState().equals(Environment.MEDIA_MOUNTED);\n+    }\n+\n+    private static String getStorageState() {\n+        return Environment.getExternalStorageState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cac66bd4d1f5daf2087befd434a9f9164bcef61"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NDI4OA==", "bodyText": "I agree this method is not needed.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371494288", "createdAt": "2020-01-27T21:33:17Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -43,6 +42,14 @@ public static void createODKDirs() throws RuntimeException {\n         }\n     }\n \n+    private static boolean isStorageAvailable() {\n+        return getStorageState().equals(Environment.MEDIA_MOUNTED);\n+    }\n+\n+    private static String getStorageState() {\n+        return Environment.getExternalStorageState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNzU1Mw=="}, "originalCommit": {"oid": "6cac66bd4d1f5daf2087befd434a9f9164bcef61"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM2NDMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozMTozM1rOFhq-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTowNToyMlrOFjLtyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MTU2MQ==", "bodyText": "This looks like it would have different behavior from what was there before. If this is based on the path, I'd expect needing to go through getFormFilePath (the method that builds database paths based on whether or not scoped storage is used).", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370851561", "createdAt": "2020-01-24T21:31:33Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "diffHunk": "@@ -258,7 +259,7 @@ private void processItemSets(File formMediaDir) {\n             ida.open();\n             // get the database entry (if exists) for this itemsets.csv, based\n             // on the path\n-            final Cursor c = ida.getItemsets(csv.getAbsolutePath());\n+            final Cursor c = ida.getItemsets(relativeCsvFilePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b6e6466f426233cbdfbc708bd6da30453a0c1f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzNjQyNw==", "bodyText": "Like below. I changed the approach a bit so now those methods responsible for returning database paths deal with both relative and absolute paths so those changes are not needed.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372436427", "createdAt": "2020-01-29T15:05:22Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "diffHunk": "@@ -258,7 +259,7 @@ private void processItemSets(File formMediaDir) {\n             ida.open();\n             // get the database entry (if exists) for this itemsets.csv, based\n             // on the path\n-            final Cursor c = ida.getItemsets(csv.getAbsolutePath());\n+            final Cursor c = ida.getItemsets(relativeCsvFilePath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MTU2MQ=="}, "originalCommit": {"oid": "59b6e6466f426233cbdfbc708bd6da30453a0c1f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM2NjU3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozMjozM1rOFhrATA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTowNDo1OVrOFjLs4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MTkxNg==", "bodyText": "relativeCsvFilePath and csv are redundant. Can you do a substring? Generally not understanding 59b6e64.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370851916", "createdAt": "2020-01-24T21:32:33Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "diffHunk": "@@ -508,7 +508,7 @@ public void setActivityResult(int requestCode, int resultCode, Intent intent) {\n         this.intent = intent;\n     }\n \n-    private void readCSV(File csv, String formHash, String pathHash) {\n+    private void readCSV(File csv, String formHash, String pathHash, String relativeCsvFilePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b6e6466f426233cbdfbc708bd6da30453a0c1f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzNjE5Mw==", "bodyText": "I changed the approach a bit so now those methods responsible for returning database paths deal with both relative and absolute paths so those changes are not needed.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372436193", "createdAt": "2020-01-29T15:04:59Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/FormLoaderTask.java", "diffHunk": "@@ -508,7 +508,7 @@ public void setActivityResult(int requestCode, int resultCode, Intent intent) {\n         this.intent = intent;\n     }\n \n-    private void readCSV(File csv, String formHash, String pathHash) {\n+    private void readCSV(File csv, String formHash, String pathHash, String relativeCsvFilePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MTkxNg=="}, "originalCommit": {"oid": "59b6e6466f426233cbdfbc708bd6da30453a0c1f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM2OTg4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNDowNlrOFhrCYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTowMzo0N1rOFjLp1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MjQ0OQ==", "bodyText": "Why does it have to be relativized first? Can't getFormFilePath deal with it?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370852449", "createdAt": "2020-01-24T21:34:06Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2027,7 +2027,7 @@ public void onClick(DialogInterface dialog,\n                                         languages[whichButton]);\n                                 String selection = FormsColumns.FORM_FILE_PATH\n                                         + \"=?\";\n-                                String[] selectArgs = {formPath};\n+                                String[] selectArgs = {StorageManager.getFormFilePath(StorageManager.getRelativeFormFilePath(formPath))};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c30d3cc5eac177901cdec4355b633a0ffacb33c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczOTczOA==", "bodyText": "Because getFormFilePath() (final name getFormFilePathToStoreInDatabaseBasingOnRelativePath()) expects a relative path as a parameter. Theoretically I could have a method in which as a passed value I would accept both relative and absolute paths and then deal with it but I'm not sure it's better, somehow I decided to do that in this way. I'll look at it again.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371739738", "createdAt": "2020-01-28T11:09:37Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2027,7 +2027,7 @@ public void onClick(DialogInterface dialog,\n                                         languages[whichButton]);\n                                 String selection = FormsColumns.FORM_FILE_PATH\n                                         + \"=?\";\n-                                String[] selectArgs = {formPath};\n+                                String[] selectArgs = {StorageManager.getFormFilePath(StorageManager.getRelativeFormFilePath(formPath))};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MjQ0OQ=="}, "originalCommit": {"oid": "1c30d3cc5eac177901cdec4355b633a0ffacb33c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzNTQxNA==", "bodyText": "Fixed, now one method deals with it.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372435414", "createdAt": "2020-01-29T15:03:47Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2027,7 +2027,7 @@ public void onClick(DialogInterface dialog,\n                                         languages[whichButton]);\n                                 String selection = FormsColumns.FORM_FILE_PATH\n                                         + \"=?\";\n-                                String[] selectArgs = {formPath};\n+                                String[] selectArgs = {StorageManager.getFormFilePath(StorageManager.getRelativeFormFilePath(formPath))};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MjQ0OQ=="}, "originalCommit": {"oid": "1c30d3cc5eac177901cdec4355b633a0ffacb33c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM4MzI5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/storage/StorageManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0MDoxNFrOFhrK0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToxMDoyNVrOFiRlAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NDYwOA==", "bodyText": "Quick stylistic note you don't need to do anything about but I wanted to share for your consideration:\nassertThat(storageManager.getMainODKDirPath(), is(\"/storage/emulated/0/odk\")) reads more like English. Here we have to go to the end of the assertions to find out what code is under test and then look at what the expected value is.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370854608", "createdAt": "2020-01-24T21:40:14Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/StorageManagerTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.odk.collect.android.storage;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.spy;\n+\n+public class StorageManagerTest {\n+\n+    private StorageManager storageManager = spy(StorageManager.class);\n+\n+    @Before\n+    public void setup() {\n+        doReturn(\"/storage/emulated/0/Android/data/org.odk.collect.android/files\").when(storageManager).getPrimaryExternalStorageFilePath();\n+        doReturn(\"/storage/emulated/0\").when(storageManager).getSecondaryExternalStorageFilePath();\n+    }\n+\n+    private void mockUsingScopedStorage() {\n+        doReturn(true).when(storageManager).isScopedStorageUsed();\n+    }\n+\n+    private void mockUsingSdCard() {\n+        doReturn(false).when(storageManager).isScopedStorageUsed();\n+    }\n+\n+    @Test\n+    public void when_scopedStorageNotUsed_should_sdCardPathsBeUsed() {\n+        mockUsingSdCard();\n+\n+        assertEquals(\"/storage/emulated/0/odk\", storageManager.getMainODKDirPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fb732dfffcbc3cdd4eba67497e55a52a9250877"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4MzkwNQ==", "bodyText": "Yes sometimes I use assertThat sometimes assertEquals I should choose one approach (assertThat).", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371483905", "createdAt": "2020-01-27T21:10:25Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/StorageManagerTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.odk.collect.android.storage;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.spy;\n+\n+public class StorageManagerTest {\n+\n+    private StorageManager storageManager = spy(StorageManager.class);\n+\n+    @Before\n+    public void setup() {\n+        doReturn(\"/storage/emulated/0/Android/data/org.odk.collect.android/files\").when(storageManager).getPrimaryExternalStorageFilePath();\n+        doReturn(\"/storage/emulated/0\").when(storageManager).getSecondaryExternalStorageFilePath();\n+    }\n+\n+    private void mockUsingScopedStorage() {\n+        doReturn(true).when(storageManager).isScopedStorageUsed();\n+    }\n+\n+    private void mockUsingSdCard() {\n+        doReturn(false).when(storageManager).isScopedStorageUsed();\n+    }\n+\n+    @Test\n+    public void when_scopedStorageNotUsed_should_sdCardPathsBeUsed() {\n+        mockUsingSdCard();\n+\n+        assertEquals(\"/storage/emulated/0/odk\", storageManager.getMainODKDirPath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NDYwOA=="}, "originalCommit": {"oid": "0fb732dfffcbc3cdd4eba67497e55a52a9250877"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjQwNDQ4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo1MDoyNVrOFhrYdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDo1NjoxNFrOFig1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODEwMw==", "bodyText": "The naming here is really tricky. It's something I had flagged when the methods were first introduced so I'm glad to see you looking for something more specific. I must say that even for me who loves words, these are a bit long. \ud83d\ude0a Here are some other ideas:\n\ngetCacheFilePathForDatabase\ngetDatabasePathFromRelativePath(Enum fileType (e.g. CACHE, FORM, INSTANCE), String relativePath)\nrelativePathToDatabasePath(String relativePath, Enum fileType)", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370858103", "createdAt": "2020-01-24T21:50:25Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -124,7 +124,7 @@ public void recordMigrationToScopedStorage() {\n     }\n \n     // TODO the method should be removed once using Scoped storage became required\n-    public String getCacheFilePath(String relativePath) {\n+    public String getCacheFilePathToStoreInDatabaseBasingOnRelativePath(String relativePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74d4c277e320975ac9724ec894ed3659bda72f88"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NjEzNA==", "bodyText": "If you don't want to go the enum route (totally fine), what about getCacheDbPath/getInstanceDbPath/etc? I think that given the parameter name, it's not critical to state in the name that the incoming path must be relative. But getCacheDbPathFromRelativePath also works for me.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371356134", "createdAt": "2020-01-27T16:48:14Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -124,7 +124,7 @@ public void recordMigrationToScopedStorage() {\n     }\n \n     // TODO the method should be removed once using Scoped storage became required\n-    public String getCacheFilePath(String relativePath) {\n+    public String getCacheFilePathToStoreInDatabaseBasingOnRelativePath(String relativePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODEwMw=="}, "originalCommit": {"oid": "74d4c277e320975ac9724ec894ed3659bda72f88"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTczMzgxNA==", "bodyText": "Yeah I agree that it could be improved. I'll rethink it.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371733814", "createdAt": "2020-01-28T10:56:14Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -124,7 +124,7 @@ public void recordMigrationToScopedStorage() {\n     }\n \n     // TODO the method should be removed once using Scoped storage became required\n-    public String getCacheFilePath(String relativePath) {\n+    public String getCacheFilePathToStoreInDatabaseBasingOnRelativePath(String relativePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1ODEwMw=="}, "originalCommit": {"oid": "74d4c277e320975ac9724ec894ed3659bda72f88"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjU1OTgxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMzoxNzowOVrOFhs5ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMTo1NFrOFioRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4Mjk1NA==", "bodyText": "This seems like it would be catastrophic. It means no media is available, right? Would having an empty string here just cause things to crash downstream?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r370882954", "createdAt": "2020-01-24T23:17:09Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -0,0 +1,186 @@\n+package org.odk.collect.android.storage;\n+\n+import android.os.Environment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+\n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n+import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n+\n+public class StorageManager {\n+    /**\n+     * Creates required directories on the SDCard (or other external storage)\n+     *\n+     * @throws RuntimeException if there is no SDCard or the directory exists as a non directory\n+     */\n+    public void createODKDirs() throws RuntimeException {\n+        if (!isStorageAvailable()) {\n+            throw new RuntimeException(\n+                    Collect.getInstance().getString(R.string.sdcard_unmounted, getStorageState()));\n+        }\n+\n+        for (String dirPath : getODKDirPaths()) {\n+            File dir = new File(dirPath);\n+            if (!dir.exists()) {\n+                if (!dir.mkdirs()) {\n+                    String message = Collect.getInstance().getString(R.string.cannot_create_directory, dirPath);\n+                    Timber.w(message);\n+                    throw new RuntimeException(message);\n+                }\n+            } else {\n+                if (!dir.isDirectory()) {\n+                    String message = Collect.getInstance().getString(R.string.not_a_directory, dirPath);\n+                    Timber.w(message);\n+                    throw new RuntimeException(message);\n+                }\n+            }\n+        }\n+    }\n+\n+    private boolean isStorageAvailable() {\n+        return getStorageState().equals(Environment.MEDIA_MOUNTED);\n+    }\n+\n+    private String getStorageState() {\n+        return Environment.getExternalStorageState();\n+    }\n+\n+    public String[] getODKDirPaths() {\n+        return new String[]{\n+                getMainODKDirPath(),\n+                getFormsDirPath(),\n+                getInstancesDirPath(),\n+                getCacheDirPath(),\n+                getMetadataDirPath(),\n+                getOfflineLayersDirPath()\n+            };\n+    }\n+\n+    private String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()\n+                : getSecondaryExternalStorageFilePath();\n+    }\n+\n+    String getPrimaryExternalStorageFilePath() {\n+        File primaryStorageFile = Collect.getInstance().getExternalFilesDir(null);\n+        if (primaryStorageFile != null) {\n+            return primaryStorageFile.getAbsolutePath();\n+        }\n+        return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf709c55d17f9318ba41fa33e80f005dd36d05ab"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1NTc0OA==", "bodyText": "Yes, I hardcoded it for testing and it returns:\n\nhttps://github.com/opendatakit/collect/pull/3606/files#diff-294c525d328b50b03236414b1f1ef7a7R33\nProbably we should improve the message?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371855748", "createdAt": "2020-01-28T15:01:54Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageManager.java", "diffHunk": "@@ -0,0 +1,186 @@\n+package org.odk.collect.android.storage;\n+\n+import android.os.Environment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+\n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n+import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n+\n+public class StorageManager {\n+    /**\n+     * Creates required directories on the SDCard (or other external storage)\n+     *\n+     * @throws RuntimeException if there is no SDCard or the directory exists as a non directory\n+     */\n+    public void createODKDirs() throws RuntimeException {\n+        if (!isStorageAvailable()) {\n+            throw new RuntimeException(\n+                    Collect.getInstance().getString(R.string.sdcard_unmounted, getStorageState()));\n+        }\n+\n+        for (String dirPath : getODKDirPaths()) {\n+            File dir = new File(dirPath);\n+            if (!dir.exists()) {\n+                if (!dir.mkdirs()) {\n+                    String message = Collect.getInstance().getString(R.string.cannot_create_directory, dirPath);\n+                    Timber.w(message);\n+                    throw new RuntimeException(message);\n+                }\n+            } else {\n+                if (!dir.isDirectory()) {\n+                    String message = Collect.getInstance().getString(R.string.not_a_directory, dirPath);\n+                    Timber.w(message);\n+                    throw new RuntimeException(message);\n+                }\n+            }\n+        }\n+    }\n+\n+    private boolean isStorageAvailable() {\n+        return getStorageState().equals(Environment.MEDIA_MOUNTED);\n+    }\n+\n+    private String getStorageState() {\n+        return Environment.getExternalStorageState();\n+    }\n+\n+    public String[] getODKDirPaths() {\n+        return new String[]{\n+                getMainODKDirPath(),\n+                getFormsDirPath(),\n+                getInstancesDirPath(),\n+                getCacheDirPath(),\n+                getMetadataDirPath(),\n+                getOfflineLayersDirPath()\n+            };\n+    }\n+\n+    private String getStoragePath() {\n+        return isScopedStorageUsed()\n+                ? getPrimaryExternalStorageFilePath()\n+                : getSecondaryExternalStorageFilePath();\n+    }\n+\n+    String getPrimaryExternalStorageFilePath() {\n+        File primaryStorageFile = Collect.getInstance().getExternalFilesDir(null);\n+        if (primaryStorageFile != null) {\n+            return primaryStorageFile.getAbsolutePath();\n+        }\n+        return \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg4Mjk1NA=="}, "originalCommit": {"oid": "bf709c55d17f9318ba41fa33e80f005dd36d05ab"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzcwODcwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQyMjozNzo1OFrOFh2Jjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTozMDoxMFrOFjMuCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzNDUxMQ==", "bodyText": "This is going to do a database query, right? So it seems like it should match whatever is in the database? I'd expect no transformation needed here.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r371034511", "createdAt": "2020-01-26T22:37:58Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -325,21 +324,20 @@ public int delete(@NonNull Uri uri, String where, String[] whereArgs) {\n                         if (c != null && c.getCount() > 0) {\n                             c.moveToFirst();\n                             do {\n-                                deleteFileOrDir(c.getString(c\n-                                        .getColumnIndex(FormsColumns.JRCACHE_FILE_PATH)));\n-                                String formFilePath = c.getString(c\n-                                        .getColumnIndex(FormsColumns.FORM_FILE_PATH));\n-                                deleteFileOrDir(formFilePath);\n-                                deleteFileOrDir(c.getString(c\n-                                        .getColumnIndex(FormsColumns.FORM_MEDIA_PATH)));\n+                                deleteFileOrDir(storageManager.getAbsoluteCacheFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.JRCACHE_FILE_PATH))));\n+                                deleteFileOrDir(storageManager.getAbsoluteFormFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.FORM_FILE_PATH))));\n+                                deleteFileOrDir(storageManager.getAbsoluteFormFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.FORM_MEDIA_PATH))));\n \n                                 try {\n                                     // get rid of the old tables\n                                     ItemsetDbAdapter ida = new ItemsetDbAdapter();\n                                     ida.open();\n-                                    ida.delete(c.getString(c\n+                                    ida.delete(storageManager.getRelativeFormFilePath(c.getString(c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf709c55d17f9318ba41fa33e80f005dd36d05ab"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1Mjg3NA==", "bodyText": "Right, fixed.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372452874", "createdAt": "2020-01-29T15:30:10Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -325,21 +324,20 @@ public int delete(@NonNull Uri uri, String where, String[] whereArgs) {\n                         if (c != null && c.getCount() > 0) {\n                             c.moveToFirst();\n                             do {\n-                                deleteFileOrDir(c.getString(c\n-                                        .getColumnIndex(FormsColumns.JRCACHE_FILE_PATH)));\n-                                String formFilePath = c.getString(c\n-                                        .getColumnIndex(FormsColumns.FORM_FILE_PATH));\n-                                deleteFileOrDir(formFilePath);\n-                                deleteFileOrDir(c.getString(c\n-                                        .getColumnIndex(FormsColumns.FORM_MEDIA_PATH)));\n+                                deleteFileOrDir(storageManager.getAbsoluteCacheFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.JRCACHE_FILE_PATH))));\n+                                deleteFileOrDir(storageManager.getAbsoluteFormFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.FORM_FILE_PATH))));\n+                                deleteFileOrDir(storageManager.getAbsoluteFormFilePath(c.getString(c\n+                                        .getColumnIndex(FormsColumns.FORM_MEDIA_PATH))));\n \n                                 try {\n                                     // get rid of the old tables\n                                     ItemsetDbAdapter ida = new ItemsetDbAdapter();\n                                     ida.open();\n-                                    ida.delete(c.getString(c\n+                                    ida.delete(storageManager.getRelativeFormFilePath(c.getString(c", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAzNDUxMQ=="}, "originalCommit": {"oid": "bf709c55d17f9318ba41fa33e80f005dd36d05ab"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzQyMDYwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/FormsDaoTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODoxNjoyMFrOFjSkHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODowMToyOVrOFjiHHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0ODYzNw==", "bodyText": "This is going to do a db request. Shouldn't it use the getDbPath method? As written, this code will always build an absolute path but when we flip the switch to scoped storage, there won't be absolute paths in the db to query against.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372548637", "createdAt": "2020-01-29T18:16:20Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/FormsDaoTest.java", "diffHunk": "@@ -126,7 +128,7 @@ public void getFormsCursorTest() {\n \n     @Test\n     public void getFormsCursorForFormFilePathTest() {\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + \"/Miramare.xml\");\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + \"/Miramare.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b6cb777e7a249ae2aaa9e667bde7ca046fd4dbb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwMzM1Ng==", "bodyText": "getFormsCursorForFormFilePath() used here deals with it.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372803356", "createdAt": "2020-01-30T08:01:29Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/FormsDaoTest.java", "diffHunk": "@@ -126,7 +128,7 @@ public void getFormsCursorTest() {\n \n     @Test\n     public void getFormsCursorForFormFilePathTest() {\n-        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + \"/Miramare.xml\");\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(storagePathProvider.getDirPath(StorageSubdirectory.FORMS) + \"/Miramare.xml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0ODYzNw=="}, "originalCommit": {"oid": "1b6cb777e7a249ae2aaa9e667bde7ca046fd4dbb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzQ0NTkzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODoyNDowMVrOFjSz4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODoxMjoyNFrOFjiU_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1MjY3Mw==", "bodyText": "This should be a db path, right?", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372552673", "createdAt": "2020-01-29T18:24:01Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -200,19 +203,19 @@ public synchronized Uri insert(@NonNull Uri uri, ContentValues initialValues) {\n             values.put(FormsColumns.MD5_HASH, md5);\n \n             if (!values.containsKey(FormsColumns.JRCACHE_FILE_PATH)) {\n-                String cachePath = Collect.CACHE_PATH + File.separator + md5\n+                String cachePath = storagePathProvider.getDirPath(StorageSubdirectory.CACHE) + File.separator + md5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b6cb777e7a249ae2aaa9e667bde7ca046fd4dbb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgwNjkxMA==", "bodyText": "Ohh yes generaly that line was redundant at all because it was just:\nString cachePath = storagePathProvider.getDirPath(StorageSubdirectory.CACHE) + File.separator + md5 + \".formdef\";\nvalues.put(FormsColumns.JRCACHE_FILE_PATH, storagePathProvider.getCacheDbPath(cachePath));\nso first I an absolute path was created and then used in getCacheDbPath() which deals with relative paths as well.\nThat means we can just use:\nvalues.put(FormsColumns.JRCACHE_FILE_PATH, storagePathProvider.getCacheDbPath(md5 + \".formdef\"));\nFixed.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372806910", "createdAt": "2020-01-30T08:12:24Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/provider/FormsProvider.java", "diffHunk": "@@ -200,19 +203,19 @@ public synchronized Uri insert(@NonNull Uri uri, ContentValues initialValues) {\n             values.put(FormsColumns.MD5_HASH, md5);\n \n             if (!values.containsKey(FormsColumns.JRCACHE_FILE_PATH)) {\n-                String cachePath = Collect.CACHE_PATH + File.separator + md5\n+                String cachePath = storagePathProvider.getDirPath(StorageSubdirectory.CACHE) + File.separator + md5", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1MjY3Mw=="}, "originalCommit": {"oid": "1b6cb777e7a249ae2aaa9e667bde7ca046fd4dbb"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTE4MzM2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageInitializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwODo1ODowNFrOFjjdXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMDowNTowMlrOFjlbJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQzOQ==", "bodyText": "I think it'd be nice to pull this out as a constructor argument. For me that helps to signal that this is a dependency for the object and I think we'll want to move to having these objects constructed in Dagger to allow us to mock/fake them in tests. For the moment you could also just have a no arg constructor as well like you have in StoragePathProvider.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372825439", "createdAt": "2020-01-30T08:58:04Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageInitializer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.odk.collect.android.storage;\n+\n+import android.os.Environment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+\n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n+public class StorageInitializer {\n+    /**\n+     * Creates required directories on the SDCard (or other external storage)\n+     *\n+     * @throws RuntimeException if there is no SDCard or the directory exists as a non directory\n+     */\n+    public void createODKDirs() throws RuntimeException {\n+        if (!new StorageStateProvider().isStorageMounted()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387ff4160b94f1dcf8a8411abb995d757571b556"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NzYzOQ==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3606#discussion_r372857639", "createdAt": "2020-01-30T10:05:02Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageInitializer.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.odk.collect.android.storage;\n+\n+import android.os.Environment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+\n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n+public class StorageInitializer {\n+    /**\n+     * Creates required directories on the SDCard (or other external storage)\n+     *\n+     * @throws RuntimeException if there is no SDCard or the directory exists as a non directory\n+     */\n+    public void createODKDirs() throws RuntimeException {\n+        if (!new StorageStateProvider().isStorageMounted()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyNTQzOQ=="}, "originalCommit": {"oid": "387ff4160b94f1dcf8a8411abb995d757571b556"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3453, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}