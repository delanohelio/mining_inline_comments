{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNTcyMjg1", "number": 4006, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo1NDozNlrOEVcxvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo1OTo0NVrOEctNhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTI3MDM3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/AudioWidgetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo1NDozNlrOG8Na_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo1NDozNlrOG8Na_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc4NzY0NQ==", "bodyText": "I think better to just have the values inline (destinationPath) rather than defined anywhere. Easier to see in the test that the value is just a string.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465787645", "createdAt": "2020-08-05T14:54:36Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/AudioWidgetTest.java", "diffHunk": "@@ -1,117 +1,188 @@\n package org.odk.collect.android.widgets;\n \n-import android.content.Context;\n-import android.content.Intent;\n-import android.net.Uri;\n-import android.provider.MediaStore;\n+import android.media.MediaPlayer;\n import android.view.View;\n \n-import androidx.annotation.NonNull;\n-\n-import net.bytebuddy.utility.RandomString;\n+import androidx.core.view.ViewCompat;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.lifecycle.LifecycleOwner;\n \n import org.javarosa.core.model.data.StringData;\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.Mock;\n-import org.odk.collect.android.R;\n+import org.junit.runner.RunWith;\n import org.odk.collect.android.audio.AudioControllerView;\n+import org.odk.collect.android.audio.AudioHelper;\n+import org.odk.collect.android.audio.Clip;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n+import org.odk.collect.android.listeners.WidgetValueChangedListener;\n+import org.odk.collect.android.support.FakeLifecycleOwner;\n+import org.odk.collect.android.support.FakeScheduler;\n+import org.odk.collect.android.support.TestScreenContextActivity;\n import org.odk.collect.android.utilities.FileUtil;\n import org.odk.collect.android.utilities.MediaUtil;\n-import org.odk.collect.android.widgets.base.FileWidgetTest;\n+import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.support.FakeWaitingForDataRegistry;\n+import org.odk.collect.async.Scheduler;\n+import org.robolectric.RobolectricTestRunner;\n \n import java.io.File;\n+import java.util.function.Supplier;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n-import static org.mockito.ArgumentMatchers.any;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.nullValue;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.mockValueChangedListener;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithAnswer;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.promptWithReadOnly;\n+import static org.odk.collect.android.widgets.support.QuestionWidgetHelpers.widgetTestActivity;\n \n-/**\n- * @author James Knight\n- */\n-public class AudioWidgetTest extends FileWidgetTest<AudioWidget> {\n-\n-    @Mock\n-    Uri uri;\n+@RunWith(RobolectricTestRunner.class)\n+public class AudioWidgetTest {\n+    private final String destinationPath = \"blah\";\n \n-    @Mock\n-    MediaUtil mediaUtil;\n+    private final MediaPlayer mediaPlayer = new MediaPlayer();\n+    private final FakeScheduler fakeScheduler = new FakeScheduler();\n \n-    @Mock\n-    FileUtil fileUtil;\n+    private TestScreenContextActivity widgetActivity;\n+    private AudioControllerView audioController;\n+    private FileUtil fileUtil;\n+    private MediaUtil mediaUtil;\n+    private AudioHelper audioHelper;\n \n-    @Mock\n-    AudioControllerView audioController;\n+    @Before\n+    public void setUp() {\n+        widgetActivity = widgetTestActivity();\n \n-    private String destinationName;\n+        audioController = mock(AudioControllerView.class);\n+        fileUtil = mock(FileUtil.class);\n+        mediaUtil = mock(MediaUtil.class);\n \n-    @NonNull\n-    @Override\n-    public AudioWidget createWidget() {\n-        return new AudioWidget(activity, new QuestionDetails(formEntryPrompt, \"formAnalyticsID\"), fileUtil, mediaUtil, audioController, new FakeWaitingForDataRegistry());\n+        audioHelper = new FakeAudioHelper(widgetActivity, new FakeLifecycleOwner(), fakeScheduler, () -> mediaPlayer);\n     }\n \n-    @NonNull\n-    @Override\n-    public StringData getNextAnswer() {\n-        return new StringData(destinationName);\n+    @Test\n+    public void usingReadOnlyOption_doesNotShowCaptureAndChooseButtons() {\n+        AudioWidget widget = createWidget(promptWithReadOnly());\n+\n+        assertThat(widget.captureButton.getVisibility(), equalTo(View.GONE));\n+        assertThat(widget.chooseButton.getVisibility(), equalTo(View.GONE));\n     }\n \n-    @Override\n-    public Object createBinaryData(StringData answerData) {\n-        return uri;\n+    @Test\n+    public void getAnswer_whenPromptDoesNotHaveAnswer_returnsNull() {\n+        AudioWidget widget = createWidget(promptWithAnswer(null));\n+        assertThat(widget.getAnswer(), nullValue());\n     }\n \n-    @Override\n-    public void setUp() throws Exception {\n-        super.setUp();\n-        destinationName = RandomString.make();\n+    @Test\n+    public void getAnswer_whenPromptHasAnswer_returnsAnswer() {\n+        AudioWidget widget = createWidget(promptWithAnswer(new StringData(destinationPath)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2bb6bf4ec6f1021f2fa63cc13152c19be8e7031"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTMwNTg0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/MediaManagerListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTowMjoxOVrOG8NxnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjoxNDoyN1rOG8Qydw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzQzNw==", "bodyText": "Not sure the naming is right here. It's not really a \"listener\". Maybe the interface is QuestionMediaManager and the implementation is something else?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465793437", "createdAt": "2020-08-05T15:02:19Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/MediaManagerListener.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+public interface MediaManagerListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f46a777e8a5ffe159b4ebf557a5031462274f7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0MjgwNw==", "bodyText": "Yes right the implementation mostly concerns with the deletion or replacing the file at the current index. But I think I might need to extend this implementation for working on other widgets", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465842807", "createdAt": "2020-08-05T16:14:27Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/interfaces/MediaManagerListener.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.odk.collect.android.widgets.interfaces;\n+\n+public interface MediaManagerListener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzQzNw=="}, "originalCommit": {"oid": "53f46a777e8a5ffe159b4ebf557a5031462274f7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTMyNDAzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTowNjoyN1rOG8N9PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjoyMToyMVrOG8REKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NjQxMw==", "bodyText": "Feels like the button text should just live in a layout?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465796413", "createdAt": "2020-08-05T15:06:27Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -101,24 +98,33 @@ public AudioWidget(Context context, QuestionDetails prompt, WaitingForDataRegist\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.mediaManagerListener = mediaManagerListener;\n \n-        captureButton = createSimpleButton(getContext(), R.id.capture_audio, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.capture_audio), getAnswerFontSize(), this);\n-\n-        chooseButton = createSimpleButton(getContext(), R.id.choose_sound, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.choose_sound), getAnswerFontSize(), this);\n-\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(captureButton);\n-        answerLayout.addView(chooseButton);\n-        answerLayout.addView(audioController);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n-\n         hideButtonsIfNeeded();\n \n         binaryName = questionDetails.getPrompt().getAnswerText();\n         updatePlayerMedia();\n     }\n \n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = AudioWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.captureButton.widgetButton.setVisibility(View.GONE);\n+            binding.chooseButton.widgetButton.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.chooseButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.captureButton.widgetButton.setText(getContext().getString(R.string.capture_audio));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1beed3da777311fc8bdba2eca7f261ca0b35986"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0MTg0Mg==", "bodyText": "I use\n`\n\n<include\n    android:id=\"@+id/choose_button\"\n    layout=\"@layout/widget_button\"/>`\n\nin audio_widget.xml file. So I have added the button text here.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465841842", "createdAt": "2020-08-05T16:12:54Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -101,24 +98,33 @@ public AudioWidget(Context context, QuestionDetails prompt, WaitingForDataRegist\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.mediaManagerListener = mediaManagerListener;\n \n-        captureButton = createSimpleButton(getContext(), R.id.capture_audio, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.capture_audio), getAnswerFontSize(), this);\n-\n-        chooseButton = createSimpleButton(getContext(), R.id.choose_sound, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.choose_sound), getAnswerFontSize(), this);\n-\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(captureButton);\n-        answerLayout.addView(chooseButton);\n-        answerLayout.addView(audioController);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n-\n         hideButtonsIfNeeded();\n \n         binaryName = questionDetails.getPrompt().getAnswerText();\n         updatePlayerMedia();\n     }\n \n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = AudioWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.captureButton.widgetButton.setVisibility(View.GONE);\n+            binding.chooseButton.widgetButton.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.chooseButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.captureButton.widgetButton.setText(getContext().getString(R.string.capture_audio));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NjQxMw=="}, "originalCommit": {"oid": "a1beed3da777311fc8bdba2eca7f261ca0b35986"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0NDAxNQ==", "bodyText": "I think I'd be happier duplicating the layout here than having hardcoded text set programmatically. My thinking is that it's good to be able to see the layout as it will appear (with the text) in the design preview for it.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465844015", "createdAt": "2020-08-05T16:16:21Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -101,24 +98,33 @@ public AudioWidget(Context context, QuestionDetails prompt, WaitingForDataRegist\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.mediaManagerListener = mediaManagerListener;\n \n-        captureButton = createSimpleButton(getContext(), R.id.capture_audio, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.capture_audio), getAnswerFontSize(), this);\n-\n-        chooseButton = createSimpleButton(getContext(), R.id.choose_sound, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.choose_sound), getAnswerFontSize(), this);\n-\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(captureButton);\n-        answerLayout.addView(chooseButton);\n-        answerLayout.addView(audioController);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n-\n         hideButtonsIfNeeded();\n \n         binaryName = questionDetails.getPrompt().getAnswerText();\n         updatePlayerMedia();\n     }\n \n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = AudioWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.captureButton.widgetButton.setVisibility(View.GONE);\n+            binding.chooseButton.widgetButton.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.chooseButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.captureButton.widgetButton.setText(getContext().getString(R.string.capture_audio));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NjQxMw=="}, "originalCommit": {"oid": "a1beed3da777311fc8bdba2eca7f261ca0b35986"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0NTgwNg==", "bodyText": "For the other file widgets, I was using the same widget_button.xml layout. So, I should have a separate layout for all of them too?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465845806", "createdAt": "2020-08-05T16:18:58Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -101,24 +98,33 @@ public AudioWidget(Context context, QuestionDetails prompt, WaitingForDataRegist\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.mediaManagerListener = mediaManagerListener;\n \n-        captureButton = createSimpleButton(getContext(), R.id.capture_audio, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.capture_audio), getAnswerFontSize(), this);\n-\n-        chooseButton = createSimpleButton(getContext(), R.id.choose_sound, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.choose_sound), getAnswerFontSize(), this);\n-\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(captureButton);\n-        answerLayout.addView(chooseButton);\n-        answerLayout.addView(audioController);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n-\n         hideButtonsIfNeeded();\n \n         binaryName = questionDetails.getPrompt().getAnswerText();\n         updatePlayerMedia();\n     }\n \n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = AudioWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.captureButton.widgetButton.setVisibility(View.GONE);\n+            binding.chooseButton.widgetButton.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.chooseButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.captureButton.widgetButton.setText(getContext().getString(R.string.capture_audio));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NjQxMw=="}, "originalCommit": {"oid": "a1beed3da777311fc8bdba2eca7f261ca0b35986"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg0NzMzOQ==", "bodyText": "I think instead of sharing an include maybe we could create a custom button class with the shared values. Or, create a style that can be shared. These would let us avoid duplication but avoid having to set the text programmatically (which I'd like to avoid as much as possible).", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465847339", "createdAt": "2020-08-05T16:21:21Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/AudioWidget.java", "diffHunk": "@@ -101,24 +98,33 @@ public AudioWidget(Context context, QuestionDetails prompt, WaitingForDataRegist\n         this.waitingForDataRegistry = waitingForDataRegistry;\n         this.mediaManagerListener = mediaManagerListener;\n \n-        captureButton = createSimpleButton(getContext(), R.id.capture_audio, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.capture_audio), getAnswerFontSize(), this);\n-\n-        chooseButton = createSimpleButton(getContext(), R.id.choose_sound, getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.choose_sound), getAnswerFontSize(), this);\n-\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(captureButton);\n-        answerLayout.addView(chooseButton);\n-        answerLayout.addView(audioController);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n-\n         hideButtonsIfNeeded();\n \n         binaryName = questionDetails.getPrompt().getAnswerText();\n         updatePlayerMedia();\n     }\n \n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = AudioWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n+\n+        if (prompt.isReadOnly()) {\n+            binding.captureButton.widgetButton.setVisibility(View.GONE);\n+            binding.chooseButton.widgetButton.setVisibility(View.GONE);\n+        } else {\n+            binding.captureButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.chooseButton.widgetButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+\n+            binding.captureButton.widgetButton.setText(getContext().getString(R.string.capture_audio));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NjQxMw=="}, "originalCommit": {"oid": "a1beed3da777311fc8bdba2eca7f261ca0b35986"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTMzNzczOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTowOTo0NVrOG8OGDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo0MToyMlrOG8X8cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5ODY3MQ==", "bodyText": "We want a test for this change.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465798671", "createdAt": "2020-08-05T15:09:45Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "diffHunk": "@@ -178,16 +178,14 @@ public void errorDisplayed() {\n     }\n \n     private void schedulePositionUpdates() {\n-        if (positionUpdatesCancellable == null) {\n-            positionUpdatesCancellable = scheduler.repeat(() -> {\n-                CurrentlyPlaying currentlyPlaying = this.currentlyPlaying.getValue();\n+        positionUpdatesCancellable = scheduler.repeat(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5a37fd4995edaa6d051eaa4787608a09c0a18c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2MDA1MQ==", "bodyText": "I verified playMultipleClips_updatesProgress_forAllClips() and playInOrder_playsClipsOneAfterTheOther_andUpdatesProgress fails on master.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r465960051", "createdAt": "2020-08-05T19:41:22Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "diffHunk": "@@ -178,16 +178,14 @@ public void errorDisplayed() {\n     }\n \n     private void schedulePositionUpdates() {\n-        if (positionUpdatesCancellable == null) {\n-            positionUpdatesCancellable = scheduler.repeat(() -> {\n-                CurrentlyPlaying currentlyPlaying = this.currentlyPlaying.getValue();\n+        positionUpdatesCancellable = scheduler.repeat(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5ODY3MQ=="}, "originalCommit": {"oid": "9c5a37fd4995edaa6d051eaa4787608a09c0a18c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzMzMjc0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/support/FakeScheduler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo1MDowNVrOG80ang==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo1MDowNVrOG80ang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNjUyNg==", "bodyText": "I like what's happening here but I think the variable/method should be named something more related to the scheduler than the test here. Maybe isRepeatRunning?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r466426526", "createdAt": "2020-08-06T13:50:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/support/FakeScheduler.java", "diffHunk": "@@ -13,6 +13,7 @@\n     private Runnable foregroundTask;\n     private Runnable backgroundTask;\n     private Boolean cancelled = false;\n+    private Boolean isProgressUpdating = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4d859d8ca3a4cb691d3e15bf611cc690dd93749"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzM0MzA3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/buttons.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo1MjozMVrOG80hWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDowNzo1MFrOG81LsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyODI1MQ==", "bodyText": "The naming scheme here is pretty confusing as by convention we use Widget at the beginning but that's referring to the general definition of the word rather than a \"question widget\". Maybe the name here could be Widget.Collect.Button.WidgetAnswer?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r466428251", "createdAt": "2020-08-06T13:52:31Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/values/buttons.xml", "diffHunk": "@@ -6,6 +6,15 @@\n         <item name=\"android:textStyle\">normal</item>\n     </style>\n \n+    <style name=\"Widget.Collect.Button.Layout\" parent=\"Widget.Collect.Button.Custom\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "551b25a6c847b23784a05dec361f98b366b3c3ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzOTA4OA==", "bodyText": "Oh I thought the same initially.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r466439088", "createdAt": "2020-08-06T14:07:50Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/res/values/buttons.xml", "diffHunk": "@@ -6,6 +6,15 @@\n         <item name=\"android:textStyle\">normal</item>\n     </style>\n \n+    <style name=\"Widget.Collect.Button.Layout\" parent=\"Widget.Collect.Button.Custom\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyODI1MQ=="}, "originalCommit": {"oid": "551b25a6c847b23784a05dec361f98b366b3c3ba"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzAzMjE5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaManager.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo1Nzo1M1rOG-LjVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjowOTo1NlrOG-VkKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NDE2NQ==", "bodyText": "I don't think this is quite right after a second look. As much as we can we want to avoid static singletons. If there is some state that we want to keep shared at an application level (i.e. between multiple activities or services) then we should use Dagger to setup and inject a singleton (using @Singleton).\nIn this case I don't believe the state needs to persist outside of form entry so it really only needs to last as long as the Activity.  This means we could confuse ourselves by ending up with state hanging around between form entry \"sessions\". A good way to share state like this would be to use a view model where the ViewModelProvider uses the activity as its owner. Does that make sense as a way forward?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r467854165", "createdAt": "2020-08-10T11:57:53Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaManager.java", "diffHunk": "@@ -24,7 +24,7 @@\n  * remember an original media file answer (no matter how many times this answer is replaced), in order\n  * to be able to restore the original answer in case of ignoring changes.\n  */\n-public enum MediaManager {\n+public enum MediaManager implements QuestionMediaManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "466e31dd54f2a6c426ecbc1c780c7091970d9e62"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NTk1NA==", "bodyText": "If so, it might be good to discuss the plans/approach here so we can come up with something that makes sense as it's a little awkward I think!", "url": "https://github.com/getodk/collect/pull/4006#discussion_r467855954", "createdAt": "2020-08-10T12:01:38Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaManager.java", "diffHunk": "@@ -24,7 +24,7 @@\n  * remember an original media file answer (no matter how many times this answer is replaced), in order\n  * to be able to restore the original answer in case of ignoring changes.\n  */\n-public enum MediaManager {\n+public enum MediaManager implements QuestionMediaManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NDE2NQ=="}, "originalCommit": {"oid": "466e31dd54f2a6c426ecbc1c780c7091970d9e62"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg2NjcwOQ==", "bodyText": "@seadowg If I use the ViewModel then I would be creating it using the widget context, and it will be there for all the widgets on the screen?\nI feel like avoiding using QuestionMediaManager too and using the previous implementation. That would mean there would be additional unit tests for the widgets. Will that be fine?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r467866709", "createdAt": "2020-08-10T12:24:18Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaManager.java", "diffHunk": "@@ -24,7 +24,7 @@\n  * remember an original media file answer (no matter how many times this answer is replaced), in order\n  * to be able to restore the original answer in case of ignoring changes.\n  */\n-public enum MediaManager {\n+public enum MediaManager implements QuestionMediaManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NDE2NQ=="}, "originalCommit": {"oid": "466e31dd54f2a6c426ecbc1c780c7091970d9e62"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxODIxNw==", "bodyText": "I think if that's simpler to do right now that's a good plan. Maybe we can move the logic to a viewmodel in the future.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r468018217", "createdAt": "2020-08-10T16:09:56Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MediaManager.java", "diffHunk": "@@ -24,7 +24,7 @@\n  * remember an original media file answer (no matter how many times this answer is replaced), in order\n  * to be able to restore the original answer in case of ignoring changes.\n  */\n-public enum MediaManager {\n+public enum MediaManager implements QuestionMediaManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NDE2NQ=="}, "originalCommit": {"oid": "466e31dd54f2a6c426ecbc1c780c7091970d9e62"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjMzNDA0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjoyOToyNFrOHAJTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1OTo1MFrOHAKYfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxNDUzNw==", "bodyText": "Maybe this hasn't come through in previous comments and conversations but I'm very against the MediaManager being a singleton. Just to make it very clear I think the MediaManager should be a class (not an enum) and that this line should be:\nreturn (T) new FormSaveViewModel(System::currentTimeMillis, new DiskFormSaver(), analytics, new MediaManager());\nAs we talked about before we could get in trouble with the enum singleton implementation as its state will be carried between different instances of the FormEntryActivity. Also in tests the singleton would not be recreated for each test (as the static state is retained throughout the process) so any state in the MediaManager set up in one test might inadvertently affect another.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r469914537", "createdAt": "2020-08-13T12:29:24Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -370,7 +377,7 @@ public Factory(Analytics analytics) {\n         @NonNull\n         @Override\n         public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {\n-            return (T) new FormSaveViewModel(System::currentTimeMillis, new DiskFormSaver(), analytics);\n+            return (T) new FormSaveViewModel(System::currentTimeMillis, new DiskFormSaver(), analytics, MediaManager.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc611fcad1d2dd0f71457606251ff67bae652fa1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzMjE1OA==", "bodyText": "Oh right! I didn't think about it. It will cause problems when writing tests for other file widgets.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r469932158", "createdAt": "2020-08-13T12:59:50Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -370,7 +377,7 @@ public Factory(Analytics analytics) {\n         @NonNull\n         @Override\n         public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {\n-            return (T) new FormSaveViewModel(System::currentTimeMillis, new DiskFormSaver(), analytics);\n+            return (T) new FormSaveViewModel(System::currentTimeMillis, new DiskFormSaver(), analytics, MediaManager.INSTANCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxNDUzNw=="}, "originalCommit": {"oid": "fc611fcad1d2dd0f71457606251ff67bae652fa1"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjM0MjU4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/AudioWidgetTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjozMTo0MFrOHAJYvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjozMTo0MFrOHAJYvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkxNTgzOQ==", "bodyText": "You shouldn't need to do this as each test will get a new instance of TestWidgetActivity.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r469915839", "createdAt": "2020-08-13T12:31:40Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/AudioWidgetTest.java", "diffHunk": "@@ -98,6 +102,12 @@ public void setUp() {\n         when(activityAvailability.isActivityAvailable(any())).thenReturn(true);\n     }\n \n+    @After\n+    public void tearDown() {\n+        widgetActivity.originalFiles.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc611fcad1d2dd0f71457606251ff67bae652fa1"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjM5NjE1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo0NjozOFrOHAJ6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxMToxNlrOHANVtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNDM1Nw==", "bodyText": "I think we're getting close with the structure but I don't like that the FormEntryActivity implements the QuestionMediaManager. I think instead:\n\nthe AudioWidget should take a QuestionMediaManager in as a dependency at it's constructor rather than casting the context to one.\nthe WidgetFactory should also take a QuestionMediaManager in as one of the args to createWidgetFromPrompt so it can pass it to any widget that needs it.\nFormSaveViewModel#getMediaManager should return a QuestionMediaManager not a MediaManager\nFormSaveViewModel#getMediaManager should be passed as the QuestionMediaManager argument to WidgetFactory#createWidgetFromPrompt\nQuitFormDialogFragment  should call viewModel.getMediaManager().revertChanges rather than relying on the static singleton instance\n\nI'm not sure if I like that currently the QuestionMediaManager is simply owned by the FromSaveViewModel and then exposes it. I'm thinking that potentially the FormSaveViewModel could implement the QuestionMediaManager interface and then there would be no need for the MediaManager class. In that world the \"revert\" call (in QuiteFormDialogFragment could just be part of the logic FormSaveViewModel#removeTempInstance.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r469924357", "createdAt": "2020-08-13T12:46:38Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2674,6 +2675,16 @@ public void onCancelFormLoading() {\n         finish();\n     }\n \n+    @Override\n+    public void deleteOriginalFile(String questionIndex, String fileName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc611fcad1d2dd0f71457606251ff67bae652fa1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MDU5Ng==", "bodyText": "Nice idea @seadowg, and Thanks for explaining so well. I implemented all the functionality of MediaManager in FormSaveViewModel, as you said if we have the FormSaveViewModel implements QuestionMediaManager, then MediaManager class is no longer required.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r469980596", "createdAt": "2020-08-13T14:11:16Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2674,6 +2675,16 @@ public void onCancelFormLoading() {\n         finish();\n     }\n \n+    @Override\n+    public void deleteOriginalFile(String questionIndex, String fileName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNDM1Nw=="}, "originalCommit": {"oid": "fc611fcad1d2dd0f71457606251ff67bae652fa1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDUwNTI3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTowMDoyN1rOHAwi_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDo1NTowNFrOHDje1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzQzOA==", "bodyText": "Do we need to do this in onCleared() as well? Have you played around with the behaviour when \"Don't save activities\" is enabled? It might be good to give that a go and see if we need to handle the case when we leave the app, Android kills the process, and then we return to the app. Would files get left undeleted but on in the form in this case? Would things break?\nLet me know if you have questions about trying that out!", "url": "https://github.com/getodk/collect/pull/4006#discussion_r470557438", "createdAt": "2020-08-14T11:00:27Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -126,6 +127,7 @@ public void removeTempInstance() {\n                 FileUtils.purgeMediaPath(instanceFolder);\n             }\n         }\n+        releaseMediaManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwNzM3NQ==", "bodyText": "This is an interesting case. I will try that out with all the media widgets.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r470607375", "createdAt": "2020-08-14T12:58:08Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -126,6 +127,7 @@ public void removeTempInstance() {\n                 FileUtils.purgeMediaPath(instanceFolder);\n             }\n         }\n+        releaseMediaManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzQzOA=="}, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYyMDY1OA==", "bodyText": "I tried clearing the originalFiles and recentFiles HashMap in onCleared(), when Don't keep activities is turned on. I didn't find any anomaly in saving answers to the widgets, as I think, the answer is already saved with the widget, so clearing the files won't cause any break. Am I missing some test case here?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r470620658", "createdAt": "2020-08-14T13:23:42Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -126,6 +127,7 @@ public void removeTempInstance() {\n                 FileUtils.purgeMediaPath(instanceFolder);\n             }\n         }\n+        releaseMediaManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzQzOA=="}, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNzQ0OA==", "bodyText": "Here's the problem I found:\n\nEnabled \"Don't keep activities\"\nOpen the \"All widgets form\"\nGo to the file widget\nSelect a file\nSelect a different file\nGo to the hierarchy view with the arrow button\nPress \"Go To End\"\nSave and exit the form\n\nIf you now go to the \"Device File Explorer\" and check the instance dir (sdcard/odk/instances and then the newest dir) you'll see both the files you've selected are still in the directory. I'm guessing this is because when the activity is killed the view model state is wiped with the activity and the originalFiles list will be empty when we return to the FormEntryActivity from the hierarchy screen. Before (on master) this worked because the MediaManager was a process level singleton and so state would be retained.\nIt feels to me like it would be a lot nicer if when the form was saved or (or ignore changes is hit) it just deleted any files not being used in the form but that could require a lot of rework. I'm thinking we should use the new Saved State module to persist originalFiles between activity instances (as opposed to going back to a process singleton) and then file an issue around carrying out the rework.\nI'd like to pull in @lognaturel and @grzesiek2010 for sanity checks here though!", "url": "https://github.com/getodk/collect/pull/4006#discussion_r472137448", "createdAt": "2020-08-18T12:25:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -126,6 +127,7 @@ public void removeTempInstance() {\n                 FileUtils.purgeMediaPath(instanceFolder);\n             }\n         }\n+        releaseMediaManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzQzOA=="}, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4OTEwOA==", "bodyText": "This case does seem possible if someone needs to get clarification on what file to attach, for example. Certainly it'd be best not to have a known regression in behavior.\nWe haven't used the saved state module yet. It might be simpler to use onSavedInstanceState. But yes, saving originalFiles between activity instances for now seems good.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r473489108", "createdAt": "2020-08-20T00:55:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -126,6 +127,7 @@ public void removeTempInstance() {\n                 FileUtils.purgeMediaPath(instanceFolder);\n             }\n         }\n+        releaseMediaManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzQzOA=="}, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDUwNjQ1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTowMDo1M1rOHAwjoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMTowMDo1M1rOHAwjoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NzYwMA==", "bodyText": "Hmmm. Little worried about the viewmodel being passed into an async task here... It's another awkward change but I think really what should happen here is that a list of files to save should get passed into the save task. Does that make sense? In that world we wouldn't need saveChanges (as it would be handled in DiskFormSaver.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r470557600", "createdAt": "2020-08-14T11:00:53Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -171,7 +173,7 @@ public String getReason() {\n     }\n \n     private void saveToDisk(SaveRequest saveRequest) {\n-        saveTask = new SaveTask(saveRequest, formSaver, formController, mediaManager, new SaveTask.Listener() {\n+        saveTask = new SaveTask(saveRequest, formSaver, formController, this, new SaveTask.Listener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2008cb2b2f01e6fa6f5b56d3210b4b038c485c6f"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODIwMDQ5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMToyNTo1NlrOHGTjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzoxNzozMFrOHGXnPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mzc4Mw==", "bodyText": "This could still be set in the constructor right? Could the constructor not just call super then assign the field?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476373783", "createdAt": "2020-08-25T11:25:56Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -398,20 +420,21 @@ protected void onPostExecute(SaveToDiskResult saveToDiskResult) {\n         }\n     }\n \n-    public static class Factory implements ViewModelProvider.Factory {\n-\n-        private final Analytics analytics;\n+    public static class Factory extends AbstractSavedStateViewModelFactory {\n+        private Analytics analytics;\n \n+        public Factory(@NonNull SavedStateRegistryOwner owner, @Nullable Bundle defaultArgs) {\n+            super(owner, defaultArgs);\n+        }\n \n-        public Factory(Analytics analytics) {\n+        public void setAnalytics(Analytics analytics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9650495f75e4643076ab868012009114bbd1495e"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0MDM4MA==", "bodyText": "I forgot to change this. I changed the structure when I was trying different things.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476440380", "createdAt": "2020-08-25T13:17:30Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -398,20 +420,21 @@ protected void onPostExecute(SaveToDiskResult saveToDiskResult) {\n         }\n     }\n \n-    public static class Factory implements ViewModelProvider.Factory {\n-\n-        private final Analytics analytics;\n+    public static class Factory extends AbstractSavedStateViewModelFactory {\n+        private Analytics analytics;\n \n+        public Factory(@NonNull SavedStateRegistryOwner owner, @Nullable Bundle defaultArgs) {\n+            super(owner, defaultArgs);\n+        }\n \n-        public Factory(Analytics analytics) {\n+        public void setAnalytics(Analytics analytics) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mzc4Mw=="}, "originalCommit": {"oid": "9650495f75e4643076ab868012009114bbd1495e"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODIxMzMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTozMDowNVrOHGTq9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowNToyNFrOHGfLIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3NTc5Nw==", "bodyText": "Do we need to do this if we're also handling it in markOriginalFileOrDelete (same for the RECENT_FILES)?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476375797", "createdAt": "2020-08-25T11:30:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -85,7 +84,9 @@ public FormSaveViewModel(SavedStateHandle stateHandle, Clock clock, FormSaver fo\n \n     @Override\n     protected void onCleared() {\n-        releaseMediaManager();\n+        originalFiles.clear();\n+        recentFiles.clear();\n+\n         stateHandle.set(ORIGINAL_FILES, originalFiles);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f4ef962bf2e044db7eb2be04a752e281fcc7e2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0MjUxNQ==", "bodyText": "Hi @seadowg! Do you mean if I need the onCleared method or not?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476442515", "createdAt": "2020-08-25T13:20:41Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -85,7 +84,9 @@ public FormSaveViewModel(SavedStateHandle stateHandle, Clock clock, FormSaver fo\n \n     @Override\n     protected void onCleared() {\n-        releaseMediaManager();\n+        originalFiles.clear();\n+        recentFiles.clear();\n+\n         stateHandle.set(ORIGINAL_FILES, originalFiles);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3NTc5Nw=="}, "originalCommit": {"oid": "a0f4ef962bf2e044db7eb2be04a752e281fcc7e2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NDI1Nw==", "bodyText": "I don't think we need anything in here.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476564257", "createdAt": "2020-08-25T16:05:24Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -85,7 +84,9 @@ public FormSaveViewModel(SavedStateHandle stateHandle, Clock clock, FormSaver fo\n \n     @Override\n     protected void onCleared() {\n-        releaseMediaManager();\n+        originalFiles.clear();\n+        recentFiles.clear();\n+\n         stateHandle.set(ORIGINAL_FILES, originalFiles);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3NTc5Nw=="}, "originalCommit": {"oid": "a0f4ef962bf2e044db7eb2be04a752e281fcc7e2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODQ3OTUwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjo0MToxMVrOHGWKxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMjo0MToxMVrOHGWKxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQxNjcxMA==", "bodyText": "It looks like all these new tests are mainly there to drive out the use of SavedStateHandle. I think a better way to test it would be more functionally by checking that if I call the methods that set state then use that saved state to create another view model then I get the behaviour I expect (probably that save or ignore do the right thing). This checks that the values are loaded from save state as well as written to it and also means we probably just need one test.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476416710", "createdAt": "2020-08-25T12:41:11Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -368,6 +395,47 @@ public void resumeFormEntry_clearsSaveResult() {\n         assertThat(saveResult.getValue(), equalTo(null));\n     }\n \n+    @Test\n+    public void markOriginalFileOrDelete_whenFileNameIsEmpty_doesNotSaveFileForDelete() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35225c3250a70e5771ee61e1bbb71df30dc06731"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTM5NDg2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowMToxOFrOHGe_-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowMjoyMlrOHGfCvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2MTQwMQ==", "bodyText": "I think this should check that the files are deleted etc (so check the correct calls are made to mediaUtils) rather than checking the savedStateHandle).", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476561401", "createdAt": "2020-08-25T16:01:18Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -353,6 +353,24 @@ public void whenFormSaverFinishes_mediaManagerIsCleared() {\n         assertThat(recentFiles.isEmpty(), equalTo(true));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_onRecreatingFormSaveViewModel_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        FormSaveViewModel restoredViewModel = new FormSaveViewModel(savedStateHandle, () -> CURRENT_TIME, formSaver, mediaUtils, null);\n+        restoredViewModel.formLoaded(formController);\n+\n+        restoredViewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", false);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "205686892a07dd9ff9eee2a1fb0737bbabbafc2f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2MjExMA==", "bodyText": "Actually so maybe we only need markOriginalFileOrDelete_whenQuestionIndexHasAnswer_onRecreatingViewModel_deletesFile? Unless there are reasons to check savedStateHandle directly.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476562110", "createdAt": "2020-08-25T16:02:22Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -353,6 +353,24 @@ public void whenFormSaverFinishes_mediaManagerIsCleared() {\n         assertThat(recentFiles.isEmpty(), equalTo(true));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_onRecreatingFormSaveViewModel_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        FormSaveViewModel restoredViewModel = new FormSaveViewModel(savedStateHandle, () -> CURRENT_TIME, formSaver, mediaUtils, null);\n+        restoredViewModel.formLoaded(formController);\n+\n+        restoredViewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", false);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2MTQwMQ=="}, "originalCommit": {"oid": "205686892a07dd9ff9eee2a1fb0737bbabbafc2f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTQxMTU0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowNTowNlrOHGfKQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNjowNTowNlrOHGfKQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU2NDAzMg==", "bodyText": "I don't think we need to clear these variables out here. They are part of the ViewModel which will be removed from memory.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r476564032", "createdAt": "2020-08-25T16:05:06Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -26,37 +29,66 @@\n import org.odk.collect.android.tasks.SaveToDiskResult;\n import org.odk.collect.android.utilities.FileUtils;\n import org.odk.collect.android.utilities.MediaUtils;\n+import org.odk.collect.android.utilities.QuestionMediaManager;\n import org.odk.collect.utilities.Clock;\n \n import java.io.File;\n \n import timber.log.Timber;\n+\n+import java.util.Collection;\n import java.util.HashMap;\n+import java.util.Map;\n \n import static org.odk.collect.android.tasks.SaveFormToDisk.SAVED;\n import static org.odk.collect.android.tasks.SaveFormToDisk.SAVED_AND_EXIT;\n import static org.odk.collect.android.utilities.StringUtils.isBlank;\n \n-public class FormSaveViewModel extends ViewModel implements ProgressDialogFragment.Cancellable, RequiresFormController {\n+public class FormSaveViewModel extends ViewModel implements ProgressDialogFragment.Cancellable, RequiresFormController, QuestionMediaManager {\n+    public static final String ORIGINAL_FILES = \"originalFiles\";\n+    public static final String RECENT_FILES = \"recentFiles\";\n \n+    private final SavedStateHandle stateHandle;\n     private final Clock clock;\n     private final FormSaver formSaver;\n+    private final MediaUtils mediaUtils;\n \n-    private String reason = \"\";\n     private final MutableLiveData<SaveResult> saveResult = new MutableLiveData<>(null);\n+    private String reason = \"\";\n+\n+    private Map<String, String> originalFiles = new HashMap<>();\n+    private Map<String, String> recentFiles = new HashMap<>();\n \n     @Nullable\n     private FormController formController;\n \n     @Nullable\n-    private AsyncTask saveTask;\n+    private AsyncTask<Void, String, SaveToDiskResult> saveTask;\n \n     private final Analytics analytics;\n \n-    public FormSaveViewModel(Clock clock, FormSaver formSaver, Analytics analytics) {\n+    public FormSaveViewModel(SavedStateHandle stateHandle, Clock clock, FormSaver formSaver, MediaUtils mediaUtils, Analytics analytics) {\n+        this.stateHandle = stateHandle;\n         this.clock = clock;\n         this.formSaver = formSaver;\n+        this.mediaUtils = mediaUtils;\n         this.analytics = analytics;\n+\n+        if (stateHandle.get(ORIGINAL_FILES) != null) {\n+            originalFiles = stateHandle.get(ORIGINAL_FILES);\n+        }\n+        if (stateHandle.get(RECENT_FILES) != null) {\n+            recentFiles = stateHandle.get(RECENT_FILES);\n+        }\n+    }\n+\n+    @Override\n+    protected void onCleared() {\n+        originalFiles.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "205686892a07dd9ff9eee2a1fb0737bbabbafc2f"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDY5MjY0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTo1OTowNlrOHHS70A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzozODoxM1rOHHWtTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMjMwNA==", "bodyText": "I'm not sure you need this test and whenFormSaverFinishes_mediaManagerIsCleared. Could you explain it or do you think we should just delete this one?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477412304", "createdAt": "2020-08-26T15:59:06Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));\n+        assertThat(recentFiles.isEmpty(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void whenFormSaverFinishes_onRecreatingFormSaveViewModel_mediaManagerIsCleared() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3MDgwMQ==", "bodyText": "I think we can delete whenFormSaverFinishes_mediaManagerIsCleared. We do not have any other test to check whether mediaManager is released when form save finishes. I'm not sure is it is really important to check whether all files get deleted when form save task is finished.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477470801", "createdAt": "2020-08-26T17:32:41Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));\n+        assertThat(recentFiles.isEmpty(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void whenFormSaverFinishes_onRecreatingFormSaveViewModel_mediaManagerIsCleared() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMjMwNA=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3NDEyNg==", "bodyText": "Yup I agree. I think my comment below lays out one test that would capture what whenFormSaverFinishes_mediaManagerIsCleared is trying to test.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477474126", "createdAt": "2020-08-26T17:38:13Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));\n+        assertThat(recentFiles.isEmpty(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void whenFormSaverFinishes_onRecreatingFormSaveViewModel_mediaManagerIsCleared() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMjMwNA=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDcwMzE0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjowMToyMFrOHHTCVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDo0NzoyNlrOHIKvDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMzk3Mw==", "bodyText": "Instead of verifying the files here I think this test should run saveForm again and check that deleteImageFileFromMediaProvider is only called the first time. Does that make sense? Again, this is to test the intended behaviour rather than an implementation detail of that behaviour.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477413973", "createdAt": "2020-08-26T16:01:20Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4MjUwOA==", "bodyText": "To verify calls to deleteImageFileFromMediaProvider(), I should use actual new DisFormSaver() instead of FormSaver, right?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477482508", "createdAt": "2020-08-26T17:53:12Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMzk3Mw=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxMzY2Nw==", "bodyText": "Oh I just meant like you did in the other test and call saveForm on the view model. Does that make sense. The test is to verify that if we call save once and then call save again then we don't try and delete the files from the first save. That's my understanding anyway. Does that make sense?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477513667", "createdAt": "2020-08-26T18:48:49Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMzk3Mw=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNDgyOA==", "bodyText": "So pseudo code would be:\n\nset up files to be deleted/saved\ncall save on view model\ncheck files are saved/deleted correctly (using mock of MediaUtils)\ncall save again\ncheck no files are saved/deleted (you can pass once() to verify to check it method has only been called once)", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477514828", "createdAt": "2020-08-26T18:51:00Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMzk3Mw=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyNjU0MA==", "bodyText": "Hi! the unit test saveForm_runsWith_correctFiles() is failing. Sorry I meant to name it saveForm_savesCorrectFiles(). I confirmed the failure is bacause of calling clearMediaFiles() in OnComplete, but that should not effect the FakeFormSaver, right?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r478326540", "createdAt": "2020-08-27T10:47:26Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -325,6 +338,39 @@ public void whenFormSaverFinishes_isSaving_returnsFalse() {\n         assertThat(viewModel.isSaving(), equalTo(false));\n     }\n \n+    @Test\n+    public void whenFormSaverFinishes_mediaManagerIsCleared() {\n+        viewModel.markOriginalFileOrDelete(\"index\", \"blah\");\n+        viewModel.replaceRecentFileForQuestion(\"index\", \"blah\");\n+\n+        viewModel.saveForm(Uri.parse(\"file://form\"), true, \"\", true);\n+        whenFormSaverFinishes(SaveFormToDisk.SAVED);\n+\n+        Map<String, String> originalFiles = savedStateHandle.get(FormSaveViewModel.ORIGINAL_FILES);\n+        Map<String, String> recentFiles = savedStateHandle.get(FormSaveViewModel.RECENT_FILES);\n+\n+        assertThat(originalFiles.isEmpty(), equalTo(true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMzk3Mw=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDcwNTQyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjowMTo1OFrOHHTD5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjowMTo1OFrOHHTD5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxNDM3Mw==", "bodyText": "It looks like you don't need these 4 lines for anything?", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477414373", "createdAt": "2020-08-26T16:01:58Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/audit/FormSaveViewModelTest.java", "diffHunk": "@@ -59,12 +65,19 @@ public void setup() {\n         formController = mock(FormController.class);\n         logger = mock(AuditEventLogger.class);\n         formSaver = mock(FormSaver.class);\n+        mediaUtils = mock(MediaUtils.class);\n         Analytics analytics = mock(Analytics.class);\n \n         when(formController.getAuditEventLogger()).thenReturn(logger);\n         when(logger.isChangeReasonRequired()).thenReturn(false);\n \n-        viewModel = new FormSaveViewModel(() -> CURRENT_TIME, formSaver, analytics);\n+        Map<String, String> originalFiles = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTM2MzI0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo1OTo0NVrOHHZf1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODozMDoxMVrOHIF7XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxOTgyOA==", "bodyText": "When saveToDisk() task is complete, I just call clearMediaFiles() . So when I try to verify call to mediaUtils.deleteImageFileFromMediaProvider(), the test fails.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r477519828", "createdAt": "2020-08-26T18:59:45Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -253,8 +279,35 @@ public AuditEventLogger getAuditEventLogger() {\n         return formController.getAuditEventLogger();\n     }\n \n-    public static class SaveResult {\n+    @Override\n+    public void markOriginalFileOrDelete(String questionIndex, String fileName) {\n+        if (questionIndex != null && fileName != null) {\n+            if (originalFiles.containsKey(questionIndex)) {\n+                mediaUtils.deleteImageFileFromMediaProvider(fileName);\n+            } else {\n+                originalFiles.put(questionIndex, fileName);\n+                stateHandle.set(ORIGINAL_FILES, originalFiles);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void replaceRecentFileForQuestion(String questionIndex, String fileName) {\n+        if (questionIndex != null && fileName != null) {\n+            if (recentFiles.containsKey(questionIndex)) {\n+                mediaUtils.deleteImageFileFromMediaProvider(recentFiles.get(questionIndex));\n+            }\n+            recentFiles.put(questionIndex, fileName);\n+            stateHandle.set(RECENT_FILES, recentFiles);\n+        }\n+    }\n \n+    private void clearMediaFiles() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI0Nzc3Mw==", "bodyText": "Ah sorry because the formSaver is mocked! My bad. The way to verify things are set up correctly then is to assert on the files passed to the fromSaver (as part of verify) instead of the call the mediaUtils.", "url": "https://github.com/getodk/collect/pull/4006#discussion_r478247773", "createdAt": "2020-08-27T08:30:11Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -253,8 +279,35 @@ public AuditEventLogger getAuditEventLogger() {\n         return formController.getAuditEventLogger();\n     }\n \n-    public static class SaveResult {\n+    @Override\n+    public void markOriginalFileOrDelete(String questionIndex, String fileName) {\n+        if (questionIndex != null && fileName != null) {\n+            if (originalFiles.containsKey(questionIndex)) {\n+                mediaUtils.deleteImageFileFromMediaProvider(fileName);\n+            } else {\n+                originalFiles.put(questionIndex, fileName);\n+                stateHandle.set(ORIGINAL_FILES, originalFiles);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void replaceRecentFileForQuestion(String questionIndex, String fileName) {\n+        if (questionIndex != null && fileName != null) {\n+            if (recentFiles.containsKey(questionIndex)) {\n+                mediaUtils.deleteImageFileFromMediaProvider(recentFiles.get(questionIndex));\n+            }\n+            recentFiles.put(questionIndex, fileName);\n+            stateHandle.set(RECENT_FILES, recentFiles);\n+        }\n+    }\n \n+    private void clearMediaFiles() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxOTgyOA=="}, "originalCommit": {"oid": "88e97298c0cd228f145490c5763455721eba737d"}, "originalPosition": 137}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3257, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}