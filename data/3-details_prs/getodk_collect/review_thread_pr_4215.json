{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTY1MTQ4", "number": 4215, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDowMzoyN1rOE3t7pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo1MDoyM1rOE6Mgbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODU5Njg0OnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDowMzoyN1rOHxOczw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDowMzoyN1rOHxOczw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3OTAyMw==", "bodyText": "Forgot this earlier", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521379023", "createdAt": "2020-11-11T14:03:27Z", "author": {"login": "seadowg"}, "path": ".circleci/config.yml", "diffHunk": "@@ -63,6 +63,9 @@ jobs:\n       - run:\n           name: Run audioclips unit tests\n           command: ./gradlew -PdisablePreDex --no-daemon --max-workers=2 audioclips:testDebug\n+      - run:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a97d4fe2e53baf8633701ec8cf23949b2f0b081"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODYwNDMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryMenuDelegate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDowNToyMlrOHxOhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDowNToyMlrOHxOhlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM4MDI0NA==", "bodyText": "Changing from a switch to an if is now suggested by Android Studio.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521380244", "createdAt": "2020-11-11T14:05:22Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryMenuDelegate.java", "diffHunk": "@@ -82,40 +94,43 @@ public void onPrepareOptionsMenu(Menu menu) {\n             backgroundLocation.setChecked(GeneralSharedPreferences.getInstance().getBoolean(KEY_BACKGROUND_LOCATION, true));\n         }\n \n-        menu.findItem(R.id.menu_add_repeat).setVisible(getFormEntryViewModel().canAddRepeat());\n+        menu.findItem(R.id.menu_add_repeat).setVisible(formEntryViewModel.canAddRepeat());\n     }\n \n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n-        switch (item.getItemId()) {\n-            case R.id.menu_add_repeat:\n-                getFormSaveViewModel().saveAnswersForScreen(answersProvider.getAnswers());\n-                getFormEntryViewModel().promptForNewRepeat();\n-                formIndexAnimationHandler.handle(getFormEntryViewModel().getCurrentIndex());\n-                return true;\n-\n-            case R.id.menu_preferences:\n+        if (item.getItemId() == R.id.menu_add_repeat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a97d4fe2e53baf8633701ec8cf23949b2f0b081"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQ3ODk1OnYy", "diffSide": "RIGHT", "path": "strings/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoyNTo0NlrOHxgihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoyNTo0NlrOHxgihA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NTM5Ng==", "bodyText": "now -> know", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521675396", "createdAt": "2020-11-11T22:25:46Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -702,10 +702,22 @@\n     <string name=\"security_error\">Collect can\\'t connect securely to the server at %s. Did you enter the URL correctly?</string>\n     <string name=\"failure\">Failure</string>\n     <string name=\"form_update_succeeded\">Form update succeeded</string>\n+\n+    <!-- Title for setting to let the user switch between using Collect or another app (on the device) for recording audio -->\n     <string name=\"external_app_recording\">Use external app for audio recording</string>\n+\n+    <!-- Text for button that stops audio recording  -->\n     <string name=\"stop_recording\">Stop</string>\n+\n+    <!-- Text to let the user now a recording is in progress  -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e59cfddae93b4e70ba97b67da0bbea371e6f2fb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQ4MDY3OnYy", "diffSide": "RIGHT", "path": "strings/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoyNjoyNFrOHxgjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoyNToyMFrOHzznSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NTY1NA==", "bodyText": "Isn't this sometimes chosen and sometimes recorded?", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521675654", "createdAt": "2020-11-11T22:26:24Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -702,10 +702,22 @@\n     <string name=\"security_error\">Collect can\\'t connect securely to the server at %s. Did you enter the URL correctly?</string>\n     <string name=\"failure\">Failure</string>\n     <string name=\"form_update_succeeded\">Form update succeeded</string>\n+\n+    <!-- Title for setting to let the user switch between using Collect or another app (on the device) for recording audio -->\n     <string name=\"external_app_recording\">Use external app for audio recording</string>\n+\n+    <!-- Text for button that stops audio recording  -->\n     <string name=\"stop_recording\">Stop</string>\n+\n+    <!-- Text to let the user now a recording is in progress  -->\n     <string name=\"recording\">Recording\u2026</string>\n+\n+    <!-- Title of Android Notification Channel for audio recording notifications  -->\n     <string name=\"recording_channel\">Audio recording</string>\n-    <string name=\"play_audio\">Play audio</string>\n+\n+    <!-- Text for button that plays audio clip  -->\n+    <string name=\"play_audio\">Play chosen audio</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e59cfddae93b4e70ba97b67da0bbea371e6f2fb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA4NTA2Nw==", "bodyText": "Yup good catch.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r524085067", "createdAt": "2020-11-16T10:25:20Z", "author": {"login": "seadowg"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -702,10 +702,22 @@\n     <string name=\"security_error\">Collect can\\'t connect securely to the server at %s. Did you enter the URL correctly?</string>\n     <string name=\"failure\">Failure</string>\n     <string name=\"form_update_succeeded\">Form update succeeded</string>\n+\n+    <!-- Title for setting to let the user switch between using Collect or another app (on the device) for recording audio -->\n     <string name=\"external_app_recording\">Use external app for audio recording</string>\n+\n+    <!-- Text for button that stops audio recording  -->\n     <string name=\"stop_recording\">Stop</string>\n+\n+    <!-- Text to let the user now a recording is in progress  -->\n     <string name=\"recording\">Recording\u2026</string>\n+\n+    <!-- Title of Android Notification Channel for audio recording notifications  -->\n     <string name=\"recording_channel\">Audio recording</string>\n-    <string name=\"play_audio\">Play audio</string>\n+\n+    <!-- Text for button that plays audio clip  -->\n+    <string name=\"play_audio\">Play chosen audio</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NTY1NA=="}, "originalCommit": {"oid": "6e59cfddae93b4e70ba97b67da0bbea371e6f2fb"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQ4NDM5OnYy", "diffSide": "RIGHT", "path": "strings/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoyNzozN1rOHxglnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoyNzozN1rOHxglnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3NjE4OA==", "bodyText": "How about \"You must stop recording before leaving this screen.\"", "url": "https://github.com/getodk/collect/pull/4215#discussion_r521676188", "createdAt": "2020-11-11T22:27:37Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -720,4 +720,7 @@\n \n     <!-- Text to let the user know a file is being saved  -->\n     <string name=\"saving_file\">Saving file</string>\n+\n+    <!-- Text in dialog that instructs the user to stop recording audio before leaving the form -->\n+    <string name=\"recording_warning\">Must stop recording before moving on!</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4838e6bb6d4f6765e716294bd2c1c446c1893643"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDU1NTU2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjozNToxNFrOHzBxFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjozNToxNFrOHzBxFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2ODM3NQ==", "bodyText": "Looks like it's used to keep track of which questions' guidance hints are expanded and the search text for selects with the search appearance. Would be great to move all that to a view model, I think.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r523268375", "createdAt": "2020-11-13T22:35:14Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {\n+            // We're tryin to move forwards at the end of the form so just cancel\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        } else if (direction == BACKWARDS && !allowMovingBackwards) {\n+            // We're not allowed to move backwards but trying to so just cancel\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                            if (event != EVENT_PROMPT_NEW_REPEAT) {\n-                                // Returning here prevents the same view sliding when user is on the first screen\n-                                return;\n-                            }\n-                        }\n+        state = null; // This is needed for something but is definitely suspect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4838e6bb6d4f6765e716294bd2c1c446c1893643"}, "originalPosition": 211}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDU2NTM5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjo0MDoxMVrOHzB3BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDo0NzowMFrOHz1Efw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw==", "bodyText": "Why pull this direction-specific stuff out? Seems it should either be in the switch below or in the direction specific methods. Or if it's pulled out and their bodies are the same maybe it should be a single conditional.\nIf pulling it out, why not also pull the analogous beginning of form test out here? (Not that I think it's actually possible to be at the beginning of form event)", "url": "https://github.com/getodk/collect/pull/4215#discussion_r523269893", "createdAt": "2020-11-13T22:40:11Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4838e6bb6d4f6765e716294bd2c1c446c1893643"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwNTQyOQ==", "bodyText": "I initially pulled all these out so the method had more of a \"guard clauses followed by the happy logic\" structure as it was really cluttered. That helped me work out what I could move out to the view models. I'll try putting them back into the switch now and see how it feels though.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r524105429", "createdAt": "2020-11-16T10:43:50Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw=="}, "originalCommit": {"oid": "4838e6bb6d4f6765e716294bd2c1c446c1893643"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwODkyNw==", "bodyText": "Ah it's good to keep them where they are so state = null happens in the same place. Initially that had to be in both parts of the switch. It would be cool to pair on this now you've got some context in your head. I'll ping you on Slack.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r524108927", "createdAt": "2020-11-16T10:47:00Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1476,99 +1467,77 @@ public boolean dispatchTouchEvent(MotionEvent mv) {\n         return handled; // this is always true\n     }\n \n-    /**\n-     * Determines what should be displayed on the screen. Possible options are:\n-     * a question, an ask repeat dialog, or the submit screen. Also saves\n-     * answers to the data model after checking constraints.\n-     */\n-    public void showNextView() {\n-        state = null;\n-        try {\n-            FormController formController = getFormController();\n-            if (saveBeforeNextView(formController)) {\n-                return;\n-            }\n-\n-            int originalEvent = formController.getEvent();\n-            int event = formController.stepToNextScreenEvent();\n-\n-            // Helps prevent transition animation at the end of the form (if user swipes left\n-            // she will stay on the same screen)\n-            if (originalEvent == event && originalEvent == FormEntryController.EVENT_END_OF_FORM) {\n-                swipeHandler.setBeenSwiped(false);\n-                return;\n-            }\n+    @Override\n+    public void onSwipeForward() {\n+        moveScreen(FORWARDS);\n+    }\n \n-            formIndexAnimationHandler.handle(getFormController().getFormIndex());\n-        } catch (JavaRosaException e) {\n-            Timber.d(e);\n-            createErrorDialog(e.getCause().getMessage(), DO_NOT_EXIT);\n-        }\n+    @Override\n+    public void onSwipeBackward() {\n+        moveScreen(BACKWARDS);\n     }\n \n-    /**\n-     * If moving backwards is allowed, displays the view for the previous question or field list.\n-     * Steps the global {@link FormController} to the previous question and saves answers to the\n-     * data model without checking constraints.\n-     */\n-    public void showPreviousView() {\n-        if (allowMovingBackwards) {\n-            state = null;\n-            FormController formController = getFormController();\n-            if (formController != null) {\n-                // The answer is saved on a back swipe, but question constraints are ignored.\n-                if (formController.currentPromptIsQuestion()) {\n-                    saveAnswersForCurrentScreen(DO_NOT_EVALUATE_CONSTRAINTS);\n-                }\n+    private void moveScreen(Direction direction) {\n+        FormController formController = getFormController();\n+        if (formController == null) {\n+            Timber.w(\"FormController has a null value\");\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                try {\n-                    if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                        int event = formController.stepToPreviousScreenEvent();\n+        if (audioRecorderViewModel.isRecording().getValue()) {\n+            // We want the user to stop recording before changing screens\n+            DialogUtils.showIfNotShowing(RecordingWarningDialogFragment.class, getSupportFragmentManager());\n+            swipeHandler.setBeenSwiped(false);\n+            return;\n+        }\n \n-                        // If we are the beginning of the form, there is no previous view to show\n-                        if (event == FormEntryController.EVENT_BEGINNING_OF_FORM) {\n-                            event = formController.stepToNextScreenEvent();\n-                            swipeHandler.setBeenSwiped(false);\n+        if (direction == FORWARDS && formController.getEvent() == FormEntryController.EVENT_END_OF_FORM) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI2OTg5Mw=="}, "originalCommit": {"oid": "4838e6bb6d4f6765e716294bd2c1c446c1893643"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDU1MDYwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0NjoyOFrOH1G1mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwOTo0NDozMlrOH1lPIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0ODYwMw==", "bodyText": "Maybe a reason to go with if/else?", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525448603", "createdAt": "2020-11-17T19:46:28Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1506,7 +1508,11 @@ private void moveScreen(Direction direction) {\n \n                 formEntryViewModel.moveBackward();\n                 formIndexAnimationHandler.handle(formController.getFormIndex());\n-                break;\n+                return true;\n+\n+            default:\n+                // Java switch statements aren't smart enough to know there are only two possibilities", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e73790d089af08b4a7e613768b430d76e4fd1b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk0NjY1OA==", "bodyText": "Yeah, you're right. I just miss when so much. It feels like all recent signs (Android tools changes, me making mistakes) are pointing to avoid switch altogether. I'll change this.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525946658", "createdAt": "2020-11-18T09:44:32Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1506,7 +1508,11 @@ private void moveScreen(Direction direction) {\n \n                 formEntryViewModel.moveBackward();\n                 formIndexAnimationHandler.handle(formController.getFormIndex());\n-                break;\n+                return true;\n+\n+            default:\n+                // Java switch statements aren't smart enough to know there are only two possibilities", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0ODYwMw=="}, "originalCommit": {"oid": "49e73790d089af08b4a7e613768b430d76e4fd1b"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDU2Njg3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0ODo1M1rOH1HA2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDo0NDo0N1rOH1ntDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg==", "bodyText": "Why doesn't this also move to moveScreen?", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525451482", "createdAt": "2020-11-17T19:48:53Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -128,6 +134,44 @@ public boolean canAddRepeat() {\n         }\n     }\n \n+    public void moveForward() {\n+        try {\n+            formController.stepToNextScreenEvent();\n+        } catch (JavaRosaException e) {\n+            error.setValue(e.getCause().getMessage());\n+            return;\n+        }\n+\n+        formController.getAuditEventLogger().flush(); // Close events waiting for an end time\n+    }\n+\n+    public void moveBackward() {\n+        if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk0NzQwNQ==", "bodyText": "Ah yeah I got distracted by the search/rotate problem and didn't clean this up. Will move it around today.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525947405", "createdAt": "2020-11-18T09:45:34Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -128,6 +134,44 @@ public boolean canAddRepeat() {\n         }\n     }\n \n+    public void moveForward() {\n+        try {\n+            formController.stepToNextScreenEvent();\n+        } catch (JavaRosaException e) {\n+            error.setValue(e.getCause().getMessage());\n+            return;\n+        }\n+\n+        formController.getAuditEventLogger().flush(); // Close events waiting for an end time\n+    }\n+\n+    public void moveBackward() {\n+        if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg=="}, "originalCommit": {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NzA4Nw==", "bodyText": "Realized we don't actually need this check at all so avoiding have it anywhere.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525987087", "createdAt": "2020-11-18T10:44:47Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -128,6 +134,44 @@ public boolean canAddRepeat() {\n         }\n     }\n \n+    public void moveForward() {\n+        try {\n+            formController.stepToNextScreenEvent();\n+        } catch (JavaRosaException e) {\n+            error.setValue(e.getCause().getMessage());\n+            return;\n+        }\n+\n+        formController.getAuditEventLogger().flush(); // Close events waiting for an end time\n+    }\n+\n+    public void moveBackward() {\n+        if (formController.getEvent() != FormEntryController.EVENT_BEGINNING_OF_FORM) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MTQ4Mg=="}, "originalCommit": {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDU3Nzc1OnYy", "diffSide": "RIGHT", "path": "strings/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo1MDoyM1rOH1HIEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTozMTo1N1rOH1dybA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MzMzMQ==", "bodyText": "This was an oversight when removing the SMS feature. Would be great to remove it entirely at some point.", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525453331", "createdAt": "2020-11-17T19:50:23Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -525,9 +525,9 @@\n     <string name=\"invalid_email_address\">Invalid email address!</string>\n     <string name=\"sort_by\">Sort by</string>\n     <string name=\"server\">Server</string>\n-<!--\n-    <string name=\"submission_transport_admin_setting\">Submission transport</string>\n--->\n+    <!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgyNDYyMA==", "bodyText": "I'll do it in #4072", "url": "https://github.com/getodk/collect/pull/4215#discussion_r525824620", "createdAt": "2020-11-18T05:31:57Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -525,9 +525,9 @@\n     <string name=\"invalid_email_address\">Invalid email address!</string>\n     <string name=\"sort_by\">Sort by</string>\n     <string name=\"server\">Server</string>\n-<!--\n-    <string name=\"submission_transport_admin_setting\">Submission transport</string>\n--->\n+    <!--", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MzMzMQ=="}, "originalCommit": {"oid": "a13496203417ceba50c1927cc44c8483f8ad1fee"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3166, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}