{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNjk3MDIw", "number": 3848, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTo1NzozNlrOD-Lktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowNDowOFrOD-Ls3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTI3OTI3OnYy", "diffSide": "RIGHT", "path": "collect_app/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTo1NzozNlrOGYICZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTo1NzozNlrOGYICZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1MDY5NA==", "bodyText": "We need this for CountingTaskExecutorRule", "url": "https://github.com/getodk/collect/pull/3848#discussion_r427950694", "createdAt": "2020-05-20T11:57:36Z", "author": {"login": "seadowg"}, "path": "collect_app/build.gradle", "diffHunk": "@@ -327,6 +327,7 @@ dependencies {\n     androidTestImplementation \"org.mockito:mockito-android:3.3.3\"\n     androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n+    androidTestImplementation \"androidx.arch.core:core-testing:2.1.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542b2f74e170e993c1e16186bf97ce81420fe19b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTI4ODAwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/regression/AdminSettingsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowMDoxMVrOGYIH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowMDoxMVrOGYIH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1MjExNw==", "bodyText": "This test needed permissions but as we've seen before it's important to chain the rules so permissions are definitely granted before any Activities launch.", "url": "https://github.com/getodk/collect/pull/3848#discussion_r427952117", "createdAt": "2020-05-20T12:00:11Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/regression/AdminSettingsTest.java", "diffHunk": "@@ -1,20 +1,38 @@\n package org.odk.collect.android.regression;\n \n+import android.Manifest;\n+\n+import androidx.test.rule.GrantPermissionRule;\n import androidx.test.runner.AndroidJUnit4;\n \n+import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.RuleChain;\n import org.junit.runner.RunWith;\n+import org.odk.collect.android.support.CollectTestRule;\n+import org.odk.collect.android.support.ResetStateRule;\n import org.odk.collect.android.support.pages.AdminSettingsPage;\n-import org.odk.collect.android.support.pages.MainMenuPage;\n \n //Issue NODK-239\n @RunWith(AndroidJUnit4.class)\n-public class AdminSettingsTest extends BaseRegressionTest {\n+public class AdminSettingsTest {\n+\n+    public CollectTestRule rule = new CollectTestRule();\n+\n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE,\n+                    Manifest.permission.READ_PHONE_STATE\n+            ))\n+            .around(new ResetStateRule())\n+            .around(rule);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542b2f74e170e993c1e16186bf97ce81420fe19b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTI5NzMzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/CountingTaskExecutorIdlingResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowMzowOVrOGYIN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozMDozMFrOGbd3LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1MzYzOQ==", "bodyText": "There is some good docs on IdlingResource here. It seems Espresso is moving towards needing them more and more so it doesn't have to integrate with all the different scheduler mechanisms in Android (Handler, ArchTaskExectuor, coroutines and WorkManager to name a few).", "url": "https://github.com/getodk/collect/pull/3848#discussion_r427953639", "createdAt": "2020-05-20T12:03:09Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/CountingTaskExecutorIdlingResource.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.support;\n+\n+import androidx.arch.core.executor.testing.CountingTaskExecutorRule;\n+import androidx.test.espresso.IdlingResource;\n+\n+public class CountingTaskExecutorIdlingResource implements IdlingResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542b2f74e170e993c1e16186bf97ce81420fe19b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1Mzk5Nw==", "bodyText": "Did the person on the issue you filed about WorkManager and Espresso ever get back to you and was this the answer?", "url": "https://github.com/getodk/collect/pull/3848#discussion_r431453997", "createdAt": "2020-05-27T21:30:30Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/CountingTaskExecutorIdlingResource.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.support;\n+\n+import androidx.arch.core.executor.testing.CountingTaskExecutorRule;\n+import androidx.test.espresso.IdlingResource;\n+\n+public class CountingTaskExecutorIdlingResource implements IdlingResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1MzYzOQ=="}, "originalCommit": {"oid": "542b2f74e170e993c1e16186bf97ce81420fe19b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTMwMDEyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/FormEntryPage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowNDowOFrOGYIPyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjowNDowOFrOGYIPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk1NDEyMw==", "bodyText": "We might need to move all of our swipeToX helpers to this kind of style. It's definitely safer for us to have assertions with actions like gestures that can be performed on any screen.", "url": "https://github.com/getodk/collect/pull/3848#discussion_r427954123", "createdAt": "2020-05-20T12:04:08Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/FormEntryPage.java", "diffHunk": "@@ -54,6 +54,15 @@ public FormEntryPage swipeToNextQuestion(int repetitions) {\n         return this;\n     }\n \n+    public FormEntryPage swipeToNextRepeat(String repeatLabel, int repeatNumber) {\n+        tryAgainOnFail(() -> {\n+            onView(withId(R.id.questionholder)).perform(swipeLeft());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542b2f74e170e993c1e16186bf97ce81420fe19b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3372, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}