{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTU4Mjgy", "number": 3668, "title": "Fix build", "bodyText": "This fixes issues with the build that were caused by tests polluting each other. Key changes are:\n\nResetStateRule now resets app depdendencies, properly clears SharedPreferences and deletes both the scoped and non-scoped storage directories\nResetStateRule now allows you to override Dagger dependencies by passing it an AppDependencyModule\nActivityTestRule/IntentTestRule should now be put in test's RuleChain so that ResetStateRule and rules definitely run before it\nUses a new BackgroundWorkManager abstraction in StorageMigrator rather than having it talk directly to JobManager and WorkManager. This lets us test StorageMigrator outisde of Espresso (the Espresso tests were being flakey on CI)\n\nWhat has been done to verify that this works as intended?\nRan locally and on test lab.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThere are a couple of changes to StorageMigrator so it would be good to verify the core flows around storage migration again.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-03-03T20:28:44Z", "url": "https://github.com/getodk/collect/pull/3668", "merged": true, "mergeCommit": {"oid": "e458630033bda4d3ef87071a6d9d9d076970c78b"}, "closed": true, "closedAt": "2020-03-04T11:31:26Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKIjAUAH2gAyMzgzMTU4MjgyOjI0MDEwOWJhYjM2MDQzMTRiMjMyMjJkYjcyNDA3MmM5Y2I5MmE2NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKVHILgFqTM2ODY5NzIxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "240109bab3604314b23222db724072c9cb92a651", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/240109bab3604314b23222db724072c9cb92a651", "committedDate": "2020-03-03T20:42:48Z", "message": "Use BackgroundWorkManager abstraction to look up AutoSendWorker status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c15091be287844be29a33c02ff03ceecf855c0f0", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c15091be287844be29a33c02ff03ceecf855c0f0", "committedDate": "2020-03-03T20:43:39Z", "message": "Make sure apps sttate is reset before activity is launched in migration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4c7fc4b9b88a6b3c11925bae87bbc26af96c3a9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d4c7fc4b9b88a6b3c11925bae87bbc26af96c3a9", "committedDate": "2020-03-03T20:43:39Z", "message": "Reset Dagger deps as part of ResetStateRule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2bef018d2fcd274b17c434174d121bb4c891277", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d2bef018d2fcd274b17c434174d121bb4c891277", "committedDate": "2020-03-03T20:43:39Z", "message": "Move dependency overriding to ResetStateRule and make sure JavaRosa is reinitialized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ce97fa1b1c212e414d3e0711fceed28a5cb46f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/45ce97fa1b1c212e414d3e0711fceed28a5cb46f", "committedDate": "2020-03-03T20:43:39Z", "message": "Just clear directories - don't use app's reset logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "committedDate": "2020-03-03T20:43:39Z", "message": "Revert \"Just clear directories - don't use app's reset logic\"\n\nThis reverts commit 64f642dfeb6b2e1f89e4fd05af5b7aa993733f09."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf46de27fdc26fe78abfc0b8cfacf554f35b0b14", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/cf46de27fdc26fe78abfc0b8cfacf554f35b0b14", "committedDate": "2020-03-03T18:58:13Z", "message": "Revert \"Just clear directories - don't use app's reset logic\"\n\nThis reverts commit 64f642dfeb6b2e1f89e4fd05af5b7aa993733f09."}, "afterCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d", "committedDate": "2020-03-03T20:43:39Z", "message": "Revert \"Just clear directories - don't use app's reset logic\"\n\nThis reverts commit 64f642dfeb6b2e1f89e4fd05af5b7aa993733f09."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzI2MzUx", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368326351", "createdAt": "2020-03-03T21:10:22Z", "commit": {"oid": "73df40136ceb394198ce20f8b14d065ef0b2bb83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMToxMDoyM1rOFxWocQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMToxMDoyM1rOFxWocQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NTM0NQ==", "bodyText": "Why is this needed? Isn't that the default runner?", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387295345", "createdAt": "2020-03-03T21:10:23Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationCompletedBannerTest.java", "diffHunk": "@@ -21,18 +23,10 @@\n \n import static org.odk.collect.android.support.CollectHelpers.overrideAppDependencyModule;\n \n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73df40136ceb394198ce20f8b14d065ef0b2bb83"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzU1NjY4", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368355668", "createdAt": "2020-03-03T21:57:41Z", "commit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTo1Nzo0MVrOFxYDPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjowNzoxOVrOFxYWmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxODU4OA==", "bodyText": "Not important to change now but there are lots of doReturn calls in this test file that should use the newer and more readable when/thenReturn syntax. See the javadoc: Use doReturn() in those rare occasions when you cannot use when(Object). CC @grzesiek2010", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387318588", "createdAt": "2020-03-03T21:57:41Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -27,45 +31,44 @@\n     private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n     private final GeneralSharedPreferences generalSharedPreferences = mock(GeneralSharedPreferences.class);\n     private final ReferenceManager referenceManager = mock(ReferenceManager.class);\n+    private final BackgroundWorkManager backgroundWorkManager = mock(BackgroundWorkManager.class);\n \n     @Before\n     public void setup() {\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository, generalSharedPreferences, referenceManager));\n+        whenFormDownloaderIsNotRunning();\n+        whenFormUploaderIsNotRunning();\n \n-        doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();\n         doNothing().when(storageEraser).deleteOdkDirFromUnscopedStorage();\n         doReturn(\"/sdcard/odk/layers/countries/countries-raster.mbtiles\").when(generalSharedPreferences).get(KEY_REFERENCE_LAYER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMDI5Nw==", "bodyText": "These doNothing calls shouldn't be needed because storageEraser is a mock. It's needed below for the reopenDatabases because storageMigrator is a spy and not all of its methods can be run. CC @grzesiek2010", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387320297", "createdAt": "2020-03-03T22:01:10Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -27,45 +31,44 @@\n     private final StorageMigrationRepository storageMigrationRepository = mock(StorageMigrationRepository.class);\n     private final GeneralSharedPreferences generalSharedPreferences = mock(GeneralSharedPreferences.class);\n     private final ReferenceManager referenceManager = mock(ReferenceManager.class);\n+    private final BackgroundWorkManager backgroundWorkManager = mock(BackgroundWorkManager.class);\n \n     @Before\n     public void setup() {\n-        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser, storageMigrationRepository, generalSharedPreferences, referenceManager));\n+        whenFormDownloaderIsNotRunning();\n+        whenFormUploaderIsNotRunning();\n \n-        doNothing().when(storageMigrator).reopenDatabases();\n         doNothing().when(storageEraser).clearOdkDirOnScopedStorage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMTQ0Mw==", "bodyText": "I didn't realize that applications were never recreated in Espresso tests before @seadowg explained this one to me. So Collect.onCreate does not run for every test.", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387321443", "createdAt": "2020-03-03T22:03:24Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/ResetStateRule.java", "diffHunk": "@@ -29,14 +56,44 @@ public Statement apply(final Statement base, Description description) {\n \n         @Override\n         public void evaluate() throws Throwable {\n+            // Reset any singleton state\n+            if (appDependencyModule != null) {\n+                CollectHelpers.overrideAppDependencyModule(appDependencyModule);\n+            } else {\n+                CollectHelpers.overrideAppDependencyModule(new AppDependencyModule());\n+            }\n+\n+            // Make sure we clear all our shared prefs - ignore logic that doesn't reset keys\n+            Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+            PreferenceManager.getDefaultSharedPreferences(context).edit().clear().commit();\n+            context.getSharedPreferences(ADMIN_PREFERENCES, 0).edit().clear().commit();\n+            new MetaSharedPreferencesProvider(context).getMetaSharedPreferences().edit().clear().commit();\n+\n+            // Reset the app in both the old and new storage locations (just nuke dirs)\n             List<Integer> resetActions = Arrays.asList(\n-                    ResetUtility.ResetAction.RESET_PREFERENCES, ResetUtility.ResetAction.RESET_INSTANCES,\n-                    ResetUtility.ResetAction.RESET_FORMS, ResetUtility.ResetAction.RESET_LAYERS,\n-                    ResetUtility.ResetAction.RESET_CACHE, ResetUtility.ResetAction.RESET_OSM_DROID\n+                    ResetUtility.ResetAction.RESET_PREFERENCES,\n+                    ResetUtility.ResetAction.RESET_INSTANCES,\n+                    ResetUtility.ResetAction.RESET_FORMS,\n+                    ResetUtility.ResetAction.RESET_LAYERS,\n+                    ResetUtility.ResetAction.RESET_CACHE,\n+                    ResetUtility.ResetAction.RESET_OSM_DROID\n             );\n \n-            Context targetContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-            new ResetUtility().reset(targetContext, resetActions);\n+            new StorageStateProvider().disableUsingScopedStorage();\n+            new ResetUtility().reset(context, resetActions);\n+            new StorageStateProvider().enableUsingScopedStorage();\n+            new ResetUtility().reset(context, resetActions);\n+\n+            // Setup storage location for tests\n+            if (useScopedStorage) {\n+                new StorageStateProvider().enableUsingScopedStorage();\n+            } else {\n+                new StorageStateProvider().disableUsingScopedStorage();\n+            }\n+\n+            // Any dependencies (PropertyManager for instance) will already have been\n+            // passed to JavaRosa so make sure everything is reset\n+            ((Collect) context.getApplicationContext()).initializeJavaRosa();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMzU0NA==", "bodyText": "I don't think this is needed. Because of the KEYS_WE_SHOULD_NOT_RESET map, the scoped storage setting can't be changed by a settings file.", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387323544", "createdAt": "2020-03-03T22:07:19Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -296,12 +296,8 @@ public void onClick(View v) {\n                 ToastUtils.showLongToast(R.string.corrupt_settings_file_notification);\n             }\n         }\n-    }\n \n-    private void initToolbar() {\n-        Toolbar toolbar = findViewById(R.id.toolbar);\n-        setTitle(getString(R.string.main_menu));\n-        setSupportActionBar(toolbar);\n+        setUpStorageMigrationBanner();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjM1NjY1", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368635665", "createdAt": "2020-03-04T09:50:37Z", "commit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo1MDozOFrOFxme1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo1MDozOFrOFxme1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NTAyOQ==", "bodyText": "Shouldn't it be in ResetStateRule?", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387555029", "createdAt": "2020-03-04T09:50:38Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/test/FormLoadingUtils.java", "diffHunk": "@@ -52,6 +52,7 @@ private FormLoadingUtils() {\n      */\n     public static void copyFormToStorage(String formFilename, List<String> mediaFilePaths, boolean copyToDatabase) throws IOException {\n         new StorageInitializer().createOdkDirsOnStorage();\n+        ReferenceManager.instance().reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjQzNTYy", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368643562", "createdAt": "2020-03-04T10:01:34Z", "commit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDowMTozNFrOFxm3Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDowMTozNFrOFxm3Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU2MTI1NQ==", "bodyText": "What is the advantage of this change?", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387561255", "createdAt": "2020-03-04T10:01:34Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/ResetUtility.java", "diffHunk": "@@ -35,7 +35,11 @@\n public class ResetUtility {\n \n     private List<Integer> failedResetActions;\n-    private final StoragePathProvider storagePathProvider = new StoragePathProvider();\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public ResetUtility() {\n+        storagePathProvider = new StoragePathProvider();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d3c167b32cfbe26164c8f6e1eb7eca807a5a3d"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a26ccbe4af53eacc00f385798bd41fe082b7935e", "committedDate": "2020-03-04T10:19:12Z", "message": "Revert accidental change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjcwMDE5", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368670019", "createdAt": "2020-03-04T10:38:45Z", "commit": {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDozODo0NVrOFxoI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDozODo0NVrOFxoI2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjE2OA==", "bodyText": "I feel anxious about the test you removed that verified those two methods. Those were android tests because starting evernote job / worker didn't work with Robolectric I don't know why. It required some time but at least it was verified and we were sure it won't cause any problem during migration. Now you moved the code here and it looks fine but generally when you refactor something it's good to add tests in this case we have refactoring and removing tests.", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387582168", "createdAt": "2020-03-04T10:38:45Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.Job;\n+import com.evernote.android.job.JobManager;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+import org.odk.collect.utilities.BackgroundWorkManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import timber.log.Timber;\n+\n+\n+/**\n+ * Abstraction that sits on top of {@link com.evernote.android.job.JobManager} and\n+ * {@link androidx.work.WorkManager}. Implementation of {@link BackgroundWorkManager} which objects\n+ * can use to interact with background work without having to care what underlying framework is\n+ * being used.\n+ */\n+public class CollectBackgroundWorkManager implements BackgroundWorkManager {\n+\n+    @Override\n+    public boolean isRunning(String tag) {\n+        switch (tag) {\n+            case AutoSendWorker.TAG: {\n+                return isWorkManagerWorkRunning(tag);\n+            }\n+\n+            case ServerPollingJob.TAG: {\n+                return isJobManagerWorkRunning(tag);\n+            }\n+\n+            default:\n+                throw new IllegalArgumentException(\"CollectBackgroundWorkManager doesn't know about \" + tag);\n+        }\n+    }\n+\n+    private boolean isJobManagerWorkRunning(String tag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjkzMDM2", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368693036", "createdAt": "2020-03-04T11:14:05Z", "commit": {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMToxNDowNVrOFxpPyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMToxNDowNVrOFxpPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwMDMzMQ==", "bodyText": "extra empty line", "url": "https://github.com/getodk/collect/pull/3668#discussion_r387600331", "createdAt": "2020-03-04T11:14:05Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/CollectBackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.Job;\n+import com.evernote.android.job.JobManager;\n+import com.google.common.util.concurrent.ListenableFuture;\n+\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+import org.odk.collect.utilities.BackgroundWorkManager;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import timber.log.Timber;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ccbe4af53eacc00f385798bd41fe082b7935e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d32560db5834a168add6256229dcea38685ba690", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d32560db5834a168add6256229dcea38685ba690", "committedDate": "2020-03-04T11:18:36Z", "message": "Remove extra line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Njk3MjE0", "url": "https://github.com/getodk/collect/pull/3668#pullrequestreview-368697214", "createdAt": "2020-03-04T11:21:07Z", "commit": {"oid": "d32560db5834a168add6256229dcea38685ba690"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2325, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}