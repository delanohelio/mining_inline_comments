{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjUxNzg4", "number": 4261, "title": "Allow user to recover from multiple forms with same formid/version and prevent their future download", "bodyText": "Closes #4237\nStrongly recommend reviewing commit-by-commit.\nIf this were not a legacy project we'd want to use a hash to represent a unique form. An improvement we could make is linking instances and the forms they were filled from through database ids rather than through formid/version. However, that's an invasive change that I don't think we should take on so close to a planned release. It's probably not reasonable to take on at all before some of the mission-critical parts of the code have better test coverage.\nWhat has been done to verify that this works as intended?\nAdded automated tests for the changes to form downloads and delete behavior. I don't think there are low level tests to write for the changes to instance load and finalizing given the current code structure and I didn't want to get into a risky refactor. I think the problem is enough of an edge-case that I don't want to introduce Espresso tests. I verified those manually for now.\nCases\n\nadb push form with same formid/version and same filename. Collect should replace no matter the contents. Can get in a bad state if you have filled forms for one older version and there are schema changes. Won't be able to open the filled forms.\nadb push two identical forms (same md5 hash) but different filenames. Collect will treat these as different and this will cause the bad state from the issue.\nadb push same formid/version but the form contents are different (different md5 hashes). Collect will treat these as different and this will cause the bad state from the issue.\ntry to download form with same formid/version and same filename. Collect should download and replace. There may or may not be new media attachments.\ntry to download form with same formid/version/contents but different filenames. Collect should download but treat as different form. This will cause the bad state from the issue.\ntry to download form with same formid/version/filename but different contents. Collect should prevent download.\nget a form on the device. Fill it out a few times. Delete it. Get a form with the same\ngot into a bad state in v1.28 through one of the ways above, soft deleted one of the forms but was still suck\ngot into a bad state in v1.28 through one of the ways above, had not yet deleted one of the forms\n\nWhy is this the best possible solution? Were any other approaches considered?\nI think this is a good balance of not too invasive and pretty thorough. It both allows folks who ended up in a bad state in v1.28 to recover and limits the ways that the bad state can be reached in the future.\nThe first two commits filter out soft deleted forms when finalizing or opening filled forms. After those, it should be possible to recover from the bad state by deleting one of the blank forms. This helps folks who already ended up with the problem in v1.28 and soft-deleted one of the copies as instructed.\nThe third commit prevents downloading a form with the same formid/version as a form already on the device but with different contents. It still allows downloading a form with the same formid/version and the same contents because some servers will allow that to be combined with a media file update (Aggregate but not Central). This should make it harder for users to get into the bad state. There is still the possibility that the remote form would have the same contents but a different filename. We can't guard against that before downloading because the form XML endpoint may not include the filename. We'd have to do the check after downloading the file and I don't think this is common enough to add a special case. Plus, the two first commits will allow users to recover. Note: there should be a helpful message from manual download or automatic form update. However, in the match exactly form update mode, there will just be a generic \"Failure\" message, including if the refresh button is tapped manually.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThis affects form load, form finalization, form download and form delete. There are opportunities for regression in any of these but I tried to make the changes easy to review to mitigate that. The challenge is that there are a lot of possible combinations to think of. I tried to list those above in the verification section.\nI think there's also a fair amount of risk around the scenarios that we added soft delete for. That is, after deleting a form, its instances should still be editable and finalizable. I tried to verify all that manually and also DeleteBlankFormTest was useful.\nDo we need any specific form for testing your changes? If so, please attach one.\nNo, any form will do.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nI don't think so. It doesn't seem common enough to mention.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-12-02T19:49:58Z", "url": "https://github.com/getodk/collect/pull/4261", "merged": true, "mergeCommit": {"oid": "15ee94aa25f3a866d657323651ad4b146c937929"}, "closed": true, "closedAt": "2020-12-07T18:01:23Z", "author": {"login": "lognaturel"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiULmfABqjQwNjQxNTUwNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj5MHAABqjQwODA4Njk1MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00daf994843ca06f2c11d362c2bc5fca6b029765", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/00daf994843ca06f2c11d362c2bc5fca6b029765", "committedDate": "2020-12-02T19:49:31Z", "message": "Track attempts to download a form with same formid/version"}, "afterCommit": {"oid": "e0339b741fbd87097773e91ea9abc6e1874b0c19", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/e0339b741fbd87097773e91ea9abc6e1874b0c19", "committedDate": "2020-12-02T19:56:43Z", "message": "Track attempts to download a form with same formid/version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjAwMTE5", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543200119", "createdAt": "2020-12-02T20:12:54Z", "commit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxMjo1NVrOH9sV0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxMjo1NVrOH9sV0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MTY2NA==", "bodyText": "I went back and forth on whether to localize the download message. I think it's uncommon enough that we don't need to. I've added analytics so that we can verify that claim. I also hope that if it is more common than I expect we'll hear from users on the forum and perhaps we'll choose to work on the wording. \"please send all data you have collected with the existing form and delete the data and blank form\" is admittedly awkward and I'm open to alternatives.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534451664", "createdAt": "2020-12-02T20:12:55Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDownloader.java", "diffHunk": "@@ -40,19 +43,31 @@\n     private final String formsDirPath;\n     private final FormMetadataParser formMetadataParser;\n \n-    public ServerFormDownloader(FormSource formSource, FormsRepository formsRepository, File cacheDir, String formsDirPath, FormMetadataParser formMetadataParser) {\n+    private final Analytics analytics;\n+\n+    public ServerFormDownloader(FormSource formSource, FormsRepository formsRepository, File cacheDir, String formsDirPath, FormMetadataParser formMetadataParser, Analytics analytics) {\n         this.cacheDir = cacheDir;\n         this.formsDirPath = formsDirPath;\n         this.multiFormDownloader = new MultiFormDownloader(formsRepository, formSource);\n         this.formsRepository = formsRepository;\n         this.formMetadataParser = formMetadataParser;\n+\n+        this.analytics = analytics;\n     }\n \n     @Override\n     public void downloadForm(ServerFormDetails form, @Nullable ProgressReporter progressReporter, @Nullable Supplier<Boolean> isCancelled) throws FormDownloadException, InterruptedException {\n         Form formOnDevice = formsRepository.get(form.getFormId(), form.getFormVersion());\n-        if (formOnDevice != null && formOnDevice.isDeleted()) {\n-            formsRepository.restore(formOnDevice.getId());\n+        if (formOnDevice != null) {\n+            if (formOnDevice.isDeleted()) {\n+                formsRepository.restore(formOnDevice.getId());\n+            } else if (!(form.getHash().equals(formOnDevice.getMD5Hash()))) {\n+                String formIdentifier = formOnDevice.getDisplayName() + \" \" + formOnDevice.getId();\n+                String formIdHash = FileUtils.getMd5Hash(new ByteArrayInputStream(formIdentifier.getBytes()));\n+                analytics.logFormEvent(DOWNLOAD_SAME_FORMID_VERSION, formIdHash);\n+                throw new FormDownloadException(\"You've already downloaded a form with the same ID and version but with different contents. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjAwNzk4", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543200798", "createdAt": "2020-12-02T20:13:54Z", "commit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxMzo1NFrOH9sX8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxMzo1NFrOH9sX8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1MjIxMQ==", "bodyText": "I really wanted to update all this to use the instance/form repositories but it didn't feel worth the effort and risk at this time. I tried doing it for just this branch but there's a lot of code below that relies on having a formCursor so it becomes a lot to change.\nA lot of this code is really odd so hopefully we'll have a good context for revisiting it soon. For starters, it seems unexpected that every form goes into EncryptionUtils on finalization even if it doesn't specify encryption. Feels like that check should happen earlier.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534452211", "createdAt": "2020-12-02T20:13:54Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/EncryptionUtils.java", "diffHunk": "@@ -271,12 +271,9 @@ public static EncryptedFormInformation getEncryptedFormInformation(Uri uri,\n         Cursor formCursor = null;\n         try {\n             if (InstanceColumns.CONTENT_ITEM_TYPE.equals(cr.getType(uri))) {\n-                // chain back to the Form record...\n-                String[] selectionArgs = null;\n-                String selection = null;\n-                Cursor instanceCursor = null;\n-                try {\n-                    instanceCursor = cr.query(uri, null, null, null, null);\n+                String[] selectionArgs;\n+                String selection = FormsColumns.DELETED_DATE + \" IS NULL AND \" + FormsColumns.JR_FORM_ID + \" =? AND \";\n+                try (Cursor instanceCursor = cr.query(uri, null, null, null, null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjAyNzYx", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543202761", "createdAt": "2020-12-02T20:16:48Z", "commit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxNjo0OVrOH9sebA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDoxNjo0OVrOH9sebA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1Mzg2OA==", "bodyText": "This just wasn't true. The dialog errored out and quit the form so this wasn't a warning and the first entry was never used. Also it's no longer true that the SQLite database needs to be touched directly.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534453868", "createdAt": "2020-12-02T20:16:49Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());\n \n-            String jrFormId = formInfo.getFormId();\n-            String jrVersion = formInfo.getFormVersion();\n-\n-            String[] selectionArgs;\n-            String selection;\n-            if (jrVersion == null) {\n-                selectionArgs = new String[]{jrFormId};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \" IS NULL\";\n-            } else {\n-                selectionArgs = new String[]{jrFormId, jrVersion};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \"=?\";\n-            }\n-\n-            int formCount = FormsDaoHelper.getFormsCount(selection, selectionArgs);\n-            if (formCount < 1) {\n+            if (candidateForms.isEmpty()) {\n                 createErrorDialog(getString(\n                         R.string.parent_form_not_present,\n-                        jrFormId)\n-                                + ((jrVersion == null) ? \"\"\n-                                : \"\\n\"\n-                                + getString(R.string.version)\n-                                + \" \"\n-                                + jrVersion),\n+                        formInfo.getFormId())\n+                                + ((formInfo.getFormVersion() == null) ? \"\"\n+                                : \"\\n\" + getString(R.string.version) + \" \" + formInfo.getFormVersion()),\n                         EXIT);\n                 return;\n-            } else {\n-                formPath = FormsDaoHelper.getFormPath(selection, selectionArgs);\n-\n-                /**\n-                 * Still take the first entry, but warn that there are multiple rows. User will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd2225da4b76971bb912ab0e094995d9d96aeba1", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/bd2225da4b76971bb912ab0e094995d9d96aeba1", "committedDate": "2020-12-02T20:07:33Z", "message": "Fix code style"}, "afterCommit": {"oid": "84c373d803e5a7743c4802f2287e8cbb43e5067a", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/84c373d803e5a7743c4802f2287e8cbb43e5067a", "committedDate": "2020-12-02T22:21:36Z", "message": "Fix code style"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84c373d803e5a7743c4802f2287e8cbb43e5067a", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/84c373d803e5a7743c4802f2287e8cbb43e5067a", "committedDate": "2020-12-02T22:21:36Z", "message": "Fix code style"}, "afterCommit": {"oid": "b398e5970a0725b3a6a2ce0d2210eeaf03a28d50", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/b398e5970a0725b3a6a2ce0d2210eeaf03a28d50", "committedDate": "2020-12-02T22:24:17Z", "message": "Fix code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjg5Mzg4", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543289388", "createdAt": "2020-12-02T22:26:39Z", "commit": {"oid": "8d90c5518053e81b761dee2be51d7ebc7489c3ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNjozOVrOH9wuvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNjozOVrOH9wuvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzU4Mg==", "bodyText": "Creating a new FormsRepository here locally felt much better than trying to juggle more raw cursors.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r534523582", "createdAt": "2020-12-02T22:26:39Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/EncryptionUtils.java", "diffHunk": "@@ -271,40 +272,32 @@ public static EncryptedFormInformation getEncryptedFormInformation(Uri uri,\n         Cursor formCursor = null;\n         try {\n             if (InstanceColumns.CONTENT_ITEM_TYPE.equals(cr.getType(uri))) {\n-                // chain back to the Form record...\n-                String[] selectionArgs = null;\n-                String selection = null;\n-                Cursor instanceCursor = null;\n-                try {\n-                    instanceCursor = cr.query(uri, null, null, null, null);\n+                String[] selectionArgs;\n+                String selection = FormsColumns.JR_FORM_ID + \" =? AND \";\n+                try (Cursor instanceCursor = cr.query(uri, null, null, null, null)) {\n                     if (instanceCursor.getCount() != 1) {\n                         String msg = TranslationHandler.getString(Collect.getInstance(), R.string.not_exactly_one_record_for_this_instance);\n                         Timber.e(msg);\n                         throw new EncryptionException(msg, null);\n                     }\n                     instanceCursor.moveToFirst();\n-                    String jrFormId = instanceCursor.getString(\n-                            instanceCursor.getColumnIndex(InstanceColumns.JR_FORM_ID));\n+                    formId = instanceCursor.getString(instanceCursor.getColumnIndex(InstanceColumns.JR_FORM_ID));\n                     int idxJrVersion = instanceCursor.getColumnIndex(InstanceColumns.JR_VERSION);\n+                    formVersion = instanceCursor.getString(idxJrVersion);\n                     if (!instanceCursor.isNull(idxJrVersion)) {\n-                        selectionArgs = new String[]{jrFormId, instanceCursor.getString(\n-                                idxJrVersion)};\n-                        selection = FormsColumns.JR_FORM_ID + \" =? AND \" + FormsColumns.JR_VERSION\n-                                + \"=?\";\n+                        selectionArgs = new String[]{formId, instanceCursor.getString(idxJrVersion)};\n+                        selection += FormsColumns.JR_VERSION + \"=?\";\n                     } else {\n-                        selectionArgs = new String[]{jrFormId};\n-                        selection = FormsColumns.JR_FORM_ID + \" =? AND \" + FormsColumns.JR_VERSION\n-                                + \" IS NULL\";\n-                    }\n-                } finally {\n-                    if (instanceCursor != null) {\n-                        instanceCursor.close();\n+                        selectionArgs = new String[]{formId};\n+                        selection += FormsColumns.JR_VERSION + \" IS NULL\";\n                     }\n                 }\n \n                 formCursor = new FormsDao().getFormsCursor(selection, selectionArgs);\n \n-                if (formCursor.getCount() != 1) {\n+                // OK to finalize with form definition that was soft-deleted. OK if there are multiple\n+                // forms with the same formid/version as long as only one is active (not deleted).\n+                if (formCursor.getCount() == 0 || new DatabaseFormsRepository().getAllNotDeleted(formId, formVersion).size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d90c5518053e81b761dee2be51d7ebc7489c3ec"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTYwNDk1", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543960495", "createdAt": "2020-12-03T13:39:04Z", "commit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozOTowNFrOH-cGUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozOTowNFrOH-cGUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNDEzMQ==", "bodyText": "So we can't just use FormsRepository#getAllNotDeleted because we want a different error message here?", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535234131", "createdAt": "2020-12-03T13:39:04Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());\n \n-            String jrFormId = formInfo.getFormId();\n-            String jrVersion = formInfo.getFormVersion();\n-\n-            String[] selectionArgs;\n-            String selection;\n-            if (jrVersion == null) {\n-                selectionArgs = new String[]{jrFormId};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \" IS NULL\";\n-            } else {\n-                selectionArgs = new String[]{jrFormId, jrVersion};\n-                selection = FormsColumns.JR_FORM_ID + \"=? AND \"\n-                        + FormsColumns.JR_VERSION + \"=?\";\n-            }\n-\n-            int formCount = FormsDaoHelper.getFormsCount(selection, selectionArgs);\n-            if (formCount < 1) {\n+            if (candidateForms.size() < 1) {\n                 createErrorDialog(getString(\n                         R.string.parent_form_not_present,\n-                        jrFormId)\n-                                + ((jrVersion == null) ? \"\"\n-                                : \"\\n\"\n-                                + getString(R.string.version)\n-                                + \" \"\n-                                + jrVersion),\n+                        formInfo.getFormId())\n+                                + ((formInfo.getFormVersion() == null) ? \"\"\n+                                : \"\\n\" + getString(R.string.version) + \" \" + formInfo.getFormVersion()),\n                         EXIT);\n                 return;\n-            } else {\n-                formPath = FormsDaoHelper.getFormPath(selection, selectionArgs);\n-\n-                /**\n-                 * Still take the first entry, but warn that there are multiple rows. User will\n-                 * need to hand-edit the SQLite database to fix it.\n-                 */\n-                if (formCount > 1) {\n-                    createErrorDialog(getString(R.string.survey_multiple_forms_error), EXIT);\n-                    return;\n-                }\n+            } else if (candidateForms.stream().filter(f -> !f.isDeleted()).count() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTYwODcx", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543960871", "createdAt": "2020-12-03T13:39:33Z", "commit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozOTozM1rOH-cHoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzozOTozM1rOH-cHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNDQ2NA==", "bodyText": "Oh wow it feels like this is a big improvement. I'm excited to get this stuff out of the Activity...", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535234464", "createdAt": "2020-12-03T13:39:33Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -594,46 +597,22 @@ private void loadFromIntent(Intent intent) {\n             }\n \n             instancePath = formInfo.getInstancePath();\n+            List<Form> candidateForms = formsRepository.getAll(formInfo.getFormId(), formInfo.getFormVersion());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTYzMTU5", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543963159", "createdAt": "2020-12-03T13:42:16Z", "commit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0MjoxNlrOH-cPSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0MjoxNlrOH-cPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNjQyNw==", "bodyText": "Hmmm I think we probably want to be more consistent here and make this a getBy... that returns a list. Maybe the methods that return a single item should be getOne... or findOne...?", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535236427", "createdAt": "2020-12-03T13:42:16Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/forms/FormsRepository.java", "diffHunk": "@@ -12,6 +12,8 @@\n \n     List<Form> getAll();\n \n+    List<Form> getAll(String jrFormId, @Nullable String jrVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTY0MzM2", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543964336", "createdAt": "2020-12-03T13:43:35Z", "commit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0MzozNVrOH-cS9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo0MzozNVrOH-cS9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIzNzM2Ng==", "bodyText": "I think we should add tests for these new repo methods so we then know the fake and real implementation have consistent behaviours.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535237366", "createdAt": "2020-12-03T13:43:35Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/database/DatabaseFormsRepository.java", "diffHunk": "@@ -48,6 +48,15 @@ public DatabaseFormsRepository() {\n         }\n     }\n \n+    @Override\n+    public List<Form> getAll(String jrFormId, @Nullable String jrVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5c468367ace3112b2fc1436aed9fdccecebc63"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTc1OTgy", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-543975982", "createdAt": "2020-12-03T13:56:36Z", "commit": {"oid": "22d5af393a62d97ef8afb15eae8791a52775f07c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo1NjozNlrOH-c3Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzo1NjozNlrOH-c3Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0NjY4Ng==", "bodyText": "Don't want to be too nitpicky about test names but just because this stuff is all kinda confusing I'm wondering if it should be _replacesForm or _doesNotDuplicateForm?", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535246686", "createdAt": "2020-12-03T13:56:36Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/ServerFormDownloaderTest.java", "diffHunk": "@@ -283,6 +284,59 @@ public void whenFormIsSoftDeleted_unDeletesForm() throws Exception {\n         assertThat(formsRepository.get(1L).isDeleted(), is(false));\n     }\n \n+    @Test\n+    public void whenFormWithSameIdAndVersion_butDifferentContentsOnDevice_failsToDownload() throws Exception {\n+        Form form = buildForm(1L, \"form\", \"version\", getFormFilesPath(), \"contents1\").build();\n+        formsRepository.save(form);\n+\n+        ServerFormDetails serverFormDetails = new ServerFormDetails(\n+                form.getDisplayName(),\n+                \"http://downloadUrl\",\n+                null,\n+                form.getJrFormId(),\n+                form.getJrVersion(),\n+                \"differenthash\",\n+                false,\n+                true,\n+                null);\n+\n+        FormSource formSource = mock(FormSource.class);\n+        when(formSource.fetchForm(\"http://downloadUrl\")).thenReturn(new ByteArrayInputStream(\"foo\".getBytes()));\n+\n+        ServerFormDownloader downloader = new ServerFormDownloader(formSource, formsRepository, cacheDir, formsDir.getAbsolutePath(), new FormMetadataParser(ReferenceManager.instance()));\n+\n+        try {\n+            downloader.downloadForm(serverFormDetails, null, null);\n+            fail(\"Expected exception\");\n+        } catch (FormDownloadException e) {\n+            assertThat(e.getMessage(), notNullValue());\n+        }\n+    }\n+\n+    @Test\n+    public void whenFormWithSameIdAndVersion_andSameContentsOnDevice_downloadsSuccessfully() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d5af393a62d97ef8afb15eae8791a52775f07c"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f80374d3bb4e23f80c4d9e5039ea386970d146", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/31f80374d3bb4e23f80c4d9e5039ea386970d146", "committedDate": "2020-12-03T22:13:40Z", "message": "Filter out soft deleted forms when finalizing instance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a8ab38b7d6b3e49e898cd8d99549e77631e2abd", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/2a8ab38b7d6b3e49e898cd8d99549e77631e2abd", "committedDate": "2020-12-03T22:13:40Z", "message": "Filter out soft deleted forms when loading instance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c59d6138dfbc37330aecc2816c1e4d4ecb11e085", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/c59d6138dfbc37330aecc2816c1e4d4ecb11e085", "committedDate": "2020-12-03T22:13:40Z", "message": "Prevent download of form with same formid/version but different contents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0166e266dbc8fe2fdeb24c1aa75d740378f1c295", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/0166e266dbc8fe2fdeb24c1aa75d740378f1c295", "committedDate": "2020-12-03T22:13:40Z", "message": "Hard delete form with duplicate formid/version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d105b915534c1309b6ec505379ebb6097fd50c2", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/8d105b915534c1309b6ec505379ebb6097fd50c2", "committedDate": "2020-12-03T22:13:40Z", "message": "Track attempts to download a form with same formid/version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "066da6060c26cf934cea35095cea99ba99076249", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/066da6060c26cf934cea35095cea99ba99076249", "committedDate": "2020-12-03T22:13:40Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63858ab17b5e4e7cf794918ca69e6db9f98ba4ee", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/63858ab17b5e4e7cf794918ca69e6db9f98ba4ee", "committedDate": "2020-12-03T22:13:40Z", "message": "Ensure correct versions in test manifest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c7d28bc723b40affbd2e4c16a5f30d07d5a3bec", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/8c7d28bc723b40affbd2e4c16a5f30d07d5a3bec", "committedDate": "2020-12-03T05:42:32Z", "message": "Ensure correct versions in test manifest"}, "afterCommit": {"oid": "6f6759eca9d687d56d2d95e2756e373ae843b5e4", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6f6759eca9d687d56d2d95e2756e373ae843b5e4", "committedDate": "2020-12-03T22:13:40Z", "message": "Add tests for InstancesRepository"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTAyMjA2", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-544502206", "createdAt": "2020-12-03T22:22:41Z", "commit": {"oid": "6f6759eca9d687d56d2d95e2756e373ae843b5e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyMjo0MlrOH-3vFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyMjo0MlrOH-3vFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NjkzNQ==", "bodyText": "This scares me a little bit. It's not in use by Collect code other than in tests and in the method that builds an Instance from a DB record which means the path is already sure to be the correct one. So I think it's safe. But we have to be really careful if we do use it that we pass in the correct path.\nThis mirrors what Form does. I suspect that this had to be changed by @seadowg to test the FormsRepository. Without this change, I always got a crash from this method call when trying to test InstancesRepository. This was not easy to hunt down.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535686935", "createdAt": "2020-12-03T22:22:42Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/instances/Instance.java", "diffHunk": "@@ -91,7 +91,7 @@ public Builder canEditWhenComplete(boolean canEditWhenComplete) {\n         }\n \n         public Builder instanceFilePath(String instanceFilePath) {\n-            this.instanceFilePath = new StoragePathProvider().getInstanceDbPath(instanceFilePath);\n+            this.instanceFilePath = instanceFilePath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6759eca9d687d56d2d95e2756e373ae843b5e4"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f6759eca9d687d56d2d95e2756e373ae843b5e4", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6f6759eca9d687d56d2d95e2756e373ae843b5e4", "committedDate": "2020-12-03T22:13:40Z", "message": "Add tests for InstancesRepository"}, "afterCommit": {"oid": "92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "committedDate": "2020-12-03T22:24:19Z", "message": "Add tests for InstancesRepository"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTA1NzI3", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-544505727", "createdAt": "2020-12-03T22:28:49Z", "commit": {"oid": "67ac1be1e2a501b57228fb1d48a0960d110fb59d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyODo0OVrOH-37Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyODo0OVrOH-37Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MDA3OA==", "bodyText": "Note: there isn't an easy way to show this message in \"match exactly\" mode as far as I can tell because the FormDownloadException gets converted to a generic FormSourceException. I think those two should probably be consolidated at some point but now didn't feel like the right time.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535690078", "createdAt": "2020-12-03T22:28:49Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/AutoUpdateTaskSpec.java", "diffHunk": "@@ -86,7 +87,7 @@\n                                         formDownloader.downloadForm(serverFormDetails, null, null);\n                                         results.put(serverFormDetails, TranslationHandler.getString(context, R.string.success));\n                                     } catch (FormDownloadException e) {\n-                                        results.put(serverFormDetails, TranslationHandler.getString(context, R.string.failure));\n+                                        results.put(serverFormDetails, new FormDownloadExceptionMapper(context).getMessage(e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ac1be1e2a501b57228fb1d48a0960d110fb59d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTA3MDMz", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-544507033", "createdAt": "2020-12-03T22:31:01Z", "commit": {"oid": "a002168db27e0b3d5f80659dfd76f612849f1fc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjozMTowMlrOH-3_5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjozMTowMlrOH-3_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MTIzOA==", "bodyText": "I have no idea why these values ended up being named jrFormId and jrVersion. The irony is that JavaRosa actually has no concept of them, they are only meaningful at the Collect level. They're clearly an ODK form spec thing at least at this point and the jr prefix is confusing.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535691238", "createdAt": "2020-12-03T22:31:02Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/support/FormUtils.java", "diffHunk": "@@ -28,12 +28,12 @@ public static String createXForm(String id, String version) {\n                 \"</h:html>\";\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath) {\n-        return buildForm(id, jrFormId, jrVersion, formFilesPath, \"blah\");\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a002168db27e0b3d5f80659dfd76f612849f1fc7"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTA3MjM5", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-544507239", "createdAt": "2020-12-03T22:31:22Z", "commit": {"oid": "a002168db27e0b3d5f80659dfd76f612849f1fc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjozMToyMlrOH-4AlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjozMToyMlrOH-4AlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MTQxMg==", "bodyText": "This is so that we can represent the case where there are two forms with the same id and version.", "url": "https://github.com/getodk/collect/pull/4261#discussion_r535691412", "createdAt": "2020-12-03T22:31:22Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/support/FormUtils.java", "diffHunk": "@@ -28,12 +28,12 @@ public static String createXForm(String id, String version) {\n                 \"</h:html>\";\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath) {\n-        return buildForm(id, jrFormId, jrVersion, formFilesPath, \"blah\");\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath) {\n+        return buildForm(id, formId, version, formFilesPath, \"blah\");\n     }\n \n-    public static Form.Builder buildForm(long id, String jrFormId, String jrVersion, String formFilesPath, String xform) {\n-        String fileName = jrFormId + \"-\" + jrVersion;\n+    public static Form.Builder buildForm(long id, String formId, String version, String formFilesPath, String xform) {\n+        String fileName = formId + \"-\" + version + \"-\" + Math.random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a002168db27e0b3d5f80659dfd76f612849f1fc7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fabbdf766211f96e2e9c5f5582d37252e8719cc", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/0fabbdf766211f96e2e9c5f5582d37252e8719cc", "committedDate": "2020-12-03T22:43:48Z", "message": "Move error message concerns out of ServerFormDownloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2b9d221e69c8322cb848af77c2598c702ee9daf", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/e2b9d221e69c8322cb848af77c2598c702ee9daf", "committedDate": "2020-12-03T22:43:49Z", "message": "Standardize repository interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "279b5942382c40dac666d03b8c4a3433d57606b7", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/279b5942382c40dac666d03b8c4a3433d57606b7", "committedDate": "2020-12-03T22:43:49Z", "message": "Test new FormsRepository methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/92eb8a453e9c5d46f5a468e4a053d87dd998f1a1", "committedDate": "2020-12-03T22:24:19Z", "message": "Add tests for InstancesRepository"}, "afterCommit": {"oid": "23d2ff7c802eff44a348584832abccc5be2eae8f", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/23d2ff7c802eff44a348584832abccc5be2eae8f", "committedDate": "2020-12-03T22:43:49Z", "message": "Add tests for InstancesRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db3e24ab5a70872aa69fba8d2470e93a1e15253e", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/db3e24ab5a70872aa69fba8d2470e93a1e15253e", "committedDate": "2020-12-04T00:29:23Z", "message": "Add tests for InstancesRepository"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23d2ff7c802eff44a348584832abccc5be2eae8f", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/23d2ff7c802eff44a348584832abccc5be2eae8f", "committedDate": "2020-12-03T22:43:49Z", "message": "Add tests for InstancesRepository"}, "afterCommit": {"oid": "db3e24ab5a70872aa69fba8d2470e93a1e15253e", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/db3e24ab5a70872aa69fba8d2470e93a1e15253e", "committedDate": "2020-12-04T00:29:23Z", "message": "Add tests for InstancesRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d98f3b5e9a1ec765dfdaf2d58965b18848697a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/59d98f3b5e9a1ec765dfdaf2d58965b18848697a", "committedDate": "2020-12-04T10:20:03Z", "message": "Remove AllTestSuite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0081dd29be7ef40454c3bd80fb16a441dbd2c9b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c0081dd29be7ef40454c3bd80fb16a441dbd2c9b", "committedDate": "2020-12-04T10:23:15Z", "message": "Make sure to clear out db helper at the beginning of every Robolectric test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c3048505fb86ed2d08512179ce4bfb319703339", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3c3048505fb86ed2d08512179ce4bfb319703339", "committedDate": "2020-12-04T10:42:19Z", "message": "Shouldn't need tests to teardown DB helpers now"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MTg5NDc1", "url": "https://github.com/getodk/collect/pull/4261#pullrequestreview-545189475", "createdAt": "2020-12-04T18:13:54Z", "commit": {"oid": "3c3048505fb86ed2d08512179ce4bfb319703339"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "committedDate": "2020-12-07T17:42:13Z", "message": "Ensure neither hash has md5: prefix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e574929a711c398db98bffa341192aeba8ee950d", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/e574929a711c398db98bffa341192aeba8ee950d", "committedDate": "2020-12-07T17:28:14Z", "message": "Ensure neither hash has md5: prefix"}, "afterCommit": {"oid": "9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/9ea07f3027b2a0f1f668ae21c5216a04c53b2605", "committedDate": "2020-12-07T17:42:13Z", "message": "Ensure neither hash has md5: prefix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2495, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}