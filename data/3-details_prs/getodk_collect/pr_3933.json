{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODg3Njgy", "number": 3933, "title": "Fix imports from old QR codes", "bodyText": "Closes #3811. Depends on #3886.\nThis makes sure our SharedPreferences migrations are run after importing settings from a QR code (or from legacy .settings/.settings.json files). The core of the implementation is the new SettingsImporter use case that covers the shared logic of importing and processing settings.\nWhat has been done to verify that this works as intended?\nVerified a few old QA myself and added new tests to cover this bug.\nWhy is this the best possible solution? Were any other approaches considered?\nThere are a lot of different ways to approach this. In the end, to me, it felt like just pulling the logic (or as much as possible) into one place where we can test it extensively was the way to go. The tests and the code both end up being very \"and then, and then, and then\" (like a bad video game plot) but it feels like it should be easier to understand and change/correct this behaviour in the future now.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nAs well as making sure the bug is fixed, imports of QR codes and from settings file would be good to cover\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-06-22T11:50:33Z", "url": "https://github.com/getodk/collect/pull/3933", "merged": true, "mergeCommit": {"oid": "db353a654c893a50b1bc003e322c6aa51614edc5"}, "closed": true, "closedAt": "2020-07-21T08:36:23Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv8-6wgBqjM0OTE5MTQ4Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2tvXBgH2gAyNDM3ODg3NjgyOjBjOGYwMjhjMzNjZmQxZDg1YTExOTIyNjhkN2NlNjgyNDIzNmJlZGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6003d81b1e25a22b8697a9df158f030ad2f0d902", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6003d81b1e25a22b8697a9df158f030ad2f0d902", "committedDate": "2020-06-22T10:53:39Z", "message": "Pull JavaRosa initialization out of Collect object"}, "afterCommit": {"oid": "fa0e23389da43184776d2bee57238a6f29c5e5b3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/fa0e23389da43184776d2bee57238a6f29c5e5b3", "committedDate": "2020-06-29T08:43:14Z", "message": "Pull JavaRosa initialization out of Collect object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTg2NTUx", "url": "https://github.com/getodk/collect/pull/3933#pullrequestreview-439586551", "createdAt": "2020-06-30T00:21:10Z", "commit": {"oid": "65b37845b4cdeb409fa595a57ec8f6842ae1e078"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODowMDowOVrOGrIRxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODoyNDowNFrOGrJH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg3NzU3NQ==", "bodyText": "I believe that Collect implicitly required both general and admin previously so good to keep consistent. I think we should follow up and make it only required to have one, not necessarily both to avoid having an empty set of settings. If that sounds reasonable I can file a low-priority issue (and corresponding doc update).", "url": "https://github.com/getodk/collect/pull/3933#discussion_r447877575", "createdAt": "2020-06-30T18:00:09Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/configure/StructureAndTypeSettingsValidatorTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.odk.collect.android.configure;\n+\n+import org.json.JSONObject;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@SuppressWarnings(\"PMD.DoubleBraceInitialization\")\n+public class StructureAndTypeSettingsValidatorTest {\n+\n+    private final Map<String, Object> generalDefaults = new HashMap<String, Object>() {{\n+        put(\"key1\", true);\n+    }};\n+\n+    private final Map<String, Object> adminDefaults = new HashMap<String, Object>() {{\n+        put(\"key1\", \"default\");\n+    }};\n+\n+    private final StructureAndTypeSettingsValidator validator = new StructureAndTypeSettingsValidator(generalDefaults, adminDefaults);\n+\n+    @Test\n+    public void forEmptySettings_returnsTrue() throws Exception {\n+        assertThat(validator.isValid(emptySettings()), is(true));\n+    }\n+\n+    @Test\n+    public void forNonJSON_returnsFalse() {\n+        assertThat(validator.isValid(\"blah\"), is(false));\n+    }\n+\n+    @Test\n+    public void withoutGeneralObject_returnsFalse() throws Exception {\n+        JSONObject json = emptySettingsObject();\n+        json.remove(\"general\"); // Remove mutates and returns removed item :(\n+\n+        assertThat(validator.isValid(json.toString()), is(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d4ea286a74c38b9e271864b4709480a791f27e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg4MDY3NQ==", "bodyText": "Shouldn't this logic be a responsibility of the PropertyManager? Then maybe you don't need this class but can implement the interface inline where needed.", "url": "https://github.com/getodk/collect/pull/3933#discussion_r447880675", "createdAt": "2020-06-30T18:05:28Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/javarosawrapper/PropertyManagerJavaRosaInitializer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.odk.collect.android.javarosawrapper;\n+\n+import android.app.Application;\n+\n+import org.odk.collect.android.logic.PropertyManager;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+\n+import static org.odk.collect.android.logic.PropertyManager.PROPMGR_USERNAME;\n+import static org.odk.collect.android.logic.PropertyManager.SCHEME_USERNAME;\n+import static org.odk.collect.android.preferences.GeneralKeys.KEY_USERNAME;\n+\n+public class PropertyManagerJavaRosaInitializer implements JavaRosaInitializer {\n+\n+    private final Application application;\n+\n+    public PropertyManagerJavaRosaInitializer(Application application) {\n+        this.application = application;\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        PropertyManager mgr = new PropertyManager(application);\n+\n+        // Use the server username by default if the metadata username is not defined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa0e23389da43184776d2bee57238a6f29c5e5b3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5MTM2Mg==", "bodyText": "While here, would you consider changing all this to a try-with-resources so it's easier to read and there isn't the Timber.e call?", "url": "https://github.com/getodk/collect/pull/3933#discussion_r447891362", "createdAt": "2020-06-30T18:23:52Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/configure/LegacySettingsFileReader.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.configure;\n+\n+import androidx.core.util.Pair;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.util.Map;\n+\n+import timber.log.Timber;\n+\n+public class LegacySettingsFileReader {\n+\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public LegacySettingsFileReader(StoragePathProvider storagePathProvider) {\n+        this.storagePathProvider = storagePathProvider;\n+    }\n+\n+    public String toJSON() throws CorruptSettingsFileException {\n+        File f = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\");\n+        File j = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings.json\");\n+\n+        try {\n+            if (j.exists()) {\n+                String settings = readJSONFile(j);\n+                f.delete();\n+                return settings;\n+            } else if (f.exists()) {\n+                Pair<Map<String, Object>, Map<String, Object>> settings = readSettingsFile(f);\n+                j.delete();\n+\n+                return new JSONObject()\n+                        .put(\"general\", settings.first)\n+                        .put(\"admin\", settings.second)\n+                        .toString();\n+            } else {\n+                return null;\n+            }\n+        } catch (IOException | JSONException | ClassNotFoundException e) {\n+            throw new CorruptSettingsFileException();\n+        }\n+    }\n+\n+    private String readJSONFile(File src) throws IOException {\n+        BufferedReader br = null;\n+\n+        try {\n+            String line = null;\n+            StringBuilder builder = new StringBuilder();\n+            br = new BufferedReader(new FileReader(src));\n+\n+            while ((line = br.readLine()) != null) {\n+                builder.append(line);\n+            }\n+\n+            return builder.toString();\n+        } finally {\n+            try {\n+                if (br != null) {\n+                    br.close();\n+                }\n+            } catch (IOException ex) {\n+                Timber.e(ex, \"Exception thrown while closing an input stream due to: %s \", ex.getMessage());\n+            }\n+        }\n+    }\n+\n+    private Pair<Map<String, Object>, Map<String, Object>> readSettingsFile(File src) throws IOException, ClassNotFoundException {\n+        // this should probably be in a thread if it ever gets big\n+        ObjectInputStream input = null;\n+        try {\n+            input = new ObjectInputStream(new FileInputStream(src));\n+\n+            // first object is preferences\n+            Map<String, Object> generalEntries = (Map<String, Object>) input.readObject();\n+            Map<String, Object> adminEntries = (Map<String, Object>) input.readObject();\n+\n+            return new Pair<>(generalEntries, adminEntries);\n+        } finally {\n+            try {\n+                if (input != null) {\n+                    input.close();\n+                }\n+            } catch (IOException ex) {\n+                Timber.e(ex, \"Exception thrown while closing an input stream due to: %s \", ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae71d6d5a6ef7f58db91bf2a054b48ada646d59b"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5MTQ0NQ==", "bodyText": "While here, would you consider changing all this to a try-with-resources so it's easier to read and there isn't the Timber.e call?", "url": "https://github.com/getodk/collect/pull/3933#discussion_r447891445", "createdAt": "2020-06-30T18:24:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/configure/LegacySettingsFileReader.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.configure;\n+\n+import androidx.core.util.Pair;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.util.Map;\n+\n+import timber.log.Timber;\n+\n+public class LegacySettingsFileReader {\n+\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public LegacySettingsFileReader(StoragePathProvider storagePathProvider) {\n+        this.storagePathProvider = storagePathProvider;\n+    }\n+\n+    public String toJSON() throws CorruptSettingsFileException {\n+        File f = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\");\n+        File j = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings.json\");\n+\n+        try {\n+            if (j.exists()) {\n+                String settings = readJSONFile(j);\n+                f.delete();\n+                return settings;\n+            } else if (f.exists()) {\n+                Pair<Map<String, Object>, Map<String, Object>> settings = readSettingsFile(f);\n+                j.delete();\n+\n+                return new JSONObject()\n+                        .put(\"general\", settings.first)\n+                        .put(\"admin\", settings.second)\n+                        .toString();\n+            } else {\n+                return null;\n+            }\n+        } catch (IOException | JSONException | ClassNotFoundException e) {\n+            throw new CorruptSettingsFileException();\n+        }\n+    }\n+\n+    private String readJSONFile(File src) throws IOException {\n+        BufferedReader br = null;\n+\n+        try {\n+            String line = null;\n+            StringBuilder builder = new StringBuilder();\n+            br = new BufferedReader(new FileReader(src));\n+\n+            while ((line = br.readLine()) != null) {\n+                builder.append(line);\n+            }\n+\n+            return builder.toString();\n+        } finally {\n+            try {\n+                if (br != null) {\n+                    br.close();\n+                }\n+            } catch (IOException ex) {\n+                Timber.e(ex, \"Exception thrown while closing an input stream due to: %s \", ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae71d6d5a6ef7f58db91bf2a054b48ada646d59b"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMjk5NDMz", "url": "https://github.com/getodk/collect/pull/3933#pullrequestreview-440299433", "createdAt": "2020-06-30T18:55:46Z", "commit": {"oid": "ae71d6d5a6ef7f58db91bf2a054b48ada646d59b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1NTo0NlrOGrKRCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1NTo0NlrOGrKRCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxMDE1NQ==", "bodyText": "Remove comment that doesn't add much.", "url": "https://github.com/getodk/collect/pull/3933#discussion_r447910155", "createdAt": "2020-06-30T18:55:46Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/configure/LegacySettingsFileReader.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.odk.collect.android.configure;\n+\n+import androidx.core.util.Pair;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.util.Map;\n+\n+import timber.log.Timber;\n+\n+public class LegacySettingsFileReader {\n+\n+    private final StoragePathProvider storagePathProvider;\n+\n+    public LegacySettingsFileReader(StoragePathProvider storagePathProvider) {\n+        this.storagePathProvider = storagePathProvider;\n+    }\n+\n+    public String toJSON() throws CorruptSettingsFileException {\n+        File f = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\");\n+        File j = new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings.json\");\n+\n+        try {\n+            if (j.exists()) {\n+                String settings = readJSONFile(j);\n+                f.delete();\n+                return settings;\n+            } else if (f.exists()) {\n+                Pair<Map<String, Object>, Map<String, Object>> settings = readSettingsFile(f);\n+                j.delete();\n+\n+                return new JSONObject()\n+                        .put(\"general\", settings.first)\n+                        .put(\"admin\", settings.second)\n+                        .toString();\n+            } else {\n+                return null;\n+            }\n+        } catch (IOException | JSONException | ClassNotFoundException e) {\n+            throw new CorruptSettingsFileException();\n+        }\n+    }\n+\n+    private String readJSONFile(File src) throws IOException {\n+        BufferedReader br = null;\n+\n+        try {\n+            String line = null;\n+            StringBuilder builder = new StringBuilder();\n+            br = new BufferedReader(new FileReader(src));\n+\n+            while ((line = br.readLine()) != null) {\n+                builder.append(line);\n+            }\n+\n+            return builder.toString();\n+        } finally {\n+            try {\n+                if (br != null) {\n+                    br.close();\n+                }\n+            } catch (IOException ex) {\n+                Timber.e(ex, \"Exception thrown while closing an input stream due to: %s \", ex.getMessage());\n+            }\n+        }\n+    }\n+\n+    private Pair<Map<String, Object>, Map<String, Object>> readSettingsFile(File src) throws IOException, ClassNotFoundException {\n+        // this should probably be in a thread if it ever gets big\n+        ObjectInputStream input = null;\n+        try {\n+            input = new ObjectInputStream(new FileInputStream(src));\n+\n+            // first object is preferences", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae71d6d5a6ef7f58db91bf2a054b48ada646d59b"}, "originalPosition": 82}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae71d6d5a6ef7f58db91bf2a054b48ada646d59b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ae71d6d5a6ef7f58db91bf2a054b48ada646d59b", "committedDate": "2020-06-29T08:57:22Z", "message": "Rename SettingsImporter"}, "afterCommit": {"oid": "5c62ff5593208bc40e08332535e0a2f30bface1b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5c62ff5593208bc40e08332535e0a2f30bface1b", "committedDate": "2020-07-01T11:38:21Z", "message": "Remove JavaRosaInitializer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjc1MDky", "url": "https://github.com/getodk/collect/pull/3933#pullrequestreview-441275092", "createdAt": "2020-07-02T00:28:45Z", "commit": {"oid": "5c62ff5593208bc40e08332535e0a2f30bface1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c62ff5593208bc40e08332535e0a2f30bface1b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5c62ff5593208bc40e08332535e0a2f30bface1b", "committedDate": "2020-07-01T11:38:21Z", "message": "Remove JavaRosaInitializer"}, "afterCommit": {"oid": "ee41b0da57d8d99b665aec87ee294861aedec70a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ee41b0da57d8d99b665aec87ee294861aedec70a", "committedDate": "2020-07-03T06:52:54Z", "message": "Remove JavaRosaInitializer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee41b0da57d8d99b665aec87ee294861aedec70a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ee41b0da57d8d99b665aec87ee294861aedec70a", "committedDate": "2020-07-03T06:52:54Z", "message": "Remove JavaRosaInitializer"}, "afterCommit": {"oid": "80060087cd5e2ccb696646e95b6f90fb2eb66c08", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/80060087cd5e2ccb696646e95b6f90fb2eb66c08", "committedDate": "2020-07-13T09:25:21Z", "message": "Remove JavaRosaInitializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5f567a18a8688cde3a7df892dce2cf08abc00ec", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c5f567a18a8688cde3a7df892dce2cf08abc00ec", "committedDate": "2020-07-15T09:12:39Z", "message": "Convert legacy file to json before importing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fea439fc04ddf7b49c7b00f0442d57295253c18f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/fea439fc04ddf7b49c7b00f0442d57295253c18f", "committedDate": "2020-07-15T09:16:01Z", "message": "Make migrators specific to preferences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83eceefb58f44affe21e4fc4cefc646eff202ba", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b83eceefb58f44affe21e4fc4cefc646eff202ba", "committedDate": "2020-07-15T09:18:03Z", "message": "Create CollectSettingsImporter for import happy path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8bd7aebedd8872ad873e19398d6628e355b0cf7", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c8bd7aebedd8872ad873e19398d6628e355b0cf7", "committedDate": "2020-07-15T09:19:47Z", "message": "Make sure setting imports peforms migrations and loads defaults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c22bbe998e59023f97c8be0e0dc4d3e8fa74b036", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c22bbe998e59023f97c8be0e0dc4d3e8fa74b036", "committedDate": "2020-07-15T09:19:49Z", "message": "Validate settings json types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c9ff21cfc9826150f2eb70f7f20d6f190ab309", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c3c9ff21cfc9826150f2eb70f7f20d6f190ab309", "committedDate": "2020-07-15T09:19:49Z", "message": "Make sure importing settings clears old settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceeb7d5d3efd0173b556c0146eba9571d5984e49", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ceeb7d5d3efd0173b556c0146eba9571d5984e49", "committedDate": "2020-07-15T09:19:49Z", "message": "Initialize JavaRosa after importing settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6441c69f8eb79a4b61e224de270a20e1c57f3dde", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6441c69f8eb79a4b61e224de270a20e1c57f3dde", "committedDate": "2020-07-15T09:19:49Z", "message": "Provide JavaRosaInitializer in Dagger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fe3b28f3b306b9fd57cf57a1b2c44ad4ecd5d13", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9fe3b28f3b306b9fd57cf57a1b2c44ad4ecd5d13", "committedDate": "2020-07-15T09:20:34Z", "message": "Use injected JavaRosaInitializer rather than application singleton"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e95ab9534434785cde75641d7172e02f895511", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/81e95ab9534434785cde75641d7172e02f895511", "committedDate": "2020-07-15T09:20:37Z", "message": "Pull JavaRosa initialization out of Collect object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41885335122620cf183ec4101016e237a450f215", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/41885335122620cf183ec4101016e237a450f215", "committedDate": "2020-07-15T09:23:51Z", "message": "Rename SettingsImporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1202dcf33701c2d37d23bf40bc62524fa134399", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f1202dcf33701c2d37d23bf40bc62524fa134399", "committedDate": "2020-07-15T09:23:54Z", "message": "Use try with resources in LegacySettingsFileReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75e45f8531dc477c3ce5c4f7722d2987d505fd82", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/75e45f8531dc477c3ce5c4f7722d2987d505fd82", "committedDate": "2020-07-15T09:23:54Z", "message": "Move java rosa initialization out of FormController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52b8f8f115df9b0abf2683a047758616f398fc52", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/52b8f8f115df9b0abf2683a047758616f398fc52", "committedDate": "2020-07-15T09:23:54Z", "message": "Move PropertyManager creation to Dagger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1be464b5d035714412046a2a1114964765eee4ab", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/1be464b5d035714412046a2a1114964765eee4ab", "committedDate": "2020-07-15T09:23:54Z", "message": "Make PropertyManager a singleton"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8179b052be5e035b78e087e7343aa180b7303dfe", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8179b052be5e035b78e087e7343aa180b7303dfe", "committedDate": "2020-07-15T09:23:54Z", "message": "Remove JavaRosaInitializer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80060087cd5e2ccb696646e95b6f90fb2eb66c08", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/80060087cd5e2ccb696646e95b6f90fb2eb66c08", "committedDate": "2020-07-13T09:25:21Z", "message": "Remove JavaRosaInitializer"}, "afterCommit": {"oid": "8179b052be5e035b78e087e7343aa180b7303dfe", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8179b052be5e035b78e087e7343aa180b7303dfe", "committedDate": "2020-07-15T09:23:54Z", "message": "Remove JavaRosaInitializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "282bf7f9a4183e322a5d13750b7d6cdbdf4068c4", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/282bf7f9a4183e322a5d13750b7d6cdbdf4068c4", "committedDate": "2020-07-15T17:08:34Z", "message": "Fix imports from older versions with Carto setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dc12ab0a32b58a34dd2846926d783fe429225c0", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5dc12ab0a32b58a34dd2846926d783fe429225c0", "committedDate": "2020-07-15T17:23:56Z", "message": "Fix USGS imports from older versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bffe7218367965424d8fafb3868a5893ec9c7caa", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/bffe7218367965424d8fafb3868a5893ec9c7caa", "committedDate": "2020-07-15T17:55:22Z", "message": "Fix google maps and mapbox imports from older versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15e1896e865017cc196812fd625d6f8c74af4cba", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/15e1896e865017cc196812fd625d6f8c74af4cba", "committedDate": "2020-07-16T13:03:43Z", "message": "Fix legacy settings import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c8f028c33cfd1d85a1192268d7ce6824236bedd", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0c8f028c33cfd1d85a1192268d7ce6824236bedd", "committedDate": "2020-07-20T08:55:27Z", "message": "Fix admin password imports"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2519, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}