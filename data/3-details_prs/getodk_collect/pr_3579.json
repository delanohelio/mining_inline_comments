{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDUzMzAw", "number": 3579, "title": "Support default image answers", "bodyText": "Closes #84\nWhat has been done to verify that this works as intended?\nI tested the implemented changes manually and added an espresso tests.\nWhy is this the best possible solution? Were any other approaches considered?\nIt's the only solution we agreed in #84 and https://forum.opendatakit.org/t/proposal-specify-a-fixed-image-to-be-annotated-or-signed/14954. I can't come up with anything simpler or better.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThis change is only related to Image widgets so we can test only those. It just allows to use default image values. I don't find this change very risky so testing the attached form should be enough.\nDo we need any specific form for testing your changes? If so, please attach one.\ndefaultImage.zip\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-01-10T13:35:41Z", "url": "https://github.com/getodk/collect/pull/3579", "merged": true, "mergeCommit": {"oid": "d674ba4b008522f0cfe859387dd7153a011c834d"}, "closed": true, "closedAt": "2020-02-12T17:29:23Z", "author": {"login": "grzesiek2010"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5_OZAgFqTM0MTk4NTEyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDpyNIAFqTM1NzY0NjAyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTg1MTI0", "url": "https://github.com/getodk/collect/pull/3579#pullrequestreview-341985124", "createdAt": "2020-01-13T16:48:14Z", "commit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjo0ODoxNFrOFc9YEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjo0ODoxNFrOFc9YEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkxMDAzMw==", "bodyText": "I think we could drive these changes out in tests for the Widgets (Robolectric most likely) themselves rather than at an Espresso level. This would also let us test that the correct default image is loaded, as well as testing the ImageView appears. What do you think?", "url": "https://github.com/getodk/collect/pull/3579#discussion_r365910033", "createdAt": "2020-01-13T16:48:14Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/formentry/DefaultImageAnswerTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.odk.collect.android.formentry;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.test.FormLoadingUtils;\n+\n+import java.util.Collections;\n+\n+public class DefaultImageAnswerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjg1NzIz", "url": "https://github.com/getodk/collect/pull/3579#pullrequestreview-351685723", "createdAt": "2020-01-31T18:16:44Z", "commit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODoxNjo0NFrOFkTr6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODoxNjo0NFrOFkTr6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxNTU5Mg==", "bodyText": "I think that here you can just try to use the reference manager to resolve the ref and go with that if it works. You don't want to copy the image and you don't want to change what value is in the instance (binaryName). The instance value should only change if the image is replaced (including if an image previously from jr://images/ is annotated).", "url": "https://github.com/getodk/collect/pull/3579#discussion_r373615592", "createdAt": "2020-01-31T18:16:44Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BaseImageWidget.java", "diffHunk": "@@ -154,27 +157,25 @@ protected void addCurrentImageToLayout() {\n             int screenHeight = metrics.heightPixels;\n \n             File f = new File(getInstanceFolder() + File.separator + binaryName);\n+            if (!f.exists()) {\n+                f = addDefaultImageIfExists(f);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjg3MzA2", "url": "https://github.com/getodk/collect/pull/3579#pullrequestreview-351687306", "createdAt": "2020-01-31T18:19:35Z", "commit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODoxOTozNVrOFkTxCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODoxOTozNVrOFkTxCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxNjkwNQ==", "bodyText": "This means you're also trying to manually get things from the media folder if a file has no prefix? Why? Also consider that if a jr://file/ URI is set, for example, you'd end up with a path that looks like /path/to/media/folder/jr://file/name", "url": "https://github.com/getodk/collect/pull/3579#discussion_r373616905", "createdAt": "2020-01-31T18:19:35Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BaseImageWidget.java", "diffHunk": "@@ -313,4 +314,32 @@ protected void launchActivityForResult(Intent intent, final int resourceCode, fi\n             cancelWaitingForData();\n         }\n     }\n+\n+    private File addDefaultImageIfExists(File f) {\n+        File defaultFile = new File(getDefaultFilePath());\n+        if (defaultFile.exists()) {\n+            binaryName = System.currentTimeMillis() + \".\" + FilenameUtils.getExtension(defaultFile.getName());\n+            FileUtils.copyFile(defaultFile, new File(getInstanceFolder() + File.separator + binaryName));\n+            f = new File(getInstanceFolder() + File.separator + binaryName);\n+        }\n+        return f;\n+    }\n+\n+    private String getDefaultFilePath() {\n+        String defaultFilePath = null;\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController != null) {\n+            if (binaryName.startsWith(\"jr://images/\")) {\n+                try {\n+                    defaultFilePath = referenceManager.deriveReference(binaryName).getLocalURI();\n+                } catch (InvalidReferenceException e) {\n+                    Timber.w(e);\n+                }\n+            } else {\n+                defaultFilePath = formController.getMediaFolder() + File.separator + binaryName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35c51a09b827e498009379528917360d3b378356", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/35c51a09b827e498009379528917360d3b378356", "committedDate": "2020-02-03T10:48:15Z", "message": "Support default image files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f997fd0401de05d91ffa328c5e329d5588a39e1d", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/f997fd0401de05d91ffa328c5e329d5588a39e1d", "committedDate": "2020-02-03T10:48:45Z", "message": "Display ImageView only if the file it should contain really exists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6050970c6474d356611853825a66f33dee90215", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/d6050970c6474d356611853825a66f33dee90215", "committedDate": "2020-02-03T10:49:37Z", "message": "Added automated tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74b3cce734ca6428508f28f40b8c37db6acb003", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/e74b3cce734ca6428508f28f40b8c37db6acb003", "committedDate": "2020-02-03T10:49:37Z", "message": "Removed redundant supporitng defaults without prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8bc9a992e44fa14595cc571dda0599e2bac87b", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/fc8bc9a992e44fa14595cc571dda0599e2bac87b", "committedDate": "2020-02-03T10:49:37Z", "message": "Fixed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8133db6727756dfc8e0ad94b1807a3aa12ac1523", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/8133db6727756dfc8e0ad94b1807a3aa12ac1523", "committedDate": "2020-02-03T10:50:58Z", "message": "Fixed bugs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/98dff8f88921587c48eabeb7a73f116e44457845", "committedDate": "2020-01-10T13:02:37Z", "message": "Added automated tests"}, "afterCommit": {"oid": "8133db6727756dfc8e0ad94b1807a3aa12ac1523", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/8133db6727756dfc8e0ad94b1807a3aa12ac1523", "committedDate": "2020-02-03T10:50:58Z", "message": "Fixed bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d1760e896cc70efc5b00a7b5ded9810c6317d0", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/b7d1760e896cc70efc5b00a7b5ded9810c6317d0", "committedDate": "2020-02-04T11:32:57Z", "message": "Don't save default images automatically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e159dcb8359d5fc67885993187aad72b79f2dc65", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/e159dcb8359d5fc67885993187aad72b79f2dc65", "committedDate": "2020-02-04T11:34:09Z", "message": "Remoced redundant comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdfc3ab38a08e45e924b7d47ac86027d039310d1", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/cdfc3ab38a08e45e924b7d47ac86027d039310d1", "committedDate": "2020-02-04T11:35:01Z", "message": "Naming improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c855970b33e604e3299d0d663ca81e2916fa49bf", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/c855970b33e604e3299d0d663ca81e2916fa49bf", "committedDate": "2020-02-04T12:21:53Z", "message": "Added unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a536708a7b71133a35c22eb62c6fe745f516d228", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/a536708a7b71133a35c22eb62c6fe745f516d228", "committedDate": "2020-02-04T12:29:25Z", "message": "Improced test form"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fecf80f4fbb9513974e1cb7a8ef3c1cf83fc435", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/7fecf80f4fbb9513974e1cb7a8ef3c1cf83fc435", "committedDate": "2020-02-04T12:31:42Z", "message": "Removed redundant file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDk2MTUx", "url": "https://github.com/getodk/collect/pull/3579#pullrequestreview-354096151", "createdAt": "2020-02-05T22:48:59Z", "commit": {"oid": "c855970b33e604e3299d0d663ca81e2916fa49bf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjo0OTowMFrOFmJ4XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNDozODo1N1rOFmPFHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1MjA5Mw==", "bodyText": "I think I've said something like this before before -- having to change the visibility of methods to add tests seems like a bit of a red flag. That probably means either the design isn't right or the tests aren't trying out a realistic path through the app.", "url": "https://github.com/getodk/collect/pull/3579#discussion_r375552093", "createdAt": "2020-02-05T22:49:00Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BaseImageWidget.java", "diffHunk": "@@ -309,7 +309,7 @@ protected void launchActivityForResult(Intent intent, final int resourceCode, fi\n         }\n     }\n \n-    private File getFile() {\n+    File getFile() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c855970b33e604e3299d0d663ca81e2916fa49bf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYzNzI3Ng==", "bodyText": "@seadowg, when you say \"drive out\", you mean that in a test-driven development sense, right? As in write a test that describes the desired behavior which initially fails and use that test to get to a good code design? I just want to make sure that we're all on the same page. I do think that's a powerful approach that would be good to use more as opposed to writing some code and then fitting tests around it.\nI think that both the tests that @grzesiek2010 added and the one @seadowg is proposing basically check to make sure that the ReferenceManager gets used to resolve a jr://images URI. @grzesiek2010's very much rely on the current structure of the code because the unit they test is the method that goes from an answer value in an instance to an actual path. What I like about @seadowg's in contrast is that it is at a higher level and verifies what the user ultimately cares about -- that the image that will be shown is the one they expect. It requires exposing a getter for the imageView but that change seems acceptable to me. The test remains high-level enough that it could support a refactor of the functionality it tests. @grzesiek2010, would a test like that make you feel comfortable dropping the Espresso test?\nAs I mentioned before, ideally we'd have an analogous test for an image without a jr://images prefix. I believe that would take a non-trivial refactor because of the dependency that addCurrentImageToLayout has on FormController.", "url": "https://github.com/getodk/collect/pull/3579#discussion_r375637276", "createdAt": "2020-02-06T04:38:57Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/formentry/DefaultImageAnswerTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.odk.collect.android.formentry;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.FormEntryActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.test.FormLoadingUtils;\n+\n+import java.util.Collections;\n+\n+public class DefaultImageAnswerTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkxMDAzMw=="}, "originalCommit": {"oid": "98dff8f88921587c48eabeb7a73f116e44457845"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjQ2MDI2", "url": "https://github.com/getodk/collect/pull/3579#pullrequestreview-357646026", "createdAt": "2020-02-12T17:28:48Z", "commit": {"oid": "7fecf80f4fbb9513974e1cb7a8ef3c1cf83fc435"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2231, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}