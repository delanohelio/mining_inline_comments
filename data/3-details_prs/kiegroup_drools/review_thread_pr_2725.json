{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjAzNTgy", "number": 2725, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDowMzoxOFrODYgzdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDowMzoxOFrODYgzdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDI5ODc4OnYy", "diffSide": "RIGHT", "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDowMzoxOFrOFeaWXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMDowMjowNFrOFg4mag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMzMwOQ==", "bodyText": "Could you please explain why parseDrl so intensively catch and throw exceptions, however in final everything is ignored?", "url": "https://github.com/kiegroup/drools/pull/2725#discussion_r367433309", "createdAt": "2020-01-16T14:03:18Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4306,12 +4323,18 @@ private String getDrl() {\n     }\n \n     //Simple fall-back parser of DRL\n-    public RuleModel getSimpleRuleModel(final String drl) {\n+    private RuleModel getSimpleRuleModel(final String drl) {\n         final RuleModel rm = new RuleModel();\n         rm.setPackageName(PackageNameParser.parsePackageName(drl));\n         rm.setImports(ImportsParser.parseImports(drl));\n \n-        final Pattern rulePattern = Pattern.compile(\".*\\\\s?rule\\\\s+(.+?)\\\\s+.*\",\n+        try {\n+            parseAttributes(rm, parseDrl(drl).getAttributes());\n+        } catch (Exception e) {\n+            //Discard. We're unable to retrieve the rule attributes from the DRL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c009c192601a73636779212f270a366df6ebc40e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzNTc2Mw==", "bodyText": "Well..... I copied the other parseDrl(..) method originally written by Mario Fusco (so I assumed he knew what he was doing..). The new method is used to retrieve the rule's attributes. If either parsing the DRL threw an exception or it contained errors we're unable to get the attributes.", "url": "https://github.com/kiegroup/drools/pull/2725#discussion_r367935763", "createdAt": "2020-01-17T13:31:55Z", "author": {"login": "manstis"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4306,12 +4323,18 @@ private String getDrl() {\n     }\n \n     //Simple fall-back parser of DRL\n-    public RuleModel getSimpleRuleModel(final String drl) {\n+    private RuleModel getSimpleRuleModel(final String drl) {\n         final RuleModel rm = new RuleModel();\n         rm.setPackageName(PackageNameParser.parsePackageName(drl));\n         rm.setImports(ImportsParser.parseImports(drl));\n \n-        final Pattern rulePattern = Pattern.compile(\".*\\\\s?rule\\\\s+(.+?)\\\\s+.*\",\n+        try {\n+            parseAttributes(rm, parseDrl(drl).getAttributes());\n+        } catch (Exception e) {\n+            //Discard. We're unable to retrieve the rule attributes from the DRL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMzMwOQ=="}, "originalCommit": {"oid": "c009c192601a73636779212f270a366df6ebc40e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUwNzM5NA==", "bodyText": "@mariofusco  can we or can not we implement the new parse ethod simply as:\nprivate RuleDescr parseDrl(final String drl) {\n        DrlParser drlParser = new DrlParser();\n        PackageDescr packageDescr;\n\n        packageDescr = drlParser.parse(true, drl);\n        if (drlParser.hasErrors()) {\n            throw new RuleModelUnmarshallingException();\n        }\n       \n        return packageDescr.getRules().get(0);\n    }", "url": "https://github.com/kiegroup/drools/pull/2725#discussion_r368507394", "createdAt": "2020-01-20T11:49:39Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4306,12 +4323,18 @@ private String getDrl() {\n     }\n \n     //Simple fall-back parser of DRL\n-    public RuleModel getSimpleRuleModel(final String drl) {\n+    private RuleModel getSimpleRuleModel(final String drl) {\n         final RuleModel rm = new RuleModel();\n         rm.setPackageName(PackageNameParser.parsePackageName(drl));\n         rm.setImports(ImportsParser.parseImports(drl));\n \n-        final Pattern rulePattern = Pattern.compile(\".*\\\\s?rule\\\\s+(.+?)\\\\s+.*\",\n+        try {\n+            parseAttributes(rm, parseDrl(drl).getAttributes());\n+        } catch (Exception e) {\n+            //Discard. We're unable to retrieve the rule attributes from the DRL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMzMwOQ=="}, "originalCommit": {"oid": "c009c192601a73636779212f270a366df6ebc40e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyNjA5MA==", "bodyText": "@jomarko I've revised the method in a new commit.", "url": "https://github.com/kiegroup/drools/pull/2725#discussion_r370026090", "createdAt": "2020-01-23T10:02:04Z", "author": {"login": "manstis"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4306,12 +4323,18 @@ private String getDrl() {\n     }\n \n     //Simple fall-back parser of DRL\n-    public RuleModel getSimpleRuleModel(final String drl) {\n+    private RuleModel getSimpleRuleModel(final String drl) {\n         final RuleModel rm = new RuleModel();\n         rm.setPackageName(PackageNameParser.parsePackageName(drl));\n         rm.setImports(ImportsParser.parseImports(drl));\n \n-        final Pattern rulePattern = Pattern.compile(\".*\\\\s?rule\\\\s+(.+?)\\\\s+.*\",\n+        try {\n+            parseAttributes(rm, parseDrl(drl).getAttributes());\n+        } catch (Exception e) {\n+            //Discard. We're unable to retrieve the rule attributes from the DRL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzMzMwOQ=="}, "originalCommit": {"oid": "c009c192601a73636779212f270a366df6ebc40e"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2626, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}