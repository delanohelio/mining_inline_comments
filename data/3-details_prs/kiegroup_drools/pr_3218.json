{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTM2NjMy", "number": 3218, "title": "[KOGITO-3771] Drools -Support accumulate with native image", "bodyText": "See kiegroup/kogito-examples#446 for kogito integration test in kogito-examples\nAs the fingerprint is calculated during the code generation phase and stored in the externalised lambda we don't need to recalculated with Introspectable Lambda (that uses reflection and therefore is not supported in native image).\nTBH I don't know how to test this.\nAny ideas?\nI tried testing the internasl but it seems that the fingerprint is the same whether we precalculated it or use the Introspector.\n@tkobayas  can you please confirm?\n    private void verifyLambdaFingerprint(KieSession ksession) {\n        RuleImpl rule = (RuleImpl) ksession.getKieBase().getKiePackage(\"defaultpkg\").getRules().iterator().next();\n        Pattern accumulatePattern = (Pattern) rule.getLhs().getChildren().get(1);// AccumulatePattern\n        SingleAccumulate singleAccumulate = (SingleAccumulate) accumulatePattern.getSource();\n        Accumulator accumulator = singleAccumulate.getAccumulators()[0];\n        if(accumulator instanceof LambdaAccumulator.BindingAcc) {\n            LambdaAccumulator.BindingAcc accumulator1 = (LambdaAccumulator.BindingAcc) accumulator;\n            BindingEvaluator bindingEvaluator = accumulator1.getBindingEvaluator();\n            BindViewItem2 binding = (BindViewItem2) bindingEvaluator.getBinding();\n            assertEquals(\"B493B4D14DCA9F3418D45DCEF9D09184\", binding.getBindingFunction2().toString());\n        }\n    }\n\nThank you for submitting this pull request\nhttps://issues.redhat.com/browse/KOGITO-3771\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-11-05T15:18:38Z", "url": "https://github.com/kiegroup/drools/pull/3218", "merged": true, "mergeCommit": {"oid": "2da9469b8ddc0cc279b5d442fcec4e072f9dc4de"}, "closed": true, "closedAt": "2020-11-11T10:53:15Z", "author": {"login": "lucamolteni"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZkVjcAFqTUyNDM5NzIzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbKriqABqjM5NzkzNjE2MDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Mzk3MjMz", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-524397233", "createdAt": "2020-11-05T15:45:28Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NToyOFrOHuJjvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NToyOFrOHuJjvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1MzE1MA==", "bodyText": "oh nice, I like this much better now", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r518153150", "createdAt": "2020-11-05T15:45:28Z", "author": {"login": "evacchi"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -30,7 +30,9 @@ public final Object get() {\n \n     @Override\n     public String toString() {\n-        if(lambdaFingerprint == null) {\n+        if(this.getLambda() instanceof HashedExpression) {\n+            lambdaFingerprint = ((HashedExpression) this.getLambda()).getExpressionHash();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Mzk3ODI2", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-524397826", "createdAt": "2020-11-05T15:46:02Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NDYxMTAx", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-524461101", "createdAt": "2020-11-05T16:49:23Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTI3NzQy", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-524927742", "createdAt": "2020-11-06T08:04:05Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg3NjYy", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-525087662", "createdAt": "2020-11-06T11:56:16Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1NjoxNlrOHurQ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1NjoxNlrOHurQ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwNTM2Nw==", "bodyText": "Shouldn't we reintroduce the check for native compilation here.", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r518705367", "createdAt": "2020-11-06T11:56:16Z", "author": {"login": "mariofusco"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -30,7 +30,9 @@ public final Object get() {\n \n     @Override\n     public String toString() {\n-        if(lambdaFingerprint == null) {\n+        if(this.getLambda() instanceof HashedExpression) {\n+            lambdaFingerprint = ((HashedExpression) this.getLambda()).getExpressionHash();\n+        } else if(lambdaFingerprint == null) {\n             lambdaFingerprint = LambdaPrinter.print(getLambda());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTE3NzAz", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-525117703", "createdAt": "2020-11-06T12:44:51Z", "commit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a0699c132e0ab01e6ab526f43badcc0b99d049a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/0a0699c132e0ab01e6ab526f43badcc0b99d049a", "committedDate": "2020-11-05T15:11:07Z", "message": "Update materialized lambda tests"}, "afterCommit": {"oid": "aa5b4e3f7618a48d27b89cb0ba73c7ccfeb4cc81", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/aa5b4e3f7618a48d27b89cb0ba73c7ccfeb4cc81", "committedDate": "2020-11-09T19:08:45Z", "message": "Correct testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NTc0MTI3", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-526574127", "createdAt": "2020-11-09T19:13:25Z", "commit": {"oid": "aa5b4e3f7618a48d27b89cb0ba73c7ccfeb4cc81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOToxMzoyNVrOHv9ysA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOToxMzoyNVrOHv9ysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1NzUyMA==", "bodyText": "@mariofusco I'm not sure about this, we could remove this dependency by copying and pasting the native image properties check", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520057520", "createdAt": "2020-11-09T19:13:25Z", "author": {"login": "lucamolteni"}, "path": "drools-model/drools-canonical-model/pom.xml", "diffHunk": "@@ -18,6 +18,10 @@\n   </properties>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>org.drools</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa5b4e3f7618a48d27b89cb0ba73c7ccfeb4cc81"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzU4ODUw", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-526758850", "createdAt": "2020-11-10T00:22:07Z", "commit": {"oid": "baed4c5f2a0b0b3be697752423961879174092a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoyMjowN1rOHwG1FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoyMjowN1rOHwG1FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNTU4OA==", "bodyText": "@lucamolteni Probably you want to call clearProperty() ? Btw, setting \"false\" wouldn't work because it's evaluated with null or not.\nhttps://github.com/kiegroup/drools/blob/master/drools-core/src/main/java/org/drools/core/base/CoreComponentsBuilder.java#L26", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520205588", "createdAt": "2020-11-10T00:22:07Z", "author": {"login": "tkobayas"}, "path": "drools-core/src/main/java/org/drools/core/util/Drools.java", "diffHunk": "@@ -114,4 +114,14 @@ public static boolean hasMvel() {\n     public static boolean isNativeImage() {\n         return CoreComponentsBuilder.isNativeImage();\n     }\n+\n+    // Used only for test purposed, do not call this as it simulates the code path for native image\n+    public static void setNativeImage() {\n+        System.setProperty(\"org.graalvm.nativeimage.imagecode\", \"true\");\n+    }\n+\n+    // Used only for test purposed, do not call this as it simulates the code path for native image\n+    public static void unsetNativeImage() {\n+        System.setProperty(\"org.graalvm.nativeimage.imagecode\", \"true\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baed4c5f2a0b0b3be697752423961879174092a7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTY5Njc1", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-526969675", "createdAt": "2020-11-10T08:41:42Z", "commit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0MTo0MlrOHwRphw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0MTo0MlrOHwRphw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4Mjg1NQ==", "bodyText": "I wonder if it would make sense to keep it as part of the test / support library for tests (but I get this is probably here to make it available to the wider code/test-base)", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520382855", "createdAt": "2020-11-10T08:41:42Z", "author": {"login": "evacchi"}, "path": "drools-core/src/main/java/org/drools/core/util/Drools.java", "diffHunk": "@@ -114,4 +114,14 @@ public static boolean hasMvel() {\n     public static boolean isNativeImage() {\n         return CoreComponentsBuilder.isNativeImage();\n     }\n+\n+    // Used only for test purposed, do not call this as it simulates the code path for native image\n+    public static void setNativeImage() {\n+        System.setProperty(\"org.graalvm.nativeimage.imagecode\", \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTY5NzE0", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-526969714", "createdAt": "2020-11-10T08:41:45Z", "commit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTYwMzUw", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-526960350", "createdAt": "2020-11-10T08:29:56Z", "commit": {"oid": "baed4c5f2a0b0b3be697752423961879174092a7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoyOTo1NlrOHwRNYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0NDoyMlrOHwRvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3NTY0OQ==", "bodyText": "What about promote/document this interface? As far as I can see, implement this interface is the only way to write a\n\"programmatic\" lambda with a stable fingerprint.", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520375649", "createdAt": "2020-11-10T08:29:56Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/HashedExpression.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.model.functions;\n+\n+public interface HashedExpression {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baed4c5f2a0b0b3be697752423961879174092a7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3ODQyNw==", "bodyText": "Considering that are not instance methods and are used only for testing I would prefer to move them to a NativeImageTestUtils or similar directly inside drools-test-coverage module. Wdyt?", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520378427", "createdAt": "2020-11-10T08:34:30Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/util/Drools.java", "diffHunk": "@@ -114,4 +114,14 @@ public static boolean hasMvel() {\n     public static boolean isNativeImage() {\n         return CoreComponentsBuilder.isNativeImage();\n     }\n+\n+    // Used only for test purposed, do not call this as it simulates the code path for native image\n+    public static void setNativeImage() {\n+        System.setProperty(\"org.graalvm.nativeimage.imagecode\", \"true\");\n+    }\n+\n+    // Used only for test purposed, do not call this as it simulates the code path for native image\n+    public static void unsetNativeImage() {\n+        System.clearProperty(\"org.graalvm.nativeimage.imagecode\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3OTY2NQ==", "bodyText": "What about rename print() method to highlight this introspection behavior? Something like getIntrospectedFingerprint", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520379665", "createdAt": "2020-11-10T08:36:37Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -31,8 +34,18 @@ public final Object get() {\n     @Override\n     public String toString() {\n         if(lambdaFingerprint == null) {\n-            lambdaFingerprint = LambdaPrinter.print(getLambda());\n+            // Lambdas generated by the model-compiler have the fingerprint calculated\n+            if(this.getLambda() instanceof HashedExpression) {\n+                lambdaFingerprint = ((HashedExpression) this.getLambda()).getExpressionHash();\n+            } else if(!Drools.isNativeImage()) {\n+                // LambdaIntrospector is not supported on native image (it uses MVEL and reflection)\n+                lambdaFingerprint = LambdaPrinter.print(getLambda());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4MTYwMg==", "bodyText": "Is this stable? Any EntryPointNode can be used?", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520381602", "createdAt": "2020-11-10T08:39:42Z", "author": {"login": "danielezonca"}, "path": "drools-test-coverage/test-compiler-integration/src/test/java/org/drools/compiler/integrationtests/operators/FromTest.java", "diffHunk": "@@ -233,6 +169,47 @@ public void testFromSharingWithPropertyReactive() {\n         }\n     }\n \n+    public static String fromSharingRule() {\n+        return \"import \" + ListsContainer.class.getCanonicalName() + \"\\n\" +\n+                \"global java.util.List output1;\\n\" +\n+                \"global java.util.List output2;\\n\" +\n+                \"rule R1 when\\n\" +\n+                \"    ListsContainer( $list : list1 )\\n\" +\n+                \"    $s : String( length == 2 ) from $list\\n\" +\n+                \"then\\n\" +\n+                \"    output1.add($s);\\n\" +\n+                \"end\\n\" +\n+                \"rule R2 when\\n\" +\n+                \"    ListsContainer( $list : list2 )\\n\" +\n+                \"    $s : String( length == 2 ) from $list\\n\" +\n+                \"then\\n\" +\n+                \"    output2.add($s);\\n\" +\n+                \"end\\n\" +\n+                \"rule R3 when\\n\" +\n+                \"    ListsContainer( $list : list2 )\\n\" +\n+                \"    $s : String( length == 2 ) from $list\\n\" +\n+                \"then\\n\" +\n+                \"    output2.add($s);\\n\" +\n+                \"end\\n\";\n+    }\n+\n+    private static ObjectTypeNode insertObjectFireRules(InternalKnowledgeBase kbase, KieSession ksession) {\n+        final List<String> output1 = new ArrayList<>();\n+        ksession.setGlobal(\"output1\", output1);\n+        final List<String> output2 = new ArrayList<>();\n+        ksession.setGlobal(\"output2\", output2);\n+\n+        ksession.insert(new ListsContainer());\n+        ksession.fireAllRules();\n+\n+        assertEquals(\"bb\", output1.get(0));\n+        assertEquals(\"22\", output2.get(0));\n+        assertEquals(\"22\", output2.get(1));\n+\n+        final EntryPointNode epn = kbase.getRete().getEntryPointNodes().values().iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NDQ1MQ==", "bodyText": "What about a log (trace) message for each branch? I don't know how often this method is invoked but the value is already cached so I expect almost no overhead.\nThe main reason for this comment is that based on this simple toString value node sharing could be disabled so it could have a global perf impact", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520384451", "createdAt": "2020-11-10T08:44:22Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -31,8 +34,18 @@ public final Object get() {\n     @Override\n     public String toString() {\n         if(lambdaFingerprint == null) {\n-            lambdaFingerprint = LambdaPrinter.print(getLambda());\n+            // Lambdas generated by the model-compiler have the fingerprint calculated\n+            if(this.getLambda() instanceof HashedExpression) {\n+                lambdaFingerprint = ((HashedExpression) this.getLambda()).getExpressionHash();\n+            } else if(!Drools.isNativeImage()) {\n+                // LambdaIntrospector is not supported on native image (it uses MVEL and reflection)\n+                lambdaFingerprint = LambdaPrinter.print(getLambda());\n+            } else {\n+                // Non-native image, lambda without fingerprint (manually written) node sharing is disabled\n+                lambdaFingerprint = UUID.randomUUID().toString();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43707b0c7f198abb1f73da9d919492cf60b1c8a5", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/43707b0c7f198abb1f73da9d919492cf60b1c8a5", "committedDate": "2020-11-10T08:32:25Z", "message": "Unset native image property"}, "afterCommit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/cf3a1af701ce2e4de3219f9bb888f6069a873857", "committedDate": "2020-11-10T12:22:01Z", "message": "Added logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTYwNzc1", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-527160775", "createdAt": "2020-11-10T12:40:14Z", "commit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTg5Mjky", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-527189292", "createdAt": "2020-11-10T13:16:04Z", "commit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjU2NzYx", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-527256761", "createdAt": "2020-11-10T14:28:10Z", "commit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyODoxMFrOHwfH4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyODoxMFrOHwfH4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYwMzYxOA==", "bodyText": "@lucamolteni I'm curious.\nCan you perhaps explain what do I need to do with my lambdas to end up in this branch? Obviously, if possible, I'd love node sharing even in native mode.", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520603618", "createdAt": "2020-11-10T14:28:10Z", "author": {"login": "triceo"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -31,11 +40,26 @@ public final Object get() {\n     @Override\n     public String toString() {\n         if(lambdaFingerprint == null) {\n-            lambdaFingerprint = LambdaPrinter.print(getLambda());\n+            lambdaFingerprint = generateFingerprint();\n         }\n+\n         return lambdaFingerprint;\n     }\n \n+    private String generateFingerprint() {\n+        if(this.getLambda() instanceof HashedExpression) {\n+            logger.debug(\"The constraint supports org.drools.model.functions.HashedExpression, node sharing is enabled and compile-time fingerprint is used\");\n+            return ((HashedExpression) this.getLambda()).getExpressionHash();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjgzMDA5", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-527283009", "createdAt": "2020-11-10T14:52:54Z", "commit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDo1Mjo1NFrOHwgUSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDo1Mjo1NFrOHwgUSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYyMzE3Nw==", "bodyText": "Minor improvement: instead of generating a random UUID maybe in this case we could simply return super.toString(). In this way it should return something like org.drools.model.functions.IntrospectableLambda@b268bb07, i.e. the name of the class followed by the memory address, and in this way we will keep the node sharing in case of 2 constraints using the same lambda instance (not sure if this could happen in reality though).", "url": "https://github.com/kiegroup/drools/pull/3218#discussion_r520623177", "createdAt": "2020-11-10T14:52:54Z", "author": {"login": "mariofusco"}, "path": "drools-model/drools-canonical-model/src/main/java/org/drools/model/functions/IntrospectableLambda.java", "diffHunk": "@@ -31,11 +40,26 @@ public final Object get() {\n     @Override\n     public String toString() {\n         if(lambdaFingerprint == null) {\n-            lambdaFingerprint = LambdaPrinter.print(getLambda());\n+            lambdaFingerprint = generateFingerprint();\n         }\n+\n         return lambdaFingerprint;\n     }\n \n+    private String generateFingerprint() {\n+        if(this.getLambda() instanceof HashedExpression) {\n+            logger.debug(\"The constraint supports org.drools.model.functions.HashedExpression, node sharing is enabled and compile-time fingerprint is used\");\n+            return ((HashedExpression) this.getLambda()).getExpressionHash();\n+        } else if(!IS_NATIVE_IMAGE) {\n+            // LambdaIntrospector is not supported on native image (it uses MVEL and reflection)\n+            logger.debug(\"No HashedExpression provided, generating fingerprint using reflection via org.drools.mvel.asm.LambdaIntrospector, node sharing enabled\");\n+            return LambdaPrinter.print(getLambda());\n+        } else {\n+            logger.debug(\"No HashedExpression provided, generating unique random identifier for lambdam, node sharing disabled\");\n+            return UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Mjg1ODMx", "url": "https://github.com/kiegroup/drools/pull/3218#pullrequestreview-527285831", "createdAt": "2020-11-10T14:55:33Z", "commit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a134f401e20593c9ae3366f5eaa94910498ddc", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f0a134f401e20593c9ae3366f5eaa94910498ddc", "committedDate": "2020-11-10T14:59:33Z", "message": "Disable LambdaPrinter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4618c2fa254baaed125edc5542f05ee4b52ccedd", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/4618c2fa254baaed125edc5542f05ee4b52ccedd", "committedDate": "2020-11-10T14:59:33Z", "message": "Use hashedExpression field as fingeprint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3841ac78750303d7909912e9133d1fc86a9d299a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/3841ac78750303d7909912e9133d1fc86a9d299a", "committedDate": "2020-11-10T14:59:33Z", "message": "Reenable lambda printer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8208117f619f3489345f9ad9c3911fb81958dd52", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/8208117f619f3489345f9ad9c3911fb81958dd52", "committedDate": "2020-11-10T14:59:33Z", "message": "Update materialized lambda tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4e33862292988185a530d5e70cd12d0cb67cab1", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/b4e33862292988185a530d5e70cd12d0cb67cab1", "committedDate": "2020-11-10T14:59:33Z", "message": "Test for fingerprint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f88dff8f8da31d080f4abd6b80ddcc6ce5924ef7", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f88dff8f8da31d080f4abd6b80ddcc6ce5924ef7", "committedDate": "2020-11-10T14:59:33Z", "message": "Correct logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea5f91ab6f7c5b1704f27869b98ea24a50c9a0b8", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/ea5f91ab6f7c5b1704f27869b98ea24a50c9a0b8", "committedDate": "2020-11-10T14:59:33Z", "message": "Enable lambda externalisation on Kogito"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423bf841c6f11fc9687bd8dcb5ea7e3fb78d3bc8", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/423bf841c6f11fc9687bd8dcb5ea7e3fb78d3bc8", "committedDate": "2020-11-10T14:59:33Z", "message": "method to set the native image property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8acbcc03f363fabdd39750913db32a51d6d27abf", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/8acbcc03f363fabdd39750913db32a51d6d27abf", "committedDate": "2020-11-10T14:59:33Z", "message": "added dependency of drools-core to drools-canonical-model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beba3787b2eeb149d03bb1e0c9f383fdfb9c9e1e", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/beba3787b2eeb149d03bb1e0c9f383fdfb9c9e1e", "committedDate": "2020-11-10T14:59:33Z", "message": "Correct logic 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b5af706e5d34dc31e65a660fb145dd2878edca", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/a6b5af706e5d34dc31e65a660fb145dd2878edca", "committedDate": "2020-11-10T14:59:33Z", "message": "Refactor testFromSharing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c0e29dad47d732c1a64a1c44652deb1514ef6f4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/4c0e29dad47d732c1a64a1c44652deb1514ef6f4", "committedDate": "2020-11-10T14:59:33Z", "message": "testFromSharing with native image (DRL Failing)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d973517272e3731f141ffdf890e348da31a957c1", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/d973517272e3731f141ffdf890e348da31a957c1", "committedDate": "2020-11-10T14:59:33Z", "message": "testFromSharing with native image (DRL Failing)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c3da6e9e411ef86e88c1f1a5bff133de28441c1", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9c3da6e9e411ef86e88c1f1a5bff133de28441c1", "committedDate": "2020-11-10T14:59:33Z", "message": "parametrized test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f97dd008a0ff1e93878380501476b8e98e4a397", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/6f97dd008a0ff1e93878380501476b8e98e4a397", "committedDate": "2020-11-10T14:59:34Z", "message": "Correct testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9527e1c8823d18ef7953383e0e668d691c36b077", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9527e1c8823d18ef7953383e0e668d691c36b077", "committedDate": "2020-11-10T14:59:34Z", "message": "Review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fe724e52697dfc460113125d9a4276d81459557", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/2fe724e52697dfc460113125d9a4276d81459557", "committedDate": "2020-11-10T14:59:34Z", "message": "Review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9002c6905eb93216977635bce57937be17f6266", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c9002c6905eb93216977635bce57937be17f6266", "committedDate": "2020-11-10T14:59:34Z", "message": "Unset native image property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d4b430c4e0ea5c4cc087a2c4d19247b0ba1e8a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/87d4b430c4e0ea5c4cc087a2c4d19247b0ba1e8a", "committedDate": "2020-11-10T14:59:34Z", "message": "Moved setNativeImage/unsetNativeImage to testUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0c6a56218631ec16e0671b4d35dd46bebdf63d", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/5a0c6a56218631ec16e0671b4d35dd46bebdf63d", "committedDate": "2020-11-10T14:59:34Z", "message": "Review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10915540ca543d648447d04f44655a33d7dddbb7", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/10915540ca543d648447d04f44655a33d7dddbb7", "committedDate": "2020-11-10T14:59:34Z", "message": "Added logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0bf4359e9c05b7292b09bd09e0818c4ea9cc911", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f0bf4359e9c05b7292b09bd09e0818c4ea9cc911", "committedDate": "2020-11-10T14:59:34Z", "message": "Use toString instead of random UUID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf3a1af701ce2e4de3219f9bb888f6069a873857", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/cf3a1af701ce2e4de3219f9bb888f6069a873857", "committedDate": "2020-11-10T12:22:01Z", "message": "Added logging"}, "afterCommit": {"oid": "f0bf4359e9c05b7292b09bd09e0818c4ea9cc911", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f0bf4359e9c05b7292b09bd09e0818c4ea9cc911", "committedDate": "2020-11-10T14:59:34Z", "message": "Use toString instead of random UUID"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1736, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}