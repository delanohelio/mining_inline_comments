{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTc1NjU4", "number": 2921, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozNDo1M1rOEA30_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMToyMzo1NlrOEBVHoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzUwMTQwOnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozNDo1M1rOGca0MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjo0MzozMlrOGdAVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw==", "bodyText": "I think this method is quite misleading compared to similar n this utils (isList, isMap etc): all the others accept \"target\" class while this method works only if the parameter is the parent class. What about at least change the name?", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432452657", "createdAt": "2020-05-29T12:34:53Z", "author": {"login": "danielezonca"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwNDIyOA==", "bodyText": "@danielezonca I don't understand your point. In my opinion is not misleading: it checks if a given className is an Enum, disregarding if is called on a target / parent class.", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432504228", "createdAt": "2020-05-29T14:04:26Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NjA4Mg==", "bodyText": "My comment is mainly related comparing this method with the others in the same class:\nisList(\"java.uti.ArrayList\") -> true\nisMap(\"java.util.HashMap\") -> true\nisEnum(\"my.Enum\") -> false\nDo you get what I mean?\nBtw I don't have a better idea in terms of naming, I just find it a bit confusing", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432546082", "createdAt": "2020-05-29T15:00:38Z", "author": {"login": "danielezonca"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1ODUyMQ==", "bodyText": "@danielezonca Yes, now I got your point. Probably the correct name should be something similar to isEnumCanonicalName() but is very bad.\nOn the others side, I think the scope of the 3 method are the same: you compared 2 case where you passed the exact ArrayList and HashMap canonical names, while in the third you passed a subclass of the Enum.\nYes, you can argue that is not usual to subclass ArrayList or HashMap and it's common to use subclasses of Enum but all 3 methods check the canonical name in the same way.\nOther names I can propose are:\nisEnumClass()\nisExactelyEnum()", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432558521", "createdAt": "2020-05-29T15:20:44Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2MzQwMg==", "bodyText": "isEnumCanonicalName() maybe it's the clearest option, even if ugly: it clarifies which check will be applied.", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432563402", "createdAt": "2020-05-29T15:28:36Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA2NzMxMA==", "bodyText": "@danielezonca Change applied.", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433067310", "createdAt": "2020-06-01T06:43:32Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtils.java", "diffHunk": "@@ -56,4 +60,13 @@ public static boolean isMap(String className) {\n                 HashMap.class.getCanonicalName().equals(className) ||\n                 LinkedHashMap.class.getCanonicalName().equals(className);\n     }\n+\n+    /**\n+     * Returns true if given string equals to canonical name of <code>java.lang.Enum</code>\n+     * @param className\n+     * @return\n+     */\n+    public static boolean isEnum(String className) {\n+        return Enum.class.getCanonicalName().equals(className);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MjY1Nw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzY3NjQ0OnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzoyNjoyOFrOGcci-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDowNTowOVrOGcd_Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4MTAxNw==", "bodyText": "Can you please add DROOLS-5078 to the title of this PR :)", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432481017", "createdAt": "2020-05-29T13:26:28Z", "author": {"login": "danielezonca"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +\n+                                                                   \" to use it.\").toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwNDY3MQ==", "bodyText": "@danielezonca Done!", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r432504671", "createdAt": "2020-05-29T14:05:09Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +\n+                                                                   \" to use it.\").toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4MTAxNw=="}, "originalCommit": {"oid": "cfb1ef9377e566a7af5f3a1fe9d98553c5886672"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODE5NjI3OnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDo0MzowM1rOGdGMtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDo0OToxN1rOGdNTdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MzQ0NQ==", "bodyText": "Just an idea: maybe we can provide a link for MVEL expression? BCS well as I understand that not every illegal argument could be replaced by MVEL.", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433163445", "createdAt": "2020-06-01T10:43:03Z", "author": {"login": "dupliaka"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NTIyMg==", "bodyText": "@dupliaka What do you have in mind? Consider the message is shown inside that popover: https://issues.redhat.com/secure/attachment/12465830/image-2020-02-19-10-13-01-440.png", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433165222", "createdAt": "2020-06-01T10:47:31Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MzQ0NQ=="}, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTcyOA==", "bodyText": "I meant to wrap http://mvel.documentnode.com/ link around MVEL expression if that possible?", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433241728", "createdAt": "2020-06-01T13:43:57Z", "author": {"login": "dupliaka"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MzQ0NQ=="}, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0OTk1Nw==", "bodyText": "Please consider we have users with offline configurations so a link to an external website is not ideal. MVEL is used in the whole platform (for example process editor) so we can assume user knows it or that in general we don't need to solve in a specific editor a problem that is at platform level", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433249957", "createdAt": "2020-06-01T13:58:23Z", "author": {"login": "danielezonca"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MzQ0NQ=="}, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3OTg2MQ==", "bodyText": "@danielezonca thanks for mention it, I was unavare of this.", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433279861", "createdAt": "2020-06-01T14:49:17Z", "author": {"login": "dupliaka"}, "path": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/util/ScenarioBeanUtil.java", "diffHunk": "@@ -178,13 +178,18 @@ public static Object convertValue(String className, Object cleanValue, ClassLoad\n                 return Short.parseShort(cleanStringForNumberParsing(value));\n             } else if (clazz.isAssignableFrom(LocalDate.class)) {\n                 return LocalDate.parse(value, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\n+            } else if (Enum.class.isAssignableFrom(clazz)) {\n+                return Enum.valueOf(((Class<? extends Enum>) clazz), value);\n             }\n         } catch (RuntimeException e) {\n-            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\").append(value).append(\"' as \").append(className).append(\" [\").append(e.getMessage()).append(\"]\").toString());\n+            throw new IllegalArgumentException(new StringBuilder().append(\"Impossible to parse '\")\n+                                                       .append(value).append(\"' as \").append(className).append(\" [\")\n+                                                       .append(e.getMessage()).append(\"]\").toString());\n         }\n \n         throw new IllegalArgumentException(new StringBuilder().append(\"Class \").append(className)\n-                                                   .append(\" is not supported\").toString());\n+                                                   .append(\" is not natively supported. Please use an MVEL expression\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MzQ0NQ=="}, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODMwMDQ5OnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMToyMzo1NlrOGdHMMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMToyOToxMFrOGdHUeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3OTY5Ng==", "bodyText": "Suggestion:\nFrom my perspective that looks a bit like code repetition.\nWould you please tell me why cant we use\n        assertTrue(ScenarioSimulationSharedUtils.isEnumCanonicalName(\"java.lang.Enum\")); assertFalse(ScenarioSimulationSharedUtils.isEnumCanonicalName(\"Enum\"));", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433179696", "createdAt": "2020-06-01T11:23:56Z", "author": {"login": "dupliaka"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtilsTest.java", "diffHunk": "@@ -52,4 +52,9 @@ public void isList() {\n     public void isMap() {\n         assertTrue(mapValues.stream().allMatch(ScenarioSimulationSharedUtils::isMap));\n     }\n+\n+    @Test\n+    public void isEnumCanonicalName() {\n+        assertTrue(ScenarioSimulationSharedUtils.isEnumCanonicalName(Enum.class.getCanonicalName()));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MTgxNg==", "bodyText": "@dupliaka Of course we can use it :)", "url": "https://github.com/kiegroup/drools/pull/2921#discussion_r433181816", "createdAt": "2020-06-01T11:29:10Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/utils/ScenarioSimulationSharedUtilsTest.java", "diffHunk": "@@ -52,4 +52,9 @@ public void isList() {\n     public void isMap() {\n         assertTrue(mapValues.stream().allMatch(ScenarioSimulationSharedUtils::isMap));\n     }\n+\n+    @Test\n+    public void isEnumCanonicalName() {\n+        assertTrue(ScenarioSimulationSharedUtils.isEnumCanonicalName(Enum.class.getCanonicalName()));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3OTY5Ng=="}, "originalCommit": {"oid": "9c438dfcaf92aaa3b649dc631055fc6792381f32"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2546, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}