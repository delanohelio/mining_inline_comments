{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MDUxOTc2", "number": 3145, "title": "[DROOLS-5647] Add range indexing to AlphaNode", "bodyText": "Now I proceed the development based on One RBTree.\nJIRA: https://issues.redhat.com/browse/DROOLS-5647\nreferenced Pull Requests:\nkiegroup/droolsjbpm-knowledge#477\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-10-07T07:44:53Z", "url": "https://github.com/kiegroup/drools/pull/3145", "merged": true, "mergeCommit": {"oid": "f83157c5ccdee168871c21d30dbb5d3f63e782cf"}, "closed": true, "closedAt": "2020-10-23T15:53:24Z", "author": {"login": "tkobayas"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUU0vrAH2gAyNDk5MDUxOTc2OjQ4MDU1NGQ2NWE4YmE3MWZlNThkNGQyMzBjMGI5OGY0Mjk1NzU5ODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVS4LjAFqTUxNTQ4MjUxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "480554d65a8ba71fe58d4d230c0b98f429575986", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/480554d65a8ba71fe58d4d230c0b98f429575986", "committedDate": "2020-10-20T08:51:26Z", "message": "[DROOLS-5647] Add range indexing to AlphaNode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43e1ac76fa855b1bb65d5539e6fb9a2f0dc0b2d4", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/43e1ac76fa855b1bb65d5539e6fb9a2f0dc0b2d4", "committedDate": "2020-10-07T07:13:53Z", "message": "- Use normal sinks instead of range index for AlphaNetworkCompiler"}, "afterCommit": {"oid": "480554d65a8ba71fe58d4d230c0b98f429575986", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/480554d65a8ba71fe58d4d230c0b98f429575986", "committedDate": "2020-10-20T08:51:26Z", "message": "[DROOLS-5647] Add range indexing to AlphaNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c4e822da19307edde5b541f77cc5e4d6784b5da", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/6c4e822da19307edde5b541f77cc5e4d6784b5da", "committedDate": "2020-10-21T03:04:37Z", "message": "- Fixed some code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0", "committedDate": "2020-10-21T06:14:15Z", "message": "- Fixed RBTree.range()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Mzg5MzM5", "url": "https://github.com/kiegroup/drools/pull/3145#pullrequestreview-514389339", "createdAt": "2020-10-22T06:16:54Z", "commit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNjoxNjo1NFrOHmSFpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNjoxNjo1NFrOHmSFpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwNDI5NA==", "bodyText": "A little uncomfortable to change the method signature for this minor tuning parameter. But I follow the same approach as alphaNodeHashingThreshold at the moment. We may file another JIRA to check if we can simplify it.", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r509904294", "createdAt": "2020-10-22T06:16:54Z", "author": {"login": "tkobayas"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetwork.java", "diffHunk": "@@ -167,8 +167,8 @@ public void startWindowNode(WindowNode windowNode) {\n     }\n \n     @Override\n-    public ObjectSinkPropagator addObjectSink(ObjectSink sink, int alphaNodeHashingThreshold) {\n-        return originalSinkPropagator.addObjectSink(sink, alphaNodeHashingThreshold);\n+    public ObjectSinkPropagator addObjectSink(ObjectSink sink, int alphaNodeHashingThreshold, int alphaNodeRangeIndexThreshold) {\n+        return originalSinkPropagator.addObjectSink(sink, alphaNodeHashingThreshold, alphaNodeRangeIndexThreshold);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Nzk3MzQ5", "url": "https://github.com/kiegroup/drools/pull/3145#pullrequestreview-514797349", "createdAt": "2020-10-22T14:34:29Z", "commit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDozNDoyOVrOHmk8hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDozNDoyOVrOHmk8hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIxMzI1Mg==", "bodyText": "Is this necessary? Isn't the AlphaNodeRangeIndexThreshold enough to also completely disable the range indexing when required?", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510213252", "createdAt": "2020-10-22T14:34:29Z", "author": {"login": "mariofusco"}, "path": "drools-core/src/main/java/org/drools/core/reteoo/CompositeObjectSinkAdapter.java", "diffHunk": "@@ -51,43 +57,59 @@\n     //    public static final int    THRESHOLD_TO_HASH              = Integer.parseInt( System.getProperty( HASH_THRESHOLD_SYSTEM_PROPERTY,\n     //                                                                                                      \"3\" ) );\n \n+    public static final boolean RANGE_INDEX_ENABLED = Boolean.parseBoolean( System.getProperty( \"drools.alphaNodeRangeIndex.enabled\", \"true\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDIwNDI0", "url": "https://github.com/kiegroup/drools/pull/3145#pullrequestreview-515420424", "createdAt": "2020-10-23T07:45:46Z", "commit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NTo0NlrOHnCdcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NTo0NlrOHnCdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjgxOQ==", "bodyText": "Is this rule used as reference for the test below? I'd add a comment", "url": "https://github.com/kiegroup/drools/pull/3145#discussion_r510696819", "createdAt": "2020-10-23T07:45:46Z", "author": {"login": "lucamolteni"}, "path": "drools-core/src/test/java/org/drools/core/util/index/RangeIndexTest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.drools.core.util.index;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.function.IntPredicate;\n+\n+import org.assertj.core.api.Assertions;\n+import org.drools.core.reteoo.AlphaNode;\n+import org.drools.core.test.model.Person;\n+import org.drools.core.util.Entry;\n+import org.drools.core.util.FastIterator;\n+import org.drools.core.util.RBTree.Node;\n+import org.junit.Test;\n+\n+public class RangeIndexTest {\n+\n+    final String drl =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f5c7b12a6dc242d00fbe038bb8eb49a2769fbb0"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11609a421585d13bef79479e4fb5c6389e3a0abc", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/11609a421585d13bef79479e4fb5c6389e3a0abc", "committedDate": "2020-10-23T08:07:32Z", "message": "- Use TreeMap instead of RBTree for RangeIndex\n- Removed RBTree, LeftTupleIndexRangeRBTree and RightTupleIndexRangeRBTree because they are no longer used\n- Minor test changes to test with ANC easier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDgyNTE2", "url": "https://github.com/kiegroup/drools/pull/3145#pullrequestreview-515482516", "createdAt": "2020-10-23T09:09:18Z", "commit": {"oid": "11609a421585d13bef79479e4fb5c6389e3a0abc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1801, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}