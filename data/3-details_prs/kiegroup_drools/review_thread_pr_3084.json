{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMDEyMjQz", "number": 3084, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMTowMVrOEhii1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMzoxN1rOEhilvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjA0NDM2OnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMTowMVrOHO5-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOTozMzozOFrOHPrUgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjA5OA==", "bodyText": "Fix formatting", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485392098", "createdAt": "2020-09-09T07:21:01Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java", "diffHunk": "@@ -85,14 +86,16 @@ public static KiePMMLSegmentation getSegmentation(final DataDictionary dataDicti\n                                                                 final TransformationDictionary transformationDictionary,\n                                                                 final Segmentation segmentation,\n                                                                 final String segmentationName,\n-                                                                final KnowledgeBuilder kBuilder) {\n+                                                                final KnowledgeBuilder kBuilder,\n+                                                                final List<KiePMMLModel> nestedModels) {\n         logger.debug(\"getSegmentationSourcesMap {}\", segmentation);\n         final String packageName = getSanitizedPackageName(parentPackageName + \".\" + segmentationName);\n         final Map<String, String> toReturn = getSegmentsSourcesMap(packageName,\n                                                                   dataDictionary,\n                                                                   transformationDictionary,\n                                                                   segmentation.getSegments(),\n-                                                                  kBuilder);\n+                                                                  kBuilder,\n+                                                                   nestedModels);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDQ1MA==", "bodyText": "@danielezonca\nDone", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200450", "createdAt": "2020-09-10T09:33:38Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java", "diffHunk": "@@ -85,14 +86,16 @@ public static KiePMMLSegmentation getSegmentation(final DataDictionary dataDicti\n                                                                 final TransformationDictionary transformationDictionary,\n                                                                 final Segmentation segmentation,\n                                                                 final String segmentationName,\n-                                                                final KnowledgeBuilder kBuilder) {\n+                                                                final KnowledgeBuilder kBuilder,\n+                                                                final List<KiePMMLModel> nestedModels) {\n         logger.debug(\"getSegmentationSourcesMap {}\", segmentation);\n         final String packageName = getSanitizedPackageName(parentPackageName + \".\" + segmentationName);\n         final Map<String, String> toReturn = getSegmentsSourcesMap(packageName,\n                                                                   dataDictionary,\n                                                                   transformationDictionary,\n                                                                   segmentation.getSegments(),\n-                                                                  kBuilder);\n+                                                                  kBuilder,\n+                                                                   nestedModels);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjA5OA=="}, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjA0ODI5OnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMjoxMlrOHO6BOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOTozMzozNVrOHPrUZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjY5OQ==", "bodyText": "Can you please add an assertion related to number of expected nested models?", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485392699", "createdAt": "2020-09-09T07:22:12Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java", "diffHunk": "@@ -77,13 +81,16 @@ public void getKiePMMLMiningModel() {\n     @Test\n     public void getKiePMMLMiningModelSourcesMap() {\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLMiningModelFactory.getKiePMMLMiningModelSourcesMap(\n                                                                                                        DATA_DICTIONARY,\n                                                                                                        TRANSFORMATION_DICTIONARY,\n                                                                                                        MINING_MODEL,\n                                                                                                        packageName,\n-                                                                                                       KNOWLEDGE_BUILDER);\n+                                                                                                       KNOWLEDGE_BUILDER,\n+                                                                                                       nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDQyMA==", "bodyText": "@danielezonca\nDone", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200420", "createdAt": "2020-09-10T09:33:35Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java", "diffHunk": "@@ -77,13 +81,16 @@ public void getKiePMMLMiningModel() {\n     @Test\n     public void getKiePMMLMiningModelSourcesMap() {\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLMiningModelFactory.getKiePMMLMiningModelSourcesMap(\n                                                                                                        DATA_DICTIONARY,\n                                                                                                        TRANSFORMATION_DICTIONARY,\n                                                                                                        MINING_MODEL,\n                                                                                                        packageName,\n-                                                                                                       KNOWLEDGE_BUILDER);\n+                                                                                                       KNOWLEDGE_BUILDER,\n+                                                                                                       nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjY5OQ=="}, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjA1MTgzOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMzoxN1rOHO6Dlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOTozMzozMFrOHPrUMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MzMwMg==", "bodyText": "Can you please add an assertion related to number of expected nested models?", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485393302", "createdAt": "2020-09-09T07:23:17Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java", "diffHunk": "@@ -52,12 +56,15 @@ public void getSegmentation() {\n     public void getSegmentationSourcesMap() {\n         final String segmentationName = \"SEGMENTATION_NAME\";\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLSegmentationFactory.getSegmentationSourcesMap(packageName,\n                                                                                                    DATA_DICTIONARY,\n                                                                                                    TRANSFORMATION_DICTIONARY,\n                                                                                                    MINING_MODEL.getSegmentation(),\n                                                                                                    segmentationName,\n-                                                                                                   KNOWLEDGE_BUILDER);\n+                                                                                                   KNOWLEDGE_BUILDER,\n+                                                                                                   nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDM3MA==", "bodyText": "@danielezonca\nDone", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200370", "createdAt": "2020-09-10T09:33:30Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java", "diffHunk": "@@ -52,12 +56,15 @@ public void getSegmentation() {\n     public void getSegmentationSourcesMap() {\n         final String segmentationName = \"SEGMENTATION_NAME\";\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLSegmentationFactory.getSegmentationSourcesMap(packageName,\n                                                                                                    DATA_DICTIONARY,\n                                                                                                    TRANSFORMATION_DICTIONARY,\n                                                                                                    MINING_MODEL.getSegmentation(),\n                                                                                                    segmentationName,\n-                                                                                                   KNOWLEDGE_BUILDER);\n+                                                                                                   KNOWLEDGE_BUILDER,\n+                                                                                                   nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MzMwMg=="}, "originalCommit": {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2310, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}