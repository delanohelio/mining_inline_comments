{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NDc3OTQy", "number": 3222, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNTozNjo0NVrOE185WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozNjoyN1rOE1-Z5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDA3NzA0OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/phreak/RuleNetworkEvaluator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNTozNjo0NVrOHugweg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNTozNjo0NVrOHugweg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUzMzI0Mg==", "bodyText": "if (leftTuple.getMemory() == ltm) {  may look more accurate but I followed the same approach as other methods in RuleNetworkEvaluator.", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518533242", "createdAt": "2020-11-06T05:36:45Z", "author": {"login": "tkobayas"}, "path": "drools-core/src/main/java/org/drools/core/phreak/RuleNetworkEvaluator.java", "diffHunk": "@@ -804,7 +804,9 @@ public static void doUpdatesReorderLeftMemory(BetaMemory bm,\n \n         // sides must first be re-ordered, to ensure iteration integrity\n         for (LeftTuple leftTuple = srcLeftTuples.getUpdateFirst(); leftTuple != null; leftTuple = leftTuple.getStagedNext()) {\n-            ltm.remove(leftTuple);\n+            if (leftTuple.getMemory() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDMyNDIxOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/phreak/PhreakAccumulateNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzozNjoyN1rOHui-_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1MDo1MlrOHujWFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2OTcyNA==", "bodyText": "Minor: the method initAccumulateContextOnLeftTuple already sets the contextObject on the leftTuple, I believe you can remove this statement.", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518569724", "createdAt": "2020-11-06T07:36:27Z", "author": {"login": "mariofusco"}, "path": "drools-core/src/main/java/org/drools/core/phreak/PhreakAccumulateNode.java", "diffHunk": "@@ -255,7 +252,11 @@ public void doLeftUpdates(AccumulateNode accNode,\n \n         for (LeftTuple leftTuple = srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {\n             LeftTuple next = leftTuple.getStagedNext();\n-            final AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            if (accctx == null) {\n+                accctx = initAccumulateContextOnLeftTuple( am, wm, accumulate, leftTuple );\n+                leftTuple.setContextObject(accctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTYzOA==", "bodyText": "Thanks, removed.", "url": "https://github.com/kiegroup/drools/pull/3222#discussion_r518575638", "createdAt": "2020-11-06T07:50:52Z", "author": {"login": "tkobayas"}, "path": "drools-core/src/main/java/org/drools/core/phreak/PhreakAccumulateNode.java", "diffHunk": "@@ -255,7 +252,11 @@ public void doLeftUpdates(AccumulateNode accNode,\n \n         for (LeftTuple leftTuple = srcLeftTuples.getUpdateFirst(); leftTuple != null; ) {\n             LeftTuple next = leftTuple.getStagedNext();\n-            final AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            AccumulateContext accctx = (AccumulateContext) leftTuple.getContextObject();\n+            if (accctx == null) {\n+                accctx = initAccumulateContextOnLeftTuple( am, wm, accumulate, leftTuple );\n+                leftTuple.setContextObject(accctx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU2OTcyNA=="}, "originalCommit": {"oid": "7a6c00c4a9bc795a93eb20dc7c7bcf262a8fdaa8"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2273, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}