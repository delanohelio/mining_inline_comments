{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjkzMTgy", "number": 2961, "title": "[DROOLS-5448] Add TransformationDictionary to \"compiler\" stack method", "bodyText": "@danielezonca @mariofusco @jiripetrlik\nSee https://issues.redhat.com/browse/DROOLS-5448\nThis PR is meant to split the parent one.\nBasically, it\n\nadd TransformationDictionary to signatures of methods involved in PMML compilation\ndefine the actual transformations inside PMMLRuntime (currently required maps are not populated)\nupdates tests to match modifications", "createdAt": "2020-06-23T16:46:01Z", "url": "https://github.com/kiegroup/drools/pull/2961", "merged": true, "mergeCommit": {"oid": "b87c3dbd65a3f5227d72d3259d3c515c1d859f27"}, "closed": true, "closedAt": "2020-06-24T10:21:34Z", "author": {"login": "gitgabrio"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuIP4RgH2gAyNDM4NjkzMTgyOjg1YTE2MmVhZDAwMjQwNWU4NzYyYjg4ZWY2ODFlYjJmNThhOThiNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuXYqOgFqTQzNjUxNjMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d", "author": {"user": {"login": "gitgabrio", "name": "Gabriele Cardosi"}}, "url": "https://github.com/kiegroup/drools/commit/85a162ead002405e8762b88ef681eb2f58a98b5d", "committedDate": "2020-06-23T16:43:11Z", "message": "[DROOLS-5448] Add TransformationDictionary to \"compiler\" stack methods. Implemented transformations flow inside Runtime."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDc3OTUx", "url": "https://github.com/kiegroup/drools/pull/2961#pullrequestreview-436077951", "createdAt": "2020-06-23T19:10:53Z", "commit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMDo1M1rOGn28DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNzoyMlrOGn3JaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ0Nzc1Nw==", "bodyText": "final on last parameter", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444447757", "createdAt": "2020-06-23T19:10:53Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "diffHunk": "@@ -29,24 +30,26 @@\n     PMML_MODEL getPMMLModelType();\n \n     /**\n+     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModel(DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ0Nzg3Ng==", "bodyText": "Final on first and last parameters", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444447876", "createdAt": "2020-06-23T19:11:07Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "diffHunk": "@@ -29,24 +30,26 @@\n     PMML_MODEL getPMMLModelType();\n \n     /**\n+     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModel(DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);\n \n     /**\n      * Method to be called following a <b>kie-maven-plugin</b> invocation\n      *\n      * @param packageName the package into which put all the generated classes out of the given <code>Model</code>\n-     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModelFromPlugin(String packageName, DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModelFromPlugin(String packageName, final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MDIxMw==", "bodyText": "Unmodifiable wrapper missing", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444450213", "createdAt": "2020-06-23T19:15:32Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "diffHunk": "@@ -44,8 +45,28 @@ public void addMissingValueReplaced(String fieldName, Object missingValueReplace\n         missingValueReplacedMap.put(fieldName, missingValueReplaced);\n     }\n \n+    @Override\n+    public void addCommonTranformation(String fieldName, Object commonTranformation) {\n+        localTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n+    @Override\n+    public void addLocalTranformation(String fieldName, Object commonTranformation) {\n+        commonTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n     @Override\n     public Map<String, Object> getMissingValueReplacedMap() {\n         return Collections.unmodifiableMap(missingValueReplacedMap);\n     }\n+\n+    @Override\n+    public Map<String, Object> getCommonTransformationMap() {\n+        return commonTransformationMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MDM1OQ==", "bodyText": "Unmodifiable wrapper missing", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444450359", "createdAt": "2020-06-23T19:15:47Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "diffHunk": "@@ -44,8 +45,28 @@ public void addMissingValueReplaced(String fieldName, Object missingValueReplace\n         missingValueReplacedMap.put(fieldName, missingValueReplaced);\n     }\n \n+    @Override\n+    public void addCommonTranformation(String fieldName, Object commonTranformation) {\n+        localTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n+    @Override\n+    public void addLocalTranformation(String fieldName, Object commonTranformation) {\n+        commonTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n     @Override\n     public Map<String, Object> getMissingValueReplacedMap() {\n         return Collections.unmodifiableMap(missingValueReplacedMap);\n     }\n+\n+    @Override\n+    public Map<String, Object> getCommonTransformationMap() {\n+        return commonTransformationMap;\n+    }\n+\n+    @Override\n+    public Map<String, Object> getLocalTransformationMap() {\n+        return localTransformationMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MTE3Nw==", "bodyText": "Final on last parameter.\nMissing TransformationDictionary parameter?", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444451177", "createdAt": "2020-06-23T19:17:22Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/provider/DroolsModelProvider.java", "diffHunk": "@@ -76,11 +76,12 @@ public E getKiePMMLModelFromPlugin(String packageName, DataDictionary dataDictio\n         }\n     }\n \n-    public abstract E getKiePMMLDroolsModel(DataDictionary dataDictionary, T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract E getKiePMMLDroolsModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n \n-    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(DataDictionary dataDictionary, T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary, final T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48dfe1575e04da10aa84dc9b0abe69e8b4beeed9", "author": {"user": {"login": "gitgabrio", "name": "Gabriele Cardosi"}}, "url": "https://github.com/kiegroup/drools/commit/48dfe1575e04da10aa84dc9b0abe69e8b4beeed9", "committedDate": "2020-06-24T08:19:50Z", "message": "[DROOLS-5448] Make all parameters \"final\" in modified classes. Fixed local transformations logic inside PMMLRuntimeImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cf24e7ad6d2f45ebcf43b83c6bd068a58d8099c", "author": {"user": {"login": "gitgabrio", "name": "Gabriele Cardosi"}}, "url": "https://github.com/kiegroup/drools/commit/2cf24e7ad6d2f45ebcf43b83c6bd068a58d8099c", "committedDate": "2020-06-24T08:27:49Z", "message": "[DROOLS-5448] Return unmodifiable maps from PMMLContextImpl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDk0OTE1", "url": "https://github.com/kiegroup/drools/pull/2961#pullrequestreview-436494915", "createdAt": "2020-06-24T09:50:48Z", "commit": {"oid": "2cf24e7ad6d2f45ebcf43b83c6bd068a58d8099c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NTE2MzE2", "url": "https://github.com/kiegroup/drools/pull/2961#pullrequestreview-436516316", "createdAt": "2020-06-24T10:21:21Z", "commit": {"oid": "2cf24e7ad6d2f45ebcf43b83c6bd068a58d8099c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1925, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}