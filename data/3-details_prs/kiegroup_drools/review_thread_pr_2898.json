{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTE3MzQz", "number": 2898, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNDoyMVrOD8flxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNDoyMVrOD8flxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzU4NzI0OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/ast/DMNFunctionWithReturnType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNDoyMVrOGVd3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDo0MzoxN1rOGVfrEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MjY0Mw==", "bodyText": "A small suggestion but I'm not sure if it is applicable: maybe it could have an overloading approach to coerceUsingType method for the scenario which doesn't demand such a parameter. If the (!typeCheck) condition inside coerceUsingType can't be changed to another place, then this suggestion makes no sense.", "url": "https://github.com/kiegroup/drools/pull/2898#discussion_r425162643", "createdAt": "2020-05-14T14:04:21Z", "author": {"login": "hellowdan"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/ast/DMNFunctionWithReturnType.java", "diffHunk": "@@ -59,6 +59,7 @@ public Object invokeReflectively(EvaluationContext ctx, Object[] params) {\n         Object result = wrapped.invokeReflectively(ctx, params);\n         result = DMNRuntimeImpl.coerceUsingType(result,\n                                                 returnType,\n+                                                true, // this FN is created when typeCheck==true, hence here always true.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MjIwOA==", "bodyText": "As discussed, in 3 out of 4 cases, it is not a literal but an instance parameter. Consensus is not need of refactor.", "url": "https://github.com/kiegroup/drools/pull/2898#discussion_r425192208", "createdAt": "2020-05-14T14:43:17Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/ast/DMNFunctionWithReturnType.java", "diffHunk": "@@ -59,6 +59,7 @@ public Object invokeReflectively(EvaluationContext ctx, Object[] params) {\n         Object result = wrapped.invokeReflectively(ctx, params);\n         result = DMNRuntimeImpl.coerceUsingType(result,\n                                                 returnType,\n+                                                true, // this FN is created when typeCheck==true, hence here always true.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MjY0Mw=="}, "originalCommit": {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2520, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}