{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjE1MjI3", "number": 3264, "title": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events", "bodyText": "Adding listener for signal and messages\nJIRA:\nJBPM-9474\ndepends on:\nkiegroup/droolsjbpm-knowledge#486\nmerge with\nkiegroup/jbpm#1808\nkiegroup/droolsjbpm-integration#2322", "createdAt": "2020-11-24T16:41:10Z", "url": "https://github.com/kiegroup/drools/pull/3264", "merged": true, "mergeCommit": {"oid": "7f2329f299ab84a79b5231ba0523f8d04fe32baf"}, "closed": true, "closedAt": "2020-12-04T07:59:46Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfupk6ABqjQwMzQ0MDk0Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdizCsvAFqTU0NDcyNzU3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "925d454af357979679ff91c9bbcf224db9ccc7aa", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/925d454af357979679ff91c9bbcf224db9ccc7aa", "committedDate": "2020-11-24T16:36:38Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}, "afterCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "committedDate": "2020-11-24T19:09:42Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MTM1NTUy", "url": "https://github.com/kiegroup/drools/pull/3264#pullrequestreview-539135552", "createdAt": "2020-11-26T09:28:20Z", "commit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToyODoyMFrOH6SxwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToyODo0OVrOH6SzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NzEwNA==", "bodyText": "can be replaced with method reference\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        notifyAllListeners(event, (l, e) -> l.onSignal(e));\n          \n          \n            \n                        notifyAllListeners(event, ProcessEventListener::onSignal);", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r530887104", "createdAt": "2020-11-26T09:28:20Z", "author": {"login": "afalhambra"}, "path": "drools-core/src/main/java/org/drools/core/event/ProcessEventSupport.java", "diffHunk": "@@ -143,6 +145,29 @@ public void fireAfterSLAViolated(final ProcessInstance instance, NodeInstance no\n         }\n     }\n \n+    public void fireOnSignal(final ProcessInstance instance,\n+                             NodeInstance nodeInstance,\n+                             KieRuntime kruntime,\n+                             String signalName,\n+                             Object signalObject) {\n+        if (hasListeners()) {\n+            final SignalEvent event = new SignalEventImpl(instance, kruntime, nodeInstance, signalName, signalObject);\n+            notifyAllListeners(event, (l, e) -> l.onSignal(e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NzQ3Mw==", "bodyText": "same as above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        notifyAllListeners(event, (l, e) -> l.onMessage(e));\n          \n          \n            \n                        notifyAllListeners(event, ProcessEventListener::onMessage);", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r530887473", "createdAt": "2020-11-26T09:28:49Z", "author": {"login": "afalhambra"}, "path": "drools-core/src/main/java/org/drools/core/event/ProcessEventSupport.java", "diffHunk": "@@ -143,6 +145,29 @@ public void fireAfterSLAViolated(final ProcessInstance instance, NodeInstance no\n         }\n     }\n \n+    public void fireOnSignal(final ProcessInstance instance,\n+                             NodeInstance nodeInstance,\n+                             KieRuntime kruntime,\n+                             String signalName,\n+                             Object signalObject) {\n+        if (hasListeners()) {\n+            final SignalEvent event = new SignalEventImpl(instance, kruntime, nodeInstance, signalName, signalObject);\n+            notifyAllListeners(event, (l, e) -> l.onSignal(e));\n+        }\n+    }\n+\n+    public void fireOnMessage(final ProcessInstance instance,\n+                              NodeInstance nodeInstance,\n+                              KieRuntime kruntime,\n+                              String messageName,\n+                              Object messageObject) {\n+        if (hasListeners()) {\n+            final MessageEvent event = new MessageEventImpl(instance, kruntime, nodeInstance, messageName,\n+                    messageObject);\n+            notifyAllListeners(event, (l, e) -> l.onMessage(e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NDQwODc1", "url": "https://github.com/kiegroup/drools/pull/3264#pullrequestreview-539440875", "createdAt": "2020-11-26T16:16:16Z", "commit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoxNjoxNlrOH6hgoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjoxNjo0OVrOH6hhuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODQ4MQ==", "bodyText": "toString() method may be implemented to be similar to other classes that extend from ProcessEvent, wdyt?", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531128481", "createdAt": "2020-11-26T16:16:16Z", "author": {"login": "gmunozfe"}, "path": "drools-core/src/main/java/org/drools/core/event/MessageEventImpl.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.core.event;\n+\n+import org.kie.api.event.process.MessageEvent;\n+import org.kie.api.runtime.KieRuntime;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.api.runtime.process.ProcessInstance;\n+\n+public class MessageEventImpl extends ProcessEvent implements MessageEvent {\n+\n+    private static final long serialVersionUID = 1L;\n+    private NodeInstance nodeInstance;\n+    private String messageName;\n+    private Object messageObject;\n+\n+    public MessageEventImpl(ProcessInstance instance, KieRuntime kruntime, NodeInstance nodeInstance,\n+                            String messageName, Object messageObject) {\n+        super(instance, kruntime);\n+        this.nodeInstance = nodeInstance;\n+        this.messageName = messageName;\n+        this.messageObject = messageObject;\n+    }\n+\n+    @Override\n+    public NodeInstance getNodeInstance() {\n+        return nodeInstance;\n+    }\n+\n+    @Override\n+    public String getMessageName() {\n+        return messageName;\n+    }\n+\n+    @Override\n+    public Object getMessage() {\n+        return messageObject;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODc2Mw==", "bodyText": "Same here, implement toString()", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531128763", "createdAt": "2020-11-26T16:16:49Z", "author": {"login": "gmunozfe"}, "path": "drools-core/src/main/java/org/drools/core/event/SignalEventImpl.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.core.event;\n+\n+import org.kie.api.event.process.SignalEvent;\n+import org.kie.api.runtime.KieRuntime;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.api.runtime.process.ProcessInstance;\n+\n+public class SignalEventImpl extends ProcessEvent implements SignalEvent {\n+\n+    private static final long serialVersionUID = 1L;\n+    private NodeInstance nodeInstance;\n+    private String signalName;\n+    private Object signalObject;\n+\n+    public SignalEventImpl(ProcessInstance instance, KieRuntime kruntime, NodeInstance nodeInstance,\n+                            String signalName, Object signalObject) {\n+        super(instance, kruntime);\n+        this.nodeInstance = nodeInstance;\n+        this.signalName = signalName;\n+        this.signalObject = signalObject;\n+    }\n+\n+    @Override\n+    public NodeInstance getNodeInstance() {\n+        return nodeInstance;\n+    }\n+\n+    @Override\n+    public String getSignalName() {\n+        return signalName;\n+    }\n+\n+    @Override\n+    public Object getSignal() {\n+        return signalObject;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "committedDate": "2020-11-24T19:09:42Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}, "afterCommit": {"oid": "7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "committedDate": "2020-11-26T17:08:11Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NzU1NzYx", "url": "https://github.com/kiegroup/drools/pull/3264#pullrequestreview-539755761", "createdAt": "2020-11-27T07:30:04Z", "commit": {"oid": "7d6ef08bb059213f51227dea1a1ea49e0effdbf3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a99003199b272975b9b5034e55404db013f466f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/5a99003199b272975b9b5034e55404db013f466f", "committedDate": "2020-11-30T12:31:59Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "committedDate": "2020-11-26T17:08:11Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}, "afterCommit": {"oid": "5a99003199b272975b9b5034e55404db013f466f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/drools/commit/5a99003199b272975b9b5034e55404db013f466f", "committedDate": "2020-11-30T12:31:59Z", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NzI3NTc1", "url": "https://github.com/kiegroup/drools/pull/3264#pullrequestreview-544727575", "createdAt": "2020-12-04T07:58:46Z", "commit": {"oid": "5a99003199b272975b9b5034e55404db013f466f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1768, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}