{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjkzMTgy", "number": 2961, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMDo1M1rOEIGY7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNzoyMlrOEIGg4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTI4NzUwOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMDo1M1rOGn28DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMDo1M1rOGn28DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ0Nzc1Nw==", "bodyText": "final on last parameter", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444447757", "createdAt": "2020-06-23T19:10:53Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "diffHunk": "@@ -29,24 +30,26 @@\n     PMML_MODEL getPMMLModelType();\n \n     /**\n+     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModel(DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTI4ODIyOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMTowN1rOGn28hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxMTowN1rOGn28hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ0Nzg3Ng==", "bodyText": "Final on first and last parameters", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444447876", "createdAt": "2020-06-23T19:11:07Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-api/src/main/java/org/kie/pmml/compiler/api/provider/ModelImplementationProvider.java", "diffHunk": "@@ -29,24 +30,26 @@\n     PMML_MODEL getPMMLModelType();\n \n     /**\n+     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModel(DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);\n \n     /**\n      * Method to be called following a <b>kie-maven-plugin</b> invocation\n      *\n      * @param packageName the package into which put all the generated classes out of the given <code>Model</code>\n-     *\n      * @param dataDictionary\n+     * @param transformationDictionary\n      * @param model\n      * @param kBuilder Using <code>Object</code> to avoid coupling with drools\n      * @return\n      * @throws KiePMMLInternalException\n      */\n-    E getKiePMMLModelFromPlugin(String packageName, DataDictionary dataDictionary, T model, Object kBuilder);\n+    E getKiePMMLModelFromPlugin(String packageName, final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Object kBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTMwMTkzOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNTozMlrOGn3FpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNTozMlrOGn3FpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MDIxMw==", "bodyText": "Unmodifiable wrapper missing", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444450213", "createdAt": "2020-06-23T19:15:32Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "diffHunk": "@@ -44,8 +45,28 @@ public void addMissingValueReplaced(String fieldName, Object missingValueReplace\n         missingValueReplacedMap.put(fieldName, missingValueReplaced);\n     }\n \n+    @Override\n+    public void addCommonTranformation(String fieldName, Object commonTranformation) {\n+        localTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n+    @Override\n+    public void addLocalTranformation(String fieldName, Object commonTranformation) {\n+        commonTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n     @Override\n     public Map<String, Object> getMissingValueReplacedMap() {\n         return Collections.unmodifiableMap(missingValueReplacedMap);\n     }\n+\n+    @Override\n+    public Map<String, Object> getCommonTransformationMap() {\n+        return commonTransformationMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTMwMjkyOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNTo0N1rOGn3GNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNTo0N1rOGn3GNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MDM1OQ==", "bodyText": "Unmodifiable wrapper missing", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444450359", "createdAt": "2020-06-23T19:15:47Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-core/src/main/java/org/kie/pmml/evaluator/core/PMMLContextImpl.java", "diffHunk": "@@ -44,8 +45,28 @@ public void addMissingValueReplaced(String fieldName, Object missingValueReplace\n         missingValueReplacedMap.put(fieldName, missingValueReplaced);\n     }\n \n+    @Override\n+    public void addCommonTranformation(String fieldName, Object commonTranformation) {\n+        localTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n+    @Override\n+    public void addLocalTranformation(String fieldName, Object commonTranformation) {\n+        commonTransformationMap.put(fieldName, commonTranformation);\n+    }\n+\n     @Override\n     public Map<String, Object> getMissingValueReplacedMap() {\n         return Collections.unmodifiableMap(missingValueReplacedMap);\n     }\n+\n+    @Override\n+    public Map<String, Object> getCommonTransformationMap() {\n+        return commonTransformationMap;\n+    }\n+\n+    @Override\n+    public Map<String, Object> getLocalTransformationMap() {\n+        return localTransformationMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTMwNzg0OnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/provider/DroolsModelProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNzoyMlrOGn3JaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwODoyMzoyMVrOGoH_pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MTE3Nw==", "bodyText": "Final on last parameter.\nMissing TransformationDictionary parameter?", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444451177", "createdAt": "2020-06-23T19:17:22Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/provider/DroolsModelProvider.java", "diffHunk": "@@ -76,11 +76,12 @@ public E getKiePMMLModelFromPlugin(String packageName, DataDictionary dataDictio\n         }\n     }\n \n-    public abstract E getKiePMMLDroolsModel(DataDictionary dataDictionary, T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract E getKiePMMLDroolsModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n \n-    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(DataDictionary dataDictionary, T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary, final T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcyNzIwNA==", "bodyText": "@danielezonca\nTransformations need to be executed on input data before evaluation. Rules are used only for evaluation, so it should not be needed", "url": "https://github.com/kiegroup/drools/pull/2961#discussion_r444727204", "createdAt": "2020-06-24T08:23:21Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/provider/DroolsModelProvider.java", "diffHunk": "@@ -76,11 +76,12 @@ public E getKiePMMLModelFromPlugin(String packageName, DataDictionary dataDictio\n         }\n     }\n \n-    public abstract E getKiePMMLDroolsModel(DataDictionary dataDictionary, T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract E getKiePMMLDroolsModel(final DataDictionary dataDictionary, final TransformationDictionary transformationDictionary, final T model, Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n \n-    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(DataDictionary dataDictionary, T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);\n+    public abstract KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary, final T model, final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MTE3Nw=="}, "originalCommit": {"oid": "85a162ead002405e8762b88ef681eb2f58a98b5d"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2450, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}