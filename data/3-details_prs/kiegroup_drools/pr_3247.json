{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzQ5Mjgx", "number": 3247, "title": "[DROOLS-5730] optimize executable model's constraint evaluator", "bodyText": "", "createdAt": "2020-11-18T17:25:03Z", "url": "https://github.com/kiegroup/drools/pull/3247", "merged": true, "mergeCommit": {"oid": "c20943d9ca49b5fc5a1bbf9389502e50bd599802"}, "closed": true, "closedAt": "2020-11-19T18:25:02Z", "author": {"login": "mariofusco"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddxiQKAH2gAyNTIzMzQ5MjgxOmYxOWJiY2U3MjZhMTc1MWZiNjUxZTI2ZTBjOGViNWYyNmEyOTNmMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd95GagFqTUzNDE1MjMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f19bbce726a1751fb651e26e0c8eb5f26a293f0b", "author": {"user": {"login": "mariofusco", "name": "Mario Fusco"}}, "url": "https://github.com/kiegroup/drools/commit/f19bbce726a1751fb651e26e0c8eb5f26a293f0b", "committedDate": "2020-11-18T17:23:48Z", "message": "[DROOLS-5730] optimize executable model's constraint evaluator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTUyMzI5", "url": "https://github.com/kiegroup/drools/pull/3247#pullrequestreview-534152329", "createdAt": "2020-11-19T07:47:36Z", "commit": {"oid": "f19bbce726a1751fb651e26e0c8eb5f26a293f0b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzo0NzozN1rOH2QZ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzo0NzozN1rOH2QZ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY1MzkxMw==", "bodyText": "@mariofusco These two lines (among others) are a great example that maybe Drools would benefit from a consistent code style.\nIn OptaPlanner, we've employed this plugin, which enforces a consistent (and configurable) code style during the build, just like Quarkus does:\nhttps://code.revelc.net/formatter-maven-plugin/\nMaybe you could consider that too? (Just a suggestion.)", "url": "https://github.com/kiegroup/drools/pull/3247#discussion_r526653913", "createdAt": "2020-11-19T07:47:37Z", "author": {"login": "triceo"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/constraints/ConstraintEvaluator.java", "diffHunk": "@@ -226,4 +214,109 @@ public boolean isTemporal() {\n     public Interval getInterval() {\n         throw new UnsupportedOperationException();\n     }\n+\n+    protected void setPatternDeclaration( Declaration patternDeclaration ) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    static abstract class InnerEvaluator {\n+\n+        private final Declaration patternDeclaration;\n+\n+        protected InnerEvaluator( Declaration patternDeclaration ) {\n+            this.patternDeclaration = patternDeclaration;\n+        }\n+\n+        public abstract boolean evaluate( InternalFactHandle handle, InternalWorkingMemory workingMemory ) throws Exception;\n+        public abstract boolean evaluate(InternalFactHandle handle, Tuple tuple, InternalWorkingMemory workingMemory) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f19bbce726a1751fb651e26e0c8eb5f26a293f0b"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1753, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}