{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTQ2NDc1", "number": 2969, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowODoxM1rOEKbdBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoyMTo0NlrOEKc-dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzcxMDEyOnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowODoxM1rOGrdhew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1Njo1OFrOGrhEJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTY1OQ==", "bodyText": "what about empty string instead of ANONYMOUS?", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448225659", "createdAt": "2020-07-01T09:08:13Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java", "diffHunk": "@@ -40,7 +43,7 @@ private KiePMMLUtil() {\n      * @throws JAXBException\n      */\n     public static PMML load(String source) throws SAXException, JAXBException {\n-        return load(new ByteArrayInputStream(source.getBytes()));\n+        return load(new ByteArrayInputStream(source.getBytes()), \"ANONYMOUS\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c670378a6acae15ac999094216a75e40c4c745ee"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4MzY4NQ==", "bodyText": "@danielezonca\nDone", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448283685", "createdAt": "2020-07-01T10:56:58Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java", "diffHunk": "@@ -40,7 +43,7 @@ private KiePMMLUtil() {\n      * @throws JAXBException\n      */\n     public static PMML load(String source) throws SAXException, JAXBException {\n-        return load(new ByteArrayInputStream(source.getBytes()));\n+        return load(new ByteArrayInputStream(source.getBytes()), \"ANONYMOUS\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTY1OQ=="}, "originalCommit": {"oid": "c670378a6acae15ac999094216a75e40c4c745ee"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzk1OTU5OnYy", "diffSide": "RIGHT", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDoyMTo0NlrOGrgAXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo1OTowN1rOGrhH8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2NjMzMw==", "bodyText": "Do not use File.separator and use /: Kie virtual file system doesn't support OS specific separator so you always receive /. Or at least try both", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448266333", "createdAt": "2020-07-01T10:21:46Z", "author": {"login": "danielezonca"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java", "diffHunk": "@@ -102,4 +107,12 @@ static PMMLCompiler getCompiler(KnowledgeBuilderImpl kbuilderImpl) {\n         // to retrieve model implementations\n         return new PMMLCompilerImpl();\n     }\n+\n+    static String getFileName(final String fullPath) {\n+        String toReturn = fullPath;\n+        if (fullPath.contains(File.separator)) {\n+            toReturn = fullPath.substring(fullPath.lastIndexOf(File.separator) + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c670378a6acae15ac999094216a75e40c4c745ee"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4NDY1Nw==", "bodyText": "@danielezonca\nDone", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448284657", "createdAt": "2020-07-01T10:59:07Z", "author": {"login": "gitgabrio"}, "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java", "diffHunk": "@@ -102,4 +107,12 @@ static PMMLCompiler getCompiler(KnowledgeBuilderImpl kbuilderImpl) {\n         // to retrieve model implementations\n         return new PMMLCompilerImpl();\n     }\n+\n+    static String getFileName(final String fullPath) {\n+        String toReturn = fullPath;\n+        if (fullPath.contains(File.separator)) {\n+            toReturn = fullPath.substring(fullPath.lastIndexOf(File.separator) + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2NjMzMw=="}, "originalCommit": {"oid": "c670378a6acae15ac999094216a75e40c4c745ee"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2365, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}