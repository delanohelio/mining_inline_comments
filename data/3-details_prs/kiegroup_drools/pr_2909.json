{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzU1Njk1", "number": 2909, "title": "[DROOLS-5353] Avoid ClassLoader retention in LambdaIntrospector", "bodyText": "In order to avoid ClassLoader retention, this PR changes the cache to use WeakHashMap where a ClassLoader is a weak key. So if the ClassLoader is no longer used, the entry will be removed (= WeakHashMap doesn't prevent ClassLoader from being garbage-collected).\nClassIdentifier is split into ClassLoader and className so the Map structure is also split. In the WeakHashMap, methodFingerprintsMap is put as a value per className. So the methodFingerprintsMap itself isn't changed by this PR.\nNow ClassLoader wouldn't leak regardless of externaliseCanonicalModelLambda is enabled or not. Btw, the cache size doesn't matter much now. Even if externaliseCanonicalModelLambda is enabled, the default value '32' wouldn't be a problem because ClassLoarders will be garbage-collected.", "createdAt": "2020-05-22T07:10:42Z", "url": "https://github.com/kiegroup/drools/pull/2909", "merged": true, "mergeCommit": {"oid": "d9dd71d303cfa4e5bca6f324a9699b7043a829d8"}, "closed": true, "closedAt": "2020-05-27T07:02:49Z", "author": {"login": "tkobayas"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjsg7KgH2gAyNDIxNzU1Njk1OmMxNGI2MWEzMGFjOWYwOGY0OTgyYjk2NzA4NzQwNGQ3Njc1ZmExMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck7LVUAH2gAyNDIxNzU1Njk1OjAxNTkxODkyZDQ2ZTMwODE5ZWJkYzZkMThiZDQ1ZjdmOGZlOGI1MGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/c14b61a30ac9f08f4982b967087404d7675fa117", "committedDate": "2020-05-22T06:45:13Z", "message": "[DROOLS-5353] Avoid ClassLoader retention in LambdaIntrospector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODAxNDIy", "url": "https://github.com/kiegroup/drools/pull/2909#pullrequestreview-416801422", "createdAt": "2020-05-22T10:14:50Z", "commit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjA3ODE3", "url": "https://github.com/kiegroup/drools/pull/2909#pullrequestreview-417607817", "createdAt": "2020-05-25T10:09:16Z", "commit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzI3MzQx", "url": "https://github.com/kiegroup/drools/pull/2909#pullrequestreview-417727341", "createdAt": "2020-05-25T13:55:56Z", "commit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1NTo1N1rOGaB9OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1NTo1N1rOGaB9OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0ODIxNg==", "bodyText": "I don't think it is a good idea to read the cache field via reflection in this way, even in a test. Please add a package private accessor method and use it instead.", "url": "https://github.com/kiegroup/drools/pull/2909#discussion_r429948216", "createdAt": "2020-05-25T13:55:57Z", "author": {"login": "mariofusco"}, "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/util/LambdaIntrospectorTest.java", "diffHunk": "@@ -45,21 +45,23 @@ public boolean test(org.drools.modelcompiler.domain.Person p) {\n \n     @Test\n     public void testMethodFingerprintsMapCacheSize() throws Exception {\n-        // Because methodFingerprintsMap is static, this property can be testable when you run this test method only\n+        // To test system property, you need to run this test method only.\n         // (mvn test -Dtest=LambdaIntrospectorTest#testMethodFingerprintsMapCacheSize)\n         // System.setProperty(LambdaIntrospector.LAMBDA_INTROSPECTOR_CACHE_SIZE, \"0\");\n \n         LambdaIntrospector lambdaIntrospector = new LambdaIntrospector();\n \n-        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMap\");\n+        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMapPerClassLoader\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01591892d46e30819ebdc6d18bd45f7f8fe8b50f", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/01591892d46e30819ebdc6d18bd45f7f8fe8b50f", "committedDate": "2020-05-26T02:24:08Z", "message": "- add package private accessor for testing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1544, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}