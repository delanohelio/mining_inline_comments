{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODcyMDIz", "number": 2945, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0Nzo0OVrOEF0kQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDoyMTozMlrOEJJqFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTM5NTg2OnYy", "diffSide": "RIGHT", "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0Nzo0OVrOGkPSOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTozNTo0MVrOGk92gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ==", "bodyText": "is not already handled in the following code?\nhttps://github.com/kiegroup/drools/blob/master/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java#L264-L275\nIf not, would it make more sense to add this condition to the rollbackTransaction method?\nhttps://github.com/kiegroup/drools/blob/master/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java#L406", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r440652345", "createdAt": "2020-06-16T07:47:49Z", "author": {"login": "afalhambra"}, "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -600,14 +600,15 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n                 txm.commit( transactionOwner );\n \n             } catch ( RuntimeException re ) {\n-                rollbackTransaction( re,\n-                        transactionOwner );\n+                if (transactionOwner) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13578b09b47f8ee9db0bbcdea7f4199c717ae1b5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxNTQ2Nw==", "bodyText": "Actually that code block is that cause of the problem. I removed from the exeuction flow.\nWhen you are executing a workflow you don't want the subprocess to control the transaction (mark it as rollback).\nThe only doubt about this one is checking about tx control in a EJB container managed. As I am not allowing the tx rolling back it will happen during ejb tx interceptor as it will catch the tx problem.\nI am kind unsure about that\n@gmunozfe @afalhambra  wdyt ?", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r441315467", "createdAt": "2020-06-17T06:44:30Z", "author": {"login": "elguardian"}, "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -600,14 +600,15 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n                 txm.commit( transactionOwner );\n \n             } catch ( RuntimeException re ) {\n-                rollbackTransaction( re,\n-                        transactionOwner );\n+                if (transactionOwner) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ=="}, "originalCommit": {"oid": "13578b09b47f8ee9db0bbcdea7f4199c717ae1b5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQxNTI5OQ==", "bodyText": "As discussed already, it works fine in transaction managed container based like springboot, though as you said I'm not sure about EJBs behavior. Maybe it is worth to give it a try in some other app server?", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r441415299", "createdAt": "2020-06-17T09:35:41Z", "author": {"login": "afalhambra"}, "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -600,14 +600,15 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n                 txm.commit( transactionOwner );\n \n             } catch ( RuntimeException re ) {\n-                rollbackTransaction( re,\n-                        transactionOwner );\n+                if (transactionOwner) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ=="}, "originalCommit": {"oid": "13578b09b47f8ee9db0bbcdea7f4199c717ae1b5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDMwODcxOnYy", "diffSide": "RIGHT", "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDoyMTozMlrOGpixHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDoyMTozMlrOGpixHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxNDQzMQ==", "bodyText": "Just a silly suggestion. Maybe this is a little clearer\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                txm.putResource(DROOLS_PARENT_RUNNER, new Object());\n          \n          \n            \n                                txm.putResource(DROOLS_PARENT_RUNNER, Boolean.TRUE);", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r446214431", "createdAt": "2020-06-26T14:21:32Z", "author": {"login": "afalhambra"}, "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -578,11 +578,18 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n \n             // Open the entity manager before the transaction begins.\n             PersistenceContext persistenceContext = jpm.getApplicationScopedPersistenceContext();\n-\n+            // We flag the current persistence runner\n+            final String DROOLS_PARENT_RUNNER = \"DROOLS_PARENT_RUNNER\";\n+            boolean isParentRunner = txm.getResource(DROOLS_PARENT_RUNNER) == null;\n             boolean transactionOwner = false;\n+\n             try {\n+                if (isParentRunner) {\n+                    txm.putResource(DROOLS_PARENT_RUNNER, new Object());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dab62b1cf0f85f0b7034262529115a6683d526ff"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2444, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}