{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTU3MTQz", "number": 3286, "title": "DROOLS-5892 Guided Rule Editor: Method calls do not support template keys", "bodyText": "DROOLS-5892 Guided Rule Editor: Method calls do not support template keys\nreferenced Pull Requests:\n\n#3286\nkiegroup/drools-wb#1450\n\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-12-11T14:43:53Z", "url": "https://github.com/kiegroup/drools/pull/3286", "merged": true, "mergeCommit": {"oid": "d5e5021758bc4d0e84bdba01d94331743e021075"}, "closed": true, "closedAt": "2021-04-19T08:48:47Z", "author": {"login": "Rikkola"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdxov07AFqTU3MTAwODQzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeGNdmjABqjQ1MDA0NzUzMzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxMDA4NDMy", "url": "https://github.com/kiegroup/drools/pull/3286#pullrequestreview-571008432", "createdAt": "2021-01-19T08:37:02Z", "commit": {"oid": "b58bc9ec51783754ed18f102fbcd705515979287"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwODozNzowMlrOIWDiQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwODo0MjozM1rOIWDvxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTk5NzUwNg==", "bodyText": "We could simplify as:\nfinal StringBuilder drl = new StringBuilder();\nfor (final String setter : entry.getValue()) {\n  drl.append(setter).append(\"\\n\");\n}\n\nfinal FreeFormLine action = new FreeFormLine();\naction.setText(drl.toString());\nm.addRhsItem(action,\n             setStatementsPosition.get(entry.getKey()));", "url": "https://github.com/kiegroup/drools/pull/3286#discussion_r559997506", "createdAt": "2021-01-19T08:37:02Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -3154,16 +3200,30 @@ private void parseRhs(final RuleModel m,\n                 m.addRhsItem(action,\n                              setStatementsPosition.get(entry.getKey()));\n             } else {\n-                StringBuilder sb = new StringBuilder();\n-                for (String setter : entry.getValue()) {\n-                    sb.append(setter).append(\"\\n\");\n+\n+                if (splitEvals) {\n+\n+                    for (final String drl : entry.getValue()) {\n+\n+                        final FreeFormLine action = new FreeFormLine();\n+                        action.setText(drl);\n+                        m.addRhsItem(action,\n+                                     setStatementsPosition.get(entry.getKey()));\n+                    }\n+                } else {\n+\n+                    final StringBuilder sb = new StringBuilder();\n+                    for (final String setter : entry.getValue()) {\n+                        sb.append(setter).append(\"\\n\");\n+                    }\n+                    final String drl = sb.toString();\n+\n+                    final FreeFormLine action = new FreeFormLine();\n+                    action.setText(drl);\n+                    m.addRhsItem(action,\n+                                 setStatementsPosition.get(entry.getKey()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58bc9ec51783754ed18f102fbcd705515979287"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDAwMDE5Ng==", "bodyText": "could we please javadoc splitEvals parameter?", "url": "https://github.com/kiegroup/drools/pull/3286#discussion_r560000196", "createdAt": "2021-01-19T08:41:07Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelPersistence.java", "diffHunk": "@@ -30,6 +30,11 @@ RuleModel unmarshal(final String str,\n                         final List<String> globals,\n                         final PackageDataModelOracle dmo);\n \n+    RuleModel unmarshal(final String str,\n+                        final List<String> globals,\n+                        final PackageDataModelOracle dmo,\n+                        final boolean splitEvals);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58bc9ec51783754ed18f102fbcd705515979287"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDAwMDk2Nw==", "bodyText": "Do not understand this comment, could you please clarify?", "url": "https://github.com/kiegroup/drools/pull/3286#discussion_r560000967", "createdAt": "2021-01-19T08:42:33Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/backend/util/GuidedDTBRDRLPersistence.java", "diffHunk": "@@ -317,28 +319,67 @@ protected void generateModifyMethodSeparator(final RHSGeneratorContext gctx,\n             }\n         }\n \n+        @Override\n+        public void visitActionCallMethod(final ActionCallMethod action) {\n+\n+            // Clony clonies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b58bc9ec51783754ed18f102fbcd705515979287"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b58bc9ec51783754ed18f102fbcd705515979287", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/b58bc9ec51783754ed18f102fbcd705515979287", "committedDate": "2020-12-11T14:42:30Z", "message": "DROOLS-5892 Guided Rule Editor: Method calls do not support template keys"}, "afterCommit": {"oid": "1c01f38fd5d03d621b9d59d5c4d22d83f7a26f4d", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/1c01f38fd5d03d621b9d59d5c4d22d83f7a26f4d", "committedDate": "2021-01-29T10:52:40Z", "message": "Better support for method calls types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c01f38fd5d03d621b9d59d5c4d22d83f7a26f4d", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/1c01f38fd5d03d621b9d59d5c4d22d83f7a26f4d", "committedDate": "2021-01-29T10:52:40Z", "message": "Better support for method calls types"}, "afterCommit": {"oid": "fb271489fc8f74700374910429d3740c637d38e1", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/fb271489fc8f74700374910429d3740c637d38e1", "committedDate": "2021-02-01T08:49:02Z", "message": "Better support for method calls types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb271489fc8f74700374910429d3740c637d38e1", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/fb271489fc8f74700374910429d3740c637d38e1", "committedDate": "2021-02-01T08:49:02Z", "message": "Better support for method calls types"}, "afterCommit": {"oid": "2d7f30e071eb0bec3bc03ff7bb6714514c3a9216", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/2d7f30e071eb0bec3bc03ff7bb6714514c3a9216", "committedDate": "2021-02-01T15:01:10Z", "message": "Better support for method calls types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d7f30e071eb0bec3bc03ff7bb6714514c3a9216", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/2d7f30e071eb0bec3bc03ff7bb6714514c3a9216", "committedDate": "2021-02-01T15:01:10Z", "message": "Better support for method calls types"}, "afterCommit": {"oid": "fb88996145528a2d28fcf5ac94fe3937acdcee68", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/fb88996145528a2d28fcf5ac94fe3937acdcee68", "committedDate": "2021-02-01T16:42:09Z", "message": "Better support for method calls types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMTcyNzIx", "url": "https://github.com/kiegroup/drools/pull/3286#pullrequestreview-581172721", "createdAt": "2021-02-02T10:01:08Z", "commit": {"oid": "fb88996145528a2d28fcf5ac94fe3937acdcee68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDowMTowOVrOIeIxog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDowMTowOVrOIeIxog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODQ3MTk3MA==", "bodyText": "Could we please use Object.equals to prevent possible NPE? Or is NPE demanded as templateKeyValue should be never null?", "url": "https://github.com/kiegroup/drools/pull/3286#discussion_r568471970", "createdAt": "2021-02-02T10:01:09Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-guided-dtable/src/main/java/org/drools/workbench/models/guided/dtable/backend/util/GuidedDTBRDRLPersistence.java", "diffHunk": "@@ -317,28 +319,70 @@ protected void generateModifyMethodSeparator(final RHSGeneratorContext gctx,\n             }\n         }\n \n+        @Override\n+        public void visitActionCallMethod(final ActionCallMethod action) {\n+\n+            final ActionCallMethod clone = new ActionCallMethod();\n+            clone.setState(action.getState());\n+            clone.setVariable(action.getVariable());\n+            clone.setMethodName(action.getMethodName());\n+\n+            final ActionFieldValue[] actionFieldValuesClones = new ActionFieldValue[action.getFieldValues().length];\n+            clone.setFieldValues(actionFieldValuesClones);\n+            for (int i = 0; i < action.getFieldValues().length; i++) {\n+                final ActionFieldValue fieldValue = action.getFieldValue(i);\n+\n+                if (fieldValue instanceof ActionFieldFunction) {\n+                    final ActionFieldFunction afvClone = new ActionFieldFunction();\n+                    afvClone.setMethod(((ActionFieldFunction) fieldValue).getMethod());\n+                    afvClone.setField(fieldValue.getField());\n+                    afvClone.setNature(BaseSingleFieldConstraint.TYPE_LITERAL);\n+                    afvClone.setType(fieldValue.getType());\n+                    String value = fieldValue.getValue();\n+                    String templateKeyValue = rowDataProvider.getTemplateKeyValue(value);\n+                    if (\"\".equals(templateKeyValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb88996145528a2d28fcf5ac94fe3937acdcee68"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb88996145528a2d28fcf5ac94fe3937acdcee68", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/fb88996145528a2d28fcf5ac94fe3937acdcee68", "committedDate": "2021-02-01T16:42:09Z", "message": "Better support for method calls types"}, "afterCommit": {"oid": "1defbd0c5b03650ec209fdaa16e091cbf2adca63", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/1defbd0c5b03650ec209fdaa16e091cbf2adca63", "committedDate": "2021-02-03T10:03:14Z", "message": "Better support for method calls types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0NDMwOTc3", "url": "https://github.com/kiegroup/drools/pull/3286#pullrequestreview-604430977", "createdAt": "2021-03-04T18:40:02Z", "commit": {"oid": "1defbd0c5b03650ec209fdaa16e091cbf2adca63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3MTg1Mjcw", "url": "https://github.com/kiegroup/drools/pull/3286#pullrequestreview-607185270", "createdAt": "2021-03-09T09:24:53Z", "commit": {"oid": "1defbd0c5b03650ec209fdaa16e091cbf2adca63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "988dc3c3c2db2f0bf352bf11df3c58ccdcf0181d", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/988dc3c3c2db2f0bf352bf11df3c58ccdcf0181d", "committedDate": "2021-03-24T08:32:50Z", "message": "DROOLS-5892 Guided Rule Editor: Method calls do not support template keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "670513b04763a16e659382f56c814356a1025cfb", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/670513b04763a16e659382f56c814356a1025cfb", "committedDate": "2021-03-24T08:32:50Z", "message": "Better support for method calls types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1defbd0c5b03650ec209fdaa16e091cbf2adca63", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/1defbd0c5b03650ec209fdaa16e091cbf2adca63", "committedDate": "2021-02-03T10:03:14Z", "message": "Better support for method calls types"}, "afterCommit": {"oid": "670513b04763a16e659382f56c814356a1025cfb", "author": {"user": {"login": "Rikkola", "name": "Toni Rikkola"}}, "url": "https://github.com/kiegroup/drools/commit/670513b04763a16e659382f56c814356a1025cfb", "committedDate": "2021-03-24T08:32:50Z", "message": "Better support for method calls types"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1692, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}