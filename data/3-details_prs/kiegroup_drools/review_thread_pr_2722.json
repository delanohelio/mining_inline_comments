{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTczOTEw", "number": 2722, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzo1NDoxMlrODZvUyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTozOTozM1rODZzRMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzE2MzYzOnYy", "diffSide": "RIGHT", "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzo1NDoxMlrOFgTCwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODo1Nzo1OVrOFg2uKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMDc1NA==", "bodyText": "What about case if only parameters or only operator is set to null?", "url": "https://github.com/kiegroup/drools/pull/2722#discussion_r369410754", "createdAt": "2020-01-22T07:54:12Z", "author": {"login": "dupliaka"}, "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.drools.workbench.models.datamodel.rule;\n+\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.*;\n+\n+public class CEPWindowTest {\n+\n+    @Test\n+    public void genericValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+        cepWindow.setOperator(\"over window:time\");\n+        cepWindow.setParameters(new HashMap<>());\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void defaultValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void checkNulls() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f804fe1ba20c4fa9d6c374661bf3d233444eb590"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxOTc5OQ==", "bodyText": "I added more test coverage for these situations.", "url": "https://github.com/kiegroup/drools/pull/2722#discussion_r369419799", "createdAt": "2020-01-22T08:20:38Z", "author": {"login": "Rikkola"}, "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.drools.workbench.models.datamodel.rule;\n+\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.*;\n+\n+public class CEPWindowTest {\n+\n+    @Test\n+    public void genericValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+        cepWindow.setOperator(\"over window:time\");\n+        cepWindow.setParameters(new HashMap<>());\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void defaultValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void checkNulls() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMDc1NA=="}, "originalCommit": {"oid": "f804fe1ba20c4fa9d6c374661bf3d233444eb590"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMDQ2Mg==", "bodyText": "IDK if it's an overkill but (at least) one test creating two equal instances of CEPWindow and verifying hashCodes are equal may be nice....", "url": "https://github.com/kiegroup/drools/pull/2722#discussion_r369520462", "createdAt": "2020-01-22T12:00:42Z", "author": {"login": "manstis"}, "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.drools.workbench.models.datamodel.rule;\n+\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.*;\n+\n+public class CEPWindowTest {\n+\n+    @Test\n+    public void genericValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+        cepWindow.setOperator(\"over window:time\");\n+        cepWindow.setParameters(new HashMap<>());\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void defaultValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void checkNulls() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMDc1NA=="}, "originalCommit": {"oid": "f804fe1ba20c4fa9d6c374661bf3d233444eb590"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk5NTMwNg==", "bodyText": "@manstis I improved this test to not only check the hashcode, but to compare hashcodes between other instances. I hope the other workbench objects do not get jealous :)", "url": "https://github.com/kiegroup/drools/pull/2722#discussion_r369995306", "createdAt": "2020-01-23T08:57:59Z", "author": {"login": "Rikkola"}, "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.drools.workbench.models.datamodel.rule;\n+\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.*;\n+\n+public class CEPWindowTest {\n+\n+    @Test\n+    public void genericValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+        cepWindow.setOperator(\"over window:time\");\n+        cepWindow.setParameters(new HashMap<>());\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void defaultValues() {\n+        final CEPWindow cepWindow = new CEPWindow();\n+\n+        assertNotNull(cepWindow.hashCode());\n+    }\n+\n+    @Test\n+    public void checkNulls() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQxMDc1NA=="}, "originalCommit": {"oid": "f804fe1ba20c4fa9d6c374661bf3d233444eb590"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzgwOTc2OnYy", "diffSide": "RIGHT", "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTozOTozM1rOFgZKfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTozOTozM1rOFgZKfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUxMTAzOA==", "bodyText": "License please.", "url": "https://github.com/kiegroup/drools/pull/2722#discussion_r369511038", "createdAt": "2020-01-22T11:39:33Z", "author": {"login": "manstis"}, "path": "drools-workbench-models/drools-workbench-models-datamodel-api/src/test/java/org/drools/workbench/models/datamodel/rule/CEPWindowTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package org.drools.workbench.models.datamodel.rule;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2467ffd191e8d66803790288e664bb767c46656"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2620, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}