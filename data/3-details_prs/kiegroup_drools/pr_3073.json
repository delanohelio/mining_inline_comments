{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NjYxOTYz", "number": 3073, "title": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection", "bodyText": "JIRA: https://issues.redhat.com/browse/DROOLS-5561\nHow to retest a PR or trigger a specific build:\n\n* a pull request please add comment: Jenkins retest this\n \n* a full downstream build please add comment: Jenkins run fdb\n  \n* a compile downstream build please  add comment: Jenkins run cdb\n\n* a full production downstream build please add comment: Jenkins execute product fdb\n\n* an upstream build please add comment: Jenkins run upstream", "createdAt": "2020-09-02T08:33:42Z", "url": "https://github.com/kiegroup/drools/pull/3073", "merged": true, "mergeCommit": {"oid": "7a73f6c7a212b7cead88f7f0253d625dbf5561a8"}, "closed": true, "closedAt": "2020-09-11T06:47:27Z", "author": {"login": "tkobayas"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFJw04ABqjM3MjI5NDk5MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHdZniABqjM3NDk5Nzc2OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be1f1c32be76880348357a85a64a1ecb5ce7f342", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/be1f1c32be76880348357a85a64a1ecb5ce7f342", "committedDate": "2020-09-02T08:32:25Z", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection"}, "afterCommit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "committedDate": "2020-09-03T05:27:51Z", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjkyMTgy", "url": "https://github.com/kiegroup/drools/pull/3073#pullrequestreview-481692182", "createdAt": "2020-09-03T10:07:47Z", "commit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDowNzo0OFrOHMfr9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoxMDoyOFrOHMfxpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NDExOQ==", "bodyText": "@tkobayas definitely worth a separate ticket, but noticing now PropertyType is a placeholder not following the $name$ convention. Could you kindly record and separately revise this to become $PropertyType$, please? I believe requires changes only in this template and here: \n  \n    \n      drools/kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNDeclaredField.java\n    \n    \n         Line 195\n      in\n      a91703d\n    \n    \n    \n    \n\n        \n          \n           return n.toString().equals(\"PropertyType\"); \n        \n    \n  \n\n\nplease notice, imho, the \"<PROPERTY_NAME>\" is fine as-is, as that's a different kind of placeholder used by another processing \"stage\".\n@lucamolteni can comment if agree or other ideas here too.", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482864119", "createdAt": "2020-09-03T10:07:48Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -57,15 +57,7 @@ void fromMap(Map<String, Object> values) {\n             Object propertyValues = values.get(\"$property$\");\n             if(propertyValues != null) {\n                 $property$ = new java.util.ArrayList<>();\n-                for (Object v : (java.util.Collection<Object>) propertyValues) {\n-                    if (v instanceof PropertyType) {\n-                        $property$.add((PropertyType)v);\n-                    } else {\n-                        PropertyType item = new PropertyType();\n-                        item.fromMap((java.util.Map<String, Object>)v);\n-                        $property$.add(item);\n-                    }\n-                }\n+                processCompositeCollection($property$, (java.util.Collection)propertyValues, PropertyType.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NTE5Nw==", "bodyText": "lgtm, thanks! \ud83d\udc4d", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482865197", "createdAt": "2020-09-03T10:09:48Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -81,4 +73,23 @@ void fromMap(Map<String, Object> values) {\n         }\n     }\n \n+    void processCompositeCollection(java.util.Collection destCol, java.util.Collection srcCol, Class<?> baseClass) {\n+        for (Object v : (java.util.Collection<Object>) srcCol) {\n+            if (v instanceof java.util.Collection) {\n+                java.util.Collection innerDestcol = new java.util.ArrayList();\n+                processCompositeCollection(innerDestcol, (java.util.Collection) v, baseClass);\n+                destCol.add(innerDestcol);\n+            } else if (baseClass.isAssignableFrom(v.getClass())) {\n+                destCol.add(v);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg2NTU3Mg==", "bodyText": "this is fine, but it's not clear to me why this cannot be simply as\n                        PropertyType item = new PropertyType();\t\n                        item.fromMap((java.util.Map<String, Object>)v);\t\n                        $property$.add(item);\n\nas it was before, please?", "url": "https://github.com/kiegroup/drools/pull/3073#discussion_r482865572", "createdAt": "2020-09-03T10:10:28Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/resources/org/kie/dmn/core/impl/DMNTypeSafeTypeTemplate.java", "diffHunk": "@@ -81,4 +73,23 @@ void fromMap(Map<String, Object> values) {\n         }\n     }\n \n+    void processCompositeCollection(java.util.Collection destCol, java.util.Collection srcCol, Class<?> baseClass) {\n+        for (Object v : (java.util.Collection<Object>) srcCol) {\n+            if (v instanceof java.util.Collection) {\n+                java.util.Collection innerDestcol = new java.util.ArrayList();\n+                processCompositeCollection(innerDestcol, (java.util.Collection) v, baseClass);\n+                destCol.add(innerDestcol);\n+            } else if (baseClass.isAssignableFrom(v.getClass())) {\n+                destCol.add(v);\n+            } else {\n+                try {\n+                    org.kie.dmn.api.core.FEELPropertyAccessible item = (org.kie.dmn.api.core.FEELPropertyAccessible) baseClass.newInstance();\n+                    item.fromMap((java.util.Map<String, Object>) v);\n+                    destCol.add(item);\n+                } catch (InstantiationException | IllegalAccessException e) {\n+                    throw new org.kie.dmn.typesafe.DMNTypeSafeException(e);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzE2NzMw", "url": "https://github.com/kiegroup/drools/pull/3073#pullrequestreview-481716730", "createdAt": "2020-09-03T10:45:03Z", "commit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NzIxNzA5", "url": "https://github.com/kiegroup/drools/pull/3073#pullrequestreview-485721709", "createdAt": "2020-09-10T08:53:09Z", "commit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e78f229b5fe363777ba3b470d6e12d4e23b077", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/d3e78f229b5fe363777ba3b470d6e12d4e23b077", "committedDate": "2020-09-10T09:29:05Z", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/9e82eb0e8e000c98dd2e3bb3c9fcd377ef0aa4a4", "committedDate": "2020-09-03T05:27:51Z", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection"}, "afterCommit": {"oid": "d3e78f229b5fe363777ba3b470d6e12d4e23b077", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/d3e78f229b5fe363777ba3b470d6e12d4e23b077", "committedDate": "2020-09-10T09:29:05Z", "message": "[DROOLS-5561] Add DMN strongly typed tests for collection of collection"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1774, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}