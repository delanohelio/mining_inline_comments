{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyODk0Mjc3", "number": 3245, "title": "[DROOLS-5833] executable-model doesn't provide line number of DRL par\u2026", "bodyText": "\u2026se error\nJIRA:\nhttps://issues.redhat.com/browse/DROOLS-5833\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-11-18T04:01:56Z", "url": "https://github.com/kiegroup/drools/pull/3245", "merged": true, "mergeCommit": {"oid": "be0bd6f915b15f85a782ae49a4bf0abff68ee782"}, "closed": true, "closedAt": "2020-11-23T12:55:05Z", "author": {"login": "tkobayas"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddl71ggH2gAyNTIyODk0Mjc3OjBmMjVlMjk2MDQ4OWIzYTM4OTgxOWUwMTY5OTFmZjExYTBkOWNlMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfUiU8gFqTUzNjQzNzg2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/0f25e2960489b3a389819e016991ff11a0d9ce07", "committedDate": "2020-11-18T03:52:53Z", "message": "[DROOLS-5833] executable-model doesn't provide line number of DRL parse error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTAyNDM1", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-533102435", "createdAt": "2020-11-18T04:50:43Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo1MDo0M1rOH1c5SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo1MDo0M1rOH1c5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgwOTk5Mw==", "bodyText": "Actually, we can provide other Descr than RuleDescr to give a better line number. But at the moment, I follow the same approach as standard_drl (so use line number from RuleDescr) in order to have the same assertion value.", "url": "https://github.com/kiegroup/drools/pull/3245#discussion_r525809993", "createdAt": "2020-11-18T04:50:43Z", "author": {"login": "tkobayas"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/generator/visitor/accumulate/AccumulateVisitor.java", "diffHunk": "@@ -455,7 +455,7 @@ private boolean isCollectFunction(AccumulateFunction accumulateFunction) {\n     }\n \n     private void addNonExistingFunctionError(RuleContext context, AccumulateDescr.AccumulateFunctionCallDescr function) {\n-        context.addCompilationError(new InvalidExpressionErrorResult(String.format(\"Unknown accumulate function: '%s' on rule '%s'.\", function.getFunction(), context.getRuleDescr().getName())));\n+        context.addCompilationError(new InvalidExpressionErrorResult(String.format(\"Unknown accumulate function: '%s' on rule '%s'.\", function.getFunction(), context.getRuleDescr().getName()), Optional.of(context.getRuleDescr())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTAzMTM1", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-533103135", "createdAt": "2020-11-18T04:53:08Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo1MzowOVrOH1dCDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDo1MzowOVrOH1dCDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgxMjIzOQ==", "bodyText": "In order to convey the Descr which is being processed during drlxParse(), I enhanced RuleContext here.", "url": "https://github.com/kiegroup/drools/pull/3245#discussion_r525812239", "createdAt": "2020-11-18T04:53:09Z", "author": {"login": "tkobayas"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/generator/visitor/pattern/PatternDSL.java", "diffHunk": "@@ -133,7 +133,13 @@ private void generatePatternIdentifierIfMissing() {\n \n             ConstraintExpression constraintExpression = ConstraintExpression.createConstraintExpression(patternType, constraint, isPositional);\n \n-            DrlxParseResult drlxParseResult = constraintParser.drlxParse(patternType, patternIdentifier, constraintExpression, isPositional);\n+            DrlxParseResult drlxParseResult;\n+            try {\n+                context.setCurrentConstraintDescr(Optional.of(constraint));\n+                drlxParseResult = constraintParser.drlxParse(patternType, patternIdentifier, constraintExpression, isPositional);\n+            } finally {\n+                context.resetCurrentConstraintDescr();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMjA3NzQx", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-533207741", "createdAt": "2020-11-18T08:34:17Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozNDoxN1rOH1ib2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODozNDoxN1rOH1ib2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMDc2Mg==", "bodyText": "So the RuleContext.currentConstraintDescr is used as a global variable right?\nI'm not sure about this type, maybe we could use a Map with the constraintId as a string and the Descr as a value, WDYT?\nIn that way we don't have way to reset the global.\nP.S. I know there are already some global fields in the Context such as RuleDescr but I'd like to remove them eventually", "url": "https://github.com/kiegroup/drools/pull/3245#discussion_r525900762", "createdAt": "2020-11-18T08:34:17Z", "author": {"login": "lucamolteni"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/generator/visitor/pattern/PatternDSL.java", "diffHunk": "@@ -133,7 +133,13 @@ private void generatePatternIdentifierIfMissing() {\n \n             ConstraintExpression constraintExpression = ConstraintExpression.createConstraintExpression(patternType, constraint, isPositional);\n \n-            DrlxParseResult drlxParseResult = constraintParser.drlxParse(patternType, patternIdentifier, constraintExpression, isPositional);\n+            DrlxParseResult drlxParseResult;\n+            try {\n+                context.setCurrentConstraintDescr(Optional.of(constraint));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMzY5Mjgx", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-533369281", "createdAt": "2020-11-18T11:52:53Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTI5NzYw", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-533529760", "createdAt": "2020-11-18T14:57:04Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDM3ODY4", "url": "https://github.com/kiegroup/drools/pull/3245#pullrequestreview-536437868", "createdAt": "2020-11-23T12:44:29Z", "commit": {"oid": "0f25e2960489b3a389819e016991ff11a0d9ce07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}