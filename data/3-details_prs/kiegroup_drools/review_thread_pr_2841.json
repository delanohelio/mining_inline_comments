{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NjgxMzk2", "number": 2841, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0MzozNVrODvdbAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0MzozNVrODvdbAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDkxNzE0OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/FEELFunctionDefinitionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODo0MzozNVrOGB5OjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTozNjo1OFrOGB7SzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzOTM3Mg==", "bodyText": "Food for thought: wouldn't it be better to put this test's assertions in a resource file rather that in a java file? In that way we could avoid quoting and it could be more readable", "url": "https://github.com/kiegroup/drools/pull/2841#discussion_r404639372", "createdAt": "2020-04-07T08:43:35Z", "author": {"login": "lucamolteni"}, "path": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/FEELFunctionDefinitionTest.java", "diffHunk": "@@ -87,7 +87,9 @@\n                 {\"{ myimport : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , x1 : function(name) f2() + name }, r1 : myimport.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n                 {\"{ m : { n : { o : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , x1 : function(name) f2() + name }}}, r1 : m.n.o.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n                 {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r1 : m.n.o.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n-                {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r2 : m.n.f1() }.r2\", \"Hi\", null }\n+                {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r2 : m.n.f1() }.r2\", \"Hi\", null },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cd555a9fe6014474f7df0bad3fbf12eabb3f32e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3MzIyOQ==", "bodyText": "yes, ideally these tests will be refactored to be defined in a \"protocol\", \"spec\" document and JUnit Java code generated out of that. With the advantage, also, to be more practically run JUnit methods from IDEs as well.", "url": "https://github.com/kiegroup/drools/pull/2841#discussion_r404673229", "createdAt": "2020-04-07T09:36:58Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/FEELFunctionDefinitionTest.java", "diffHunk": "@@ -87,7 +87,9 @@\n                 {\"{ myimport : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , x1 : function(name) f2() + name }, r1 : myimport.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n                 {\"{ m : { n : { o : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , x1 : function(name) f2() + name }}}, r1 : m.n.o.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n                 {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r1 : m.n.o.x1(\\\"John\\\") }.r1\", \"Hi John\", null },\n-                {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r2 : m.n.f1() }.r2\", \"Hi\", null }\n+                {\"{ m : { n : { f1 : function() \\\"Hi\\\", f2 : function() f1() + \\\" \\\" , o : { x1 : function(name) f2() + name }}}, r2 : m.n.f1() }.r2\", \"Hi\", null },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzOTM3Mg=="}, "originalCommit": {"oid": "5cd555a9fe6014474f7df0bad3fbf12eabb3f32e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2471, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}