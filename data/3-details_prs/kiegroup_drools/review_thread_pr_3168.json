{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDc2NzI4", "number": 3168, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoxODo0N1rOExxkHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoyNDozOVrOExxqAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjI3NzQyOnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/model/Settings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoxODo0N1rOHoDG5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoxMDoyMlrOHoXEuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1NjAwNw==", "bodyText": "why not override Object.clone method?", "url": "https://github.com/kiegroup/drools/pull/3168#discussion_r511756007", "createdAt": "2020-10-26T07:18:47Z", "author": {"login": "jstastny-cz"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/model/Settings.java", "diffHunk": "@@ -152,4 +152,20 @@ public boolean isStateless() {\n     public void setStateless(boolean stateless) {\n         this.stateless = stateless;\n     }\n+\n+    public Settings cloneSettings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba822f8298406d97642d8d4e831a4b6287d92b45"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4MzEzMQ==", "bodyText": "@jstastny-cz Usage of clone() in Java is discouraged. You can refer this link to know more about the reasons.", "url": "https://github.com/kiegroup/drools/pull/3168#discussion_r512083131", "createdAt": "2020-10-26T16:10:22Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/main/java/org/drools/scenariosimulation/api/model/Settings.java", "diffHunk": "@@ -152,4 +152,20 @@ public boolean isStateless() {\n     public void setStateless(boolean stateless) {\n         this.stateless = stateless;\n     }\n+\n+    public Settings cloneSettings() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1NjAwNw=="}, "originalCommit": {"oid": "ba822f8298406d97642d8d4e831a4b6287d92b45"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjI5MjUwOnYy", "diffSide": "RIGHT", "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/model/SettingsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoyNDo0MFrOHoDPYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozODozNVrOHowrZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1ODE3Nw==", "bodyText": "I think it would be good to actually check that old and new instance are isolated after the clone - that changing fields in first does not affect the second (not an issue now, but might happen that we add a field that requires deep cloning, so it's imo better to check).", "url": "https://github.com/kiegroup/drools/pull/3168#discussion_r511758177", "createdAt": "2020-10-26T07:24:40Z", "author": {"login": "jstastny-cz"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/model/SettingsTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.scenariosimulation.api.model;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class SettingsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba822f8298406d97642d8d4e831a4b6287d92b45"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUwMjYzMQ==", "bodyText": "@jstastny-cz Test case added.", "url": "https://github.com/kiegroup/drools/pull/3168#discussion_r512502631", "createdAt": "2020-10-27T08:38:35Z", "author": {"login": "yesamer"}, "path": "drools-scenario-simulation/drools-scenario-simulation-api/src/test/java/org/drools/scenariosimulation/api/model/SettingsTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.scenariosimulation.api.model;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class SettingsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1ODE3Nw=="}, "originalCommit": {"oid": "ba822f8298406d97642d8d4e831a4b6287d92b45"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2238, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}