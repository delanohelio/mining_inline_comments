{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NTE0NDA1", "number": 3097, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTo0NzozNlrOEjFjkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTo0NzozNlrOEjFjkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjI2NjQwOnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNDeclaredField.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTo0NzozNlrOHRQAfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjo1Nzo1MVrOHRSgVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1MDExMA==", "bodyText": "This if is too big for my taste, can you extract a method?", "url": "https://github.com/kiegroup/drools/pull/3097#discussion_r487850110", "createdAt": "2020-09-14T11:47:36Z", "author": {"login": "lucamolteni"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNDeclaredField.java", "diffHunk": "@@ -114,6 +105,59 @@ public String getInitExpr() {\n             Optional<Class<?>> as = index.getJacksonDeserializeAs(fieldDMNType);\n             as.ifPresent(asClass -> annotations.add(new SimpleAnnotationDefinition(\"com.fasterxml.jackson.databind.annotation.JsonDeserialize\").addValue(\"as\", asClass.getCanonicalName() + \".class\")));\n         }\n+        if (codeGenConfig.isWithMPOpenApiAnnotation() || codeGenConfig.isWithIOSwaggerOASv3Annotation()) {\n+            if (getObjectType().equals(\"java.lang.String\") && fieldDMNType.getAllowedValues() != null && !fieldDMNType.getAllowedValues().isEmpty()) {\n+                String enumeration = fieldDMNType.getAllowedValues().stream()\n+                                                 .map(UnaryTestImpl.class::cast)\n+                                                 .map(UnaryTestImpl::toString)\n+                                                 .collect(Collectors.joining(\",\"));\n+                if (codeGenConfig.isWithMPOpenApiAnnotation()) {\n+                    annotations.add(new SimpleAnnotationDefinition(\"org.eclipse.microprofile.openapi.annotations.media.Schema\").addValue(\"name\", \"\\\"\" + originalMapKey + \"\\\"\")\n+                                                                                                                               .addValue(\"enumeration\", \"{\" + enumeration + \"}\"));\n+                }\n+                if (codeGenConfig.isWithIOSwaggerOASv3Annotation()) {\n+                    annotations.add(new SimpleAnnotationDefinition(\"io.swagger.v3.oas.annotations.media.Schema\").addValue(\"name\", \"\\\"\" + originalMapKey + \"\\\"\")\n+                                                                                                                .addValue(\"allowableValues\", \"{\" + enumeration + \"}\"));\n+                }\n+            } else {\n+                boolean isTemporal = DMNTypeUtils.isFEELBuiltInType(fieldDMNType) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdc6737c1189c1cd20e2369705bdaf344c9989e5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5MTAzMQ==", "bodyText": "commit 998e148 should implement as requested \ud83d\udc4d", "url": "https://github.com/kiegroup/drools/pull/3097#discussion_r487891031", "createdAt": "2020-09-14T12:57:51Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNDeclaredField.java", "diffHunk": "@@ -114,6 +105,59 @@ public String getInitExpr() {\n             Optional<Class<?>> as = index.getJacksonDeserializeAs(fieldDMNType);\n             as.ifPresent(asClass -> annotations.add(new SimpleAnnotationDefinition(\"com.fasterxml.jackson.databind.annotation.JsonDeserialize\").addValue(\"as\", asClass.getCanonicalName() + \".class\")));\n         }\n+        if (codeGenConfig.isWithMPOpenApiAnnotation() || codeGenConfig.isWithIOSwaggerOASv3Annotation()) {\n+            if (getObjectType().equals(\"java.lang.String\") && fieldDMNType.getAllowedValues() != null && !fieldDMNType.getAllowedValues().isEmpty()) {\n+                String enumeration = fieldDMNType.getAllowedValues().stream()\n+                                                 .map(UnaryTestImpl.class::cast)\n+                                                 .map(UnaryTestImpl::toString)\n+                                                 .collect(Collectors.joining(\",\"));\n+                if (codeGenConfig.isWithMPOpenApiAnnotation()) {\n+                    annotations.add(new SimpleAnnotationDefinition(\"org.eclipse.microprofile.openapi.annotations.media.Schema\").addValue(\"name\", \"\\\"\" + originalMapKey + \"\\\"\")\n+                                                                                                                               .addValue(\"enumeration\", \"{\" + enumeration + \"}\"));\n+                }\n+                if (codeGenConfig.isWithIOSwaggerOASv3Annotation()) {\n+                    annotations.add(new SimpleAnnotationDefinition(\"io.swagger.v3.oas.annotations.media.Schema\").addValue(\"name\", \"\\\"\" + originalMapKey + \"\\\"\")\n+                                                                                                                .addValue(\"allowableValues\", \"{\" + enumeration + \"}\"));\n+                }\n+            } else {\n+                boolean isTemporal = DMNTypeUtils.isFEELBuiltInType(fieldDMNType) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1MDExMA=="}, "originalCommit": {"oid": "fdc6737c1189c1cd20e2369705bdaf344c9989e5"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2316, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}