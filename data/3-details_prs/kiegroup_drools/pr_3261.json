{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MzMxMTI3", "number": 3261, "title": "[DROOLS-5700] Implement range index in Alpha Network Compiler", "bodyText": "JIRA:\nhttps://issues.redhat.com/browse/DROOLS-5700\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-11-24T09:18:01Z", "url": "https://github.com/kiegroup/drools/pull/3261", "merged": true, "mergeCommit": {"oid": "5f53e9834d59f925e22802bb3d37b943353e8860"}, "closed": true, "closedAt": "2020-11-27T10:16:14Z", "author": {"login": "tkobayas"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdflyougH2gAyNTI2MzMxMTI3OjQ2OTIwNTZlOTg3NDlkMzczZmNkYjQxNmJlZDllNWViYjA0ZDZkMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgkz6nAFqTUzOTg2MDY3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4692056e98749d373fcdb416bed9e5ebb04d6d23", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/4692056e98749d373fcdb416bed9e5ebb04d6d23", "committedDate": "2020-11-24T08:50:41Z", "message": "[DROOLS-5700] Implement range index in Alpha Network Compiler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7293080963937bebc2f8dd58fcda9767f3a79f4b", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/7293080963937bebc2f8dd58fcda9767f3a79f4b", "committedDate": "2020-11-25T03:39:09Z", "message": "- Fixed code smells"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Mjg1NzE3", "url": "https://github.com/kiegroup/drools/pull/3261#pullrequestreview-538285717", "createdAt": "2020-11-25T09:08:42Z", "commit": {"oid": "7293080963937bebc2f8dd58fcda9767f3a79f4b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowODo0MlrOH5piIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowODo0MlrOH5piIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIxMTM2MA==", "bodyText": "I thought one of the optimisation of the ANC was to unwrap the alpha node and use the constraint directly, effectively inlining the call. Can you please double check?", "url": "https://github.com/kiegroup/drools/pull/3261#discussion_r530211360", "createdAt": "2020-11-25T09:08:42Z", "author": {"login": "lucamolteni"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java", "diffHunk": "@@ -140,4 +148,33 @@ public void startHashedAlphaNodes(IndexableConstraint indexableConstraint) {\n     public void startHashedAlphaNode(AlphaNode hashedAlpha, Object hashedValue) {\n         currentHashedAlpha.add(hashedValue, String.valueOf(hashedAlpha.getId()));\n     }\n+\n+    @Override\n+    public void startRangeIndex(AlphaRangeIndex alphaRangeIndex) {\n+        builder.append(createRangeIndexDeclaration(alphaRangeIndex)).append(NEWLINE);\n+    }\n+\n+    private String createRangeIndexDeclaration(AlphaRangeIndex alphaRangeIndex) {\n+        int minId = getMinIdFromRangeIndex(alphaRangeIndex);\n+        AlphaNode firstNode = alphaRangeIndex.getAllValues().stream().filter(alpha -> alpha.getId() == minId).findFirst().orElseThrow(NoSuchElementException::new);\n+        String comment = firstNode.toString();\n+        String variableName = getRangeIndexVariableName(alphaRangeIndex, minId);\n+        rangeIndexDeclarationMap.put(variableName, alphaRangeIndex);\n+        return PRIVATE_MODIFIER + \" \" + AlphaRangeIndex.class.getName() + \" \" + variableName + \"; // including \" + comment + \" etc.\";\n+    }\n+\n+    public Map<String, AlphaRangeIndex> getRangeIndexDeclarationMap() {\n+        return rangeIndexDeclarationMap;\n+    }\n+\n+    @Override\n+    public void startRangeIndexedAlphaNode(AlphaNode alphaNode) {\n+        builder.append(getAlphaNodeVariableDeclaration(alphaNode)).append(NEWLINE); // range index uses AlphaNode rather than MVELConstraint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7293080963937bebc2f8dd58fcda9767f3a79f4b"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da3600589486fd2538ed3f2ab07785af2713254", "author": {"user": {"login": "tkobayas", "name": "Toshiya Kobayashi"}}, "url": "https://github.com/kiegroup/drools/commit/3da3600589486fd2538ed3f2ab07785af2713254", "committedDate": "2020-11-26T09:02:02Z", "message": "- Removed unused variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODM4NjI3", "url": "https://github.com/kiegroup/drools/pull/3261#pullrequestreview-539838627", "createdAt": "2020-11-27T09:45:51Z", "commit": {"oid": "3da3600589486fd2538ed3f2ab07785af2713254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODYwNjc0", "url": "https://github.com/kiegroup/drools/pull/3261#pullrequestreview-539860674", "createdAt": "2020-11-27T10:16:06Z", "commit": {"oid": "3da3600589486fd2538ed3f2ab07785af2713254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1762, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}