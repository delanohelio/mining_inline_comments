{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTQ2Mzk3", "number": 2704, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToxOTowNlrODWkx1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToyMzo0OFrODWk4ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTk3ODQ0OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountDMNProfile.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToxOTowNlrOFbaJQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDowNzoyMlrOFbicTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDIyNg==", "bodyText": "Please add missing license header.", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364284226", "createdAt": "2020-01-08T15:19:06Z", "author": {"login": "jiripetrlik"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountDMNProfile.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.kie.dmn.core.compiler.profiles;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDE3NQ==", "bodyText": "well spotted, thanks", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420175", "createdAt": "2020-01-08T20:07:22Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountDMNProfile.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.kie.dmn.core.compiler.profiles;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDIyNg=="}, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTk3ODkyOnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountFunction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToxOToxNFrOFbaJhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDowNzoyN1rOFbicag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDI5NA==", "bodyText": "Please add missing license header.", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364284294", "createdAt": "2020-01-08T15:19:14Z", "author": {"login": "jiripetrlik"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountFunction.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.kie.dmn.core.compiler.profiles;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDIwMg==", "bodyText": "well spotted, thanks", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420202", "createdAt": "2020-01-08T20:07:27Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/CustomModelCountFunction.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.kie.dmn.core.compiler.profiles;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NDI5NA=="}, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTk4NTY1OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/DMNProfilesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToyMTowOVrOFbaNjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDowNzozOFrOFbictg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NTMyNw==", "bodyText": "Is it necessary to write dmn result to console? I would suggest to remove this debugging output.", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364285327", "createdAt": "2020-01-08T15:21:09Z", "author": {"login": "jiripetrlik"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/DMNProfilesTest.java", "diffHunk": "@@ -74,4 +74,35 @@ public void testJust47() {\n         final DMNContext result = dmnResult.getContext();\n         assertThat(result.get(\"decision result\"), is(new BigDecimal(47)));\n     }\n+\n+    @Test\n+    public void testCustomModelCount() {\n+        final KieServices ks = KieServices.Factory.get();\n+        final KieFileSystem kfs = ks.newKieFileSystem();\n+\n+        final KieModuleModel kmm = ks.newKieModuleModel();\n+        kmm.setConfigurationProperty(\"org.kie.dmn.profiles.CustomModelCountDMNProfile\", CustomModelCountDMNProfile.class.getCanonicalName());\n+        kfs.writeKModuleXML(kmm.toXML());\n+        kfs.write(ks.getResources().newClassPathResource(\"customModelCount.dmn\", this.getClass()));\n+\n+        final KieBuilder kieBuilder = ks.newKieBuilder(kfs).buildAll();\n+        final Results results = kieBuilder.getResults();\n+        assertThat(results.getMessages().toString(), results.hasMessages(org.kie.api.builder.Message.Level.ERROR), is(false));\n+\n+        final KieContainer kieContainer = ks.newKieContainer(ks.getRepository().getDefaultReleaseId());\n+        final DMNRuntime runtime = kieContainer.newKieSession().getKieRuntime(DMNRuntime.class);\n+\n+        final DMNModel dmnModel = runtime.getModel(\"http://www.trisotech.com/definitions/_5d9e63ac-e73a-4b9e-8635-760f0c23c0ad\", \"Drawing 1\");\n+        assertThat(dmnModel, notNullValue());\n+        assertThat(DMNRuntimeUtil.formatMessages(dmnModel.getMessages()), dmnModel.hasErrors(), is(false));\n+\n+        final DMNContext context = DMNFactory.newContext();\n+\n+        final DMNResult dmnResult = runtime.evaluateAll(dmnModel, context);\n+        System.out.println(dmnResult);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMDI3OA==", "bodyText": "well spotted, sorry this slipped through, thanks", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364420278", "createdAt": "2020-01-08T20:07:38Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/compiler/profiles/DMNProfilesTest.java", "diffHunk": "@@ -74,4 +74,35 @@ public void testJust47() {\n         final DMNContext result = dmnResult.getContext();\n         assertThat(result.get(\"decision result\"), is(new BigDecimal(47)));\n     }\n+\n+    @Test\n+    public void testCustomModelCount() {\n+        final KieServices ks = KieServices.Factory.get();\n+        final KieFileSystem kfs = ks.newKieFileSystem();\n+\n+        final KieModuleModel kmm = ks.newKieModuleModel();\n+        kmm.setConfigurationProperty(\"org.kie.dmn.profiles.CustomModelCountDMNProfile\", CustomModelCountDMNProfile.class.getCanonicalName());\n+        kfs.writeKModuleXML(kmm.toXML());\n+        kfs.write(ks.getResources().newClassPathResource(\"customModelCount.dmn\", this.getClass()));\n+\n+        final KieBuilder kieBuilder = ks.newKieBuilder(kfs).buildAll();\n+        final Results results = kieBuilder.getResults();\n+        assertThat(results.getMessages().toString(), results.hasMessages(org.kie.api.builder.Message.Level.ERROR), is(false));\n+\n+        final KieContainer kieContainer = ks.newKieContainer(ks.getRepository().getDefaultReleaseId());\n+        final DMNRuntime runtime = kieContainer.newKieSession().getKieRuntime(DMNRuntime.class);\n+\n+        final DMNModel dmnModel = runtime.getModel(\"http://www.trisotech.com/definitions/_5d9e63ac-e73a-4b9e-8635-760f0c23c0ad\", \"Drawing 1\");\n+        assertThat(dmnModel, notNullValue());\n+        assertThat(DMNRuntimeUtil.formatMessages(dmnModel.getMessages()), dmnModel.hasErrors(), is(false));\n+\n+        final DMNContext context = DMNFactory.newContext();\n+\n+        final DMNResult dmnResult = runtime.evaluateAll(dmnModel, context);\n+        System.out.println(dmnResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NTMyNw=="}, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTk5NTI1OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/lang/impl/EvaluationContextImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNToyMzo0OFrOFbaTZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDowOTo0NlrOFbigAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NjgyMg==", "bodyText": "Is this method part of some public API? Do we need to keep it as deprecated? Can't we delete it completely?", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364286822", "createdAt": "2020-01-08T15:23:48Z", "author": {"login": "jiripetrlik"}, "path": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/lang/impl/EvaluationContextImpl.java", "diffHunk": "@@ -58,15 +58,18 @@ public EvaluationContextImpl(ClassLoader cl, FEELEventListenersManager eventsMan\n         push( global );\n     }\n \n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyMTEyMQ==", "bodyText": "Is this method part of some public API?\n\nNo\n\nDo we need to keep it as deprecated?\n\nI am introducing with this PR that is deprecated as I realized this constructor is not convenient as I did this specific task\n\nCan't we delete it completely?\n\nIt will be part of another task, for this PR I am realizing this constructor is just plain painful as it's not consistent with the other constructors.", "url": "https://github.com/kiegroup/drools/pull/2704#discussion_r364421121", "createdAt": "2020-01-08T20:09:46Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/lang/impl/EvaluationContextImpl.java", "diffHunk": "@@ -58,15 +58,18 @@ public EvaluationContextImpl(ClassLoader cl, FEELEventListenersManager eventsMan\n         push( global );\n     }\n \n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI4NjgyMg=="}, "originalCommit": {"oid": "5bfe6a7856149bc972060e24226f819c95bfd372"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2605, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}