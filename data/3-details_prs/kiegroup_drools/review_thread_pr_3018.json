{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MzkxNTM4", "number": 3018, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjo1MTozMFrOETw1xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowNDo1M1rOETxJBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTU4NTk3OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjo1MTozMFrOG5rjeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODoxMToyN1rOG5_3ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA==", "bodyText": "Side question: Is it correct that the clone method returns DMNContextImpl instead of DMNContextFPAImpl?", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463135610", "createdAt": "2020-07-30T16:51:30Z", "author": {"login": "r00ta"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -86,16 +88,15 @@ public boolean isDefined(String name) {\n \n     @Override\n     public DMNMetadata getMetadata() {\n-        return new DMNMetadataImpl();\n+        return this.metadata;\n     }\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties());\n+        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NDExMA==", "bodyText": "Good question \ud83e\udd14\n@lucamolteni can you help?", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463144110", "createdAt": "2020-07-30T17:05:53Z", "author": {"login": "danielezonca"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -86,16 +88,15 @@ public boolean isDefined(String name) {\n \n     @Override\n     public DMNMetadata getMetadata() {\n-        return new DMNMetadataImpl();\n+        return this.metadata;\n     }\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties());\n+        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}, "originalCommit": {"oid": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDUwOA==", "bodyText": "@r00ta @danielezonca\nOk short answer: because it doesn't work in another way :)\nSlightly longer answer: the current implementation of the DMN evaluation clones the context at least once, and always using the type safe context in the internals wasn't the original purpose of this implementation.\nIn other words: the idea so far was to expose a typesafe inputset as an API, not to change internals.\nI can't say it's not doable, but to me the advantages are not obvious.\n@tarilabs can you confirm this?\nThanks", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463464508", "createdAt": "2020-07-31T08:03:01Z", "author": {"login": "lucamolteni"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -86,16 +88,15 @@ public boolean isDefined(String name) {\n \n     @Override\n     public DMNMetadata getMetadata() {\n-        return new DMNMetadataImpl();\n+        return this.metadata;\n     }\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties());\n+        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}, "originalCommit": {"oid": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2ODM4OQ==", "bodyText": "yes confirmed as currently DMNRuntime for evaluation uses input context .clone() result, as the context where to store the outputs, and DMNContextImpl can accept any additional variables, while DMNContextFPAImpl atm is only accepting the fields defined in the wrapped FEELPropertyAccessible", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463468389", "createdAt": "2020-07-31T08:11:27Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -86,16 +88,15 @@ public boolean isDefined(String name) {\n \n     @Override\n     public DMNMetadata getMetadata() {\n-        return new DMNMetadataImpl();\n+        return this.metadata;\n     }\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties());\n+        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}, "originalCommit": {"oid": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTYzNTI3OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowNDo1M1rOG5sCTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzo0Nzo0OVrOG5_Ndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MzUwMw==", "bodyText": "Can you please also clone the DMNContext and verify that \"value\" is still there?", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463143503", "createdAt": "2020-07-30T17:04:53Z", "author": {"login": "danielezonca"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java", "diffHunk": "@@ -158,6 +159,16 @@ public void testDynamic() throws Exception {\n         assertThat(d.get(\"Hello\"), is(\"Hello Mr. x\"));\n     }\n \n+    @Test\n+    public void testMetadata(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53be5525fe40c6d26eb023467c312d17ff48ccd3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NzY1NQ==", "bodyText": "done \ud83d\udc4d", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463457655", "createdAt": "2020-07-31T07:47:49Z", "author": {"login": "r00ta"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java", "diffHunk": "@@ -158,6 +159,16 @@ public void testDynamic() throws Exception {\n         assertThat(d.get(\"Hello\"), is(\"Hello Mr. x\"));\n     }\n \n+    @Test\n+    public void testMetadata(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MzUwMw=="}, "originalCommit": {"oid": "53be5525fe40c6d26eb023467c312d17ff48ccd3"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2411, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}