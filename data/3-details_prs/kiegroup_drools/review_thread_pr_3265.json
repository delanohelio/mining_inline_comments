{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjU0NzAy", "number": 3265, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzo1MzozMVrOE82s_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowODo0OFrOE9Mw_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjQ2MjY4OnYy", "diffSide": "RIGHT", "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/JavaDialectConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzo1MzozMVrOH5OhJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzo1MzozMVrOH5OhJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2ODc0Mg==", "bodyText": "Fix order of imports", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529768742", "createdAt": "2020-11-24T17:53:31Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/JavaDialectConfiguration.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.compiler.compiler;\n+\n+import org.drools.compiler.builder.impl.KnowledgeBuilderConfigurationImpl;\n+import org.kie.memorycompiler.JavaCompiler;\n+import org.kie.memorycompiler.JavaCompilerFactory;\n+import org.drools.core.definitions.InternalKnowledgePackage;\n+import org.kie.memorycompiler.JavaConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89106ad5dd5c136d53a65ee29c16294bfa552f4d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzI1OTQ3OnYy", "diffSide": "RIGHT", "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/CanonicalModelKieProject.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozMjoyN1rOH5V_2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozMjoyN1rOH5V_2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MTI4OQ==", "bodyText": "Please fix import order", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529891289", "createdAt": "2020-11-24T21:32:27Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/CanonicalModelKieProject.java", "diffHunk": "@@ -25,7 +25,8 @@\n import java.util.stream.Stream;\n \n import org.drools.compiler.builder.impl.KnowledgeBuilderConfigurationImpl;\n-import org.drools.compiler.commons.jci.compilers.CompilationResult;\n+import org.drools.compiler.kie.builder.impl.CompilationProblemAdapter;\n+import org.kie.memorycompiler.CompilationResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89106ad5dd5c136d53a65ee29c16294bfa552f4d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzI2NzM4OnYy", "diffSide": "RIGHT", "path": "drools-mvel/src/main/java/org/drools/mvel/java/JavaDialect.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozNTowMVrOH5WEiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozNTowMVrOH5WEiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MjQ4OQ==", "bodyText": "Fix import order", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r529892489", "createdAt": "2020-11-24T21:35:01Z", "author": {"login": "danielezonca"}, "path": "drools-mvel/src/main/java/org/drools/mvel/java/JavaDialect.java", "diffHunk": "@@ -96,6 +93,10 @@\n import org.drools.core.spi.Wireable;\n import org.drools.core.util.IoUtils;\n import org.drools.core.util.StringUtils;\n+import org.kie.memorycompiler.CompilationResult;\n+import org.kie.memorycompiler.JavaCompiler;\n+import org.kie.memorycompiler.JavaCompilerFactory;\n+import org.kie.memorycompiler.resources.MemoryResourceReader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89106ad5dd5c136d53a65ee29c16294bfa552f4d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTY0MzMzOnYy", "diffSide": "RIGHT", "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/Dialect.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDoxNzo1MlrOH5sbmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMToxODo0NFrOH5uxsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1ODg0MA==", "bodyText": "static?", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530258840", "createdAt": "2020-11-25T10:17:52Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/Dialect.java", "diffHunk": "@@ -132,4 +144,196 @@ void preCompileAddFunction(FunctionDescr functionDescr,\n     default void addSrc(String resourceName, byte[] content) {\n         throw new UnsupportedOperationException();\n     }\n+\n+    class DummyDialect implements Dialect {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5NzI2Nw==", "bodyText": "The inner class of an interface is implicitly static.", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530297267", "createdAt": "2020-11-25T11:18:44Z", "author": {"login": "mariofusco"}, "path": "drools-compiler/src/main/java/org/drools/compiler/compiler/Dialect.java", "diffHunk": "@@ -132,4 +144,196 @@ void preCompileAddFunction(FunctionDescr functionDescr,\n     default void addSrc(String resourceName, byte[] content) {\n         throw new UnsupportedOperationException();\n     }\n+\n+    class DummyDialect implements Dialect {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1ODg0MA=="}, "originalCommit": {"oid": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTg0NjU0OnYy", "diffSide": "RIGHT", "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/jdknative/NativeJavaCompiler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTowNzoxOFrOH5uWpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMToxMzoxNlrOH5ukww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5MDM0MA==", "bodyText": "Why are you muting this exception?", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530290340", "createdAt": "2020-11-25T11:07:18Z", "author": {"login": "danielezonca"}, "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/jdknative/NativeJavaCompiler.java", "diffHunk": "@@ -398,7 +401,7 @@ private void indexClassesByPackage(Map<String, Set<String>> indexedClasses, Clas\n                     }\n                 }\n             } catch (NoSuchFieldException | IllegalAccessException e) {\n-                throw new RuntimeException( e );\n+                // ignore: this classloader is not indexable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5Mzk1NQ==", "bodyText": "Because the ClassLoader class as implemented in IBM JDK doesn't haven't that classes field. In that case I cannot do much and simply skipping this indexing.", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530293955", "createdAt": "2020-11-25T11:13:16Z", "author": {"login": "mariofusco"}, "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/jdknative/NativeJavaCompiler.java", "diffHunk": "@@ -398,7 +401,7 @@ private void indexClassesByPackage(Map<String, Set<String>> indexedClasses, Clas\n                     }\n                 }\n             } catch (NoSuchFieldException | IllegalAccessException e) {\n-                throw new RuntimeException( e );\n+                // ignore: this classloader is not indexable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5MDM0MA=="}, "originalCommit": {"oid": "e3ccbeffcfa89ce20c0ff1627588d31be076b8cb"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjA3NzQxOnYy", "diffSide": "RIGHT", "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/StoreClassLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowODo0OFrOH5whMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowODo0OFrOH5whMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyNTgxMA==", "bodyText": "Can you please add a javadoc?", "url": "https://github.com/kiegroup/drools/pull/3265#discussion_r530325810", "createdAt": "2020-11-25T12:08:48Z", "author": {"login": "danielezonca"}, "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/StoreClassLoader.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*\n+ * Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.memorycompiler;\n+\n+import java.util.Map;\n+\n+public interface StoreClassLoader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c9cfc6044cea101c73cc950bc26d37679b73fee"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2301, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}