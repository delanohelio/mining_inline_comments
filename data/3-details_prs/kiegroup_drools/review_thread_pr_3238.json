{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNTUxMDQw", "number": 3238, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzozNjoxOVrOE_Q6Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzozNjoxOVrOE_Q6Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzcyODAzOnYy", "diffSide": "RIGHT", "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceUnmarshallingTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzozNjoxOVrOH84Mbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MzoyOFrOH9OCTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NzI5NA==", "bodyText": "@Rikkola @jstastny-cz could you please help me in understanding this complex quoting?\n\nDoes the method add take one argument of type String?\nLets say the when part of the rule was evaluated to true and lets say variable bar holds value 1 and the variable foo holds value 2, I am correct that we would like to produce java code, that will add one item into list  a, and this item will be \"2, 1\"?\n\nIf the answer for both is true, I think such value composed from two bound variables can be created via formula expression just as: foo \", \" + bar\nCould you please explain me more properly steps to reproduce?", "url": "https://github.com/kiegroup/drools/pull/3238#discussion_r533597294", "createdAt": "2020-12-01T17:36:19Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceUnmarshallingTest.java", "diffHunk": "@@ -1202,6 +1202,39 @@ public void testDotInString() {\n                      actionCallMethod.getFieldValues()[0].getValue());\n     }\n \n+    @Test\n+    public void testDotInStringWithEscapedQuotes() {\n+        String drl = \"import java.lang.Number;\\n\"\n+                + \"import java.util.ArrayList;\\n\"\n+                + \"rule rule1\\n\"\n+                + \"when\\n\"\n+                + \"a : ArrayList( )\\n\"\n+                + \"bar : Number( )\\n\"\n+                + \"foo : Number( )\\n\"\n+                + \"then\\n\"\n+                + \"a.add( \\\"\\\\\\\"foo, bar\\\\\\\"\\\" );\\n\"\n+                + \"end\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c026a56aa11ae7a7fa9b5335698ae42b1570c986"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwOTYxMA==", "bodyText": "I think the breaking input here was a formula using just literals, we've discussed also in the cherry-pick PR in #3227 (comment) .", "url": "https://github.com/kiegroup/drools/pull/3238#discussion_r533609610", "createdAt": "2020-12-01T17:54:57Z", "author": {"login": "jstastny-cz"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceUnmarshallingTest.java", "diffHunk": "@@ -1202,6 +1202,39 @@ public void testDotInString() {\n                      actionCallMethod.getFieldValues()[0].getValue());\n     }\n \n+    @Test\n+    public void testDotInStringWithEscapedQuotes() {\n+        String drl = \"import java.lang.Number;\\n\"\n+                + \"import java.util.ArrayList;\\n\"\n+                + \"rule rule1\\n\"\n+                + \"when\\n\"\n+                + \"a : ArrayList( )\\n\"\n+                + \"bar : Number( )\\n\"\n+                + \"foo : Number( )\\n\"\n+                + \"then\\n\"\n+                + \"a.add( \\\"\\\\\\\"foo, bar\\\\\\\"\\\" );\\n\"\n+                + \"end\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NzI5NA=="}, "originalCommit": {"oid": "c026a56aa11ae7a7fa9b5335698ae42b1570c986"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxMTQxNA==", "bodyText": "Though I think we agreed to create a separate issue for the Literal case. DROOLS-5696 should be considered fixed now, this should be tracked separately.", "url": "https://github.com/kiegroup/drools/pull/3238#discussion_r533611414", "createdAt": "2020-12-01T17:57:40Z", "author": {"login": "jstastny-cz"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceUnmarshallingTest.java", "diffHunk": "@@ -1202,6 +1202,39 @@ public void testDotInString() {\n                      actionCallMethod.getFieldValues()[0].getValue());\n     }\n \n+    @Test\n+    public void testDotInStringWithEscapedQuotes() {\n+        String drl = \"import java.lang.Number;\\n\"\n+                + \"import java.util.ArrayList;\\n\"\n+                + \"rule rule1\\n\"\n+                + \"when\\n\"\n+                + \"a : ArrayList( )\\n\"\n+                + \"bar : Number( )\\n\"\n+                + \"foo : Number( )\\n\"\n+                + \"then\\n\"\n+                + \"a.add( \\\"\\\\\\\"foo, bar\\\\\\\"\\\" );\\n\"\n+                + \"end\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NzI5NA=="}, "originalCommit": {"oid": "c026a56aa11ae7a7fa9b5335698ae42b1570c986"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NTE0OQ==", "bodyText": "@jstastny-cz thank you. I reported new jira for it https://issues.redhat.com/browse/DROOLS-5874\n@Rikkola please update jira description to match the proper jira number.\nThank you both for help.", "url": "https://github.com/kiegroup/drools/pull/3238#discussion_r533955149", "createdAt": "2020-12-02T07:43:28Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceUnmarshallingTest.java", "diffHunk": "@@ -1202,6 +1202,39 @@ public void testDotInString() {\n                      actionCallMethod.getFieldValues()[0].getValue());\n     }\n \n+    @Test\n+    public void testDotInStringWithEscapedQuotes() {\n+        String drl = \"import java.lang.Number;\\n\"\n+                + \"import java.util.ArrayList;\\n\"\n+                + \"rule rule1\\n\"\n+                + \"when\\n\"\n+                + \"a : ArrayList( )\\n\"\n+                + \"bar : Number( )\\n\"\n+                + \"foo : Number( )\\n\"\n+                + \"then\\n\"\n+                + \"a.add( \\\"\\\\\\\"foo, bar\\\\\\\"\\\" );\\n\"\n+                + \"end\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5NzI5NA=="}, "originalCommit": {"oid": "c026a56aa11ae7a7fa9b5335698ae42b1570c986"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2279, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}