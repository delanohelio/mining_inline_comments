{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjEyNjY0", "number": 3159, "title": "[DROOLS-5658] [DROOLS-4844] [DROOLS-5657] [DROOLS-2836] [DROOLS-5699]", "bodyText": "Thank you for submitting this pull request\nhttps://issues.redhat.com/browse/DROOLS-5658\nhttps://issues.redhat.com/browse/DROOLS-2836\nhttps://issues.redhat.com/browse/DROOLS-5657\nhttps://issues.redhat.com/browse/DROOLS-4844\nreferenced Pull Requests: (please edit the URLs of referenced pullrequests if they exist)\nkiegroup/droolsjbpm-build-bootstrap#1498\n#3159\nkiegroup/droolsjbpm-knowledge#471\nkiegroup/droolsjbpm-integration#2277\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-10-12T14:23:52Z", "url": "https://github.com/kiegroup/drools/pull/3159", "merged": true, "mergeCommit": {"oid": "a5ba92e2bfca6e0f1586651ad319b78491ff2991"}, "closed": true, "closedAt": "2020-10-15T15:42:27Z", "author": {"login": "lucamolteni"}, "timelineItems": {"totalCount": 98, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR63VggBqjM4NjgzNzU5ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSx8LWgFqTUwOTM4ODg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed5af12290d13a97083bf4989af513c5dd7ac44d", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/ed5af12290d13a97083bf4989af513c5dd7ac44d", "committedDate": "2020-10-12T15:56:43Z", "message": "Restored source name for kie-maven-plugin"}, "afterCommit": {"oid": "7cac3d73e5b271449f23472bb077791456933e98", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/7cac3d73e5b271449f23472bb077791456933e98", "committedDate": "2020-10-12T21:28:42Z", "message": "Sonarcloud"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cac3d73e5b271449f23472bb077791456933e98", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/7cac3d73e5b271449f23472bb077791456933e98", "committedDate": "2020-10-12T21:28:42Z", "message": "Sonarcloud"}, "afterCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c51fa98beb73ec23d0ded4482d1bfcacad30c750", "committedDate": "2020-10-13T08:04:58Z", "message": "Sonarcloud"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjQ1NDA2", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-507245406", "createdAt": "2020-10-13T09:31:41Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozMTo0MVrOHgd5hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozMTo0MVrOHgd5hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwNjM0MA==", "bodyText": "Will we have OSGi bundle for ANC? I thought that new/optional modules will not be OSGi bundle. But if it's intentional, of course, it's fine.", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r503806340", "createdAt": "2020-10-13T09:31:41Z", "author": {"login": "tkobayas"}, "path": "drools-alphanetwork-compiler/pom.xml", "diffHunk": "@@ -0,0 +1,142 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>drools</artifactId>\n+    <groupId>org.drools</groupId>\n+    <version>7.45.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>drools-alphanetwork-compiler</artifactId>\n+\n+  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjQ4MDQy", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-507248042", "createdAt": "2020-10-13T09:34:50Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNDo1MFrOHgeBZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNDo1MFrOHgeBZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwODM1OA==", "bodyText": "It's better to change the variable name from \"kproj\"? (e.g. to \"model\")", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r503808358", "createdAt": "2020-10-13T09:34:50Z", "author": {"login": "tkobayas"}, "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/BaseModelTest.java", "diffHunk": "@@ -210,7 +215,7 @@ public KieFile( String path, String content ) {\n \n     private KieModuleModel getKieModuleModelWithAlphaNetworkCompiler() {\n         KieModuleModel kproj = KieServices.get().newKieModuleModel();\n-        kproj.setConfigurationProperty( org.drools.compiler.kie.builder.impl.KieContainerImpl.ALPHA_NETWORK_COMPILER_OPTION, \"true\" );\n+        kproj.setConfigurationProperty(AlphaNetworkCompilerOption.PROPERTY_NAME, AlphaNetworkCompilerOption.INMEMORY.toString());\n         return kproj;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjQ4NDk0", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-507248494", "createdAt": "2020-10-13T09:35:21Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNToyMVrOHgeC4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNToyMVrOHgeC4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwODczOQ==", "bodyText": "It's better to change the variable name from \"kproj\"? (e.g. to \"model\")", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r503808739", "createdAt": "2020-10-13T09:35:21Z", "author": {"login": "tkobayas"}, "path": "drools-alphanetwork-compiler/src/test/java/org/drools/ancompiler/BaseModelTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2005 JBoss Inc\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.ancompiler;\n+\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import org.drools.compiler.kie.builder.impl.DrlProject;\n+import org.drools.compiler.kie.builder.impl.InternalKieModule;\n+import org.drools.core.impl.InternalKnowledgeBase;\n+import org.drools.core.reteoo.ObjectTypeNode;\n+import org.drools.core.reteoo.Rete;\n+import org.drools.modelcompiler.ExecutableModelFlowProject;\n+import org.drools.modelcompiler.ExecutableModelProject;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.kie.api.KieServices;\n+import org.kie.api.builder.KieBuilder;\n+import org.kie.api.builder.KieFileSystem;\n+import org.kie.api.builder.Message;\n+import org.kie.api.builder.ReleaseId;\n+import org.kie.api.builder.model.KieModuleModel;\n+import org.kie.api.runtime.ClassObjectFilter;\n+import org.kie.api.runtime.KieContainer;\n+import org.kie.api.runtime.KieSession;\n+import org.kie.internal.builder.conf.AlphaNetworkCompilerOption;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+@RunWith(Parameterized.class)\n+public abstract class BaseModelTest {\n+    public enum RUN_TYPE {\n+        FLOW_DSL( false ),\n+        PATTERN_DSL( false ),\n+        STANDARD_FROM_DRL( false ),\n+        STANDARD_WITH_ALPHA_NETWORK( true ),\n+        PATTERN_WITH_ALPHA_NETWORK( true ),\n+        FLOW_WITH_ALPHA_NETWORK( true );\n+\n+        private boolean alphaNetworkCompiler;\n+\n+        RUN_TYPE( boolean isAlphaNetworkCompiler ) {\n+            this.alphaNetworkCompiler = isAlphaNetworkCompiler;\n+        }\n+\n+        public boolean isAlphaNetworkCompiler() {\n+            return alphaNetworkCompiler;\n+        }\n+    }\n+\n+\n+    final static Object[] WITH_ALPHA_NETWORK = {\n+            RUN_TYPE.STANDARD_FROM_DRL,\n+            RUN_TYPE.FLOW_DSL,\n+            RUN_TYPE.PATTERN_DSL,\n+            RUN_TYPE.STANDARD_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.PATTERN_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.FLOW_WITH_ALPHA_NETWORK,\n+    };\n+\n+    @Parameters(name = \"{0}\")\n+    public static Object[] params() {\n+        return WITH_ALPHA_NETWORK;\n+    }\n+\n+    protected final RUN_TYPE testRunType;\n+\n+    public BaseModelTest(RUN_TYPE testRunType ) {\n+        this.testRunType = testRunType;\n+    }\n+\n+    protected KieSession getKieSession(String... rules) {\n+        KieModuleModel kproj = testRunType.isAlphaNetworkCompiler() ? getKieModuleModelWithAlphaNetworkCompiler() : null;\n+        return getKieSession(kproj, rules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjQ4ODA2", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-507248806", "createdAt": "2020-10-13T09:35:42Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNTo0MlrOHgeD6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNTo0MlrOHgeD6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwOTAwMA==", "bodyText": "It's better to change the variable name from \"kproj\"? (e.g. to \"model\")", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r503809000", "createdAt": "2020-10-13T09:35:42Z", "author": {"login": "tkobayas"}, "path": "drools-alphanetwork-compiler/src/test/java/org/drools/ancompiler/BaseModelTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2005 JBoss Inc\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.ancompiler;\n+\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import org.drools.compiler.kie.builder.impl.DrlProject;\n+import org.drools.compiler.kie.builder.impl.InternalKieModule;\n+import org.drools.core.impl.InternalKnowledgeBase;\n+import org.drools.core.reteoo.ObjectTypeNode;\n+import org.drools.core.reteoo.Rete;\n+import org.drools.modelcompiler.ExecutableModelFlowProject;\n+import org.drools.modelcompiler.ExecutableModelProject;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.kie.api.KieServices;\n+import org.kie.api.builder.KieBuilder;\n+import org.kie.api.builder.KieFileSystem;\n+import org.kie.api.builder.Message;\n+import org.kie.api.builder.ReleaseId;\n+import org.kie.api.builder.model.KieModuleModel;\n+import org.kie.api.runtime.ClassObjectFilter;\n+import org.kie.api.runtime.KieContainer;\n+import org.kie.api.runtime.KieSession;\n+import org.kie.internal.builder.conf.AlphaNetworkCompilerOption;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+@RunWith(Parameterized.class)\n+public abstract class BaseModelTest {\n+    public enum RUN_TYPE {\n+        FLOW_DSL( false ),\n+        PATTERN_DSL( false ),\n+        STANDARD_FROM_DRL( false ),\n+        STANDARD_WITH_ALPHA_NETWORK( true ),\n+        PATTERN_WITH_ALPHA_NETWORK( true ),\n+        FLOW_WITH_ALPHA_NETWORK( true );\n+\n+        private boolean alphaNetworkCompiler;\n+\n+        RUN_TYPE( boolean isAlphaNetworkCompiler ) {\n+            this.alphaNetworkCompiler = isAlphaNetworkCompiler;\n+        }\n+\n+        public boolean isAlphaNetworkCompiler() {\n+            return alphaNetworkCompiler;\n+        }\n+    }\n+\n+\n+    final static Object[] WITH_ALPHA_NETWORK = {\n+            RUN_TYPE.STANDARD_FROM_DRL,\n+            RUN_TYPE.FLOW_DSL,\n+            RUN_TYPE.PATTERN_DSL,\n+            RUN_TYPE.STANDARD_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.PATTERN_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.FLOW_WITH_ALPHA_NETWORK,\n+    };\n+\n+    @Parameters(name = \"{0}\")\n+    public static Object[] params() {\n+        return WITH_ALPHA_NETWORK;\n+    }\n+\n+    protected final RUN_TYPE testRunType;\n+\n+    public BaseModelTest(RUN_TYPE testRunType ) {\n+        this.testRunType = testRunType;\n+    }\n+\n+    protected KieSession getKieSession(String... rules) {\n+        KieModuleModel kproj = testRunType.isAlphaNetworkCompiler() ? getKieModuleModelWithAlphaNetworkCompiler() : null;\n+        return getKieSession(kproj, rules);\n+    }\n+\n+    protected KieSession getKieSession(KieModuleModel model, String... stringRules) {\n+        return getKieContainer( model, stringRules ).newKieSession();\n+    }\n+\n+    protected KieContainer getKieContainer( KieModuleModel model, String... stringRules ) {\n+        return getKieContainer( model, toKieFiles( stringRules ) );\n+    }\n+\n+    protected KieContainer getKieContainer( KieModuleModel model, KieFile... stringRules ) {\n+        KieServices ks = KieServices.get();\n+        ReleaseId releaseId = ks.newReleaseId( \"org.kie\", \"kjar-test-\" + UUID.randomUUID(), \"1.0\" );\n+\n+        KieBuilder kieBuilder = createKieBuilder( ks, model, releaseId, stringRules );\n+        return ks.newKieContainer( releaseId );\n+    }\n+\n+    protected KieBuilder createKieBuilder( String... stringRules ) {\n+        KieServices ks = KieServices.get();\n+        ReleaseId releaseId = ks.newReleaseId( \"org.kie\", \"kjar-test-\" + UUID.randomUUID(), \"1.0\" );\n+        return createKieBuilder( ks, null, releaseId, false, toKieFiles( stringRules ) );\n+    }\n+\n+    protected KieBuilder createKieBuilder( KieServices ks, KieModuleModel model, ReleaseId releaseId, KieFile... stringRules ) {\n+        return createKieBuilder( ks, model, releaseId, true, stringRules );\n+    }\n+\n+    protected KieBuilder createKieBuilder( KieServices ks, KieModuleModel model, ReleaseId releaseId, boolean failIfBuildError, KieFile... stringRules ) {\n+        ks.getRepository().removeKieModule( releaseId );\n+\n+        KieFileSystem kfs = ks.newKieFileSystem();\n+        if ( model != null ) {\n+            kfs.writeKModuleXML( model.toXML() );\n+        }\n+        kfs.writePomXML( KJARUtils.getPom( releaseId ) );\n+        for (int i = 0; i < stringRules.length; i++) {\n+            kfs.write( stringRules[i].path, stringRules[i].content );\n+        }\n+\n+        KieBuilder kieBuilder;\n+        if (asList(RUN_TYPE.FLOW_DSL, RUN_TYPE.FLOW_WITH_ALPHA_NETWORK).contains(testRunType)) {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(ExecutableModelFlowProject.class);\n+        } else if (asList(RUN_TYPE.PATTERN_DSL, RUN_TYPE.PATTERN_WITH_ALPHA_NETWORK).contains(testRunType)) {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(ExecutableModelProject.class);\n+        } else {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(DrlProject.class);\n+        }\n+\n+        if ( failIfBuildError ) {\n+            List<Message> messages = kieBuilder.getResults().getMessages();\n+            if ( !messages.isEmpty() ) {\n+                fail( messages.toString() );\n+            }\n+        }\n+\n+        return kieBuilder;\n+    }\n+\n+    protected KieModuleModel getDefaultKieModuleModel( KieServices ks ) {\n+        KieModuleModel kproj = ks.newKieModuleModel();\n+        kproj.newKieBaseModel( \"kbase\" ).setDefault( true ).newKieSessionModel( \"ksession\" ).setDefault( true );\n+        return kproj;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjQ5MDM5", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-507249039", "createdAt": "2020-10-13T09:35:56Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNTo1NlrOHgeEjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTozNTo1NlrOHgeEjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwOTE2Nw==", "bodyText": "It's better to change the variable name from \"kproj\"? (e.g. to \"model\")", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r503809167", "createdAt": "2020-10-13T09:35:56Z", "author": {"login": "tkobayas"}, "path": "drools-alphanetwork-compiler/src/test/java/org/drools/ancompiler/BaseModelTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright 2005 JBoss Inc\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.ancompiler;\n+\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import org.drools.compiler.kie.builder.impl.DrlProject;\n+import org.drools.compiler.kie.builder.impl.InternalKieModule;\n+import org.drools.core.impl.InternalKnowledgeBase;\n+import org.drools.core.reteoo.ObjectTypeNode;\n+import org.drools.core.reteoo.Rete;\n+import org.drools.modelcompiler.ExecutableModelFlowProject;\n+import org.drools.modelcompiler.ExecutableModelProject;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.kie.api.KieServices;\n+import org.kie.api.builder.KieBuilder;\n+import org.kie.api.builder.KieFileSystem;\n+import org.kie.api.builder.Message;\n+import org.kie.api.builder.ReleaseId;\n+import org.kie.api.builder.model.KieModuleModel;\n+import org.kie.api.runtime.ClassObjectFilter;\n+import org.kie.api.runtime.KieContainer;\n+import org.kie.api.runtime.KieSession;\n+import org.kie.internal.builder.conf.AlphaNetworkCompilerOption;\n+\n+import static java.util.Arrays.asList;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+@RunWith(Parameterized.class)\n+public abstract class BaseModelTest {\n+    public enum RUN_TYPE {\n+        FLOW_DSL( false ),\n+        PATTERN_DSL( false ),\n+        STANDARD_FROM_DRL( false ),\n+        STANDARD_WITH_ALPHA_NETWORK( true ),\n+        PATTERN_WITH_ALPHA_NETWORK( true ),\n+        FLOW_WITH_ALPHA_NETWORK( true );\n+\n+        private boolean alphaNetworkCompiler;\n+\n+        RUN_TYPE( boolean isAlphaNetworkCompiler ) {\n+            this.alphaNetworkCompiler = isAlphaNetworkCompiler;\n+        }\n+\n+        public boolean isAlphaNetworkCompiler() {\n+            return alphaNetworkCompiler;\n+        }\n+    }\n+\n+\n+    final static Object[] WITH_ALPHA_NETWORK = {\n+            RUN_TYPE.STANDARD_FROM_DRL,\n+            RUN_TYPE.FLOW_DSL,\n+            RUN_TYPE.PATTERN_DSL,\n+            RUN_TYPE.STANDARD_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.PATTERN_WITH_ALPHA_NETWORK,\n+            RUN_TYPE.FLOW_WITH_ALPHA_NETWORK,\n+    };\n+\n+    @Parameters(name = \"{0}\")\n+    public static Object[] params() {\n+        return WITH_ALPHA_NETWORK;\n+    }\n+\n+    protected final RUN_TYPE testRunType;\n+\n+    public BaseModelTest(RUN_TYPE testRunType ) {\n+        this.testRunType = testRunType;\n+    }\n+\n+    protected KieSession getKieSession(String... rules) {\n+        KieModuleModel kproj = testRunType.isAlphaNetworkCompiler() ? getKieModuleModelWithAlphaNetworkCompiler() : null;\n+        return getKieSession(kproj, rules);\n+    }\n+\n+    protected KieSession getKieSession(KieModuleModel model, String... stringRules) {\n+        return getKieContainer( model, stringRules ).newKieSession();\n+    }\n+\n+    protected KieContainer getKieContainer( KieModuleModel model, String... stringRules ) {\n+        return getKieContainer( model, toKieFiles( stringRules ) );\n+    }\n+\n+    protected KieContainer getKieContainer( KieModuleModel model, KieFile... stringRules ) {\n+        KieServices ks = KieServices.get();\n+        ReleaseId releaseId = ks.newReleaseId( \"org.kie\", \"kjar-test-\" + UUID.randomUUID(), \"1.0\" );\n+\n+        KieBuilder kieBuilder = createKieBuilder( ks, model, releaseId, stringRules );\n+        return ks.newKieContainer( releaseId );\n+    }\n+\n+    protected KieBuilder createKieBuilder( String... stringRules ) {\n+        KieServices ks = KieServices.get();\n+        ReleaseId releaseId = ks.newReleaseId( \"org.kie\", \"kjar-test-\" + UUID.randomUUID(), \"1.0\" );\n+        return createKieBuilder( ks, null, releaseId, false, toKieFiles( stringRules ) );\n+    }\n+\n+    protected KieBuilder createKieBuilder( KieServices ks, KieModuleModel model, ReleaseId releaseId, KieFile... stringRules ) {\n+        return createKieBuilder( ks, model, releaseId, true, stringRules );\n+    }\n+\n+    protected KieBuilder createKieBuilder( KieServices ks, KieModuleModel model, ReleaseId releaseId, boolean failIfBuildError, KieFile... stringRules ) {\n+        ks.getRepository().removeKieModule( releaseId );\n+\n+        KieFileSystem kfs = ks.newKieFileSystem();\n+        if ( model != null ) {\n+            kfs.writeKModuleXML( model.toXML() );\n+        }\n+        kfs.writePomXML( KJARUtils.getPom( releaseId ) );\n+        for (int i = 0; i < stringRules.length; i++) {\n+            kfs.write( stringRules[i].path, stringRules[i].content );\n+        }\n+\n+        KieBuilder kieBuilder;\n+        if (asList(RUN_TYPE.FLOW_DSL, RUN_TYPE.FLOW_WITH_ALPHA_NETWORK).contains(testRunType)) {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(ExecutableModelFlowProject.class);\n+        } else if (asList(RUN_TYPE.PATTERN_DSL, RUN_TYPE.PATTERN_WITH_ALPHA_NETWORK).contains(testRunType)) {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(ExecutableModelProject.class);\n+        } else {\n+            kieBuilder = ks.newKieBuilder(kfs).buildAll(DrlProject.class);\n+        }\n+\n+        if ( failIfBuildError ) {\n+            List<Message> messages = kieBuilder.getResults().getMessages();\n+            if ( !messages.isEmpty() ) {\n+                fail( messages.toString() );\n+            }\n+        }\n+\n+        return kieBuilder;\n+    }\n+\n+    protected KieModuleModel getDefaultKieModuleModel( KieServices ks ) {\n+        KieModuleModel kproj = ks.newKieModuleModel();\n+        kproj.newKieBaseModel( \"kbase\" ).setDefault( true ).newKieSessionModel( \"ksession\" ).setDefault( true );\n+        return kproj;\n+    }\n+\n+    public static <T> List<T> getObjectsIntoList(KieSession ksession, Class<T> clazz) {\n+        return (List<T>) ksession.getObjects(new ClassObjectFilter(clazz)).stream().collect(Collectors.toList());\n+    }\n+\n+    protected void createAndDeployJar( KieServices ks, ReleaseId releaseId, String... drls ) {\n+        createAndDeployJar( ks, null, releaseId, drls );\n+    }\n+\n+    protected void createAndDeployJar( KieServices ks, ReleaseId releaseId, KieFile... ruleFiles ) {\n+        createAndDeployJar( ks, null, releaseId, ruleFiles );\n+    }\n+\n+    protected void createAndDeployJar( KieServices ks, KieModuleModel model, ReleaseId releaseId, String... drls ) {\n+        createAndDeployJar( ks, model, releaseId, toKieFiles( drls ) );\n+    }\n+\n+    protected void createAndDeployJar( KieServices ks, KieModuleModel model, ReleaseId releaseId, KieFile... ruleFiles ) {\n+        KieBuilder kieBuilder = createKieBuilder( ks, model, releaseId, ruleFiles );\n+        InternalKieModule kieModule = (InternalKieModule) kieBuilder.getKieModule();\n+        ks.getRepository().addKieModule( kieModule );\n+    }\n+\n+    public static class KieFile {\n+\n+        public final String path;\n+        public final String content;\n+\n+        public KieFile( int index, String content ) {\n+            this( String.format(\"src/main/resources/r%d.drl\", index), content );\n+        }\n+\n+        public KieFile( String path, String content ) {\n+            this.path = path;\n+            this.content = content;\n+        }\n+    }\n+\n+    public KieFile[] toKieFiles(String[] stringRules) {\n+        KieFile[] kieFiles = new KieFile[stringRules.length];\n+        for (int i = 0; i < stringRules.length; i++) {\n+            kieFiles[i] = new KieFile( i, stringRules[i] );\n+        }\n+        return kieFiles;\n+    }\n+\n+    private KieModuleModel getKieModuleModelWithAlphaNetworkCompiler() {\n+        KieModuleModel kproj = KieServices.get().newKieModuleModel();\n+        kproj.setConfigurationProperty(AlphaNetworkCompilerOption.PROPERTY_NAME, AlphaNetworkCompilerOption.INMEMORY.toString());\n+        return kproj;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "originalPosition": 206}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDY4ODU2", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508068856", "createdAt": "2020-10-14T07:34:00Z", "commit": {"oid": "c51fa98beb73ec23d0ded4482d1bfcacad30c750"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTE4MDY4", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508118068", "createdAt": "2020-10-14T08:36:42Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozNjo0MlrOHhISig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozNjo0MlrOHhISig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMDg3NA==", "bodyText": "If you remove the bundle packaging also remove this.", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504500874", "createdAt": "2020-10-14T08:36:42Z", "author": {"login": "mariofusco"}, "path": "drools-alphanetwork-compiler/pom.xml", "diffHunk": "@@ -0,0 +1,130 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>drools</artifactId>\n+    <groupId>org.drools</groupId>\n+    <version>7.45.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>drools-alphanetwork-compiler</artifactId>\n+\n+  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->\n+\n+  <name>Drools :: Alpha Network Compiler</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.alphanetworkcompiler</java.module.name>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-mvel</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-compiler</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+    </dependency>\n+\n+\n+    <!-- Logging -->\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency><!-- For unit test logging: configure in src/test/resources/logback-test.xml -->\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-test-util</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-memory-compiler</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-model-compiler</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+      </resource>\n+      <resource>\n+        <filtering>true</filtering>\n+        <directory>src/main/filtered-resources</directory>\n+      </resource>\n+    </resources>\n+\n+    <testResources>\n+      <testResource>\n+        <directory>src/test/resources</directory>\n+        <filtering>false</filtering>\n+      </testResource>\n+      <testResource>\n+        <directory>src/test/filtered-resources</directory>\n+        <filtering>true</filtering>\n+      </testResource>\n+    </testResources>\n+\n+\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTI2MDMx", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508126031", "createdAt": "2020-10-14T08:46:11Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODo0NjoxMVrOHhIqyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODo0NjoxMVrOHhIqyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwNzA4MQ==", "bodyText": "@lucamolteni for sure I'm missing something but it seems to me that this LOAD option is covering the case when the compiled alpha network is in the kjar so this could be actually replaced with COMPILE. Can you please clarify?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504507081", "createdAt": "2020-10-14T08:46:11Z", "author": {"login": "mariofusco"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/KieBaseUpdaterANC.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.drools.ancompiler;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.drools.compiler.kie.builder.impl.KieBaseUpdater;\n+import org.drools.compiler.kie.builder.impl.KieBaseUpdatersContext;\n+import org.drools.core.reteoo.Rete;\n+import org.kie.api.conf.Option;\n+import org.kie.internal.builder.conf.AlphaNetworkCompilerOption;\n+import org.kie.memorycompiler.KieMemoryCompiler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.drools.core.util.MapUtils.mapValues;\n+\n+public class KieBaseUpdaterANC implements KieBaseUpdater {\n+\n+    private final Logger logger = LoggerFactory.getLogger(KieBaseUpdaterANC.class);\n+\n+    private final KieBaseUpdatersContext ctx;\n+\n+    public KieBaseUpdaterANC(KieBaseUpdatersContext ctx) {\n+        this.ctx = ctx;\n+    }\n+\n+    public void run() {\n+        Optional<Option> ancMode = ctx.getOption(AlphaNetworkCompilerOption.class);\n+\n+        // find the new compiled alpha network in the classpath, if it's not there,\n+        // generate compile it and reattach it\n+        if (ancMode.filter(AlphaNetworkCompilerOption.INMEMORY::equals).isPresent()) {\n+            inMemoryUpdate(ctx.getClassLoader(), ctx.getRete());\n+        } // load it from the kjar\n+        else if (ancMode.filter(AlphaNetworkCompilerOption.LOAD::equals).isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTM4Mzg5", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508138389", "createdAt": "2020-10-14T09:00:53Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTQxMzkw", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508141390", "createdAt": "2020-10-14T09:04:27Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowNDoyN1rOHhJbdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowNDoyN1rOHhJbdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUxOTU0Mw==", "bodyText": "It seems you're creating this variable but never using it.", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504519543", "createdAt": "2020-10-14T09:04:27Z", "author": {"login": "mariofusco"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/MemoryKieModule.java", "diffHunk": "@@ -110,6 +116,33 @@ public long getCreationTimestamp() {\n         return creationTimestamp;\n     }\n \n+    @Override\n+    public void afterKieBaseCreationUpdate(String kBaseName, InternalKnowledgeBase kBase) {\n+        KnowledgeBuilder knowledgeBuilderForKieBase = getKnowledgeBuilderForKieBase(kBaseName);\n+\n+        if(knowledgeBuilderForKieBase instanceof KnowledgeBuilderImpl) {\n+            KnowledgeBuilderImpl knowledgeBuilderForImpl = (KnowledgeBuilderImpl)knowledgeBuilderForKieBase;\n+            KnowledgeBuilderConfigurationImpl builderConfiguration = knowledgeBuilderForImpl.getBuilderConfiguration();\n+\n+            // TODO LUCA ask Mario if we need to enqueue this or we can just run it\n+            KieContainerImpl.CompositeRunnable compositeUpdater = new KieContainerImpl.CompositeRunnable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjgyMDk3", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508282097", "createdAt": "2020-10-14T12:16:19Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Mjg3MTIw", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508287120", "createdAt": "2020-10-14T12:23:05Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dad86ef0f5730383a970a9849bc7e19ee504692f", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/dad86ef0f5730383a970a9849bc7e19ee504692f", "committedDate": "2020-10-14T12:36:36Z", "message": "Avoid enque the updaters and run them directly"}, "afterCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/e30d54b8fdc994abac85f49043faee61993e55a4", "committedDate": "2020-10-14T13:01:43Z", "message": "Avoid enque the updaters and run them directly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTYxNTgz", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-508161583", "createdAt": "2020-10-14T09:28:44Z", "commit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "state": "COMMENTED", "comments": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyODo0NVrOHhKXVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozNjoyNFrOHhZLyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNDg2OA==", "bodyText": "Is it possible to reach this code? What about a log.debug?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504534868", "createdAt": "2020-10-14T09:28:45Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetwork.java", "diffHunk": "@@ -65,7 +74,6 @@ public RuleBasePartitionId getPartitionId() {\n      * method of this Externalizable class.\n      */\n     public void writeExternal(ObjectOutput out) throws IOException {\n-        // todo is this needed??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNDkzMg==", "bodyText": "Is it possible to reach this code? What about a log.debug?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504534932", "createdAt": "2020-10-14T09:28:52Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetwork.java", "diffHunk": "@@ -81,22 +89,39 @@ public void writeExternal(ObjectOutput out) throws IOException {\n      *                                restored cannot be found.\n      */\n     public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n-        // todo is this needed??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNzU3OQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504537579", "createdAt": "2020-10-14T09:33:13Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetworkSource.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzODE5NQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504538195", "createdAt": "2020-10-14T09:34:19Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CouldNotCreateAlphaNetworkCompilerException.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzOTIyMg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504539222", "createdAt": "2020-10-14T09:35:55Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/KieBaseUpdaterANC.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzOTM1Mg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504539352", "createdAt": "2020-10-14T09:36:07Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/KieBaseUpdaterANCFactory.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0MDM2OQ==", "bodyText": "Log?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504540369", "createdAt": "2020-10-14T09:37:45Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitObjectTypeNode.java", "diffHunk": "@@ -142,29 +142,22 @@ public void modifyObject( InternalFactHandle factHandle,\n \n         checkDirty();\n \n-        if ( compiledNetwork != null ) {\n-            compiledNetwork.modifyObject( factHandle,\n-                    modifyPreviousTuples,\n-                    context.adaptModificationMaskForObjectType( objectType, workingMemory ),\n-                    workingMemory );\n-        } else {\n-            if ( factHandle.isTraiting() )  {\n-                if ( isModifyAllowed( factHandle )  ) {\n-                    this.sink.propagateModifyObject( factHandle,\n-                                                     modifyPreviousTuples,\n-                                                     context.adaptModificationMaskForObjectType( objectType, workingMemory ),\n-                                                     workingMemory );\n-                } else {\n-                    //System.err.println( ((ClassObjectType) this.getObjectType()).getClassName() + \" : MODIFY BLOCK !! \" + ( (TraitProxy) factHandle.getObject() ).getTraitName() + \" \" + ( (TraitProxy) factHandle.getObject() )._getTypeCode() + \" >> \" + \" checks in \" + typeMask );\n-                }\n+        if (factHandle.isTraiting()) {\n+            if (isModifyAllowed(factHandle)) {\n+                this.sink.propagateModifyObject(factHandle,\n+                                                modifyPreviousTuples,\n+                                                context.adaptModificationMaskForObjectType(objectType, workingMemory),\n+                                                workingMemory);\n             } else {\n-                this.sink.propagateModifyObject( factHandle,\n-                                                 modifyPreviousTuples,\n-                                                 !context.getModificationMask().isSet(PropertySpecificUtil.TRAITABLE_BIT) ?\n-                                                        context.adaptModificationMaskForObjectType( objectType, workingMemory ) :\n-                                                        context,\n-                                                 workingMemory );\n+                //System.err.println( ((ClassObjectType) this.getObjectType()).getClassName() + \" : MODIFY BLOCK !! \" + ( (TraitProxy) factHandle.getObject() ).getTraitName() + \" \" + ( (TraitProxy) factHandle.getObject() )._getTypeCode() + \" >> \" + \" checks in \" + typeMask );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0MTIxMQ==", "bodyText": "Remember to revert this before merging", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504541211", "createdAt": "2020-10-14T09:39:13Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/test/resources/logback-test.xml", "diffHunk": "@@ -11,7 +11,7 @@\n   <logger name=\"org.drools.compiler.kie.builder.impl\" level=\"ERROR\" />\n   <!--<logger name=\"org.drools.modelcompiler.builder.generator.expressiontyper\" level=\"debug\"/>-->\n <!--  <logger name=\"org.drools.modelcompiler.builder\" level=\"debug\"/>-->\n-  <!--<logger name=\"org.drools.compiler.reteoo.compiled\" level=\"debug\"/>-->\n+  <logger name=\"org.drools.ancompiler\" level=\"debug\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef8fae363a6c0d1737e62b3e309222ad761e01b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNzM3NQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504717375", "createdAt": "2020-10-14T14:20:28Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/test/java/org/drools/ancompiler/KJARUtils.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNzQ2NQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504717465", "createdAt": "2020-10-14T14:20:36Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/test/java/org/drools/ancompiler/Person.java", "diffHunk": "@@ -0,0 +1,206 @@\n+package org.drools.ancompiler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNzg4MQ==", "bodyText": "To be changed before merging", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504717881", "createdAt": "2020-10-14T14:21:10Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/test/resources/logback-test.xml", "diffHunk": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<configuration>\n+\n+  <appender name=\"consoleAppender\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <encoder>\n+      <pattern>%date{HH:mm:ss.SSS} [%thread] %-5level %class{36}.%method:%line - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <logger name=\"org.kie\" level=\"info\"/>\n+  <logger name=\"org.drools.compiler.kie.builder.impl\" level=\"ERROR\" />\n+  <logger name=\"org.drools.ancompiler\" level=\"debug\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODkzOA==", "bodyText": "Isn't this a fatal error? If user is explicitly asking for AlphaNetworkCompilerOption and it fails to load it I expect we should log and propagate the exception.", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504718938", "createdAt": "2020-10-14T14:22:30Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/KnowledgeBuilderConfigurationImpl.java", "diffHunk": "@@ -328,6 +330,12 @@ public void setProperty(String name,\n         \tsetParallelRulesBuildThreshold(Integer.valueOf(value));\n         }  else if (name.equals(ExternaliseCanonicalModelLambdaOption.PROPERTY_NAME)) {\n             setExternaliseCanonicalModelLambda(Boolean.valueOf(value));\n+        } else if (name.equals(AlphaNetworkCompilerOption.PROPERTY_NAME)) {\n+            try {\n+                setAlphaNetworkCompilerOption(AlphaNetworkCompilerOption.determineAlphaNetworkCompilerMode(value.toUpperCase()));\n+            } catch (IllegalArgumentException e) {\n+                log.warn(\"Invalid value \" + value + \" for option \" + LanguageLevelOption.PROPERTY_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMDI0MQ==", "bodyText": "Unused import?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504720241", "createdAt": "2020-10-14T14:24:03Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/FileKieModule.java", "diffHunk": "@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.Collection;\n \n+import org.drools.core.impl.InternalKnowledgeBase;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMDU5NQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504720595", "createdAt": "2020-10-14T14:24:29Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdater.java", "diffHunk": "@@ -1,249 +1,6 @@\n-/*\n- * Copyright 2005 JBoss Inc\n- *\n- * Licensed under the Apache License; private final  Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing; private final  software\n- * distributed under the License is distributed on an \"AS IS\" BASIS; private final \n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND; private final  either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMDg4NA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504720884", "createdAt": "2020-10-14T14:24:52Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdaterFactory.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMzYzNw==", "bodyText": "Is this field used somewhere? If so, can you please add a getter?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504723637", "createdAt": "2020-10-14T14:28:18Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdaterImplContext.java", "diffHunk": "@@ -54,5 +57,6 @@ public KieBaseUpdateContext( KieProject kProject, InternalKnowledgeBase kBase, I\n         this.results = results;\n         this.newKieBaseModel = newKieBaseModel;\n         this.currentKieBaseModel = currentKieBaseModel;\n+        this.kbuilder = kbuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMzc4Mg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504723782", "createdAt": "2020-10-14T14:28:27Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdaterOptions.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyOTA0Nw==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504729047", "createdAt": "2020-10-14T14:34:52Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdaters.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyOTE0OA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504729148", "createdAt": "2020-10-14T14:34:59Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdatersContext.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyOTUxMg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504729512", "createdAt": "2020-10-14T14:35:20Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdatersImpl.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.drools.compiler.kie.builder.impl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyOTcwNw==", "bodyText": "Why an explicit empty constructor?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504729707", "createdAt": "2020-10-14T14:35:34Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/KieBaseUpdatersImpl.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.drools.compiler.kie.builder.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+public class KieBaseUpdatersImpl implements Consumer<KieBaseUpdaterFactory>,\n+                                            KieBaseUpdaters {\n+\n+    List<KieBaseUpdaterFactory> children = new ArrayList<>();\n+\n+    public KieBaseUpdatersImpl() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMDc3Nw==", "bodyText": "Unused import?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504730777", "createdAt": "2020-10-14T14:36:51Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/ZipKieModule.java", "diffHunk": "@@ -31,6 +31,7 @@\n import java.util.zip.ZipEntry;\n import java.util.zip.ZipInputStream;\n \n+import org.drools.core.impl.InternalKnowledgeBase;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMTk0Mw==", "bodyText": "What is the reason of this change?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504731943", "createdAt": "2020-10-14T14:38:14Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/kie/builder/impl/ZipKieModule.java", "diffHunk": "@@ -57,7 +58,7 @@ public ZipKieModule(ReleaseId releaseId,\n     @Override\n     public InternalResource getResource( String fileName) {\n         byte[] bytes = getBytes(fileName);\n-        if (bytes != null && bytes.length > 0) {\n+        if (bytes != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMjMyMQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504732321", "createdAt": "2020-10-14T14:38:43Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/util/MapUtils.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.drools.core.util;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMzAzNA==", "bodyText": "Please remove the license", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504733034", "createdAt": "2020-10-14T14:39:39Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/util/StreamUtils.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright (c) 2020. Red Hat, Inc. and/or its affiliates.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMzk1NA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504733954", "createdAt": "2020-10-14T14:40:41Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/AdditionalFileGenerator.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package org.drools.modelcompiler.builder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczNDEyMg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504734122", "createdAt": "2020-10-14T14:40:52Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/AdditionalFileGenerators.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package org.drools.modelcompiler.builder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczNDIzNA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504734234", "createdAt": "2020-10-14T14:41:01Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/AdditionalFileGeneratorsImpl.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.drools.modelcompiler.builder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczODYwNA==", "bodyText": "Where is it used?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504738604", "createdAt": "2020-10-14T14:46:25Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/pom.xml", "diffHunk": "@@ -117,6 +117,12 @@\n       <artifactId>logback-classic</artifactId>\n       <scope>test</scope>\n     </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-memory-compiler</artifactId>\n+      <scope>test</scope>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczOTU5MQ==", "bodyText": "Is this case possible? If yes please add a comment.\nAs far as I can see this will produce a NPE inside KieBaseUpdaterOptions because it iterates over this value. Can you please verify?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504739591", "createdAt": "2020-10-14T14:47:42Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/CanonicalKieModule.java", "diffHunk": "@@ -218,6 +231,35 @@ public InternalKnowledgeBase createKieBase(KieBaseModelImpl kBaseModel, KieProje\n         return kieBase;\n     }\n \n+    @Override\n+    public void afterKieBaseCreationUpdate(String name, InternalKnowledgeBase kBase) {\n+        KnowledgeBuilder knowledgeBuilderForKieBase = getKnowledgeBuilderForKieBase(name);\n+\n+\n+        final KieBaseUpdaterOptions.OptionEntry options;\n+        if(knowledgeBuilderForKieBase instanceof KnowledgeBuilderImpl) {\n+            KnowledgeBuilderImpl knowledgeBuilderForImpl = (KnowledgeBuilderImpl) knowledgeBuilderForKieBase;\n+            KnowledgeBuilderConfigurationImpl builderConfiguration = knowledgeBuilderForImpl.getBuilderConfiguration();\n+            options = new KieBaseUpdaterOptions.OptionEntry(AlphaNetworkCompilerOption.class, builderConfiguration.getAlphaNetworkCompilerOption());\n+        } else if(resourceFileExists(getANCFile(internalKieModule.getReleaseId()))) {\n+            options = new KieBaseUpdaterOptions.OptionEntry(AlphaNetworkCompilerOption.class, AlphaNetworkCompilerOption.LOAD);\n+        } else {\n+            options = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2OTA1MA==", "bodyText": "Why in similar other classes (i.e. MemoryKieModule.java) the code is\nkBase.enqueueModification(compositeUpdater);\nwhile here it is executed in place?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504769050", "createdAt": "2020-10-14T15:25:15Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/CanonicalKieModule.java", "diffHunk": "@@ -218,6 +231,35 @@ public InternalKnowledgeBase createKieBase(KieBaseModelImpl kBaseModel, KieProje\n         return kieBase;\n     }\n \n+    @Override\n+    public void afterKieBaseCreationUpdate(String name, InternalKnowledgeBase kBase) {\n+        KnowledgeBuilder knowledgeBuilderForKieBase = getKnowledgeBuilderForKieBase(name);\n+\n+\n+        final KieBaseUpdaterOptions.OptionEntry options;\n+        if(knowledgeBuilderForKieBase instanceof KnowledgeBuilderImpl) {\n+            KnowledgeBuilderImpl knowledgeBuilderForImpl = (KnowledgeBuilderImpl) knowledgeBuilderForKieBase;\n+            KnowledgeBuilderConfigurationImpl builderConfiguration = knowledgeBuilderForImpl.getBuilderConfiguration();\n+            options = new KieBaseUpdaterOptions.OptionEntry(AlphaNetworkCompilerOption.class, builderConfiguration.getAlphaNetworkCompilerOption());\n+        } else if(resourceFileExists(getANCFile(internalKieModule.getReleaseId()))) {\n+            options = new KieBaseUpdaterOptions.OptionEntry(AlphaNetworkCompilerOption.class, AlphaNetworkCompilerOption.LOAD);\n+        } else {\n+            options = null;\n+        }\n+\n+        KieContainerImpl.CompositeRunnable compositeUpdater = new KieContainerImpl.CompositeRunnable();\n+        KieBaseUpdaters updaters = ServiceRegistry.getService(KieBaseUpdaters.class);\n+        updaters.getChildren()\n+                .stream()\n+                .map(kbu -> kbu.create(new KieBaseUpdatersContext(new KieBaseUpdaterOptions(options),\n+                                                              kBase.getRete(),\n+                                                              kBase.getRootClassLoader()\n+                )))\n+                .forEach(compositeUpdater::add);\n+\n+        compositeUpdater.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2OTYxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(e);\n          \n          \n            \n                        throw new UncheckedIOException(e);", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504769612", "createdAt": "2020-10-14T15:25:57Z", "author": {"login": "danielezonca"}, "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/CanonicalKieModule.java", "diffHunk": "@@ -437,6 +473,22 @@ private void initModels(CanonicalKieModuleModel kmodel) throws ClassNotFoundExce\n         return Stream.of(lines).skip(1).collect(toList());\n     }\n \n+    private String readExistingResourceWithName(String fileName) {\n+        String modelFiles;\n+        try {\n+            Resource modelFile = internalKieModule.getResource(fileName);\n+            modelFiles = new String(IoUtils.readBytesFromInputStream(modelFile.getInputStream()));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3MjQxMg==", "bodyText": "Is it using MVEL? If yes, do we plan to make it work without MVEL in the future?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504772412", "createdAt": "2020-10-14T15:29:31Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/pom.xml", "diffHunk": "@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>drools</artifactId>\n+    <groupId>org.drools</groupId>\n+    <version>7.45.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>drools-alphanetwork-compiler</artifactId>\n+\n+  <name>Drools :: Alpha Network Compiler</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.alphanetworkcompiler</java.module.name>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-mvel</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3MzExNQ==", "bodyText": "What about use drools-engine-classic dependency?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504773115", "createdAt": "2020-10-14T15:30:23Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/pom.xml", "diffHunk": "@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <parent>\n+    <artifactId>drools</artifactId>\n+    <groupId>org.drools</groupId>\n+    <version>7.45.0-SNAPSHOT</version>\n+  </parent>\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <artifactId>drools-alphanetwork-compiler</artifactId>\n+\n+  <name>Drools :: Alpha Network Compiler</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.alphanetworkcompiler</java.module.name>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-mvel</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-compiler</artifactId>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NDgxOA==", "bodyText": "Is it possible to add a type bound to prevent arbitrary classes?", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504774818", "createdAt": "2020-10-14T15:32:38Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/CompiledNetworkSource.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.drools.ancompiler;\n+\n+import org.drools.core.reteoo.ObjectTypeNode;\n+import org.drools.core.rule.IndexableConstraint;\n+import org.drools.core.spi.InternalReadAccessor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CompiledNetworkSource {\n+\n+    private final Logger logger = LoggerFactory.getLogger(CompiledNetworkSource.class);\n+\n+    private final String source;\n+    private final IndexableConstraint indexableConstraint;\n+    private final String name;\n+    private final String sourceName;\n+    private final ObjectTypeNode objectTypeNode;\n+\n+    public CompiledNetworkSource(String source,\n+                                 IndexableConstraint indexableConstraint,\n+                                 String name,\n+                                 String sourceName,\n+                                 ObjectTypeNode objectTypeNode) {\n+        this.source = source;\n+        this.indexableConstraint = indexableConstraint;\n+        this.name = name;\n+        this.sourceName = sourceName;\n+        this.objectTypeNode = objectTypeNode;\n+    }\n+\n+    public String getSource() {\n+        return source;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getSourceName() {\n+        return sourceName;\n+    }\n+\n+    public void setCompiledNetwork(Class<?> compiledNetworkClass) {\n+        CompiledNetwork compiledNetwork = newCompiledNetworkInstance(compiledNetworkClass);\n+        compiledNetwork.setNetwork(objectTypeNode);\n+        logger.debug(\"Updating {} with instance of class: {}\",\n+                     objectTypeNode,\n+                     compiledNetworkClass.getName());\n+    }\n+\n+    public CompiledNetwork newCompiledNetworkInstance(Class<?> aClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NzY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .collect(Collectors.toMap(CompiledNetworkSource::getName, c -> c));\n          \n          \n            \n                            .collect(Collectors.toMap(CompiledNetworkSource::getName, Function.identity()));", "url": "https://github.com/kiegroup/drools/pull/3159#discussion_r504777673", "createdAt": "2020-10-14T15:36:24Z", "author": {"login": "danielezonca"}, "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/ObjectTypeNodeCompiler.java", "diffHunk": "@@ -221,59 +201,38 @@ private String getPackageName() {\n         return PACKAGE_NAME;\n     }\n \n-    private static final JavaCompiler JAVA_COMPILER = JavaCompilerFactory.INSTANCE.loadCompiler( JavaConfiguration.CompilerType.NATIVE, \"1.8\");\n-\n-    /**\n-     * Creates a {@link CompiledNetwork} for the specified {@link ObjectTypeNode}. The {@link PackageBuilder} is used\n-     * to compile the generated source and load the class.\n-     *\n-     * @param kBuilder     builder used to compile and load class\n-     * @param objectTypeNode OTN we are generating a compiled network for\n-     * @return CompiledNetwork\n-     */\n-    public static CompiledNetwork compile( InternalKnowledgeBuilder kBuilder, ObjectTypeNode objectTypeNode) {\n-        if (objectTypeNode == null) {\n-            throw new IllegalArgumentException(\"ObjectTypeNode cannot be null!\");\n-        }\n-        if (kBuilder == null) {\n-            throw new IllegalArgumentException(\"PackageBuilder cannot be null!\");\n-        }\n-        ObjectTypeNodeCompiler compiler = new ObjectTypeNodeCompiler(objectTypeNode);\n-\n-        String packageName = compiler.getPackageName();\n-\n-        PackageRegistry pkgReg = kBuilder.getPackageRegistry(packageName);\n-        if (pkgReg == null) {\n-            kBuilder.addPackage(new PackageDescr(packageName));\n-            pkgReg = kBuilder.getPackageRegistry(packageName);\n-        }\n-\n-        SourceGenerated source = compiler.generateSource();\n-\n-        logger.debug(\"Generated alpha node compiled network source:\\n\" + source.source);\n-\n-        MemoryFileSystem mfs = new MemoryFileSystem();\n-        mfs.write(compiler.getSourceName(), source.source.getBytes(IoUtils.UTF8_CHARSET));\n-\n-        MemoryFileSystem trg = new MemoryFileSystem();\n-        ProjectClassLoader rootClassLoader = (ProjectClassLoader) kBuilder.getRootClassLoader();\n-        CompilationResult compiled = JAVA_COMPILER.compile(new String[]{compiler.getSourceName()}, mfs, trg, rootClassLoader);\n+    public static List<CompiledNetworkSource> compiledNetworkSources(Rete rete) {\n+        return objectTypeNodeCompiler(rete)\n+                .stream()\n+                .map(ObjectTypeNodeCompiler::generateSource)\n+                .collect(Collectors.toList());\n+    }\n \n-        if (compiled.getErrors().length > 0) {\n-            throw new RuntimeException(\"This is a bug. Please contact the development team:\\n\" + Arrays.toString(compiled.getErrors()));\n-        }\n+    public static List<ObjectTypeNodeCompiler> objectTypeNodeCompiler(Rete rete) {\n+        return objectTypeNodes(rete)\n+                .stream()\n+                .map(ObjectTypeNodeCompiler::new)\n+                .collect(Collectors.toList());\n+    }\n \n-        rootClassLoader.defineClass(compiler.getName(), trg.getBytes(compiler.getBinaryName()));\n+    public static List<ObjectTypeNode> objectTypeNodes(Rete rete) {\n+        return rete.getEntryPointNodes().values().stream()\n+                .flatMap(ep -> ep.getObjectTypeNodes().values().stream())\n+                .filter(f -> !InitialFact.class.isAssignableFrom(f.getObjectType().getClassType()))\n+                .collect(Collectors.toList());\n+    }\n \n-        CompiledNetwork network;\n-        try {\n-            final Class<?> aClass = Class.forName(compiler.getName(), true, rootClassLoader);\n-            final IndexableConstraint indexableConstraint = source.indexableConstraint;\n-            network = (CompiledNetwork) aClass.getConstructor(InternalReadAccessor.class).newInstance(indexableConstraint != null ? indexableConstraint.getFieldExtractor(): null);\n-        } catch (Exception e) {\n-            throw new RuntimeException(\"This is a bug. Please contact the development team\", e);\n-        }\n+    public static Map<String, CompiledNetworkSource> compiledNetworkSourceMap(Rete rete) {\n+        List<CompiledNetworkSource> compiledNetworkSources = ObjectTypeNodeCompiler.compiledNetworkSources(rete);\n+        return compiledNetworkSources\n+                .stream()\n+                .collect(Collectors.toMap(CompiledNetworkSource::getName, c -> c));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4"}, "originalPosition": 229}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "526fed68476e2424039a7287d6f407728c315000", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/526fed68476e2424039a7287d6f407728c315000", "committedDate": "2020-10-15T07:28:57Z", "message": "ANC module compiling, but not created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93778f642a874bebbdeba0080cb87f9f3970f553", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/93778f642a874bebbdeba0080cb87f9f3970f553", "committedDate": "2020-10-15T07:28:57Z", "message": "Fix pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1647be10fdd4ae9395c1b492a97416c8f34dd47b", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/1647be10fdd4ae9395c1b492a97416c8f34dd47b", "committedDate": "2020-10-15T07:28:57Z", "message": "New field for source results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "873b1c8d0707d64efdd8a4be5bafd67c59c0d66f", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/873b1c8d0707d64efdd8a4be5bafd67c59c0d66f", "committedDate": "2020-10-15T07:28:57Z", "message": "Removed in memory compilation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b606d0fec95579a66e2af0759685d0576d69e24e", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/b606d0fec95579a66e2af0759685d0576d69e24e", "committedDate": "2020-10-15T07:28:57Z", "message": "Start compiling in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff87ea35bf16b30ff641296b302b57060c7b3e34", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/ff87ea35bf16b30ff641296b302b57060c7b3e34", "committedDate": "2020-10-15T07:28:57Z", "message": "Compiling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aea28524c6439736749c54d0f53f6ccdcb81a8f8", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/aea28524c6439736749c54d0f53f6ccdcb81a8f8", "committedDate": "2020-10-15T07:28:57Z", "message": "CompiledNetwork is a ObjectSinkPropagator, threfore avoiding having a specific ObjectTypeNode for ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c0d982b3084e014b4912c7ad4e6bfeb02cff5c7", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/4c0d982b3084e014b4912c7ad4e6bfeb02cff5c7", "committedDate": "2020-10-15T07:28:57Z", "message": "Small refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c395704c6c3760973d08147c3976cadbbc414506", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c395704c6c3760973d08147c3976cadbbc414506", "committedDate": "2020-10-15T07:28:57Z", "message": "Avoiding compiling empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45171eee0e1893145c674896218e741d888906e3", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/45171eee0e1893145c674896218e741d888906e3", "committedDate": "2020-10-15T07:28:57Z", "message": "Wrap originalSinkPropagator in CompiledNetwork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe3c88e00151f48a78a90b9f513ad976555e70e", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/abe3c88e00151f48a78a90b9f513ad976555e70e", "committedDate": "2020-10-15T07:28:57Z", "message": "Fix test accessing the objectSinkPropagator()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5af54984386d721a3132c9a8883d34b066ad7235", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/5af54984386d721a3132c9a8883d34b066ad7235", "committedDate": "2020-10-15T07:28:57Z", "message": "Fix other test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f89ee9f91bcf5576fe2ae571d5abbcf6f7e15f0a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f89ee9f91bcf5576fe2ae571d5abbcf6f7e15f0a", "committedDate": "2020-10-15T07:28:57Z", "message": "New KieModule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b2e1d8d897b799828143f74af3895b933f9c59b", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/0b2e1d8d897b799828143f74af3895b933f9c59b", "committedDate": "2020-10-15T07:28:57Z", "message": "Moved test to drools-test-coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "048868986a2f40e7177ddff32a20aa58596f9eb6", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/048868986a2f40e7177ddff32a20aa58596f9eb6", "committedDate": "2020-10-15T07:28:57Z", "message": "Example of injection of multiple services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96bc8b8d05ecd8d3ea848d1685fa0b938f48e323", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/96bc8b8d05ecd8d3ea848d1685fa0b938f48e323", "committedDate": "2020-10-15T07:28:57Z", "message": "Renamed KieBaseUpdater"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea464232af9bcf42802b507f3bd28302278fca1", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/2ea464232af9bcf42802b507f3bd28302278fca1", "committedDate": "2020-10-15T07:28:57Z", "message": "Split KieBaseUpdater and Factory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac0056e29150ea3afb8477ac12e90981387cc16", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9ac0056e29150ea3afb8477ac12e90981387cc16", "committedDate": "2020-10-15T07:28:58Z", "message": "First draft of KieBaseUpdaterANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aa881ff7bff243d251a6a48f03ab18490ba2a06", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/7aa881ff7bff243d251a6a48f03ab18490ba2a06", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f944924c73f739985ced3a47b18557e575f796c4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f944924c73f739985ced3a47b18557e575f796c4", "committedDate": "2020-10-15T07:28:58Z", "message": "First draft of test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebf931f25cce30d3eeaa501ea64d4594252d9b9a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/ebf931f25cce30d3eeaa501ea64d4594252d9b9a", "committedDate": "2020-10-15T07:28:58Z", "message": "In memory update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70b5506716222313ffb1eeb15e3d0a0a0550aaee", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/70b5506716222313ffb1eeb15e3d0a0a0550aaee", "committedDate": "2020-10-15T07:28:58Z", "message": "Update only when using alpha network compiler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df93db3a1a2648f0a5fe4e03c98148ac807288e4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/df93db3a1a2648f0a5fe4e03c98148ac807288e4", "committedDate": "2020-10-15T07:28:58Z", "message": "Update to 7.45"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e15942237193597f1cd5fbf0ad4900c17bb4f420", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/e15942237193597f1cd5fbf0ad4900c17bb4f420", "committedDate": "2020-10-15T07:28:58Z", "message": "IncrementalCompilationTest enabled for ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b287311b58e90dba762f204b1a25a7af9e4ad7d5", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/b287311b58e90dba762f204b1a25a7af9e4ad7d5", "committedDate": "2020-10-15T07:28:58Z", "message": "Correct testing for IncrementalCompilationTest.testKJarUpgradeWithDeclaredType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f232706847085236a94e8a65c67a99a497b0e2cf", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f232706847085236a94e8a65c67a99a497b0e2cf", "committedDate": "2020-10-15T07:28:58Z", "message": "Reverted moving DynamicRuleLoadTest to drools-test-coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21669e02ea601376342de6ba7c7b7c2cc9386726", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/21669e02ea601376342de6ba7c7b7c2cc9386726", "committedDate": "2020-10-15T07:28:58Z", "message": "Reverted some more changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c55504bba00e95411ff134bb0b917bf592224ef4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c55504bba00e95411ff134bb0b917bf592224ef4", "committedDate": "2020-10-15T07:28:58Z", "message": "Removed previous compiling of ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c076ead5e99b94c1aac82099e315ea91a0656d31", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c076ead5e99b94c1aac82099e315ea91a0656d31", "committedDate": "2020-10-15T07:28:58Z", "message": "Removed unused dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbbe10f6cc9a1edd8a50df14cd43100ebde1053c", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/fbbe10f6cc9a1edd8a50df14cd43100ebde1053c", "committedDate": "2020-10-15T07:28:58Z", "message": "Use configuration option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2355e0616d01d9c77d278451d1911403408a8ec", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/e2355e0616d01d9c77d278451d1911403408a8ec", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix update of CanonicalKieBaseUpdater"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527b18e86d7682ffb5d3dfcd0d37ec013f045403", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/527b18e86d7682ffb5d3dfcd0d37ec013f045403", "committedDate": "2020-10-15T07:28:58Z", "message": "Avoid deadlock in .fireUntilHalt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "456dcc52527c27a434b44ea37a18640d077ea244", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/456dcc52527c27a434b44ea37a18640d077ea244", "committedDate": "2020-10-15T07:28:58Z", "message": "Create KnowledgeBuilder outside the updater"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f60773ce232e4678024ade445eaf84a8c95964fc", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f60773ce232e4678024ade445eaf84a8c95964fc", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix after rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00a09af34aee54b01b4e94c77bf02b42270e805c", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/00a09af34aee54b01b4e94c77bf02b42270e805c", "committedDate": "2020-10-15T07:28:58Z", "message": "Slimmer context for additional updaters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20007d6682012d79247f475cce56f516bce47812", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/20007d6682012d79247f475cce56f516bce47812", "committedDate": "2020-10-15T07:28:58Z", "message": "Moved ANC to RuleBaseConfiguration, default to disabled. InMemoryCompilation in KieContainerImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3657923c532ad1a876f4f9733c70e33a90f29c0", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/f3657923c532ad1a876f4f9733c70e33a90f29c0", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix default and test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5c705e39144cc7a14739f6b0dea521d5fac3d4b", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/d5c705e39144cc7a14739f6b0dea521d5fac3d4b", "committedDate": "2020-10-15T07:28:58Z", "message": "Revert back to KnowledgeBuilderConfigurationImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2566f9d3556f58d03ff60833432e93ae7dfb2d5", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c2566f9d3556f58d03ff60833432e93ae7dfb2d5", "committedDate": "2020-10-15T07:28:58Z", "message": "Revert \"Moved ANC to RuleBaseConfiguration, default to disabled. InMemoryCompilation in KieContainerImpl\"\n\nThis reverts commit a4685723"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47d24f226d2cbbfbc0bf12bee51dbf15c309b16", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/b47d24f226d2cbbfbc0bf12bee51dbf15c309b16", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix running of InMemory ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5946f8b502d33f22d05793c0219d4c741b190925", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/5946f8b502d33f22d05793c0219d4c741b190925", "committedDate": "2020-10-15T07:28:58Z", "message": "Fix running of InMemory ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "019feedb28d7f1b860d1c83442f68655e40a03d8", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/019feedb28d7f1b860d1c83442f68655e40a03d8", "committedDate": "2020-10-15T07:28:58Z", "message": "[DROOLS-4844] Alpha Network Compiler should be an option in Kie-API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1de0eb05432b6f21fd7da7606a839f48fefec0c", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/d1de0eb05432b6f21fd7da7606a839f48fefec0c", "committedDate": "2020-10-15T07:28:58Z", "message": "Added TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ea48549b71cebdd4f92f429f5c5aa57f3b31099", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/0ea48549b71cebdd4f92f429f5c5aa57f3b31099", "committedDate": "2020-10-15T07:28:58Z", "message": "Moved ANC test to module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4eb9bb1456fd70b0ba7da0a597927d9555deee", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/1a4eb9bb1456fd70b0ba7da0a597927d9555deee", "committedDate": "2020-10-15T07:28:58Z", "message": "Additional files generator for exec model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a34fbd4eeea927a7d6e5e4e2fb3ed29cde9df713", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/a34fbd4eeea927a7d6e5e4e2fb3ed29cde9df713", "committedDate": "2020-10-15T07:28:58Z", "message": "Experiment with new callbabck after writeProjectOutput with kiebase name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f0715a43c9e7a46ea3a5ff07a5520df8352be12", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/8f0715a43c9e7a46ea3a5ff07a5520df8352be12", "committedDate": "2020-10-15T07:28:58Z", "message": "Revert \"Experiment with new callbabck after writeProjectOutput with kiebase name\"\n\nThis reverts commit 60864351"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d056a6c909196199b366abde42050e6abdfdfd71", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/d056a6c909196199b366abde42050e6abdfdfd71", "committedDate": "2020-10-15T07:28:58Z", "message": "Remove this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d37a5e9d68203baa9becc42ab06c03d1c4384cb", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9d37a5e9d68203baa9becc42ab06c03d1c4384cb", "committedDate": "2020-10-15T07:28:58Z", "message": "ANC Loading from KJar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a23dbfa301394c146851406254eba876e15aab2", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/2a23dbfa301394c146851406254eba876e15aab2", "committedDate": "2020-10-15T07:28:58Z", "message": "Abstract configuration from updater, read anc file to instantiate ANC from the kie-maven-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25b13dc29fc4baaf1348b800c4a032e724c54185", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/25b13dc29fc4baaf1348b800c4a032e724c54185", "committedDate": "2020-10-15T07:28:58Z", "message": "Do not silently fail when class not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb34a735c9d0c29e57099f4dc4dbc93796884386", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/fb34a735c9d0c29e57099f4dc4dbc93796884386", "committedDate": "2020-10-15T07:28:58Z", "message": "Stable class name for ObjectTypeNodeCompiler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c3354b021f47617965516df9abe48a194aa53d4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/3c3354b021f47617965516df9abe48a194aa53d4", "committedDate": "2020-10-15T07:28:58Z", "message": "Correct loading of ANC from Kjar, with unfortunately regeneration of source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f532c7903306794758a61435fbd09ce0fab9b5f", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/4f532c7903306794758a61435fbd09ce0fab9b5f", "committedDate": "2020-10-15T07:28:59Z", "message": "Added tracing, changed package for generated compiled an"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5d1162968cd5a93141e23ce6c2b17bb011383c4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/b5d1162968cd5a93141e23ce6c2b17bb011383c4", "committedDate": "2020-10-15T07:28:59Z", "message": "Added some more tracing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43461d6d58f8526de9930065c8b96db4a651a5f6", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/43461d6d58f8526de9930065c8b96db4a651a5f6", "committedDate": "2020-10-15T07:28:59Z", "message": "Removed check for empty files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ad248529e9243e987047faa94bdfb76725c636a", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/2ad248529e9243e987047faa94bdfb76725c636a", "committedDate": "2020-10-15T07:28:59Z", "message": "Removed additional source file generators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a41baf1324eb72b772b7fee86da568814570103e", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/a41baf1324eb72b772b7fee86da568814570103e", "committedDate": "2020-10-15T07:28:59Z", "message": "Changed package in OSGi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c07b0b7f8ce3475ec0f0c216ef08164ca3148aa8", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c07b0b7f8ce3475ec0f0c216ef08164ca3148aa8", "committedDate": "2020-10-15T07:28:59Z", "message": "Specific exception for ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbd132094e77b21ee6f5acd48ef6616ffacce0c7", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/cbd132094e77b21ee6f5acd48ef6616ffacce0c7", "committedDate": "2020-10-15T07:28:59Z", "message": "Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b77cd42fc33606430b33f9a5ba7ab906de4d729", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/6b77cd42fc33606430b33f9a5ba7ab906de4d729", "committedDate": "2020-10-15T07:28:59Z", "message": "Added Jira to remember to get IndexableConstraint without generating the whole source code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fae65d9801bbf871af7b7b59327da17df4436179", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/fae65d9801bbf871af7b7b59327da17df4436179", "committedDate": "2020-10-15T07:28:59Z", "message": "Removed comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b5dc6f47c309c6d25ce72ece803bb81992de615", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/4b5dc6f47c309c6d25ce72ece803bb81992de615", "committedDate": "2020-10-15T07:28:59Z", "message": "Restored source name for kie-maven-plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5669dd38312482eca1b87c11b1e9b4e882d2a9", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/7c5669dd38312482eca1b87c11b1e9b4e882d2a9", "committedDate": "2020-10-15T07:28:59Z", "message": "Reverted useless code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bdbff5e51428c3b4a571bdb1a9cb2ab3ac45524", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/2bdbff5e51428c3b4a571bdb1a9cb2ab3ac45524", "committedDate": "2020-10-15T07:28:59Z", "message": "Do not use Math.abs of hashcode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "912ebfb2387525865e25c299d037e81c5f47513c", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/912ebfb2387525865e25c299d037e81c5f47513c", "committedDate": "2020-10-15T07:28:59Z", "message": "Sonarcloud"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d60dd7434816f717e4948213fbbba3ffc44950e", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9d60dd7434816f717e4948213fbbba3ffc44950e", "committedDate": "2020-10-15T07:28:59Z", "message": "Removed OSGi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f28b01e79d6fe9e989fb7047ac3c8f9beceda1", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/01f28b01e79d6fe9e989fb7047ac3c8f9beceda1", "committedDate": "2020-10-15T07:28:59Z", "message": "Renamed variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6dc9e7d5eebc3f6c0d1aae96858fa5cce31e005", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/a6dc9e7d5eebc3f6c0d1aae96858fa5cce31e005", "committedDate": "2020-10-15T07:28:59Z", "message": "Renamed variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7e1b263bcba4c2de3188a1c5f6711e41734759b", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/c7e1b263bcba4c2de3188a1c5f6711e41734759b", "committedDate": "2020-10-15T07:28:59Z", "message": "OSGi again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60db0a357060549024e3c36f1cf791250e4efaea", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/60db0a357060549024e3c36f1cf791250e4efaea", "committedDate": "2020-10-15T07:28:59Z", "message": "Removed OSGi again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21812a475f959885bd422e6bbcc7d463fdec4507", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/21812a475f959885bd422e6bbcc7d463fdec4507", "committedDate": "2020-10-15T07:28:59Z", "message": "Avoid enque the updaters and run them directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86432a855251e12de1ae29426d8f5eb84794ca01", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/86432a855251e12de1ae29426d8f5eb84794ca01", "committedDate": "2020-10-15T07:28:59Z", "message": "PR Review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17b1917a0a75d4a279160b8aa3f346ac259de555", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/17b1917a0a75d4a279160b8aa3f346ac259de555", "committedDate": "2020-10-15T07:28:59Z", "message": "License after PR review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fec98d8adfafefbdf4f0bf91b15f3bc37e5cd8d", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9fec98d8adfafefbdf4f0bf91b15f3bc37e5cd8d", "committedDate": "2020-10-15T07:55:50Z", "message": "Removed useless in-memory-compiler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e30d54b8fdc994abac85f49043faee61993e55a4", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/e30d54b8fdc994abac85f49043faee61993e55a4", "committedDate": "2020-10-14T13:01:43Z", "message": "Avoid enque the updaters and run them directly"}, "afterCommit": {"oid": "9fec98d8adfafefbdf4f0bf91b15f3bc37e5cd8d", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/9fec98d8adfafefbdf4f0bf91b15f3bc37e5cd8d", "committedDate": "2020-10-15T07:55:50Z", "message": "Removed useless in-memory-compiler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8138c46c6400ecfb08e06f964b473218ebcf8640", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/8138c46c6400ecfb08e06f964b473218ebcf8640", "committedDate": "2020-10-15T08:10:37Z", "message": "Added comment after release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda0f8849e2bd364bb930bf3f272d570cd30f05d", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/bda0f8849e2bd364bb930bf3f272d570cd30f05d", "committedDate": "2020-10-15T10:00:35Z", "message": "Replaced null check with list/singletonList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d017a66d3a6d960e5ffb37cdd58e928b8e3731fe", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/d017a66d3a6d960e5ffb37cdd58e928b8e3731fe", "committedDate": "2020-10-15T10:26:51Z", "message": "Licenses on ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ac23d41c15793b78c1179b8810c829f84283287", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/8ac23d41c15793b78c1179b8810c829f84283287", "committedDate": "2020-10-15T10:31:22Z", "message": "Licenses on ANC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6318d8121a32359548f3ce68987567cfc95d0e26", "author": {"user": {"login": "lucamolteni", "name": "Luca Molteni"}}, "url": "https://github.com/kiegroup/drools/commit/6318d8121a32359548f3ce68987567cfc95d0e26", "committedDate": "2020-10-15T10:33:33Z", "message": "Licenses on ANC"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Mzg4ODY1", "url": "https://github.com/kiegroup/drools/pull/3159#pullrequestreview-509388865", "createdAt": "2020-10-15T13:38:57Z", "commit": {"oid": "6318d8121a32359548f3ce68987567cfc95d0e26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1821, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}