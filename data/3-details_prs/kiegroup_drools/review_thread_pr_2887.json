{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MzMzMjE2", "number": 2887, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjowNTo1MVrOD7noSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NjowNlrOEK1CzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODQxODY1OnYy", "diffSide": "RIGHT", "path": "drools-compiler/src/main/java/org/drools/compiler/rule/builder/PatternBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjowNTo1MVrOGUDXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjowNTo1MVrOGUDXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3OTg3Mg==", "bodyText": "This looks like it's transforming one collection into another, so that you can operate on the subset. These types of things have a cost, it is very small. Why not have a lambda that can comprehend the collection and apply the operation within the existing collection?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r423679872", "createdAt": "2020-05-12T12:05:51Z", "author": {"login": "mdproctor"}, "path": "drools-compiler/src/main/java/org/drools/compiler/rule/builder/PatternBuilder.java", "diffHunk": "@@ -560,13 +562,10 @@ protected void processListenedPropertiesAnnotation(RuleBuildContext context, Pat\n             }\n         }\n \n-        for (Constraint constr : pattern.getConstraints()) {\n-            if (constr instanceof EvaluatorConstraint && ((EvaluatorConstraint) constr).isSelf()) {\n-                EvaluatorConstraint ec = ((EvaluatorConstraint) constr);\n-                if (ec.getEvaluator().getOperator() == IsAEvaluatorDefinition.ISA || ec.getEvaluator().getOperator() == IsAEvaluatorDefinition.NOT_ISA) {\n-                    listenedProperties.add(TraitableBean.TRAITSET_FIELD_NAME);\n-                }\n-            }\n+        // TODO LM review this\n+        KieTraitsCompiler traits = ((KnowledgeBuilderImpl) context.getKnowledgeBuilder()).getTraits();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37c8ced0bf1f5d11fe4817c0e08be3674d35d598"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTA1Mzk4OnYy", "diffSide": "RIGHT", "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo1NjoyM1rOGafd1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo1NjoyM1rOGafd1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMTcwMA==", "bodyText": "Can you please move classBuilder to a new line? :)", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r430431700", "createdAt": "2020-05-26T13:56:23Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "diffHunk": "@@ -39,46 +39,36 @@ public DeclaredClassBuilder(KnowledgeBuilderImpl kbuilder) {\n     public void generateBeanFromDefinition(AbstractClassTypeDeclarationDescr typeDescr,\n                                            TypeDeclaration type,\n                                            PackageRegistry pkgRegistry,\n-                                           ClassDefinition def) {\n+                                           ClassDefinition def, ClassBuilder classBuilder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTEwNDAwOnYy", "diffSide": "RIGHT", "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowNzoyM1rOGaf9xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo0NzoxOVrOGlJUtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTg3Nw==", "bodyText": "Is there any specific reason why now it is private instead of protected?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r430439877", "createdAt": "2020-05-26T14:07:23Z", "author": {"login": "danielezonca"}, "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "diffHunk": "@@ -39,46 +39,36 @@ public DeclaredClassBuilder(KnowledgeBuilderImpl kbuilder) {\n     public void generateBeanFromDefinition(AbstractClassTypeDeclarationDescr typeDescr,\n                                            TypeDeclaration type,\n                                            PackageRegistry pkgRegistry,\n-                                           ClassDefinition def) {\n+                                           ClassDefinition def, ClassBuilder classBuilder) {\n \n         if (type.isNovel()) {\n             String fullName = typeDescr.getType().getFullName();\n             JavaDialectRuntimeData dialect = (JavaDialectRuntimeData) pkgRegistry.getDialectRuntimeRegistry().getDialectData(\"java\");\n             if (ensureJavaTypeConsistency(typeDescr, def, pkgRegistry.getTypeResolver())) {\n-                switch (type.getKind()) {\n-                    case TRAIT:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getTraitBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared trait \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case ENUM:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getEnumClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared enum \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case CLASS:\n-                    default:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getBeanClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to create a class for declared type \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n+                String errorMessage = \"Unable to compile declared \" + type.getKind();\n+                buildClass(typeDescr, pkgRegistry, def, classBuilder, fullName, dialect, errorMessage);\n+            }\n+        }\n+    }\n+\n+    private void buildClass(AbstractClassTypeDeclarationDescr typeDescr, PackageRegistry pkgRegistry, ClassDefinition def, ClassBuilder classBuilder, String fullName, JavaDialectRuntimeData dialect, String errorMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMzI1Mw==", "bodyText": "It wasn't used by any of the subclasses", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r441603253", "createdAt": "2020-06-17T14:47:19Z", "author": {"login": "lucamolteni"}, "path": "drools-compiler/src/main/java/org/drools/compiler/builder/impl/DeclaredClassBuilder.java", "diffHunk": "@@ -39,46 +39,36 @@ public DeclaredClassBuilder(KnowledgeBuilderImpl kbuilder) {\n     public void generateBeanFromDefinition(AbstractClassTypeDeclarationDescr typeDescr,\n                                            TypeDeclaration type,\n                                            PackageRegistry pkgRegistry,\n-                                           ClassDefinition def) {\n+                                           ClassDefinition def, ClassBuilder classBuilder) {\n \n         if (type.isNovel()) {\n             String fullName = typeDescr.getType().getFullName();\n             JavaDialectRuntimeData dialect = (JavaDialectRuntimeData) pkgRegistry.getDialectRuntimeRegistry().getDialectData(\"java\");\n             if (ensureJavaTypeConsistency(typeDescr, def, pkgRegistry.getTypeResolver())) {\n-                switch (type.getKind()) {\n-                    case TRAIT:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getTraitBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared trait \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case ENUM:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getEnumClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to compile declared enum \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n-                    case CLASS:\n-                    default:\n-                        try {\n-                            buildClass(def, fullName, dialect, this.kbuilder.getBuilderConfiguration().getClassBuilderFactory().getBeanClassBuilder(), pkgRegistry);\n-                        } catch (Exception e) {\n-                            e.printStackTrace();\n-                            this.kbuilder.addBuilderResult(new TypeDeclarationError(typeDescr,\n-                                                                                    \"Unable to create a class for declared type \" + fullName +\n-                                                                                            \": \" + e.getMessage() + \";\"));\n-                        }\n-                        break;\n+                String errorMessage = \"Unable to compile declared \" + type.getKind();\n+                buildClass(typeDescr, pkgRegistry, def, classBuilder, fullName, dialect, errorMessage);\n+            }\n+        }\n+    }\n+\n+    private void buildClass(AbstractClassTypeDeclarationDescr typeDescr, PackageRegistry pkgRegistry, ClassDefinition def, ClassBuilder classBuilder, String fullName, JavaDialectRuntimeData dialect, String errorMessage) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTg3Nw=="}, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjA1NTYyOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/base/TraitDisabledHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTo0OTo1MlrOGbRUjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTo0OTo1MlrOGbRUjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI0ODUyNQ==", "bodyText": "What is it used for?\nCan you please clarify and/or add a javadoc?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431248525", "createdAt": "2020-05-27T15:49:52Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/base/TraitDisabledHelper.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.drools.core.base;\n+\n+import java.util.Collection;\n+\n+import org.drools.core.common.InternalFactHandle;\n+import org.drools.core.definitions.rule.impl.RuleImpl;\n+import org.drools.core.factmodel.traits.Thing;\n+import org.drools.core.factmodel.traits.TraitableBean;\n+import org.drools.core.reteoo.TerminalNode;\n+import org.drools.core.spi.Activation;\n+import org.drools.core.util.bitmask.BitMask;\n+import org.kie.api.internal.runtime.beliefs.Mode;\n+\n+public class TraitDisabledHelper implements TraitHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEwNTMxOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTo1OTo0M1rOGbR0BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo1OTozNVrOGqJA1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1NjU4MA==", "bodyText": "I know you probably tried to do it already but I will ask :)\nIs it possible to remove ~all trait mentions from this class and add it again via subclass?\nI'm asking even because this class is not really \"trait-free\" but more \"trait-mocked\": for example it is possible to invoke populateFactHandleFromExternalForm with a fact handle that contains a trait but then the behavior will be probably wrong.\nIf it is not possible to properly refactor this class, I would prefer at least check if traits are \"active\" or not and raise an exception if not.\nWdyt?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431256580", "createdAt": "2020-05-27T15:59:43Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java", "diffHunk": "@@ -17,6 +17,7 @@\n package org.drools.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0MTA0NA==", "bodyText": "Unfortunately Trait public API is everywhere so we had to \"stub\" it as you said.", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r446841044", "createdAt": "2020-06-29T07:59:35Z", "author": {"login": "lucamolteni"}, "path": "drools-core/src/main/java/org/drools/core/common/DefaultFactHandle.java", "diffHunk": "@@ -17,6 +17,7 @@\n package org.drools.core.common;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI1NjU4MA=="}, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEyNzMzOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/CoreWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzowNFrOGbSBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzowNFrOGbSBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDAxMA==", "bodyText": "No more license? :)", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260010", "createdAt": "2020-05-27T16:03:04Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/CoreWrapper.java", "diffHunk": "@@ -1,19 +1,3 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzMDM4OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzozN1rOGbSDmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzozN1rOGbSDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDU2OQ==", "bodyText": "What's wrong with license? :)", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260569", "createdAt": "2020-05-27T16:03:37Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFactory.java", "diffHunk": "@@ -1,125 +1,9 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzMTgzOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitField.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzo1NFrOGbSEow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowMzo1NFrOGbSEow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MDgzNQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431260835", "createdAt": "2020-05-27T16:03:54Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitField.java", "diffHunk": "@@ -1,424 +1,8 @@\n-/*\n- * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n-*/\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzNjA5OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFieldTMS.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDozNFrOGbSHSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDozNFrOGbSHSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTUxMw==", "bodyText": "Can you please add a javadoc?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261513", "createdAt": "2020-05-27T16:04:34Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitFieldTMS.java", "diffHunk": "@@ -22,6 +22,8 @@\n \n public interface TraitFieldTMS extends Externalizable {\n \n+    String TYPE_NAME = \"org/drools/traits/core/factmodel/traits/TraitFieldTMSImpl\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzNjc5OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitProxy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo0MVrOGbSHsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo0MVrOGbSHsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTYxNw==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261617", "createdAt": "2020-05-27T16:04:41Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitProxy.java", "diffHunk": "@@ -1,207 +1,10 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzNzg2OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo1MVrOGbSIVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo1MVrOGbSIVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTc4Mg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261782", "createdAt": "2020-05-27T16:04:51Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitRegistry.java", "diffHunk": "@@ -1,338 +1,10 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjEzODcxOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitTypeMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo1OFrOGbSI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNDo1OFrOGbSI2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MTkxMg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431261912", "createdAt": "2020-05-27T16:04:58Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitTypeMap.java", "diffHunk": "@@ -1,285 +1,19 @@\n-/*\n- * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * \n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n-*/\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE0MDY3OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitableBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNToxOFrOGbSKJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNToxOFrOGbSKJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MjI0Nw==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431262247", "createdAt": "2020-05-27T16:05:18Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/traits/TraitableBean.java", "diffHunk": "@@ -1,19 +1,3 @@\n-/*\n- * Copyright 2011 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n package org.drools.core.factmodel.traits;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE0NjEzOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/reteoo/KieComponentFactoryFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNjoxNFrOGbSNsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNjoxNFrOGbSNsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MzE1NA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431263154", "createdAt": "2020-05-27T16:06:14Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/reteoo/KieComponentFactoryFactory.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.drools.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE0NjkyOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/reteoo/ServiceRegistryUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNjoyNlrOGbSONg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNjoyNlrOGbSONg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MzI4Ng==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431263286", "createdAt": "2020-05-27T16:06:26Z", "author": {"login": "danielezonca"}, "path": "drools-core/src/main/java/org/drools/core/reteoo/ServiceRegistryUtils.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.drools.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE1MjA2OnYy", "diffSide": "RIGHT", "path": "drools-traits/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNzozOVrOGbSRfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowNzozOVrOGbSRfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDEyNg==", "bodyText": "Scope test?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431264126", "createdAt": "2020-05-27T16:07:39Z", "author": {"login": "danielezonca"}, "path": "drools-traits/pom.xml", "diffHunk": "@@ -0,0 +1,208 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.drools</groupId>\n+    <artifactId>drools</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>drools-traits</artifactId>\n+  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->\n+\n+  <name>Drools :: Traits</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.traits</java.module.name>\n+    <surefire.forkCount>2</surefire.forkCount>\n+\n+    <!-- These are properties used in the database profiles. Some of them must be initialized\n+     to be empty so that Maven applies their values via filtering to the resources. -->\n+    <maven.hibernate.dialect>org.hibernate.dialect.H2Dialect</maven.hibernate.dialect>\n+    <maven.datasource.classname>org.h2.jdbcx.JdbcDataSource</maven.datasource.classname>\n+    <maven.jdbc.driver.class>org.h2.Driver</maven.jdbc.driver.class>\n+    <maven.jdbc.db.name/>\n+    <maven.jdbc.db.port/>\n+    <maven.jdbc.db.server/>\n+    <maven.jdbc.driver.jar/>\n+    <maven.jdbc.username/>\n+    <maven.jdbc.password/>\n+    <maven.jdbc.url>jdbc:h2:mem:test</maven.jdbc.url>\n+    <maven.jdbc.schema>public</maven.jdbc.schema>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-compiler</artifactId>\n+    </dependency>\n+\n+ <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-persistence-jpa</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.thoughtworks.xstream</groupId>\n+      <artifactId>xstream</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mvel</groupId>\n+      <artifactId>mvel2</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-commons</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core-reflective</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-project-datamodel-commons</artifactId>\n+    </dependency>\n+\n+    <!-- Logging -->\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency><!-- For unit test logging: configure in src/test/resources/logback-test.xml -->\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-test-util</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE1NTAzOnYy", "diffSide": "RIGHT", "path": "drools-traits/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowODoxN1rOGbSTYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzo1OTo1MlrOGqJBbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDYxMA==", "bodyText": "Provided? Not sure maybe it is needed for java 11 or similar", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431264610", "createdAt": "2020-05-27T16:08:17Z", "author": {"login": "danielezonca"}, "path": "drools-traits/pom.xml", "diffHunk": "@@ -0,0 +1,208 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.drools</groupId>\n+    <artifactId>drools</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>drools-traits</artifactId>\n+  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->\n+\n+  <name>Drools :: Traits</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.traits</java.module.name>\n+    <surefire.forkCount>2</surefire.forkCount>\n+\n+    <!-- These are properties used in the database profiles. Some of them must be initialized\n+     to be empty so that Maven applies their values via filtering to the resources. -->\n+    <maven.hibernate.dialect>org.hibernate.dialect.H2Dialect</maven.hibernate.dialect>\n+    <maven.datasource.classname>org.h2.jdbcx.JdbcDataSource</maven.datasource.classname>\n+    <maven.jdbc.driver.class>org.h2.Driver</maven.jdbc.driver.class>\n+    <maven.jdbc.db.name/>\n+    <maven.jdbc.db.port/>\n+    <maven.jdbc.db.server/>\n+    <maven.jdbc.driver.jar/>\n+    <maven.jdbc.username/>\n+    <maven.jdbc.password/>\n+    <maven.jdbc.url>jdbc:h2:mem:test</maven.jdbc.url>\n+    <maven.jdbc.schema>public</maven.jdbc.schema>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-compiler</artifactId>\n+    </dependency>\n+\n+ <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-persistence-jpa</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.thoughtworks.xstream</groupId>\n+      <artifactId>xstream</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mvel</groupId>\n+      <artifactId>mvel2</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-commons</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core-reflective</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-project-datamodel-commons</artifactId>\n+    </dependency>\n+\n+    <!-- Logging -->\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency><!-- For unit test logging: configure in src/test/resources/logback-test.xml -->\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-test-util</artifactId>\n+    </dependency>\n+\n+\n+    <!-- persistence -->\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.narayana.jta</groupId>\n+      <artifactId>narayana-jta</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <!-- Hibernate -->\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-xjc</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.spec.javax.xml.bind</groupId>\n+      <artifactId>jboss-jaxb-api_2.3_spec</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0MTE5Nw==", "bodyText": "Removed", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r446841197", "createdAt": "2020-06-29T07:59:52Z", "author": {"login": "lucamolteni"}, "path": "drools-traits/pom.xml", "diffHunk": "@@ -0,0 +1,208 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.drools</groupId>\n+    <artifactId>drools</artifactId>\n+    <version>7.38.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>drools-traits</artifactId>\n+  <packaging>bundle</packaging><!-- bundle = jar + OSGi metadata -->\n+\n+  <name>Drools :: Traits</name>\n+\n+  <properties>\n+    <java.module.name>org.drools.core.traits</java.module.name>\n+    <surefire.forkCount>2</surefire.forkCount>\n+\n+    <!-- These are properties used in the database profiles. Some of them must be initialized\n+     to be empty so that Maven applies their values via filtering to the resources. -->\n+    <maven.hibernate.dialect>org.hibernate.dialect.H2Dialect</maven.hibernate.dialect>\n+    <maven.datasource.classname>org.h2.jdbcx.JdbcDataSource</maven.datasource.classname>\n+    <maven.jdbc.driver.class>org.h2.Driver</maven.jdbc.driver.class>\n+    <maven.jdbc.db.name/>\n+    <maven.jdbc.db.port/>\n+    <maven.jdbc.db.server/>\n+    <maven.jdbc.driver.jar/>\n+    <maven.jdbc.username/>\n+    <maven.jdbc.password/>\n+    <maven.jdbc.url>jdbc:h2:mem:test</maven.jdbc.url>\n+    <maven.jdbc.schema>public</maven.jdbc.schema>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-compiler</artifactId>\n+    </dependency>\n+\n+ <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-persistence-jpa</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.thoughtworks.xstream</groupId>\n+      <artifactId>xstream</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mvel</groupId>\n+      <artifactId>mvel2</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-commons</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-core-reflective</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.soup</groupId>\n+      <artifactId>kie-soup-project-datamodel-commons</artifactId>\n+    </dependency>\n+\n+    <!-- Logging -->\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency><!-- For unit test logging: configure in src/test/resources/logback-test.xml -->\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-test-util</artifactId>\n+    </dependency>\n+\n+\n+    <!-- persistence -->\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.narayana.jta</groupId>\n+      <artifactId>narayana-jta</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <!-- Hibernate -->\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-xjc</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.spec.javax.xml.bind</groupId>\n+      <artifactId>jboss-jaxb-api_2.3_spec</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDYxMA=="}, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE2MDg3OnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/base/evaluators/IsAEvaluatorDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowOTo0OVrOGbSXZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowOTo0OVrOGbSXZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTYzNg==", "bodyText": "Code formatting", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265636", "createdAt": "2020-05-27T16:09:49Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/base/evaluators/IsAEvaluatorDefinition.java", "diffHunk": "@@ -56,7 +59,7 @@\n \n     protected static final String   isAOp = \"isA\";\n \n-    public static Operator          ISA;\n+    public static Operator ISA;\n     public static Operator          NOT_ISA;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE2MTM3OnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitDefaultFactHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowOTo1OFrOGbSXsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjowOTo1OFrOGbSXsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTcxMw==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265713", "createdAt": "2020-05-27T16:09:58Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitDefaultFactHandle.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package org.drools.traits.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE2MTgxOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDowNFrOGbSX_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDowNFrOGbSX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NTc5MQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431265791", "createdAt": "2020-05-27T16:10:04Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPoint.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.drools.traits.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE2NDcyOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPointFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDo0NlrOGbSZ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDo0NlrOGbSZ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NjI5MQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431266291", "createdAt": "2020-05-27T16:10:46Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/common/TraitNamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.drools.traits.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE2NTk5OnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/factmodel/TraitClassBuilderFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDo1OVrOGbSatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxMDo1OVrOGbSatw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NjQ4Nw==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431266487", "createdAt": "2020-05-27T16:10:59Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/factmodel/TraitClassBuilderFactory.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.drools.traits.core.factmodel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4NTc3OnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitAlphaNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNTo0OVrOGbSncA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNTo0OVrOGbSncA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTc0NA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269744", "createdAt": "2020-05-27T16:15:49Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitAlphaNode.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.drools.traits.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4NjQxOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitFactHandleFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNTo1N1rOGbSn1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNTo1N1rOGbSn1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTg0NA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269844", "createdAt": "2020-05-27T16:15:57Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitFactHandleFactory.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.drools.traits.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4NzAyOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjowN1rOGbSoNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjowN1rOGbSoNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2OTk0Mg==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431269942", "createdAt": "2020-05-27T16:16:07Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactory.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.drools.traits.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4NzQxOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactoryFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjoxNVrOGbSoeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjoxNVrOGbSoeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MDAxMA==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431270010", "createdAt": "2020-05-27T16:16:15Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitKieComponentFactoryFactory.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package org.drools.traits.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjE4NzkxOnYy", "diffSide": "RIGHT", "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitPhreakNodeFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjoyM1rOGbSozw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNjoxNjoyM1rOGbSozw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MDA5NQ==", "bodyText": "License", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r431270095", "createdAt": "2020-05-27T16:16:23Z", "author": {"login": "danielezonca"}, "path": "drools-traits/src/main/java/org/drools/traits/core/reteoo/TraitPhreakNodeFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.drools.traits.core.reteoo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b0db2b58ab7d5e18cbc7b0140cfeda7d9632d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Nzg5Njk3OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/common/DefaultNamedEntryPointFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NDozOFrOGsF5iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NDozOFrOGsF5iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NzE3OQ==", "bodyText": "Missing Copyright header", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448887179", "createdAt": "2020-07-02T09:54:38Z", "author": {"login": "hellowdan"}, "path": "drools-core/src/main/java/org/drools/core/common/DefaultNamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.drools.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b62a45d3f7ee7d2393570116b18096a7dd59d6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzkwMDYyOnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/common/NamedEntryPointFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NToyOVrOGsF7rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NToyOVrOGsF7rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NzcyNQ==", "bodyText": "Missing Copyright header.", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448887725", "createdAt": "2020-07-02T09:55:29Z", "author": {"login": "hellowdan"}, "path": "drools-core/src/main/java/org/drools/core/common/NamedEntryPointFactory.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package org.drools.core.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b62a45d3f7ee7d2393570116b18096a7dd59d6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzkwMjg0OnYy", "diffSide": "RIGHT", "path": "drools-core/src/main/java/org/drools/core/factmodel/DefaultClassBuilderFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NjowNlrOGsF9Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo1NjowNlrOGsF9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4ODA5MQ==", "bodyText": "Update to 2020?", "url": "https://github.com/kiegroup/drools/pull/2887#discussion_r448888091", "createdAt": "2020-07-02T09:56:06Z", "author": {"login": "hellowdan"}, "path": "drools-core/src/main/java/org/drools/core/factmodel/DefaultClassBuilderFactory.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2011 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b62a45d3f7ee7d2393570116b18096a7dd59d6"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2513, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}