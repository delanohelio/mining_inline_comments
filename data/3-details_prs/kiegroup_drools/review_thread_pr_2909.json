{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzU1Njk1", "number": 2909, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1NTo1N1rOD_ZG2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1NTo1N1rOD_ZG2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzk4MjMzOnYy", "diffSide": "RIGHT", "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/util/LambdaIntrospectorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzo1NTo1N1rOGaB9OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMjozODo0NlrOGaM8nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0ODIxNg==", "bodyText": "I don't think it is a good idea to read the cache field via reflection in this way, even in a test. Please add a package private accessor method and use it instead.", "url": "https://github.com/kiegroup/drools/pull/2909#discussion_r429948216", "createdAt": "2020-05-25T13:55:57Z", "author": {"login": "mariofusco"}, "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/util/LambdaIntrospectorTest.java", "diffHunk": "@@ -45,21 +45,23 @@ public boolean test(org.drools.modelcompiler.domain.Person p) {\n \n     @Test\n     public void testMethodFingerprintsMapCacheSize() throws Exception {\n-        // Because methodFingerprintsMap is static, this property can be testable when you run this test method only\n+        // To test system property, you need to run this test method only.\n         // (mvn test -Dtest=LambdaIntrospectorTest#testMethodFingerprintsMapCacheSize)\n         // System.setProperty(LambdaIntrospector.LAMBDA_INTROSPECTOR_CACHE_SIZE, \"0\");\n \n         LambdaIntrospector lambdaIntrospector = new LambdaIntrospector();\n \n-        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMap\");\n+        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMapPerClassLoader\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEyODI4Nw==", "bodyText": "Sure! Added a package private accessor so got rid of reflection.", "url": "https://github.com/kiegroup/drools/pull/2909#discussion_r430128287", "createdAt": "2020-05-26T02:38:46Z", "author": {"login": "tkobayas"}, "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/util/LambdaIntrospectorTest.java", "diffHunk": "@@ -45,21 +45,23 @@ public boolean test(org.drools.modelcompiler.domain.Person p) {\n \n     @Test\n     public void testMethodFingerprintsMapCacheSize() throws Exception {\n-        // Because methodFingerprintsMap is static, this property can be testable when you run this test method only\n+        // To test system property, you need to run this test method only.\n         // (mvn test -Dtest=LambdaIntrospectorTest#testMethodFingerprintsMapCacheSize)\n         // System.setProperty(LambdaIntrospector.LAMBDA_INTROSPECTOR_CACHE_SIZE, \"0\");\n \n         LambdaIntrospector lambdaIntrospector = new LambdaIntrospector();\n \n-        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMap\");\n+        Field field = LambdaIntrospector.class.getDeclaredField(\"methodFingerprintsMapPerClassLoader\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk0ODIxNg=="}, "originalCommit": {"oid": "c14b61a30ac9f08f4982b967087404d7675fa117"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2531, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}