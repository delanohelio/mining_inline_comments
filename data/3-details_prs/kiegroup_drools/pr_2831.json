{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Nzk0NjMw", "number": 2831, "title": "KOGITO-1575 DMN assembler-free ikb-free DMNRuntime", "bodyText": "@hellowdan @lucamolteni\n/cc @etirelli", "createdAt": "2020-03-27T14:43:47Z", "url": "https://github.com/kiegroup/drools/pull/2831", "merged": true, "mergeCommit": {"oid": "74e47c0d76708d9a533f6412559198074b294457"}, "closed": true, "closedAt": "2020-03-30T11:55:34Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRZRg0gH2gAyMzk0Nzk0NjMwOjFhYmVkNjU1YjVkZDk2ZmNlYTljNmY0M2ZmNDI1NDYwMTIxMGFiMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSrUMxAFqTM4MzY5MDYzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1abed655b5dd96fcea9c6f43ff4254601210ab01", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/1abed655b5dd96fcea9c6f43ff4254601210ab01", "committedDate": "2020-03-26T10:09:33Z", "message": "KOGITO-1575 DMN assembler-free ikb-free DMNRuntime\n\nikb-free DMNRuntime refactor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36284c7d8912a893fd110017683c0040f289067d", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/36284c7d8912a893fd110017683c0040f289067d", "committedDate": "2020-03-26T15:15:51Z", "message": "refactor DMNResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daac401a44fbe366a6a37360b5cede47224cdf29", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/daac401a44fbe366a6a37360b5cede47224cdf29", "committedDate": "2020-03-27T09:22:37Z", "message": "Builder internal utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a100e0668f5e9eb071ff0bb8c5a567e79cb042e", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/2a100e0668f5e9eb071ff0bb8c5a567e79cb042e", "committedDate": "2020-03-27T10:42:45Z", "message": "with dmn profiles."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1510b9efe91c394a3585a1de358f936cf24958e2", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/1510b9efe91c394a3585a1de358f936cf24958e2", "committedDate": "2020-03-27T14:41:00Z", "message": "."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTU2MDk1", "url": "https://github.com/kiegroup/drools/pull/2831#pullrequestreview-382956095", "createdAt": "2020-03-27T15:21:08Z", "commit": {"oid": "1510b9efe91c394a3585a1de358f936cf24958e2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyMTowOVrOF819Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyMTowOVrOF819Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0MjkwMg==", "bodyText": "Can we replace this with stream API?", "url": "https://github.com/kiegroup/drools/pull/2831#discussion_r399342902", "createdAt": "2020-03-27T15:21:09Z", "author": {"login": "lucamolteni"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNRuntimeKBWrappingIKB.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.dmn.core.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map.Entry;\n+import java.util.Objects;\n+\n+import org.drools.compiler.kie.builder.impl.KieContainerImpl;\n+import org.drools.compiler.kproject.models.KieBaseModelImpl;\n+import org.drools.core.definitions.InternalKnowledgePackage;\n+import org.drools.core.definitions.ResourceTypePackageRegistry;\n+import org.drools.core.impl.InternalKnowledgeBase;\n+import org.drools.core.impl.KnowledgeBaseImpl;\n+import org.kie.api.io.ResourceType;\n+import org.kie.dmn.api.core.DMNModel;\n+import org.kie.dmn.api.core.DMNPackage;\n+import org.kie.dmn.api.core.event.DMNRuntimeEventListener;\n+import org.kie.dmn.core.assembler.DMNAssemblerService;\n+import org.kie.dmn.core.compiler.DMNProfile;\n+import org.kie.dmn.core.util.Msg;\n+import org.kie.dmn.core.util.MsgUtil;\n+import org.kie.dmn.feel.util.ClassLoaderUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DMNRuntimeKBWrappingIKB implements DMNRuntimeKB {\n+    private static final Logger logger = LoggerFactory.getLogger( DMNRuntimeKBWrappingIKB.class );\n+\n+    private final InternalKnowledgeBase        knowledgeBase;\n+\n+    public DMNRuntimeKBWrappingIKB(InternalKnowledgeBase knowledgeBase) {\n+        this.knowledgeBase = knowledgeBase;\n+    }\n+\n+    @Override\n+    public List<DMNRuntimeEventListener> getListeners() {\n+        List<DMNRuntimeEventListener> results = new ArrayList<>();\n+        if (knowledgeBase != null && knowledgeBase instanceof KnowledgeBaseImpl) {\n+            KnowledgeBaseImpl knowledgeBaseImpl = (KnowledgeBaseImpl) knowledgeBase;\n+            KieContainerImpl kieContainer = (KieContainerImpl) knowledgeBaseImpl.getKieContainer();\n+            if (kieContainer != null) {\n+                KieBaseModelImpl kieBaseModel = (KieBaseModelImpl) kieContainer.getKieProject().getKieBaseModel(knowledgeBase.getId());\n+                for (Entry<String, String> kv : kieBaseModel.getKModule().getConfigurationProperties().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1510b9efe91c394a3585a1de358f936cf24958e2"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1281249f8e256c28fd2d8abc661e56ab60e0f2a7", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/1281249f8e256c28fd2d8abc661e56ab60e0f2a7", "committedDate": "2020-03-27T16:55:21Z", "message": "."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjA5NTg1", "url": "https://github.com/kiegroup/drools/pull/2831#pullrequestreview-383609585", "createdAt": "2020-03-30T07:56:26Z", "commit": {"oid": "1281249f8e256c28fd2d8abc661e56ab60e0f2a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba3d9b76755deb579d43e59b6c9b56ea86e243b6", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/ba3d9b76755deb579d43e59b6c9b56ea86e243b6", "committedDate": "2020-03-30T09:41:48Z", "message": "Implement code review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjkwNjM1", "url": "https://github.com/kiegroup/drools/pull/2831#pullrequestreview-383690635", "createdAt": "2020-03-30T09:44:42Z", "commit": {"oid": "ba3d9b76755deb579d43e59b6c9b56ea86e243b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1633, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}