{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTE3MzQz", "number": 2898, "title": "DROOLS-5330 DMN coercion of decision service parameter interaction with typecheck", "bodyText": "", "createdAt": "2020-05-14T10:58:16Z", "url": "https://github.com/kiegroup/drools/pull/2898", "merged": true, "mergeCommit": {"oid": "179086e7de905376b0fb5abc51cd587c088b41fd"}, "closed": true, "closedAt": "2020-05-15T07:01:10Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchK3uZAH2gAyNDE3OTE3MzQzOmRkOGE5NGQ3NmM2ZGFiNDc5NWQxOTBiNTQ4NTNjM2NkOWViMTA0OWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchOARWgFqTQxMTgzODAxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd8a94d76c6dab4795d190b54853c3cd9eb1049c", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/dd8a94d76c6dab4795d190b54853c3cd9eb1049c", "committedDate": "2020-05-14T10:25:30Z", "message": "reproducer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/drools/commit/322342a98f5e886e46b8e02ca4863f8ded2cd43a", "committedDate": "2020-05-14T10:57:01Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODM4MDEx", "url": "https://github.com/kiegroup/drools/pull/2898#pullrequestreview-411838011", "createdAt": "2020-05-14T14:04:21Z", "commit": {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNDoyMVrOGVd3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDowNDoyMVrOGVd3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MjY0Mw==", "bodyText": "A small suggestion but I'm not sure if it is applicable: maybe it could have an overloading approach to coerceUsingType method for the scenario which doesn't demand such a parameter. If the (!typeCheck) condition inside coerceUsingType can't be changed to another place, then this suggestion makes no sense.", "url": "https://github.com/kiegroup/drools/pull/2898#discussion_r425162643", "createdAt": "2020-05-14T14:04:21Z", "author": {"login": "hellowdan"}, "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/ast/DMNFunctionWithReturnType.java", "diffHunk": "@@ -59,6 +59,7 @@ public Object invokeReflectively(EvaluationContext ctx, Object[] params) {\n         Object result = wrapped.invokeReflectively(ctx, params);\n         result = DMNRuntimeImpl.coerceUsingType(result,\n                                                 returnType,\n+                                                true, // this FN is created when typeCheck==true, hence here always true.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1531, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}