{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNzM0MzU5", "number": 2726, "title": "RHDM-1189: 'Unable to expand' exception with from condition in Guided Rule Editor with DSL option checked", "bodyText": "See https://issues.redhat.com/browse/RHDM-1189", "createdAt": "2020-01-16T16:27:05Z", "url": "https://github.com/kiegroup/drools/pull/2726", "merged": true, "mergeCommit": {"oid": "cdcee1a6486096b506baa4eddf99f894c5ff4c1e"}, "closed": true, "closedAt": "2020-01-22T10:08:45Z", "author": {"login": "manstis"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb690jigFqTM0NDA5Nzg1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8y4d9gFqTM0NjQ3MDAyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MDk3ODUw", "url": "https://github.com/kiegroup/drools/pull/2726#pullrequestreview-344097850", "createdAt": "2020-01-16T17:44:09Z", "commit": {"oid": "7d4985d7b847769174283b542e53d1cbb48fdbc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Mzc4Mzk0", "url": "https://github.com/kiegroup/drools/pull/2726#pullrequestreview-344378394", "createdAt": "2020-01-17T06:06:10Z", "commit": {"oid": "7d4985d7b847769174283b542e53d1cbb48fdbc0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjowNjoxMFrOFevmhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjoxNDowMFrOFevsEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MTUwOA==", "bodyText": "Please do not introduce new public api method as there is single occurence of it, in the same class.", "url": "https://github.com/kiegroup/drools/pull/2726#discussion_r367781508", "createdAt": "2020-01-17T06:06:10Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -634,22 +634,34 @@ public void visitFactPattern(final FactPattern pattern) {\n         }\n \n         public void visitFreeFormLine(final FreeFormLine ffl) {\n+            visitFreeFormLine(ffl,\n+                              generatorContextFactory.getMaximumPatternDepth() > 1);\n+        }\n+\n+        public void visitFreeFormLine(final FreeFormLine ffl,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4985d7b847769174283b542e53d1cbb48fdbc0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MjkzMQ==", "bodyText": "Does this return true means we are saving rdslr file? I though it means the rules combine drools and dsl sentences, however I was wrong probably.\nCan we please add test where a from expression and DSL sentence is present? Or do we have such test please?", "url": "https://github.com/kiegroup/drools/pull/2726#discussion_r367782931", "createdAt": "2020-01-17T06:14:00Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceTest.java", "diffHunk": "@@ -4763,4 +4763,160 @@ public void testRHSDateInsertActionWithoutSystemProperty() {\n             }\n         }\n     }\n+\n+    @Test\n+    public void testFromCompositeFactPatternWithDSLAlthoughModelHasNoDSLSentences() {\n+        final RuleModel model = new RuleModel() {\n+            @Override\n+            public boolean hasDSLSentences() {\n+                return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d4985d7b847769174283b542e53d1cbb48fdbc0"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzMyMTQz", "url": "https://github.com/kiegroup/drools/pull/2726#pullrequestreview-345332143", "createdAt": "2020-01-20T14:09:46Z", "commit": {"oid": "ce572ed53028417d7117b21ca3082689ff569ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDowOTo0N1rOFfffiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDowOTo0N1rOFfffiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2NjE1Mw==", "bodyText": "When I grep  RuleModelDRLPersistenceImpl class for occurrences of .append(\">\"); code snippet, I am now getting two kinds of occurrences:\n\n\">\" is add/not added according variables isSubPattern and isDSLEnhanced\n\">\" is add/not added according variable isDSLEnhanced\n\nShouldn't be \">\" added/not added always according to both variables?", "url": "https://github.com/kiegroup/drools/pull/2726#discussion_r368566153", "createdAt": "2020-01-20T14:09:47Z", "author": {"login": "jomarko"}, "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -630,33 +639,54 @@ public void visitFactPattern(final FactPattern pattern) {\n             }\n \n             postGeneratePattern(gctx);\n-            buf.append(\"\\n\");\n+            if (!isSubPattern) {\n+                buf.append(\"\\n\");\n+            }\n         }\n \n         public void visitFreeFormLine(final FreeFormLine ffl) {\n+            visitFreeFormLine(ffl,\n+                              rootContext);\n+        }\n+\n+        protected void visitFreeFormLine(final FreeFormLine ffl,\n+                                         final LHSGeneratorContext parentContext) {\n             if (ffl.getText() == null) {\n                 return;\n             }\n+\n+            final LHSGeneratorContext gctx = generatorContextFactory.newPeerGeneratorContext(parentContext, ffl);\n+            final boolean isSubPattern = gctx.getDepth() > 0;\n+\n             String[] lines = ffl.getText().split(\"\\\\n|\\\\r\\\\n\");\n             for (String line : lines) {\n                 this.buf.append(indentation);\n-                if (isDSLEnhanced) {\n+                if (!isSubPattern && isDSLEnhanced) {\n                     buf.append(\">\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce572ed53028417d7117b21ca3082689ff569ede"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afea3447bf143c42237479e9f5b92e2d43d9821d", "author": {"user": null}, "url": "https://github.com/kiegroup/drools/commit/afea3447bf143c42237479e9f5b92e2d43d9821d", "committedDate": "2020-01-20T15:05:36Z", "message": "RHDM-1189: 'Unable to expand' exception with from condition in Guided Rule Editor with DSL option checked"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7ebcf1877ea8a37e27779a009d7b1a0625945d", "author": {"user": null}, "url": "https://github.com/kiegroup/drools/commit/9f7ebcf1877ea8a37e27779a009d7b1a0625945d", "committedDate": "2020-01-20T15:05:36Z", "message": "Updates following peer review."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce572ed53028417d7117b21ca3082689ff569ede", "author": {"user": null}, "url": "https://github.com/kiegroup/drools/commit/ce572ed53028417d7117b21ca3082689ff569ede", "committedDate": "2020-01-17T13:14:27Z", "message": "Updates following peer review."}, "afterCommit": {"oid": "9f7ebcf1877ea8a37e27779a009d7b1a0625945d", "author": {"user": null}, "url": "https://github.com/kiegroup/drools/commit/9f7ebcf1877ea8a37e27779a009d7b1a0625945d", "committedDate": "2020-01-20T15:05:36Z", "message": "Updates following peer review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b44536404ffb5318ce5994053ba55d8f68ce8a", "author": {"user": null}, "url": "https://github.com/kiegroup/drools/commit/93b44536404ffb5318ce5994053ba55d8f68ce8a", "committedDate": "2020-01-20T15:26:01Z", "message": "Ensure use of isSubPattern is used consistently in LHSPatternVisitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NDcwMDI4", "url": "https://github.com/kiegroup/drools/pull/2726#pullrequestreview-346470028", "createdAt": "2020-01-22T10:07:19Z", "commit": {"oid": "93b44536404ffb5318ce5994053ba55d8f68ce8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1658, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}