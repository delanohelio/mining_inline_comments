{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMDc3NjM1", "number": 3050, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo0MjoyMVrOEaECIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo0MjoyMVrOEaECIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzY0NTE0OnYy", "diffSide": "RIGHT", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNRuntimeTypesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo0MjoyMVrOHDQK9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTowNDozNVrOHDVRQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3MjcyNA==", "bodyText": "Is this if condition necessary? Is this test invoked multiple times (i.e. parameterized)? If not it will always perform one fixed branch.\nWhat am I missing?", "url": "https://github.com/kiegroup/drools/pull/3050#discussion_r473172724", "createdAt": "2020-08-19T16:42:21Z", "author": {"login": "danielezonca"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNRuntimeTypesTest.java", "diffHunk": "@@ -69,21 +72,40 @@ public DMNRuntimeTypesTest(VariantTestConf testConfig) {\n     }\n \n     @Test\n-    public void testOneOfEachType() {\n+    public void testOneOfEachType() throws Exception {\n         final DMNRuntime runtime = createRuntime(\"OneOfEachType.dmn\", this.getClass());\n         final DMNModel dmnModel = runtime.getModel(\"http://www.trisotech.com/definitions/_4f5608e9-4d74-4c22-a47e-ab657257fc9c\", \"OneOfEachType\");\n         assertThat(dmnModel, notNullValue());\n         assertThat(DMNRuntimeUtil.formatMessages(dmnModel.getMessages()), dmnModel.hasErrors(), is(false));\n \n-        final DMNContext context = DMNFactory.newContext();\n-        context.set(\"InputString\", \"John Doe\");\n-        context.set(\"InputNumber\", BigDecimal.ONE);\n-        context.set(\"InputBoolean\", true);\n-        context.set(\"InputDTDuration\", Duration.parse(\"P1D\"));\n-        context.set(\"InputYMDuration\", Period.parse(\"P1M\"));\n-        context.set(\"InputDateAndTime\", LocalDateTime.of(2020, 4, 2, 9, 0));\n-        context.set(\"InputDate\", LocalDate.of(2020, 4, 2));\n-        context.set(\"InputTime\", LocalTime.of(9, 0));\n+        DMNContext context = DMNFactory.newContext();\n+        if (!isTypeSafe()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8023f89113a66314da4c0762bb94fca14b66118f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1NjI1OA==", "bodyText": "You cannot see it from GitHub I'm afraid, but this test is indeed parametrized, so not all variants are IsTypeSafe. So yes, the IF statement is indeed necessary.", "url": "https://github.com/kiegroup/drools/pull/3050#discussion_r473256258", "createdAt": "2020-08-19T19:04:35Z", "author": {"login": "tarilabs"}, "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNRuntimeTypesTest.java", "diffHunk": "@@ -69,21 +72,40 @@ public DMNRuntimeTypesTest(VariantTestConf testConfig) {\n     }\n \n     @Test\n-    public void testOneOfEachType() {\n+    public void testOneOfEachType() throws Exception {\n         final DMNRuntime runtime = createRuntime(\"OneOfEachType.dmn\", this.getClass());\n         final DMNModel dmnModel = runtime.getModel(\"http://www.trisotech.com/definitions/_4f5608e9-4d74-4c22-a47e-ab657257fc9c\", \"OneOfEachType\");\n         assertThat(dmnModel, notNullValue());\n         assertThat(DMNRuntimeUtil.formatMessages(dmnModel.getMessages()), dmnModel.hasErrors(), is(false));\n \n-        final DMNContext context = DMNFactory.newContext();\n-        context.set(\"InputString\", \"John Doe\");\n-        context.set(\"InputNumber\", BigDecimal.ONE);\n-        context.set(\"InputBoolean\", true);\n-        context.set(\"InputDTDuration\", Duration.parse(\"P1D\"));\n-        context.set(\"InputYMDuration\", Period.parse(\"P1M\"));\n-        context.set(\"InputDateAndTime\", LocalDateTime.of(2020, 4, 2, 9, 0));\n-        context.set(\"InputDate\", LocalDate.of(2020, 4, 2));\n-        context.set(\"InputTime\", LocalTime.of(9, 0));\n+        DMNContext context = DMNFactory.newContext();\n+        if (!isTypeSafe()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3MjcyNA=="}, "originalCommit": {"oid": "8023f89113a66314da4c0762bb94fca14b66118f"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2437, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}