{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MzI3NDAx", "number": 4076, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo1MDowM1rOEDE_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDowNjo1NlrOEDFX4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjYzMDM1OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/RestrictionInformationManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo1MDowM1rOGf7Tsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNToyNzo1MlrOGh6aHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMDczOQ==", "bodyText": "can use nodeDao.getCreatedBy()", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076#discussion_r436130739", "createdAt": "2020-06-05T19:50:03Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/RestrictionInformationManagerImpl.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package org.sagebionetworks.repo.manager;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.sagebionetworks.repo.model.AccessApprovalDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementStats;\n+import org.sagebionetworks.repo.model.EntityType;\n+import org.sagebionetworks.repo.model.Node;\n+import org.sagebionetworks.repo.model.NodeDAO;\n+import org.sagebionetworks.repo.model.RestrictableObjectType;\n+import org.sagebionetworks.repo.model.RestrictionInformationRequest;\n+import org.sagebionetworks.repo.model.RestrictionInformationResponse;\n+import org.sagebionetworks.repo.model.RestrictionLevel;\n+import org.sagebionetworks.repo.model.UserInfo;\n+import org.sagebionetworks.repo.model.jdo.KeyFactory;\n+import org.sagebionetworks.util.ValidateArgument;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class RestrictionInformationManagerImpl implements RestrictionInformationManager {\n+\t@Autowired\n+\tprivate AccessRequirementDAO accessRequirementDAO;\n+\n+\t@Autowired\n+\tprivate AccessApprovalDAO accessApprovalDAO;\n+\t\n+\t@Autowired\n+\tprivate NodeDAO nodeDao;\n+\t\n+\n+\t@Override\n+\tpublic RestrictionInformationResponse getRestrictionInformation(UserInfo userInfo, RestrictionInformationRequest request) {\n+\t\tValidateArgument.required(userInfo, \"userInfo\");\n+\t\tValidateArgument.required(request, \"request\");\n+\t\tValidateArgument.required(request.getObjectId(), \"RestrictionInformationRequest.objectId\");\n+\t\tValidateArgument.required(request.getRestrictableObjectType(), \"RestrictionInformationRequest.restrictableObjectType\");\n+\t\tRestrictionInformationResponse info = new RestrictionInformationResponse();\n+\n+\t\tboolean userIsFileCreator=false;\n+\t\tif (RestrictableObjectType.ENTITY == request.getRestrictableObjectType()) {\n+\t\t\t// if the user is the owner of the entity (and the entity is a File), then she automatically \n+\t\t\t// has access to the object and therefore has no unmet access requirements\n+\t\t\tLong principalId = userInfo.getId();\n+\t\t\tNode node = nodeDao.getNode(request.getObjectId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6c766661a7745fdb8d5e1a70c2e0741f42a70b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzE1MA==", "bodyText": "Actually we can't!  We have to get both the creator and the entity type otherwise we will report that the owner of a Folder has no access restrictions, while they may be unable to access restricted  files in the folder (created by others).", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076#discussion_r438213150", "createdAt": "2020-06-10T15:27:52Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/RestrictionInformationManagerImpl.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package org.sagebionetworks.repo.manager;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.sagebionetworks.repo.model.AccessApprovalDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementDAO;\n+import org.sagebionetworks.repo.model.AccessRequirementStats;\n+import org.sagebionetworks.repo.model.EntityType;\n+import org.sagebionetworks.repo.model.Node;\n+import org.sagebionetworks.repo.model.NodeDAO;\n+import org.sagebionetworks.repo.model.RestrictableObjectType;\n+import org.sagebionetworks.repo.model.RestrictionInformationRequest;\n+import org.sagebionetworks.repo.model.RestrictionInformationResponse;\n+import org.sagebionetworks.repo.model.RestrictionLevel;\n+import org.sagebionetworks.repo.model.UserInfo;\n+import org.sagebionetworks.repo.model.jdo.KeyFactory;\n+import org.sagebionetworks.util.ValidateArgument;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+public class RestrictionInformationManagerImpl implements RestrictionInformationManager {\n+\t@Autowired\n+\tprivate AccessRequirementDAO accessRequirementDAO;\n+\n+\t@Autowired\n+\tprivate AccessApprovalDAO accessApprovalDAO;\n+\t\n+\t@Autowired\n+\tprivate NodeDAO nodeDao;\n+\t\n+\n+\t@Override\n+\tpublic RestrictionInformationResponse getRestrictionInformation(UserInfo userInfo, RestrictionInformationRequest request) {\n+\t\tValidateArgument.required(userInfo, \"userInfo\");\n+\t\tValidateArgument.required(request, \"request\");\n+\t\tValidateArgument.required(request.getObjectId(), \"RestrictionInformationRequest.objectId\");\n+\t\tValidateArgument.required(request.getRestrictableObjectType(), \"RestrictionInformationRequest.restrictableObjectType\");\n+\t\tRestrictionInformationResponse info = new RestrictionInformationResponse();\n+\n+\t\tboolean userIsFileCreator=false;\n+\t\tif (RestrictableObjectType.ENTITY == request.getRestrictableObjectType()) {\n+\t\t\t// if the user is the owner of the entity (and the entity is a File), then she automatically \n+\t\t\t// has access to the object and therefore has no unmet access requirements\n+\t\t\tLong principalId = userInfo.getId();\n+\t\t\tNode node = nodeDao.getNode(request.getObjectId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMDczOQ=="}, "originalCommit": {"oid": "3f6c766661a7745fdb8d5e1a70c2e0741f42a70b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjY5MjE3OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/resources/private/managers-spb.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDowNjo1NlrOGf75TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDowNjo1NlrOGf75TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0MDM2NQ==", "bodyText": "consider an annotation @service and no xml bean.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4076#discussion_r436140365", "createdAt": "2020-06-05T20:06:56Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/resources/private/managers-spb.xml", "diffHunk": "@@ -281,6 +281,8 @@\n \r\n \t<bean id=\"accessRequirementManager\" class=\"org.sagebionetworks.repo.manager.AccessRequirementManagerImpl\" />\r\n \r\n+\t<bean id=\"restrictionInformationManager\" class=\"org.sagebionetworks.repo.manager.RestrictionInformationManagerImpl\" />\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6c766661a7745fdb8d5e1a70c2e0741f42a70b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3063, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}