{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTc5NDA1", "number": 3945, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjowNzoxMlrODgDwOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjowNzoxMlrODgDwOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQyNTIyOnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjowNzoxMlrOFqHqSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjowNzoxMlrOFqHqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMDAyNw==", "bodyText": "util to get table names", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3945#discussion_r379710027", "createdAt": "2020-02-15T02:07:12Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "diffHunk": "@@ -3365,4 +3338,91 @@ public void testCreateAndPopulateListColumnIndexTables__DefaultValue() throws Pa\n \t\t//mysql adds spaces between the commas on returned results\r\n \t\tassertEquals(\"[1, 2, 3]\", results.getRows().get(0).getValues().get(1));\r\n \t}\r\n+\r\n+\r\n+\t@Test\r\n+\tpublic void testGetMultivalueColumnIndexTableColumnIds(){\r\n+\t\tColumnModel strListColumn = new ColumnModel();\r\n+\t\tstrListColumn.setId(\"12\");\r\n+\t\tstrListColumn.setName(\"foo\");\r\n+\t\tstrListColumn.setMaximumSize(14L);\r\n+\t\tstrListColumn.setColumnType(ColumnType.STRING_LIST);\r\n+\r\n+\t\tColumnModel intColumn = new ColumnModel();\r\n+\t\tintColumn.setId(\"14\");\r\n+\t\tintColumn.setName(\"foo\");\r\n+\t\tintColumn.setColumnType(ColumnType.INTEGER);\r\n+\r\n+\t\tColumnModel intListColumn = new ColumnModel();\r\n+\t\tintListColumn.setId(\"16\");\r\n+\t\tintListColumn.setName(\"intList\");\r\n+\t\tintListColumn.setColumnType(ColumnType.INTEGER_LIST);\r\n+\t\tintListColumn.setDefaultValue(\"[1,2,3]\");\r\n+\r\n+\t\tList<ColumnModel> schema = Arrays.asList(strListColumn, intColumn, intListColumn);\r\n+\t\tcreateOrUpdateTable(schema, tableId, isView);\r\n+\r\n+\t\t//method under test\r\n+\t\tSet<Long> columnIds = tableIndexDAO.getMultivalueColumnIndexTableColumnIds(tableId);\r\n+\t\tassertEquals(Sets.newHashSet(12L,16L), columnIds);\r\n+\t}\r\n+\r\n+\t@Test\r\n+\tpublic void testGetMultivalueColumnIndexTableColumnIds__emptyList(){\r\n+\t\tColumnModel intColumn = new ColumnModel();\r\n+\t\tintColumn.setId(\"14\");\r\n+\t\tintColumn.setName(\"foo\");\r\n+\t\tintColumn.setColumnType(ColumnType.INTEGER);\r\n+\r\n+\t\tList<ColumnModel> schema = Arrays.asList(intColumn);\r\n+\t\tcreateOrUpdateTable(schema, tableId, isView);\r\n+\r\n+\t\t//method under test\r\n+\t\tSet<Long> columnIds = tableIndexDAO.getMultivalueColumnIndexTableColumnIds(tableId);\r\n+\t\tassertEquals(Collections.emptySet(), columnIds);\r\n+\t}\r\n+\r\n+\r\n+\r\n+\t@Test\r\n+\tpublic void testCreateUpdateDeleteMultivalueColumnIndexTable(){\r\n+\t\tColumnModel column = new ColumnModel();\r\n+\t\tcolumn.setColumnType(ColumnType.STRING_LIST);\r\n+\t\tcolumn.setId(\"1337\");\r\n+\t\tcolumn.setMaximumSize(50L);\r\n+\t\tcolumn.setName(\"StringList\");\r\n+\t\t// Create the table\r\n+\t\ttableIndexDAO.createTableIfDoesNotExist(tableId, isView);\r\n+\t\tboolean alterTemp = false;\r\n+\t\t//add column\r\n+\t\ttableIndexDAO.createMultivalueColumnIndexTable(tableId, column);\r\n+\r\n+\r\n+\t\t//check index table was created\r\n+\t\tassertNotNull(tableIndexDAO.getConnection().queryForObject(\"show tables like '\" + SQLUtils.getTableNameForMultiValueColumnIndex(tableId, column.getId()) + \"'\", String.class));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998d585b4d9269169a52510db124649f70a38c58"}, "originalPosition": 131}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3125, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}