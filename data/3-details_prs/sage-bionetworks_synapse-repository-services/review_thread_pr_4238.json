{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2Mjc5MzU5", "number": 4238, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0NzowNlrOFDvXxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0OToxOVrOFDvaiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDY2MTgzOnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOAccessRequirementDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0NzowNlrOIDiqKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0NzowNlrOIDiqKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NDQ5MA==", "bodyText": "We do not usually put the newline (\\n) in exception messages.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4238#discussion_r540584490", "createdAt": "2020-12-10T23:47:06Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOAccessRequirementDAOImpl.java", "diffHunk": "@@ -179,7 +180,13 @@ public AccessRequirement mapRow(ResultSet rs, int rowNum)\n \tpublic void delete(String id) {\n \t\tMapSqlParameterSource param = new MapSqlParameterSource();\n \t\tparam.addValue(COL_ACCESS_REQUIREMENT_ID.toLowerCase(), id);\n-\t\tbasicDao.deleteObjectByPrimaryKey(DBOAccessRequirement.class, param);\n+\t\ttry {\n+\t\t\tbasicDao.deleteObjectByPrimaryKey(DBOAccessRequirement.class, param);\n+\t\t} catch (DataIntegrityViolationException e) {\n+\t\t\tthrow new IllegalArgumentException(\"The access requirement with id \" + id +\n+\t\t\t\t\t\" cannot be deleted as it is referenced by another object \\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f6d49de8cb43bdf275821b5fa65c8f59c21f90"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDY2ODkxOnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/DBOAccessRequirementDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0OToxOVrOIDit6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0OToxOVrOIDit6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NTQ0OQ==", "bodyText": "This seems a wrong message for a not found object?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4238#discussion_r540585449", "createdAt": "2020-12-10T23:49:19Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/DBOAccessRequirementDAOImplTest.java", "diffHunk": "@@ -415,4 +431,40 @@ public void testGetAccessRequirementDiffWithSourceMoreRestricted() {\n \t\tassertEquals(Arrays.asList(accessRequirement.getId().toString()),\n \t\t\t\taccessRequirementDAO.getAccessRequirementDiff(sourceSubjects, destSubjects , RestrictableObjectType.ENTITY));\n \t}\n+\n+\t@Test\n+\tpublic void testDeleteAccessRequirement() {\n+\t\taccessRequirement = newEntityAccessRequirement(individualGroup, node, \"foo\");\n+\t\taccessRequirement = accessRequirementDAO.create(accessRequirement);\n+\t\tString accessRequirementId = String.valueOf(accessRequirement.getId());\n+\t\tString expectedMessage = \"AccessRequirement ID: \" + accessRequirementId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f6d49de8cb43bdf275821b5fa65c8f59c21f90"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2893, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}