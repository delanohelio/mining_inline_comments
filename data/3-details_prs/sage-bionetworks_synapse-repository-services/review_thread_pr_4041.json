{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDE4NjI1", "number": 4041, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDo1Mzo1MVrOD736rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToyMDoxNlrOD74LQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTA4NzE5OnYy", "diffSide": "RIGHT", "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/table/LikeQueryFilter.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDo1Mzo1MVrOGUd32w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDo1Mzo1MVrOGUd32w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDExNDEzOQ==", "bodyText": "Consider naming this as ColumnValueFilter and use an Enum with the supported Operators so we could extend it in the future.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4041#discussion_r424114139", "createdAt": "2020-05-13T00:53:51Z", "author": {"login": "marcomarasca"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/table/LikeQueryFilter.json", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+\t\"implements\": [{\"$ref\":\"org.sagebionetworks.repo.model.table.QueryFilter\"}],\n+\t\"description\": \"A LIKE filter against a column. Values within the values list have an OR relationship\",\n+\t\"properties\": {\n+\t\t\"columnName\":{\n+\t\t\t\"type\": \"string\",\n+\t\t\t\"description\": \"name of the column to filter\"\n+\t\t},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c2a6e5768a7f222722271b2e5beeb7826d691f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTExNjE5OnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/SQLUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToxMTo1MVrOGUeJcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToxMTo1MVrOGUeJcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDExODY0MQ==", "bodyText": "Consider move this to the SQLTranslatorUtils and rename it to translateQueryFilters", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4041#discussion_r424118641", "createdAt": "2020-05-13T01:11:51Z", "author": {"login": "marcomarasca"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/SQLUtils.java", "diffHunk": "@@ -2046,4 +2047,63 @@ public static String getViewScopeSubTypeFilter(ViewScopeFilter scopeFilter) {\n \t\t\r\n \t\treturn builder.toString();\r\n \t}\r\n+\r\n+\tpublic static String appendAdditionalFilters(List<QueryFilter> additionalFilters){\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c2a6e5768a7f222722271b2e5beeb7826d691f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTEyOTYyOnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/SqlQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToyMDoxNlrOGUeRog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToyMDoxNlrOGUeRog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEyMDczOA==", "bodyText": "We could probably make this method generic (maybe move it to some query/sql util class) and reuse it for facets", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4041#discussion_r424120738", "createdAt": "2020-05-13T01:20:16Z", "author": {"login": "marcomarasca"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/SqlQuery.java", "diffHunk": "@@ -178,6 +182,20 @@ public SqlQuery(\n \t\t\tSelectList expandedSelectList = SQLTranslatorUtils.createSelectListFromSchema(tableSchema);\r\n \t\t\tthis.model.replaceSelectList(expandedSelectList);\r\n \t\t}\r\n+\r\n+\r\n+\t\t//Append additionalFilters onto the WHERE clause\r\n+\t\tif(additionalFilters != null && !additionalFilters.isEmpty()) {\r\n+\t\t\tString additionalFilterSearchCondition = SQLUtils.appendAdditionalFilters(additionalFilters);\r\n+\t\t\tStringBuilder whereClauseBuilder = new StringBuilder();\r\n+\t\t\tFacetUtils.appendFacetWhereClauseToStringBuilderIfNecessary(whereClauseBuilder,additionalFilterSearchCondition, this.model.getTableExpression().getWhereClause());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c2a6e5768a7f222722271b2e5beeb7826d691f"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3035, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}