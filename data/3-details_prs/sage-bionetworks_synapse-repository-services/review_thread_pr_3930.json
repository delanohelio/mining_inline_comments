{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjUzMzc4", "number": 3930, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowNzo0N1rODepq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowNzo0N1rODepq5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDY2NTk2OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsImplAutowiredTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowNzo0N1rOFn6FMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowNzo0N1rOFn6FMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5MDM4Ng==", "bodyText": "believe need to check message separately.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3930#discussion_r377390386", "createdAt": "2020-02-11T00:07:47Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsImplAutowiredTest.java", "diffHunk": "@@ -258,45 +269,32 @@ public void testValidExternalObjectStorageSettingWithSlashes() throws IOExceptio\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidBucket() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidBucket() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\" \");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"https://www.someurl.com\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"Invalid bucket name.\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"Invalid Bucket Name\");\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidBucketWithSlashes() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidBucketWithSlashes() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\" / / / / / \");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"https://www.someurl.com\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"Invalid bucket name.\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"Invalid Bucket Name\");\n \t}\n \n \t@Test\n-\tpublic void testExternalObjectStorageSettingInvalidURL() throws IOException {\n+\tpublic void testExternalObjectStorageSettingInvalidURL() {\n \t\tExternalObjectStorageLocationSetting externalObjectStorageSetting = new ExternalObjectStorageLocationSetting();\n \t\texternalObjectStorageSetting.setBucket(\"someBucket\");\n \t\texternalObjectStorageSetting.setEndpointUrl(\"not a url\");\n-\t\t\n-\t\tIllegalArgumentException ex = assertThrows(IllegalArgumentException.class, () -> {\n-\t\t\t//call under test\n-\t\t\tprojectSettingsManager.createStorageLocationSetting(userInfo, externalObjectStorageSetting);\n-\t\t});\n-\t\t\n-\t\tassertEquals(\"The External URL is not a valid url: not a url\", ex.getMessage());\n+\t\t//call under test\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManager.createStorageLocationSetting(\n+\t\t\t\tuserInfo, externalObjectStorageSetting), \"The External URL is not a valid url: not a url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "accd235638d1a75b00444bf1a7d0650719eef75b"}, "originalPosition": 192}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3112, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}