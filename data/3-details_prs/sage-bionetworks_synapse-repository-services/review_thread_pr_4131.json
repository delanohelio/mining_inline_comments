{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTY0OTA4", "number": 4131, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoxMzowN1rOENcK0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoxMzowN1rOENcK0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTI4NDY0OnYy", "diffSide": "RIGHT", "path": "services/workers/src/test/java/org/sagebionetworks/schema/worker/GetValidationSchemaWorkerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoxMzowN1rOGwICPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoxMzowN1rOGwICPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNjQ3Nw==", "bodyText": "We can do a bit of cleanup of this unit test", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4131#discussion_r453116477", "createdAt": "2020-07-10T23:13:07Z", "author": {"login": "marcomarasca"}, "path": "services/workers/src/test/java/org/sagebionetworks/schema/worker/GetValidationSchemaWorkerTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+package org.sagebionetworks.schema.worker;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Date;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.sagebionetworks.common.util.progress.ProgressCallback;\n+import org.sagebionetworks.repo.manager.asynch.AsynchJobStatusManager;\n+import org.sagebionetworks.repo.manager.schema.JsonSchemaManager;\n+import org.sagebionetworks.repo.model.UserInfo;\n+import org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus;\n+import org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest;\n+import org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse;\n+import org.sagebionetworks.repo.model.schema.JsonSchema;\n+import org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo;\n+import org.sagebionetworks.repo.web.NotFoundException;\n+import org.sagebionetworks.workers.util.aws.message.RecoverableMessageException;\n+\n+import com.amazonaws.services.sqs.model.Message;\n+\n+/**\n+ * Unit test for CreateJsonSchemaWorker\n+ *\n+ */\n+@ExtendWith(MockitoExtension.class)\n+public class GetValidationSchemaWorkerTest {\n+\t\n+\t@Mock\n+\tprivate AsynchJobStatusManager mockAsynchJobStatusManager;\n+\t@Mock\n+\tprivate JsonSchemaManager mockJsonSchemaManager;\n+\t@Mock\n+\tprivate ProgressCallback mockProgressCallback;\n+\t@Mock\n+\tprivate Message mockMessage;\n+\t\n+\t@InjectMocks\n+\tGetValidationSchemaWorker worker;\n+\t\n+\tString jobId;\n+\tJsonSchema schema;\n+\tAsynchronousJobStatus jobStatus;\n+\tGetValidationSchemaRequest requestBody;\n+\tLong startedByUserId;\n+\tUserInfo user;\n+\tJsonSchemaVersionInfo newVersionInfo;\n+\tGetValidationSchemaResponse response;\n+\t\n+\t@BeforeEach\n+\tpublic void before() {\n+\t\tjobId = \"123\";\n+\t\tstartedByUserId = 987L;\n+\t\tboolean isAdmin = false;\n+\t\tuser = new UserInfo(isAdmin, startedByUserId);\n+\t\tschema = new JsonSchema();\n+\t\tschema.set$id(\"org/path.name/1.0.1\");\n+\t\trequestBody = new GetValidationSchemaRequest();\n+\t\trequestBody.set$id(schema.get$id());\n+\t\tjobStatus = new AsynchronousJobStatus();\n+\t\tjobStatus.setJobId(jobId);\n+\t\tjobStatus.setRequestBody(requestBody);\n+\t\tjobStatus.setStartedByUserId(startedByUserId);\n+\t\t\n+\t\tnewVersionInfo = new JsonSchemaVersionInfo();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d299ba2d16c75d79315a7220efd0244504341789"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}