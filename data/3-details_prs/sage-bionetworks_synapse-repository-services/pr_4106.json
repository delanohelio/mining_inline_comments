{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTYwNDE2", "number": 4106, "title": "give better error message when user can't join team due to AR restriction", "bodyText": "", "createdAt": "2020-06-24T22:55:11Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106", "merged": true, "mergeCommit": {"oid": "3c0ce7307731c272d47406d99d95d14063bd22ed"}, "closed": true, "closedAt": "2020-07-22T16:57:03Z", "author": {"login": "leem42"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuh_81gH2gAyNDM5NTYwNDE2OjhlNjIzZTk1ZmI2MjNkOWVmMzRhNzUxNzAxY2UzNWM2NmZlOTFiMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3d0vLAFqTQ1MzUwOTYxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8e623e95fb623d9ef34a751701ce35c66fe91b09", "author": {"user": {"login": "leem42", "name": "Michael Lee"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/8e623e95fb623d9ef34a751701ce35c66fe91b09", "committedDate": "2020-06-24T22:43:19Z", "message": "give better error message when user cant join team"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NTk1NzQ5", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-439595749", "createdAt": "2020-06-30T00:51:36Z", "commit": {"oid": "8e623e95fb623d9ef34a751701ce35c66fe91b09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1", "author": {"user": {"login": "leem42", "name": "Michael Lee"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/beccdf7a2d5488e9cdb8961e3e5531ff9be284a1", "committedDate": "2020-07-01T20:34:01Z", "message": "PR feedback - return specific message for unmet AR using AuthorizationStatus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDc5NTE1", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-444079515", "createdAt": "2020-07-07T16:54:54Z", "commit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NDo1NFrOGuHYSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzozMTowNVrOGuIrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODU4Nw==", "bodyText": "you don't need \"TeamManagerImpl.\" on ll. 129, 130", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451008587", "createdAt": "2020-07-07T16:54:54Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -123,6 +124,11 @@\n \tpublic static final String USER_HAS_JOINED_TEAM_TEMPLATE = \"message/userHasJoinedTeamTemplate.html\";\n \tpublic static final String ADMIN_HAS_ADDED_USER_TEMPLATE = \"message/teamAdminHasAddedUserTemplate.html\";\n \tprivate static final String JOIN_TEAM_CONFIRMATION_MESSAGE_SUBJECT = \"New Member Has Joined the Team\";\n+\tprivate static final String MSG_CANNOT_ADD_TEAM_MEMBER_UNMET_AR = \"Cannot add member to team because they have not met all access restrictions. Please remove the pending request and then invite the member again. They will then be prompted to meet the requirement(s) before joining the team.\";\n+\tprivate static final String MSG_CANNOT_ADD_TEAM_MEMBER_GENERIC = \"Cannot add member to team\";\n+\tpublic static final AuthorizationStatus UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC =  AuthorizationStatus.accessDenied(TeamManagerImpl.MSG_CANNOT_ADD_TEAM_MEMBER_GENERIC);\n+\tpublic static final AuthorizationStatus UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR =  AuthorizationStatus.accessDenied(TeamManagerImpl.MSG_CANNOT_ADD_TEAM_MEMBER_UNMET_AR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMDAyNw==", "bodyText": "Public team and userInfo.equals(principalUserInfo) -> \"You can't join the team until you meet the ARs\"\nPrivate team and the prospective member is calling -> \"You can't join the team until you meet the ARs\"\nPrivate team and the manager is calling AND there's no outstanding request  -> \"You can't add them to the team until they've met the ARs and requested to join the team\"\nPrivate team and the manager is calling AND there's an outstanding request -> UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451010027", "createdAt": "2020-07-07T16:57:14Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -488,30 +494,30 @@ have MEMBERSHIP permission on Team and membership request has been created (but\n \t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n-\tpublic boolean canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n-\t\tif (userInfo.isAdmin()) return true;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return false;\n+\tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMTgwOA==", "bodyText": "\"An invitation is required to join the team.\"", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451011808", "createdAt": "2020-07-07T17:00:09Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -488,30 +494,30 @@ have MEMBERSHIP permission on Team and membership request has been created (but\n \t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n-\tpublic boolean canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n-\t\tif (userInfo.isAdmin()) return true;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return false;\n+\tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n \t\tString principalId = principalUserInfo.getId().toString();\n \t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n \t\tif (principalIsSelf) {\n \t\t\t// trying to add myself to Team.  \n-\t\t\tif (amTeamAdmin) return true;\n+\t\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if the team is open, I can join\n \t\t\tTeam team = teamDAO.get(teamId);\n-\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return true;\n+\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n-\t\t\tif (alreadyInTeam) return true;\n+\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openInvitationCount>0L;\n+\t\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMjI1Mw==", "bodyText": "\"You must be a team manager to perform this operation.\"", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451012253", "createdAt": "2020-07-07T17:00:50Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -488,30 +494,30 @@ have MEMBERSHIP permission on Team and membership request has been created (but\n \t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n-\tpublic boolean canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n-\t\tif (userInfo.isAdmin()) return true;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return false;\n+\tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n \t\tString principalId = principalUserInfo.getId().toString();\n \t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n \t\tif (principalIsSelf) {\n \t\t\t// trying to add myself to Team.  \n-\t\t\tif (amTeamAdmin) return true;\n+\t\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if the team is open, I can join\n \t\t\tTeam team = teamDAO.get(teamId);\n-\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return true;\n+\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n-\t\t\tif (alreadyInTeam) return true;\n+\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openInvitationCount>0L;\n+\t\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n \t\t} else {\n \t\t\t// the member to be added is someone other than me\n-\t\t\tif (!amTeamAdmin) return false; // can't add somone unless I'm a Team administrator\n+\t\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC; // can't add someone unless I'm a Team administrator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyODAxMA==", "bodyText": "\"The prospective member must request to join the team.\"", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451028010", "createdAt": "2020-07-07T17:28:00Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -488,30 +494,30 @@ have MEMBERSHIP permission on Team and membership request has been created (but\n \t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n-\tpublic boolean canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n-\t\tif (userInfo.isAdmin()) return true;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return false;\n+\tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n \t\tString principalId = principalUserInfo.getId().toString();\n \t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n \t\tif (principalIsSelf) {\n \t\t\t// trying to add myself to Team.  \n-\t\t\tif (amTeamAdmin) return true;\n+\t\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if the team is open, I can join\n \t\t\tTeam team = teamDAO.get(teamId);\n-\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return true;\n+\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n-\t\t\tif (alreadyInTeam) return true;\n+\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openInvitationCount>0L;\n+\t\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n \t\t} else {\n \t\t\t// the member to be added is someone other than me\n-\t\t\tif (!amTeamAdmin) return false; // can't add somone unless I'm a Team administrator\n+\t\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC; // can't add someone unless I'm a Team administrator\n \t\t\t// can't add someone unless they are asking to be added\n-\t\t\tif (alreadyInTeam) return true;\n+\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n \t\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openRequestCount>0L;\n+\t\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyOTE0NA==", "bodyText": "canAddTeamMemberStatus.checkAuthorizationOrElseThrow();", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451029144", "createdAt": "2020-07-07T17:29:52Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -576,7 +582,8 @@ public boolean addMember(UserInfo userInfo, String teamId, UserInfo principalUse\n \t\tString principalId = principalUserInfo.getId().toString();\n \t\tSet<Long> currentMembers = groupMembersDAO.getMemberIdsForUpdate(Long.valueOf(teamId));\n \t\tboolean alreadyInTeam = currentMembers.contains(principalUserInfo.getId());\n-\t\tif (!canAddTeamMember(userInfo, teamId, principalUserInfo, alreadyInTeam)) throw new UnauthorizedException(\"Cannot add member to Team.\");\n+\t\tAuthorizationStatus canAddTeamMemberStatus = canAddTeamMember(userInfo, teamId, principalUserInfo, alreadyInTeam);\n+\t\tif (!canAddTeamMemberStatus.isAuthorized()) throw new UnauthorizedException(canAddTeamMemberStatus.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyOTg1Mg==", "bodyText": "TeamManagerImpl.AUTHORIZED_ADD_TEAM_MEMBER (18 times)", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r451029852", "createdAt": "2020-07-07T17:31:05Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/team/TeamManagerImplTest.java", "diffHunk": "@@ -515,56 +515,55 @@ public void testCanAddTeamMemberSELF() throws Exception {\n \t\t\n \t\t// I can add myself if I'm an admin on the Team\n \t\twhen(mockAuthorizationManager.canAccess(userInfo, TEAM_ID, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE)).thenReturn(AuthorizationStatus.authorized());\n-\t\tassertTrue(teamManagerImpl.canAddTeamMember(userInfo, TEAM_ID, userInfo, false));\n+\t\tassertEquals(teamManagerImpl.canAddTeamMember(userInfo, TEAM_ID, userInfo, false), teamManagerImpl.AUTHORIZED_ADD_TEAM_MEMBER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beccdf7a2d5488e9cdb8961e3e5531ff9be284a1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6678f1572f6b2ecde9226eb4f43352b54794b125", "author": {"user": {"login": "leem42", "name": "Michael Lee"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/6678f1572f6b2ecde9226eb4f43352b54794b125", "committedDate": "2020-07-13T16:54:21Z", "message": "Add more specific error messages to canaddteammember method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831", "author": {"user": {"login": "leem42", "name": "Michael Lee"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/30e915329662fe1dffe523e0da47fe450b6d6831", "committedDate": "2020-07-13T17:34:00Z", "message": "fix test, typo, remove uneccessary throws exception statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjg2Mzgw", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-452686380", "createdAt": "2020-07-21T17:39:59Z", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozOTo1OVrOG1C28g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzozOTo1OVrOG1C28g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3NDU0Ng==", "bodyText": "// if principal is other and the caller is allowed to add then 'other' must have requested membership", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r458274546", "createdAt": "2020-07-21T17:39:59Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -484,41 +490,63 @@ private boolean hasUnmetAccessRequirements(UserInfo memberUserInfo, String teamI\n \t\treturn restrictionInformationManager.getRestrictionInformation(memberUserInfo, request).getHasUnmetAccessRequirement();\n \t}\n \n+\tprivate AuthorizationStatus checkCanAddOther(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// the member to be added is someone other than me\n+\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_BE_TEAM_MANAGER; // can't add someone unless I'm a Team administrator\n+\t\t// can't add someone unless they are asking to be added\n+\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_REQUEST;\n+\t}\n+\n+\tprivate AuthorizationStatus checkCanAddSelf(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// trying to add myself to Team.\n+\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if the team is open, I can join\n+\t\tTeam team = teamDAO.get(teamId);\n+\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n+\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_INVITATION;\n+\t}\n+\n+\n \t/**\n \t * Either:\n \t\tprincipalId is self and membership invitation has been extended (and not yet accepted), or\n     \tprincipalId is self and have MEMBERSHIP permission on Team, or\n     \thave MEMBERSHIP permission on Team and membership request has been created (but not yet accepted) for principalId\n \t * @param userInfo\n \t * @param teamId the ID of the team\n-\t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n \tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\t// admin can always accept membership\n \t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n+\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\n \t\tString principalId = principalUserInfo.getId().toString();\n-\t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n+\t\tboolean principalIsSelf = userInfo.equals(principalUserInfo);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n+\t\tAuthorizationStatus hasInviteOrRequestToJoin = null;\n \t\tif (principalIsSelf) {\n-\t\t\t// trying to add myself to Team.  \n-\t\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\t// if the team is open, I can join\n-\t\t\tTeam team = teamDAO.get(teamId);\n-\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n-\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n+\t\t\t// check that principalUserInfo has an invitation to this team or that this team is public\n+\t\t\thasInviteOrRequestToJoin = this.checkCanAddSelf(teamId, amTeamAdmin, principalId, now);\n \t\t} else {\n-\t\t\t// the member to be added is someone other than me\n-\t\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC; // can't add someone unless I'm a Team administrator\n-\t\t\t// can't add someone unless they are asking to be added\n-\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n+\t\t\t// check that principalUserInfo has requested to join this team\n+\t\t\thasInviteOrRequestToJoin = this.checkCanAddOther(teamId, amTeamAdmin, principalId, now);\n+\t\t}\n+\t\tif (!hasInviteOrRequestToJoin.isAuthorized()) {\n+\t\t\treturn hasInviteOrRequestToJoin;\n \t\t}\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjkwMjUx", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-452690251", "createdAt": "2020-07-21T17:45:04Z", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NTowNFrOG1DDqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NTowNFrOG1DDqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3NzgwMg==", "bodyText": "rename the variable, e.g. to 'canJoin'", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r458277802", "createdAt": "2020-07-21T17:45:04Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -484,41 +490,63 @@ private boolean hasUnmetAccessRequirements(UserInfo memberUserInfo, String teamI\n \t\treturn restrictionInformationManager.getRestrictionInformation(memberUserInfo, request).getHasUnmetAccessRequirement();\n \t}\n \n+\tprivate AuthorizationStatus checkCanAddOther(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// the member to be added is someone other than me\n+\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_BE_TEAM_MANAGER; // can't add someone unless I'm a Team administrator\n+\t\t// can't add someone unless they are asking to be added\n+\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_REQUEST;\n+\t}\n+\n+\tprivate AuthorizationStatus checkCanAddSelf(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// trying to add myself to Team.\n+\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if the team is open, I can join\n+\t\tTeam team = teamDAO.get(teamId);\n+\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n+\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_INVITATION;\n+\t}\n+\n+\n \t/**\n \t * Either:\n \t\tprincipalId is self and membership invitation has been extended (and not yet accepted), or\n     \tprincipalId is self and have MEMBERSHIP permission on Team, or\n     \thave MEMBERSHIP permission on Team and membership request has been created (but not yet accepted) for principalId\n \t * @param userInfo\n \t * @param teamId the ID of the team\n-\t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n \tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\t// admin can always accept membership\n \t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n+\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\n \t\tString principalId = principalUserInfo.getId().toString();\n-\t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n+\t\tboolean principalIsSelf = userInfo.equals(principalUserInfo);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n+\t\tAuthorizationStatus hasInviteOrRequestToJoin = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjkwNjMx", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-452690631", "createdAt": "2020-07-21T17:45:33Z", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NTozM1rOG1DE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NTozM1rOG1DE4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODExMg==", "bodyText": "use BooleanUtils.isTrue() in apache commons library", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r458278112", "createdAt": "2020-07-21T17:45:33Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -484,41 +490,63 @@ private boolean hasUnmetAccessRequirements(UserInfo memberUserInfo, String teamI\n \t\treturn restrictionInformationManager.getRestrictionInformation(memberUserInfo, request).getHasUnmetAccessRequirement();\n \t}\n \n+\tprivate AuthorizationStatus checkCanAddOther(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// the member to be added is someone other than me\n+\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_BE_TEAM_MANAGER; // can't add someone unless I'm a Team administrator\n+\t\t// can't add someone unless they are asking to be added\n+\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_REQUEST;\n+\t}\n+\n+\tprivate AuthorizationStatus checkCanAddSelf(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// trying to add myself to Team.\n+\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if the team is open, I can join\n+\t\tTeam team = teamDAO.get(teamId);\n+\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjkxMDEz", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-452691013", "createdAt": "2020-07-21T17:46:04Z", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NjowNFrOG1DGGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0NjowNFrOG1DGGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODQyNg==", "bodyText": "use principalIsSelf", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r458278426", "createdAt": "2020-07-21T17:46:04Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -484,41 +490,63 @@ private boolean hasUnmetAccessRequirements(UserInfo memberUserInfo, String teamI\n \t\treturn restrictionInformationManager.getRestrictionInformation(memberUserInfo, request).getHasUnmetAccessRequirement();\n \t}\n \n+\tprivate AuthorizationStatus checkCanAddOther(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// the member to be added is someone other than me\n+\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_BE_TEAM_MANAGER; // can't add someone unless I'm a Team administrator\n+\t\t// can't add someone unless they are asking to be added\n+\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_REQUEST;\n+\t}\n+\n+\tprivate AuthorizationStatus checkCanAddSelf(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// trying to add myself to Team.\n+\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if the team is open, I can join\n+\t\tTeam team = teamDAO.get(teamId);\n+\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n+\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_INVITATION;\n+\t}\n+\n+\n \t/**\n \t * Either:\n \t\tprincipalId is self and membership invitation has been extended (and not yet accepted), or\n     \tprincipalId is self and have MEMBERSHIP permission on Team, or\n     \thave MEMBERSHIP permission on Team and membership request has been created (but not yet accepted) for principalId\n \t * @param userInfo\n \t * @param teamId the ID of the team\n-\t * @param principalId the ID of the one to be added to the team\n \t * @return\n \t */\n \tpublic AuthorizationStatus canAddTeamMember(UserInfo userInfo, String teamId, UserInfo principalUserInfo, boolean alreadyInTeam) throws NotFoundException {\n+\t\t// admin can always accept membership\n \t\tif (userInfo.isAdmin()) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) return UNAUTHORIZED_ADD_TEAM_MEMBER_UNMET_AR;\n+\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\n \t\tString principalId = principalUserInfo.getId().toString();\n-\t\tboolean principalIsSelf = userInfo.getId().toString().equals(principalId);\n+\t\tboolean principalIsSelf = userInfo.equals(principalUserInfo);\n \t\tboolean amTeamAdmin = authorizationManager.canAccess(userInfo, teamId, ObjectType.TEAM, ACCESS_TYPE.TEAM_MEMBERSHIP_UPDATE).isAuthorized();\n \t\tlong now = System.currentTimeMillis();\n+\t\tAuthorizationStatus hasInviteOrRequestToJoin = null;\n \t\tif (principalIsSelf) {\n-\t\t\t// trying to add myself to Team.  \n-\t\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\t// if the team is open, I can join\n-\t\t\tTeam team = teamDAO.get(teamId);\n-\t\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n-\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n+\t\t\t// check that principalUserInfo has an invitation to this team or that this team is public\n+\t\t\thasInviteOrRequestToJoin = this.checkCanAddSelf(teamId, amTeamAdmin, principalId, now);\n \t\t} else {\n-\t\t\t// the member to be added is someone other than me\n-\t\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC; // can't add someone unless I'm a Team administrator\n-\t\t\t// can't add someone unless they are asking to be added\n-\t\t\tif (alreadyInTeam) return AUTHORIZED_ADD_TEAM_MEMBER;\n-\t\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n-\t\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_GENERIC;\n+\t\t\t// check that principalUserInfo has requested to join this team\n+\t\t\thasInviteOrRequestToJoin = this.checkCanAddOther(teamId, amTeamAdmin, principalId, now);\n+\t\t}\n+\t\tif (!hasInviteOrRequestToJoin.isAuthorized()) {\n+\t\t\treturn hasInviteOrRequestToJoin;\n \t\t}\n+\t\tif (hasUnmetAccessRequirements(principalUserInfo, teamId)) {\n+\t\t\tif (userInfo.equals(principalUserInfo)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjkxNTE2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-452691516", "createdAt": "2020-07-21T17:46:44Z", "commit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0Njo0NFrOG1DHqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzo0Njo0NFrOG1DHqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI3ODgyNA==", "bodyText": "add the method parameters principalUserInfo, alreadyInTeam", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#discussion_r458278824", "createdAt": "2020-07-21T17:46:44Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -484,41 +490,63 @@ private boolean hasUnmetAccessRequirements(UserInfo memberUserInfo, String teamI\n \t\treturn restrictionInformationManager.getRestrictionInformation(memberUserInfo, request).getHasUnmetAccessRequirement();\n \t}\n \n+\tprivate AuthorizationStatus checkCanAddOther(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// the member to be added is someone other than me\n+\t\tif (!amTeamAdmin) return UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_BE_TEAM_MANAGER; // can't add someone unless I'm a Team administrator\n+\t\t// can't add someone unless they are asking to be added\n+\t\tlong openRequestCount = membershipRequestDAO.getOpenByTeamAndRequesterCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openRequestCount>0L  ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_REQUEST;\n+\t}\n+\n+\tprivate AuthorizationStatus checkCanAddSelf(String teamId, boolean amTeamAdmin, String principalId, long now) {\n+\t\t// trying to add myself to Team.\n+\t\tif (amTeamAdmin) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if the team is open, I can join\n+\t\tTeam team = teamDAO.get(teamId);\n+\t\tif (team.getCanPublicJoin()!=null && team.getCanPublicJoin()==true) return AUTHORIZED_ADD_TEAM_MEMBER;\n+\t\t// if I'm not a team admin and the team is not open, then I need to have an open invitation\n+\t\tlong openInvitationCount = membershipInvitationDAO.getOpenByTeamAndUserCount(Long.parseLong(teamId), Long.parseLong(principalId), now);\n+\t\treturn openInvitationCount>0L ? AUTHORIZED_ADD_TEAM_MEMBER : UNAUTHORIZED_ADD_TEAM_MEMBER_MUST_HAVE_INVITATION;\n+\t}\n+\n+\n \t/**\n \t * Either:\n \t\tprincipalId is self and membership invitation has been extended (and not yet accepted), or\n     \tprincipalId is self and have MEMBERSHIP permission on Team, or\n     \thave MEMBERSHIP permission on Team and membership request has been created (but not yet accepted) for principalId\n \t * @param userInfo\n \t * @param teamId the ID of the team\n-\t * @param principalId the ID of the one to be added to the team", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e915329662fe1dffe523e0da47fe450b6d6831"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45593b20bf88e3c850fe7eb3bd32d70b1828c77a", "author": {"user": {"login": "leem42", "name": "Michael Lee"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/45593b20bf88e3c850fe7eb3bd32d70b1828c77a", "committedDate": "2020-07-21T20:05:52Z", "message": "make changes from pr review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTA5NjE3", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4106#pullrequestreview-453509617", "createdAt": "2020-07-22T16:56:46Z", "commit": {"oid": "45593b20bf88e3c850fe7eb3bd32d70b1828c77a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4771, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}