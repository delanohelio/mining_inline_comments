{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDIzMjYx", "number": 4033, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyMDo1M1rOD6YvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo0NDowMFrOD6dYiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTQ5Mjg4OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/schema/JsonSchemaManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyMDo1M1rOGSMz9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyMDo1M1rOGSMz9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczNzQ2MQ==", "bodyText": "require user", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4033#discussion_r421737461", "createdAt": "2020-05-07T19:20:53Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/schema/JsonSchemaManagerImpl.java", "diffHunk": "@@ -82,7 +91,7 @@ public Organization createOrganziation(UserInfo user, CreateOrganizationRequest\n \t * @param name\n \t * @return\n \t */\n-\tpublic static String processAndValidateOrganizationName(String name) {\n+\tpublic static String processAndValidateOrganizationName(UserInfo user, String name) {\n \t\tValidateArgument.required(name, \"organizationName\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c891ac3fbe708140ea8f5c4105aa8594231684"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI0Mzg3OnYy", "diffSide": "RIGHT", "path": "services/workers/src/main/java/org/sagebionetworks/schema/worker/SynapseSchemaBootstrapWorker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzozODo1N1rOGST8eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzozODo1N1rOGST8eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1NDMyOA==", "bodyText": "The super is not needed in this case", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4033#discussion_r421854328", "createdAt": "2020-05-07T23:38:57Z", "author": {"login": "marcomarasca"}, "path": "services/workers/src/main/java/org/sagebionetworks/schema/worker/SynapseSchemaBootstrapWorker.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.sagebionetworks.schema.worker;\n+\n+import org.sagebionetworks.common.util.progress.ProgressCallback;\n+import org.sagebionetworks.common.util.progress.ProgressingRunner;\n+import org.sagebionetworks.repo.manager.schema.SynapseSchemaBootstrap;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * A periodic singleton worker that ensures the Synapse schema objects are\n+ * translated and registered and available for the JSON Schema services\n+ *\n+ */\n+public class SynapseSchemaBootstrapWorker implements ProgressingRunner {\n+\t\n+\tfinal private SynapseSchemaBootstrap bootstrap;\n+\t\n+\t\n+\t@Autowired\n+\tpublic SynapseSchemaBootstrapWorker(SynapseSchemaBootstrap bootstrap) {\n+\t\tsuper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c891ac3fbe708140ea8f5c4105aa8594231684"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI1NDE2OnYy", "diffSide": "RIGHT", "path": "services/workers/src/main/resources/schema-synapse-bootstrap-spb.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo0NDowMFrOGSUCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo0NDowMFrOGSUCbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1NTg1NQ==", "bodyText": "We can remove this clock instance", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4033#discussion_r421855855", "createdAt": "2020-05-07T23:44:00Z", "author": {"login": "marcomarasca"}, "path": "services/workers/src/main/resources/schema-synapse-bootstrap-spb.xml", "diffHunk": "@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:aop=\"http://www.springframework.org/schema/aop\"\n+\txmlns:tx=\"http://www.springframework.org/schema/tx\"\n+\txmlns:util=\"http://www.springframework.org/schema/util\"\n+\txsi:schemaLocation=\"\n+       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n+       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd\n+       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd\n+       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd\">\n+\n+\t<!-- Turn on Spring's autoproxy using AspectJ's @Aspect annotations. -->\n+\t<aop:aspectj-autoproxy proxy-target-class=\"true\" />\n+\n+\t<bean id=\"clock\" class=\"org.sagebionetworks.util.DefaultClock\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c891ac3fbe708140ea8f5c4105aa8594231684"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3025, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}