{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDY5MTkx", "number": 4207, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoxNTozNVrOEnNCBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxMzoxOVrOEoNDyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQzNDMwOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoxNTozNVrOHXrD2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoxNTozNVrOHXrD2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4NDc5Mw==", "bodyText": "If we want to use a more friendly message, it makes sense to do this at the DAO so that the message is coherent wherever it is used.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r494584793", "createdAt": "2020-09-24T20:15:35Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -437,8 +439,12 @@ public PaginatedTeamIds listIdsByMember(String teamMemberId, String nextPageToke\n \t * @see org.sagebionetworks.repo.manager.team.TeamManager#get(java.lang.String)\n \t */\n \t@Override\n-\tpublic Team get(String id) throws DatastoreException, NotFoundException {\n-\t\treturn teamDAO.get(id);\n+\tpublic Team get(String teamId) throws DatastoreException, NotFoundException {\n+\t\ttry {\n+\t\t\treturn teamDAO.get(teamId);\n+\t\t} catch (NotFoundException e) {\n+\t\t\tthrow new NotFoundException(\"Team does not exist for teamId: \" + teamId ,e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad3ed56514b86aad2cc4a45134bf74396124f3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ2NDgxOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyNToyMFrOHXrXEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyNToyMFrOHXrXEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4OTcxNA==", "bodyText": "Could be a better approach to create a dedicated validation method that takes in input the id of the team and checks its existence, maybe without fetching the whole team data from the database.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r494589714", "createdAt": "2020-09-24T20:25:20Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -335,7 +335,8 @@ private void bindTeamName(String name, Long teamId){\n \n \t@Override\n \tpublic PaginatedResults<TeamMember> listMembers(String teamId, TeamMemberTypeFilterOptions memberType, long limit,\n-\t\t\tlong offset) throws DatastoreException {\n+\t\t\tlong offset) throws DatastoreException, NotFoundException {\n+\t\tget(teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad3ed56514b86aad2cc4a45134bf74396124f3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ5MzM1OnYy", "diffSide": "RIGHT", "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozMzozMVrOHXroLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozMzozMVrOHXroLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDA5Mg==", "bodyText": "Let us upgrade to Junit 5, make sure the class extends AbstractAutowiredControllerJunit5TestBase", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r494594092", "createdAt": "2020-09-24T20:33:31Z", "author": {"login": "marcomarasca"}, "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "diffHunk": "@@ -64,4 +68,27 @@ public void testListTeams() throws Exception {\n \tpublic void testGetTeamIdsByMember() throws Exception {\n \t\tservletTestHelper.getTeamIdsByMember(dispatchServlet, 1L, TeamSortOrder.TEAM_NAME, true);\n \t}\n+\n+\t/**\n+\t * PLFM-6390\n+\t * @throws Exception\n+\t */\n+\t@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad3ed56514b86aad2cc4a45134bf74396124f3"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ5NjU0OnYy", "diffSide": "RIGHT", "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNDoyNVrOHXrqEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNDoyNVrOHXrqEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDU3OA==", "bodyText": "Might be worth adding a test to the TeamServiceAutowireTest.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r494594578", "createdAt": "2020-09-24T20:34:25Z", "author": {"login": "marcomarasca"}, "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "diffHunk": "@@ -64,4 +68,27 @@ public void testListTeams() throws Exception {\n \tpublic void testGetTeamIdsByMember() throws Exception {\n \t\tservletTestHelper.getTeamIdsByMember(dispatchServlet, 1L, TeamSortOrder.TEAM_NAME, true);\n \t}\n+\n+\t/**\n+\t * PLFM-6390\n+\t * @throws Exception\n+\t */\n+\t@Test\n+\tpublic void testGetTeamMembersByInvalidId() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad3ed56514b86aad2cc4a45134bf74396124f3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTUwMjkwOnYy", "diffSide": "RIGHT", "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNjoyNVrOHXrt8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNjoyNVrOHXrt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NTU3MQ==", "bodyText": "Let us extract the expected message to its own variable.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r494595571", "createdAt": "2020-09-24T20:36:25Z", "author": {"login": "marcomarasca"}, "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "diffHunk": "@@ -64,4 +68,27 @@ public void testListTeams() throws Exception {\n \tpublic void testGetTeamIdsByMember() throws Exception {\n \t\tservletTestHelper.getTeamIdsByMember(dispatchServlet, 1L, TeamSortOrder.TEAM_NAME, true);\n \t}\n+\n+\t/**\n+\t * PLFM-6390\n+\t * @throws Exception\n+\t */\n+\t@Test\n+\tpublic void testGetTeamMembersByInvalidId() throws Exception {\n+\t\tString invalidTeamId = \"000\";\n+\t\tNotFoundException exception = Assertions.assertThrows(NotFoundException.class, () -> {\n+\t\t\t// Call under test\n+\t\t\tservletTestHelper.getTeamMembersWithTeamId(dispatchServlet, adminUserId, invalidTeamId);\n+\t\t});\n+\t\tAssert.assertEquals(\"{\\\"reason\\\":\\\"Team does not exist for teamId: \" + invalidTeamId + \"\\\"}\", exception.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad3ed56514b86aad2cc4a45134bf74396124f3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTgzOTg1OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0OToyMlrOHZJUPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0OToyMlrOHZJUPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyOTA4Nw==", "bodyText": "The limit 1 is not required, this query will always return 1 value.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496129087", "createdAt": "2020-09-28T17:49:22Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "diffHunk": "@@ -193,6 +193,8 @@\n \t\t\t\t+\" FROM \"+TeamUtils.ALL_TEAMS_AND_ADMIN_MEMBERS_CORE\n \t\t\t\t+\" AND gm.\"+COL_GROUP_MEMBERS_MEMBER_ID+\"=:\"+COL_GROUP_MEMBERS_MEMBER_ID;\n \n+\tprivate static final String SELECT_CHECK_TEAM_EXISTS = \"SELECT COUNT(*) FROM \" + TABLE_TEAM + \" WHERE \" + COL_TEAM_ID + \" = ? LIMIT 1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg1NjI4OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1Mzo0MlrOHZJeSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1Mzo0MlrOHZJeSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMTY1OA==", "bodyText": "Missing @OverRide annotation", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496131658", "createdAt": "2020-09-28T17:53:42Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "diffHunk": "@@ -316,6 +318,13 @@ public Team get(String id) throws DatastoreException, NotFoundException {\n \t\tTeam dto = TeamUtils.copyDboToDto(dbo);\n \t\treturn dto;\n \t}\n+\n+\tpublic void validateTeamExists(String teamId) throws DatastoreException, NotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg2MTk1OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1NToxN1rOHZJh3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1NToxN1rOHZJh3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMjU3NA==", "bodyText": "As previously noted, if you want to have a consistent message this can be applied to the get in the dao", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496132574", "createdAt": "2020-09-28T17:55:17Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "diffHunk": "@@ -316,6 +318,13 @@ public Team get(String id) throws DatastoreException, NotFoundException {\n \t\tTeam dto = TeamUtils.copyDboToDto(dbo);\n \t\treturn dto;\n \t}\n+\n+\tpublic void validateTeamExists(String teamId) throws DatastoreException, NotFoundException {\n+\t\tLong exists = jdbcTemplate.queryForObject(SELECT_CHECK_TEAM_EXISTS, Long.class, teamId);\n+\t\tif (exists == 0) {\n+\t\t\tthrow new NotFoundException(\"Team does not exist for teamId: \" + teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg2OTkzOnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1NzozM1rOHZJnEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1NzozM1rOHZJnEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMzkwNA==", "bodyText": "You can return a boolean from your query", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496133904", "createdAt": "2020-09-28T17:57:33Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImpl.java", "diffHunk": "@@ -316,6 +318,13 @@ public Team get(String id) throws DatastoreException, NotFoundException {\n \t\tTeam dto = TeamUtils.copyDboToDto(dbo);\n \t\treturn dto;\n \t}\n+\n+\tpublic void validateTeamExists(String teamId) throws DatastoreException, NotFoundException {\n+\t\tLong exists = jdbcTemplate.queryForObject(SELECT_CHECK_TEAM_EXISTS, Long.class, teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg3NTA0OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1OTowMlrOHZJqPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo1OTowMlrOHZJqPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzNDcxOQ==", "bodyText": "You can import statically the needed assertion methods.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496134719", "createdAt": "2020-09-28T17:59:02Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/DBOTeamDAOImplTest.java", "diffHunk": "@@ -349,10 +349,10 @@ public void testGetAllTeamsAndMembers() {\n \t\tfor (Team t : expectedAllTeamsAndMembers.keySet()) {\n \t\t\tCollection<TeamMember> expectedTeamMembers = expectedAllTeamsAndMembers.get(t);\n \t\t\tCollection<TeamMember> actualTeamMembers = actualAllTeamsAndMembers.get(t);\n-\t\t\tassertNotNull(\"Missing key \"+t, actualTeamMembers);\n+\t\t\tAssertions.assertNotNull(actualTeamMembers, \"Missing key \"+t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg4MTkzOnYy", "diffSide": "RIGHT", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMDo1NFrOHZJudQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMDo1NFrOHZJudQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzNTc5Nw==", "bodyText": "The public modifier is not needed", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496135797", "createdAt": "2020-09-28T18:00:54Z", "author": {"login": "marcomarasca"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "diffHunk": "@@ -25,7 +25,18 @@\n \t * @throws NotFoundException\n \t */\n \tpublic Team get(String id) throws DatastoreException, NotFoundException;\n-\t\n+\n+\n+\t/**\n+\t * Validates that team exists, if the team does not exist, throws an exception\n+\t *\n+\t * @param teamId\n+\t * @return\n+\t * @throws DatastoreException\n+\t * @throws NotFoundException\n+\t */\n+\tpublic void validateTeamExists(String teamId) throws DatastoreException, NotFoundException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg4MzAwOnYy", "diffSide": "RIGHT", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMToxMlrOHZJvJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMToxMlrOHZJvJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzNTk3Mg==", "bodyText": "\"throws a NotFoundException\"", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496135972", "createdAt": "2020-09-28T18:01:12Z", "author": {"login": "marcomarasca"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "diffHunk": "@@ -25,7 +25,18 @@\n \t * @throws NotFoundException\n \t */\n \tpublic Team get(String id) throws DatastoreException, NotFoundException;\n-\t\n+\n+\n+\t/**\n+\t * Validates that team exists, if the team does not exist, throws an exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg4MzQyOnYy", "diffSide": "RIGHT", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMToyMFrOHZJvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowMToyMFrOHZJvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzNjAzOQ==", "bodyText": "When is this thrown?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496136039", "createdAt": "2020-09-28T18:01:20Z", "author": {"login": "marcomarasca"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/TeamDAO.java", "diffHunk": "@@ -25,7 +25,18 @@\n \t * @throws NotFoundException\n \t */\n \tpublic Team get(String id) throws DatastoreException, NotFoundException;\n-\t\n+\n+\n+\t/**\n+\t * Validates that team exists, if the team does not exist, throws an exception\n+\t *\n+\t * @param teamId\n+\t * @return\n+\t * @throws DatastoreException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTg5OTIxOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/team/TeamManagerImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowNTo0MlrOHZJ43g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowNTo0MlrOHZJ43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzODQ2Mg==", "bodyText": "We should test the logic of the method and not that a single line of code is invoked.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496138462", "createdAt": "2020-09-28T18:05:42Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/team/TeamManagerImplTest.java", "diffHunk": "@@ -974,60 +963,47 @@ public void testListAllMembersWithPrefix() {\n \n \t\twhen(mockPrincipalPrefixDao.listTeamMembersForPrefix(prefix, Long.parseLong(TEAM_ID),10L, 0L)).thenReturn(Arrays.asList(adminMemberId, nonAdminMemberId));\t\t\n \t\twhen(mockTeamDAO.listMembers(Collections.singletonList(Long.parseLong(TEAM_ID)), Arrays.asList(adminMemberId, nonAdminMemberId))).thenReturn(ListWrapper.wrap(Arrays.asList(adminMember, nonAdminMember), TeamMember.class));\n-\t\t\n+\n \t\tList<TeamMember> actual = teamManagerImpl.listMembersForPrefix(prefix, TEAM_ID, TeamMemberTypeFilterOptions.ALL, 10L, 0L).getResults();\n \t\t\n \t\tverify(mockPrincipalPrefixDao, times(1)).listTeamMembersForPrefix(prefix, Long.parseLong(TEAM_ID), 10L, 0L);\n \t\tverify(mockTeamDAO, times(1)).listMembers(Collections.singletonList(Long.parseLong(TEAM_ID)), Arrays.asList(adminMemberId, nonAdminMemberId));\n \t\tassertEquals(Arrays.asList(adminMember, nonAdminMember), actual);\n \t}\n \n+\n \t@Test\n-\tpublic void testListMembersForPrefixInvalidTeam() {\n+\tpublic void testListMembersForPrefixCheckTeamExists() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTkwMzk5OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/team/TeamManagerImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowNzowNlrOHZJ7wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODowNzowNlrOHZJ7wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzOTIwMQ==", "bodyText": "Good practice is to setup the mock for this call.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496139201", "createdAt": "2020-09-28T18:07:06Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/team/TeamManagerImplTest.java", "diffHunk": "@@ -974,60 +963,47 @@ public void testListAllMembersWithPrefix() {\n \n \t\twhen(mockPrincipalPrefixDao.listTeamMembersForPrefix(prefix, Long.parseLong(TEAM_ID),10L, 0L)).thenReturn(Arrays.asList(adminMemberId, nonAdminMemberId));\t\t\n \t\twhen(mockTeamDAO.listMembers(Collections.singletonList(Long.parseLong(TEAM_ID)), Arrays.asList(adminMemberId, nonAdminMemberId))).thenReturn(ListWrapper.wrap(Arrays.asList(adminMember, nonAdminMember), TeamMember.class));\n-\t\t\n+\n \t\tList<TeamMember> actual = teamManagerImpl.listMembersForPrefix(prefix, TEAM_ID, TeamMemberTypeFilterOptions.ALL, 10L, 0L).getResults();\n \t\t\n \t\tverify(mockPrincipalPrefixDao, times(1)).listTeamMembersForPrefix(prefix, Long.parseLong(TEAM_ID), 10L, 0L);\n \t\tverify(mockTeamDAO, times(1)).listMembers(Collections.singletonList(Long.parseLong(TEAM_ID)), Arrays.asList(adminMemberId, nonAdminMemberId));\n \t\tassertEquals(Arrays.asList(adminMember, nonAdminMember), actual);\n \t}\n \n+\n \t@Test\n-\tpublic void testListMembersForPrefixInvalidTeam() {\n+\tpublic void testListMembersForPrefixCheckTeamExists() {\n+\t\tArrayList<Long> list = new ArrayList<Long>();\n+\t\tlist.add(Long.parseLong(TEAM_ID));\n+\t\twhen(mockTeamDAO.listMembers(list, Arrays.asList())).thenReturn(ListWrapper.wrap(Arrays.asList(), TeamMember.class));\n \t\tString prefix = \"pfx\";\n-\t\tString invalidTeamId = \"000\";\n-\t\tNotFoundException ex = new NotFoundException(\"teamDAO\");\n-\t\twhen(mockTeamDAO.get(invalidTeamId)).thenThrow(ex);\n-\t\tNotFoundException exception = Assertions.assertThrows(NotFoundException.class, () -> {\n-\t\t\t// Call under test\n-\t\t\tteamManagerImpl.listMembersForPrefix(prefix, invalidTeamId, null, 10L, 0L);\n-\t\t});\n-\t\tassertEquals(\"Team does not exist for teamId: \" + invalidTeamId, exception.getMessage());\n-        assertEquals(ex, exception.getCause());\n+\t\t// Call under test\n+\t\tteamManagerImpl.listMembersForPrefix(prefix, TEAM_ID, TeamMemberTypeFilterOptions.ALL, 10L, 0L);\n+\t\tverify(mockTeamDAO).validateTeamExists(TEAM_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTkxODQ1OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxMToyM1rOHZKE0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxMToyM1rOHZKE0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0MTUyMA==", "bodyText": "You are making an additional query that is not necessary, the get(teamId) already throws an exception.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496141520", "createdAt": "2020-09-28T18:11:23Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/team/TeamManagerImpl.java", "diffHunk": "@@ -730,6 +726,7 @@ public String getIconPreviewURL(UserInfo userInfo, String teamId) throws NotFoun\n \t}\n \n \tString getFileHandleId(String teamId) throws NotFoundException {\n+\t\tteamDAO.validateTeamExists(teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTkyNDU2OnYy", "diffSide": "RIGHT", "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxMzoxOVrOHZKInA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxMzoxOVrOHZKInA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0MjQ5Mg==", "bodyText": "Assertions. is not needed as the assertion methods are statically imported.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4207#discussion_r496142492", "createdAt": "2020-09-28T18:13:19Z", "author": {"login": "marcomarasca"}, "path": "services/repository/src/test/java/org/sagebionetworks/repo/web/controller/TeamControllerAutowiredTest.java", "diffHunk": "@@ -75,12 +79,13 @@ public void testGetTeamIdsByMember() throws Exception {\n \t */\n \t@Test\n \tpublic void testGetTeamMembersByInvalidId() throws Exception {\n-\t\tString invalidTeamId = \"000\";\n+\t\tString invalidTeamId = \"404\";\n+\t\tString expectedResponse = \"{\\\"reason\\\":\\\"Team does not exist for teamId: \" + invalidTeamId + \"\\\"}\";\n \t\tNotFoundException exception = Assertions.assertThrows(NotFoundException.class, () -> {\n \t\t\t// Call under test\n \t\t\tservletTestHelper.getTeamMembersWithTeamId(dispatchServlet, adminUserId, invalidTeamId);\n \t\t});\n-\t\tAssert.assertEquals(\"{\\\"reason\\\":\\\"Team does not exist for teamId: \" + invalidTeamId + \"\\\"}\", exception.getMessage());\n+\t\tAssertions.assertEquals(expectedResponse, exception.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5b95f17729cea5bf60c44e704f582c427432e0"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2994, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}