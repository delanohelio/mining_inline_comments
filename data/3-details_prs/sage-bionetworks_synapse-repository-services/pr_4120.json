{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMTcxODE5", "number": 4120, "title": "PLFM-6334: Added service to send SQS message", "bodyText": "", "createdAt": "2020-07-02T01:57:11Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120", "merged": true, "mergeCommit": {"oid": "6c0dff3fc5605251c90a0acbcca7b75dcae4d8ec"}, "closed": true, "closedAt": "2020-07-03T01:33:38Z", "author": {"login": "marcomarasca"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwwd2vAH2gAyNDQzMTcxODE5OmQyYzAzOTZhMzc4ZDhkNWYwMTk3OTNlMWRkNGUxOGIwN2NhOTAwNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxJOrcgFqTQ0MjA5ODY2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2c0396a378d8d5f019793e1dd4e18b07ca90046", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/d2c0396a378d8d5f019793e1dd4e18b07ca90046", "committedDate": "2020-07-01T20:42:30Z", "message": "PLFM-6335: Cache the secret hash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43bffaf0f99e7a5a2d8b4af997a49eec860c4dd", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/a43bffaf0f99e7a5a2d8b4af997a49eec860c4dd", "committedDate": "2020-07-01T21:09:57Z", "message": "PLFM-6335: Added test for malicious header injection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9fc75c10be0ec08e1733d1ca32ef834591ae5446", "committedDate": "2020-07-02T01:52:22Z", "message": "PLFM-6334: Added admin service to send SQS messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkxOTky", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442091992", "createdAt": "2020-07-03T01:04:52Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowNDo1MlrOGsg2NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowNDo1MlrOGsg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyODY5Mw==", "bodyText": "relative queue name.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449328693", "createdAt": "2020-07-03T01:04:52Z", "author": {"login": "john-hill"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/message/SQSSendMessageRequest.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\r\n+    \"title\": \"SQSSendMessageRequest\",\r\n+    \"description\": \"A message request to send an SQS message to a stack queue\",\r\n+    \"properties\": {\r\n+        \"queueName\": {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkzNDUx", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442093451", "createdAt": "2020-07-03T01:10:52Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxMDo1MlrOGsg7LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxMDo1MlrOGsg7LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyOTk2NA==", "bodyText": "maybe move to try catch below and make errors more generic.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449329964", "createdAt": "2020-07-03T01:10:52Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/sqs/SQSManagerImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.sagebionetworks.repo.manager.sqs;\r\n+\r\n+import org.sagebionetworks.StackConfiguration;\r\n+import org.sagebionetworks.repo.model.message.SQSSendMessageRequest;\r\n+import org.sagebionetworks.repo.model.message.SQSSendMessageResponse;\r\n+import org.sagebionetworks.repo.web.NotFoundException;\r\n+import org.sagebionetworks.repo.web.TemporarilyUnavailableException;\r\n+import org.sagebionetworks.util.ValidateArgument;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n+import org.springframework.stereotype.Service;\r\n+\r\n+import com.amazonaws.AmazonClientException;\r\n+import com.amazonaws.services.sqs.AmazonSQS;\r\n+import com.amazonaws.services.sqs.model.AmazonSQSException;\r\n+import com.amazonaws.services.sqs.model.QueueDoesNotExistException;\r\n+import com.amazonaws.services.sqs.model.SendMessageResult;\r\n+\r\n+@Service\r\n+public class SQSManagerImpl implements SQSManager {\r\n+\r\n+\tprivate StackConfiguration config;\r\n+\tprivate AmazonSQS sqsClient;\r\n+\t\r\n+\t@Autowired\r\n+\tpublic SQSManagerImpl(final StackConfiguration config, final AmazonSQS sqsClient) {\r\n+\t\tthis.config = config;\r\n+\t\tthis.sqsClient = sqsClient;\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tpublic SQSSendMessageResponse sendMessage(final SQSSendMessageRequest messageRequest) throws NotFoundException, TemporarilyUnavailableException {\r\n+\t\tValidateArgument.required(messageRequest, \"messageRequest\");\r\n+\t\tValidateArgument.requiredNotBlank(messageRequest.getQueueName(), \"messageRequest.queueName\");\r\n+\t\tValidateArgument.requiredNotBlank(messageRequest.getMessageBody(), \"messageRequest.messageBody\");\r\n+\r\n+\t\tfinal String queueName = messageRequest.getQueueName();\r\n+\t\tfinal String messageBody = messageRequest.getMessageBody();\r\n+\r\n+\t\tfinal String stackQueueUrl = getStackQueueUrl(queueName);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDk1MzE5", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442095319", "createdAt": "2020-07-03T01:18:57Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxODo1N1rOGshBpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxODo1N1rOGshBpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMTYyMQ==", "bodyText": "Perfect!", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449331621", "createdAt": "2020-07-03T01:18:57Z", "author": {"login": "john-hill"}, "path": "services/repository/src/main/java/org/sagebionetworks/auth/filter/StackConfigKeyAndSecretProvider.java", "diffHunk": "@@ -1,39 +1,66 @@\n package org.sagebionetworks.auth.filter;\r\n \r\n import org.sagebionetworks.StackConfiguration;\r\n+import org.sagebionetworks.securitytools.PBKDF2Utils;\r\n+import org.sagebionetworks.util.ValidateArgument;\r\n \r\n /**\r\n  * Default implementation for a {@link ServiceKeyAndSecretProvider} that grabs\r\n- * the key/secret pair from the stack configuration\r\n+ * the key/secret pair from the stack configuration and caches the hashed secrets\r\n  * \r\n  * @author Marco Marasca\r\n  *\r\n  */\r\n public class StackConfigKeyAndSecretProvider implements ServiceKeyAndSecretProvider {\r\n \r\n \tprivate String serviceName;\r\n-\tprivate String serviceKey;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDk3MTcw", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442097170", "createdAt": "2020-07-03T01:27:16Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToyNzoxNlrOGshITw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToyNzoxNlrOGshITw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMzMyNw==", "bodyText": "need an integration test", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449333327", "createdAt": "2020-07-03T01:27:16Z", "author": {"login": "john-hill"}, "path": "services/repository/src/main/java/org/sagebionetworks/repo/web/controller/AdministrationController.java", "diffHunk": "@@ -324,4 +326,16 @@ IdGeneratorExport createIdGeneratorExport(@RequestParam(value = AuthorizationCon\n \t\t\tthrows NotFoundException, UnauthorizedException {\r\n \t\tserviceProvider.getPrincipalService().redactPrincipalInformation(userId, principalId);\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Sends an message to SQS\r\n+\t * \r\n+\t * @param messageRequest The request containing the message to send and the name of the queue\r\n+\t */\r\n+\t@RequiredScope({})\r\n+\t@ResponseStatus(HttpStatus.OK)\r\n+\t@RequestMapping(value = UrlHelpers.ADMIN_SQS_MESSAGE, method = RequestMethod.POST)\r\n+\tpublic @ResponseBody SQSSendMessageResponse sendSQSMessage(@RequestBody SQSSendMessageRequest messageRequest) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDk3NTc4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442097578", "createdAt": "2020-07-03T01:28:59Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToyOTowMFrOGshJqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToyOTowMFrOGshJqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMzY3NA==", "bodyText": "once we extend then we can use \"/admin/*\"", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#discussion_r449333674", "createdAt": "2020-07-03T01:29:00Z", "author": {"login": "john-hill"}, "path": "services/repository/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -118,6 +118,23 @@\n \t\t<filter-name>migrationServiceAuthFilter</filter-name>\n \t\t<url-pattern>/repo/v1/migration/*</url-pattern>\n \t</filter-mapping>\n+\t\n+\t<!-- Filter that authenticate the admin services using basic auth -->\n+\t<filter>\n+\t\t<filter-name>adminServiceAuthFilter</filter-name>\n+\t\t<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n+\t\t<init-param>\n+\t\t\t<!-- Make sure the init-params are passed through the proxy to the bean -->\n+\t\t\t<param-name>targetFilterLifecycle</param-name>\n+\t\t\t<param-value>true</param-value>\n+\t\t</init-param>\n+\t</filter>\n+\t\n+\t<!-- The mapping for the admin services, for now only filter sqs services. We can extend this incrementally to all the administrative services -->\n+\t<filter-mapping>\n+\t\t<filter-name>migrationServiceAuthFilter</filter-name>\n+\t\t<url-pattern>/repo/v1/admin/sqs/*</url-pattern>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDk4NjYx", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4120#pullrequestreview-442098661", "createdAt": "2020-07-03T01:33:33Z", "commit": {"oid": "9fc75c10be0ec08e1733d1ca32ef834591ae5446"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4572, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}