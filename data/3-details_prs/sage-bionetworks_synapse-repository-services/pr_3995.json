{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTk3OTMx", "number": 3995, "title": "PLFM-6192: fix NPE", "bodyText": "", "createdAt": "2020-04-09T04:16:10Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995", "merged": true, "mergeCommit": {"oid": "56523e1ee0d56810e90e1c9c7a423155d6f5fe2a"}, "closed": true, "closedAt": "2020-04-10T17:40:28Z", "author": {"login": "xschildw"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVvOUOAH2gAyNDAxMTk3OTMxOjY1MTI2YzczYjkzOTRhNTdiNzM5OWIxOWJjNGU1YjZiMmExN2EzYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWUtbMAFqTM5MTU2NDQzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65126c73b9394a57b7399b19bc4e5b6b2a17a3b0", "author": {"user": {"login": "xschildw", "name": "Xavier Schildwachter"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/65126c73b9394a57b7399b19bc4e5b6b2a17a3b0", "committedDate": "2020-04-08T21:59:40Z", "message": "Check for null token"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40c3c99f64061e05e81bd1869d29fec5f8e5bc64", "author": {"user": {"login": "xschildw", "name": "Xavier Schildwachter"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/40c3c99f64061e05e81bd1869d29fec5f8e5bc64", "committedDate": "2020-04-09T02:51:52Z", "message": "JUnit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf", "author": {"user": {"login": "xschildw", "name": "Xavier Schildwachter"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/7ccf83141ce01bb6455efd962ceab5824c782eaf", "committedDate": "2020-04-09T04:14:43Z", "message": "Removed unused"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTYzMjk4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#pullrequestreview-391563298", "createdAt": "2020-04-10T17:28:21Z", "commit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyODoyMVrOGEAvgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyODoyMVrOGEAvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1OTY1MQ==", "bodyText": "You probably don't need the eq()", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406859651", "createdAt": "2020-04-10T17:28:21Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -215,8 +212,11 @@ public void testLogin(){\n \t///////////////////////////////////////////////////////////\n \t@Test\n \tpublic void testGetLoginResponseAfterSuccessfulAuthentication_validReciept(){\n+\t\tsetupMockUserGroupDAO();\n \t\tString newReceipt = \"uwu\";\n \t\twhen(mockAuthReceiptDAO.replaceReceipt(userId, receipt)).thenReturn(newReceipt);\n+\t\t//when(mockAuthReceiptDAO.createNewReceipt(userId)).thenReturn(receipt);\n+\t\twhen(mockAuthDAO.changeSessionToken(eq(userId), eq((String) null))).thenReturn(synapseSessionToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTY0NDM4", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#pullrequestreview-391564438", "createdAt": "2020-04-10T17:30:37Z", "commit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzozMDozN1rOGEAzXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzozMTozOFrOGEA0yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2MDYzOA==", "bodyText": "You could check the retuned IllegalArgumentException and validate the message", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406860638", "createdAt": "2020-04-10T17:30:37Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -398,24 +408,30 @@ public void testFindUserForAuthentication_userNotFound(){\n \t/////////////////////////////////////////////////////////////\n \t// validateChangePassword(ChangePasswordWithCurrentPassword)\n \t/////////////////////////////////////////////////////////////\n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testValidateChangePassword_withCurrentPassword_nullUsername(){\n \t\tchangePasswordWithCurrentPassword.setUsername(null);\n \n-\t\t//method under test\n-\t\tauthManager.validateChangePassword(changePasswordWithCurrentPassword);\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2MTAwMw==", "bodyText": "Can be @mock", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3995#discussion_r406861003", "createdAt": "2020-04-10T17:31:38Z", "author": {"login": "marcomarasca"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/authentication/AuthenticationManagerImplUnitTest.java", "diffHunk": "@@ -449,56 +469,77 @@ public void testValidateChangePassword_withToken_valid(){\n \t\tverify(mockPasswordResetTokenGenerator).isValidToken(passwordResetSignedToken);\n \t}\n \n+\t@Test\n+\tpublic void testValidateChangePassword_withToken_missingToken() {\n+\t\tchangePasswordWithToken.setPasswordChangeToken(null);\n+\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t// call under test\n+\t\t\tauthManager.validateChangePassword(changePasswordWithToken);\n+\t\t});\n+\t}\n+\n \n \t////////////////////\n \t// changePassword()\n \t////////////////////\n \n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testChangePassword_NullNewPassword(){\n+\t\twhen(mockUserCredentialValidator.checkPasswordWithThrottling(userId, password)).thenReturn(true);\n+\t\tsetupMockPrincipalAliasDAO();\n+\n \t\tchangePasswordWithCurrentPassword.setNewPassword(null);\n-\t\tauthManager.changePassword(changePasswordWithCurrentPassword);\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t// call under test\n+\t\t\tauthManager.changePassword(changePasswordWithCurrentPassword);\n+\t\t});\n \t}\n \n \n-\t@Test(expected = IllegalArgumentException.class)\n+\t@Test\n \tpublic void testChangePassword_unknownImplementation(){\n-\t\t//use anonymous implementation\n-\t\tauthManager.changePassword(new ChangePasswordInterface() {\n-\t\t\t@Override\n-\t\t\tpublic String getNewPassword() {\n-\t\t\t\treturn \"\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void setNewPassword(String newPassword) {\n-\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getConcreteType() {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void setConcreteType(String concreteType) {\n-\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic JSONObjectAdapter initializeFromJSONObject(JSONObjectAdapter jsonObjectAdapter) throws JSONObjectAdapterException {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic JSONObjectAdapter writeToJSONObject(JSONObjectAdapter jsonObjectAdapter) throws JSONObjectAdapterException {\n-\t\t\t\treturn null;\n-\t\t\t}\n+\t\tAssertions.assertThrows(IllegalArgumentException.class, () -> {\n+\t\t\t//use anonymous implementation\n+\t\t\tauthManager.changePassword(new ChangePasswordInterface() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccf83141ce01bb6455efd962ceab5824c782eaf"}, "originalPosition": 321}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}