{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDgzNzE1", "number": 3952, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMjowNVrODjmVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMToxMzoxNVrODjnO0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU0ODY4OnYy", "diffSide": "RIGHT", "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/project/BucketOwnerStorageLocationSetting.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMjowNVrOFvf81A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMjowNVrOFvf81A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MDg2OA==", "bodyText": "doc that it must be a team ID or a user ID.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3952#discussion_r385350868", "createdAt": "2020-02-27T20:22:05Z", "author": {"login": "john-hill"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/project/BucketOwnerStorageLocationSetting.json", "diffHunk": "@@ -1,5 +1,5 @@\n {\n-\t\"description\": \"A storage location that defines an external bucket that needs to be verified for ownership. For this type of storage location, upon creation there is a process of verification that will check that a owner.txt file is uploaded to the bucket (and if present within the baseKey folder) that contains the username of requesting user.\",\n+\t\"description\": \"A storage location that defines an external bucket that needs to be verified for ownership. For this type of storage location, upon creation there is a process of verification that will check that a owner.txt file is uploaded to the bucket (and if present within the baseKey folder) and that contains a line separated list of user identifiers. Valid user identifiers for verifications are: user id, user name, user email address or id of a team the user is part of.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3307f94e8b8f6b8439b11cc588f06b4985f4acf2"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjY3NTYwOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/storagelocation/BucketOwnerVerifierImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNjoxOVrOFvhMAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTowNjoxOVrOFvhMAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3MTEzNg==", "bodyText": "teamId and userId only.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3952#discussion_r385371136", "createdAt": "2020-02-27T21:06:19Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/storagelocation/BucketOwnerVerifierImpl.java", "diffHunk": "@@ -19,14 +22,24 @@\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.stereotype.Service;\r\n \r\n+import com.google.common.collect.ImmutableSet;\r\n+\r\n @Service\r\n public class BucketOwnerVerifierImpl implements BucketOwnerVerifier {\r\n-\r\n+\t\r\n \tpublic static final String EXTERNAL_STORAGE_HELP = \"http://docs.synapse.org/articles/custom_storage_location.html for more information on how to create a new external upload destination.\";\r\n \r\n-\tprivate static final String SECURITY_EXPLANATION = \"For security purposes, Synapse needs to establish that %s has permission to write to the bucket. Please create an object in bucket '%s' with key '%s' that contains the text '%s'. Also see \"\r\n+\tprivate static final String SECURITY_EXPLANATION = \"For security purposes, Synapse needs to establish that the user has permission to write to the bucket. Please create an object in bucket '%s' with key '%s' that contains a \"\r\n+\t\t\t+ \"line separated list of identifiers for the user. Valid identifiers are the id of the user, its username, email address or id of a team the user is part of. Also see \"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3307f94e8b8f6b8439b11cc588f06b4985f4acf2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjY5NTIzOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/storagelocation/BucketOwnerVerifierImplAutowireTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMToxMzoxNVrOFvhYWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMToxMzoxNVrOFvhYWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM3NDI5OQ==", "bodyText": "verify negative case", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3952#discussion_r385374299", "createdAt": "2020-02-27T21:13:15Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/storagelocation/BucketOwnerVerifierImplAutowireTest.java", "diffHunk": "@@ -46,4 +84,86 @@ public void testUnsupportedStorageLocation() {\n \t\tassertEquals(\"Unsupported storage location type: \" + storageLocation.getClass().getSimpleName(), e.getMessage());\r\n \t}\r\n \t\r\n+\t@Test\r\n+\tpublic void testVerificationWithMultipleUsers() throws Exception {\r\n+\t\tUserInfo user1 = createUser();\r\n+\t\tUserInfo user2 = createUser();\r\n+\t\t\r\n+\t\tList<String> ownerList = ImmutableList.of(user1.getId().toString(), user2.getId().toString());\r\n+\t\t\r\n+\t\tBucketOwnerStorageLocationSetting storageLocation = linkBucket(ownerList);\r\n+\t\t\r\n+\t\tbucketOwnerVerifier.verifyBucketOwnership(user1, storageLocation);\r\n+\t\tbucketOwnerVerifier.verifyBucketOwnership(user2, storageLocation);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3307f94e8b8f6b8439b11cc588f06b4985f4acf2"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3131, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}