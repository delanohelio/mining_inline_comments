{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTM0NDQy", "number": 3999, "title": "PLFM 6158 - Part A: Add OBJECT_TYPE to annotation index", "bodyText": "Added the OBJECT_TYPE column to the various tables for the replication/annotation index and refactored the index DAO layer (together with necessary manager refactoring).", "createdAt": "2020-04-14T02:29:13Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999", "merged": true, "mergeCommit": {"oid": "14de7d9f0ec4a2ddd33fe03f19efbad938870c30"}, "closed": true, "closedAt": "2020-04-15T00:00:40Z", "author": {"login": "marcomarasca"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXVcBKgH2gAyNDAyOTM0NDQyOjc3MzQzYzM1Y2IzYTQ1NTRhMzk1MzllYWNkYzVlODJjZTU5ZTQ1MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXsi0uAFqTM5MzM3Mjg2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "77343c35cb3a4554a39539eacdc5e82ce59e4502", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/77343c35cb3a4554a39539eacdc5e82ce59e4502", "committedDate": "2020-04-13T21:04:57Z", "message": "PLFM-6158: Added OBJECT_TYPE to replication index\n\nInitial refactor of the replication (annotations) index to include the object type so that we can extend it beyond entities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eb7d5252ad1d316277729371e1861b8b1f03fd9", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/7eb7d5252ad1d316277729371e1861b8b1f03fd9", "committedDate": "2020-04-13T21:04:57Z", "message": "PLFM-6158: File size storage refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac68ccba8dab267caf2a26d41ffe1a8b4d9518a", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/3ac68ccba8dab267caf2a26d41ffe1a8b4d9518a", "committedDate": "2020-04-13T21:04:58Z", "message": "PLFM-6158: Refactor object data index CRUD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c20f608666217165b66723ac3965874c6462b7c", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/8c20f608666217165b66723ac3965874c6462b7c", "committedDate": "2020-04-13T23:52:39Z", "message": "PLFM-6158: Additional refactoring of TableIndexDAO OBJECT_TYPE ops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388234b1c3dbb8062a648ef2ae8d8dfd55f60fbb", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/388234b1c3dbb8062a648ef2ae8d8dfd55f60fbb", "committedDate": "2020-04-14T00:18:21Z", "message": "PLFM-6158: WIP - fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd597774d7b6d2563b3dd8fbba691c424ae31100", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/cd597774d7b6d2563b3dd8fbba691c424ae31100", "committedDate": "2020-04-14T03:34:22Z", "message": "Fix test out of memory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040", "author": {"user": {"login": "marcomarasca", "name": "Marco Marasca"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/73f2c8818042fcef86c0f50d7a94f8474f50d040", "committedDate": "2020-04-14T03:34:58Z", "message": "Remove unnecessary logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzQ3MzE2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393347316", "createdAt": "2020-04-14T22:47:39Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo0NzozOVrOGFjpiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo0NzozOVrOGFjpiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MDEzNw==", "bodyText": "object_id", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408480137", "createdAt": "2020-04-14T22:47:39Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -97,122 +100,135 @@ public static Long getReservedColumnId(String columnName) {\n \t}\r\n \r\n \t// ENTITY_REPLICATION\r\n-\tpublic static final String ENTITY_REPLICATION_TABLE \t\t\t\t= \"ENTITY_REPLICATION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ID\t\t\t\t= \"ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_VERSION\t\t\t= \"CURRENT_VERSION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_BY\t\t\t= \"CREATED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_ON\t\t\t= \"CREATED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ETAG\t\t\t\t= \"ETAG\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_NAME\t\t\t\t= \"NAME\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_TYPE\t\t\t\t= \"TYPE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PARENT_ID\t\t\t= \"PARENT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_BENEFACTOR_ID\t\t= \"BENEFACTOR_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PROJECT_ID\t\t= \"PROJECT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_BY\t\t= \"MODIFIED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_ON\t\t= \"MODIFIED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_ID\t\t\t= \"FILE_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_SIZE_BYTES\t= \"FILE_SIZE_BYTES\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_MD5\t\t\t= \"FILE_MD5\";\r\n+\tpublic static final String OBJECT_REPLICATION_TABLE \t\t\t\t\t= \"OBJECT_REPLICATION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_ID\t\t\t\t= \"OBJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_VERSION\t\t\t\t= \"CURRENT_VERSION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_BY\t\t\t\t= \"CREATED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_ON\t\t\t\t= \"CREATED_ON\";\r\n+\tpublic static final String OBEJCT_REPLICATION_COL_ETAG\t\t\t\t\t= \"ETAG\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_NAME\t\t\t\t\t= \"NAME\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_SUBTYPE\t\t\t\t= \"SUBTYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PARENT_ID\t\t\t\t= \"PARENT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_BENEFACTOR_ID\t\t\t= \"BENEFACTOR_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PROJECT_ID\t\t\t= \"PROJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_BY\t\t\t= \"MODIFIED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_ON\t\t\t= \"MODIFIED_ON\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_ID\t\t\t\t= \"FILE_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_SIZE_BYTES\t\t= \"FILE_SIZE_BYTES\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_MD5\t\t\t\t= \"FILE_MD5\";\r\n \r\n \t// REPLICATION_SYNC_EXPIRATION\r\n-\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t= \"ID\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_EXPIRES\t\t= \"EXPIRES_MS\";\r\n+\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t\t\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t\t\t= \"ID\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzQ4Mzk1", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393348395", "createdAt": "2020-04-14T22:50:24Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MDoyNFrOGFjtcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MDoyNFrOGFjtcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTEzOA==", "bodyText": "rename", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408481138", "createdAt": "2020-04-14T22:50:24Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -97,122 +100,135 @@ public static Long getReservedColumnId(String columnName) {\n \t}\r\n \r\n \t// ENTITY_REPLICATION\r\n-\tpublic static final String ENTITY_REPLICATION_TABLE \t\t\t\t= \"ENTITY_REPLICATION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ID\t\t\t\t= \"ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_VERSION\t\t\t= \"CURRENT_VERSION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_BY\t\t\t= \"CREATED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_ON\t\t\t= \"CREATED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ETAG\t\t\t\t= \"ETAG\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_NAME\t\t\t\t= \"NAME\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_TYPE\t\t\t\t= \"TYPE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PARENT_ID\t\t\t= \"PARENT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_BENEFACTOR_ID\t\t= \"BENEFACTOR_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PROJECT_ID\t\t= \"PROJECT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_BY\t\t= \"MODIFIED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_ON\t\t= \"MODIFIED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_ID\t\t\t= \"FILE_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_SIZE_BYTES\t= \"FILE_SIZE_BYTES\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_MD5\t\t\t= \"FILE_MD5\";\r\n+\tpublic static final String OBJECT_REPLICATION_TABLE \t\t\t\t\t= \"OBJECT_REPLICATION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_ID\t\t\t\t= \"OBJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_VERSION\t\t\t\t= \"CURRENT_VERSION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_BY\t\t\t\t= \"CREATED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_ON\t\t\t\t= \"CREATED_ON\";\r\n+\tpublic static final String OBEJCT_REPLICATION_COL_ETAG\t\t\t\t\t= \"ETAG\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_NAME\t\t\t\t\t= \"NAME\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_SUBTYPE\t\t\t\t= \"SUBTYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PARENT_ID\t\t\t\t= \"PARENT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_BENEFACTOR_ID\t\t\t= \"BENEFACTOR_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PROJECT_ID\t\t\t= \"PROJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_BY\t\t\t= \"MODIFIED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_ON\t\t\t= \"MODIFIED_ON\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_ID\t\t\t\t= \"FILE_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_SIZE_BYTES\t\t= \"FILE_SIZE_BYTES\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_MD5\t\t\t\t= \"FILE_MD5\";\r\n \r\n \t// REPLICATION_SYNC_EXPIRATION\r\n-\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t= \"ID\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_EXPIRES\t\t= \"EXPIRES_MS\";\r\n+\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t\t\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t\t\t= \"ID\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_EXPIRES\t\t\t\t= \"EXPIRES_MS\";\r\n \t\r\n-\t// Dynamic string of all of the entity types.\r\n-\tpublic static final String ENTITY_TYPES;\r\n-\tstatic{\r\n-\t\tStringBuilder builder = new StringBuilder();\r\n-\t\tboolean first = true;\r\n-\t\tfor(EntityType type: EntityType.values()){\r\n-\t\t\tif(!first){\r\n-\t\t\t\tbuilder.append(\", \");\r\n-\t\t\t}\r\n-\t\t\tbuilder.append(\"'\");\r\n-\t\t\tbuilder.append(type.name());\r\n-\t\t\tbuilder.append(\"'\");\r\n-\t\t\tfirst = false;\r\n-\t\t}\r\n-\t\tENTITY_TYPES = builder.toString();\r\n-\t}\r\n+\r\n+\tpublic static final String TYPE_PARAM_NAME = \"typeParam\";\r\n+\tpublic static final String OBJECT_TYPE_PARAM_NAME = \"objectType\";\r\n+\tpublic static final String PARENT_ID_PARAM_NAME = \"parentIds\";\r\n+\tpublic static final String ID_PARAM_NAME = \"ids\";\r\n+\tpublic static final String EXPIRES_PARAM_NAME = \"bExpires\";\r\n+\t\r\n+\t// Dynamic string of all the object types, used to build the enum type in the replication table\r\n+\tprivate static final String OBJECT_TYPES_ENUM_STRING = joinEnumForSQL(ObjectType.values());\r\n+\t\r\n+\t// Dynamic string of all of the subtypes (currently only entity types), used to build the enum type in the replication table\r\n+\tprivate static final String ENTITY_TYPES_ENUM_STRING = joinEnumForSQL(EntityType.values());\r\n \t\r\n \tpublic final static String REPLICATION_SYNCH_EXPIRATION_TABLE_CREATE = \r\n \t\t\t\"CREATE TABLE IF NOT EXISTS \"+REPLICATION_SYNC_EXPIRATION_TABLE+ \"(\"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \" ENUM(\" + OBJECT_TYPES_ENUM_STRING + \") NOT NULL,\"\r\n \t\t\t+ REPLICATION_SYNC_EXP_COL_ID +\" BIGINT NOT NULL,\"\r\n \t\t\t+ REPLICATION_SYNC_EXP_COL_EXPIRES +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+REPLICATION_SYNC_EXP_COL_ID+\")\"\r\n+\t\t\t+ \"PRIMARY KEY(\"+REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \",\" + REPLICATION_SYNC_EXP_COL_ID+\")\"\r\n \t\t\t+\")\";\r\n+\t\r\n+\tpublic static final String BATCH_INSERT_REPLICATION_SYNC_EXP =\r\n+\t\t\t\"INSERT INTO \"+REPLICATION_SYNC_EXPIRATION_TABLE +\" (\"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \", \"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_ID + \", \"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_EXPIRES\r\n+\t\t\t+\")\"\r\n+\t\t\t+ \" VALUES (?,?,?) ON DUPLICATE KEY UPDATE\"\r\n+\t\t\t+ \" \"+REPLICATION_SYNC_EXP_COL_EXPIRES+\" = ?\";\r\n+\t\r\n+\tpublic static final String SELECT_NON_EXPIRED_IDS =\r\n+\t\t\t\"SELECT \"\r\n+\t\t\t\t\t+REPLICATION_SYNC_EXP_COL_ID\r\n+\t\t\t\t\t+\" FROM \"+REPLICATION_SYNC_EXPIRATION_TABLE\r\n+\t\t\t\t\t+\" WHERE \"\r\n+\t\t\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \" =:\" + OBJECT_TYPE_PARAM_NAME\r\n+\t\t\t\t\t+ \" AND \" + REPLICATION_SYNC_EXP_COL_EXPIRES + \" > :\"+EXPIRES_PARAM_NAME\r\n+\t\t\t\t\t+ \" AND \" + REPLICATION_SYNC_EXP_COL_ID + \" IN (:\" + ID_PARAM_NAME+\")\";\t\r\n+\t\r\n+\tpublic static final String TRUNCATE_REPLICATION_SYNC_EXPIRATION_TABLE = \r\n+\t\t\t\"TRUNCATE TABLE \"+REPLICATION_SYNC_EXPIRATION_TABLE;\t\r\n \r\n-\tpublic final static String ENTITY_REPLICATION_TABLE_CREATE = \"CREATE TABLE IF NOT EXISTS \"+ENTITY_REPLICATION_TABLE+\"(\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_ID +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_VERSION +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_CRATED_BY +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_CRATED_ON +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_ETAG +\" char(36) NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_NAME +\" varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_TYPE +\" ENUM(\"+ENTITY_TYPES+\") NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_PARENT_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_BENEFACTOR_ID +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_PROJECT_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_MODIFIED_BY +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_MODIFIED_ON +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_SIZE_BYTES +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_IN_SYNAPSE_STORAGE +\" boolean DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_MD5 + \" varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+ENTITY_REPLICATION_COL_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_VERSION+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_CRATED_BY+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_CRATED_ON+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_ETAG+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_NAME+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_TYPE+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_PARENT_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_BENEFACTOR_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_PROJECT_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_MODIFIED_BY+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_MODIFIED_ON+\")\"\r\n+\tpublic final static String ENTITY_REPLICATION_TABLE_CREATE = \"CREATE TABLE IF NOT EXISTS \"+OBJECT_REPLICATION_TABLE+\"(\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 149}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzQ5MDg0", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393349084", "createdAt": "2020-04-14T22:52:12Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MjoxMlrOGFjvyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1MjoxMlrOGFjvyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4MTczNg==", "bodyText": "swap order ID is more selective (more unique) than type.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408481736", "createdAt": "2020-04-14T22:52:12Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -97,122 +100,135 @@ public static Long getReservedColumnId(String columnName) {\n \t}\r\n \r\n \t// ENTITY_REPLICATION\r\n-\tpublic static final String ENTITY_REPLICATION_TABLE \t\t\t\t= \"ENTITY_REPLICATION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ID\t\t\t\t= \"ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_VERSION\t\t\t= \"CURRENT_VERSION\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_BY\t\t\t= \"CREATED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_CRATED_ON\t\t\t= \"CREATED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_ETAG\t\t\t\t= \"ETAG\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_NAME\t\t\t\t= \"NAME\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_TYPE\t\t\t\t= \"TYPE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PARENT_ID\t\t\t= \"PARENT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_BENEFACTOR_ID\t\t= \"BENEFACTOR_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_PROJECT_ID\t\t= \"PROJECT_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_BY\t\t= \"MODIFIED_BY\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_MODIFIED_ON\t\t= \"MODIFIED_ON\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_ID\t\t\t= \"FILE_ID\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_SIZE_BYTES\t= \"FILE_SIZE_BYTES\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n-\tpublic static final String ENTITY_REPLICATION_COL_FILE_MD5\t\t\t= \"FILE_MD5\";\r\n+\tpublic static final String OBJECT_REPLICATION_TABLE \t\t\t\t\t= \"OBJECT_REPLICATION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_OBJECT_ID\t\t\t\t= \"OBJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_VERSION\t\t\t\t= \"CURRENT_VERSION\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_BY\t\t\t\t= \"CREATED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_CRATED_ON\t\t\t\t= \"CREATED_ON\";\r\n+\tpublic static final String OBEJCT_REPLICATION_COL_ETAG\t\t\t\t\t= \"ETAG\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_NAME\t\t\t\t\t= \"NAME\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_SUBTYPE\t\t\t\t= \"SUBTYPE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PARENT_ID\t\t\t\t= \"PARENT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_BENEFACTOR_ID\t\t\t= \"BENEFACTOR_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_PROJECT_ID\t\t\t= \"PROJECT_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_BY\t\t\t= \"MODIFIED_BY\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_MODIFIED_ON\t\t\t= \"MODIFIED_ON\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_ID\t\t\t\t= \"FILE_ID\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_SIZE_BYTES\t\t= \"FILE_SIZE_BYTES\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_IN_SYNAPSE_STORAGE\t= \"IN_SYNAPSE_STORAGE\";\r\n+\tpublic static final String OBJECT_REPLICATION_COL_FILE_MD5\t\t\t\t= \"FILE_MD5\";\r\n \r\n \t// REPLICATION_SYNC_EXPIRATION\r\n-\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t= \"ID\";\r\n-\tpublic static final String REPLICATION_SYNC_EXP_COL_EXPIRES\t\t= \"EXPIRES_MS\";\r\n+\tpublic static final String REPLICATION_SYNC_EXPIRATION_TABLE\t\t\t= \"REPLICATION_SYNC_EXPIRATION\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_OBJECT_TYPE\t\t\t= \"OBJECT_TYPE\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_ID \t\t\t\t\t= \"ID\";\r\n+\tpublic static final String REPLICATION_SYNC_EXP_COL_EXPIRES\t\t\t\t= \"EXPIRES_MS\";\r\n \t\r\n-\t// Dynamic string of all of the entity types.\r\n-\tpublic static final String ENTITY_TYPES;\r\n-\tstatic{\r\n-\t\tStringBuilder builder = new StringBuilder();\r\n-\t\tboolean first = true;\r\n-\t\tfor(EntityType type: EntityType.values()){\r\n-\t\t\tif(!first){\r\n-\t\t\t\tbuilder.append(\", \");\r\n-\t\t\t}\r\n-\t\t\tbuilder.append(\"'\");\r\n-\t\t\tbuilder.append(type.name());\r\n-\t\t\tbuilder.append(\"'\");\r\n-\t\t\tfirst = false;\r\n-\t\t}\r\n-\t\tENTITY_TYPES = builder.toString();\r\n-\t}\r\n+\r\n+\tpublic static final String TYPE_PARAM_NAME = \"typeParam\";\r\n+\tpublic static final String OBJECT_TYPE_PARAM_NAME = \"objectType\";\r\n+\tpublic static final String PARENT_ID_PARAM_NAME = \"parentIds\";\r\n+\tpublic static final String ID_PARAM_NAME = \"ids\";\r\n+\tpublic static final String EXPIRES_PARAM_NAME = \"bExpires\";\r\n+\t\r\n+\t// Dynamic string of all the object types, used to build the enum type in the replication table\r\n+\tprivate static final String OBJECT_TYPES_ENUM_STRING = joinEnumForSQL(ObjectType.values());\r\n+\t\r\n+\t// Dynamic string of all of the subtypes (currently only entity types), used to build the enum type in the replication table\r\n+\tprivate static final String ENTITY_TYPES_ENUM_STRING = joinEnumForSQL(EntityType.values());\r\n \t\r\n \tpublic final static String REPLICATION_SYNCH_EXPIRATION_TABLE_CREATE = \r\n \t\t\t\"CREATE TABLE IF NOT EXISTS \"+REPLICATION_SYNC_EXPIRATION_TABLE+ \"(\"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \" ENUM(\" + OBJECT_TYPES_ENUM_STRING + \") NOT NULL,\"\r\n \t\t\t+ REPLICATION_SYNC_EXP_COL_ID +\" BIGINT NOT NULL,\"\r\n \t\t\t+ REPLICATION_SYNC_EXP_COL_EXPIRES +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+REPLICATION_SYNC_EXP_COL_ID+\")\"\r\n+\t\t\t+ \"PRIMARY KEY(\"+REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \",\" + REPLICATION_SYNC_EXP_COL_ID+\")\"\r\n \t\t\t+\")\";\r\n+\t\r\n+\tpublic static final String BATCH_INSERT_REPLICATION_SYNC_EXP =\r\n+\t\t\t\"INSERT INTO \"+REPLICATION_SYNC_EXPIRATION_TABLE +\" (\"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \", \"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_ID + \", \"\r\n+\t\t\t+ REPLICATION_SYNC_EXP_COL_EXPIRES\r\n+\t\t\t+\")\"\r\n+\t\t\t+ \" VALUES (?,?,?) ON DUPLICATE KEY UPDATE\"\r\n+\t\t\t+ \" \"+REPLICATION_SYNC_EXP_COL_EXPIRES+\" = ?\";\r\n+\t\r\n+\tpublic static final String SELECT_NON_EXPIRED_IDS =\r\n+\t\t\t\"SELECT \"\r\n+\t\t\t\t\t+REPLICATION_SYNC_EXP_COL_ID\r\n+\t\t\t\t\t+\" FROM \"+REPLICATION_SYNC_EXPIRATION_TABLE\r\n+\t\t\t\t\t+\" WHERE \"\r\n+\t\t\t\t\t+ REPLICATION_SYNC_EXP_COL_OBJECT_TYPE + \" =:\" + OBJECT_TYPE_PARAM_NAME\r\n+\t\t\t\t\t+ \" AND \" + REPLICATION_SYNC_EXP_COL_EXPIRES + \" > :\"+EXPIRES_PARAM_NAME\r\n+\t\t\t\t\t+ \" AND \" + REPLICATION_SYNC_EXP_COL_ID + \" IN (:\" + ID_PARAM_NAME+\")\";\t\r\n+\t\r\n+\tpublic static final String TRUNCATE_REPLICATION_SYNC_EXPIRATION_TABLE = \r\n+\t\t\t\"TRUNCATE TABLE \"+REPLICATION_SYNC_EXPIRATION_TABLE;\t\r\n \r\n-\tpublic final static String ENTITY_REPLICATION_TABLE_CREATE = \"CREATE TABLE IF NOT EXISTS \"+ENTITY_REPLICATION_TABLE+\"(\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_ID +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_VERSION +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_CRATED_BY +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_CRATED_ON +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_ETAG +\" char(36) NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_NAME +\" varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_TYPE +\" ENUM(\"+ENTITY_TYPES+\") NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_PARENT_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_BENEFACTOR_ID +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_PROJECT_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_MODIFIED_BY +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_MODIFIED_ON +\" BIGINT NOT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_ID +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_SIZE_BYTES +\" BIGINT DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_IN_SYNAPSE_STORAGE +\" boolean DEFAULT NULL,\"\r\n-\t\t\t+ ENTITY_REPLICATION_COL_FILE_MD5 + \" varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+ENTITY_REPLICATION_COL_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_VERSION+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_CRATED_BY+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_CRATED_ON+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_ETAG+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_NAME+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_TYPE+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_PARENT_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_BENEFACTOR_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_PROJECT_ID+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_MODIFIED_BY+\")\"\r\n-\t\t\t+ \", INDEX (\"+ENTITY_REPLICATION_COL_MODIFIED_ON+\")\"\r\n+\tpublic final static String ENTITY_REPLICATION_TABLE_CREATE = \"CREATE TABLE IF NOT EXISTS \"+OBJECT_REPLICATION_TABLE+\"(\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_OBJECT_TYPE + \" ENUM(\" + OBJECT_TYPES_ENUM_STRING+\") NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_OBJECT_ID +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_VERSION +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_CRATED_BY +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_CRATED_ON +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBEJCT_REPLICATION_COL_ETAG +\" char(36) NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_NAME +\" varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_SUBTYPE +\" ENUM(\"+ENTITY_TYPES_ENUM_STRING+\") NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_PARENT_ID +\" BIGINT DEFAULT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_BENEFACTOR_ID +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_PROJECT_ID +\" BIGINT DEFAULT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_MODIFIED_BY +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_MODIFIED_ON +\" BIGINT NOT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_FILE_ID +\" BIGINT DEFAULT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_FILE_SIZE_BYTES +\" BIGINT DEFAULT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_IN_SYNAPSE_STORAGE +\" boolean DEFAULT NULL,\"\r\n+\t\t\t+ OBJECT_REPLICATION_COL_FILE_MD5 + \" varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\"\r\n+\t\t\t+ \"PRIMARY KEY(\"+ OBJECT_REPLICATION_COL_OBJECT_TYPE + \", \" +OBJECT_REPLICATION_COL_OBJECT_ID+\")\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 167}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzUxNTI5", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393351529", "createdAt": "2020-04-14T22:58:43Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1ODo0M1rOGFj40g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjo1ODo0M1rOGFj40g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NDA1MA==", "bodyText": "ID first then type", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408484050", "createdAt": "2020-04-14T22:58:43Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -265,15 +268,17 @@ public static Long getReservedColumnId(String columnName) {\n \t\t\t+ ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE + \" JSON,\"\r\n \t\t\t+ ANNOTATION_REPLICATION_COL_LONG_LIST_VALUE+\" JSON,\"\r\n \t\t\t+ ANNOTATION_REPLICATION_COL_BOOLEAN_LIST_VALUE+\" JSON,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\",\"+ANNOTATION_REPLICATION_COL_TYPE+\"),\"\r\n-\t\t\t+ \"INDEX `ENTITY_ID_IDX` (\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\"),\"\r\n-\t\t\t+ \"INDEX `ENTITY_ID_ANNO_KEY_IDX` (\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\"),\"\r\n+\t\t\t+ \"PRIMARY KEY(\"+ANNOTATION_REPLICATION_COL_OBJECT_TYPE +\",\" +ANNOTATION_REPLICATION_COL_OBJECT_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\",\"+ANNOTATION_REPLICATION_COL_TYPE+\"),\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 295}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzUyMzc5", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393352379", "createdAt": "2020-04-14T23:00:58Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzowMDo1OFrOGFj7_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzowMDo1OFrOGFj7_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NDg2MA==", "bodyText": "put in the same order...reasons", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408484860", "createdAt": "2020-04-14T23:00:58Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -265,15 +268,17 @@ public static Long getReservedColumnId(String columnName) {\n \t\t\t+ ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE + \" JSON,\"\r\n \t\t\t+ ANNOTATION_REPLICATION_COL_LONG_LIST_VALUE+\" JSON,\"\r\n \t\t\t+ ANNOTATION_REPLICATION_COL_BOOLEAN_LIST_VALUE+\" JSON,\"\r\n-\t\t\t+ \"PRIMARY KEY(\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\",\"+ANNOTATION_REPLICATION_COL_TYPE+\"),\"\r\n-\t\t\t+ \"INDEX `ENTITY_ID_IDX` (\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\"),\"\r\n-\t\t\t+ \"INDEX `ENTITY_ID_ANNO_KEY_IDX` (\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\"),\"\r\n+\t\t\t+ \"PRIMARY KEY(\"+ANNOTATION_REPLICATION_COL_OBJECT_TYPE +\",\" +ANNOTATION_REPLICATION_COL_OBJECT_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\",\"+ANNOTATION_REPLICATION_COL_TYPE+\"),\"\r\n+\t\t\t+ \"INDEX `OBJECT_TYPE_OBJECT_ID_IDX` (\"+ANNOTATION_REPLICATION_COL_OBJECT_TYPE + \",\" + ANNOTATION_REPLICATION_COL_OBJECT_ID+\"),\"\r\n+\t\t\t+ \"INDEX `OBJECT_TYPE_OBJECT_ID_ANNO_KEY_IDX` (\"+ANNOTATION_REPLICATION_COL_OBJECT_TYPE +\",\"+ ANNOTATION_REPLICATION_COL_OBJECT_ID+\",\"+ANNOTATION_REPLICATION_COL_KEY+\"),\"\r\n \t\t\t+ \"INDEX `STRING_VALUE_IDX`(\"+ANNOTATION_REPLICATION_COL_STRING_VALUE+\"),\"\r\n-\t\t\t+\" CONSTRAINT `ENTITY_ID_FK` FOREIGN KEY (\"+ANNOTATION_REPLICATION_COL_ENTITY_ID+\") REFERENCES \"+ENTITY_REPLICATION_TABLE+\" (\"+ENTITY_REPLICATION_COL_ID+\") ON DELETE CASCADE \"\r\n+\t\t\t+\" CONSTRAINT `OBJECT_TYPE_OBJECT_ID_FK` FOREIGN KEY (\"+ANNOTATION_REPLICATION_COL_OBJECT_TYPE + \",\" + ANNOTATION_REPLICATION_COL_OBJECT_ID+\") REFERENCES \"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 300}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzU5MTU3", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393359157", "createdAt": "2020-04-14T23:19:37Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzoxOTozOFrOGFkUGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzoxOTozOFrOGFkUGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MTAzMg==", "bodyText": "dao test where there are two objects with the same ID", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408491032", "createdAt": "2020-04-14T23:19:38Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -1923,23 +1926,24 @@ public void testCreateSelectFromEntityReplication(){\n \t\tLong viewTypeMask = ViewTypeMask.File.getMask();\r\n \t\tStringBuilder builder = new StringBuilder();\r\n \t\tboolean filterByRows = false;\r\n-\t\tList<String> headers = SQLUtils.createSelectFromEntityReplication(builder, viewId, viewTypeMask, schema, filterByRows);\r\n+\t\tList<String> headers = SQLUtils.createSelectFromObjectReplication(builder, viewId, viewTypeMask, schema, filterByRows);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzYwMDU3", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393360057", "createdAt": "2020-04-14T23:22:07Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzoyMjowN1rOGFkXRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzoyMjowN1rOGFkXRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5MTg0NA==", "bodyText": "what happens if you remove this.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408491844", "createdAt": "2020-04-14T23:22:07Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -2038,22 +2045,24 @@ public void testCreateSelectInsertFromEntityReplicationProjectView(){\n \t\tList<ColumnModel> schema = Lists.newArrayList(one, id);\r\n \t\tLong viewTypeMask = ViewTypeMask.Project.getMask();\r\n \t\tboolean filterByRows = false;\r\n-\t\tString sql = SQLUtils.createSelectInsertFromEntityReplication(viewId, viewTypeMask, schema, filterByRows);\r\n+\t\tString sql = SQLUtils.createSelectInsertFromObjectReplication(viewId, viewTypeMask, schema, filterByRows);\r\n \t\tassertEquals(\"INSERT INTO T123(ROW_ID, ROW_VERSION, ROW_ETAG, ROW_BENEFACTOR, _C1_, _C2_)\"\r\n \t\t\t\t+ \" SELECT\"\r\n-\t\t\t\t+ \" R.ID,\"\r\n+\t\t\t\t+ \" R.OBJECT_ID,\"\r\n \t\t\t\t+ \" MAX(R.CURRENT_VERSION) AS CURRENT_VERSION,\"\r\n \t\t\t\t+ \" MAX(R.ETAG) AS ETAG,\"\r\n \t\t\t\t+ \" MAX(R.BENEFACTOR_ID) AS BENEFACTOR_ID,\"\r\n \t\t\t\t+ \" MAX(IF(A.ANNO_KEY ='col_1', A.STRING_VALUE, NULL)) AS _C1_,\"\r\n-\t\t\t\t+ \" MAX(R.ID) AS ID\"\r\n+\t\t\t\t+ \" MAX(R.OBJECT_ID) AS OBJECT_ID\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 261}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzY1NDQ2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393365446", "createdAt": "2020-04-14T23:37:48Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzozNzo0OFrOGFkqug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzozNzo0OFrOGFkqug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ5NjgyNg==", "bodyText": "need a test for the case where two types with the same id.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408496826", "createdAt": "2020-04-14T23:37:48Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -2924,19 +2914,21 @@ public void testGetOutOfDateRowsForViewSqlFileView() {\n \t\t// call under test\r\n \t\tString sql = SQLUtils.getOutOfDateRowsForViewSql(tableId, viewTypeMask);\r\n \t\tString expected = \"WITH DELTAS (ID, MISSING) AS (\"\r\n-\t\t\t\t+ \" SELECT R.ID, V.ROW_ID FROM ENTITY_REPLICATION R\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 680}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzY5ODkx", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393369891", "createdAt": "2020-04-14T23:51:17Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzo1MToxN1rOGFk6pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMzo1MToxN1rOGFk6pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwMDkwMw==", "bodyText": "make a method of TableManagerSupport.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#discussion_r408500903", "createdAt": "2020-04-14T23:51:17Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/table/TableIndexManagerImpl.java", "diffHunk": "@@ -654,21 +664,29 @@ public void updateViewRowsInTransaction(IdAndVersion viewId, Set<Long> rowsIdsWi\n \t\tValidateArgument.required(viewTypeMask, \"viewTypeMask\");\r\n \t\tValidateArgument.required(allContainersInScope, \"allContainersInScope\");\r\n \t\tValidateArgument.required(currentSchema, \"currentSchema\");\r\n+\t\t\r\n+\t\tObjectType objectType = getViewObjectType(viewId.getId());\r\n+\t\t\r\n \t\t// all calls are in a single transaction.\r\n \t\ttableIndexDao.executeInWriteTransaction((TransactionStatus status) -> {\r\n \t\t\tLong[] rowsIdsArray = rowsIdsWithChanges.stream().toArray(Long[] ::new); \r\n  \t\t\t// First delete the provided rows from the view\r\n \t\t\ttableIndexDao.deleteRowsFromViewBatch(viewId, rowsIdsArray);\r\n \t\t\ttry {\r\n \t\t\t\t// Apply any updates to the view for the given Ids\r\n-\t\t\t\ttableIndexDao.copyEntityReplicationToView(viewId.getId(), viewTypeMask, allContainersInScope, currentSchema, rowsIdsWithChanges);\r\n+\t\t\t\ttableIndexDao.copyEntityReplicationToView(objectType, viewId.getId(), viewTypeMask, allContainersInScope, currentSchema, rowsIdsWithChanges);\r\n \t\t\t\tpopulateListColumnIndexTables(viewId, currentSchema, rowsIdsWithChanges);\r\n \t\t\t} catch (Exception e) {\r\n \t\t\t\t// if the copy failed. Attempt to determine the cause.  This will always throw an exception.\r\n-\t\t\t\tdetermineCauseOfReplicationFailure(e, currentSchema,  allContainersInScope, viewTypeMask);\r\n+\t\t\t\tdetermineCauseOfReplicationFailure(e, objectType, currentSchema,  allContainersInScope, viewTypeMask);\r\n \t\t\t}\r\n \t\t\treturn null;\r\n \t\t});\r\n \t}\r\n+\t\r\n+\tprivate ObjectType getViewObjectType(Long viewId) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzcyODYw", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3999#pullrequestreview-393372860", "createdAt": "2020-04-15T00:00:12Z", "commit": {"oid": "73f2c8818042fcef86c0f50d7a94f8474f50d040"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4860, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}