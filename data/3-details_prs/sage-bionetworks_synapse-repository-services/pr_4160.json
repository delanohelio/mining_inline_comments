{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTYxNjEy", "number": 4160, "title": "Plfm 6327 b", "bodyText": "", "createdAt": "2020-08-13T18:27:50Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160", "merged": true, "mergeCommit": {"oid": "15c3e1cb068fda7ba558c89db748e1ca27874d81"}, "closed": true, "closedAt": "2020-08-14T02:25:24Z", "author": {"login": "john-hill"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8ugDfgH2gAyNDY3NTYxNjEyOjE2ZjE1NzZmZWM0MjljYmJiMDRkZTEzZmRkZTNjNGJhMTRmY2MyYTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-qRFyAFqTQ2NzI0MDA5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16f1576fec429cbbb04de13fdde3c4ba14fcc2a0", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/16f1576fec429cbbb04de13fdde3c4ba14fcc2a0", "committedDate": "2020-08-08T01:12:11Z", "message": "started stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f31a4b38851101c4d8c1c16636c014ddd4ea3773", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/f31a4b38851101c4d8c1c16636c014ddd4ea3773", "committedDate": "2020-08-12T01:42:37Z", "message": "code review changes and more test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66c9a8b285cb4d6439556e4ba83e5829a5f6438c", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/66c9a8b285cb4d6439556e4ba83e5829a5f6438c", "committedDate": "2020-08-13T03:45:02Z", "message": "more testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2edd28813af9a4cbbfbbdf4dd739d72bd153312", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/c2edd28813af9a4cbbfbbdf4dd739d72bd153312", "committedDate": "2020-08-13T18:22:59Z", "message": "ready to test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/1c2a1579cc7899e3e3882476d2618dba40121c5d", "committedDate": "2020-08-13T18:39:16Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9377d420cbc6eb443883281822a03696939414cc", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/9377d420cbc6eb443883281822a03696939414cc", "committedDate": "2020-08-14T01:23:08Z", "message": "change put to post"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjQwMDk2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#pullrequestreview-467240096", "createdAt": "2020-08-14T00:36:56Z", "commit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDozNjo1NlrOHAi7zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMToxMzowMlrOHAkZuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMzNDQxMw==", "bodyText": "entityId -> containerId", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#discussion_r470334413", "createdAt": "2020-08-14T00:36:56Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/schema/EntitySchemaValidationResultDao.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.sagebionetworks.repo.model.dbo.schema;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.sagebionetworks.repo.model.schema.ValidationResults;\n+import org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics;\n+\n+public interface EntitySchemaValidationResultDao {\n+\n+\t/**\n+\t * Get the entity validation results for the given Entity.\n+\t * \n+\t * @param entityId\n+\t * @return\n+\t */\n+\tValidationResults getValidationResults(String entityId);\n+\n+\t/**\n+\t * Get the JSON schema validation statistics for the given container ID.\n+\t * \n+\t * @param entityId\n+\t * @param childIdsToExclude The children of the container that the caller lacks\n+\t *                          permission to read. These children must be excluded\n+\t *                          from the results.\n+\t * @return\n+\t */\n+\tValidationSummaryStatistics getEntityValidationStatistics(String entityId, Set<Long> childIdsToExclude);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMzNjk3Mg==", "bodyText": "Might want to use a StringBuilder and/or move the childeIdsToExclude.isEmpty() check down here to improve a bit the readability", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#discussion_r470336972", "createdAt": "2020-08-14T00:41:01Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/schema/EntitySchemaValidationResultDaoImpl.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.sagebionetworks.repo.model.dbo.schema;\n+\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.COL_JSON_SCHEMA_VALIDATION_IS_VALID;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.COL_JSON_SCHEMA_VALIDATION_OBJECT_ID;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.COL_JSON_SCHEMA_VALIDATION_OBJECT_TYPE;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.COL_NODE_ID;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.COL_NODE_PARENT_ID;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.TABLE_NODE;\n+import static org.sagebionetworks.repo.model.query.jdo.SqlConstants.TABLE_SCHEMA_VALIDATION_RESULTS;\n+\n+import java.sql.ResultSet;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.sagebionetworks.repo.model.jdo.KeyFactory;\n+import org.sagebionetworks.repo.model.schema.ObjectType;\n+import org.sagebionetworks.repo.model.schema.ValidationResults;\n+import org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics;\n+import org.sagebionetworks.util.ValidateArgument;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public class EntitySchemaValidationResultDaoImpl implements EntitySchemaValidationResultDao {\n+\n+\tprivate static final String OFFSET = \"offset\";\n+\n+\tprivate static final String LIMIT = \"limit\";\n+\n+\tprivate static final String OBJECT_TYPE = \"objectType\";\n+\n+\tprivate static final String CHILD_IDS_TO_EXCLUDE = \"childIdsToExclude\";\n+\n+\tpublic static final String CONTAINER_ID = \"containerId\";\n+\n+\tNamedParameterJdbcTemplate namedParameterJdbcTemplate;\n+\tSchemaValidationResultDao schemaValidationResultDao;\n+\n+\t@Autowired\n+\tpublic EntitySchemaValidationResultDaoImpl(NamedParameterJdbcTemplate namedParameterJdbcTemplate,\n+\t\t\tSchemaValidationResultDao schemaValidationResultDao) {\n+\t\tsuper();\n+\t\tthis.namedParameterJdbcTemplate = namedParameterJdbcTemplate;\n+\t\tthis.schemaValidationResultDao = schemaValidationResultDao;\n+\t}\n+\n+\t@Override\n+\tpublic ValidationResults getValidationResults(String entityId) {\n+\t\treturn schemaValidationResultDao.getValidationResults(entityId, ObjectType.entity);\n+\t}\n+\n+\t@Override\n+\tpublic ValidationSummaryStatistics getEntityValidationStatistics(String containerId, Set<Long> childIdsToExclude) {\n+\t\tValidateArgument.required(containerId, CONTAINER_ID);\n+\t\tValidateArgument.required(childIdsToExclude, CHILD_IDS_TO_EXCLUDE);\n+\t\tMapSqlParameterSource paramSource = new MapSqlParameterSource();\n+\t\tparamSource.addValue(CONTAINER_ID, KeyFactory.stringToKey(containerId));\n+\t\tparamSource.addValue(CHILD_IDS_TO_EXCLUDE, childIdsToExclude);\n+\t\tparamSource.addValue(OBJECT_TYPE, ObjectType.entity.name());\n+\t\tString excludeChildfilter = \"\";\n+\t\tif (!childIdsToExclude.isEmpty()) {\n+\t\t\texcludeChildfilter = \" AND N.\" + COL_NODE_ID + \" NOT IN (:\" + CHILD_IDS_TO_EXCLUDE + \")\";\n+\t\t}\n+\t\tValidationSummaryStatistics results = new ValidationSummaryStatistics();\n+\t\tresults.setContainerId(containerId);\n+\t\tresults.setGeneratedOn(new Date());\n+\t\t// default all values to zero\n+\t\tresults.setNumberOfInvalidChildren(0L);\n+\t\tresults.setNumberOfValidChildren(0L);\n+\t\tresults.setNumberOfUnknownChildren(0L);\n+\t\tString sql = \"SELECT S.\" + COL_JSON_SCHEMA_VALIDATION_IS_VALID + \", COUNT(*) FROM \" + TABLE_NODE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0NzU2NQ==", "bodyText": "Might want to specify folder or project.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#discussion_r470347565", "createdAt": "2020-08-14T00:56:54Z", "author": {"login": "marcomarasca"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/schema/ListValidationResultsRequest.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+\t\"description\": \"Request to get a single page of JSON schema validation results for a given Entity container.\",\n+\t\"properties\": {\n+\t\t\"containerId\": {\n+\t\t\t\"type\": \"string\",\n+\t\t\t\"description\": \"The ID of the Entity container to get.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0NzgwNg==", "bodyText": "MIght want to add folder or project", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#discussion_r470347806", "createdAt": "2020-08-14T00:57:14Z", "author": {"login": "marcomarasca"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/schema/ValidationSummaryStatistics.json", "diffHunk": "@@ -0,0 +1,30 @@\n+{\n+\t\"description\": \"Summary statistics for the JSON schema validation results for the children of an Entity container (Project or Folder)\",\n+\t\"properties\": {\n+\t\t\"containerId\": {\n+\t\t\t\"type\": \"string\",\n+\t\t\t\"description\": \"The ID of the container Entity.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM1ODQ1Nw==", "bodyText": "Should be a POST?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4160#discussion_r470358457", "createdAt": "2020-08-14T01:13:02Z", "author": {"login": "marcomarasca"}, "path": "services/repository/src/main/java/org/sagebionetworks/repo/web/controller/EntityController.java", "diffHunk": "@@ -1693,4 +1696,56 @@ public void clearBoundSchema(@RequestParam(value = AuthorizationConstants.USER_I\n \t\t\t@PathVariable(required = true) String id) {\n \t\treturn serviceProvider.getEntityService().getEntitySchemaValidationResults(userId, id);\n \t}\n+\n+\t/**\n+\t * Get the The summary statistics of the JSON schema validation results for a\n+\t * single container Entity such as a Project or Folder. Only direct children of\n+\t * the container are included in the results. The statistics include the total\n+\t * number of children in the container, and the counts for both the invalid and\n+\t * valid children.\n+\t * <p>\n+\t * Note: The caller must be granted the\n+\t * <a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\" >ACCESS_TYPE.READ</a>\n+\t * permission on the container Entity. The resulting statistics will only include\n+\t * children that the caller has the READ permission on.\n+\t * </p>\n+\t * \n+\t * @param userId\n+\t * @param id     The ID of the container Entity.\n+\t * @return\n+\t */\n+\t@RequiredScope({ view })\n+\t@ResponseStatus(HttpStatus.OK)\n+\t@RequestMapping(value = { UrlHelpers.ENTITY_ID_VALIDATION_STATISTICS }, method = RequestMethod.GET)\n+\tpublic @ResponseBody ValidationSummaryStatistics getEntitySchemaValidationStatistics(\n+\t\t\t@RequestParam(value = AuthorizationConstants.USER_ID_PARAM) Long userId,\n+\t\t\t@PathVariable(required = true) String id) {\n+\t\treturn serviceProvider.getEntityService().getEntitySchemaValidationSummaryStatistics(userId, id);\n+\t}\n+\n+\t/**\n+\t * Get a single page of invalid JSON schema validation results for a container\n+\t * Entity (Project or Folder).\n+\t * <p>\n+\t * Note: The caller must be granted the\n+\t * <a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\" >ACCESS_TYPE.READ</a>\n+\t * permission on the container Entity. The results will only include\n+\t * children that the caller has the READ permission on.\n+\t * </p>\n+\t * \n+\t * @param userId\n+\t * @param id\n+\t * @param request\n+\t * @return\n+\t */\n+\t@RequiredScope({ view })\n+\t@ResponseStatus(HttpStatus.OK)\n+\t@RequestMapping(value = { UrlHelpers.ENTITY_ID_VALIDATION_INVALID }, method = RequestMethod.PUT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c2a1579cc7899e3e3882476d2618dba40121c5d"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4625, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}