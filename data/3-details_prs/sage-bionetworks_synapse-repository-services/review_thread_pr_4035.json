{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0Nzc2NDMw", "number": 4035, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoxODoyNVrOD6WCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODowODo1NVrOD6XLsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTA1MDY5OnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoxODoyNVrOGSIcvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoxODoyNVrOGSIcvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY2NTk4Mw==", "bodyText": "rename", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4035#discussion_r421665983", "createdAt": "2020-05-07T17:18:25Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -3020,7 +3023,66 @@ public void testGetDeleteRowsFromViewSql() {\n \t\tassertEquals(\"DELETE FROM T999 WHERE ROW_ID = ?\", sql);\r\n \t}\r\n \t\r\n-\tprivate SQLScopeFilter getSQLScopeFilter(Long typeMask) {\r\n-\t\treturn new SQLScopeFilterBuilder(scopeFilterProvider, typeMask).build();\r\n+\t@Test\r\n+\tpublic void testGetViewScopeSubTypeFilterWithSingleType(){\r\n+\t\tList<Enum<?>> subTypes = ImmutableList.of(EntityType.file);\r\n+\t\tboolean filterByObjectId = false;\r\n+\t\t\r\n+\t\tViewScopeFilter scopeFilter = getSQLScopeFilter(subTypes, filterByObjectId);\r\n+\t\t\r\n+\t\tString result = SQLUtils.getViewScopeSubTypeFilter(scopeFilter);\r\n+\t\tassertEquals(\"R.SUBTYPE IN ('file')\", result);\r\n+\t}\r\n+\r\n+\t@Test\r\n+\tpublic void testGetViewScopeSubTypeFilterWithMultipleTypes(){\r\n+\t\tList<Enum<?>> subTypes = ImmutableList.of(EntityType.file, EntityType.table);\r\n+\t\tboolean filterByObjectId = false;\r\n+\t\t\r\n+\t\tViewScopeFilter scopeFilter = getSQLScopeFilter(subTypes, filterByObjectId);\r\n+\t\t\r\n+\t\tString result = SQLUtils.getViewScopeSubTypeFilter(scopeFilter);\r\n+\t\tassertEquals(\"R.SUBTYPE IN ('file','table')\", result);\r\n+\t}\r\n+\r\n+\t@Test\r\n+\tpublic void testGetViewScopeSubTypeFilterWithAllEntityTypes(){\r\n+\t\tList<Enum<?>> subTypes = Arrays.asList(EntityType.values());\r\n+\t\tboolean filterByObjectId = false;\r\n+\t\t\r\n+\t\tViewScopeFilter scopeFilter = getSQLScopeFilter(subTypes, filterByObjectId);\r\n+\t\t\r\n+\t\tString result = SQLUtils.getViewScopeSubTypeFilter(scopeFilter);\r\n+\t\tassertEquals(\"R.SUBTYPE IN ('project','folder','file','table','link','entityview','dockerrepo')\", result);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testGetViewScopeFilterColumn() {\r\n+\t\tList<Enum<?>> subTypes = ImmutableList.of(EntityType.file);\r\n+\t\t\r\n+\t\tboolean filterByObjectId = false;\r\n+\t\t\r\n+\t\tViewScopeFilter scopeFilter = getSQLScopeFilter(subTypes, filterByObjectId);\r\n+\t\t\r\n+\t\tString result = SQLUtils.getViewScopeFilterColumn(scopeFilter);\r\n+\t\t\r\n+\t\tassertEquals(TableConstants.OBJECT_REPLICATION_COL_PARENT_ID, result);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testGetViewScopeFilterColumnWithFilterByObjectId() {\r\n+\t\tList<Enum<?>> subTypes = ImmutableList.of(EntityType.file);\r\n+\t\t\r\n+\t\tboolean filterByObjectId = true;\r\n+\t\t\r\n+\t\tViewScopeFilter scopeFilter = getSQLScopeFilter(subTypes, filterByObjectId);\r\n+\t\t\r\n+\t\tString result = SQLUtils.getViewScopeFilterColumn(scopeFilter);\r\n+\t\t\r\n+\t\tassertEquals(TableConstants.OBJECT_REPLICATION_COL_OBJECT_ID, result);\r\n+\t}\r\n+\t\r\n+\tprivate ViewScopeFilter getSQLScopeFilter(List<Enum<?>> subTypes, boolean filterByObjectId) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb28d9909850f1b130d1d0d258f62f572ab520"}, "originalPosition": 351}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTE5NjE0OnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/metadata/ObjectFieldTypeMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo1Nzo0NVrOGSJ40g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzo1Nzo0NVrOGSJ40g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY4OTU1NA==", "bodyText": "remove it not needed", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4035#discussion_r421689554", "createdAt": "2020-05-07T17:57:45Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/metadata/ObjectFieldTypeMapper.java", "diffHunk": "@@ -10,6 +11,11 @@\n  * @author Marco Marasca\r\n  */\r\n public interface ObjectFieldTypeMapper {\r\n+\t\r\n+\t/**\r\n+\t * @return The object type this mapper applies to\r\n+\t */\r\n+\tObjectType getObjectType();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb28d9909850f1b130d1d0d258f62f572ab520"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTIzODI0OnYy", "diffSide": "RIGHT", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/ViewScopeFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODowODo1NVrOGSKTQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODowODo1NVrOGSKTQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5NjMyMg==", "bodyText": "Consider a List here since at this level it does not matter that they were enums.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4035#discussion_r421696322", "createdAt": "2020-05-07T18:08:55Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/ViewScopeFilter.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.sagebionetworks.repo.model.table;\r\n+\r\n+import java.util.List;\r\n+import java.util.Objects;\r\n+import java.util.Set;\r\n+\r\n+import org.sagebionetworks.repo.model.ObjectType;\r\n+\r\n+/**\r\n+ * DTO that specifies the scope filter to apply when working with a view\r\n+ * \r\n+ * @author Marco Marasca\r\n+ */\r\n+public class ViewScopeFilter {\r\n+\r\n+\tprivate final ObjectType objectType;\r\n+\tprivate final List<Enum<?>> subTypes;\r\n+\tprivate final boolean filterByObjectId;\r\n+\tprivate final Set<Long> containerIds;\r\n+\r\n+\tpublic ViewScopeFilter(ObjectType objectType, List<Enum<?>> subTypes, boolean filterByObjectId, Set<Long> containerIds) {\r\n+\t\tthis.objectType = objectType;\r\n+\t\tthis.subTypes = subTypes;\r\n+\t\tthis.filterByObjectId = filterByObjectId;\r\n+\t\tthis.containerIds = containerIds;\r\n+\t}\r\n+\t\r\n+\tpublic ObjectType getObjectType() {\r\n+\t\treturn objectType;\r\n+\t}\r\n+\r\n+\tpublic List<Enum<?>> getSubTypes() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdb28d9909850f1b130d1d0d258f62f572ab520"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3027, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}