{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMDY2NTY1", "number": 4053, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTo1MTo0MFrOD_FC2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTo1MTo0MFrOD_FC2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDY5NTI4OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/loginlockout/ExponentialBackoffLoginLockoutStatusImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTo1MTo0MFrOGZkiCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTo1MTo0MFrOGZkiCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NjEyMA==", "bodyText": "Optional foo = unsuccessfulLoginLockoutDAO.getUnsuccessfulLoginLockoutInfoIfExist(userId);\nif (foo.isPresent()) {\nlockoutinfo = foo.get();\n} else {\nlockoutinfo =  new UnsuccessfulLoginLockoutDTO(userId);\n}", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4053#discussion_r429466120", "createdAt": "2020-05-22T21:51:40Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/loginlockout/ExponentialBackoffLoginLockoutStatusImpl.java", "diffHunk": "@@ -16,11 +16,8 @@\n \tpublic LoginAttemptResultReporter checkIsLockedOut(long userId) {\n \t\t// Use database's unix timestamp for expiration check\n \t\t// instead of this machine's timestamp to avoid time sync issues across all machines\n-\t\tUnsuccessfulLoginLockoutDTO lockoutInfo = unsuccessfulLoginLockoutDAO.getUnsuccessfulLoginLockoutInfoIfExist(userId);\n-\n-\t\tif (lockoutInfo == null){\n-\t\t\tlockoutInfo = new UnsuccessfulLoginLockoutDTO(userId);\n-\t\t}\n+\t\tUnsuccessfulLoginLockoutDTO lockoutInfo = unsuccessfulLoginLockoutDAO.getUnsuccessfulLoginLockoutInfoIfExist(userId)\n+\t\t\t\t.orElseGet(() -> new UnsuccessfulLoginLockoutDTO(userId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77925e786ade03cb02518ed0e3fef593d7b10d3"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}