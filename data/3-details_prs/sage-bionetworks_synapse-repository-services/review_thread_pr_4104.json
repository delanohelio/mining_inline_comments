{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDUxMzk4", "number": 4104, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozNDo1NFrOEH-L6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OTowMFrOEIEqZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2Nzk0MzQ3OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozNDo1NFrOGnphLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzoyNjowNFrOGnzTlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNzg4Nw==", "bodyText": "I didn't change this error message because I am not sure what the proper error code should be (of the error codes in the OIDC section in the commented URL).", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444227887", "createdAt": "2020-06-23T13:34:54Z", "author": {"login": "nickgros"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -205,14 +208,15 @@ public boolean hasUserGrantedConsent(UserInfo userInfo, OIDCAuthorizationRequest\n \tpublic OAuthAuthorizationResponse authorizeClient(UserInfo userInfo,\n \t\t\tOIDCAuthorizationRequest authorizationRequest) {\n \t\tif (AuthorizationUtils.isUserAnonymous(userInfo)) {\n+\t\t\t// Perhaps this should be an OIDC Error Code: https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n \t\t\tthrow new UnauthorizedException(\"Anonymous users may not provide access to OAuth clients.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b4a5746046eea4457e786f14deb0dd525459f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4ODI0NQ==", "bodyText": "login_required", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444388245", "createdAt": "2020-06-23T17:26:04Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -205,14 +208,15 @@ public boolean hasUserGrantedConsent(UserInfo userInfo, OIDCAuthorizationRequest\n \tpublic OAuthAuthorizationResponse authorizeClient(UserInfo userInfo,\n \t\t\tOIDCAuthorizationRequest authorizationRequest) {\n \t\tif (AuthorizationUtils.isUserAnonymous(userInfo)) {\n+\t\t\t// Perhaps this should be an OIDC Error Code: https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n \t\t\tthrow new UnauthorizedException(\"Anonymous users may not provide access to OAuth clients.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNzg4Nw=="}, "originalCommit": {"oid": "8c1b4a5746046eea4457e786f14deb0dd525459f"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2Nzk1OTI0OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozODoyOFrOGnprOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzozODoyOFrOGnprOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzMDQ1OQ==", "bodyText": "Per OAuth 2.1, using a revoked access token should result in a 403, not a 400.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444230459", "createdAt": "2020-06-23T13:38:28Z", "author": {"login": "nickgros"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -270,7 +274,7 @@ public String validateAccessToken(String jwtToken) {\n \t\tString userId = getUserIdFromPPID(claims.getSubject(), claims.getAudience());\n \t\tString refreshTokenId = claims.get(OIDCClaimName.refresh_token_id.name(), String.class);\n \t\tif (refreshTokenId != null && !oauthRefreshTokenManager.isRefreshTokenActive(refreshTokenId)) {\n-\t\t\tthrow new IllegalArgumentException(\"The access token has been revoked\");\n+\t\t\tthrow new OAuthUnauthenticatedException(OAuthErrorCode.invalid_token, \"The access token has been revoked\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b4a5746046eea4457e786f14deb0dd525459f"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODAzMjcwOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo1NDoyNFrOGnqZ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMzo1NDoyNFrOGnqZ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MjQxNA==", "bodyText": "Why was this ISE?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444242414", "createdAt": "2020-06-23T13:54:24Z", "author": {"login": "nickgros"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/oauth/OpenIDConnectManagerImpl.java", "diffHunk": "@@ -314,25 +318,25 @@ public OIDCTokenResponse generateTokenResponseWithAuthorizationCode(String code,\n \t\ttry {\n \t\t\tserializedAuthorizationRequest = stackEncrypter.decryptStackEncryptedAndBase64EncodedString(code);\n \t\t} catch (Exception e) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid authorization code: \"+code, e);\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Invalid authorization code: \"+code, e);\n \t\t}\n \t\tOIDCAuthorizationRequest authorizationRequest = new OIDCAuthorizationRequest();\n \t\ttry {\n \t\t\tJSONObjectAdapter adapter = new JSONObjectAdapterImpl(serializedAuthorizationRequest);\n \t\t\tauthorizationRequest.initializeFromJSONObject(adapter);\n \t\t} catch (JSONObjectAdapterException e) {\n-\t\t\tthrow new IllegalStateException(\"Incorrectly formatted authorization code: \"+code, e);\n+\t\t\tthrow new OAuthBadRequestException(OAuthErrorCode.invalid_grant, \"Incorrectly formatted authorization code: \"+code, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1b4a5746046eea4457e786f14deb0dd525459f"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODkzODc2OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozMTozNlrOGnzgCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozMTozNlrOGnzgCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MTQzNA==", "bodyText": "this will go away", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444391434", "createdAt": "2020-06-23T17:31:36Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverter.java", "diffHunk": "@@ -242,6 +243,8 @@ public void write(JSONEntity entity, final MediaType contentType,\n \tpublic static String convertEntityToPlainText(JSONEntity entity) throws JSONObjectAdapterException {\r\n \t\tif (entity instanceof ErrorResponse) {\r\n \t\t\treturn ((ErrorResponse)entity).getReason();\r\n+\t\t} else if (entity instanceof OAuthErrorResponse) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODk0NDg2OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozMzozMVrOGnzkFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozMzozMVrOGnzkFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MjQ3MA==", "bodyText": "will go away", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444392470", "createdAt": "2020-06-23T17:33:31Z", "author": {"login": "brucehoff"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/web/controller/JSONEntityHttpMessageConverterTest.java", "diffHunk": "@@ -118,12 +119,20 @@ public void testErrorResponseRoundTripWithPlainTextMediaType() throws HttpMessag\n \t}\r\n \t\r\n \t@Test\r\n-\tpublic void testConvertEntityToPlainText() throws Exception {\r\n+\tpublic void testConvertErrorEntityToPlainText() throws Exception {\r\n \t\tErrorResponse error = new ErrorResponse();\r\n \t\terror.setReason(\"foo\");\r\n \t\tassertEquals(\"foo\", JSONEntityHttpMessageConverter.convertEntityToPlainText(error));\r\n \t}\r\n-\t\r\n+\r\n+\t@Test\r\n+\tpublic void testConvertOAuthErrorEntityToPlainText() throws Exception {\r\n+\t\tOAuthErrorResponse error = new OAuthErrorResponse();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODk1MTQ0OnYy", "diffSide": "RIGHT", "path": "services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNTo0MFrOGnzolg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNTo0MFrOGnzolg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5MzYyMg==", "bodyText": "instead of adding a new method, just replace String reason with JSONEntity errorEntity.\nyou could then add two methods, one that turns a reason string into an ErrorResponse and another that turns OAuthErrorCode errorCode, String description into OAuthErrorResponse.  Each one then calls the common method that writes to the HttpResponse.\nBTW, only write WWW-Authenticate response header is status=401", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444393622", "createdAt": "2020-06-23T17:35:40Z", "author": {"login": "brucehoff"}, "path": "services/repository/src/main/java/org/sagebionetworks/auth/HttpAuthUtil.java", "diffHunk": "@@ -136,4 +145,32 @@ public static void reject(HttpServletResponse resp, String reason, HttpStatus st\n \t\t}\n \t\tresp.getWriter().flush();\n \t}\n+\n+\t/**\n+\t * OAuth errors don't have the same JSON format as our regular error, so this method may be used for\n+\t * sending error responses caused by OAuth services\n+\t */\n+\tpublic static void rejectWithOAuthError(HttpServletResponse resp, OAuthErrorCode errorCode, String description, HttpStatus status) throws IOException {\n+\t\tresp.setStatus(status.value());\n+\n+\t\t// This header is required according to RFC-2612\n+\t\t// See: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2\n+\t\t//      http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.47\n+\t\t//      http://www.ietf.org/rfc/rfc2617.txt\n+\t\tresp.setContentType(\"application/json\");\n+\t\tresp.setHeader(\"WWW-Authenticate\", \"\\\"Digest\\\" your email\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTAwNDUzOnYy", "diffSide": "RIGHT", "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/OAuthErrorResponse.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OTowMFrOGn0JYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OTowMFrOGn0JYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMjAxOA==", "bodyText": "extend error response", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4104#discussion_r444402018", "createdAt": "2020-06-23T17:49:00Z", "author": {"login": "brucehoff"}, "path": "lib/lib-auto-generated/src/main/resources/schema/org/sagebionetworks/repo/model/OAuthErrorResponse.json", "diffHunk": "@@ -0,0 +1,17 @@\n+{\n+    \"description\":\"JSON schema for an error returned by Synapse OAuth 2.0 Services. Used to align error messages with <a href=\\\"https://tools.ietf.org/html/rfc6749#section-5.2\\\">RFC 6749 Section 5.2</a>\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6adaf4aa8c94471106a78afebed0a9ca3c0025e7"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3088, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}