{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTMyNzY1", "number": 4132, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNzoyNVrOEOcQqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNzoyNVrOEOcQqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTc4NTM5OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/stack/ProdDetectorImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNzoyNVrOGxmR5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNzoyNVrOGxmR5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDU4MA==", "bodyText": "add agent info for tracking.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4132#discussion_r454660580", "createdAt": "2020-07-14T21:37:25Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/stack/ProdDetectorImpl.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.sagebionetworks.repo.manager.stack;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.Map;\r\n+import java.util.Optional;\r\n+\r\n+import javax.annotation.PostConstruct;\r\n+\r\n+import org.apache.commons.lang3.StringUtils;\r\n+import org.apache.http.HttpHeaders;\r\n+import org.apache.http.HttpStatus;\r\n+import org.apache.http.entity.ContentType;\r\n+import org.apache.logging.log4j.Logger;\r\n+import org.sagebionetworks.LoggerProvider;\r\n+import org.sagebionetworks.StackConfiguration;\r\n+import org.sagebionetworks.repo.model.versionInfo.SynapseVersionInfo;\r\n+import org.sagebionetworks.schema.adapter.JSONObjectAdapter;\r\n+import org.sagebionetworks.schema.adapter.JSONObjectAdapterException;\r\n+import org.sagebionetworks.schema.adapter.org.json.JSONObjectAdapterImpl;\r\n+import org.sagebionetworks.simpleHttpClient.SimpleHttpClient;\r\n+import org.sagebionetworks.simpleHttpClient.SimpleHttpRequest;\r\n+import org.sagebionetworks.simpleHttpClient.SimpleHttpResponse;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n+import org.springframework.http.CacheControl;\r\n+import org.springframework.stereotype.Service;\r\n+\r\n+import com.google.common.collect.ImmutableMap;\r\n+\r\n+@Service\r\n+public class ProdDetectorImpl implements ProdDetector {\r\n+\r\n+\tstatic final String VERSION_INFO_ENDPOINT = \"/version\";\r\n+\t\r\n+\tstatic final String FAILED_REQUEST_MSG = \"Could not fetch prod version info from {}: {}\";\r\n+\r\n+\tprivate final SimpleHttpClient httpClient;\r\n+\tprivate final StackConfiguration stackConfiguration;\r\n+\tprivate final LoggerProvider logProvider;\r\n+\t\r\n+\tprivate SimpleHttpRequest versionInfoRequest;\r\n+\tprivate String currentStackVersion;\r\n+\tprivate Logger log;\r\n+\r\n+\t@Autowired\r\n+\tpublic ProdDetectorImpl(final SimpleHttpClient httpClient, final StackConfiguration stackConfiguration, final LoggerProvider logProvider) {\r\n+\t\tthis.httpClient = httpClient;\r\n+\t\tthis.stackConfiguration = stackConfiguration;\r\n+\t\tthis.logProvider = logProvider;\r\n+\t}\r\n+\t\r\n+\t@PostConstruct\r\n+\tprotected void init() {\r\n+\t\tthis.log = logProvider.getLogger(ProdDetectorImpl.class.getName());\r\n+\t\tthis.currentStackVersion = stackConfiguration.getStackInstance();\r\n+\t\t\r\n+\t\tthis.versionInfoRequest = new SimpleHttpRequest();\r\n+\t\tthis.versionInfoRequest.setUri(stackConfiguration.getRepositoryServiceProdEndpoint() + VERSION_INFO_ENDPOINT);\r\n+\r\n+\t\tMap<String, String> headers = ImmutableMap.of(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9075e967a53f8770542fcbe171eba2ccafda223b"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2917, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}