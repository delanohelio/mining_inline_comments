{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNDAyNTc0", "number": 3890, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDo1OTowMVrODYo9Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToxMTo1NVrODYpJ4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTYzNDQ2OnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDo1OTowMVrOFenXJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTo0NjoyM1rOFeomlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NjUwMw==", "bodyText": "optional might work better than illegal arg for getListType();", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367646503", "createdAt": "2020-01-16T20:59:01Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "diffHunk": "@@ -885,9 +886,19 @@ public ColumnAggregation mapRow(ResultSet rs, int rowNum)\n \t\t\t\tColumnModel model = new ColumnModel();\r\n \t\t\t\tmodel.setName(aggregation.getColumnName());\r\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\r\n+\r\n+\t\t\t\t//check if a LIST columnType needs to be used\r\n+\t\t\t\tif(aggregation.getListSize() > 1){\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY2NjgzNw==", "bodyText": "Other parts of code is relying on it throwing an exception being thrown if unexpected usage of  conversion to list type occurs", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367666837", "createdAt": "2020-01-16T21:46:23Z", "author": {"login": "zimingd"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "diffHunk": "@@ -885,9 +886,19 @@ public ColumnAggregation mapRow(ResultSet rs, int rowNum)\n \t\t\t\tColumnModel model = new ColumnModel();\r\n \t\t\t\tmodel.setName(aggregation.getColumnName());\r\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\r\n+\r\n+\t\t\t\t//check if a LIST columnType needs to be used\r\n+\t\t\t\tif(aggregation.getListSize() > 1){\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0NjUwMw=="}, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTY1MDY3OnYy", "diffSide": "RIGHT", "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowNTozM1rOFenh2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowNTozM1rOFenh2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY0OTI0Mg==", "bodyText": "max(json_lenght())\nNeed  a test that would show this returns the wrong value.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367649242", "createdAt": "2020-01-16T21:05:33Z", "author": {"login": "john-hill"}, "path": "lib/models/src/main/java/org/sagebionetworks/repo/model/table/TableConstants.java", "diffHunk": "@@ -289,10 +292,12 @@ public static Long getReservedColumnId(String columnName) {\n \r\n \tpublic static final String P_LIMIT = \"pLimit\";\r\n \t\r\n-\tpublic static final String SELECT_DISTINCT_ANNOTATION_COLUMNS_TEMPLATE = \"SELECT A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_KEY + \", GROUP_CONCAT(DISTINCT A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_TYPE + \"), MAX(LENGTH(A.\"\r\n-\t\t\t+ ANNOTATION_REPLICATION_COL_STRING_VALUE + \"))\" + \" FROM \"\r\n+\tpublic static final String SELECT_DISTINCT_ANNOTATION_COLUMNS_TEMPLATE = \"SELECT \"\r\n+\t\t\t+\"A.\" + ANNOTATION_REPLICATION_COL_KEY\r\n+\t\t\t+\", GROUP_CONCAT(DISTINCT A.\" + ANNOTATION_REPLICATION_COL_TYPE + \")\"\r\n+\t\t\t+\", MAX(\"+ANNOTATION_REPLICATION_COL_MAX_STRING_LENGTH+\")\"\r\n+\t\t\t+\", JSON_LENGTH(\"+ANNOTATION_REPLICATION_COL_STRING_LIST_VALUE+\")\"\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTY1NjQ5OnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowNzo1MlrOFenlnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowNzo1MlrOFenlnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDIwNA==", "bodyText": "maxListSize", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367650204", "createdAt": "2020-01-16T21:07:52Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/main/java/org/sagebionetworks/table/cluster/TableIndexDAOImpl.java", "diffHunk": "@@ -885,9 +886,19 @@ public ColumnAggregation mapRow(ResultSet rs, int rowNum)\n \t\t\t\tColumnModel model = new ColumnModel();\r\n \t\t\t\tmodel.setName(aggregation.getColumnName());\r\n \t\t\t\tColumnType type = AnnotationType.valueOf(typeString).getColumnType();\r\n+\r\n+\t\t\t\t//check if a LIST columnType needs to be used\r\n+\t\t\t\tif(aggregation.getListSize() > 1){\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\ttype = ColumnTypeListMappings.forNonListType(type).getListType();\r\n+\t\t\t\t\t} catch (IllegalArgumentException e){\r\n+\t\t\t\t\t\t//do nothing because a list type mapping does not exist\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\r\n \t\t\t\tmodel.setColumnType(type);\r\n-\t\t\t\tif(ColumnType.STRING == type) {\r\n-\t\t\t\t\tmodel.setMaximumSize(aggregation.getMaxSize());\r\n+\t\t\t\tif(ColumnType.STRING == type || ColumnType.STRING_LIST==type) {\r\n+\t\t\t\t\tmodel.setMaximumSize(aggregation.getMaxStringElementSize());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTY1OTYxOnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowODo1M1rOFennaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTowODo1M1rOFennaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDY2Nw==", "bodyText": "all 3s?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367650667", "createdAt": "2020-01-16T21:08:53Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/SQLUtilsTest.java", "diffHunk": "@@ -2625,6 +2628,8 @@ public void testWriteAnnotationDtoToPreparedStatementLongList() throws SQLExcept\n \t\tverify(mockPreparedStatement).setString(9, \"[\\\"123\\\",\\\"456\\\",\\\"789\\\"]\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MTY2NjkwOnYy", "diffSide": "RIGHT", "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToxMTo1NVrOFensOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMToxMTo1NVrOFensOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MTg5OQ==", "bodyText": "first annotation should not be a list.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3890#discussion_r367651899", "createdAt": "2020-01-16T21:11:55Z", "author": {"login": "john-hill"}, "path": "lib/lib-table-cluster/src/test/java/org/sagebionetworks/table/cluster/TableIndexDAOImplTest.java", "diffHunk": "@@ -1839,28 +1866,84 @@ public void testCaseSensitiveAnnotationNamesPLFM_5449() {\n \t\t// call under test\r\n \t\ttableIndexDAO.addEntityData(Lists.newArrayList(file1));\r\n \t}\r\n+\r\n+\t//PLFM-6013\r\n+\t@Test\r\n+\tpublic void testGetPossibleAnnotationsForContainers_ListColumns(){\r\n+\t\t// delete all data\r\n+\t\ttableIndexDAO.deleteEntityData(Lists.newArrayList(2L,3L));\r\n+\r\n+\r\n+\t\tString annoKey = \"myAnnotation\";\r\n+\r\n+\t\t// setup some hierarchy.\r\n+\t\tEntityDTO file1 = createEntityDTO(2L, EntityType.file, 0);\r\n+\t\tfile1.setParentId(333L);\r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e259094809a45fa367568fe95142fa5c27e69d8b"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3195, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}