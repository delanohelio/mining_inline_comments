{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5Nzg5NDEy", "number": 3881, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDo0MzoyOVrODWthfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMTowMjozOFrODWtroQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTQxMTE5OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDo0MzoyOVrOFboJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDo0MzoyOVrOFboJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxMzU3NA==", "bodyText": "Will move to separate pull request and try in root pom.xml", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3881#discussion_r364513574", "createdAt": "2020-01-09T00:43:29Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/pom.xml", "diffHunk": "@@ -261,6 +261,41 @@\n \t\t\t\t\t</execution>\r\n \t\t\t\t</executions>\r\n \t\t\t</plugin>\r\n+\r\n+\t\t\t<!-- JaCoCo Code Coverage Tool -->\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703a5de491da2edf35c90231adca2f6ee24f2876"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTQyMTc1OnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/ProjectSettingsManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDo1MToxOVrOFboPqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDo1MToxOVrOFboPqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxNTI0Mg==", "bodyText": "optimize isEmtpy() (constant time), then can keep order.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3881#discussion_r364515242", "createdAt": "2020-01-09T00:51:19Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/main/java/org/sagebionetworks/repo/manager/ProjectSettingsManagerImpl.java", "diffHunk": "@@ -157,7 +158,7 @@ public ProjectSetting createProjectSetting(UserInfo userInfo, ProjectSetting pro\n \t\tvalidateProjectSetting(projectSetting, userInfo);\n \n \t\t// Can't add an StsStorageLocation to a non-empty entity.\n-\t\tif (isStsStorageLocationSetting(projectSetting) && !nodeManager.isEntityEmpty(parentId)) {\n+\t\tif (!nodeManager.isEntityEmpty(parentId) && isStsStorageLocationSetting(projectSetting)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703a5de491da2edf35c90231adca2f6ee24f2876"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTQzNzEzOnYy", "diffSide": "RIGHT", "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsManagerImplUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMTowMjozOFrOFboZMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMTowMjozOFrOFboZMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxNzY4Mw==", "bodyText": "false not illegal arg", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/3881#discussion_r364517683", "createdAt": "2020-01-09T01:02:38Z", "author": {"login": "john-hill"}, "path": "services/repository-managers/src/test/java/org/sagebionetworks/repo/manager/ProjectSettingsManagerImplUnitTest.java", "diffHunk": "@@ -945,6 +1024,84 @@ public void testValidateProjectSetting_StsCannotBeEnabledWithOtherStorageLocatio\n \t\t\t\tuploadDestinationListSetting, userInfo), \"An STS-enabled folder cannot add other upload destinations\");\n \t}\n \n+\t@Test\n+\tpublic void testIsStsStorageLocation_NullProjectSetting() {\n+\t\t// Method under test.\n+\t\tboolean result = projectSettingsManagerImpl.isStsStorageLocationSetting(null);\n+\t\tassertFalse(result);\n+\t\tverifyZeroInteractions(mockStorageLocationDAO);\n+\t}\n+\n+\t@Test\n+\tpublic void testIsStsStorageLocation_ProjectSettingWrongSubclass() {\n+\t\t// Create a mock of ProjectSetting, so we can have a ProjectSetting instance that's not an\n+\t\t// UploadDestinationListSetting.\n+\t\tProjectSetting input = mock(ProjectSetting.class);\n+\n+\t\t// Method under test.\n+\t\tboolean result = projectSettingsManagerImpl.isStsStorageLocationSetting(input);\n+\t\tassertFalse(result);\n+\t\tverifyZeroInteractions(mockStorageLocationDAO);\n+\t}\n+\n+\t@Test\n+\tpublic void testIsStsStorageLocation_StorageLocationNotFound() {\n+\t\t// Mock dependencies.\n+\t\twhen(mockStorageLocationDAO.get(STORAGE_LOCATION_ID)).thenThrow(NotFoundException.class);\n+\n+\t\t// Method under test.\n+\t\tassertThrows(IllegalArgumentException.class, () -> projectSettingsManagerImpl.isStsStorageLocationSetting(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703a5de491da2edf35c90231adca2f6ee24f2876"}, "originalPosition": 529}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3192, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}