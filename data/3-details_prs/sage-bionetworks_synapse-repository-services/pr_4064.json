{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Njk0NzIw", "number": 4064, "title": "Plfm 6161 i", "bodyText": "", "createdAt": "2020-05-28T19:38:34Z", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4064", "merged": true, "mergeCommit": {"oid": "3a2210aa5e8d4bca4bc57841b0861e6589bad2e5"}, "closed": true, "closedAt": "2020-05-28T23:47:35Z", "author": {"login": "john-hill"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcljx39AH2gAyNDI0Njk0NzIwOjE2Njc4Y2JlMjFlMTc1ZGE1NzgwNGM4MDkzOTA2ODg1YmE1ZDVlMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl2uuBgFqTQyMDU1MjYyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16678cbe21e175da57804c8093906885ba5d5e19", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/16678cbe21e175da57804c8093906885ba5d5e19", "committedDate": "2020-05-28T01:42:26Z", "message": "starting dao for bindnig schemas to objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35c125ef879e6cb0bc86541c42c3c70e76e9dbcb", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/35c125ef879e6cb0bc86541c42c3c70e76e9dbcb", "committedDate": "2020-05-28T19:36:21Z", "message": "handle nulls and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b5f236f208ce392bf1b7e9c0a9580bf82dfa60", "author": {"user": {"login": "john-hill", "name": "John Hill"}}, "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/commit/93b5f236f208ce392bf1b7e9c0a9580bf82dfa60", "committedDate": "2020-05-28T19:51:36Z", "message": "test fix and hash equals and to string"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTUyNjI0", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4064#pullrequestreview-420552624", "createdAt": "2020-05-28T23:11:03Z", "commit": {"oid": "93b5f236f208ce392bf1b7e9c0a9580bf82dfa60"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxMTowNFrOGcJv5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzo0MTowMFrOGcKSIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MzAzMQ==", "bodyText": "You might want to consider to mirror the OBJECT_TYPE value as the internal OBJECT_TYPE (which is uppercase)", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4064#discussion_r432173031", "createdAt": "2020-05-28T23:11:04Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/resources/schema/JsonSchemaBindObject-ddl.sql", "diffHunk": "@@ -0,0 +1,14 @@\n+CREATE TABLE IF NOT EXISTS `JSON_SCHEMA_OBJECT_BINDING` (\n+  `BIND_ID` BIGINT NOT NULL,\n+  `SCHEMA_ID` BIGINT NOT NULL,\n+  `VERSION_ID` BIGINT DEFAULT NULL,\n+  `OBJECT_ID` BIGINT NOT NULL,\n+  `OBJECT_TYPE` ENUM ('entity'),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b5f236f208ce392bf1b7e9c0a9580bf82dfa60"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4MDU3MQ==", "bodyText": "toString not needed", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4064#discussion_r432180571", "createdAt": "2020-05-28T23:36:14Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/schema/JsonSchemaDaoImpl.java", "diffHunk": "@@ -450,4 +483,66 @@ public int getBatchSize() {\n \t\t\t\t\t}\n \t\t\t\t});\n \t}\n+\n+\tList<DBOJsonSchemaDependency> getDependencies(String versionId) {\n+\t\tValidateArgument.required(versionId, \"versionId\");\n+\t\treturn jdbcTemplate.query(\"SELECT * FROM \" + TABLE_JSON_SCHEMA_DEPENDENCY + \" WHERE \"\n+\t\t\t\t+ COL_JSON_SCHEMA_DEPENDENCY_VERSION_ID + \" = ?\", DEPENDENCY_MAPPER, versionId);\n+\t}\n+\n+\t@WriteTransaction\n+\t@Override\n+\tpublic JsonSchemaObjectBinding bindSchemaToObject(BindSchemaRequest request) {\n+\t\tValidateArgument.required(request, \"request\");\n+\t\tValidateArgument.required(request.getSchemaId(), \"request.schemaId\");\n+\t\tValidateArgument.required(request.getObjectId(), \"request.objectId\");\n+\t\tValidateArgument.required(request.getObjectType(), \"request.objectType\");\n+\t\tValidateArgument.required(request.getCreatedBy(), \"request.createdBy\");\n+\t\t// remove any existing binding.\n+\t\tjdbcTemplate.update(\n+\t\t\t\t\"DELETE FROM \" + TABLE_JSON_SCHEMA_OBJECT_BINDING + \" WHERE \" + COL_JONS_SCHEMA_BINDING_OBJECT_ID\n+\t\t\t\t\t\t+ \" = ? AND \" + COL_JSON_SCHEMA_BINDING_OBJECT_TYPE + \" = ?\",\n+\t\t\t\trequest.getObjectId(), request.getObjectType().name());\n+\n+\t\tTimestamp now = new Timestamp(System.currentTimeMillis());\n+\t\tlong bindId = idGenerator.generateNewId(IdType.JSON_SCHEMA_BIND_OBJECT_ID);\n+\t\tjdbcTemplate.update(\n+\t\t\t\t\"INSERT INTO \" + TABLE_JSON_SCHEMA_OBJECT_BINDING + \"(\" + COL_JSON_SCHEMA_BINDING_BIND_ID + \",\"\n+\t\t\t\t\t\t+ COL_JSON_SCHEMA_BINDING_SCHEMA_ID + \",\" + COL_JSON_SCHEMA_BINDING_VERSION_ID + \",\"\n+\t\t\t\t\t\t+ COL_JONS_SCHEMA_BINDING_OBJECT_ID + \",\" + COL_JSON_SCHEMA_BINDING_OBJECT_TYPE + \",\"\n+\t\t\t\t\t\t+ COL_JSON_SCHEMA_BINDING_CREATED_BY + \",\" + COL_JSON_SCHEMA_BINDING_CREATED_ON\n+\t\t\t\t\t\t+ \") VALUES (?,?,?,?,?,?,?)\",\n+\t\t\t\tbindId, request.getSchemaId(), request.getVersionId(), request.getObjectId(),\n+\t\t\t\trequest.getObjectType().name(), request.getCreatedBy(), now);\n+\t\treturn getSchemaBindingForObject(request.getObjectId(), request.getObjectType());\n+\t}\n+\n+\t@Override\n+\tpublic JsonSchemaObjectBinding getSchemaBindingForObject(Long objectId, BoundObjectType objecType) {\n+\t\tValidateArgument.required(objectId, \"objectId\");\n+\t\tValidateArgument.required(objecType, \"objecType\");\n+\t\ttry {\n+\t\t\tDBOJsonSchemaBindObject dbo = jdbcTemplate.queryForObject(\n+\t\t\t\t\t\"SELECT * FROM \" + TABLE_JSON_SCHEMA_OBJECT_BINDING + \" WHERE \" + COL_JONS_SCHEMA_BINDING_OBJECT_ID\n+\t\t\t\t\t\t\t+ \" = ? AND \" + COL_JSON_SCHEMA_BINDING_OBJECT_TYPE + \" = ?\",\n+\t\t\t\t\tBIND_OBJECT_MAPPER, objectId, objecType.name());\n+\t\t\tString versionId = null;\n+\t\t\tif (dbo.getVersionId() == null) {\n+\t\t\t\tversionId = getLatestVersionId(dbo.getSchemaId().toString());\n+\t\t\t} else {\n+\t\t\t\tversionId = dbo.getVersionId().toString();\n+\t\t\t}\n+\t\t\tJsonSchemaVersionInfo versionInfo = getVersionInfo(versionId.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b5f236f208ce392bf1b7e9c0a9580bf82dfa60"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE4MTc5NQ==", "bodyText": "You can remove this (tested elsewhere)", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4064#discussion_r432181795", "createdAt": "2020-05-28T23:41:00Z", "author": {"login": "marcomarasca"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/schema/JsonSchemaDaoImplTest.java", "diffHunk": "@@ -1085,8 +1122,13 @@ public void testBindDependenciesWithVersions() throws JSONObjectAdapterException\n \t\t\t\t.withDependsOnVersionId(one.getVersionId()));\n \t\tdependencies.add(new SchemaDependency().withDependsOnSchemaId(two.getSchemaId())\n \t\t\t\t.withDependsOnVersionId(two.getVersionId()));\n+\t\t// call under test\n \t\tJsonSchemaVersionInfo three = createNewSchemaVersion(\"my.org.edu/three/1.0.0\", index++, dependencies);\n \n+\t\tList<DBOJsonSchemaDependency> dependencyResults = jsonSchemaDao.getDependencies(three.getVersionId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b5f236f208ce392bf1b7e9c0a9580bf82dfa60"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4734, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}