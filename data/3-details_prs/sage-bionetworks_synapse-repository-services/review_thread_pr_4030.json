{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMTcwMjU1", "number": 4030, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNToyODo0NlrOD4Zd8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzoyMTowOVrOD4gkPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDY0MTE0OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNToyODo0NlrOGPM1yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODowMDoyMVrOGPRD3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MjIwMA==", "bodyText": "Thank you for the comment with the easy to read sql!  To comprehend, I only had to go to the real sql to figure out what the table aliases referenced.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418592200", "createdAt": "2020-05-01T15:28:46Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImpl.java", "diffHunk": "@@ -136,6 +139,38 @@\n \tprivate static final String LIMIT = \"LIMIT\";\n \tprivate static final String OFFSET = \"OFFSET\";\n \n+\t/*\n+\tselect s.submission_serialized, ss.modified_on\n+\tfrom s, ss\n+\twhere s.id=ss.s_id and\n+\ts.ar_id=? and\n+\tss.state='approved' and\n+\tss.modified_on = \n+\tselect(max(ss2.modified_on)\n+\tfrom s2, ss2\n+\twhere \n+\ts2.ar_id=s.ar_id and s2.rp_id=s.rp_id\n+\tand s2.id=ss2.s_id and ss2.state=approved\n+\tgroup by s2.ar_id, s2.rp_id)\n+\torder by ss.modified_on asc;\n+\t*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a01df2056a643fbfb9e8a77e132472dc1478c886"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2MTM0MQ==", "bodyText": "I just replaced the hand written pseudo-code with the actual generated SQL.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418661341", "createdAt": "2020-05-01T18:00:21Z", "author": {"login": "brucehoff"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImpl.java", "diffHunk": "@@ -136,6 +139,38 @@\n \tprivate static final String LIMIT = \"LIMIT\";\n \tprivate static final String OFFSET = \"OFFSET\";\n \n+\t/*\n+\tselect s.submission_serialized, ss.modified_on\n+\tfrom s, ss\n+\twhere s.id=ss.s_id and\n+\ts.ar_id=? and\n+\tss.state='approved' and\n+\tss.modified_on = \n+\tselect(max(ss2.modified_on)\n+\tfrom s2, ss2\n+\twhere \n+\ts2.ar_id=s.ar_id and s2.rp_id=s.rp_id\n+\tand s2.id=ss2.s_id and ss2.state=approved\n+\tgroup by s2.ar_id, s2.rp_id)\n+\torder by ss.modified_on asc;\n+\t*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MjIwMA=="}, "originalCommit": {"oid": "a01df2056a643fbfb9e8a77e132472dc1478c886"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDY3NTU1OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo0MDowNlrOGPNKtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNzo1NTo0MVrOGPQ7EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5NzU1Ng==", "bodyText": "I need to take some notes to understand this test, let's spend extra time on this section during our meeting this afternoon.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418597556", "createdAt": "2020-05-01T15:40:06Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "diffHunk": "@@ -281,9 +314,74 @@ public void testListSubmissions() {\n \t\t\t\tfalse, 10L, 0L);\n \t\tassertNotNull(submissions);\n \t\tassertEquals(0, submissions.size());\n-\n-\t\tsubmissionDao.delete(dto1.getId());\n-\t\tsubmissionDao.delete(dto2.getId());\n+\t}\n+\t\n+\tprivate static SubmissionInfo createSubmissionInfo(ResearchProject rp, long modifiedOn) {\n+\t\tSubmissionInfo result = new SubmissionInfo();\n+\t\tresult.setInstitution(rp.getInstitution());\n+\t\tresult.setIntendedDataUseStatement(rp.getIntendedDataUseStatement());\n+\t\tresult.setProjectLead(rp.getProjectLead());\n+\t\tresult.setModifiedOn(new Date(modifiedOn));\n+\t\treturn result;\n+\t\t\n+\t}\n+\t\n+\t@Test\n+\tpublic void testListInfoForApprovedSubmissions() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a01df2056a643fbfb9e8a77e132472dc1478c886"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1OTA4OA==", "bodyText": "Yes, this is the crucial part of the code review.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418659088", "createdAt": "2020-05-01T17:55:41Z", "author": {"login": "brucehoff"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "diffHunk": "@@ -281,9 +314,74 @@ public void testListSubmissions() {\n \t\t\t\tfalse, 10L, 0L);\n \t\tassertNotNull(submissions);\n \t\tassertEquals(0, submissions.size());\n-\n-\t\tsubmissionDao.delete(dto1.getId());\n-\t\tsubmissionDao.delete(dto2.getId());\n+\t}\n+\t\n+\tprivate static SubmissionInfo createSubmissionInfo(ResearchProject rp, long modifiedOn) {\n+\t\tSubmissionInfo result = new SubmissionInfo();\n+\t\tresult.setInstitution(rp.getInstitution());\n+\t\tresult.setIntendedDataUseStatement(rp.getIntendedDataUseStatement());\n+\t\tresult.setProjectLead(rp.getProjectLead());\n+\t\tresult.setModifiedOn(new Date(modifiedOn));\n+\t\treturn result;\n+\t\t\n+\t}\n+\t\n+\t@Test\n+\tpublic void testListInfoForApprovedSubmissions() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5NzU1Ng=="}, "originalCommit": {"oid": "a01df2056a643fbfb9e8a77e132472dc1478c886"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc3ODEwOnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmission.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzowNDoxMlrOGPX3Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzowNDoxMlrOGPX3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3Mjc4Ng==", "bodyText": "backup.getSubmissionSerialized()", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418772786", "createdAt": "2020-05-01T23:04:12Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/main/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmission.java", "diffHunk": "@@ -212,9 +233,30 @@ public MigrationType getMigratableTableType() {\n \t\treturn MigrationType.DATA_ACCESS_SUBMISSION;\n \t}\n \n+\tprivate static final UnmodifiableXStream X_STREAM = UnmodifiableXStream.builder().allowTypes(Submission.class).build();\n+\n \t@Override\n \tpublic MigratableTableTranslation<DBOSubmission, DBOSubmission> getTranslator() {\n-\t\treturn new BasicMigratableTableTranslation<DBOSubmission>();\n+\t\treturn new MigratableTableTranslation<DBOSubmission,DBOSubmission>(){\n+\n+\t\t\t@Override\n+\t\t\tpublic DBOSubmission createDatabaseObjectFromBackup(DBOSubmission backup) {\n+\t\t\t\tif (backup.getResearchProjectId()==null) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tSubmission submission = (Submission)JDOSecondaryPropertyUtils.decompressObject(X_STREAM, \n+\t\t\t\t\t\t\t\tsubmissionSerialized);\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d68b9662a551e0866a6e69bd537c81d5215d7b"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc4MzU0OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzowODowMFrOGPX6gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzowODowMFrOGPX6gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3MzYzMw==", "bodyText": "Replace backup with new DBOSubmission() to catch bug.", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418773633", "createdAt": "2020-05-01T23:08:00Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.sagebionetworks.repo.model.dbo.dao.dataaccess;\n+\n+import org.junit.jupiter.api.Test;\n+import org.sagebionetworks.repo.model.UnmodifiableXStream;\n+import org.sagebionetworks.repo.model.dataaccess.ResearchProject;\n+import org.sagebionetworks.repo.model.dataaccess.Submission;\n+import org.sagebionetworks.repo.model.jdo.JDOSecondaryPropertyUtils;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class DBOSubmissionTest {\n+\tprivate static final UnmodifiableXStream X_STREAM = UnmodifiableXStream.builder().allowTypes(Submission.class).build();\n+\n+\t@Test\n+\tpublic void testMigrationTranslator() throws Exception {\n+\t\tResearchProject researchProject = new ResearchProject();\n+\t\tString id = \"101\";\n+\t\tresearchProject.setId(id);\n+\t\tSubmission submission = new Submission();\n+\t\tsubmission.setResearchProjectSnapshot(researchProject);\n+\t\tDBOSubmission backup = new DBOSubmission();\n+\t\tbackup.setAccessRequirementId(1L);\n+\t\tbackup.setCreatedBy(2L);\n+\t\tbackup.setCreatedOn(3L);\n+\t\tbackup.setDataAccessRequestId(4L);\n+\t\tbackup.setEtag(\"etag\");\n+\t\tbackup.setId(5L);\n+\t\tbackup.setSubmissionSerialized(JDOSecondaryPropertyUtils.compressObject(X_STREAM, submission));\n+\t\t\n+\t\t// Note, we have NOT set the research project id in backup\n+\t\tassertNull(backup.getResearchProjectId());\n+\t\t\n+\t\tDBOSubmission dbo = backup.getTranslator().createDatabaseObjectFromBackup(backup);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d68b9662a551e0866a6e69bd537c81d5215d7b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTc4OTU0OnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzoxMTo0OVrOGPX-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzoxMTo0OVrOGPX-JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3NDU2NQ==", "bodyText": "clean up accessRequirement2", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418774565", "createdAt": "2020-05-01T23:11:49Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "diffHunk": "@@ -119,16 +140,24 @@ public void before() {\n \t\tadd.setType(AccessType.GAIN_ACCESS);\n \t\trequest.setAccessorChanges(Arrays.asList(add));\n \t\trequest = requestDao.create(request);\n+\t\t\n+\t\tdtosToDelete = new ArrayList<String>();\n \t}\n \n \t@After\n \tpublic void after() {\n+\t\tfor (String id: dtosToDelete) {\n+\t\t\tsubmissionDao.delete(id);\n+\t\t}\n \t\tif (request != null) {\n \t\t\trequestDao.delete(request.getId());\n \t\t}\n \t\tif (researchProject != null) {\n \t\t\tresearchProjectDao.delete(researchProject.getId());\n \t\t}\n+\t\tif (researchProject2 != null) {\n+\t\t\tresearchProjectDao.delete(researchProject2.getId());\n+\t\t}\n \t\tif (accessRequirement != null) {\n \t\t\taccessRequirementDAO.delete(accessRequirement.getId().toString());\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d68b9662a551e0866a6e69bd537c81d5215d7b"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTgwNDEzOnYy", "diffSide": "RIGHT", "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzoyMToxMFrOGPYGVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMzoyMToxMFrOGPYGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3NjY2Mg==", "bodyText": "Could you add a test to get a limit of 1 and offset of 0, and make sure you get dto3Info?", "url": "https://github.com/Sage-Bionetworks/Synapse-Repository-Services/pull/4030#discussion_r418776662", "createdAt": "2020-05-01T23:21:10Z", "author": {"login": "jay-hodgson"}, "path": "lib/jdomodels/src/test/java/org/sagebionetworks/repo/model/dbo/dao/dataaccess/DBOSubmissionDAOImplTest.java", "diffHunk": "@@ -281,9 +314,74 @@ public void testListSubmissions() {\n \t\t\t\tfalse, 10L, 0L);\n \t\tassertNotNull(submissions);\n \t\tassertEquals(0, submissions.size());\n-\n-\t\tsubmissionDao.delete(dto1.getId());\n-\t\tsubmissionDao.delete(dto2.getId());\n+\t}\n+\t\n+\tprivate static SubmissionInfo createSubmissionInfo(ResearchProject rp, long modifiedOn) {\n+\t\tSubmissionInfo result = new SubmissionInfo();\n+\t\tresult.setInstitution(rp.getInstitution());\n+\t\tresult.setIntendedDataUseStatement(rp.getIntendedDataUseStatement());\n+\t\tresult.setProjectLead(rp.getProjectLead());\n+\t\tresult.setModifiedOn(new Date(modifiedOn));\n+\t\treturn result;\n+\t\t\n+\t}\n+\t\n+\t@Test\n+\tpublic void testListInfoForApprovedSubmissions() {\n+\t\t// create a submission for research project 1\n+\t\tlong modifiedOn = System.currentTimeMillis();\n+\t\tSubmission dto1 = createSubmission(accessRequirement, researchProject, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto1).getSubmissionId() );\n+\t\tmodifiedOn += 60000L;\n+\t\tsubmissionDao.updateSubmissionStatus(dto1.getId(), SubmissionState.APPROVED, null, user1.getId(), modifiedOn);\n+\t\t\t\n+\t\t// create a submission for research project 2\n+\t\tmodifiedOn += 60000L;\n+\t\tSubmission dto2 = createSubmission(accessRequirement, researchProject2, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto2).getSubmissionId() );\t\n+\t\tmodifiedOn += 60000L;\n+\t\tsubmissionDao.updateSubmissionStatus(dto2.getId(), SubmissionState.APPROVED, null, user1.getId(), modifiedOn);\n+\t\t\n+\t\t// now create another, later submission for research project 2\n+\t\tmodifiedOn += 60000L;\n+\t\tSubmission dto3 = createSubmission(accessRequirement, researchProject2, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto3).getSubmissionId() );\t\n+\t\tmodifiedOn += 60000L;\n+\t\tsubmissionDao.updateSubmissionStatus(dto3.getId(), SubmissionState.APPROVED, null, user1.getId(), modifiedOn);\n+\t\tSubmissionInfo dto3Info = createSubmissionInfo(researchProject2, modifiedOn);\n+\t\t\n+\t\t// now create another, later submission for research project 1\n+\t\tmodifiedOn += 60000L;\n+\t\tSubmission dto4 = createSubmission(accessRequirement, researchProject, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto4).getSubmissionId() );\t\n+\t\tmodifiedOn += 60000L;\n+\t\tsubmissionDao.updateSubmissionStatus(dto4.getId(), SubmissionState.APPROVED, null, user1.getId(), modifiedOn);\n+\t\tSubmissionInfo dto4Info = createSubmissionInfo(researchProject, modifiedOn);\n+\t\t\n+\t\t// create another submission for some other access requirement.  (Shouldn't see it in the results.)\n+\t\tmodifiedOn += 60000L;\n+\t\tSubmission dto5 = createSubmission(accessRequirement2, researchProject, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto5).getSubmissionId() );\t\n+\t\tmodifiedOn += 60000L;\n+\t\tsubmissionDao.updateSubmissionStatus(dto5.getId(), SubmissionState.APPROVED, null, user1.getId(), modifiedOn);\n+\t\t\n+\t\t// create a submission which is NOT approved.  (Shouldn't see it in the results.)\n+\t\tmodifiedOn += 60000L;\n+\t\tSubmission dto6 = createSubmission(accessRequirement, researchProject, modifiedOn);\n+\t\tdtosToDelete.add( submissionDao.createSubmission(dto6).getSubmissionId() );\t\n+\t\t\n+\t\t// we should get back dto3 , then dto4, in that order\n+\t\tList<SubmissionInfo> expected = ImmutableList.of(dto3Info, dto4Info);\n+\n+\t\t// method under test\n+\t\tList<SubmissionInfo> actual = submissionDao.listInfoForApprovedSubmissions(accessRequirement.getId().toString(), 10, 0);\n+\t\t\n+\t\tassertEquals(expected, actual);\n+\t\t\n+\t\t\n+\t\t// check that pagination works right:  If I get the second page of size *one*, I should just get dto4\n+\t\tactual = submissionDao.listInfoForApprovedSubmissions(accessRequirement.getId().toString(), 1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d68b9662a551e0866a6e69bd537c81d5215d7b"}, "originalPosition": 221}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3018, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}