{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTgyNDI3", "number": 3912, "title": "Conveyor upgrade system", "bodyText": "No additional keybinds. Just use Diagonal placing.", "createdAt": "2020-12-10T19:08:40Z", "url": "https://github.com/Anuken/Mindustry/pull/3912", "merged": true, "mergeCommit": {"oid": "0c581c520f302301cb787362c71849d1a3b47faa"}, "closed": true, "closedAt": "2020-12-15T15:52:21Z", "author": {"login": "Slava0135"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk4VmRgFqTU0OTUyMjk5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmI4gVgFqTU1MTYzNDAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTIyOTk5", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-549522999", "createdAt": "2020-12-10T19:16:46Z", "commit": {"oid": "4f8338d9f3e97f27f4774f59dec2ff6fa335406e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOToxNjo0NlrOIDZR_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOToxNjo0NlrOIDZR_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQzMDg0Nw==", "bodyText": "these don't seem to be used anywhere other than the if right below it`:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Tile start = world.tile(startX, startY);\n          \n          \n            \n                            Tile end = world.tile(endX, endY);\n          \n          \n            \n                            if(start.block() instanceof Conveyor && end.block() instanceof Conveyor){\n          \n          \n            \n                                points = Placement.upgradeConveyorLine(startX, startY, endX, endY);\n          \n          \n            \n                            }else{\n          \n          \n            \n                                points = Placement.pathfindLine(true, startX, startY, endX, endY);\n          \n          \n            \n                            }\n          \n          \n            \n                            if(world.tile(startX, startY).block() instanceof Conveyor && world.tile(endX, endY).block() instanceof Conveyor){\n          \n          \n            \n                                points = Placement.upgradeConveyorLine(startX, startY, endX, endY);\n          \n          \n            \n                            }else{\n          \n          \n            \n                                points = Placement.pathfindLine(true, startX, startY, endX, endY);\n          \n          \n            \n                            }", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r540430847", "createdAt": "2020-12-10T19:16:46Z", "author": {"login": "Quezler"}, "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -1161,7 +1162,17 @@ void iterateLine(int startX, int startY, int endX, int endY, Cons<PlaceLine> con\n         }\n \n         if(diagonal){\n-            points = Placement.pathfindLine(block != null && block.conveyorPlacement, startX, startY, endX, endY);\n+            if(block != null && block instanceof Conveyor){\n+                Tile start = world.tile(startX, startY);\n+                Tile end = world.tile(endX, endY);\n+                if(start.block() instanceof Conveyor && end.block() instanceof Conveyor){\n+                    points = Placement.upgradeConveyorLine(startX, startY, endX, endY);\n+                }else{\n+                    points = Placement.pathfindLine(true, startX, startY, endX, endY);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f8338d9f3e97f27f4774f59dec2ff6fa335406e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODQzMjUz", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-550843253", "createdAt": "2020-12-12T16:33:27Z", "commit": {"oid": "4245d5900c0290af7f1df038c82638a805311020"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjozMzoyOFrOIEj8tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjozNDowOFrOIEj94Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTY1NDE5Nw==", "bodyText": "These two functions are nearly the same, and use conduit/conveyor-specific implementation details. This isn't acceptable.", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r541654197", "createdAt": "2020-12-12T16:33:28Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/input/Placement.java", "diffHunk": "@@ -54,6 +55,32 @@\n         return points;\n     }\n \n+    public static Seq<Point2> upgradeConveyorLine(int startX, int startY, int endX, int endY){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4245d5900c0290af7f1df038c82638a805311020"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTY1NDQ5Nw==", "bodyText": "Conduits/conveyors should not be hardcoded into the system with special functions to handle them. The logic for each type of block is practically identical.", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r541654497", "createdAt": "2020-12-12T16:34:08Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -1161,7 +1163,15 @@ void iterateLine(int startX, int startY, int endX, int endY, Cons<PlaceLine> con\n         }\n \n         if(diagonal){\n-            points = Placement.pathfindLine(block != null && block.conveyorPlacement, startX, startY, endX, endY);\n+            Tile start = world.tile(startX, startY);\n+            Tile end = world.tile(endX, endY);\n+            if(block != null && block instanceof Conveyor && start.block() instanceof Conveyor && end.block() instanceof Conveyor && start.block() != block){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4245d5900c0290af7f1df038c82638a805311020"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODQ1ODE5", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-550845819", "createdAt": "2020-12-12T17:07:31Z", "commit": {"oid": "4245d5900c0290af7f1df038c82638a805311020"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNzowNzozMVrOIElAOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNzowNzozMVrOIElAOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTY3MTQ4Mw==", "bodyText": "All this could be shortened by using ternary:\nreturn next != null && next.build instanceof ConduitBuild ? (ConduitBuild) next.build : null;", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r541671483", "createdAt": "2020-12-12T17:07:31Z", "author": {"login": "joshuaptfan"}, "path": "core/src/mindustry/world/blocks/liquid/Conduit.java", "diffHunk": "@@ -119,6 +119,16 @@ public void onProximityUpdate(){\n             blending = bits[4];\n         }\n \n+        @Nullable\n+        public ConduitBuild nextConduit(){\n+            Tile next = tile.nearby(rotation);\n+            if(next != null && next.build instanceof ConduitBuild){\n+                return (ConduitBuild) next.build;\n+            }else{\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4245d5900c0290af7f1df038c82638a805311020"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODU3MzM0", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-550857334", "createdAt": "2020-12-12T19:50:11Z", "commit": {"oid": "faf638a11f6b154854d0a6524e8cb751d2ca56c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxOTo1MDoxMVrOIEqdrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxOTo1MDoxMVrOIEqdrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTc2MDk0Mg==", "bodyText": "Actually this line is kinda redundant but idk if's good for performance or not. (start.block() != block)", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r541760942", "createdAt": "2020-12-12T19:50:11Z", "author": {"login": "Slava0135"}, "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -1165,10 +1164,13 @@ void iterateLine(int startX, int startY, int endX, int endY, Cons<PlaceLine> con\n         if(diagonal){\n             Tile start = world.tile(startX, startY);\n             Tile end = world.tile(endX, endY);\n-            if(block != null && block instanceof Conveyor && start.block() instanceof Conveyor && end.block() instanceof Conveyor && start.block() != block){\n-                points = Placement.upgradeConveyorLine(startX, startY, endX, endY);\n-            }else if(block != null && block instanceof Conduit && start.block() instanceof Conduit && end.block() instanceof Conduit && start.block() != block){\n-                points = Placement.upgradeConduitLine(startX, startY, endX, endY);\n+            if(block != null && block instanceof Autotiler\n+                    && start.block() != block", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faf638a11f6b154854d0a6524e8cb751d2ca56c6"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc4fbe38f7852cd87a4856fac763281288663892", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/dc4fbe38f7852cd87a4856fac763281288663892", "committedDate": "2020-12-12T19:27:59Z", "message": "s t y l e"}, "afterCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/c2518acf0aa90251d751102fe222ff238fbdb4ef", "committedDate": "2020-12-13T15:22:40Z", "message": "conveyor/conduit upgrading system"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDQwMTY3", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-551040167", "createdAt": "2020-12-14T04:45:06Z", "commit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo0NTowNlrOIE_rTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo0NjowMVrOIE_sSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODQ5Mw==", "bodyText": "Why is this called AutotilerBuilding when it has nothing to do with tiling itself...?", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542108493", "createdAt": "2020-12-14T04:45:06Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/world/blocks/distribution/AutotilerBuilding.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package mindustry.world.blocks.distribution;\n+\n+import mindustry.gen.Building;\n+import mindustry.world.Block;\n+\n+public interface AutotilerBuilding{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODU1Nw==", "bodyText": "Why not just use build.block?", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542108557", "createdAt": "2020-12-14T04:45:19Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/world/blocks/distribution/AutotilerBuilding.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package mindustry.world.blocks.distribution;\n+\n+import mindustry.gen.Building;\n+import mindustry.world.Block;\n+\n+public interface AutotilerBuilding{\n+    Building next();\n+    Block getBlockBasedOn();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODY1OQ==", "bodyText": "unnecessary space before cast", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542108659", "createdAt": "2020-12-14T04:45:42Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/input/Placement.java", "diffHunk": "@@ -54,6 +55,20 @@\n         return points;\n     }\n \n+    public static Seq<Point2> upgradeLine(int startX, int startY, int endX, int endY){\n+        Pools.freeAll(points);\n+        points.clear();\n+        Building building = world.tile(startX, startY).build;\n+        points.add(Pools.obtain(Point2.class, Point2::new).set(startX, startY));\n+        while((building.tile.x != endX || building.tile.y != endY)){\n+            AutotilerBuilding autotiler = (AutotilerBuilding) building;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODcwOA==", "bodyText": "imports should be *", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542108708", "createdAt": "2020-12-14T04:45:53Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/input/Placement.java", "diffHunk": "@@ -5,7 +5,9 @@\n import arc.math.geom.*;\n import arc.struct.*;\n import arc.util.pooling.*;\n+import mindustry.gen.Building;\n import mindustry.world.*;\n+import mindustry.world.blocks.distribution.AutotilerBuilding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEwODc0Ng==", "bodyText": "unnecessary spaces before cast, line below too", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542108746", "createdAt": "2020-12-14T04:46:01Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -1161,7 +1162,18 @@ void iterateLine(int startX, int startY, int endX, int endY, Cons<PlaceLine> con\n         }\n \n         if(diagonal){\n-            points = Placement.pathfindLine(block != null && block.conveyorPlacement, startX, startY, endX, endY);\n+            Tile start = world.tile(startX, startY);\n+            Tile end = world.tile(endX, endY);\n+            if(block != null && block instanceof Autotiler\n+                    && start.block() != block\n+                    && start.build instanceof AutotilerBuilding\n+                    && end.build instanceof AutotilerBuilding\n+                    && block.canReplace(((AutotilerBuilding) end.build).getBlockBasedOn())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875", "committedDate": "2020-12-14T09:21:04Z", "message": "conveyor/conduit upgrading system"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2518acf0aa90251d751102fe222ff238fbdb4ef", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/c2518acf0aa90251d751102fe222ff238fbdb4ef", "committedDate": "2020-12-13T15:22:40Z", "message": "conveyor/conduit upgrading system"}, "afterCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875", "committedDate": "2020-12-14T09:21:04Z", "message": "conveyor/conduit upgrading system"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjcxMTg4", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-551271188", "createdAt": "2020-12-14T11:16:17Z", "commit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToxODozMVrOIFLxhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToyMDozOFrOIFL2iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNjY5Mg==", "bodyText": "why place double brackets here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while((building.tile.x != endX || building.tile.y != endY)){\n          \n          \n            \n                    while(building.tile.x != endX || building.tile.y != endY){", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542306692", "createdAt": "2020-12-14T11:18:31Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/input/Placement.java", "diffHunk": "@@ -54,6 +55,20 @@\n         return points;\n     }\n \n+    public static Seq<Point2> upgradeLine(int startX, int startY, int endX, int endY){\n+        Pools.freeAll(points);\n+        points.clear();\n+        Building building = world.tile(startX, startY).build;\n+        points.add(Pools.obtain(Point2.class, Point2::new).set(startX, startY));\n+        while((building.tile.x != endX || building.tile.y != endY)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzAyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import mindustry.gen.Building;\n          \n          \n            \n            import mindustry.gen.*;", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542307020", "createdAt": "2020-12-14T11:19:05Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/input/Placement.java", "diffHunk": "@@ -5,7 +5,9 @@\n import arc.math.geom.*;\n import arc.struct.*;\n import arc.util.pooling.*;\n+import mindustry.gen.Building;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzIwMg==", "bodyText": "imports should be *\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import mindustry.world.blocks.distribution.ChainedBuilding;\n          \n          \n            \n            import mindustry.world.blocks.distribution.*;", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542307202", "createdAt": "2020-12-14T11:19:24Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -32,6 +32,7 @@\n import mindustry.world.*;\n import mindustry.world.blocks.*;\n import mindustry.world.blocks.ConstructBlock.*;\n+import mindustry.world.blocks.distribution.ChainedBuilding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzY3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import mindustry.gen.Building;\n          \n          \n            \n            import mindustry.gen.*;", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542307671", "createdAt": "2020-12-14T11:20:07Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/world/blocks/distribution/ChainedBuilding.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package mindustry.world.blocks.distribution;\n+\n+import mindustry.gen.Building;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNzk3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import mindustry.world.blocks.distribution.ChainedBuilding;\n          \n          \n            \n            import mindustry.world.blocks.distribution.*;", "url": "https://github.com/Anuken/Mindustry/pull/3912#discussion_r542307977", "createdAt": "2020-12-14T11:20:38Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/world/blocks/liquid/Conduit.java", "diffHunk": "@@ -16,6 +16,7 @@\n import mindustry.type.*;\n import mindustry.world.*;\n import mindustry.world.blocks.*;\n+import mindustry.world.blocks.distribution.ChainedBuilding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5b1c2ac0f1513684999ce7ceacbe35cdcf0875"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a97a8e365309bde787f6314b8fd3cb54e74273", "author": {"user": {"login": "Slava0135", "name": "Slava0135"}}, "url": "https://github.com/Anuken/Mindustry/commit/43a97a8e365309bde787f6314b8fd3cb54e74273", "committedDate": "2020-12-14T14:11:13Z", "message": "style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNjM0MDE4", "url": "https://github.com/Anuken/Mindustry/pull/3912#pullrequestreview-551634018", "createdAt": "2020-12-14T17:07:19Z", "commit": {"oid": "43a97a8e365309bde787f6314b8fd3cb54e74273"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2253, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}