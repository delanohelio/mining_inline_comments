{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTEyODM3", "number": 3284, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwOTo1MzoyNlrOE2Vs-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNzo0MVrOE2XO9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE0MTM2OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/maps/SectorDamage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwOTo1MzoyNlrOHvG_GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwOTo1MzoyNlrOHvG_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1OTU3Ng==", "bodyText": "Maybe leave the \u02bbinstanceof` keyword here?", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519159576", "createdAt": "2020-11-07T09:53:26Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/maps/SectorDamage.java", "diffHunk": "@@ -291,7 +291,7 @@ public static void writeParameters(SectorInfo info){\n \n                 sumHealth += unit.health*healthMult + unit.shield;\n                 sumDps += unit.type.dpsEstimate;\n-                if(unit.abilities.find(a -> a instanceof RepairFieldAbility) instanceof RepairFieldAbility h){\n+                if(unit.abilities.find(RepairFieldAbility.class::isInstance) instanceof RepairFieldAbility h){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed36390f3cfa53bc2bcfa5e113b3f7c6796b1c06"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE0MTYyOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/type/Item.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwOTo1Mzo0MlrOHvG_NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwOTo1ODoxNFrOHvHAmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1OTYwNQ==", "bodyText": "Same", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519159605", "createdAt": "2020-11-07T09:53:42Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/type/Item.java", "diffHunk": "@@ -53,6 +53,6 @@ public ContentType getContentType(){\n \n     /** Allocates a new array containing all items that generate ores. */\n     public static Seq<Item> getAllOres(){\n-        return content.blocks().select(b -> b instanceof OreBlock).map(b -> ((Floor)b).itemDrop);\n+        return content.blocks().select(OreBlock.class::isInstance).map(b -> ((Floor)b).itemDrop);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed36390f3cfa53bc2bcfa5e113b3f7c6796b1c06"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1OTk2Mw==", "bodyText": "Maybe yes", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519159963", "createdAt": "2020-11-07T09:58:14Z", "author": {"login": "skykatik"}, "path": "core/src/mindustry/type/Item.java", "diffHunk": "@@ -53,6 +53,6 @@ public ContentType getContentType(){\n \n     /** Allocates a new array containing all items that generate ores. */\n     public static Seq<Item> getAllOres(){\n-        return content.blocks().select(b -> b instanceof OreBlock).map(b -> ((Floor)b).itemDrop);\n+        return content.blocks().select(OreBlock.class::isInstance).map(b -> ((Floor)b).itemDrop);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1OTYwNQ=="}, "originalCommit": {"oid": "ed36390f3cfa53bc2bcfa5e113b3f7c6796b1c06"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM5MTA3OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/logic/LogicOp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjoxMFrOHvIysw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjoxMFrOHvIysw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTE3MQ==", "bodyText": "not compatible with android", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519189171", "createdAt": "2020-11-07T15:36:10Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/logic/LogicOp.java", "diffHunk": "@@ -4,7 +4,7 @@\n import arc.util.*;\n \n public enum LogicOp{\n-    add(\"+\", (a, b) -> a + b),\n+    add(\"+\", Double::sum),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8914d0543110ceabe83af7fea035b870dab9c7e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM5MTE2OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/logic/LogicOp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjoxOVrOHvIyvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjoxOVrOHvIyvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTE4Mg==", "bodyText": "fails to compile for some java versions", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519189182", "createdAt": "2020-11-07T15:36:19Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/logic/LogicOp.java", "diffHunk": "@@ -29,7 +29,7 @@\n     noise(\"noise\", LExecutor.noise::rawNoise2D),\n \n     not(\"not\", a -> ~(long)(a)),\n-    abs(\"abs\", a -> Math.abs(a)),\n+    abs(\"abs\", Math::abs),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8914d0543110ceabe83af7fea035b870dab9c7e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM5MTczOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/graphics/MenuRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjo1NVrOHvIzAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNjo1NVrOHvIzAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTI0OA==", "bodyText": "this is awful, never use reflection in a place where standard java works just fine", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519189248", "createdAt": "2020-11-07T15:36:55Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/graphics/MenuRenderer.java", "diffHunk": "@@ -42,7 +42,7 @@ public MenuRenderer(){\n     private void generate(){\n         world.beginMapLoad();\n         Tiles tiles = world.resize(width, height);\n-        Seq<Block> ores = content.blocks().select(b -> b instanceof OreBlock);\n+        Seq<Block> ores = content.blocks().select(OreBlock.class::isInstance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8914d0543110ceabe83af7fea035b870dab9c7e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDM5MjIzOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/core/Control.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNzo0MVrOHvIzPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNTozNzo0MVrOHvIzPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE4OTMxMQ==", "bodyText": "there's no reason to use method references when the result is longer code", "url": "https://github.com/Anuken/Mindustry/pull/3284#discussion_r519189311", "createdAt": "2020-11-07T15:37:41Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/core/Control.java", "diffHunk": "@@ -185,7 +186,7 @@ public Control(){\n                 if(state.isCampaign()){\n                     ui.announce(\"[accent]\" + state.rules.sector.name() + \"\\n\" +\n                         (state.rules.sector.info.resources.any() ? \"[lightgray]\" + bundle.get(\"sectors.resources\") + \"[white] \" +\n-                            state.rules.sector.info.resources.toString(\" \", u -> u.emoji()) : \"\"), 5);\n+                            state.rules.sector.info.resources.toString(\" \", UnlockableContent::emoji) : \"\"), 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8914d0543110ceabe83af7fea035b870dab9c7e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4440, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}