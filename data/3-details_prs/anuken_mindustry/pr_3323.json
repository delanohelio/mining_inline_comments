{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MzE2NzM5", "number": 3323, "title": "add file picker interface for mods", "bodyText": "read(Bin)File\nwrite(Bin)File\nasks the user to open or save a file with a certain extension (or any) for a certain purpose.\ncloses Anuken/Mindustry-Suggestions#570", "createdAt": "2020-11-10T08:33:29Z", "url": "https://github.com/Anuken/Mindustry/pull/3323", "merged": true, "mergeCommit": {"oid": "18cb0eeec609078814b086862d207ec2c06b8c5c"}, "closed": true, "closedAt": "2020-11-15T16:51:51Z", "author": {"login": "DeltaNedas"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbGjYaAFqTUyNzA0NzExMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcBxGZgH2gAyNTE4MzE2NzM5OmU5YmNmOWU4YjgyNTI5ZjI1MWI3MjRlN2JmMTBlOGM0NjllZGMxYTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDQ3MTEz", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-527047113", "createdAt": "2020-11-10T10:11:16Z", "commit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoxMToxNlrOHwVTHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoxMToxNlrOHwVTHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0MjY1Mg==", "bodyText": "Did you mean readBinFile(purpose, ext, cons)?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520442652", "createdAt": "2020-11-10T10:11:16Z", "author": {"login": "Gdeft"}, "path": "core/assets/scripts/base.js", "diffHunk": "@@ -1,13 +1,18 @@\n \"use strict\";\n \n const log = function(context, obj){\n-    Vars.mods.getScripts().log(context, String(obj))\n+    Vars.mods.scripts.log(context, String(obj))\n }\n \n-const readString = path => Vars.mods.getScripts().readString(path)\n-const readBytes = path => Vars.mods.getScripts().readBytes(path)\n-const loadMusic = path => Vars.mods.getScripts().loadMusic(path)\n-const loadSound = path => Vars.mods.getScripts().loadSound(path)\n+const readString = path => Vars.mods.scripts.readString(path)\n+const readBytes = path => Vars.mods.scripts.readBytes(path)\n+const loadMusic = path => Vars.mods.scripts.loadMusic(path)\n+const loadSound = path => Vars.mods.scripts.loadSound(path)\n+\n+const readFile = (purpose, ext, cons) => Vars.mods.scripts.readFile(purpose, ext, cons);\n+const readBinFile = (purpose, ext, cons) => Vars.mods.scripts.readNinFile(purpose, ext, cons);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjI0NzU2", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-527224756", "createdAt": "2020-11-10T13:56:17Z", "commit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NjoxN1rOHwdrXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NjoyNVrOHwdrww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3OTkzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ext == null ? fi -> true : fi -> fi.extEquals(ext),\n          \n          \n            \n                        fi -> ext == null || fi.extEquals(ext),", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520579935", "createdAt": "2020-11-10T13:56:17Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            ext == null ? fi -> true : fi -> fi.extEquals(ext),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MDAzNQ==", "bodyText": "What's up with this indentation?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520580035", "createdAt": "2020-11-10T13:56:25Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            ext == null ? fi -> true : fi -> fi.extEquals(ext),\n+            fi -> {\n+\t\t\t\ttry{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MzEwNTU5", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-527310559", "createdAt": "2020-11-10T15:18:59Z", "commit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxODo1OVrOHwhktA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToyMToyN1rOHwhsbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0Mzc2NA==", "bodyText": "missed semicolon here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\"),\n          \n          \n            \n                    Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\");", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520643764", "createdAt": "2020-11-10T15:18:59Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            fi -> ext == null || fi.extEquals(ext),\n+            fi -> {\n+                try{\n+                    cons.get(fi);\n+                }catch(Exception e){\n+                    Log.err(\"Failed to select file '@' for a mod\", fi);\n+                    Log.err(e);\n+                }\n+            });\n+\n+        //add purpose and extension at the top\n+        Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTc0MA==", "bodyText": "actually, Arc also uses $ for bundle shortcurs.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n          \n          \n            \n                    purpose = purpose.startsWith(\"@\") ||  purpose.startsWith(\"$\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520645740", "createdAt": "2020-11-10T15:21:27Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ae1ba6d080d7ce50b07273ca48e353b6fafa9a1", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/8ae1ba6d080d7ce50b07273ca48e353b6fafa9a1", "committedDate": "2020-11-11T07:44:48Z", "message": "h"}, "afterCommit": {"oid": "9a28e147b86ce1b0678af326422b8259ab6d5b76", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/9a28e147b86ce1b0678af326422b8259ab6d5b76", "committedDate": "2020-11-11T07:47:52Z", "message": "add file picker interface for mods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87548a33d1a68b7a9a3e383a62866f5cc80fb3c6", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/87548a33d1a68b7a9a3e383a62866f5cc80fb3c6", "committedDate": "2020-11-11T07:52:46Z", "message": "h"}, "afterCommit": {"oid": "d0f9d91f939626996709aa4d361a83d1e57b7e8a", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/d0f9d91f939626996709aa4d361a83d1e57b7e8a", "committedDate": "2020-11-11T08:26:11Z", "message": "add file picker interface for mods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0f9d91f939626996709aa4d361a83d1e57b7e8a", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/d0f9d91f939626996709aa4d361a83d1e57b7e8a", "committedDate": "2020-11-11T08:26:11Z", "message": "add file picker interface for mods"}, "afterCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/01ab585bf789527e042ef0ef22c365e852e6c816", "committedDate": "2020-11-11T10:06:51Z", "message": "add file picker interface for mods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjI1MTgz", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-528225183", "createdAt": "2020-11-11T14:33:18Z", "commit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzoxOFrOHxPrbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzoxOFrOHxPrbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTE1MQ==", "bodyText": "This is very hacky, and will fail on every platform except desktop. Android and iOS use native file chooser dialogs.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521399151", "createdAt": "2020-11-11T14:33:18Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+\t\tfinal byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        Vars.platform.showFileChooser(open, ext, fi -> {\n+            try{\n+                cons.get(fi);\n+            }catch(Exception e){\n+                Log.err(\"Failed to select file '@' for a mod\", fi);\n+                Log.err(e);\n+            }\n+        });\n+\n+        //add purpose and extension at the top\n+        Label title = Core.scene.getDialog().title;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjI1NTQ0", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-528225544", "createdAt": "2020-11-11T14:33:40Z", "commit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzo0MVrOHxPsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzo0MVrOHxPsdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTQxMw==", "bodyText": "Why is this indented?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521399413", "createdAt": "2020-11-11T14:33:41Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Mzc1MDUz", "url": "https://github.com/Anuken/Mindustry/pull/3323#pullrequestreview-529375053", "createdAt": "2020-11-12T18:32:05Z", "commit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozMjowNlrOHyIQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozMjowNlrOHyIQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjIzMg==", "bodyText": "You can't have a null extension supplied to the file chooser. On desktop platforms, it'll probably display nothing, and on other platforms it may just crash.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r522326232", "createdAt": "2020-11-12T18:32:06Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,46 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        final String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        final byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        //add purpose and extension at the top\n+        String title = Core.bundle.get(open ? \"@open\": \"@save\") + \" - \" + purpose + (ext == null ? \"\" : \" (.\" + ext + \")\");\n+        Vars.platform.showFileChooser(open, title, ext, fi -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6da6c9426d2692e7547b3ff73906a682bcf105f6", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/6da6c9426d2692e7547b3ff73906a682bcf105f6", "committedDate": "2020-11-12T23:21:49Z", "message": "add file picker interface for mods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5bb04de9109e08877a74d7f182dcae30962ab78", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/b5bb04de9109e08877a74d7f182dcae30962ab78", "committedDate": "2020-11-12T23:20:50Z", "message": "r"}, "afterCommit": {"oid": "6da6c9426d2692e7547b3ff73906a682bcf105f6", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/6da6c9426d2692e7547b3ff73906a682bcf105f6", "committedDate": "2020-11-12T23:21:49Z", "message": "add file picker interface for mods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9bcf9e8b82529f251b724e7bf10e8c469edc1a5", "author": {"user": {"login": "DeltaNedas", "name": null}}, "url": "https://github.com/Anuken/Mindustry/commit/e9bcf9e8b82529f251b724e7bf10e8c469edc1a5", "committedDate": "2020-11-13T07:10:39Z", "message": "Merge branch 'master' into files"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2416, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}