{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MzE2NzM5", "number": 3323, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoxMToxNlrOE3J2pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozMjowNlrOE4S0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjY4NTgyOnYy", "diffSide": "RIGHT", "path": "core/assets/scripts/base.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoxMToxNlrOHwVTHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyMTo1MVrOHwe0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0MjY1Mg==", "bodyText": "Did you mean readBinFile(purpose, ext, cons)?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520442652", "createdAt": "2020-11-10T10:11:16Z", "author": {"login": "Gdeft"}, "path": "core/assets/scripts/base.js", "diffHunk": "@@ -1,13 +1,18 @@\n \"use strict\";\n \n const log = function(context, obj){\n-    Vars.mods.getScripts().log(context, String(obj))\n+    Vars.mods.scripts.log(context, String(obj))\n }\n \n-const readString = path => Vars.mods.getScripts().readString(path)\n-const readBytes = path => Vars.mods.getScripts().readBytes(path)\n-const loadMusic = path => Vars.mods.getScripts().loadMusic(path)\n-const loadSound = path => Vars.mods.getScripts().loadSound(path)\n+const readString = path => Vars.mods.scripts.readString(path)\n+const readBytes = path => Vars.mods.scripts.readBytes(path)\n+const loadMusic = path => Vars.mods.scripts.loadMusic(path)\n+const loadSound = path => Vars.mods.scripts.loadSound(path)\n+\n+const readFile = (purpose, ext, cons) => Vars.mods.scripts.readFile(purpose, ext, cons);\n+const readBinFile = (purpose, ext, cons) => Vars.mods.scripts.readNinFile(purpose, ext, cons);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5ODcxNw==", "bodyText": "nin", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520598717", "createdAt": "2020-11-10T14:21:51Z", "author": {"login": "DeltaNedas"}, "path": "core/assets/scripts/base.js", "diffHunk": "@@ -1,13 +1,18 @@\n \"use strict\";\n \n const log = function(context, obj){\n-    Vars.mods.getScripts().log(context, String(obj))\n+    Vars.mods.scripts.log(context, String(obj))\n }\n \n-const readString = path => Vars.mods.getScripts().readString(path)\n-const readBytes = path => Vars.mods.getScripts().readBytes(path)\n-const loadMusic = path => Vars.mods.getScripts().loadMusic(path)\n-const loadSound = path => Vars.mods.getScripts().loadSound(path)\n+const readString = path => Vars.mods.scripts.readString(path)\n+const readBytes = path => Vars.mods.scripts.readBytes(path)\n+const loadMusic = path => Vars.mods.scripts.loadMusic(path)\n+const loadSound = path => Vars.mods.scripts.loadSound(path)\n+\n+const readFile = (purpose, ext, cons) => Vars.mods.scripts.readFile(purpose, ext, cons);\n+const readBinFile = (purpose, ext, cons) => Vars.mods.scripts.readNinFile(purpose, ext, cons);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ0MjY1Mg=="}, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzU2MDIyOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NjoxN1rOHwdrXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NjoxN1rOHwdrXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU3OTkzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ext == null ? fi -> true : fi -> fi.extEquals(ext),\n          \n          \n            \n                        fi -> ext == null || fi.extEquals(ext),", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520579935", "createdAt": "2020-11-10T13:56:17Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            ext == null ? fi -> true : fi -> fi.extEquals(ext),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzU2MDkyOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMzo1NjoyNVrOHwdrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNDoyMjo0OVrOHwe3ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MDAzNQ==", "bodyText": "What's up with this indentation?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520580035", "createdAt": "2020-11-10T13:56:25Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            ext == null ? fi -> true : fi -> fi.extEquals(ext),\n+            fi -> {\n+\t\t\t\ttry{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5OTQ5MQ==", "bodyText": "^O", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520599491", "createdAt": "2020-11-10T14:22:49Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            ext == null ? fi -> true : fi -> fi.extEquals(ext),\n+            fi -> {\n+\t\t\t\ttry{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4MDAzNQ=="}, "originalCommit": {"oid": "154a91a411a405a854e61ef749cd8bdebd5cf72c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Mzk1OTc0OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxODo1OVrOHwhktA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToxODo1OVrOHwhktA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0Mzc2NA==", "bodyText": "missed semicolon here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\"),\n          \n          \n            \n                    Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\");", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520643764", "createdAt": "2020-11-10T15:18:59Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        platform.showFileChooser(open,\n+            fi -> ext == null || fi.extEquals(ext),\n+            fi -> {\n+                try{\n+                    cons.get(fi);\n+                }catch(Exception e){\n+                    Log.err(\"Failed to select file '@' for a mod\", fi);\n+                    Log.err(e);\n+                }\n+            });\n+\n+        //add purpose and extension at the top\n+        Core.scene.getDialog().title += \" - \" + purpose + (ext == null ? \"\" : \" [stat](.\" + ext + \")\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Mzk3MTc5OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNToyMToyN1rOHwhsbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjo0NzowMVrOHwltQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTc0MA==", "bodyText": "actually, Arc also uses $ for bundle shortcurs.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n          \n          \n            \n                    purpose = purpose.startsWith(\"@\") ||  purpose.startsWith(\"$\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520645740", "createdAt": "2020-11-10T15:21:27Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwODU2Mg==", "bodyText": "anuke changed that, see Platform using @save/@OPEN", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520708562", "createdAt": "2020-11-10T16:42:57Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTc0MA=="}, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcxMTQ4OQ==", "bodyText": "I said Arc also uses $, see Label#104.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r520711489", "createdAt": "2020-11-10T16:47:01Z", "author": {"login": "summetdev"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,47 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> string){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        selectFile(false, purpose, ext, fi -> fi.writeString(contents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(contents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTc0MA=="}, "originalCommit": {"oid": "949d0a237a67ef453523d34be3ce98f8dcee045f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODcyNDk5OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzoxOFrOHxPrbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0MDoyNVrOHxVK6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTE1MQ==", "bodyText": "This is very hacky, and will fail on every platform except desktop. Android and iOS use native file chooser dialogs.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521399151", "createdAt": "2020-11-11T14:33:18Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+\t\tfinal byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        Vars.platform.showFileChooser(open, ext, fi -> {\n+            try{\n+                cons.get(fi);\n+            }catch(Exception e){\n+                Log.err(\"Failed to select file '@' for a mod\", fi);\n+                Log.err(e);\n+            }\n+        });\n+\n+        //add purpose and extension at the top\n+        Label title = Core.scene.getDialog().title;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4OTEyOQ==", "bodyText": "ill add an overload in Platform then", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521489129", "createdAt": "2020-11-11T16:40:25Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+\t\tfinal byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        Vars.platform.showFileChooser(open, ext, fi -> {\n+            try{\n+                cons.get(fi);\n+            }catch(Exception e){\n+                Log.err(\"Failed to select file '@' for a mod\", fi);\n+                Log.err(e);\n+            }\n+        });\n+\n+        //add purpose and extension at the top\n+        Label title = Core.scene.getDialog().title;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTE1MQ=="}, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODcyNjYwOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDozMzo0MVrOHxPsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjozOTo1N1rOHxVJrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTQxMw==", "bodyText": "Why is this indented?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521399413", "createdAt": "2020-11-11T14:33:41Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4ODgxNQ==", "bodyText": "oops", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r521488815", "createdAt": "2020-11-11T16:39:57Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,48 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+\t\tfinal String fContents = contents;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM5OTQxMw=="}, "originalCommit": {"oid": "01ab585bf789527e042ef0ef22c365e852e6c816"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDYzOTkyOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozMjowNlrOHyIQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODo0NDoyOVrOHyIuvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjIzMg==", "bodyText": "You can't have a null extension supplied to the file chooser. On desktop platforms, it'll probably display nothing, and on other platforms it may just crash.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r522326232", "createdAt": "2020-11-12T18:32:06Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,46 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        final String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        final byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        //add purpose and extension at the top\n+        String title = Core.bundle.get(open ? \"@open\": \"@save\") + \" - \" + purpose + (ext == null ? \"\" : \" (.\" + ext + \")\");\n+        Vars.platform.showFileChooser(open, title, ext, fi -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNzQyMg==", "bodyText": "would \"\" function how i want null to?", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r522327422", "createdAt": "2020-11-12T18:33:47Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,46 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        final String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        final byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        //add purpose and extension at the top\n+        String title = Core.bundle.get(open ? \"@open\": \"@save\") + \" - \" + purpose + (ext == null ? \"\" : \" (.\" + ext + \")\");\n+        Vars.platform.showFileChooser(open, title, ext, fi -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjIzMg=="}, "originalCommit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzMTEyNQ==", "bodyText": "For desktop: No.\nFor iOS/Android: There are multiple file chooser implementations and it's hard to figure out what will happen unless you test it manually.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r522331125", "createdAt": "2020-11-12T18:40:01Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,46 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        final String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        final byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        //add purpose and extension at the top\n+        String title = Core.bundle.get(open ? \"@open\": \"@save\") + \" - \" + purpose + (ext == null ? \"\" : \" (.\" + ext + \")\");\n+        Vars.platform.showFileChooser(open, title, ext, fi -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjIzMg=="}, "originalCommit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzMzg4Ng==", "bodyText": "ah well, everything has extensions set in stone might as well go with it.", "url": "https://github.com/Anuken/Mindustry/pull/3323#discussion_r522333886", "createdAt": "2020-11-12T18:44:29Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -116,6 +118,46 @@ public Music loadMusic(String soundName){\n         return sound;\n     }\n \n+    /** Ask the user to select a file to read for a certain purpose like \"Please upload a sprite\"\n+        Extension can be null to select any file. */\n+    public void readFile(String purpose, String ext, Cons<String> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readString()));\n+    }\n+\n+    /** readFile but for a byte[] */\n+    public void readBinFile(String purpose, String ext, Cons<byte[]> cons){\n+        selectFile(true, purpose, ext, fi -> cons.get(fi.readBytes()));\n+    }\n+\n+    /** Ask the user to write a file.\n+        Extension can be null to allow any filename. */\n+    public void writeFile(String purpose, String ext, String contents){\n+        if(contents == null) contents = \"\";\n+        final String fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeString(fContents));\n+    }\n+\n+    /** writeFile but for a byte[] */\n+    public void writeBinFile(String purpose, String ext, byte[] contents){\n+        if(contents == null) contents = new byte[0];\n+        final byte[] fContents = contents;\n+        selectFile(false, purpose, ext, fi -> fi.writeBytes(fContents));\n+    }\n+\n+    private void selectFile(boolean open, String purpose, String ext, Cons<Fi> cons){\n+        purpose = purpose.startsWith(\"@\") ? Core.bundle.get(purpose.substring(1)) : purpose;\n+        //add purpose and extension at the top\n+        String title = Core.bundle.get(open ? \"@open\": \"@save\") + \" - \" + purpose + (ext == null ? \"\" : \" (.\" + ext + \")\");\n+        Vars.platform.showFileChooser(open, title, ext, fi -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjIzMg=="}, "originalCommit": {"oid": "0c880678fc6d02f2583f3aff77cec5c1b0a91760"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4446, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}