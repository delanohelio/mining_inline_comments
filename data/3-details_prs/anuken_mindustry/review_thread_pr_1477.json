{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTI4NDc2", "number": 1477, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMTo1MTo0OFrODccZww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NzowNlrODcuLSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTUyMDY3OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMTo1MTo0OFrOFkfv6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMTo1MTo0OFrOFkfv6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxMzIyNA==", "bodyText": "This could be more powerful if it allowed for cross-mod script loading. A could depend on B, and A could include B's utilities.js by calling require(\"B/utilities\").", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373813224", "createdAt": "2020-02-02T01:51:48Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +94,30 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        public ScriptModuleProvider(){\n+            super(null, null);\n+        }\n+\n+        @Override\n+        public ModuleSource loadSource(String moduleId, Scriptable paths, Object validator) throws IOException, URISyntaxException{\n+            if(loadedMod == null) return null;\n+            Fi module = loadedMod.root.child(\"scripts\").child(moduleId + \".js\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51bc5c3b74a11bfd1ae41d263f3e124ec3c4b0d6"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTgzOTcwOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Mods.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNTo0MTo1MFrOFkiT3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNTo0MTo1MFrOFkiT3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg1NTE5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);\n          \n          \n            \n            \t\t\t\t\t\t\tLog.err(\"No main.js found for mod {0}.\", mod.meta.name);", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373855198", "createdAt": "2020-02-02T15:41:50Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -460,38 +460,24 @@ public void loadScripts(){\n             eachEnabled(mod -> {\n                 if(mod.root.child(\"scripts\").exists()){\n                     content.setCurrentMod(mod);\n-                    if(mod.meta.mainScript == null){\n-                        mod.scripts = mod.root.child(\"scripts\").findAll(f -> f.extension().equals(\"js\"));\n-                        Log.debug(\"[{0}] Found {1} scripts.\", mod.meta.name, mod.scripts.size);\n-\n-                        for(Fi file : mod.scripts){\n-                            try{\n-                                if(scripts == null){\n-                                    scripts = platform.createScripts();\n-                                }\n-                                scripts.run(mod, file);\n-                            }catch(Throwable e){\n-                                Core.app.post(() -> {\n-                                    Log.err(\"Error loading script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                    e.printStackTrace();\n-                                });\n-                                break;\n-                            }\n-                        }\n-                    }else{\n-                        Fi file = mod.root.child(\"scripts\").child(mod.meta.mainScript + \".js\");\n-                        try{\n-                            if(scripts == null){\n-                                scripts = platform.createScripts();\n-                            }\n-                            scripts.run(mod, file);\n-                        }catch(Throwable e){\n-                            Core.app.post(() -> {\n-                                Log.err(\"Error loading main script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                e.printStackTrace();\n-                            });\n-                        }\n-                    }\n+\t\t\t\t\tFi main = mod.root.child(\"scripts\").child(\"main.js\");\n+\t\t\t\t\tif(main.exists() && !main.isDirectory()){\n+\t\t\t\t\t\ttry{\n+\t\t\t\t\t\t\tif(scripts == null){\n+\t\t\t\t\t\t\t\tscripts = platform.createScripts();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tscripts.run(mod, main);\n+\t\t\t\t\t\t}catch(Throwable e){\n+\t\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\t\tLog.err(\"Error loading main script {0} for mod {1}.\", main.name(), mod.meta.name);\n+\t\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}else{\n+\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ab7ceb77cab154218f5950eee61fe8e3a86c5c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTgzOTg5OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Mods.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNTo0MjozMVrOFkiT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNTo0MjozMVrOFkiT_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg1NTIzMA==", "bodyText": "What have you done with the formatting?", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373855230", "createdAt": "2020-02-02T15:42:31Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -460,38 +460,24 @@ public void loadScripts(){\n             eachEnabled(mod -> {\n                 if(mod.root.child(\"scripts\").exists()){\n                     content.setCurrentMod(mod);\n-                    if(mod.meta.mainScript == null){\n-                        mod.scripts = mod.root.child(\"scripts\").findAll(f -> f.extension().equals(\"js\"));\n-                        Log.debug(\"[{0}] Found {1} scripts.\", mod.meta.name, mod.scripts.size);\n-\n-                        for(Fi file : mod.scripts){\n-                            try{\n-                                if(scripts == null){\n-                                    scripts = platform.createScripts();\n-                                }\n-                                scripts.run(mod, file);\n-                            }catch(Throwable e){\n-                                Core.app.post(() -> {\n-                                    Log.err(\"Error loading script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                    e.printStackTrace();\n-                                });\n-                                break;\n-                            }\n-                        }\n-                    }else{\n-                        Fi file = mod.root.child(\"scripts\").child(mod.meta.mainScript + \".js\");\n-                        try{\n-                            if(scripts == null){\n-                                scripts = platform.createScripts();\n-                            }\n-                            scripts.run(mod, file);\n-                        }catch(Throwable e){\n-                            Core.app.post(() -> {\n-                                Log.err(\"Error loading main script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                e.printStackTrace();\n-                            });\n-                        }\n-                    }\n+\t\t\t\t\tFi main = mod.root.child(\"scripts\").child(\"main.js\");\n+\t\t\t\t\tif(main.exists() && !main.isDirectory()){\n+\t\t\t\t\t\ttry{\n+\t\t\t\t\t\t\tif(scripts == null){\n+\t\t\t\t\t\t\t\tscripts = platform.createScripts();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tscripts.run(mod, main);\n+\t\t\t\t\t\t}catch(Throwable e){\n+\t\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\t\tLog.err(\"Error loading main script {0} for mod {1}.\", main.name(), mod.meta.name);\n+\t\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}else{\n+\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);\n+\t\t\t\t\t\t});\n+\t\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ab7ceb77cab154218f5950eee61fe8e3a86c5c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDQyNTU5OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Mods.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NDo0NVrOFk6W2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODozMzo1MlrOFk7hSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTE3Ng==", "bodyText": "mainScript isn't needed anymore.", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374249176", "createdAt": "2020-02-03T17:54:45Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -794,7 +795,7 @@ public String toString(){\n \n     /** Plugin metadata information.*/\n     public static class ModMeta{\n-        public String name, displayName, author, description, version, main, minGameVersion;\n+        public String name, displayName, author, description, version, main, minGameVersion, mainScript;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f07f360329c23e52111bf18b3300f6f28512b6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2ODIzMw==", "bodyText": "o yea ill fix", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374268233", "createdAt": "2020-02-03T18:33:52Z", "author": {"login": "DeltaNedas"}, "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -794,7 +795,7 @@ public String toString(){\n \n     /** Plugin metadata information.*/\n     public static class ModMeta{\n-        public String name, displayName, author, description, version, main, minGameVersion;\n+        public String name, displayName, author, description, version, main, minGameVersion, mainScript;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTE3Ng=="}, "originalCommit": {"oid": "a9f07f360329c23e52111bf18b3300f6f28512b6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDQyNzI5OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NToxOFrOFk6X-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NToxOFrOFk6X-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTQ2Ng==", "bodyText": "Needs indent after ;", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374249466", "createdAt": "2020-02-03T17:55:18Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +95,47 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        private Pattern directory = Pattern.compile(\"^(.+?)/(.+)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f07f360329c23e52111bf18b3300f6f28512b6"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDQzMjc0OnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/mod/Scripts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NzowNlrOFk6bYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzo1NzowNlrOFk6bYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1MDMzOQ==", "bodyText": "Check if dir.exists() instead, I don't believe it can ever be null.", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374250339", "createdAt": "2020-02-03T17:57:06Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +95,47 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        private Pattern directory = Pattern.compile(\"^(.+?)/(.+)\");\n+        public ScriptModuleProvider(){\n+            super(null, null);\n+        }\n+\n+        @Override\n+        public ModuleSource loadSource(String moduleId, Scriptable paths, Object validator) throws IOException, URISyntaxException{\n+            if(loadedMod == null) return null;\n+            return loadSource(loadedMod, moduleId, loadedMod.root.child(\"scripts\"), validator);\n+        }\n+\n+        private ModuleSource loadSource(LoadedMod mod, String moduleId, Fi root, Object validator) throws IOException, URISyntaxException{\n+            Matcher matched = directory.matcher(moduleId);\n+            if(matched.find()){\n+                LoadedMod required = Vars.mods.locateMod(matched.group(1));\n+                String script = matched.group(2);\n+                if(required == null || root == required.root.child(\"scripts\")){ // Mod not found, or already using a mod\n+                    Fi dir = root.child(matched.group(1));\n+                    if(dir == null) return null; // Mod and folder not found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f07f360329c23e52111bf18b3300f6f28512b6"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4322, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}