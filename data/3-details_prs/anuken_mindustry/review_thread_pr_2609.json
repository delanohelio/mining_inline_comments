{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5Njk4NjYw", "number": 2609, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzowMFrOEl0qXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzo1NlrOEl0rqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDk1NTgzOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/net/CrashSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzowMFrOHVgxUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzowMFrOHVgxUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxOTA1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        + \"OS: \" + System.getProperty(\"os.name\") + \"x\" + (OS.is64Bit ? \"64\" : \"32\") + \"\\n\"\n          \n          \n            \n                        + \"OS: \" + System.getProperty(\"os.name\") + \" x\" + (OS.is64Bit ? \"64\" : \"32\") + \"\\n\"", "url": "https://github.com/Anuken/Mindustry/pull/2609#discussion_r492319056", "createdAt": "2020-09-21T20:13:00Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/net/CrashSender.java", "diffHunk": "@@ -19,19 +19,33 @@\n import java.util.*;\n \n import static arc.Core.*;\n+import static mindustry.Vars.mods;\n import static mindustry.Vars.net;\n \n public class CrashSender{\n \n+    public static String createReport(String error){\n+        String report = \"Oh no, Mindustry crashed!\\n\";\n+        if(mods.list().size == 0){\n+            report += \"Please report this at https://github.com/Anuken/Mindustry/issues/new?labels=bug&template=bug_report.md\\n\\n\";\n+        }\n+        return report + \"Version: \" + Version.combined() + (Vars.headless ? \" (Server)\" : \"\") + \"\\n\"\n+            + \"OS: \" + System.getProperty(\"os.name\") + \"x\" + (OS.is64Bit ? \"64\" : \"32\") + \"\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a70b1190d278f34246b3a9e78d924d62a5d1e4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDk1NjkzOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/net/CrashSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzoxOVrOHVgx8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzoxOVrOHVgx8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxOTIxOA==", "bodyText": "mod version would be nice too, e.g. examplemod:1.0", "url": "https://github.com/Anuken/Mindustry/pull/2609#discussion_r492319218", "createdAt": "2020-09-21T20:13:19Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/net/CrashSender.java", "diffHunk": "@@ -19,19 +19,33 @@\n import java.util.*;\n \n import static arc.Core.*;\n+import static mindustry.Vars.mods;\n import static mindustry.Vars.net;\n \n public class CrashSender{\n \n+    public static String createReport(String error){\n+        String report = \"Oh no, Mindustry crashed!\\n\";\n+        if(mods.list().size == 0){\n+            report += \"Please report this at https://github.com/Anuken/Mindustry/issues/new?labels=bug&template=bug_report.md\\n\\n\";\n+        }\n+        return report + \"Version: \" + Version.combined() + (Vars.headless ? \" (Server)\" : \"\") + \"\\n\"\n+            + \"OS: \" + System.getProperty(\"os.name\") + \"x\" + (OS.is64Bit ? \"64\" : \"32\") + \"\\n\"\n+            + \"Java Version: \" + System.getProperty(\"java.version\") + \"\\n\"\n+            + \"Java Architecture: \" + System.getProperty(\"sun.arch.data.model\") + \"\\n\"\n+            + mods.list().size + \" Mods: \" + mods.list().toString(\", \", mod -> mod.name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a70b1190d278f34246b3a9e78d924d62a5d1e4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDk1OTEzOnYy", "diffSide": "RIGHT", "path": "core/src/mindustry/net/CrashSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzo1NlrOHVgzRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDoxMzo1NlrOHVgzRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxOTU1OA==", "bodyText": "But the application still crashed, it should exit with 1 or at least a non-zero code.", "url": "https://github.com/Anuken/Mindustry/pull/2609#discussion_r492319558", "createdAt": "2020-09-21T20:13:56Z", "author": {"login": "Anuken"}, "path": "core/src/mindustry/net/CrashSender.java", "diffHunk": "@@ -130,11 +144,11 @@ public static void send(Throwable exception, Cons<File> writeListener){\n             boolean[] sent = {false};\n \n             Log.info(\"Sending crash report.\");\n-            //post to crash report URL\n+            //post to crash report URL, exit code indicates send success\n             httpPost(Vars.crashReportURL, value.toJson(OutputType.json), r -> {\n                 Log.info(\"Crash sent successfully.\");\n                 sent[0] = true;\n-                System.exit(1);\n+                System.exit(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a70b1190d278f34246b3a9e78d924d62a5d1e4"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4505, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}