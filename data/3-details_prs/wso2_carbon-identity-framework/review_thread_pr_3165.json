{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNjM1MjI3", "number": 3165, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MzoyNVrOEtLRdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0NDozOFrOEtLTCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODA2MDcxOnYy", "diffSide": "RIGHT", "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MzoyNVrOHg0pRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyNTo1OVrOHhCtAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTAxMw==", "bodyText": "I assume you want to show the list of non existing roles in the error response. In that case, this logic seems not to work when 2+ non-existing roles are given. In the 2nd iteration this will replace \"1st_role,\" with \"2nd_role\" instead of appending", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504179013", "createdAt": "2020-10-13T18:43:25Z", "author": {"login": "pulasthi7"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -2880,4 +2883,43 @@ private String getIDPNameByMetadataProperty(Connection dbConnection, String prop\n \n         return idPName;\n     }\n+\n+    /**\n+     * Validate whether the outbound provisioning roles does exist.\n+     *\n+     * @param identityProvider IdentityProvider.\n+     * @param tenantDomain     Tenant Domain.\n+     * @throws IdentityProviderManagementException If an error occurred while checking for role existence.\n+     */\n+    private void validateOutboundProvisioningRoles(IdentityProvider identityProvider, String tenantDomain)\n+            throws IdentityProviderManagementException {\n+\n+        String provisioningRole = identityProvider.getProvisioningRole();\n+        if (StringUtils.isBlank(provisioningRole)) {\n+            return;\n+        }\n+        String[] outboundProvisioningRoles = StringUtils.split(provisioningRole, \",\");\n+\n+        try {\n+            String notExistingRoles = null;\n+            RoleManagementService roleManagementService =\n+                    IdpMgtServiceComponentHolder.getInstance().getRoleManagementService();\n+            for (String roleName : outboundProvisioningRoles) {\n+                if (StringUtils.isNotBlank(notExistingRoles)) {\n+                    notExistingRoles = notExistingRoles + \",\";\n+                }\n+                if (!roleManagementService.isExistingRoleName(roleName, tenantDomain)) {\n+                    notExistingRoles = roleName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90664d65c4a684c2b1b21561752b984f278edc1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTM0Nw==", "bodyText": "Fixed: 3b8457c", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504409347", "createdAt": "2020-10-14T05:25:59Z", "author": {"login": "somindatommy"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -2880,4 +2883,43 @@ private String getIDPNameByMetadataProperty(Connection dbConnection, String prop\n \n         return idPName;\n     }\n+\n+    /**\n+     * Validate whether the outbound provisioning roles does exist.\n+     *\n+     * @param identityProvider IdentityProvider.\n+     * @param tenantDomain     Tenant Domain.\n+     * @throws IdentityProviderManagementException If an error occurred while checking for role existence.\n+     */\n+    private void validateOutboundProvisioningRoles(IdentityProvider identityProvider, String tenantDomain)\n+            throws IdentityProviderManagementException {\n+\n+        String provisioningRole = identityProvider.getProvisioningRole();\n+        if (StringUtils.isBlank(provisioningRole)) {\n+            return;\n+        }\n+        String[] outboundProvisioningRoles = StringUtils.split(provisioningRole, \",\");\n+\n+        try {\n+            String notExistingRoles = null;\n+            RoleManagementService roleManagementService =\n+                    IdpMgtServiceComponentHolder.getInstance().getRoleManagementService();\n+            for (String roleName : outboundProvisioningRoles) {\n+                if (StringUtils.isNotBlank(notExistingRoles)) {\n+                    notExistingRoles = notExistingRoles + \",\";\n+                }\n+                if (!roleManagementService.isExistingRoleName(roleName, tenantDomain)) {\n+                    notExistingRoles = roleName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTAxMw=="}, "originalCommit": {"oid": "b90664d65c4a684c2b1b21561752b984f278edc1"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODA2NDczOnYy", "diffSide": "RIGHT", "path": "components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0NDozOFrOHg0r1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyNjoxNVrOHhCtXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTY3MA==", "bodyText": "are we handling this exception properly? In case of this exception, we need to have the old behavior, which is to continue without validation", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504179670", "createdAt": "2020-10-13T18:44:38Z", "author": {"login": "pulasthi7"}, "path": "components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java", "diffHunk": "@@ -175,4 +175,17 @@ RoleBasicInfo setPermissionsForRole(String roleID, List<String> permissions, Str\n      * @throws IdentityRoleManagementException IdentityRoleManagementException.\n      */\n     boolean isExistingRole(String roleID, String tenantDomain) throws IdentityRoleManagementException;\n+\n+    /**\n+     * Check whether the given role name exist.\n+     *\n+     * @param roleName     Role name.\n+     * @param tenantDomain Tenant domain.\n+     * @return {@code true} if the the given role ID exist.\n+     * @throws IdentityRoleManagementException IdentityRoleManagementException.\n+     */\n+    default boolean isExistingRoleName(String roleName, String tenantDomain) throws IdentityRoleManagementException {\n+\n+        throw new IdentityRoleManagementException(\"isExistingRoleName method is not implemented\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90664d65c4a684c2b1b21561752b984f278edc1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTQzNg==", "bodyText": "Fixed: 3b8457c", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504409436", "createdAt": "2020-10-14T05:26:15Z", "author": {"login": "somindatommy"}, "path": "components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java", "diffHunk": "@@ -175,4 +175,17 @@ RoleBasicInfo setPermissionsForRole(String roleID, List<String> permissions, Str\n      * @throws IdentityRoleManagementException IdentityRoleManagementException.\n      */\n     boolean isExistingRole(String roleID, String tenantDomain) throws IdentityRoleManagementException;\n+\n+    /**\n+     * Check whether the given role name exist.\n+     *\n+     * @param roleName     Role name.\n+     * @param tenantDomain Tenant domain.\n+     * @return {@code true} if the the given role ID exist.\n+     * @throws IdentityRoleManagementException IdentityRoleManagementException.\n+     */\n+    default boolean isExistingRoleName(String roleName, String tenantDomain) throws IdentityRoleManagementException {\n+\n+        throw new IdentityRoleManagementException(\"isExistingRoleName method is not implemented\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTY3MA=="}, "originalCommit": {"oid": "b90664d65c4a684c2b1b21561752b984f278edc1"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2565, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}