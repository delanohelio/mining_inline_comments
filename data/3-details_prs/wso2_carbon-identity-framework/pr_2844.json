{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MjY1NDM4", "number": 2844, "title": "Fix issue of session termination", "bodyText": "Fix issue of session termination.", "createdAt": "2020-03-31T11:24:07Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844", "merged": true, "mergeCommit": {"oid": "2034e10af7220ac520e6ceb420edc87f211fa98b"}, "closed": true, "closedAt": "2020-03-31T12:25:51Z", "author": {"login": "GANGANI"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTBShpgH2gAyMzk2MjY1NDM4OjZhMTA4MGIyMGYxYzM0NDg5ZWVlZjEyNmJlZjYxYzM4NjRkNDJiODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHt73EgFqTQ4NjQ2OTk3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6a1080b20f1c34489eeef126bef61c3864d42b85", "committedDate": "2020-03-31T11:20:47Z", "message": "Fix issue of session termination"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Njc5NDg3", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#pullrequestreview-384679487", "createdAt": "2020-03-31T12:25:37Z", "commit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDY5NjM1", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#pullrequestreview-486469635", "createdAt": "2020-09-11T04:44:38Z", "commit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NDozOFrOHQOGXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NDozOFrOHQOGXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDI3MA==", "bodyText": "With the change, we have removed the debug log that was previously there. Is there any specific reason to do that?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770270", "createdAt": "2020-09-11T04:44:38Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDY5Nzky", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#pullrequestreview-486469792", "createdAt": "2020-09-11T04:45:07Z", "commit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NTowN1rOHQOG7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NTowN1rOHQOG7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDQxMg==", "bodyText": "Include some context information like full qualified username or userid", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770412", "createdAt": "2020-09-11T04:45:07Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);\n+        try {\n+            terminateSessionsByUserId(userId);\n+        } catch (SessionManagementException e) {\n+            throw new UserSessionException(\"Error while terminating sessions of user.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDY5OTc0", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#pullrequestreview-486469974", "createdAt": "2020-09-11T04:45:49Z", "commit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NTo0OVrOHQOHoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDo0NTo0OVrOHQOHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3MDU5Mg==", "bodyText": "Would be better to have the userstoreDomain included as a debug log", "url": "https://github.com/wso2/carbon-identity-framework/pull/2844#discussion_r486770592", "createdAt": "2020-09-11T04:45:49Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/internal/impl/UserSessionManagementServiceImpl.java", "diffHunk": "@@ -57,17 +61,71 @@ public void terminateSessionsOfUser(String username, String userStoreDomain, Str\n             UserSessionException {\n \n         validate(username, userStoreDomain, tenantDomain);\n-        List<String> sessionListOfUser = getSessionsOfUser(username, userStoreDomain, tenantDomain);\n \n-        if (!sessionListOfUser.isEmpty()) {\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Terminating all the active sessions of user: \" + username + \" of userstore domain: \" +\n-                        userStoreDomain + \" in tenant: \" + tenantDomain);\n+        String userId = resolveUserIdFromUsername(getTenantId(tenantDomain), userStoreDomain, username);\n+        try {\n+            terminateSessionsByUserId(userId);\n+        } catch (SessionManagementException e) {\n+            throw new UserSessionException(\"Error while terminating sessions of user.\", e);\n+        }\n+    }\n+\n+    /**\n+     * Retrieves the unique user id of the given username.\n+     *\n+     * @param tenantId          id of the tenant domain of the user\n+     * @param userStoreDomain   userstore of the user\n+     * @param username          username\n+     * @return                  unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    private String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            if (userStoreDomain == null) {\n+                userStoreDomain = UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME;\n+            }\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    return ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1080b20f1c34489eeef126bef61c3864d42b85"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2318, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}