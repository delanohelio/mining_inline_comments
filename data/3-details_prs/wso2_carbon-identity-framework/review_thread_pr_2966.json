{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDM2Mzcy", "number": 2966, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTo0NTowNlrOEKcOvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTo0NTowNlrOEKcOvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzgzNzQxOnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTo0NTowNlrOGrey2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTowNjoxNFrOGsEK3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NjQ4OQ==", "bodyText": "Don't we need to use getRelativePublicURL here?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2966#discussion_r448246489", "createdAt": "2020-07-01T09:45:06Z", "author": {"login": "ashensw"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java", "diffHunk": "@@ -524,16 +527,18 @@ private void redirectToAccountCreateUI(ExternalIdPConfig externalIdPConfig, Auth\n             if (externalIdPConfig.isPasswordProvisioningEnabled()) {\n                 uriBuilder.addParameter(FrameworkConstants.PASSWORD_PROVISION_ENABLED, String.valueOf(true));\n             }\n-            uriBuilder.addParameter(MultitenantConstants.TENANT_DOMAIN_HEADER_NAME, context.getTenantDomain());\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                uriBuilder.addParameter(MultitenantConstants.TENANT_DOMAIN_HEADER_NAME, context.getTenantDomain());\n+            }\n             uriBuilder.addParameter(FrameworkConstants.SERVICE_PROVIDER, context.getSequenceConfig()\n                     .getApplicationConfig().getApplicationName());\n             uriBuilder.addParameter(FrameworkConstants.USERNAME, username);\n             uriBuilder.addParameter(FrameworkConstants.SKIP_SIGN_UP_ENABLE_CHECK, String.valueOf(true));\n             uriBuilder.addParameter(FrameworkConstants.SESSION_DATA_KEY, context.getContextIdentifier());\n             addMissingClaims(uriBuilder, context);\n             localClaimValues.forEach(uriBuilder::addParameter);\n-            response.sendRedirect(uriBuilder.build().toString());\n-        } catch (URISyntaxException | IOException e) {\n+            response.sendRedirect(uriBuilder.build().getRelativeInternalURL());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c9b64d48e3c4dc3a541e2d9eb4711e1e6b3d345"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg1ODg0Nw==", "bodyText": "fixed", "url": "https://github.com/wso2/carbon-identity-framework/pull/2966#discussion_r448858847", "createdAt": "2020-07-02T09:06:14Z", "author": {"login": "emswbandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/handler/request/impl/JITProvisioningPostAuthenticationHandler.java", "diffHunk": "@@ -524,16 +527,18 @@ private void redirectToAccountCreateUI(ExternalIdPConfig externalIdPConfig, Auth\n             if (externalIdPConfig.isPasswordProvisioningEnabled()) {\n                 uriBuilder.addParameter(FrameworkConstants.PASSWORD_PROVISION_ENABLED, String.valueOf(true));\n             }\n-            uriBuilder.addParameter(MultitenantConstants.TENANT_DOMAIN_HEADER_NAME, context.getTenantDomain());\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                uriBuilder.addParameter(MultitenantConstants.TENANT_DOMAIN_HEADER_NAME, context.getTenantDomain());\n+            }\n             uriBuilder.addParameter(FrameworkConstants.SERVICE_PROVIDER, context.getSequenceConfig()\n                     .getApplicationConfig().getApplicationName());\n             uriBuilder.addParameter(FrameworkConstants.USERNAME, username);\n             uriBuilder.addParameter(FrameworkConstants.SKIP_SIGN_UP_ENABLE_CHECK, String.valueOf(true));\n             uriBuilder.addParameter(FrameworkConstants.SESSION_DATA_KEY, context.getContextIdentifier());\n             addMissingClaims(uriBuilder, context);\n             localClaimValues.forEach(uriBuilder::addParameter);\n-            response.sendRedirect(uriBuilder.build().toString());\n-        } catch (URISyntaxException | IOException e) {\n+            response.sendRedirect(uriBuilder.build().getRelativeInternalURL());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NjQ4OQ=="}, "originalCommit": {"oid": "9c9b64d48e3c4dc3a541e2d9eb4711e1e6b3d345"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2689, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}