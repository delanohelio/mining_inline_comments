{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODYwNjMz", "number": 2899, "title": "Add new method to validate usernames", "bodyText": "Proposed changes in this pull request\nChanges to SelfRegistrationMgtClient to support username validation in the backend.\nwso2/product-is#8117", "createdAt": "2020-04-25T06:41:30Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899", "merged": true, "mergeCommit": {"oid": "e48198b60a981875dc994c1bb78267b8c7e214ad"}, "closed": true, "closedAt": "2020-04-28T06:34:42Z", "author": {"login": "mevan-karu"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbsVH8AFqTQwMDgwMzY0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp6V6GAFqTQyODA5Njc2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODAzNjQ0", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-400803644", "createdAt": "2020-04-27T10:00:55Z", "commit": {"oid": "943b108b9e5b8b224944d3af95fd96872e5291fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowMDo1NVrOGMa_vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDowMDo1NVrOGMa_vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3ODM5OQ==", "bodyText": "exceeds 120 limit.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r415678399", "createdAt": "2020-04-27T10:00:55Z", "author": {"login": "thanujalk"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,85 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +\n+                    \". SkipSignUpCheck flag is set to \" + skipSignUpCheck + \".\");\n         }\n \n         try (CloseableHttpClient httpclient = HttpClientBuilder.create().useSystemProperties().build()) {\n-            JSONObject user = new JSONObject();\n-            user.put(USERNAME, username);\n+            JSONObject userObject = new JSONObject();\n+            userObject.put(USERNAME, user.getUsername());\n \n             JSONArray properties = new JSONArray();\n             JSONObject property = new JSONObject();\n             property.put(\n                     IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.SKIP_SIGN_UP_ENABLE_CHECK);\n             property.put(IdentityManagementEndpointConstants.VALUE, skipSignUpCheck);\n             properties.put(property);\n-            user.put(PROPERTIES, properties);\n+\n+            if (!StringUtils.isBlank(user.getTenantDomain())) {\n+                JSONObject tenantProperty = new JSONObject();\n+                tenantProperty.put(IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.TENANT_DOMAIN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "943b108b9e5b8b224944d3af95fd96872e5291fe"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "943b108b9e5b8b224944d3af95fd96872e5291fe", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/943b108b9e5b8b224944d3af95fd96872e5291fe", "committedDate": "2020-04-24T19:50:10Z", "message": "Add new method to validate usernames"}, "afterCommit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "committedDate": "2020-04-27T11:43:56Z", "message": "Add new method to validate usernames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODc3MTYx", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-400877161", "createdAt": "2020-04-27T11:51:55Z", "commit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTA1OTg2", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-401505986", "createdAt": "2020-04-28T05:24:47Z", "commit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNDo0N1rOGNDG5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNDo0N1rOGNDG5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTU5MA==", "bodyText": "don't we need to set tenantDomain to the user object?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416335590", "createdAt": "2020-04-28T05:24:47Z", "author": {"login": "emswbandara"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,86 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTA2MjE1", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-401506215", "createdAt": "2020-04-28T05:25:24Z", "commit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNToyNFrOGNDHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNToyNFrOGNDHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTc5MQ==", "bodyText": "do we need this change?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416335791", "createdAt": "2020-04-28T05:25:24Z", "author": {"login": "emswbandara"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -201,7 +202,7 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     /**\n      * Checks whether a given username is valid or not.\n      *\n-     * @param username Username.\n+     * @param username", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTA2NTcw", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-401506570", "createdAt": "2020-04-28T05:26:25Z", "commit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNjoyNlrOGNDJRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNToyNjoyNlrOGNDJRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNjE5Ng==", "bodyText": "let's use StringUtils.isNotBlank here", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416336196", "createdAt": "2020-04-28T05:26:26Z", "author": {"login": "emswbandara"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,86 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +\n+                    \". SkipSignUpCheck flag is set to \" + skipSignUpCheck + \".\");\n         }\n \n         try (CloseableHttpClient httpclient = HttpClientBuilder.create().useSystemProperties().build()) {\n-            JSONObject user = new JSONObject();\n-            user.put(USERNAME, username);\n+            JSONObject userObject = new JSONObject();\n+            userObject.put(USERNAME, user.getUsername());\n \n             JSONArray properties = new JSONArray();\n             JSONObject property = new JSONObject();\n             property.put(\n                     IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.SKIP_SIGN_UP_ENABLE_CHECK);\n             property.put(IdentityManagementEndpointConstants.VALUE, skipSignUpCheck);\n             properties.put(property);\n-            user.put(PROPERTIES, properties);\n+\n+            if (!StringUtils.isBlank(user.getTenantDomain())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "committedDate": "2020-04-27T11:43:56Z", "message": "Add new method to validate usernames"}, "afterCommit": {"oid": "8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "committedDate": "2020-04-28T05:29:47Z", "message": "Add new method to validate usernames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/fab8bf14b5d42d058cade50fba707aee029a5dd2", "committedDate": "2020-04-28T05:54:15Z", "message": "Add new method to validate usernames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "committedDate": "2020-04-28T05:29:47Z", "message": "Add new method to validate usernames"}, "afterCommit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/fab8bf14b5d42d058cade50fba707aee029a5dd2", "committedDate": "2020-04-28T05:54:15Z", "message": "Add new method to validate usernames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTIyMDg3", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-401522087", "createdAt": "2020-04-28T06:08:00Z", "commit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDk2NzY0", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#pullrequestreview-428096764", "createdAt": "2020-06-10T14:13:54Z", "commit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxMzo1NVrOGh22jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNDo0OFrOGh25Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NDg5NA==", "bodyText": "@Depricated should be changed to @depricated.  [1]\n[1] https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r438154894", "createdAt": "2020-06-10T14:13:55Z", "author": {"login": "JKAUSHALYA"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -206,64 +207,92 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n      *                        tenant.\n      * @return An integer with status code.\n      * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     * @Deprecated Use {@link #checkUsernameValidity(User user, boolean skipSignUpCheck)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NTU0Ng==", "bodyText": "Use the inbuilt formatting mechanism of Log4J. Use {} instead of combining strings. Update every location.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r438155546", "createdAt": "2020-06-10T14:14:48Z", "author": {"login": "JKAUSHALYA"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -206,64 +207,92 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n      *                        tenant.\n      * @return An integer with status code.\n      * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     * @Deprecated Use {@link #checkUsernameValidity(User user, boolean skipSignUpCheck)}\n      */\n+    @Deprecated\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2362, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}