{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTk0NzE3", "number": 2949, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyNzozMFrOD-J28A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTozMjo1OFrOEkAyRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk5ODI0OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyNzozMFrOGYFODQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTozNDo0NFrOGeMqCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDUyNQ==", "bodyText": "Shall we change the below variable name also to absolutePublicUrl?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r427904525", "createdAt": "2020-05-20T10:27:30Z", "author": {"login": "ashensw"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,7 +442,7 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzgzNA==", "bodyText": "Fixed 718c689", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r434317834", "createdAt": "2020-06-03T05:34:44Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,7 +442,7 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDUyNQ=="}, "originalCommit": {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTAwNDk1OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyOTozNFrOGYFS1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTozNTowOVrOGeMqhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNTc0OQ==", "bodyText": "Shall we add a separate test case to cover getAbsoluteInternalURL as well?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r427905749", "createdAt": "2020-05-20T10:29:34Z", "author": {"login": "ashensw"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -311,20 +311,20 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n                                 \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n                                 \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n                                 .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n-                                .getAbsoluteInternalURL();\n+                                .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzk1Nw==", "bodyText": "Fixed 2b1d267", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r434317957", "createdAt": "2020-06-03T05:35:09Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -311,20 +311,20 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n                                 \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n                                 \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n                                 .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n-                                .getAbsoluteInternalURL();\n+                                .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNTc0OQ=="}, "originalCommit": {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQwNzc1OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoxNzoyNlrOGgTgpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowMTo0NFrOGgY4_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzI3MA==", "bodyText": "here code from line 244 to 256 seems to be duplicated from code in line 226 to 238.. shall we move it to a common method?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436527270", "createdAt": "2020-06-08T08:17:26Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -236,6 +238,24 @@ private String fetchHostName() throws URLBuilderException {\n         return hostName;\n     }\n \n+    private String fetchInternalHostName() throws URLBuilderException {\n+\n+        String internalHostName = IdentityUtil.getProperty(IdentityCoreConstants.SERVER_HOST_NAME);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTQyMQ==", "bodyText": "Fixed 0c97e69", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615421", "createdAt": "2020-06-08T11:01:44Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -236,6 +238,24 @@ private String fetchHostName() throws URLBuilderException {\n         return hostName;\n     }\n \n+    private String fetchInternalHostName() throws URLBuilderException {\n+\n+        String internalHostName = IdentityUtil.getProperty(IdentityCoreConstants.SERVER_HOST_NAME);\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzI3MA=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQxMjAzOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoxODo1NFrOGgTjeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowMTozNlrOGgY4wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzk5Mw==", "bodyText": "can protocol be null here? if so handle null check.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436527993", "createdAt": "2020-06-08T08:18:54Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTM2MA==", "bodyText": "Fixed 0c97e69", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615360", "createdAt": "2020-06-08T11:01:36Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzk5Mw=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQxMjQ5OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoxOTowNVrOGgTjvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowMToyNlrOGgY4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyODA2Mw==", "bodyText": "can hostName be null here? if so handle null check.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436528063", "createdAt": "2020-06-08T08:19:05Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTMwMQ==", "bodyText": "Fixed 0c97e69", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615301", "createdAt": "2020-06-08T11:01:26Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyODA2Mw=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQyOTk1OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoyNDozM1rOGgTvLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowMToxM1rOGgY4Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDk5MQ==", "bodyText": "use standard comment format add space after // and add fullstop at end.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436530991", "createdAt": "2020-06-08T08:24:33Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -304,6 +347,52 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n \n         String absoluteUrl = null;\n \n+        try {\n+            if (MapUtils.isNotEmpty(parameters) && MapUtils.isNotEmpty(fragmentParams)) {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(fragmentParams)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").build().getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(parameters)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).build().getAbsolutePublicURL();\n+            }\n+\n+        } catch (URLBuilderException e) {\n+            //Mock behaviour, hence ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTE4Mw==", "bodyText": "Fixed 0c97e69", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615183", "createdAt": "2020-06-08T11:01:13Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -304,6 +347,52 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n \n         String absoluteUrl = null;\n \n+        try {\n+            if (MapUtils.isNotEmpty(parameters) && MapUtils.isNotEmpty(fragmentParams)) {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(fragmentParams)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").build().getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(parameters)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).build().getAbsolutePublicURL();\n+            }\n+\n+        } catch (URLBuilderException e) {\n+            //Mock behaviour, hence ignored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDk5MQ=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQzNTA2OnYy", "diffSide": "RIGHT", "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODoyNTo1OVrOGgTyXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTowMTowM1rOGgY3og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMTgwNg==", "bodyText": "add space after <!-- and before -->", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436531806", "createdAt": "2020-06-08T08:25:59Z", "author": {"login": "emswbandara"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -70,6 +70,9 @@\n         <TrustManagerType>{{key_mgt.trust_manager_type}}</TrustManagerType>\n     </Security>\n \n+    <!--This configuration is to resolve the internal service URL for internal API calls-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMjM5Nw==", "bodyText": "Also please add the config to identity.xml as well\nhttps://github.com/wso2/carbon-identity-framework/blob/2b1d2672a9098a2553b55ed732619275bc23ae27/features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436532397", "createdAt": "2020-06-08T08:27:04Z", "author": {"login": "emswbandara"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -70,6 +70,9 @@\n         <TrustManagerType>{{key_mgt.trust_manager_type}}</TrustManagerType>\n     </Security>\n \n+    <!--This configuration is to resolve the internal service URL for internal API calls-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMTgwNg=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTA3NA==", "bodyText": "Fixed 0c97e69", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615074", "createdAt": "2020-06-08T11:01:03Z", "author": {"login": "GANGANI"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -70,6 +70,9 @@\n         <TrustManagerType>{{key_mgt.trust_manager_type}}</TrustManagerType>\n     </Security>\n \n+    <!--This configuration is to resolve the internal service URL for internal API calls-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMTgwNg=="}, "originalCommit": {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDA2ODMwOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTozOToyNlrOGgZ6Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0Mjo0NVrOGgaAPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjE1OQ==", "bodyText": "let's add the null check for internalHostName as well.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436632159", "createdAt": "2020-06-08T11:39:26Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {\n+                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            }\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());\n+            // If it's well known HTTPS port, skip adding port.\n+            if (port != IdentityCoreConstants.DEFAULT_HTTPS_PORT) {\n+                absolutePublicUrl.append(\":\").append(port);\n+            }\n+            absolutePublicUrl.append(fetchRelativePublicUrl());\n+            return absolutePublicUrl.toString();\n+        }\n+\n+        private String fetchAbsoluteInternalUrl() throws URLBuilderException {\n \n-            StringBuilder absoluteUrl = new StringBuilder();\n-            absoluteUrl.append(protocol).append(\"://\");\n-            absoluteUrl.append(hostName.toLowerCase());\n+            StringBuilder absoluteInternalUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMzY2MQ==", "bodyText": "Fixed 7a8092b", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436633661", "createdAt": "2020-06-08T11:42:45Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {\n+                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            }\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());\n+            // If it's well known HTTPS port, skip adding port.\n+            if (port != IdentityCoreConstants.DEFAULT_HTTPS_PORT) {\n+                absolutePublicUrl.append(\":\").append(port);\n+            }\n+            absolutePublicUrl.append(fetchRelativePublicUrl());\n+            return absolutePublicUrl.toString();\n+        }\n+\n+        private String fetchAbsoluteInternalUrl() throws URLBuilderException {\n \n-            StringBuilder absoluteUrl = new StringBuilder();\n-            absoluteUrl.append(protocol).append(\"://\");\n-            absoluteUrl.append(hostName.toLowerCase());\n+            StringBuilder absoluteInternalUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjE1OQ=="}, "originalCommit": {"oid": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDM5NjI0OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzowOTo1M1rOGgdDug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo1NzoyMFrOGgfo0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4MzcwNg==", "bodyText": "Shall we rename this for proxyHostName", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436683706", "createdAt": "2020-06-08T13:09:53Z", "author": {"login": "malithie"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -252,29 +265,33 @@ private Integer fetchPort() {\n \n         private String protocol;\n         private String hostName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyNTk2OQ==", "bodyText": "Fixed 505c8f4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436725969", "createdAt": "2020-06-08T13:57:20Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -252,29 +265,33 @@ private Integer fetchPort() {\n \n         private String protocol;\n         private String hostName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4MzcwNg=="}, "originalCommit": {"oid": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQwMDcyOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoxMDozM1rOGgdGQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo1NzoxMVrOGgfoKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4NDM1NQ==", "bodyText": "Also this one as fetchProxyHostName", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436684355", "createdAt": "2020-06-08T13:10:33Z", "author": {"login": "malithie"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -80,14 +81,15 @@ public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n         String hostName = fetchHostName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyNTgwMw==", "bodyText": "Fixed 505c8f4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436725803", "createdAt": "2020-06-08T13:57:11Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -80,14 +81,15 @@ public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n         String hostName = fetchHostName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4NDM1NQ=="}, "originalCommit": {"oid": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjU1ODAzOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/ServiceURL.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowMjoxNVrOHRSrxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowODo1OFrOHRw43Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5Mzk1OA==", "bodyText": "This component did not go in a released product version yet right? We have changed the interface method name here.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487893958", "createdAt": "2020-09-14T13:02:15Z", "author": {"login": "janakamarasena"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/ServiceURL.java", "diffHunk": "@@ -37,7 +37,7 @@\n      *\n      * @return String of the host name.\n      */\n-    String getHostName();\n+    String getProxyHostName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4ODgyOQ==", "bodyText": "The framework version with this interface is not yet available in the released product.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488388829", "createdAt": "2020-09-15T05:08:58Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/ServiceURL.java", "diffHunk": "@@ -37,7 +37,7 @@\n      *\n      * @return String of the host name.\n      */\n-    String getHostName();\n+    String getProxyHostName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5Mzk1OA=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjU2NTUxOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNDowOVrOHRSwRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowNTo0M1rOHRw1UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTEwOA==", "bodyText": "Add a fullstop at the end. Check other places as well.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487895108", "createdAt": "2020-09-14T13:04:09Z", "author": {"login": "janakamarasena"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NzkyMQ==", "bodyText": "Fixed beb53f7", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488387921", "createdAt": "2020-09-15T05:05:43Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTEwOA=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjU2ODM2OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowNDo1MVrOHRSx9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowNTo1NVrOHRw1hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTU0MA==", "bodyText": "get \"https\" to a constant and reuse in other places as well.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487895540", "createdAt": "2020-09-14T13:04:51Z", "author": {"login": "janakamarasena"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -199,7 +203,7 @@ public void testAddFragmentParameter() {\n     public void testAddFragmentParameters() {\n \n         String fragment = null;\n-\n+        when(CarbonUtils.getManagementTransport()).thenReturn(\"https\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4Nzk3Mg==", "bodyText": "Fixed beb53f7", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488387972", "createdAt": "2020-09-15T05:05:55Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -199,7 +203,7 @@ public void testAddFragmentParameter() {\n     public void testAddFragmentParameters() {\n \n         String fragment = null;\n-\n+        when(CarbonUtils.getManagementTransport()).thenReturn(\"https\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTU0MA=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTk1MjQ0OnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/resources/repository/conf/identity/identity.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyNzoyN1rOHSsYLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyMzozOFrOHS64tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MzUwMg==", "bodyText": "End with a full stop", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489363502", "createdAt": "2020-09-16T11:27:27Z", "author": {"login": "Abilashini"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/resources/repository/conf/identity/identity.xml", "diffHunk": "@@ -71,6 +71,9 @@\n         <TrustManagerType>SunX509</TrustManagerType>\n     </Security>\n \n+    <!--This configuration is to resolve the internal service URL for internal API calls-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMTIwNw==", "bodyText": "Fixed cb3d27b", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489601207", "createdAt": "2020-09-16T17:23:38Z", "author": {"login": "GANGANI"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/test/resources/repository/conf/identity/identity.xml", "diffHunk": "@@ -71,6 +71,9 @@\n         <TrustManagerType>SunX509</TrustManagerType>\n     </Security>\n \n+    <!--This configuration is to resolve the internal service URL for internal API calls-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MzUwMg=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTk1NjA3OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyODozN1rOHSsaXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyNTowMVrOHS671A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NDA2MA==", "bodyText": "Exceeds 120 characters", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489364060", "createdAt": "2020-09-16T11:28:37Z", "author": {"login": "Abilashini"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -79,15 +80,16 @@ public ServiceURLBuilder addPath(String... paths) {\n     public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n-        String hostName = fetchHostName();\n+        String proxyHostName = fetchProxyHostName();\n+        String internalHostName = fetchInternalHostName();\n         int port = fetchPort();\n         String tenantDomain = resolveTenantDomain();\n         String proxyContextPath = ServerConfiguration.getInstance().getFirstProperty(PROXY_CONTEXT_PATH);\n         String resolvedFragment = buildFragment(fragment, fragmentParams);\n         String urlPath = getResolvedUrlPath(tenantDomain);\n \n-        return new ServiceURLImpl(protocol, hostName, port, tenantDomain, proxyContextPath, urlPath, parameters,\n-                resolvedFragment);\n+        return new ServiceURLImpl(protocol, proxyHostName, internalHostName, port, tenantDomain, proxyContextPath, urlPath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjAwNA==", "bodyText": "This has already fixed", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489602004", "createdAt": "2020-09-16T17:25:01Z", "author": {"login": "GANGANI"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -79,15 +80,16 @@ public ServiceURLBuilder addPath(String... paths) {\n     public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n-        String hostName = fetchHostName();\n+        String proxyHostName = fetchProxyHostName();\n+        String internalHostName = fetchInternalHostName();\n         int port = fetchPort();\n         String tenantDomain = resolveTenantDomain();\n         String proxyContextPath = ServerConfiguration.getInstance().getFirstProperty(PROXY_CONTEXT_PATH);\n         String resolvedFragment = buildFragment(fragment, fragmentParams);\n         String urlPath = getResolvedUrlPath(tenantDomain);\n \n-        return new ServiceURLImpl(protocol, hostName, port, tenantDomain, proxyContextPath, urlPath, parameters,\n-                resolvedFragment);\n+        return new ServiceURLImpl(protocol, proxyHostName, internalHostName, port, tenantDomain, proxyContextPath, urlPath,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NDA2MA=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTk2OTY2OnYy", "diffSide": "RIGHT", "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTozMjozN1rOHSsing==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyNDoyMlrOHS66OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NjE3NA==", "bodyText": "full stop", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489366174", "createdAt": "2020-09-16T11:32:37Z", "author": {"login": "Abilashini"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml", "diffHunk": "@@ -73,6 +73,9 @@\n         <UserStorePasswordEncryption>InternalKeyStore</UserStorePasswordEncryption>\n     </Security>\n \n+    <!-- This configuration is to resolve the internal service URL for internal API calls -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMTU5Mw==", "bodyText": "Fixed cb3d27b", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489601593", "createdAt": "2020-09-16T17:24:22Z", "author": {"login": "GANGANI"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml", "diffHunk": "@@ -73,6 +73,9 @@\n         <UserStorePasswordEncryption>InternalKeyStore</UserStorePasswordEncryption>\n     </Security>\n \n+    <!-- This configuration is to resolve the internal service URL for internal API calls -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NjE3NA=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTk3MDYwOnYy", "diffSide": "RIGHT", "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTozMjo1OFrOHSsjQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyNToyNFrOHS68zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NjMzNg==", "bodyText": "full stop", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489366336", "createdAt": "2020-09-16T11:32:58Z", "author": {"login": "Abilashini"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -70,6 +70,9 @@\n         <TrustManagerType>{{key_mgt.trust_manager_type}}</TrustManagerType>\n     </Security>\n \n+    <!-- This configuration is to resolve the internal service URL for internal API calls -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjI1NA==", "bodyText": "Fixed cb3d27b", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489602254", "createdAt": "2020-09-16T17:25:24Z", "author": {"login": "GANGANI"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -70,6 +70,9 @@\n         <TrustManagerType>{{key_mgt.trust_manager_type}}</TrustManagerType>\n     </Security>\n \n+    <!-- This configuration is to resolve the internal service URL for internal API calls -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NjMzNg=="}, "originalCommit": {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2681, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}