{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MTQ4ODY5", "number": 2843, "title": "Add Config Store related queries for different DB types", "bodyText": "Proposed changes in this pull request\nSupport the SQL queries in config store for different DB types as mentioned in wso2/product-is#7982", "createdAt": "2020-03-31T08:01:02Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843", "merged": true, "mergeCommit": {"oid": "c4a31774a303bb504443741de2e7cbcc3ef4551b"}, "closed": true, "closedAt": "2020-04-03T02:55:30Z", "author": {"login": "AnuradhaSK"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS-V6XAH2gAyMzk2MTQ4ODY5OjQ0NzkxNWM4ZTVlZDlkNGRiMjVjZjI5ZGQ1M2NkMTQ5NTk5MGNkMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTtYeJAFqTM4NjQ5NzA3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "447915c8e5ed9d4db25cf29dd53cd1495990cd0f", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/447915c8e5ed9d4db25cf29dd53cd1495990cd0f", "committedDate": "2020-03-31T07:54:46Z", "message": "Add Config Store related queries for different DB types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTQwODQ4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-384540848", "createdAt": "2020-03-31T09:08:47Z", "commit": {"oid": "447915c8e5ed9d4db25cf29dd53cd1495990cd0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTowODo0OFrOF-MRlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTowODo0OFrOF-MRlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1NzE0Mg==", "bodyText": "let's avoid adding the \\n.. new line character is not required in java files.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r400757142", "createdAt": "2020-03-31T09:08:48Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -165,6 +238,66 @@\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT\\n\" +\n+            \"  R.ID,\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "447915c8e5ed9d4db25cf29dd53cd1495990cd0f"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "committedDate": "2020-03-31T11:37:57Z", "message": "Format the SQL Constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzUzMTEz", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-385353113", "createdAt": "2020-04-01T08:08:11Z", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowODoxMVrOF-1VGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowODoxMVrOF-1VGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyOTc4Ng==", "bodyText": "SYSIBM: Is this a general constant in DB2?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401429786", "createdAt": "2020-04-01T08:08:11Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -72,6 +90,28 @@\n             \"(NAME), \" +\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n+            \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n+            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzU0MzA4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-385354308", "createdAt": "2020-04-01T08:09:58Z", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowOTo1OFrOF-1ZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowOTo1OFrOF-1ZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDc4OA==", "bodyText": "Dropping the keyword AS should also work with MySQL AFAIR. If so, we might be able to reuse the oracle query.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401430788", "createdAt": "2020-04-01T08:09:58Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -165,6 +238,66 @@\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT \" +\n+            \"  R.ID,\" +\n+            \"  R.TENANT_ID,\" +\n+            \"  R.NAME,\" +\n+            \"  R.CREATED_TIME,\" +\n+            \"  R.LAST_MODIFIED,\" +\n+            \"  R.HAS_FILE,\" +\n+            \"  R.HAS_ATTRIBUTE,\" +\n+            \"  T.NAME AS RESOURCE_TYPE,\" +\n+            \"  T.DESCRIPTION AS DESCRIPTION,\" +\n+            \"  F.ID AS FILE_ID,\" +\n+            \"  F.NAME AS FILE_NAME,\" +\n+            \"  A.ID AS ATTR_ID,\" +\n+            \"  A.ATTR_KEY AS ATTR_KEY,\" +\n+            \"  A.ATTR_VALUE AS ATTR_VALUE\" +\n+            \"FROM\" +\n+            \"  IDN_CONFIG_RESOURCE AS R\" +\n+            \"  INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzU3MjA3", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-385357207", "createdAt": "2020-04-01T08:14:01Z", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoxNDowMlrOF-1iSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODoxNDowMlrOF-1iSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMzE2MQ==", "bodyText": "Other than MySQL, we will not need without_created_time queries, as it was introduced to handle backward compatibility when the created time field is not available. Since we support other DBs from this PR onwards, we can decide as the created time field is already available.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401433161", "createdAt": "2020-04-01T08:14:02Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -246,6 +489,58 @@\n             \"  )\\n\" +\n             \"WHERE\\n\" +\n             \"  R.ID = ?\\n\";\n+    public static final String GET_RESOURCE_BY_ID_MSSQL_WITHOUT_CREATED_TIME = \"SELECT\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 303}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzU4NDQw", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-385358440", "createdAt": "2020-04-01T08:15:45Z", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTI4OTkz", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-385528993", "createdAt": "2020-04-01T12:20:01Z", "commit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowMVrOF-9-EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMToxM1rOF--Aog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM0NA==", "bodyText": "formatting issue add space after ,", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401571344", "createdAt": "2020-04-01T12:20:01Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -72,6 +90,28 @@\n             \"(NAME), \" +\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n+            \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n+            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +\n+            \"HAS_FILE = ?, HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, \" +\n+            \"CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL = \"MERGE IDN_CONFIG_RESOURCE T USING \" +\n+            \"(VALUES  (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) ON T.ID = S.ID \" +\n+            \"WHEN MATCHED THEN UPDATE SET TENANT_ID = S.TENANT_ID, NAME = S.NAME, LAST_MODIFIED = S.LAST_MODIFIED, \" +\n+            \"HAS_FILE = S.HAS_FILE, HAS_ATTRIBUTE = S.HAS_ATTRIBUTE, TYPE_ID = S.TYPE_ID \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,\" +\n+            \"TYPE_ID) VALUES (S.ID, S.TENANT_ID, S.NAME, S.CREATED_TIME, S.LAST_MODIFIED, S.HAS_FILE, S\" +\n+            \".HAS_ATTRIBUTE, S.TYPE_ID);\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_ORACLE = \"MERGE INTO IDN_CONFIG_RESOURCE USING dual ON \" +\n+            \"(ID=?) WHEN MATCHED THEN UPDATE SET TENANT_ID=?, NAME=? , LAST_MODIFIED=?, HAS_FILE=?, HAS_ATTRIBUTE=?, \" +\n+            \"TYPE_ID=? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, \" +\n+            \"HAS_ATTRIBUTE, TYPE_ID) VALUES (?,?, ?,?,?, ?, ?, ? )\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTY0Mw==", "bodyText": "remove /n", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401571643", "createdAt": "2020-04-01T12:20:34Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -99,11 +139,29 @@\n             \"    ATTR_VALUE\\n\" +\n             \"  )\\n\" +\n             \"VALUES(?, ?, ?, ?)\";\n+    public static final String INSERT_ATTRIBUTES_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T USING \" +\n+            \"(VALUES (?, ?, ?, ?)\";\n+    public static final String INSERT_ATTRIBUTES_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T \" +\n+            \"USING (SELECT  ? ID, ? RESOURCE_ID, ? ATTR_KEY, ? ATTR_VALUE from dual \";\n     public static final String UPDATE_ATTRIBUTES_H2 = \"MERGE INTO\\n\" +\n             \"  IDN_CONFIG_ATTRIBUTE KEY(ID) VALUES(?, ?, ?, ?)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_MYSQL = \"ON DUPLICATE KEY UPDATE \" +\n             \"RESOURCE_ID = VALUES(RESOURCE_ID), ATTR_KEY = VALUES(ATTR_KEY), ATTR_VALUE = VALUES(ATTR_VALUE)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_POSTGRESQL = \"ON CONFLICT(ID) DO UPDATE SET RESOURCE_ID = \" +\n+            \"EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n+            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_MSSQL_OR_DB2 = \") S (ID, RESOURCE_ID, ATTR_KEY, \" +\n+            \"ATTR_VALUE) ON T.ID = S.ID WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, \" +\n+            \"ATTR_KEY = S.ATTR_KEY, ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, \" +\n+            \"ATTR_KEY, ATTR_VALUE) VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_ORACLE = \") S ON (T.ID = S.ID) \" +\n+            \"WHEN MATCHED THEN UPDATE SET T.RESOURCE_ID = S.RESOURCE_ID, T.ATTR_KEY = S.ATTR_KEY, \" +\n+            \"T.ATTR_VALUE = S.ATTR_VALUE\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjAwMg==", "bodyText": "add space after ,", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401572002", "createdAt": "2020-04-01T12:21:13Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -114,6 +172,21 @@\n             \"ATTR_KEY = VALUES(ATTR_KEY), ATTR_VALUE = VALUES(ATTR_VALUE)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTE_H2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE KEY(ID) VALUES(?, ?, \"\n             + \"?, ?)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_ATTRIBUTE\" +\n+            \"(ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?) ON CONFLICT(ID) \" +\n+            \"DO UPDATE SET RESOURCE_ID = EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n+            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID = ?, ATTR_KEY = ?, ATTR_VALUE = ? \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_MSSQL = \"MERGE IDN_CONFIG_ATTRIBUTE T USING \" +\n+            \"(VALUES  (?, ?, ?, ?)) S (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) ON T.ID = S.ID \" +\n+            \"WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, ATTR_KEY = S.ATTR_KEY,\" +\n+            \"ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) \" +\n+            \"VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING dual \" +\n+            \"ON (ID = ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID=?, ATTR_KEY=? , ATTR_VALUE=? \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID,RESOURCE_ID,ATTR_KEY,  ATTR_VALUE) VALUES (?,?, ?, ?)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/5a0504e41b864eb30d7aa555f60249f9b40e79e9", "committedDate": "2020-04-01T19:47:28Z", "message": "Handel boolean value difference in oracle and mssql, modify and format SQL constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTQyOTM2", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386142936", "createdAt": "2020-04-02T06:41:40Z", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo0MTo0MFrOF_dPjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo0MTo0MFrOF_dPjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4MzcyNw==", "bodyText": "@emswbandara please check", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402083727", "createdAt": "2020-04-02T06:41:40Z", "author": {"login": "AnuradhaSK"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -621,8 +664,17 @@ public void addResource(Resource resource) throws ConfigurationManagementExcepti\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);\n+                                } else {\n+                                    preparedStatement.setBoolean(++initialParameterIndex, false);\n+                                    preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                                }\n+                            } catch (DataAccessException e) {\n+                                throw new RuntimeException(e);\n+                            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzEyMDU4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386312058", "createdAt": "2020-04-02T10:50:38Z", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MDozOFrOF_luqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MDozOFrOF_luqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMjc2MA==", "bodyText": "as per https://github.com/wso2/carbon-identity-framework/pull/2847/files#diff-5b637a3090fa921e05d00ba7a47c9860R1494 even in DB2 we need to use 1 or 0 right? please check", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402222760", "createdAt": "2020-04-02T10:50:38Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -621,8 +664,17 @@ public void addResource(Resource resource) throws ConfigurationManagementExcepti\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzEyOTg1", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386312985", "createdAt": "2020-04-02T10:52:08Z", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MjowOFrOF_lxcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MjowOFrOF_lxcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzQ3NQ==", "bodyText": "check whether we need to add db2", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402223475", "createdAt": "2020-04-02T10:52:08Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -886,8 +964,17 @@ private void updateMetadataForMYSQL(Resource resource, String resourceTypeId, bo\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow  file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "originalPosition": 194}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzEzMjkw", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386313290", "createdAt": "2020-04-02T10:52:35Z", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MjozNVrOF_lyag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1MjozNVrOF_lyag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzcyMg==", "bodyText": "add a descripive error message to the exception", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402223722", "createdAt": "2020-04-02T10:52:35Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -886,8 +964,17 @@ private void updateMetadataForMYSQL(Resource resource, String resourceTypeId, bo\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow  file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);\n+                                } else {\n+                                    preparedStatement.setBoolean(++initialParameterIndex, false);\n+                                    preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                                }\n+                            } catch (DataAccessException e) {\n+                                throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "originalPosition": 202}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzQ3MDY4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386347068", "createdAt": "2020-04-02T11:47:14Z", "commit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo0NzoxNFrOF_nchA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo0NzoxNFrOF_nchA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MDg4NA==", "bodyText": "DB2 check is required only here (in the select query) because it saves 1/0 even we insert/update true/false", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402250884", "createdAt": "2020-04-02T11:47:14Z", "author": {"login": "AnuradhaSK"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -1493,6 +1519,9 @@ public void deleteFiles(String resourceId) throws ConfigurationManagementExcepti\n                         String resourceLastModified = resultSet.getString(DB_SCHEMA_COLUMN_NAME_LAST_MODIFIED);\n                         String resourceCreatedTime = resultSet.getString(DB_SCHEMA_COLUMN_NAME_CREATED_TIME);\n                         String resourceHasFile = resultSet.getString(DB_SCHEMA_COLUMN_NAME_HAS_FILE);\n+                        if (StringUtils.equals(resourceHasFile, \"1\") && (isOracleDB() || isMSSqlDB() || isDB2DB())) {\n+                            resourceHasFile = \"true\";\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9"}, "originalPosition": 294}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "committedDate": "2020-04-02T12:02:06Z", "message": "Add descriptive error message to RuntimeException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72d2c84dd7ef0daeac2c0020e83c2887dfa2dad2", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/72d2c84dd7ef0daeac2c0020e83c2887dfa2dad2", "committedDate": "2020-04-02T14:06:39Z", "message": "Remove RuntimeException by introducing boolean value prior to lambda expressions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDk3MDc0", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#pullrequestreview-386497074", "createdAt": "2020-04-02T14:43:06Z", "commit": {"oid": "72d2c84dd7ef0daeac2c0020e83c2887dfa2dad2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2316, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}