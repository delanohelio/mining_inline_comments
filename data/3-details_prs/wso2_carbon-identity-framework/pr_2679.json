{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTEzMDA3", "number": 2679, "title": "Framework changes for the Script Library Management REST API", "bodyText": "This PR Subjected to - Script Library REST API\nThis PR includes :\n\n\nScript(Function) library management client and server error handling and management.\n\n\nModified unit tests.", "createdAt": "2020-01-19T09:11:14Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679", "merged": true, "mergeCommit": {"oid": "139c66352f2c1055f99da253ad4b58d1064a9156"}, "closed": true, "closedAt": "2020-01-27T05:01:06Z", "author": {"login": "Wathsara"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb70K15AH2gAyMzY0NTEzMDA3Ojk0ZjliODUzYWRiYTI2MWI5Y2NjMGMxMjVmNjI3OTJjNGE2Yjg0YWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-VfpAAFqTM0ODQ0MTUxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac", "author": {"user": {"login": "Wathsara", "name": "Wathsara Wishwantha Daluwatta"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/94f9b853adba261b9ccc0c125f62792c4a6b84ac", "committedDate": "2020-01-19T09:03:22Z", "message": "Created framework changes for the SCL REST API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MTE3MjEw", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#pullrequestreview-345117210", "createdAt": "2020-01-20T07:31:48Z", "commit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozMTo0OFrOFfVWfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozNjoxOFrOFfVbbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5OTk5OQ==", "bodyText": "need to check if(log.isDebugEnabled)", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368399999", "createdAt": "2020-01-20T07:31:48Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/FunctionLibraryManagementAdminService.java", "diffHunk": "@@ -170,10 +174,11 @@ private void evaluateScript(FunctionLibrary functionLibrary) throws FunctionLibr\n             code = head + code;\n             engine.eval(code);\n         } catch (ScriptException e) {\n-            log.error(\"Function library script of \" + functionLibrary.getFunctionLibraryName() +\n+            log.debug(\"Script library script of \" + functionLibrary.getFunctionLibraryName() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMDI4OQ==", "bodyText": "check if debug is enabled", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368400289", "createdAt": "2020-01-20T07:32:49Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/FunctionLibraryManagementServiceImpl.java", "diffHunk": "@@ -168,10 +176,12 @@ private void evaluateScript(FunctionLibrary functionLibrary) throws FunctionLibr\n             code = head + code;\n             engine.eval(code);\n         } catch (ScriptException e) {\n-            log.error(\"Function library script of \" + functionLibrary.getFunctionLibraryName() +\n+            log.debug(\"Script library script of \" + functionLibrary.getFunctionLibraryName() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMDUyMA==", "bodyText": "why this change is required? isn't FunctionLibraryManagementServerException a subclass of FunctionLibraryManagementException?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368400520", "createdAt": "2020-01-20T07:33:39Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/dao/impl/FunctionLibraryDAOImpl.java", "diffHunk": "@@ -56,7 +59,7 @@\n      * @throws FunctionLibraryManagementException\n      */\n     public void createFunctionLibrary(FunctionLibrary functionLibrary, String tenantDomain)\n-            throws FunctionLibraryManagementException {\n+            throws FunctionLibraryManagementServerException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMDcxNQ==", "bodyText": "why this change is required? isn't FunctionLibraryManagementServerException a subclass of FunctionLibraryManagementException? In that case, we can keep the method interface as it is", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368400715", "createdAt": "2020-01-20T07:34:18Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/dao/impl/FunctionLibraryDAOImpl.java", "diffHunk": "@@ -105,10 +112,10 @@ public void createFunctionLibrary(FunctionLibrary functionLibrary, String tenant\n      * @param functionLibraryName Function library name\n      * @param tenantDomain        Tenant domain\n      * @return Function library\n-     * @throws FunctionLibraryManagementException\n+     * @throws FunctionLibraryManagementServerException\n      */\n     public FunctionLibrary getFunctionLibrary(String functionLibraryName, String tenantDomain)\n-            throws FunctionLibraryManagementException {\n+            throws FunctionLibraryManagementServerException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMDkzNQ==", "bodyText": "please check other places as well", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368400935", "createdAt": "2020-01-20T07:35:05Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/dao/impl/FunctionLibraryDAOImpl.java", "diffHunk": "@@ -105,10 +112,10 @@ public void createFunctionLibrary(FunctionLibrary functionLibrary, String tenant\n      * @param functionLibraryName Function library name\n      * @param tenantDomain        Tenant domain\n      * @return Function library\n-     * @throws FunctionLibraryManagementException\n+     * @throws FunctionLibraryManagementServerException\n      */\n     public FunctionLibrary getFunctionLibrary(String functionLibraryName, String tenantDomain)\n-            throws FunctionLibraryManagementException {\n+            throws FunctionLibraryManagementServerException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMDcxNQ=="}, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQwMTI2MQ==", "bodyText": "shall we inline line 38 and 39", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r368401261", "createdAt": "2020-01-20T07:36:18Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/util/FunctionLibraryExceptionManagementUtil.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.identity.functions.library.mgt.util;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.wso2.carbon.identity.functions.library.mgt.exception.FunctionLibraryManagementClientException;\n+import org.wso2.carbon.identity.functions.library.mgt.exception.FunctionLibraryManagementServerException;\n+\n+/**\n+ * Function library management error handling class.\n+ */\n+public class FunctionLibraryExceptionManagementUtil {\n+\n+    /**\n+     * This method can be used to generate a FunctionLibraryManagementClientException from\n+     * FunctionLibraryManagementConstants.ErrorMessage object when no exception is thrown.\n+     *\n+     * @param error FunctionLibraryManagementConstants.ErrorMessage.\n+     * @param data  data to replace if message needs to be replaced.\n+     * @return FunctionLibraryManagementClientException.\n+     */\n+    public static FunctionLibraryManagementClientException handleClientException(\n+            FunctionLibraryManagementConstants.ErrorMessage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94f9b853adba261b9ccc0c125f62792c4a6b84ac"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8", "author": {"user": {"login": "Wathsara", "name": "Wathsara Wishwantha Daluwatta"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8", "committedDate": "2020-01-20T08:03:35Z", "message": "Fixed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Mzg2NDU5", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#pullrequestreview-346386459", "createdAt": "2020-01-22T07:29:00Z", "commit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzoyOTowMFrOFgSmLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzozOToxOFrOFgSxCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMzQzNg==", "bodyText": "This will be bit consuming and error prone. We assume the error should have exactly one string place holder which we can't enforce. Would be better to give the responsibility to the callee to format/build and pass the exact message.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r369403436", "createdAt": "2020-01-22T07:29:00Z", "author": {"login": "pulasthi7"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/util/FunctionLibraryExceptionManagementUtil.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.identity.functions.library.mgt.util;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.wso2.carbon.identity.functions.library.mgt.exception.FunctionLibraryManagementClientException;\n+import org.wso2.carbon.identity.functions.library.mgt.exception.FunctionLibraryManagementServerException;\n+\n+/**\n+ * Function library management error handling class.\n+ */\n+public class FunctionLibraryExceptionManagementUtil {\n+\n+    /**\n+     * This method can be used to generate a FunctionLibraryManagementClientException from\n+     * FunctionLibraryManagementConstants.ErrorMessage object when no exception is thrown.\n+     *\n+     * @param error FunctionLibraryManagementConstants.ErrorMessage.\n+     * @param data  data to replace if message needs to be replaced.\n+     * @return FunctionLibraryManagementClientException.\n+     */\n+    public static FunctionLibraryManagementClientException handleClientException(\n+            FunctionLibraryManagementConstants.ErrorMessage error, String data) {\n+\n+        String message = includeData(error, data);\n+        return new FunctionLibraryManagementClientException(error.getCode(), message);\n+    }\n+\n+    public static FunctionLibraryManagementClientException handleClientException(\n+            FunctionLibraryManagementConstants.ErrorMessage error, String data, Throwable e) {\n+\n+        String message = includeData(error, data);\n+        return new FunctionLibraryManagementClientException(error.getCode(), message, e);\n+    }\n+\n+    public static FunctionLibraryManagementClientException handleClientException(\n+            FunctionLibraryManagementConstants.ErrorMessage error) {\n+\n+        String message = error.getMessage();\n+        return new FunctionLibraryManagementClientException(error.getCode(), message);\n+    }\n+\n+    /**\n+     * This method can be used to generate a FunctionLibraryManagementServerException from\n+     * FunctionLibraryManagementConstants.ErrorMessage object when no exception is thrown.\n+     *\n+     * @param error FunctionLibraryManagementConstants.ErrorMessage.\n+     * @param data  data to replace if message needs to be replaced.\n+     * @return FunctionLibraryManagementServerException.\n+     */\n+    public static FunctionLibraryManagementServerException handleServerException(\n+            FunctionLibraryManagementConstants.ErrorMessage error, String data, Throwable e) {\n+\n+        String message = includeData(error, data);\n+        return new FunctionLibraryManagementServerException(error.getCode(), message, e);\n+    }\n+\n+    public static FunctionLibraryManagementServerException handleServerException(\n+            FunctionLibraryManagementConstants.ErrorMessage error) {\n+\n+        String message = error.getMessage();\n+        return new FunctionLibraryManagementServerException(error.getCode(), message);\n+    }\n+\n+    public static FunctionLibraryManagementServerException handleServerException(\n+            FunctionLibraryManagementConstants.ErrorMessage error, Throwable e) {\n+\n+        String message = error.getMessage();\n+        return new FunctionLibraryManagementServerException(error.getCode(), message, e);\n+    }\n+\n+    /**\n+     * Include the data to the error message.\n+     *\n+     * @param error FunctionLibraryManagementConstants.ErrorMessage.\n+     * @param data  data to replace if message needs to be replaced.\n+     * @return message format with data.\n+     */\n+    private static String includeData(FunctionLibraryManagementConstants.ErrorMessage error, String data) {\n+\n+        String message;\n+        if (StringUtils.isNotBlank(data)) {\n+            message = String.format(error.getMessage(), data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMzgyOA==", "bodyText": "I Guess the code should start with matching HTTP code. @ayshsandu , @IsuraD Can you please comment?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r369403828", "createdAt": "2020-01-22T07:30:30Z", "author": {"login": "pulasthi7"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/util/FunctionLibraryManagementConstants.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.functions.library.mgt.util;\n+\n+/**\n+ * Function Library Management constant class.\n+ */\n+public class FunctionLibraryManagementConstants {\n+\n+    /**\n+     * Enum for error messages.\n+     */\n+    public enum ErrorMessage {\n+\n+        ERROR_CODE_UNEXPECTED(\"SCL-65001\", \"Unexpected Error\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwNTQ3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ERROR_CODE_DELETE_SCRIPT_LIBRARY(\"SCL-65008\", \"Error while deleting Script library: %s.\"),\n          \n          \n            \n                    ERROR_CODE_DELETE_SCRIPT_LIBRARY(\"SCL-65008\", \"Error while deleting script library: %s.\"),\n          \n      \n    \n    \n  \n\nCheck and fix other similar usages", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r369405478", "createdAt": "2020-01-22T07:36:29Z", "author": {"login": "pulasthi7"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/util/FunctionLibraryManagementConstants.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.functions.library.mgt.util;\n+\n+/**\n+ * Function Library Management constant class.\n+ */\n+public class FunctionLibraryManagementConstants {\n+\n+    /**\n+     * Enum for error messages.\n+     */\n+    public enum ErrorMessage {\n+\n+        ERROR_CODE_UNEXPECTED(\"SCL-65001\", \"Unexpected Error\"),\n+        ERROR_CODE_DATABASE_CONNECTION(\"SCL-65001\", \"Couldn't get a database connection.\"),\n+        ERROR_CODE_VALIDATE_SCRIPT_LIBRARY_SCRIPT(\"SCL-60002\", \"Script library script of %s contains errors.\"),\n+        ERROR_CODE_REQUIRE_SCRIPT_LIBRARY_NAME(\"SCL-60003\", \"Script library name is required\"),\n+        ERROR_CODE_REQUIRE_SCRIPT_LIBRARY_SCRIPT(\"SCL-60003\", \"Script library script is required\"),\n+        ERROR_CODE_ALL_READY_EXIST_SCRIPT_LIBRARY(\"SCL-65004\", \"Already a script library available with the name: %s.\"),\n+        ERROR_CODE_INVALID_SCRIPT_LIBRARY_NAME(\"SCL-65004\", \"The script library name is not valid! It is not adhering\" +\n+                \" to the regex %s.\"),\n+        ERROR_CODE_ADD_SCRIPT_LIBRARY(\"SCL-65002\", \"Error while creating the script library: %s.\"),\n+        ERROR_CODE_PROCESSING_CONTENT_STREAM_SCRIPT_LIBRARY(\"SCL-65003\",\n+                \"An error occurred while processing content stream of script library script: %s.\"),\n+        ERROR_CODE_INVALID_TENANT(\"SCL-65004\", \"Error while creating script library due to invalid tenant.\"),\n+        ERROR_CODE_RETRIEVE_SCRIPT_LIBRARY(\"SCL-65005\", \"Error while getting the script library: %s.\"),\n+        ERROR_CODE_RETRIEVE_SCRIPT_LIBRARIES(\"SCL-65006\", \"Error while reading Script libraries.\"),\n+        ERROR_CODE_UPDATE_SCRIPT_LIBRARY(\"SCL-65007\", \"Failed to update Script library: %s.\"),\n+        ERROR_CODE_DELETE_SCRIPT_LIBRARY(\"SCL-65008\", \"Error while deleting Script library: %s.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwNjAzNw==", "bodyText": "add a fail() before the catch, if we expect delete call to throw an exception", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r369406037", "createdAt": "2020-01-22T07:38:39Z", "author": {"login": "pulasthi7"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/test/java/org/wso2/carbon/identity/functions/library/mgt/FunctionLibraryManagementServiceTest.java", "diffHunk": "@@ -123,28 +123,28 @@ public void createFunctionLibrary(Object functionLibrary, String tenantDomain) {\n \n             assertEquals(functionLibraryManagementService.getFunctionLibrary(\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName(), tenantDomain)\n-                                                         .getFunctionLibraryName(),\n+                            .getFunctionLibraryName(),\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName());\n \n             // Clean after test\n             functionLibraryManagementService.deleteFunctionLibrary(\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName(), tenantDomain);\n         } catch (FunctionLibraryManagementException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwNjIxOA==", "bodyText": "Better to split these to multiple tests for clarity", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r369406218", "createdAt": "2020-01-22T07:39:18Z", "author": {"login": "pulasthi7"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/test/java/org/wso2/carbon/identity/functions/library/mgt/FunctionLibraryManagementServiceTest.java", "diffHunk": "@@ -123,28 +123,28 @@ public void createFunctionLibrary(Object functionLibrary, String tenantDomain) {\n \n             assertEquals(functionLibraryManagementService.getFunctionLibrary(\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName(), tenantDomain)\n-                                                         .getFunctionLibraryName(),\n+                            .getFunctionLibraryName(),\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName());\n \n             // Clean after test\n             functionLibraryManagementService.deleteFunctionLibrary(\n                     ((FunctionLibrary) functionLibrary).getFunctionLibraryName(), tenantDomain);\n         } catch (FunctionLibraryManagementException e) {\n             if (((FunctionLibrary) functionLibrary).getFunctionLibraryName() == null) {\n-                assertEquals(e.getMessage(), \"Function Library Name is required\");\n+                assertEquals(e.getMessage(), \"script Library Name is required\");\n             } else if (!isRegexValidated(((FunctionLibrary) functionLibrary).getFunctionLibraryName())) {\n-                assertEquals(e.getMessage(), \"The function library name \" + ((FunctionLibrary) functionLibrary).\n-                        getFunctionLibraryName() + \" is not valid! It is not adhering \" +\n-                        \"to the regex \" + FunctionLibraryMgtUtil.FUNCTION_LIBRARY_NAME_VALIDATING_REGEX + \".\");\n+                assertEquals(e.getMessage(), \"The script library name is not valid! It is not adhering to the regex \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a526929402c0b6fb5ef8eab5d87a89fbaeee7c8"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5deb0813742b0687efcb1daedf5123e568cb42", "author": {"user": {"login": "Wathsara", "name": "Wathsara Wishwantha Daluwatta"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8c5deb0813742b0687efcb1daedf5123e568cb42", "committedDate": "2020-01-24T05:00:48Z", "message": "Fixed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDM4NDM4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#pullrequestreview-348438438", "createdAt": "2020-01-27T04:36:43Z", "commit": {"oid": "8c5deb0813742b0687efcb1daedf5123e568cb42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDozNjo0NFrOFh32GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDozNjo0NFrOFh32GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2MjI5Nw==", "bodyText": "Typo.. change ALL_READY to ALREADY", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#discussion_r371062297", "createdAt": "2020-01-27T04:36:44Z", "author": {"login": "emswbandara"}, "path": "components/functions-library-mgt/org.wso2.carbon.identity.functions.library.mgt/src/main/java/org/wso2/carbon/identity/functions/library/mgt/util/FunctionLibraryManagementConstants.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.functions.library.mgt.util;\n+\n+/**\n+ * Function Library Management constant class.\n+ */\n+public class FunctionLibraryManagementConstants {\n+\n+    /**\n+     * Enum for error messages.\n+     */\n+    public enum ErrorMessage {\n+\n+        ERROR_CODE_UNEXPECTED(\"SCL-65001\", \"Unexpected Error\"),\n+        ERROR_CODE_DATABASE_CONNECTION(\"SCL-65001\", \"Couldn't get a database connection.\"),\n+        ERROR_CODE_VALIDATE_SCRIPT_LIBRARY_SCRIPT(\"SCL-60002\", \"Script library script of %s contains errors.\"),\n+        ERROR_CODE_REQUIRE_SCRIPT_LIBRARY_NAME(\"SCL-60003\", \"Script library name is required\"),\n+        ERROR_CODE_REQUIRE_SCRIPT_LIBRARY_SCRIPT(\"SCL-60003\", \"Script library script is required\"),\n+        ERROR_CODE_ALL_READY_EXIST_SCRIPT_LIBRARY(\"SCL-65004\", \"Already a script library available with the name: %s.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c5deb0813742b0687efcb1daedf5123e568cb42"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d6fa4d553b0d78ca83f8d85f66d01572a985143", "author": {"user": {"login": "Wathsara", "name": "Wathsara Wishwantha Daluwatta"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/3d6fa4d553b0d78ca83f8d85f66d01572a985143", "committedDate": "2020-01-27T04:52:16Z", "message": "Fixed a typo error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDQxMTk2", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#pullrequestreview-348441196", "createdAt": "2020-01-27T04:58:29Z", "commit": {"oid": "3d6fa4d553b0d78ca83f8d85f66d01572a985143"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDQxNTEx", "url": "https://github.com/wso2/carbon-identity-framework/pull/2679#pullrequestreview-348441511", "createdAt": "2020-01-27T05:00:48Z", "commit": {"oid": "3d6fa4d553b0d78ca83f8d85f66d01572a985143"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2433, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}