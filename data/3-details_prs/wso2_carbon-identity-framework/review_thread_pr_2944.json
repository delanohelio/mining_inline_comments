{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTgxOTk3", "number": 2944, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxMDo1OFrOD90O1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxMDo1OFrOD90O1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTQ1NDkzOnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxMDo1OFrOGXiSow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTo0NDowOVrOGXmwDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMjI1OQ==", "bodyText": "return !Boolean.FALSE.toString().equalsIgnoreCase(continueOnClaimHandlingErrorValue)", "url": "https://github.com/wso2/carbon-identity-framework/pull/2944#discussion_r427332259", "createdAt": "2020-05-19T14:10:58Z", "author": {"login": "tharindu-bandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2546,4 +2551,22 @@ private static UserStoreManager getUserStoreManager(int tenantId, String userSto\n         }\n         return userStoreManager;\n     }\n+\n+    /**\n+     * Check whether the authentication flow should continue upon facing a claim handling error.\n+     *\n+     * @return true/false Continue or break flow when facing claim handling errors.\n+     */\n+    public static boolean isContinueOnClaimHandlingErrorAllowed() {\n+\n+        String continueOnClaimHandlingErrorValue = IdentityUtil.getProperty(CONTINUE_ON_CLAIM_HANDLING_ERROR);\n+\n+        // If config is empty or not a boolean value, the property must be set to the default value which is true.\n+        if (StringUtils.isBlank(continueOnClaimHandlingErrorValue) ||\n+                !(TRUE.equalsIgnoreCase(continueOnClaimHandlingErrorValue) ||\n+                        FALSE.equalsIgnoreCase(continueOnClaimHandlingErrorValue))) {\n+            continueOnClaimHandlingErrorValue = CONTINUE_ON_CLAIM_HANDLING_ERROR_DEFAULT;\n+        }\n+        return Boolean.parseBoolean(continueOnClaimHandlingErrorValue);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57e48ec18514adb91ca920144dc83f3eb6b23b98"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMjgzNw==", "bodyText": "Shall we use the above? would it capture all the cases?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2944#discussion_r427332837", "createdAt": "2020-05-19T14:11:43Z", "author": {"login": "tharindu-bandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2546,4 +2551,22 @@ private static UserStoreManager getUserStoreManager(int tenantId, String userSto\n         }\n         return userStoreManager;\n     }\n+\n+    /**\n+     * Check whether the authentication flow should continue upon facing a claim handling error.\n+     *\n+     * @return true/false Continue or break flow when facing claim handling errors.\n+     */\n+    public static boolean isContinueOnClaimHandlingErrorAllowed() {\n+\n+        String continueOnClaimHandlingErrorValue = IdentityUtil.getProperty(CONTINUE_ON_CLAIM_HANDLING_ERROR);\n+\n+        // If config is empty or not a boolean value, the property must be set to the default value which is true.\n+        if (StringUtils.isBlank(continueOnClaimHandlingErrorValue) ||\n+                !(TRUE.equalsIgnoreCase(continueOnClaimHandlingErrorValue) ||\n+                        FALSE.equalsIgnoreCase(continueOnClaimHandlingErrorValue))) {\n+            continueOnClaimHandlingErrorValue = CONTINUE_ON_CLAIM_HANDLING_ERROR_DEFAULT;\n+        }\n+        return Boolean.parseBoolean(continueOnClaimHandlingErrorValue);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMjI1OQ=="}, "originalCommit": {"oid": "57e48ec18514adb91ca920144dc83f3eb6b23b98"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQwNTMyNw==", "bodyText": "This works. Fixed in ef99f93.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2944#discussion_r427405327", "createdAt": "2020-05-19T15:44:09Z", "author": {"login": "ashendes"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2546,4 +2551,22 @@ private static UserStoreManager getUserStoreManager(int tenantId, String userSto\n         }\n         return userStoreManager;\n     }\n+\n+    /**\n+     * Check whether the authentication flow should continue upon facing a claim handling error.\n+     *\n+     * @return true/false Continue or break flow when facing claim handling errors.\n+     */\n+    public static boolean isContinueOnClaimHandlingErrorAllowed() {\n+\n+        String continueOnClaimHandlingErrorValue = IdentityUtil.getProperty(CONTINUE_ON_CLAIM_HANDLING_ERROR);\n+\n+        // If config is empty or not a boolean value, the property must be set to the default value which is true.\n+        if (StringUtils.isBlank(continueOnClaimHandlingErrorValue) ||\n+                !(TRUE.equalsIgnoreCase(continueOnClaimHandlingErrorValue) ||\n+                        FALSE.equalsIgnoreCase(continueOnClaimHandlingErrorValue))) {\n+            continueOnClaimHandlingErrorValue = CONTINUE_ON_CLAIM_HANDLING_ERROR_DEFAULT;\n+        }\n+        return Boolean.parseBoolean(continueOnClaimHandlingErrorValue);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzMjI1OQ=="}, "originalCommit": {"oid": "57e48ec18514adb91ca920144dc83f3eb6b23b98"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2673, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}