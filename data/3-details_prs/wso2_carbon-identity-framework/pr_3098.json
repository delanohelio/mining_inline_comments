{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTAxMDIw", "number": 3098, "title": "Trigger SESSION_EXPIRE event when a timed out session is found", "bodyText": "Resolves wso2/product-is#9312\nDescription\nWith this PR a SESSION_EXPIRE event is fired for a session expiry due to session idle time out or timed out remember-me session. An expired session can be found if a user tries to SSO, log in again or tries to logout from an application after an idle time out.", "createdAt": "2020-09-08T14:50:56Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098", "merged": true, "mergeCommit": {"oid": "b4b7c631abedac21d19b7ec0f22b0525c53b5d4b"}, "closed": true, "closedAt": "2020-09-11T03:30:32Z", "author": {"login": "sachiniWettasinghe"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG4uZ2gH2gAyNDgyMTAxMDIwOjU0OWYxMDZlODRkY2E1MjFkMzY1OWMzNjE3NmE2NGQ4NWJmMjhlNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHfuugAFqTQ4NTg2NDcwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "549f106e84dca521d3659c36176a64d85bf28e5d", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/549f106e84dca521d3659c36176a64d85bf28e5d", "committedDate": "2020-09-08T14:46:09Z", "message": "Add new event for session expiry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4745ec58b3d6a9b1f03327fefef4f5e8b1fa90a", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/d4745ec58b3d6a9b1f03327fefef4f5e8b1fa90a", "committedDate": "2020-09-08T14:46:45Z", "message": "Trigger session expire event when a timed out session is found"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTU1MTY1", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#pullrequestreview-485555165", "createdAt": "2020-09-10T04:23:01Z", "commit": {"oid": "d4745ec58b3d6a9b1f03327fefef4f5e8b1fa90a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNDoyMzowMVrOHPiY8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNDoyMzowMVrOHPiY8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA1NDEyOA==", "bodyText": "Is it correct to throw the AuthenticationFailedException exception here?\nShouldn't it be some other FrameworkException?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#discussion_r486054128", "createdAt": "2020-09-10T04:23:01Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -951,6 +956,79 @@ public static SessionContext getSessionContextFromCache(String key) {\n         return sessionContext;\n     }\n \n+    /**\n+     * Retrieve session context from the session cache.\n+     *\n+     * @param request           HttpServletRequest.\n+     * @param context           Authentication context.\n+     * @param sessionContextKey Session context key.\n+     * @return Session context key.\n+     * @throws AuthenticationFailedException Error in triggering session expire event.\n+     */\n+    public static SessionContext getSessionContextFromCache(HttpServletRequest request, AuthenticationContext context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4745ec58b3d6a9b1f03327fefef4f5e8b1fa90a"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d820c86a8c0c7c933678877a32fd35dc20ab127a", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/d820c86a8c0c7c933678877a32fd35dc20ab127a", "committedDate": "2020-09-10T04:23:06Z", "message": "Subscribe TokenBindingExpiryEventHandler to SESSION_EXPIRE event"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b602c23b7ba8b8d1ffe60f8eeea7d2d63239f92", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6b602c23b7ba8b8d1ffe60f8eeea7d2d63239f92", "committedDate": "2020-09-10T05:01:25Z", "message": "Address PR comments"}, "afterCommit": {"oid": "6e0671634815499c949ce71f6f8db045d7ad3366", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6e0671634815499c949ce71f6f8db045d7ad3366", "committedDate": "2020-09-10T05:03:19Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTg0ODI4", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#pullrequestreview-485584828", "createdAt": "2020-09-10T05:06:10Z", "commit": {"oid": "6e0671634815499c949ce71f6f8db045d7ad3366"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTowNjoxMFrOHPjIHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTowNjoxMFrOHPjIHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2NjIwNA==", "bodyText": "Let's have some context information. Like the sessionId, user etc.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#discussion_r486066204", "createdAt": "2020-09-10T05:06:10Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -951,6 +955,79 @@ public static SessionContext getSessionContextFromCache(String key) {\n         return sessionContext;\n     }\n \n+    /**\n+     * Retrieve session context from the session cache.\n+     *\n+     * @param request           HttpServletRequest.\n+     * @param context           Authentication context.\n+     * @param sessionContextKey Session context key.\n+     * @return Session context key.\n+     * @throws FrameworkException Error in triggering session expire event.\n+     */\n+    public static SessionContext getSessionContextFromCache(HttpServletRequest request, AuthenticationContext context\n+            , String sessionContextKey) throws FrameworkException {\n+\n+        SessionContext sessionContext = null;\n+        if (StringUtils.isNotBlank(sessionContextKey)) {\n+            SessionContextCacheKey cacheKey = new SessionContextCacheKey(sessionContextKey);\n+            SessionContextCache sessionContextCache = SessionContextCache.getInstance();\n+            SessionContextCacheEntry cacheEntry = sessionContextCache.getSessionContextCacheEntry(cacheKey);\n+\n+            if (cacheEntry != null) {\n+                sessionContext = cacheEntry.getContext();\n+                boolean isSessionExpired = sessionContextCache.isSessionExpired(cacheKey, cacheEntry);\n+                if (isSessionExpired) {\n+                    triggerSessionExpireEvent(request, context, sessionContext);\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"A SESSION_EXPIRE event was fired for the expired session found corresponding \" +\n+                                \"to the key: \" + cacheKey.getContextId());\n+                    }\n+                    return null;\n+                }\n+            }\n+        }\n+        return sessionContext;\n+    }\n+\n+    /**\n+     * Trigger SESSION_EXPIRE event on session expiry due to a session idle timeout or a remember me session time out.\n+     *\n+     * @param request        HttpServletRequest.\n+     * @param context        Authentication context.\n+     * @param sessionContext Session context.\n+     * @throws FrameworkException Error in triggering the session expiry event.\n+     */\n+    private static void triggerSessionExpireEvent(HttpServletRequest request, AuthenticationContext context,\n+                                                  SessionContext sessionContext) throws FrameworkException {\n+\n+        AuthenticatedUser authenticatedUser = new AuthenticatedUser();\n+        if (sessionContext != null) {\n+            Object authenticatedUserObj = sessionContext.getProperty(FrameworkConstants.AUTHENTICATED_USER);\n+            if (authenticatedUserObj instanceof AuthenticatedUser) {\n+                authenticatedUser = (AuthenticatedUser) authenticatedUserObj;\n+            }\n+            context.setSubject(authenticatedUser);\n+\n+            IdentityEventService eventService = FrameworkServiceDataHolder.getInstance().getIdentityEventService();\n+            try {\n+                Map<String, Object> eventProperties = new HashMap<>();\n+                eventProperties.put(IdentityEventConstants.EventProperty.REQUEST, request);\n+                eventProperties.put(IdentityEventConstants.EventProperty.CONTEXT, context);\n+                eventProperties.put(IdentityEventConstants.EventProperty.SESSION_CONTEXT, sessionContext);\n+                Map<String, Object> paramMap = new HashMap<>();\n+                paramMap.put(FrameworkConstants.AnalyticsAttributes.USER, authenticatedUser);\n+                paramMap.put(FrameworkConstants.AnalyticsAttributes.SESSION_ID, context.getSessionIdentifier());\n+                Map<String, Object> unmodifiableParamMap = Collections.unmodifiableMap(paramMap);\n+                eventProperties.put(IdentityEventConstants.EventProperty.PARAMS, unmodifiableParamMap);\n+\n+                Event event = new Event(IdentityEventConstants.EventName.SESSION_EXPIRE.name(), eventProperties);\n+                eventService.handleEvent(event);\n+            } catch (IdentityEventException e) {\n+                throw new FrameworkException(\"Error in triggering the session expire event.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e0671634815499c949ce71f6f8db045d7ad3366"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTg1MTcz", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#pullrequestreview-485585173", "createdAt": "2020-09-10T05:07:12Z", "commit": {"oid": "6e0671634815499c949ce71f6f8db045d7ad3366"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e0671634815499c949ce71f6f8db045d7ad3366", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6e0671634815499c949ce71f6f8db045d7ad3366", "committedDate": "2020-09-10T05:03:19Z", "message": "Address PR comments"}, "afterCommit": {"oid": "cf0c1c45baba0a400fc721abd4eb7e9833acbc4d", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/cf0c1c45baba0a400fc721abd4eb7e9833acbc4d", "committedDate": "2020-09-10T05:22:37Z", "message": "Address PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a04207357fe6a6c6875c253ab558f16e71318c", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b2a04207357fe6a6c6875c253ab558f16e71318c", "committedDate": "2020-09-10T05:52:08Z", "message": "Address PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf0c1c45baba0a400fc721abd4eb7e9833acbc4d", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/cf0c1c45baba0a400fc721abd4eb7e9833acbc4d", "committedDate": "2020-09-10T05:22:37Z", "message": "Address PR comments"}, "afterCommit": {"oid": "b2a04207357fe6a6c6875c253ab558f16e71318c", "author": {"user": {"login": "sachiniWettasinghe", "name": "Sachini"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b2a04207357fe6a6c6875c253ab558f16e71318c", "committedDate": "2020-09-10T05:52:08Z", "message": "Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODY0NzAz", "url": "https://github.com/wso2/carbon-identity-framework/pull/3098#pullrequestreview-485864703", "createdAt": "2020-09-10T12:12:48Z", "commit": {"oid": "b2a04207357fe6a6c6875c253ab558f16e71318c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2189, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}