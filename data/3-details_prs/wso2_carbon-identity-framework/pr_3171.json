{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NTg4MTgz", "number": 3171, "title": " Support for password recovery using claims other than the username", "bodyText": "This PR adds the API client code required to support 'password recovery using claims other than the username' feature via the recovery endpoint.\nRelated to : wso2/identity-apps#1245\nResolves : wso2/product-is#9267", "createdAt": "2020-10-16T05:05:15Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171", "merged": true, "mergeCommit": {"oid": "aa5ef276b59ca06d9bad86d751338ea37c011a52"}, "closed": true, "closedAt": "2020-11-03T11:19:32Z", "author": {"login": "DinikaSen"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdV_DucAFqTUxNjM1NDc5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXL55IgBqjM5MzQ2MTEwMDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzU0Nzk2", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171#pullrequestreview-516354796", "createdAt": "2020-10-25T12:37:44Z", "commit": {"oid": "f54a2f2e48e7aee4472ae9728795a0b53b6a785b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxMjozNzo0NFrOHn5Eqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxMjozNzo0NFrOHn5Eqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU5MTU5NQ==", "bodyText": "Shall we make this comment formatted like the other comments. Like having full stops at the EOL, having exception explanation comment. WDYT?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171#discussion_r511591595", "createdAt": "2020-10-25T12:37:44Z", "author": {"login": "ShanChathusanda93"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -692,4 +692,24 @@ public static String getBasePath(String tenantDomain, String context, boolean is\n         }\n         return basePath;\n     }\n+\n+    /**\n+     * Get a query parameter value from a URL.\n+     *\n+     * @param url               URL\n+     * @param queryParameter    Required query parameter name\n+     * @return Query parameter value\n+     * @throws URISyntaxException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54a2f2e48e7aee4472ae9728795a0b53b6a785b"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzU0ODk4", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171#pullrequestreview-516354898", "createdAt": "2020-10-25T12:38:46Z", "commit": {"oid": "f54a2f2e48e7aee4472ae9728795a0b53b6a785b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxMjozODo0NlrOHn5FJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxMjozODo0NlrOHn5FJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU5MTcxOA==", "bodyText": "Shall we start the comment with an uppercase letter. WDYT? Check the other places as well.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171#discussion_r511591718", "createdAt": "2020-10-25T12:38:46Z", "author": {"login": "ShanChathusanda93"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/PasswordRecoveryApiV1.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.mgt.endpoint.util.client.api;\n+\n+import com.sun.jersey.api.client.GenericType;\n+import org.apache.commons.collections.MapUtils;\n+import org.apache.commons.lang.StringUtils;\n+import org.wso2.carbon.base.MultitenantConstants;\n+import org.wso2.carbon.identity.mgt.endpoint.util.IdentityManagementEndpointConstants;\n+import org.wso2.carbon.identity.mgt.endpoint.util.IdentityManagementEndpointUtil;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.ApiClient;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.ApiException;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.Configuration;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.Pair;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.model.passwordrecovery.v1.AccountRecoveryType;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.model.passwordrecovery.v1.RecoveryInitRequest;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.model.passwordrecovery.v1.RecoveryRequest;\n+import org.wso2.carbon.identity.mgt.endpoint.util.client.model.passwordrecovery.v1.RecoveryResponse;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * API related to password recovery with user preferred channel.\n+ */\n+public class PasswordRecoveryApiV1 {\n+\n+    String basePath = IdentityManagementEndpointUtil.buildEndpointUrl(IdentityManagementEndpointConstants\n+            .UserInfoRecovery.RECOVERY_API_V1_RELATIVE_PATH);\n+    private ApiClient apiClient;\n+\n+    public PasswordRecoveryApiV1() {\n+\n+        this(Configuration.getDefaultApiClient());\n+    }\n+\n+    public PasswordRecoveryApiV1(ApiClient apiClient) {\n+\n+        this.apiClient = apiClient;\n+    }\n+\n+    public ApiClient getApiClient() {\n+\n+        return apiClient;\n+    }\n+\n+    public void setApiClient(ApiClient apiClient) {\n+\n+        this.apiClient = apiClient;\n+    }\n+\n+    /**\n+     * This API can be used to initiate recovering forgotten password.\n+     *\n+     * @param recoveryInitRequest Password recovery initiating request. (required)\n+     * @param tenantDomain        Tenant Domain which user belongs. Default &#x60;carbon.super&#x60; (optional)\n+     * @param headers             If reCaptcha respond is found, embedded in request header. (optional)\n+     * @return Account recovery options response object.\n+     * @throws ApiException if fails to make API call.\n+     */\n+    public List<AccountRecoveryType> initiatePasswordRecovery(RecoveryInitRequest recoveryInitRequest, String tenantDomain,\n+                                                              Map<String, String> headers) throws ApiException {\n+\n+        String localVarPath = \"/password/init\".replaceAll(\"\\\\{format\\\\}\", \"json\");\n+        return initiateRecovery(recoveryInitRequest, tenantDomain, null, localVarPath);\n+    }\n+\n+    /**\n+     * This API is used to recover password via selected recovery option.\n+     *\n+     * @param recoveryRequest   Recovery request. (required)\n+     * @param tenantDomain      Tenant Domain which user belongs. Default &#x60;carbon.super&#x60; (optional)\n+     * @param headers           Any additional headers to be embedded. (optional)\n+     * @return Recovery response.\n+     * @throws ApiException if fails to make API call.\n+     */\n+    public RecoveryResponse recoverPassword(RecoveryRequest recoveryRequest, String tenantDomain,\n+                                            Map<String, String> headers) throws ApiException {\n+\n+        String localVarPath = \"/password/recover\".replaceAll(\"\\\\{format\\\\}\", \"json\");\n+        return recover(recoveryRequest, tenantDomain, headers, localVarPath);\n+    }\n+\n+    /**\n+     * This API can be used to initiate recovering forgotten password/username.\n+     *\n+     * @param recoveryInitRequest Recovery initiating request. (required)\n+     * @param tenantDomain        Tenant Domain which user belongs. Default &#x60;carbon.super&#x60; (optional)\n+     * @param headers             If reCaptcha respond is found, embedded in request header. (optional)\n+     * @param localVarPath        Endpoint path.\n+     * @return Account recovery options response object.\n+     * @throws ApiException if fails to make API call.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54a2f2e48e7aee4472ae9728795a0b53b6a785b"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg5ODM4", "url": "https://github.com/wso2/carbon-identity-framework/pull/3171#pullrequestreview-516389838", "createdAt": "2020-10-25T19:27:27Z", "commit": {"oid": "09b57785a1049994143d57f2e0620c3f88376e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a3018e3095c1791eed5a24fd32802c4fd4b730", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/74a3018e3095c1791eed5a24fd32802c4fd4b730", "committedDate": "2020-10-29T06:08:49Z", "message": "Add notification based password recovery API support to recovery endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b48d8c76a201f582bfeb2f942efdf7975857c6ac", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b48d8c76a201f582bfeb2f942efdf7975857c6ac", "committedDate": "2020-10-29T06:08:49Z", "message": "Remove unwanted fie and method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b65a4e7615f2390cf018fca16b5f90e0d60dce06", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b65a4e7615f2390cf018fca16b5f90e0d60dce06", "committedDate": "2020-10-29T06:08:49Z", "message": "Format comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a50caec46f132c3d29cd3ec8ccc0739cb384cd", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/03a50caec46f132c3d29cd3ec8ccc0739cb384cd", "committedDate": "2020-10-29T06:08:49Z", "message": "Remove unwanted API client codes related to resend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746f30810a9a73f36c0d3b1e93d4278591eb0cdb", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/746f30810a9a73f36c0d3b1e93d4278591eb0cdb", "committedDate": "2020-10-29T06:08:49Z", "message": "Format method comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09b57785a1049994143d57f2e0620c3f88376e14", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/09b57785a1049994143d57f2e0620c3f88376e14", "committedDate": "2020-10-25T12:56:21Z", "message": "Format method comments."}, "afterCommit": {"oid": "746f30810a9a73f36c0d3b1e93d4278591eb0cdb", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/746f30810a9a73f36c0d3b1e93d4278591eb0cdb", "committedDate": "2020-10-29T06:08:49Z", "message": "Format method comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2205, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}