{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzOTM4OTEy", "number": 3132, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozOTozNlrOEoxFxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0NTowMlrOEoxMzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTgyNzkxOnYy", "diffSide": "RIGHT", "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozOTozNlrOHaDHQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMzoyOToyNFrOHaMDWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3NjAzNA==", "bodyText": "What is the reason for moving away from NamedPreparedStatement here?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497076034", "createdAt": "2020-09-29T21:39:36Z", "author": {"login": "ivantha"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "diffHunk": "@@ -29,11 +29,11 @@\n \n     public static final String INSERT_CORS_ORIGIN =\n             \"INSERT INTO IDN_CORS_ORIGIN (TENANT_ID, ORIGIN, UUID) \" +\n-            \"VALUES (?, ?, ?)\";\n+            \"VALUES (:TENANT_ID;, :ORIGIN;, :UUID;)\";\n \n     public static final String INSERT_CORS_ASSOCIATION =\n             \"INSERT INTO IDN_CORS_ASSOCIATION (IDN_CORS_ORIGIN_ID, SP_APP_ID) \" +\n-            \"VALUES (:IDN_CORS_ORIGIN_ID;, :SP_APP_ID;)\";\n+            \"VALUES (?,?)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyMjQ5MA==", "bodyText": "NamedPreparedstatement having issue with postgresql. With postgresql if we use namedpreparedstatment it is always expecting the returned key and throwing [1]. Thatswhy changed to Preparedstatement\n[1] wso2/product-is#9608", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497222490", "createdAt": "2020-09-30T03:29:24Z", "author": {"login": "nilasini"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "diffHunk": "@@ -29,11 +29,11 @@\n \n     public static final String INSERT_CORS_ORIGIN =\n             \"INSERT INTO IDN_CORS_ORIGIN (TENANT_ID, ORIGIN, UUID) \" +\n-            \"VALUES (?, ?, ?)\";\n+            \"VALUES (:TENANT_ID;, :ORIGIN;, :UUID;)\";\n \n     public static final String INSERT_CORS_ASSOCIATION =\n             \"INSERT INTO IDN_CORS_ASSOCIATION (IDN_CORS_ORIGIN_ID, SP_APP_ID) \" +\n-            \"VALUES (:IDN_CORS_ORIGIN_ID;, :SP_APP_ID;)\";\n+            \"VALUES (?,?)\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3NjAzNA=="}, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTgzMDk5OnYy", "diffSide": "RIGHT", "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0MDo0MFrOHaDJOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMzoyOTo0MFrOHaMDrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3NjUzOQ==", "bodyText": "Same as the ^ comment.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497076539", "createdAt": "2020-09-29T21:40:40Z", "author": {"login": "ivantha"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "diffHunk": "@@ -55,5 +55,5 @@\n     public static final String DELETE_CORS_APPLICATION_ASSOCIATION =\n             \"DELETE \" +\n             \"FROM IDN_CORS_ASSOCIATION \" +\n-            \"WHERE IDN_CORS_ORIGIN_ID = :IDN_CORS_ORIGIN_ID; AND SP_APP_ID = :SP_APP_ID;\";\n+            \"WHERE IDN_CORS_ORIGIN_ID = ? AND SP_APP_ID = ?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyMjU3NA==", "bodyText": "https://github.com/wso2/carbon-identity-framework/pull/3132/files#r497222490", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497222574", "createdAt": "2020-09-30T03:29:40Z", "author": {"login": "nilasini"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SQLQueries.java", "diffHunk": "@@ -55,5 +55,5 @@\n     public static final String DELETE_CORS_APPLICATION_ASSOCIATION =\n             \"DELETE \" +\n             \"FROM IDN_CORS_ASSOCIATION \" +\n-            \"WHERE IDN_CORS_ORIGIN_ID = :IDN_CORS_ORIGIN_ID; AND SP_APP_ID = :SP_APP_ID;\";\n+            \"WHERE IDN_CORS_ORIGIN_ID = ? AND SP_APP_ID = ?\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3NjUzOQ=="}, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTg0MTExOnYy", "diffSide": "RIGHT", "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SchemaConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0Mzo1NVrOHaDPNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMzoyNDozNlrOHaL-kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3ODA3MA==", "bodyText": "Since we are using a UUID and the db scema reflects the property as a UUID, isn't it better to keep the initial naming in order to have more consistency? WDYT?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497078070", "createdAt": "2020-09-29T21:43:55Z", "author": {"login": "ivantha"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SchemaConstants.java", "diffHunk": "@@ -13,7 +13,7 @@\n         public static final String ID = \"ID\";\n         public static final String TENANT_ID = \"TENANT_ID\";\n         public static final String ORIGIN = \"ORIGIN\";\n-        public static final String UUID = \"UUID\";\n+        public static final String UNIQUE_ID = \"UUID\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyMTI2Ng==", "bodyText": "If we using UUID as the name then while importing it is conflicting with java.utils.UUID that's why changed the name so that static imports will work for java UUID as well.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497221266", "createdAt": "2020-09-30T03:24:36Z", "author": {"login": "nilasini"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/main/java/org/wso2/carbon/identity/cors/mgt/core/constant/SchemaConstants.java", "diffHunk": "@@ -13,7 +13,7 @@\n         public static final String ID = \"ID\";\n         public static final String TENANT_ID = \"TENANT_ID\";\n         public static final String ORIGIN = \"ORIGIN\";\n-        public static final String UUID = \"UUID\";\n+        public static final String UNIQUE_ID = \"UUID\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3ODA3MA=="}, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTg0NTg4OnYy", "diffSide": "RIGHT", "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/test/java/org/wso2/carbon/identity/cors/mgt/core/test/CORSManagementServiceTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0NTowMlrOHaDSeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMzozMjo1M1rOHaMGgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3ODkwNg==", "bodyText": "Does this work for the NamedPreparedStatement without the initial RETURN_GENERATED_KEYS parameter?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497078906", "createdAt": "2020-09-29T21:45:02Z", "author": {"login": "ivantha"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/test/java/org/wso2/carbon/identity/cors/mgt/core/test/CORSManagementServiceTests.java", "diffHunk": "@@ -150,17 +149,17 @@ public void testGetCORSOriginsWithApplication() throws CORSManagementServiceExce\n         try (Connection connection = IdentityDatabaseUtil.getDBConnection(true)) {\n             try {\n                 for (String origin : SAMPLE_ORIGIN_LIST_1) {\n-                    try (PreparedStatement preparedStatement2 =\n-                                 connection.prepareStatement(INSERT_CORS_ORIGIN, RETURN_GENERATED_KEYS)) {\n+                    try (NamedPreparedStatement namedPreparedStatement =\n+                                 new NamedPreparedStatement(connection, INSERT_CORS_ORIGIN)) {\n                         // Origin is not present. Therefore add an origin.\n-                        preparedStatement2.setInt(1, SampleTenant.ID);\n-                        preparedStatement2.setString(2, origin);\n-                        preparedStatement2.setString(3, UUID.randomUUID().toString().replace(\"-\", \"\"));\n-                        preparedStatement2.executeUpdate();\n+                        namedPreparedStatement.setInt(1, SampleTenant.ID);\n+                        namedPreparedStatement.setString(2, origin);\n+                        namedPreparedStatement.setString(3, UUID.randomUUID().toString());\n+                        namedPreparedStatement.executeUpdate();\n \n                         // Get origin id.\n                         int corsOriginId;\n-                        try (ResultSet resultSet = preparedStatement2.getGeneratedKeys()) {\n+                        try (ResultSet resultSet = namedPreparedStatement.getGeneratedKeys()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyMzI5OA==", "bodyText": "Yes because NamedPreparedStatement already handled the expected returning columns through [1]\n[1] https://github.com/wso2/carbon-utils/blob/master/components/org.wso2.carbon.database.utils/src/main/java/org/wso2/carbon/database/utils/jdbc/NamedPreparedStatement.java#L86", "url": "https://github.com/wso2/carbon-identity-framework/pull/3132#discussion_r497223298", "createdAt": "2020-09-30T03:32:53Z", "author": {"login": "nilasini"}, "path": "components/cors-mgt/org.wso2.carbon.identity.cors.mgt.core/src/test/java/org/wso2/carbon/identity/cors/mgt/core/test/CORSManagementServiceTests.java", "diffHunk": "@@ -150,17 +149,17 @@ public void testGetCORSOriginsWithApplication() throws CORSManagementServiceExce\n         try (Connection connection = IdentityDatabaseUtil.getDBConnection(true)) {\n             try {\n                 for (String origin : SAMPLE_ORIGIN_LIST_1) {\n-                    try (PreparedStatement preparedStatement2 =\n-                                 connection.prepareStatement(INSERT_CORS_ORIGIN, RETURN_GENERATED_KEYS)) {\n+                    try (NamedPreparedStatement namedPreparedStatement =\n+                                 new NamedPreparedStatement(connection, INSERT_CORS_ORIGIN)) {\n                         // Origin is not present. Therefore add an origin.\n-                        preparedStatement2.setInt(1, SampleTenant.ID);\n-                        preparedStatement2.setString(2, origin);\n-                        preparedStatement2.setString(3, UUID.randomUUID().toString().replace(\"-\", \"\"));\n-                        preparedStatement2.executeUpdate();\n+                        namedPreparedStatement.setInt(1, SampleTenant.ID);\n+                        namedPreparedStatement.setString(2, origin);\n+                        namedPreparedStatement.setString(3, UUID.randomUUID().toString());\n+                        namedPreparedStatement.executeUpdate();\n \n                         // Get origin id.\n                         int corsOriginId;\n-                        try (ResultSet resultSet = preparedStatement2.getGeneratedKeys()) {\n+                        try (ResultSet resultSet = namedPreparedStatement.getGeneratedKeys()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3ODkwNg=="}, "originalCommit": {"oid": "1baaf86ae17fd031d50646866aa5e6b47359de50"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2553, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}