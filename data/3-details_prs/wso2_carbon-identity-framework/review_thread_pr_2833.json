{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzUyMjEw", "number": 2833, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjo1NzoxNVrODqOL6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoxNjo0MFrODrFo3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTk5MjA4OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMjo1NzoxNVrOF51l_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTowNzo0MFrOF53E2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ==", "bodyText": "So how would this switch to symmetric encryption", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396191231", "createdAt": "2020-03-23T02:57:15Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,8 +135,21 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                try {\n+                    return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+                } catch (CryptoException e) {\n+                    String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                    throw new IdentityUserStoreMgtException(errorMessage, e);\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e751ebeb48cd1b054f4c42a41ec39f9772efa928"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTcxMQ==", "bodyText": "This should be fixed like this right.\n\nPrecedence should be given to the 'UserStorePasswordEncryption' config\nIf not present, should switch to default internal encryption mechanism", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396191711", "createdAt": "2020-03-23T02:59:59Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,8 +135,21 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                try {\n+                    return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+                } catch (CryptoException e) {\n+                    String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                    throw new IdentityUserStoreMgtException(errorMessage, e);\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}, "originalCommit": {"oid": "e751ebeb48cd1b054f4c42a41ec39f9772efa928"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxMzQ4Mg==", "bodyText": "So how would this switch to symmetric encryption\n\nSwitching to symmetric is done on crypto service layer from line 144", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396213482", "createdAt": "2020-03-23T04:57:44Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,8 +135,21 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                try {\n+                    return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+                } catch (CryptoException e) {\n+                    String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                    throw new IdentityUserStoreMgtException(errorMessage, e);\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}, "originalCommit": {"oid": "e751ebeb48cd1b054f4c42a41ec39f9772efa928"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxNTUxMg==", "bodyText": "This should be fixed like this right.\n\nPrecedence should be given to the 'UserStorePasswordEncryption' config\nIf not present, should switch to default internal encryption mechanism\n\n\nYes the steps should be like that.\nHere 'ENCRYPTION_KEYSTORE' constants is the UserStorePasswordEncryption config.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r396215512", "createdAt": "2020-03-23T05:07:40Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,8 +135,21 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                try {\n+                    return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+                } catch (CryptoException e) {\n+                    String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                    throw new IdentityUserStoreMgtException(errorMessage, e);\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5MTIzMQ=="}, "originalCommit": {"oid": "e751ebeb48cd1b054f4c42a41ec39f9772efa928"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI2NDQzOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxODo0N1rOF69WoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo0NToyMVrOF7N21w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2Njk0NA==", "bodyText": "typo 'cazn'", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397366944", "createdAt": "2020-03-24T18:18:47Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzMzNQ==", "bodyText": "Fixed with 745688e", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637335", "createdAt": "2020-03-25T06:45:21Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2Njk0NA=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI2NjcwOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxOToyNVrOF69YJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo0NToyOVrOF7N3Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NzMzNA==", "bodyText": "Let's remove additional new line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397367334", "createdAt": "2020-03-24T18:19:25Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzM4Mg==", "bodyText": "Fixed with 745688e", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637382", "createdAt": "2020-03-25T06:45:29Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,40 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NzMzNA=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI3NjAwOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMjowMVrOF69eOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo0NTozOVrOF7N3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODg4OA==", "bodyText": "typo", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397368888", "createdAt": "2020-03-24T18:22:01Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzQyOQ==", "bodyText": "Fixed with 745688e", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637429", "createdAt": "2020-03-25T06:45:39Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODg4OA=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI4MDk5OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMzoxNVrOF69hWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo0NjowM1rOF7N3pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2OTY5MQ==", "bodyText": "unnecessary line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397369691", "createdAt": "2020-03-24T18:23:15Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNzU0MQ==", "bodyText": "Fixed with 745688e", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397637541", "createdAt": "2020-03-25T06:46:03Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2OTY5MQ=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI4MzkzOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMzo1OVrOF69jPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOToxMDoyMFrOF7RyGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg==", "bodyText": "What's the difference of this and the one in UserCoreUtil.\nIsn't same logic is duplicated in both places", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397370172", "createdAt": "2020-03-24T18:23:59Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxODEwMA==", "bodyText": "Those 2 classes are in 2 different OSGI bundles.\nUserStoreUtil - org.wso2.carbon.identity.user.store.configuration.deployer\nSecondaryUserStoreConfigurator. - org.wso2.carbon.identity.user.store.configuration", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397618100", "createdAt": "2020-03-25T05:34:10Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwMTY1OQ==", "bodyText": "What's the difference of this and the one in UserCoreUtil.\nIsn't same logic is duplicated in both places\n\nCreated a new git issue wso2/product-is#7954 to track this", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397701659", "createdAt": "2020-03-25T09:10:20Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/utils/SecondaryUserStoreConfigurator.java", "diffHunk": "@@ -144,11 +138,48 @@ private void initializeKeyStore() throws IdentityUserStoreMgtException {\n      */\n     public String encryptPlainText(String plainText) throws IdentityUserStoreMgtException {\n \n-        if (cipher == null) {\n-            initializeKeyStore();\n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(CRYPTO_PROVIDER);\n+            if (SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n         }\n \n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new IdentityUserStoreMgtException(String.format(\"Userstore encryption cazn not be supported due to \" +\n+                    \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                    \"provider should be used.\", INTERNAL_KEYSTORE, SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            try {\n+                return CryptoUtil.getDefaultCryptoUtil().encryptAndBase64Encode(plainText.getBytes());\n+            } catch (CryptoException e) {\n+                String errorMessage = \"Error while encrypting the plain text using internal keystore.\";\n+                throw new IdentityUserStoreMgtException(errorMessage, e);\n+            }\n+        } else {\n+            return encryptWithPrimaryKeyStore(config, plainText);\n+        }\n+\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE3Mg=="}, "originalCommit": {"oid": "0915e4c53b58c235f1c3d436744a1186f0fe9070"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTA3NjkzOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoxNjoyOVrOF7Odow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoyODoxMlrOF7QW7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzI2Nw==", "bodyText": "unnecessary line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397647267", "createdAt": "2020-03-25T07:16:29Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+        } else {\n+            return encryptWithPrimaryKeyStore(plainTextBytes);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745688e61d9965c6f573613694fe2fa661f96ac1"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3ODMxNg==", "bodyText": "Fixed with 57ad2c9", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397678316", "createdAt": "2020-03-25T08:28:12Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+\n+            return CryptoUtil.getDefaultCryptoUtil().encrypt(plainTextBytes);\n+        } else {\n+            return encryptWithPrimaryKeyStore(plainTextBytes);\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzI2Nw=="}, "originalCommit": {"oid": "745688e61d9965c6f573613694fe2fa661f96ac1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTA3NzQyOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzoxNjo0MFrOF7Od7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoyNzozMVrOF7QViw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzM0MA==", "bodyText": "lets remove this line as well", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397647340", "createdAt": "2020-03-25T07:16:40Z", "author": {"login": "malithie"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "745688e61d9965c6f573613694fe2fa661f96ac1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3Nzk2Mw==", "bodyText": "Fixed with 57ad2c9", "url": "https://github.com/wso2/carbon-identity-framework/pull/2833#discussion_r397677963", "createdAt": "2020-03-25T08:27:31Z", "author": {"login": "denuwanthi"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration.deployer/src/main/java/org/wso2/carbon/identity/user/store/configuration/deployer/util/UserStoreUtil.java", "diffHunk": "@@ -118,6 +121,39 @@ public static Cipher getCipherOfSuperTenant() throws UserStoreException {\n      */\n     public static byte[] encrypt(byte[] plainTextBytes) throws CryptoException {\n \n+        boolean isInternalKeyStoreEncryptionEnabled = false;\n+        boolean isSymmetricKeyEncryptionEnabled = false;\n+        ServerConfigurationService config =\n+                UserStoreConfigComponent.getServerConfigurationService();\n+        if (config != null) {\n+            String encryptionKeyStore = config.getFirstProperty(UserStoreConfigurationConstants.ENCRYPTION_KEYSTORE);\n+\n+            if (INTERNAL_KEYSTORE.equalsIgnoreCase(encryptionKeyStore)) {\n+                isInternalKeyStoreEncryptionEnabled = true;\n+            }\n+            String cryptoProvider = config.getFirstProperty(UserStoreConfigurationConstants.CRYPTO_PROVIDER);\n+            if (UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER.equalsIgnoreCase(cryptoProvider)) {\n+                isSymmetricKeyEncryptionEnabled = true;\n+            }\n+        }\n+\n+        if (isInternalKeyStoreEncryptionEnabled && isSymmetricKeyEncryptionEnabled) {\n+\n+            throw new CryptoException(String.format(\"Userstore encryption can not be supported due to \" +\n+                            \"conflicting configurations: '%s' and '%s'. When using internal keystore, assymetric crypto \" +\n+                            \"provider should be used.\", UserStoreConfigurationConstants.INTERNAL_KEYSTORE,\n+                    UserStoreConfigurationConstants.SYMMETRIC_KEY_CRYPTO_PROVIDER));\n+        } else if (isInternalKeyStoreEncryptionEnabled || isSymmetricKeyEncryptionEnabled) {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0NzM0MA=="}, "originalCommit": {"oid": "745688e61d9965c6f573613694fe2fa661f96ac1"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2251, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}