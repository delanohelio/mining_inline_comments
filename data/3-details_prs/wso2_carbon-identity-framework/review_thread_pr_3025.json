{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTg2MjQ2", "number": 3025, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNToxNTo1NVrOERsuKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNToxNTo1NVrOERsuKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTkzOTYyOnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/inbound/IdentityProcessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNToxNTo1NVrOG2jWqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNzowNjowNFrOG3DEyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NTUzMA==", "bodyText": "Better to move (new URI(getCallbackPath(context)).isAbsolute()) to a private method", "url": "https://github.com/wso2/carbon-identity-framework/pull/3025#discussion_r459855530", "createdAt": "2020-07-24T05:15:55Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/inbound/IdentityProcessor.java", "diffHunk": "@@ -100,6 +105,25 @@ public void init(InitConfig initConfig) {\n      */\n     public abstract String getCallbackPath(IdentityMessageContext context);\n \n+    /**\n+     * Get tenant qualified callback path.\n+     *\n+     * @param context IdentityMessageContext\n+     * @return Tenant qualified callback path\n+     */\n+    protected String getTenantQualifiedCallbackPath(IdentityMessageContext context) {\n+\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && !(new URI(getCallbackPath(context)).isAbsolute()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f9cf8acf71ab7497bdb89a3e0d497aea689dc6a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NTU5Mg==", "bodyText": "Let's move !getCallbackPath(context).startsWith(\"/t/\") to a private method", "url": "https://github.com/wso2/carbon-identity-framework/pull/3025#discussion_r459855592", "createdAt": "2020-07-24T05:16:19Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/inbound/IdentityProcessor.java", "diffHunk": "@@ -100,6 +105,25 @@ public void init(InitConfig initConfig) {\n      */\n     public abstract String getCallbackPath(IdentityMessageContext context);\n \n+    /**\n+     * Get tenant qualified callback path.\n+     *\n+     * @param context IdentityMessageContext\n+     * @return Tenant qualified callback path\n+     */\n+    protected String getTenantQualifiedCallbackPath(IdentityMessageContext context) {\n+\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && !(new URI(getCallbackPath(context)).isAbsolute()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NTUzMA=="}, "originalCommit": {"oid": "3f9cf8acf71ab7497bdb89a3e0d497aea689dc6a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NjA5Ng==", "bodyText": "We need to handle a few cases here\n\n\ntenant qualified mode with absolute callback path\n\n\ntenant qualified mode with relative callback path without /t/\n\n\ntenant qualified mode with relative callback path with /t/ (already tenant qualified)\n\n\nnon-tenant qualified mode with absolute callback path\n\n\nnon-tenant qualified mode with relative callback path without /t/\n\n\nnon-tenant qualified mode with relative callback path with /t/ (already tenant qualified)\n\n\nCan we have a unit test to cover these cases?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3025#discussion_r459856096", "createdAt": "2020-07-24T05:18:56Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/inbound/IdentityProcessor.java", "diffHunk": "@@ -100,6 +105,25 @@ public void init(InitConfig initConfig) {\n      */\n     public abstract String getCallbackPath(IdentityMessageContext context);\n \n+    /**\n+     * Get tenant qualified callback path.\n+     *\n+     * @param context IdentityMessageContext\n+     * @return Tenant qualified callback path\n+     */\n+    protected String getTenantQualifiedCallbackPath(IdentityMessageContext context) {\n+\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && !(new URI(getCallbackPath(context)).isAbsolute()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NTUzMA=="}, "originalCommit": {"oid": "3f9cf8acf71ab7497bdb89a3e0d497aea689dc6a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NTI0Mg==", "bodyText": "created wso2/product-is#9070 to track this.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3025#discussion_r460375242", "createdAt": "2020-07-25T07:06:04Z", "author": {"login": "emswbandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/inbound/IdentityProcessor.java", "diffHunk": "@@ -100,6 +105,25 @@ public void init(InitConfig initConfig) {\n      */\n     public abstract String getCallbackPath(IdentityMessageContext context);\n \n+    /**\n+     * Get tenant qualified callback path.\n+     *\n+     * @param context IdentityMessageContext\n+     * @return Tenant qualified callback path\n+     */\n+    protected String getTenantQualifiedCallbackPath(IdentityMessageContext context) {\n+\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && !(new URI(getCallbackPath(context)).isAbsolute()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NTUzMA=="}, "originalCommit": {"oid": "3f9cf8acf71ab7497bdb89a3e0d497aea689dc6a"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2626, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}