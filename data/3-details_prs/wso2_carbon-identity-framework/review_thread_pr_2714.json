{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTc3MzUw", "number": 2714, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTowMDo1MlrODbmkOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNToyNDo0OVrODbnLzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjcwMDA5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserIdResolverListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTowMDo1MlrOFjLi5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNToyMjo1OVrOFjMbvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMzYzOQ==", "bodyText": "Shall we wrap this code logic to a private method similar to getUserIds() and re-use, as the logic is re-used several places? the method will return the userID list for a non-empty user list and a non-empty userID list. Otherwise, it will return an empty string array.\nAnd also, IMO empty user list equals empty userIDs. If we plan to trigger all the listeners for an empty user list, the same can be applied with an empty userID list returned for a non-empty user list. WDYT?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2714#discussion_r372433639", "createdAt": "2020-01-29T15:00:52Z", "author": {"login": "tharindu-bandara"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserIdResolverListener.java", "diffHunk": "@@ -531,7 +531,16 @@ public boolean doPreAddRole(String roleName, String[] userList, Permission[] per\n             return true;\n         }\n \n-        String[] userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+        String[] userIDs;\n+        if (ArrayUtils.isNotEmpty(userList)) {\n+            userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+\n+            if (ArrayUtils.isEmpty(userIDs)) {\n+                return true;\n+            }\n+        } else {\n+            userIDs = new String[0];\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6be8f4eebb5cd94408152c93d247c89af29513"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ0ODE4OQ==", "bodyText": "getUserIdsFromUserNames method will return an empty user list if there was an error while converting username list to user id list. In such a case, we need to return from the method. But when the userList is empty also, it will return an empty list and we don't want to return from the method. So the above approach will not work.\nThe best approach to reduce the redundant code is to throw the exception from getUserIdsFromUserNames method and handle in each method.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2714#discussion_r372448189", "createdAt": "2020-01-29T15:22:59Z", "author": {"login": "madurangasiriwardena"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserIdResolverListener.java", "diffHunk": "@@ -531,7 +531,16 @@ public boolean doPreAddRole(String roleName, String[] userList, Permission[] per\n             return true;\n         }\n \n-        String[] userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+        String[] userIDs;\n+        if (ArrayUtils.isNotEmpty(userList)) {\n+            userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+\n+            if (ArrayUtils.isEmpty(userIDs)) {\n+                return true;\n+            }\n+        } else {\n+            userIDs = new String[0];\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMzYzOQ=="}, "originalCommit": {"oid": "ef6be8f4eebb5cd94408152c93d247c89af29513"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjgwMTQyOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserIdResolverListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNToyNDo0OVrOFjMgVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNToyNDo0OVrOFjMgVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ0OTM2Nw==", "bodyText": "We need to remove this check as this will override the fix.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2714#discussion_r372449367", "createdAt": "2020-01-29T15:24:49Z", "author": {"login": "tharindu-bandara"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserIdResolverListener.java", "diffHunk": "@@ -531,7 +531,16 @@ public boolean doPreAddRole(String roleName, String[] userList, Permission[] per\n             return true;\n         }\n \n-        String[] userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+        String[] userIDs;\n+        if (ArrayUtils.isNotEmpty(userList)) {\n+            userIDs = getUserIdsFromUserNames(userList, (AbstractUserStoreManager) userStoreManager);\n+\n+            if (ArrayUtils.isEmpty(userIDs)) {\n+                return true;\n+            }\n+        } else {\n+            userIDs = new String[0];\n+        }\n \n         if (ArrayUtils.isEmpty(userIDs)) {\n             return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6be8f4eebb5cd94408152c93d247c89af29513"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2455, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}