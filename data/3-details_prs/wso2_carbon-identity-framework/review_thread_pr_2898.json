{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDY2MDkz", "number": 2898, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDozNDo1NVrOD1tWfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjo1NToyNlrOEXftuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjQ0MTU2OnYy", "diffSide": "RIGHT", "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDozNDo1NVrOGLRb2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTozMToyNVrOGLTVzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3MzE3Ng==", "bodyText": "Are we still using the previous util method as well? Can't we use the new ServiceURLBuilder hear as well?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2898#discussion_r414473176", "createdAt": "2020-04-24T10:34:55Z", "author": {"login": "ashensw"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -206,6 +206,7 @@ public IdentityProvider getResidentIdP(String tenantDomain)\n         if (StringUtils.isBlank(oauth2TokenEPUrl)) {\n             oauth2TokenEPUrl = IdentityUtil.getServerURL(IdentityConstants.OAuth.TOKEN, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa923084ec82f38fb2b661d28a868edd3245072"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4NTgxNQ==", "bodyText": "Yes. We can change these to use the ServiceURLBuilder.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2898#discussion_r414485815", "createdAt": "2020-04-24T10:57:31Z", "author": {"login": "chamathns"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -206,6 +206,7 @@ public IdentityProvider getResidentIdP(String tenantDomain)\n         if (StringUtils.isBlank(oauth2TokenEPUrl)) {\n             oauth2TokenEPUrl = IdentityUtil.getServerURL(IdentityConstants.OAuth.TOKEN, true, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3MzE3Ng=="}, "originalCommit": {"oid": "4fa923084ec82f38fb2b661d28a868edd3245072"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNDM5OA==", "bodyText": "The PR is now updated.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2898#discussion_r414504398", "createdAt": "2020-04-24T11:31:25Z", "author": {"login": "chamathns"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -206,6 +206,7 @@ public IdentityProvider getResidentIdP(String tenantDomain)\n         if (StringUtils.isBlank(oauth2TokenEPUrl)) {\n             oauth2TokenEPUrl = IdentityUtil.getServerURL(IdentityConstants.OAuth.TOKEN, true, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3MzE3Ng=="}, "originalCommit": {"oid": "4fa923084ec82f38fb2b661d28a868edd3245072"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDcyMzEyOnYy", "diffSide": "RIGHT", "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjo1NToyNlrOG_UK6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNjoyNjoyOFrOHIBm6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0Mzk0NA==", "bodyText": "Start sentence with a capital letter.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2898#discussion_r469043944", "createdAt": "2020-08-12T06:55:26Z", "author": {"login": "janakamarasena"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -2515,17 +2513,31 @@ private void validateResourceId(String resourceId, String tenantDomain) throws I\n         }\n     }\n \n-    private String resolveAbsoluteURL(String urlContext, String resolvedUrl) throws IdentityProviderManagementServerException {\n+    /**\n+     * Resolves the public service url given the default context and the url picked from the configuration based on\n+     * the 'tenant_context.enable_tenant_qualified_urls' mode set in deployment.toml.\n+     *\n+     * @param defaultUrlContext default url context path\n+     * @param urlFromConfig     url picked from the file configuration\n+     * @return absolute public url of the service if 'enable_tenant_qualified_urls' is 'true', else returns the url\n+     * from the file config\n+     * @throws IdentityProviderManagementServerException when fail to build the absolute public url", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810276eb3dc798ca5c7aeeab30144adc73fb9eb0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE3NzAwMA==", "bodyText": "Fixed with #3064.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2898#discussion_r478177000", "createdAt": "2020-08-27T06:26:28Z", "author": {"login": "chamathns"}, "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -2515,17 +2513,31 @@ private void validateResourceId(String resourceId, String tenantDomain) throws I\n         }\n     }\n \n-    private String resolveAbsoluteURL(String urlContext, String resolvedUrl) throws IdentityProviderManagementServerException {\n+    /**\n+     * Resolves the public service url given the default context and the url picked from the configuration based on\n+     * the 'tenant_context.enable_tenant_qualified_urls' mode set in deployment.toml.\n+     *\n+     * @param defaultUrlContext default url context path\n+     * @param urlFromConfig     url picked from the file configuration\n+     * @return absolute public url of the service if 'enable_tenant_qualified_urls' is 'true', else returns the url\n+     * from the file config\n+     * @throws IdentityProviderManagementServerException when fail to build the absolute public url", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0Mzk0NA=="}, "originalCommit": {"oid": "810276eb3dc798ca5c7aeeab30144adc73fb9eb0"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}