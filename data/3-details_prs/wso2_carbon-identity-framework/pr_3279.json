{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTE0OTAw", "number": 3279, "title": "Feature decouple session data layer", "bodyText": "Proposed changes in this pull request\nCurrently, the identity server user session implementation is backed by relational databases. That implementation will affect the performance in large scale implementations. This pull request contains POC to the session data is backed by Redis server. Here Both Redis and RDMS support is given.\nCode\nThe persistSessionData, getSessionContextData methods in the Session store class are modified for the change. redisEnabled variable is used to select either the Redis implementation or RDMS implementation.", "createdAt": "2020-12-04T12:50:12Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279", "merged": true, "mergeCommit": {"oid": "6e29b56b971c236f90fb46c36f4b197d8194e8f6"}, "closed": true, "closedAt": "2020-12-18T14:29:57Z", "author": {"login": "sthenusan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi1tCGgH2gAyNTMyNTE0OTAwOjZmY2MzM2E3OTBhZmI1Zjg0NjAyNTQ4ZmU3YTk1Yzg1YWY4ZmE5YmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdl9SutAFqTU1MTAyMzQzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6fcc33a790afb5f84602548fe7a95c85af8fa9ba", "author": {"user": {"login": "sthenusan", "name": "Thenusan Santhirakumar"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6fcc33a790afb5f84602548fe7a95c85af8fa9ba", "committedDate": "2020-12-04T11:04:49Z", "message": "redis-initialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzYwNTc0", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-546760574", "createdAt": "2020-12-08T05:41:12Z", "commit": {"oid": "96cf6df87416367f13d37715bab5a4e8adc3e59e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTo0MToxMlrOIBH_nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTo0MToxMlrOIBH_nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA1MDQ2MQ==", "bodyText": "Excess line", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538050461", "createdAt": "2020-12-08T05:41:12Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -488,15 +480,81 @@ public void removeExpiredOperationData() {\n \n     }\n \n-    public void persistSessionData(String key, String type, Object entry, long nanoTime, int tenantId) {\n+    public SessionContextDO getSessionContextData(String key, String type) {\n+        // Modify to get data.\n+        jedis = getJedisInstance();\n+\n         if (!enablePersist) {\n-            return;\n+            return null;\n         }\n-        Connection connection = null;\n-        try {\n-            connection = IdentityDatabaseUtil.getDBConnection();\n-        } catch (IdentityRuntimeException e) {\n-            log.error(e.getMessage(), e);\n+        if (redisEnabled) {\n+            byte[] sessionObject = jedis.get(key.getBytes());\n+            if (sessionObject != null) {\n+                HashMap hash = (HashMap) deserialize(sessionObject);\n+                String operation = (String) hash.get(OPERATION);\n+                long nanoTime = ((Long) hash.get(NANO_TIME));\n+\n+                if ((OPERATION_STORE.equals(operation))) {\n+                    Object blobObject = hash.get(BLOB_OBJ);\n+                    return new SessionContextDO(key, type, blobObject, nanoTime);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96cf6df87416367f13d37715bab5a4e8adc3e59e"}, "originalPosition": 264}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzYxNjg0", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-546761684", "createdAt": "2020-12-08T05:44:11Z", "commit": {"oid": "96cf6df87416367f13d37715bab5a4e8adc3e59e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTo0NDoxMVrOIBIDsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNTo0NDoxMVrOIBIDsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA1MTUwNw==", "bodyText": "Where are we reading this from the property file?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538051507", "createdAt": "2020-12-08T05:44:11Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,7 +198,21 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private final boolean redisEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96cf6df87416367f13d37715bab5a4e8adc3e59e"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "author": {"user": {"login": "sthenusan", "name": "Thenusan Santhirakumar"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/9bdf0991bd987d7fab38296e14ee1c4f501adb5b", "committedDate": "2020-12-08T07:23:17Z", "message": "Redis and JDBC support is added to session store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODczMjgz", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-546873283", "createdAt": "2020-12-08T08:50:03Z", "commit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDowM1rOIBN7cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDowM1rOIBN7cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzY5OQ==", "bodyText": "Let's set the default value to be false.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538147699", "createdAt": "2020-12-08T08:50:03Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODc0ODE0", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-546874814", "createdAt": "2020-12-08T08:50:47Z", "commit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDo0N1rOIBN9Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDo0N1rOIBN9Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODE2Mg==", "bodyText": "Let's use StringUtils.isNotBlank() here", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538148162", "createdAt": "2020-12-08T08:50:47Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;\n+\n     private SessionDataStore() {\n+\n         String enablePersistVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.Enable\");\n         enablePersist = true;\n         if (enablePersistVal != null) {\n             enablePersist = Boolean.parseBoolean(enablePersistVal);\n         }\n+\n+        String redisEnabledVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.RedisEnable\");\n+        if (redisEnabledVal != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODc1NzAy", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-546875702", "createdAt": "2020-12-08T08:51:14Z", "commit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MToxNFrOIBN-VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1ODowM1rOIBOQ9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODQzNw==", "bodyText": "Let's add a comprehensive log message here.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538148437", "createdAt": "2020-12-08T08:51:14Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -191,12 +198,33 @@\n         }\n     }\n \n+    private boolean enablePersist;\n+    private final String sqlInsertSTORE;\n+    private final String sqlInsertDELETE;\n+    private String sqlDeleteSTORETask;\n+    private final String sqlDeleteTempDataTask;\n+    private final String sqlDeleteDELETETask;\n+    private String sqlSelect;\n+    private String sqlDeleteExpiredDataTask;\n+    private int deleteChunkSize = DEFAULT_DELETE_LIMIT;\n+    private boolean sessionDataCleanupEnabled = true;\n+    private boolean operationDataCleanupEnabled = false;\n+    private boolean redisEnabled = true;\n+\n     private SessionDataStore() {\n+\n         String enablePersistVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.Enable\");\n         enablePersist = true;\n         if (enablePersistVal != null) {\n             enablePersist = Boolean.parseBoolean(enablePersistVal);\n         }\n+\n+        String redisEnabledVal = IdentityUtil.getProperty(\"JDBCPersistenceManager.SessionDataPersist.RedisEnable\");\n+        if (redisEnabledVal != null) {\n+            log.info(\"checking\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1MzIwNw==", "bodyText": "Can we guarantee that this new instance creation would be thread-safe?  Shall we extract this out and use the singleton pattern here? WDYT?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#discussion_r538153207", "createdAt": "2020-12-08T08:58:03Z", "author": {"login": "chamathns"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -288,70 +317,39 @@ public static SessionDataStore getInstance() {\n         return instance;\n     }\n \n+    // Return Jedis object.\n+    private static BinaryJedis getJedisInstance() {\n+\n+        if (jedis != null)\n+            return jedis;\n+        return new BinaryJedis(HOST, PORT);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bdf0991bd987d7fab38296e14ee1c4f501adb5b"}, "originalPosition": 157}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "498b41880b9caf6d0e84bfde75b99b80a30aa541", "author": {"user": {"login": "sthenusan", "name": "Thenusan Santhirakumar"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/498b41880b9caf6d0e84bfde75b99b80a30aa541", "committedDate": "2020-12-08T09:49:50Z", "message": "Redis and JDBC support is given"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDIzNDMy", "url": "https://github.com/wso2/carbon-identity-framework/pull/3279#pullrequestreview-551023432", "createdAt": "2020-12-14T03:37:06Z", "commit": {"oid": "498b41880b9caf6d0e84bfde75b99b80a30aa541"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2126, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}