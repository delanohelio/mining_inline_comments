{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTY4Njkw", "number": 2917, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNDoxMzozNFrOD42ORQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNDoxMzozNFrOD42ORQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTM1MjM3OnYy", "diffSide": "RIGHT", "path": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/java/org/wso2/carbon/identity/application/mgt/ui/ApplicationBean.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNDoxMzozNFrOGPyWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjowNToyOVrOGPzkdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNjgzNQ==", "bodyText": "we can use CollectionUtils.isNotEmpty(customInboundAuthenticatorConfigs) && CollectionUtils.isNotEmpty(inboundAuthenticationRequestConfigs) here and remove nested if", "url": "https://github.com/wso2/carbon-identity-framework/pull/2917#discussion_r419206835", "createdAt": "2020-05-04T04:13:34Z", "author": {"login": "emswbandara"}, "path": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/java/org/wso2/carbon/identity/application/mgt/ui/ApplicationBean.java", "diffHunk": "@@ -944,28 +945,32 @@ private boolean isCustomInboundAuthType(String authType) {\n     }\n \n     /**\n-     * Get all custom authenticators\n+     * Get all custom authenticators.\n      *\n      * @return Custom authenticators\n      */\n     public List<InboundAuthenticationRequestConfig> getInboundAuthenticators() {\n \n-        if (!CollectionUtils.isEmpty(inboundAuthenticationRequestConfigs)) {\n-            return inboundAuthenticationRequestConfigs;\n-        }\n-\n-        inboundAuthenticationRequestConfigs = new ArrayList<InboundAuthenticationRequestConfig>();\n-\n-        InboundAuthenticationRequestConfig[] authRequests = serviceProvider\n-                .getInboundAuthenticationConfig()\n-                .getInboundAuthenticationRequestConfigs();\n-\n-        if (authRequests != null) {\n-            for (InboundAuthenticationRequestConfig request : authRequests) {\n-                if (isCustomInboundAuthType(request.getInboundAuthType())) {\n-                    inboundAuthenticationRequestConfigs.add(request);\n+        if (customInboundAuthenticatorConfigs != null && customInboundAuthenticatorConfigs.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09f94430f55f2e70a3d438feb8c071a8bfa7997b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwOTAwNw==", "bodyText": "If we remove the nested if condition and use a &&, we have to do the CollectionUtils.isNotEmpty(customInboundAuthenticatorConfigs)  check twice.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2917#discussion_r419209007", "createdAt": "2020-05-04T04:27:39Z", "author": {"login": "mevan-karu"}, "path": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/java/org/wso2/carbon/identity/application/mgt/ui/ApplicationBean.java", "diffHunk": "@@ -944,28 +945,32 @@ private boolean isCustomInboundAuthType(String authType) {\n     }\n \n     /**\n-     * Get all custom authenticators\n+     * Get all custom authenticators.\n      *\n      * @return Custom authenticators\n      */\n     public List<InboundAuthenticationRequestConfig> getInboundAuthenticators() {\n \n-        if (!CollectionUtils.isEmpty(inboundAuthenticationRequestConfigs)) {\n-            return inboundAuthenticationRequestConfigs;\n-        }\n-\n-        inboundAuthenticationRequestConfigs = new ArrayList<InboundAuthenticationRequestConfig>();\n-\n-        InboundAuthenticationRequestConfig[] authRequests = serviceProvider\n-                .getInboundAuthenticationConfig()\n-                .getInboundAuthenticationRequestConfigs();\n-\n-        if (authRequests != null) {\n-            for (InboundAuthenticationRequestConfig request : authRequests) {\n-                if (isCustomInboundAuthType(request.getInboundAuthType())) {\n-                    inboundAuthenticationRequestConfigs.add(request);\n+        if (customInboundAuthenticatorConfigs != null && customInboundAuthenticatorConfigs.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNjgzNQ=="}, "originalCommit": {"oid": "09f94430f55f2e70a3d438feb8c071a8bfa7997b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxMjQ5Mg==", "bodyText": "where do we check CollectionUtils.isNotEmpty(customInboundAuthenticatorConfigs)  for the second time? we can remove the second check", "url": "https://github.com/wso2/carbon-identity-framework/pull/2917#discussion_r419212492", "createdAt": "2020-05-04T04:49:28Z", "author": {"login": "emswbandara"}, "path": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/java/org/wso2/carbon/identity/application/mgt/ui/ApplicationBean.java", "diffHunk": "@@ -944,28 +945,32 @@ private boolean isCustomInboundAuthType(String authType) {\n     }\n \n     /**\n-     * Get all custom authenticators\n+     * Get all custom authenticators.\n      *\n      * @return Custom authenticators\n      */\n     public List<InboundAuthenticationRequestConfig> getInboundAuthenticators() {\n \n-        if (!CollectionUtils.isEmpty(inboundAuthenticationRequestConfigs)) {\n-            return inboundAuthenticationRequestConfigs;\n-        }\n-\n-        inboundAuthenticationRequestConfigs = new ArrayList<InboundAuthenticationRequestConfig>();\n-\n-        InboundAuthenticationRequestConfig[] authRequests = serviceProvider\n-                .getInboundAuthenticationConfig()\n-                .getInboundAuthenticationRequestConfigs();\n-\n-        if (authRequests != null) {\n-            for (InboundAuthenticationRequestConfig request : authRequests) {\n-                if (isCustomInboundAuthType(request.getInboundAuthType())) {\n-                    inboundAuthenticationRequestConfigs.add(request);\n+        if (customInboundAuthenticatorConfigs != null && customInboundAuthenticatorConfigs.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNjgzNQ=="}, "originalCommit": {"oid": "09f94430f55f2e70a3d438feb8c071a8bfa7997b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNjc0Mg==", "bodyText": "If we remove the nested if, we have to check twice.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2917#discussion_r419226742", "createdAt": "2020-05-04T06:05:29Z", "author": {"login": "mevan-karu"}, "path": "components/application-mgt/org.wso2.carbon.identity.application.mgt.ui/src/main/java/org/wso2/carbon/identity/application/mgt/ui/ApplicationBean.java", "diffHunk": "@@ -944,28 +945,32 @@ private boolean isCustomInboundAuthType(String authType) {\n     }\n \n     /**\n-     * Get all custom authenticators\n+     * Get all custom authenticators.\n      *\n      * @return Custom authenticators\n      */\n     public List<InboundAuthenticationRequestConfig> getInboundAuthenticators() {\n \n-        if (!CollectionUtils.isEmpty(inboundAuthenticationRequestConfigs)) {\n-            return inboundAuthenticationRequestConfigs;\n-        }\n-\n-        inboundAuthenticationRequestConfigs = new ArrayList<InboundAuthenticationRequestConfig>();\n-\n-        InboundAuthenticationRequestConfig[] authRequests = serviceProvider\n-                .getInboundAuthenticationConfig()\n-                .getInboundAuthenticationRequestConfigs();\n-\n-        if (authRequests != null) {\n-            for (InboundAuthenticationRequestConfig request : authRequests) {\n-                if (isCustomInboundAuthType(request.getInboundAuthType())) {\n-                    inboundAuthenticationRequestConfigs.add(request);\n+        if (customInboundAuthenticatorConfigs != null && customInboundAuthenticatorConfigs.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwNjgzNQ=="}, "originalCommit": {"oid": "09f94430f55f2e70a3d438feb8c071a8bfa7997b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2352, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}