{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjI1MDk2", "number": 3027, "title": "Add config to enable deprecated APIs", "bodyText": "Proposed changes in this pull request\nThis PR will introduce a new config to enable deprecated features. To enable deprecated features, the following config need to be added to the deployment.toml file.\n[[legacy_feature]]\nid = <legacyfeature_id>\nversion = <legacyfeature_version>\nenable = true\n\nWhen should this PR be merged\nThis PR should be merged before merging wso2-extensions/identity-inbound-auth-oauth#1407", "createdAt": "2020-07-23T10:45:53Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027", "merged": true, "mergeCommit": {"oid": "40410b05e26bb91e8a18ddd75192a87f79e7af3f"}, "closed": true, "closedAt": "2020-08-06T11:54:54Z", "author": {"login": "GANGANI"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3s7PngH2gAyNDU1NjI1MDk2OjY0ZmNmZWVlMmJmNzlmMDVkZTM0NTcwNmNlMmFhMzI3ZGY4ODU5Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJbfF0gFqTQ4OTU2ODE0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/64fcfeee2bf79f05de345706ce2aa327df885978", "committedDate": "2020-07-23T10:32:27Z", "message": "Add legacy feature configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODQ1NzQ5", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-454845749", "createdAt": "2020-07-24T12:27:58Z", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoyNzo1OFrOG2teZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoyNzo1OFrOG2teZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyMTM0OA==", "bodyText": "let;s make the constructor of this class private", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r460021348", "createdAt": "2020-07-24T12:27:58Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.base/src/main/java/org/wso2/carbon/identity/base/IdentityConstants.java", "diffHunk": "@@ -513,4 +513,16 @@ private IdentityConstants() {\n         public static final String MAX_AGE = \"CORS.MaxAge\";\n         public static final String TAG_REQUESTS = \"CORS.TagRequests\";\n     }\n+\n+    /**\n+     * Contains the constants related to Legacy Feature config elements.\n+     */\n+    public static class LegacyFeatureConfigElements {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODU2MTcw", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-454856170", "createdAt": "2020-07-24T12:45:21Z", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NToyMVrOG2t-gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NToyMVrOG2t-gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyOTU3MA==", "bodyText": "shouldn't this be <LegacyFeature>", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r460029570", "createdAt": "2020-07-24T12:45:21Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "diffHunk": "@@ -374,6 +386,60 @@ private void buildCookieConfig()    {\n         }\n     }\n \n+    public void buildLegacyFeatureConfig() {\n+\n+        LegacyFeatureConfig legacyFeatureConfig;\n+        OMElement legacyFeaturesConfigElement =\n+                this.getConfigElement(IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_CONFIG);\n+        if (legacyFeaturesConfigElement != null) {\n+\n+            int legacyFeaturesConfigElementIndex = 0;\n+            Iterator<OMElement> legacyFeatures = legacyFeaturesConfigElement.\n+                    getChildrenWithName(getQNameWithIdentityNS(IdentityConstants.\n+                            LegacyFeatureConfigElements.LEGACY_FEATURE));\n+            if (legacyFeatures != null) {\n+                while (legacyFeatures.hasNext()) {\n+                    legacyFeaturesConfigElementIndex += 1;\n+                    OMElement legacyFeature = legacyFeatures.next();\n+\n+                    OMElement legacyFeatureIdElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_ID));\n+                    OMElement legacyFeatureVersionElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_VERSION));\n+                    OMElement legacyFeatureEnableElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_ENABLE));\n+\n+                    String legacyFeatureId;\n+                    String legacyFeatureVersion;\n+                    boolean isLegacyFeatureEnable = false;\n+                    if (legacyFeatureIdElement != null && legacyFeatureVersionElement != null\n+                            && legacyFeatureEnableElement != null) {\n+                        legacyFeatureId = legacyFeatureIdElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureId)) {\n+                            legacyFeatureId = legacyFeatureId.trim();\n+                        }\n+                        legacyFeatureVersion = legacyFeatureVersionElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureVersion)) {\n+                            legacyFeatureVersion = legacyFeatureVersion.trim();\n+                        }\n+                        String legacyFeatureEnable = legacyFeatureEnableElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureEnable)) {\n+                            isLegacyFeatureEnable = Boolean.parseBoolean(legacyFeatureEnable.trim());\n+                        }\n+\n+                        String legacyFeatureConfigKey = legacyFeatureId + legacyFeatureVersion;\n+                        legacyFeatureConfig = new LegacyFeatureConfig(legacyFeatureId, legacyFeatureVersion,\n+                                isLegacyFeatureEnable);\n+                        legacyFeatureConfigurationHolder.put(legacyFeatureConfigKey, legacyFeatureConfig);\n+                    } else {\n+                        log.warn(\"Configured <Feature> element at index: \" + legacyFeaturesConfigElementIndex +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODU3MzIw", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-454857320", "createdAt": "2020-07-24T12:47:08Z", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NzowOVrOG2uCCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0NzowOVrOG2uCCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMDQ3NA==", "bodyText": "add nullcheck on legacyFeatureId and legacyFeatureVersion. If Id is null, return. However feature version can be allowed to be null in the case of identity/connect/dcr. That should be handled properly", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r460030474", "createdAt": "2020-07-24T12:47:09Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java", "diffHunk": "@@ -214,11 +216,41 @@ public static IdentityCookieConfig getIdentityCookieConfig(String cookieName) {\n         return identityCookiesConfigurationHolder;\n     }\n \n+    /**\n+     * This method can use to check whether the legacy feature for the given legacy feature id is enabled or not\n+     *\n+     * @param legacyFeatureId      Legacy feature id.\n+     * @param legacyFeatureVersion Legacy feature version.\n+     * @return Whether the legacy feature is enabled or not.\n+     */\n+    public static boolean isLegacyFeatureEnabled(String legacyFeatureId, String legacyFeatureVersion) {\n+\n+        String legacyFeatureConfig = legacyFeatureId.trim() + legacyFeatureVersion.trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODU4MDI3", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-454858027", "createdAt": "2020-07-24T12:48:16Z", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0ODoxNlrOG2uEGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0ODoxNlrOG2uEGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMTAwMQ==", "bodyText": "let's log the version also", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r460031001", "createdAt": "2020-07-24T12:48:16Z", "author": {"login": "emswbandara"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java", "diffHunk": "@@ -214,11 +216,41 @@ public static IdentityCookieConfig getIdentityCookieConfig(String cookieName) {\n         return identityCookiesConfigurationHolder;\n     }\n \n+    /**\n+     * This method can use to check whether the legacy feature for the given legacy feature id is enabled or not\n+     *\n+     * @param legacyFeatureId      Legacy feature id.\n+     * @param legacyFeatureVersion Legacy feature version.\n+     * @return Whether the legacy feature is enabled or not.\n+     */\n+    public static boolean isLegacyFeatureEnabled(String legacyFeatureId, String legacyFeatureVersion) {\n+\n+        String legacyFeatureConfig = legacyFeatureId.trim() + legacyFeatureVersion.trim();\n+        if (StringUtils.isNotBlank(legacyFeatureConfig)) {\n+            LegacyFeatureConfig legacyFeatureConfiguration =\n+                    legacyFeatureConfigurationHolder.get(legacyFeatureConfig);\n+            if (legacyFeatureConfiguration != null && legacyFeatureConfiguration.isEnabled()) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Legacy feature id: \" + legacyFeatureConfiguration.getId() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODU4NzE1", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-454858715", "createdAt": "2020-07-24T12:49:27Z", "commit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0OToyN1rOG2uGOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo0OToyN1rOG2uGOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMTU0Nw==", "bodyText": "dont't we need to add the default set of features that we decided to deprecate to default.json?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r460031547", "createdAt": "2020-07-24T12:49:27Z", "author": {"login": "emswbandara"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/identity.xml.j2", "diffHunk": "@@ -2223,4 +2223,14 @@\n         <MaxAge>{{cors.max_age}}</MaxAge>\n         <TagRequests>{{cors.tag_requests}}</TagRequests>\n     </CORS>\n+\n+    <LegacyFeatures>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64fcfeee2bf79f05de345706ce2aa327df885978"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/76ad8e0307b509aefc1c7e7716756ad143850105", "committedDate": "2020-07-26T13:21:13Z", "message": "Address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjM3NDEy", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-461637412", "createdAt": "2020-08-05T12:58:20Z", "commit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDY3ODQ3", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-483067847", "createdAt": "2020-09-05T17:18:33Z", "commit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNzoxODozM1rOHNjLgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjowMDo0NFrOHQy69w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2OTkyMg==", "bodyText": "Java doc comment for a public method missing", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r483969922", "createdAt": "2020-09-05T17:18:33Z", "author": {"login": "senthalan"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "diffHunk": "@@ -374,6 +386,60 @@ private void buildCookieConfig()    {\n         }\n     }\n \n+    public void buildLegacyFeatureConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3MzU1OQ==", "bodyText": "wasn't better to add a seperater between the feature id and version.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r487373559", "createdAt": "2020-09-12T06:00:44Z", "author": {"login": "senthalan"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "diffHunk": "@@ -374,6 +386,60 @@ private void buildCookieConfig()    {\n         }\n     }\n \n+    public void buildLegacyFeatureConfig() {\n+\n+        LegacyFeatureConfig legacyFeatureConfig;\n+        OMElement legacyFeaturesConfigElement =\n+                this.getConfigElement(IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_CONFIG);\n+        if (legacyFeaturesConfigElement != null) {\n+\n+            int legacyFeaturesConfigElementIndex = 0;\n+            Iterator<OMElement> legacyFeatures = legacyFeaturesConfigElement.\n+                    getChildrenWithName(getQNameWithIdentityNS(IdentityConstants.\n+                            LegacyFeatureConfigElements.LEGACY_FEATURE));\n+            if (legacyFeatures != null) {\n+                while (legacyFeatures.hasNext()) {\n+                    legacyFeaturesConfigElementIndex += 1;\n+                    OMElement legacyFeature = legacyFeatures.next();\n+\n+                    OMElement legacyFeatureIdElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_ID));\n+                    OMElement legacyFeatureVersionElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_VERSION));\n+                    OMElement legacyFeatureEnableElement = legacyFeature.getFirstChildWithName(getQNameWithIdentityNS(\n+                            IdentityConstants.LegacyFeatureConfigElements.LEGACY_FEATURE_ENABLE));\n+\n+                    String legacyFeatureId;\n+                    String legacyFeatureVersion;\n+                    boolean isLegacyFeatureEnable = false;\n+                    if (legacyFeatureIdElement != null && legacyFeatureVersionElement != null\n+                            && legacyFeatureEnableElement != null) {\n+                        legacyFeatureId = legacyFeatureIdElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureId)) {\n+                            legacyFeatureId = legacyFeatureId.trim();\n+                        }\n+                        legacyFeatureVersion = legacyFeatureVersionElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureVersion)) {\n+                            legacyFeatureVersion = legacyFeatureVersion.trim();\n+                        }\n+                        String legacyFeatureEnable = legacyFeatureEnableElement.getText();\n+                        if (StringUtils.isNotBlank(legacyFeatureEnable)) {\n+                            isLegacyFeatureEnable = Boolean.parseBoolean(legacyFeatureEnable.trim());\n+                        }\n+\n+                        String legacyFeatureConfigKey = legacyFeatureId + legacyFeatureVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTY4MTQ0", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#pullrequestreview-489568144", "createdAt": "2020-09-16T12:23:57Z", "commit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMzo1N1rOHSuRWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMzo1N1rOHSuRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5NDUyMw==", "bodyText": "Shall we change it as:\nlog.debug(\"Legacy feature is not configured or the configured legacy feature is empty. \" +\n\"Hence returning false.\");", "url": "https://github.com/wso2/carbon-identity-framework/pull/3027#discussion_r489394523", "createdAt": "2020-09-16T12:23:57Z", "author": {"login": "dewniMW"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityUtil.java", "diffHunk": "@@ -214,11 +216,50 @@ public static IdentityCookieConfig getIdentityCookieConfig(String cookieName) {\n         return identityCookiesConfigurationHolder;\n     }\n \n+    /**\n+     * This method can use to check whether the legacy feature for the given legacy feature id is enabled or not\n+     *\n+     * @param legacyFeatureId      Legacy feature id.\n+     * @param legacyFeatureVersion Legacy feature version.\n+     * @return Whether the legacy feature is enabled or not.\n+     */\n+    public static boolean isLegacyFeatureEnabled(String legacyFeatureId, String legacyFeatureVersion) {\n+\n+        String legacyFeatureConfig;\n+        if (StringUtils.isBlank(legacyFeatureId)) {\n+            return false;\n+        }\n+        if (StringUtils.isBlank(legacyFeatureVersion)) {\n+            legacyFeatureConfig = legacyFeatureId.trim();\n+        } else {\n+            legacyFeatureConfig = legacyFeatureId.trim() + legacyFeatureVersion.trim();\n+        }\n+        if (StringUtils.isNotBlank(legacyFeatureConfig)) {\n+            LegacyFeatureConfig legacyFeatureConfiguration =\n+                    legacyFeatureConfigurationHolder.get(legacyFeatureConfig);\n+            if (legacyFeatureConfiguration != null && legacyFeatureConfiguration.isEnabled()) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Legacy feature id: \" + legacyFeatureConfiguration.getId() +\n+                            \" legacy feature version : \" + legacyFeatureConfiguration.getVersion() +\n+                            \" is enabled: \" + legacyFeatureConfiguration.isEnabled());\n+                }\n+                return legacyFeatureConfiguration.isEnabled();\n+            }\n+\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"legacy feature is not configured or the configured legacy feature is empty. \" +\n+                        \"Hence returning false \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad8e0307b509aefc1c7e7716756ad143850105"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2240, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}