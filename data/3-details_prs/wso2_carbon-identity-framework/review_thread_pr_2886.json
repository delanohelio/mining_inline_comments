{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTQ5NzA4", "number": 2886, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyMDowNlrODzz6Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMzo1MFrOD1udlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjU0NDc5OnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyMDowNlrOGIcu6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxNToxMVrOGLMBbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMjU1NA==", "bodyText": "Wouldn't it be better to log the error?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411512554", "createdAt": "2020-04-20T16:20:06Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "diffHunk": "@@ -193,5 +195,20 @@ public static String customi18n(ResourceBundle resourceBundle, String key) {\n             return i18nBase64(resourceBundle, key);\n         }\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) {\n+\n+        try {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } catch (URLBuilderException e) {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMzQ4MQ==", "bodyText": "Wouldn't it be better if we throw a wrapped exception and handle at the consuming places?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411513481", "createdAt": "2020-04-20T16:21:23Z", "author": {"login": "mefarazath"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "diffHunk": "@@ -193,5 +195,20 @@ public static String customi18n(ResourceBundle resourceBundle, String key) {\n             return i18nBase64(resourceBundle, key);\n         }\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) {\n+\n+        try {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } catch (URLBuilderException e) {\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMjU1NA=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NDQ5NQ==", "bodyText": "Updated the PR as discussed.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414384495", "createdAt": "2020-04-24T08:15:11Z", "author": {"login": "ashensw"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "diffHunk": "@@ -193,5 +195,20 @@ public static String customi18n(ResourceBundle resourceBundle, String key) {\n             return i18nBase64(resourceBundle, key);\n         }\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) {\n+\n+        try {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } catch (URLBuilderException e) {\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMjU1NA=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjU1MzM4OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyMTo1NFrOGIcz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxNjowNFrOGLMDcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMzgzOA==", "bodyText": "Can't we throw the error and handle at the places where we consume the API?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411513838", "createdAt": "2020-04-20T16:21:54Z", "author": {"login": "mefarazath"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +643,19 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) {\n+\n+        try {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } catch (URLBuilderException e) {\n+            throw new IdentityRuntimeException(\"Error while building url for context: \" + context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NTAwOQ==", "bodyText": "Updated the PR with the fix.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414385009", "createdAt": "2020-04-24T08:16:04Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +643,19 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) {\n+\n+        try {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } catch (URLBuilderException e) {\n+            throw new IdentityRuntimeException(\"Error while building url for context: \" + context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMzgzOA=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjU1NzExOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SecurityQuestionApi.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyMjo0NlrOGIc2VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxNTozOVrOGLMCkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNDQ1Mw==", "bodyText": "Can't we the buildTenantQualifiedUrl() method here too?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411514453", "createdAt": "2020-04-20T16:22:46Z", "author": {"login": "mefarazath"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SecurityQuestionApi.java", "diffHunk": "@@ -193,9 +194,12 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n             tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;\n         }\n \n-        if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n-            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain +\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n                     IdentityManagementEndpointConstants.UserInfoRecovery.RECOVERY_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3MTc0Ng==", "bodyText": "It's already used here.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411571746", "createdAt": "2020-04-20T17:47:29Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SecurityQuestionApi.java", "diffHunk": "@@ -193,9 +194,12 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n             tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;\n         }\n \n-        if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n-            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain +\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n                     IdentityManagementEndpointConstants.UserInfoRecovery.RECOVERY_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNDQ1Mw=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxNzA1MA==", "bodyText": "What if we move this base path building logic to the util as a whole. Because even the tenant qualified url there is actually not building a tenant qualified url always.\nThe whole segment here is about building the base url of the service", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411817050", "createdAt": "2020-04-21T02:13:13Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SecurityQuestionApi.java", "diffHunk": "@@ -193,9 +194,12 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n             tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;\n         }\n \n-        if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n-            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain +\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n                     IdentityManagementEndpointConstants.UserInfoRecovery.RECOVERY_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNDQ1Mw=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NDc4NQ==", "bodyText": "Updated the PR as discussed.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414384785", "createdAt": "2020-04-24T08:15:39Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SecurityQuestionApi.java", "diffHunk": "@@ -193,9 +194,12 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n             tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME;\n         }\n \n-        if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n-            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain +\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n                     IdentityManagementEndpointConstants.UserInfoRecovery.RECOVERY_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\"t/\" + tenantDomain", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNDQ1Mw=="}, "originalCommit": {"oid": "e1206ad39be6dd2b7fdc4f721496ce58bfd75539"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODU2Mjc4OnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMTo1ODozMFrOGIvBjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxNjoyNlrOGLMEeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjIzOQ==", "bodyText": "Actually this is not just building a tenant qualified url right. Based on the mode it may or not. I think we have to rename this method", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411812239", "createdAt": "2020-04-21T01:58:30Z", "author": {"login": "malithie"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "diffHunk": "@@ -193,5 +195,17 @@ public static String customi18n(ResourceBundle resourceBundle, String key) {\n             return i18nBase64(resourceBundle, key);\n         }\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     * @throws URLBuilderException URLBuilderException.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) throws URLBuilderException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NTI3NA==", "bodyText": "Renamed the method accordingly.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414385274", "createdAt": "2020-04-24T08:16:26Z", "author": {"login": "ashensw"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.endpoint.util/src/main/java/org/wso2/carbon/identity/application/authentication/endpoint/util/AuthenticationEndpointUtil.java", "diffHunk": "@@ -193,5 +195,17 @@ public static String customi18n(ResourceBundle resourceBundle, String key) {\n             return i18nBase64(resourceBundle, key);\n         }\n     }\n+\n+    /**\n+     * Build Tenant Qualified Url.\n+     *\n+     * @param context Context.\n+     * @return Tenant Qualified Url.\n+     * @throws URLBuilderException URLBuilderException.\n+     */\n+    public static String buildTenantQualifiedUrl(String context) throws URLBuilderException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjIzOQ=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODU2Nzk4OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjowMDo0NFrOGIvEhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo1OTozNlrOGLSRjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjk5Ng==", "bodyText": "At non tenated mode will this API return a tenanted URL.\nUser portal url was always tenanted I guess", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411812996", "createdAt": "2020-04-21T02:00:44Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -140,7 +141,13 @@ public static final String getUserPortalUrl(String userPortalUrl) {\n         if (StringUtils.isNotBlank(userPortalUrl)) {\n             return userPortalUrl;\n         }\n-        return IdentityUtil.getServerURL(IdentityManagementEndpointConstants.USER_PORTAL_URL, true, true);\n+        try {\n+            return ServiceURLBuilder.create().addPath(IdentityManagementEndpointConstants.USER_PORTAL_URL).build()\n+                    .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMzk4Mw==", "bodyText": "Or else has the tenant been appended some where else", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411813983", "createdAt": "2020-04-21T02:03:48Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -140,7 +141,13 @@ public static final String getUserPortalUrl(String userPortalUrl) {\n         if (StringUtils.isNotBlank(userPortalUrl)) {\n             return userPortalUrl;\n         }\n-        return IdentityUtil.getServerURL(IdentityManagementEndpointConstants.USER_PORTAL_URL, true, true);\n+        try {\n+            return ServiceURLBuilder.create().addPath(IdentityManagementEndpointConstants.USER_PORTAL_URL).build()\n+                    .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjk5Ng=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NDY2Mw==", "bodyText": "@ashensw , in legacy way when invoked from a tenant, has the user portal endpoint being tenant qualified appending tenant in path is some where else ?\nIf that's the case, that respective place will have to make sure that tenant is appended only in legacy mode right.\nBecause, the new API will tenant qualify the endpoint internally", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413564663", "createdAt": "2020-04-23T07:07:40Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -140,7 +141,13 @@ public static final String getUserPortalUrl(String userPortalUrl) {\n         if (StringUtils.isNotBlank(userPortalUrl)) {\n             return userPortalUrl;\n         }\n-        return IdentityUtil.getServerURL(IdentityManagementEndpointConstants.USER_PORTAL_URL, true, true);\n+        try {\n+            return ServiceURLBuilder.create().addPath(IdentityManagementEndpointConstants.USER_PORTAL_URL).build()\n+                    .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjk5Ng=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc0MDU1Ng==", "bodyText": "Nope. I don't see such a place that appends the tenant domain explicitly. This seems to used to get the old dashboard URL actually.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413740556", "createdAt": "2020-04-23T11:36:00Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -140,7 +141,13 @@ public static final String getUserPortalUrl(String userPortalUrl) {\n         if (StringUtils.isNotBlank(userPortalUrl)) {\n             return userPortalUrl;\n         }\n-        return IdentityUtil.getServerURL(IdentityManagementEndpointConstants.USER_PORTAL_URL, true, true);\n+        try {\n+            return ServiceURLBuilder.create().addPath(IdentityManagementEndpointConstants.USER_PORTAL_URL).build()\n+                    .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjk5Ng=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4NjkyNg==", "bodyText": "ok. but I think we should further check how user portal worked previously in tenant cases.\nShall we track this and proceed with this fix", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414486926", "createdAt": "2020-04-24T10:59:36Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -140,7 +141,13 @@ public static final String getUserPortalUrl(String userPortalUrl) {\n         if (StringUtils.isNotBlank(userPortalUrl)) {\n             return userPortalUrl;\n         }\n-        return IdentityUtil.getServerURL(IdentityManagementEndpointConstants.USER_PORTAL_URL, true, true);\n+        try {\n+            return ServiceURLBuilder.create().addPath(IdentityManagementEndpointConstants.USER_PORTAL_URL).build()\n+                    .getAbsolutePublicURL();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxMjk5Ng=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1ODYwMDQwOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/UsernameRecoveryApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMjoxNDozNFrOGIvWMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxNzozNlrOGLMHKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxNzUyMg==", "bodyText": "What is this 'isEndpointTenantAware' property is used for ?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411817522", "createdAt": "2020-04-21T02:14:34Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/UsernameRecoveryApi.java", "diffHunk": "@@ -233,4 +224,17 @@ public void recoverUsernamePost(List<UserClaim> claim, String tenantDomain, Bool\n     return apiClient.invokeAPI(localVarPath, \"GET\", localVarQueryParams, null, localVarHeaderParams, localVarFormParams,\n             localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);\n   }\n+\n+  private void setBasePath(boolean isEndpointTenantAware, String tenantDomain) {\n+\n+    if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+      basePath = IdentityManagementEndpointUtil\n+              .buildTenantQualifiedUrl(IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);\n+    } else if (isEndpointTenantAware && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NTk2MQ==", "bodyText": "It's has been used in legacy mode to defend whether the endpoint needs to be tenant qualified.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414385961", "createdAt": "2020-04-24T08:17:36Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/UsernameRecoveryApi.java", "diffHunk": "@@ -233,4 +224,17 @@ public void recoverUsernamePost(List<UserClaim> claim, String tenantDomain, Bool\n     return apiClient.invokeAPI(localVarPath, \"GET\", localVarQueryParams, null, localVarHeaderParams, localVarFormParams,\n             localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);\n   }\n+\n+  private void setBasePath(boolean isEndpointTenantAware, String tenantDomain) {\n+\n+    if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+      basePath = IdentityManagementEndpointUtil\n+              .buildTenantQualifiedUrl(IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);\n+    } else if (isEndpointTenantAware && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgxNzUyMg=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTAzNzg5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SelfRegisterApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNToyMjo0N1rOGIzA4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxOToyNVrOGLMLrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg3NzYwMg==", "bodyText": "Cant't we make  \"t/\" as a constant? Since it s been used in several places.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r411877602", "createdAt": "2020-04-21T05:22:47Z", "author": {"login": "denuwanthi"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SelfRegisterApi.java", "diffHunk": "@@ -240,4 +226,16 @@ public void validateCodePostCall(CodeValidationRequest code) throws ApiException\n         };\n         apiClient.invokeAPI(localVarPath, \"POST\", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);\n     }\n+\n+    private void setBasePath(String tenantDomain) {\n+\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n+                    IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\n+                    \"t/\" + tenantDomain + IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NzExOA==", "bodyText": "This method has been removed.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414387118", "createdAt": "2020-04-24T08:19:25Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/SelfRegisterApi.java", "diffHunk": "@@ -240,4 +226,16 @@ public void validateCodePostCall(CodeValidationRequest code) throws ApiException\n         };\n         apiClient.invokeAPI(localVarPath, \"POST\", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);\n     }\n+\n+    private void setBasePath(String tenantDomain) {\n+\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            basePath = IdentityManagementEndpointUtil.buildTenantQualifiedUrl(\n+                    IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);\n+        } else if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+            basePath = IdentityManagementEndpointUtil.buildEndpointUrl(\n+                    \"t/\" + tenantDomain + IdentityManagementEndpointConstants.UserInfoRecovery.USER_API_RELATIVE_PATH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg3NzYwMg=="}, "originalCommit": {"oid": "f997550670be2707855183e6973da2660b1de5a7"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDM2NzEyOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoxMDoyOVrOGKaElw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxODoyMFrOGLMJFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjEwMw==", "bodyText": "Rather than depending on the tenant domain passed and addressing the legacy mode, we should rely only on the configuration.\nBecause, later some might use the same method in an unintended way", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413566103", "createdAt": "2020-04-23T07:10:29Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -513,12 +522,34 @@ public static String getURLEncodedCallback(String callbackUrl) throws URISyntaxE\n         return encodedQueryMap;\n     }\n \n+    /**\n+     * Construct the server URL depending on the path and the resource name.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      context of the url.\n+     * @return endpoint url.\n+     */\n+    public static String buildServerUrl(String tenantDomain, String context) throws URLBuilderException {\n+\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURL();\n+        if (StringUtils.isBlank(serverUrl)) {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } else if (StringUtils.isBlank(tenantDomain)) {\n+            return serverUrl + context;\n+        } else {\n+            return serverUrl + \"/t/\" + tenantDomain + context;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjcyNw==", "bodyText": "May be you case pass some fields to decide whether to append tenant in legacy mode or not", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413566727", "createdAt": "2020-04-23T07:11:31Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -513,12 +522,34 @@ public static String getURLEncodedCallback(String callbackUrl) throws URISyntaxE\n         return encodedQueryMap;\n     }\n \n+    /**\n+     * Construct the server URL depending on the path and the resource name.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      context of the url.\n+     * @return endpoint url.\n+     */\n+    public static String buildServerUrl(String tenantDomain, String context) throws URLBuilderException {\n+\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURL();\n+        if (StringUtils.isBlank(serverUrl)) {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } else if (StringUtils.isBlank(tenantDomain)) {\n+            return serverUrl + context;\n+        } else {\n+            return serverUrl + \"/t/\" + tenantDomain + context;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjEwMw=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NTYxNA==", "bodyText": "From the way this API is being utilized below, seems it is used to build the url at non tenanted mode.\nI don't think we should make this public.\nUnless we can handle this from one public API let's rename this method to denote the case that this is to be invoked at non tenanted mode.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413575614", "createdAt": "2020-04-23T07:26:37Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -513,12 +522,34 @@ public static String getURLEncodedCallback(String callbackUrl) throws URISyntaxE\n         return encodedQueryMap;\n     }\n \n+    /**\n+     * Construct the server URL depending on the path and the resource name.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      context of the url.\n+     * @return endpoint url.\n+     */\n+    public static String buildServerUrl(String tenantDomain, String context) throws URLBuilderException {\n+\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURL();\n+        if (StringUtils.isBlank(serverUrl)) {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } else if (StringUtils.isBlank(tenantDomain)) {\n+            return serverUrl + context;\n+        } else {\n+            return serverUrl + \"/t/\" + tenantDomain + context;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjEwMw=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NjQ1Mg==", "bodyText": "Changed the method as discussed.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414386452", "createdAt": "2020-04-24T08:18:20Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -513,12 +522,34 @@ public static String getURLEncodedCallback(String callbackUrl) throws URISyntaxE\n         return encodedQueryMap;\n     }\n \n+    /**\n+     * Construct the server URL depending on the path and the resource name.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      context of the url.\n+     * @return endpoint url.\n+     */\n+    public static String buildServerUrl(String tenantDomain, String context) throws URLBuilderException {\n+\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURL();\n+        if (StringUtils.isBlank(serverUrl)) {\n+            return ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+        } else if (StringUtils.isBlank(tenantDomain)) {\n+            return serverUrl + context;\n+        } else {\n+            return serverUrl + \"/t/\" + tenantDomain + context;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjEwMw=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDM4NjkxOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoxNTo1MlrOGKaQig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxODo0NFrOGLMKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2OTE2Mg==", "bodyText": "We are calling an internal method any way right. No need of using 'IdentityManagementEndpointUtil'", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413569162", "createdAt": "2020-04-23T07:15:52Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +664,57 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      URL context.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context) throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NjcyMQ==", "bodyText": "Yes. Updated the PR accordingly.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414386721", "createdAt": "2020-04-24T08:18:44Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +664,57 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      URL context.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context) throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2OTE2Mg=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDM4ODEwOnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoxNjowNlrOGKaRPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoxODo1M1rOGLMKgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2OTM0MA==", "bodyText": "Same above applies here", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413569340", "createdAt": "2020-04-23T07:16:06Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +664,57 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      URL context.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context) throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);\n+                }\n+            }\n+        } catch (URLBuilderException e) {\n+            throw new ApiException(\"Error while building url for context: \" + context);\n+        }\n+        return basePath;\n+    }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain          tenant Domain.\n+     * @param context               URL context.\n+     * @param isEndpointTenantAware whether the endpoint is tenant aware.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context, boolean isEndpointTenantAware)\n+            throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (isEndpointTenantAware && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n+                        .equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4NjgxNw==", "bodyText": "Yes. Updated the PR accordingly.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414386817", "createdAt": "2020-04-24T08:18:53Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -641,4 +664,57 @@ public static void setOptions(ServiceClient client, String accessUsername, Strin\n \n         IdentityManagementServiceUtil.setAutheticationOptions(client, accessUsername, accessPassword);\n     }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain tenant Domain.\n+     * @param context      URL context.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context) throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (!MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);\n+                }\n+            }\n+        } catch (URLBuilderException e) {\n+            throw new ApiException(\"Error while building url for context: \" + context);\n+        }\n+        return basePath;\n+    }\n+\n+    /**\n+     * Get base path URL for API clients.\n+     *\n+     * @param tenantDomain          tenant Domain.\n+     * @param context               URL context.\n+     * @param isEndpointTenantAware whether the endpoint is tenant aware.\n+     * @return base path.\n+     * @throws ApiException ApiException.\n+     */\n+    public static String getBasePath(String tenantDomain, String context, boolean isEndpointTenantAware)\n+            throws ApiException {\n+\n+        String basePath = null;\n+        try {\n+            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n+            } else {\n+                if (isEndpointTenantAware && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n+                        .equalsIgnoreCase(tenantDomain)) {\n+                    basePath = IdentityManagementEndpointUtil.buildServerUrl(tenantDomain, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2OTM0MA=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDQyMDIxOnYy", "diffSide": "RIGHT", "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/org.wso2.carbon.identity.core.server.feature.default.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzoyNDoyNFrOGKakUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyNzowNFrOGLTMqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NDIyNA==", "bodyText": "what's the reason to put .* here", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413574224", "createdAt": "2020-04-23T07:24:24Z", "author": {"login": "malithie"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/org.wso2.carbon.identity.core.server.feature.default.json", "diffHunk": "@@ -276,7 +276,7 @@\n   \"identity_mgt.user_self_registration.lock_on_creation\": true,\n   \"identity_mgt.user_self_registration.enable_recaptcha\": true,\n   \"identity_mgt.user_self_registration.verification_email_validity\": \"$ref{identity_mgt.default_mail_validity_period}\",\n-  \"identity_mgt.user_self_registration.callback_url\": \"${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/login.do\",\n+  \"identity_mgt.user_self_registration.callback_url\": \".*\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5NzQ1Nw==", "bodyText": "Otherwise, the callback URL validation will fail in the tenant qualified mode in the self sign up flow. So we allow anything OOTB. But if someone needs to increase security in a production setup they can define a relevant regex pattern that matches their callback URLs.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r413597457", "createdAt": "2020-04-23T07:59:32Z", "author": {"login": "ashensw"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/org.wso2.carbon.identity.core.server.feature.default.json", "diffHunk": "@@ -276,7 +276,7 @@\n   \"identity_mgt.user_self_registration.lock_on_creation\": true,\n   \"identity_mgt.user_self_registration.enable_recaptcha\": true,\n   \"identity_mgt.user_self_registration.verification_email_validity\": \"$ref{identity_mgt.default_mail_validity_period}\",\n-  \"identity_mgt.user_self_registration.callback_url\": \"${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/login.do\",\n+  \"identity_mgt.user_self_registration.callback_url\": \".*\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NDIyNA=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMjA1OA==", "bodyText": "mmm we should match this with default url pattern", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414502058", "createdAt": "2020-04-24T11:27:04Z", "author": {"login": "malithie"}, "path": "features/identity-core/org.wso2.carbon.identity.core.server.feature/resources/org.wso2.carbon.identity.core.server.feature.default.json", "diffHunk": "@@ -276,7 +276,7 @@\n   \"identity_mgt.user_self_registration.lock_on_creation\": true,\n   \"identity_mgt.user_self_registration.enable_recaptcha\": true,\n   \"identity_mgt.user_self_registration.verification_email_validity\": \"$ref{identity_mgt.default_mail_validity_period}\",\n-  \"identity_mgt.user_self_registration.callback_url\": \"${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/login.do\",\n+  \"identity_mgt.user_self_registration.callback_url\": \".*\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU3NDIyNA=="}, "originalCommit": {"oid": "9b61a7af6412b27e211e0dcd0bf35463e488b088"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjU1MDg5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementServiceUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTowNDozM1rOGLSb1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTowNzowMlrOGLShKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4OTU1OA==", "bodyText": "Is this kept for the legacy behavior", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414489558", "createdAt": "2020-04-24T11:04:33Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementServiceUtil.java", "diffHunk": "@@ -123,6 +124,7 @@ public void init() {\n                     .APP_PASSWORD).toCharArray();\n             String serviceContextURL = properties\n                     .getProperty(IdentityManagementEndpointConstants.ServiceConfigConstants.SERVICE_CONTEXT_URL);\n+            contextURL = serviceContextURL;\n             this.serviceContextURL = StringUtils.isBlank(serviceContextURL) ? IdentityUtil.getServerURL(\n                     IdentityUtil.getServicePath(), true, true) : serviceContextURL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70741561b83a981ba9cc5641a791f0a4a2619158"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5MDkyMg==", "bodyText": "Yes. This is only used by the deprecated util method.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414490922", "createdAt": "2020-04-24T11:07:02Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementServiceUtil.java", "diffHunk": "@@ -123,6 +124,7 @@ public void init() {\n                     .APP_PASSWORD).toCharArray();\n             String serviceContextURL = properties\n                     .getProperty(IdentityManagementEndpointConstants.ServiceConfigConstants.SERVICE_CONTEXT_URL);\n+            contextURL = serviceContextURL;\n             this.serviceContextURL = StringUtils.isBlank(serviceContextURL) ? IdentityUtil.getServerURL(\n                     IdentityUtil.getServicePath(), true, true) : serviceContextURL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4OTU1OA=="}, "originalCommit": {"oid": "70741561b83a981ba9cc5641a791f0a4a2619158"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjYyMzU5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/PasswordRecoveryApi.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMzo1MFrOGLTFnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTozNToyMlrOGLTebQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDI1Mg==", "bodyText": "Not used ?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414500252", "createdAt": "2020-04-24T11:23:50Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/PasswordRecoveryApi.java", "diffHunk": "@@ -245,6 +235,7 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n      * @param resetPasswordRequest key, password and optional metadata properties (required)\n      * @throws ApiException if fails to make API call\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70741561b83a981ba9cc5641a791f0a4a2619158"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNTIwOA==", "bodyText": "No. I checked in the accountrecoveryendpoint. This API has been used as an alternative. \n  \n    \n      carbon-identity-framework/components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/NotificationApi.java\n    \n    \n         Line 208\n      in\n      7074156\n    \n    \n    \n    \n\n        \n          \n           public void setPasswordPost(ResetPasswordRequest resetPasswordRequest) throws ApiException {", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414505208", "createdAt": "2020-04-24T11:32:56Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/PasswordRecoveryApi.java", "diffHunk": "@@ -245,6 +235,7 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n      * @param resetPasswordRequest key, password and optional metadata properties (required)\n      * @throws ApiException if fails to make API call\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDI1Mg=="}, "originalCommit": {"oid": "70741561b83a981ba9cc5641a791f0a4a2619158"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNjYwNQ==", "bodyText": "https://github.com/wso2/identity-apps/blob/8de1bc2d7e21694046b863e91a66b80ee61bdcb6/apps/recovery-portal/src/main/webapp/password-reset-complete.jsp#L84", "url": "https://github.com/wso2/carbon-identity-framework/pull/2886#discussion_r414506605", "createdAt": "2020-04-24T11:35:22Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/api/PasswordRecoveryApi.java", "diffHunk": "@@ -245,6 +235,7 @@ public InitiateAllQuestionResponse securityQuestionsGet(String username, String\n      * @param resetPasswordRequest key, password and optional metadata properties (required)\n      * @throws ApiException if fails to make API call\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDI1Mg=="}, "originalCommit": {"oid": "70741561b83a981ba9cc5641a791f0a4a2619158"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2320, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}