{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDk0ODU2", "number": 2854, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDozOTowNlrODuUqEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzoxM1rODubIQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODk5NTM3OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/UserStoreConfigServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDozOTowNlrOGAQB0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDozOTowNlrOGAQB0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxNTc5Mw==", "bodyText": "getAllowedUserstors - Typo", "url": "https://github.com/wso2/carbon-identity-framework/pull/2854#discussion_r402915793", "createdAt": "2020-04-03T10:39:06Z", "author": {"login": "thanujalk"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/UserStoreConfigServiceImpl.java", "diffHunk": "@@ -249,7 +249,18 @@ public UserStoreDTO getUserStore(String domain) throws IdentityUserStoreMgtExcep\n     @Override\n     public Set<String> getAvailableUserStoreClasses() throws IdentityUserStoreMgtException {\n \n-        return UserStoreManagerRegistry.getUserStoreManagerClasses();\n+        return getAllowedUserstoreClasses(UserStoreManagerRegistry.getUserStoreManagerClasses());\n+    }\n+\n+    private Set<String> getAllowedUserstoreClasses(Set<String> userstores) {\n+\n+        Set<String> allowedUserstores = UserStoreConfigListenersHolder.getInstance().getAllowedUserstors();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc22d4f4514a685fc0ba36de7245b3d534499d7d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTAwMDM4OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0MDozOVrOGAQEvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0MDozOVrOGAQEvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxNjU0MA==", "bodyText": "Shall we introduce a constant for \"AllowedUserstores\"", "url": "https://github.com/wso2/carbon-identity-framework/pull/2854#discussion_r402916540", "createdAt": "2020-04-03T10:40:39Z", "author": {"login": "thanujalk"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigComponent.java", "diffHunk": "@@ -219,4 +227,36 @@ protected void unsetUserStoreConfigListenerService(UserStoreConfigListener userS\n \n         UserStoreConfigListenersHolder.getInstance().unsetUserStoreConfigListenerService(userStoreConfigListener);\n     }\n+\n+    private void readAllowedUserstoreConfiguration() {\n+\n+        IdentityConfigParser configParser = IdentityConfigParser.getInstance();\n+        // Read allowed userstore configurations.\n+        OMElement userstoresConfig = configParser.getConfigElement(\"AllowedUserstores\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc22d4f4514a685fc0ba36de7245b3d534499d7d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTAwMjc4OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0MToyM1rOGAQGIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0MToyM1rOGAQGIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxNjg5OQ==", "bodyText": "can use ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2854#discussion_r402916899", "createdAt": "2020-04-03T10:41:23Z", "author": {"login": "thanujalk"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigComponent.java", "diffHunk": "@@ -219,4 +227,36 @@ protected void unsetUserStoreConfigListenerService(UserStoreConfigListener userS\n \n         UserStoreConfigListenersHolder.getInstance().unsetUserStoreConfigListenerService(userStoreConfigListener);\n     }\n+\n+    private void readAllowedUserstoreConfiguration() {\n+\n+        IdentityConfigParser configParser = IdentityConfigParser.getInstance();\n+        // Read allowed userstore configurations.\n+        OMElement userstoresConfig = configParser.getConfigElement(\"AllowedUserstores\");\n+        if (userstoresConfig == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"'AllowedUserstores' config not found.\");\n+            }\n+            return;\n+        }\n+        Set<String> allowedUserstores = new HashSet<>();\n+        Iterator userstoreItr = userstoresConfig.getChildrenWithLocalName(\"AllowedUserstore\");\n+        int allowedUserstoreCount = 0;\n+        if (userstoreItr != null) {\n+            while (userstoreItr.hasNext()) {\n+                OMElement userstoreConfig = (OMElement) userstoreItr.next();\n+                String allowedUserstore = userstoreConfig.getText();\n+                if (StringUtils.isNotBlank(allowedUserstore)) {\n+                    allowedUserstores.add(allowedUserstore);\n+                    allowedUserstoreCount++;\n+                }\n+            }\n+        }\n+        if (!(allowedUserstoreCount > 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc22d4f4514a685fc0ba36de7245b3d534499d7d"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTAwNzE0OnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigListenersHolder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0Mjo1MlrOGAQIzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDo0Mjo1MlrOGAQIzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxNzU4Mg==", "bodyText": "Typo", "url": "https://github.com/wso2/carbon-identity-framework/pull/2854#discussion_r402917582", "createdAt": "2020-04-03T10:42:52Z", "author": {"login": "thanujalk"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/src/main/java/org/wso2/carbon/identity/user/store/configuration/internal/UserStoreConfigListenersHolder.java", "diffHunk": "@@ -69,4 +71,14 @@ public UserStoreConfigService getUserStoreConfigService() {\n         return userStoreConfigService;\n     }\n \n+    public Set<String> getAllowedUserstors() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc22d4f4514a685fc0ba36de7245b3d534499d7d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA1NTcwOnYy", "diffSide": "RIGHT", "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzoxM1rOGAaPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzoxM1rOGAaPFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MzAyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        org.apache.axiom.om\n          \n          \n            \n                                        org.apache.axiom.om; version=\"${axiom.osgi.version.range}\"\n          \n      \n    \n    \n  \n\nAdd the version range for the package import.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2854#discussion_r403083028", "createdAt": "2020-04-03T15:23:13Z", "author": {"login": "deshankoswatte"}, "path": "components/user-store/org.wso2.carbon.identity.user.store.configuration/pom.xml", "diffHunk": "@@ -122,7 +122,8 @@\n                             org.wso2.carbon.utils; version=\"${carbon.kernel.package.import.version.range}\",\n                             org.wso2.carbon.identity.base; version=\"${carbon.identity.package.import.version.range}\",\n                             org.wso2.carbon.identity.core.*; version=\"${carbon.identity.package.import.version.range}\",\n-                            org.osgi.framework; version=\"${osgi.framework.imp.pkg.version.range}\"\n+                            org.osgi.framework; version=\"${osgi.framework.imp.pkg.version.range}\",\n+                            org.apache.axiom.om", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d15751eb43e54af38d2317f726fc1290234626e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2284, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}