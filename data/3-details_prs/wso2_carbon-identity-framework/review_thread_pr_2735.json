{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTIwNTMx", "number": 2735, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozNzoyOFrODedItA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozODo1OVrODedLBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjYxMjM2OnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozNzoyOFrOFnmRIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0OToxM1rOFnmq7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2NTc2Mg==", "bodyText": "Formatting issue", "url": "https://github.com/wso2/carbon-identity-framework/pull/2735#discussion_r377065762", "createdAt": "2020-02-10T13:37:28Z", "author": {"login": "madurangasiriwardena"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -445,26 +443,26 @@ private void removeExpiredSessionData(String sqlQuery) {\n             boolean deleteCompleted = false;\n             int totalDeletedEntries = 0;\n             while (!deleteCompleted) {\n-                statement = connection.prepareStatement(sqlQuery);\n-                statement.setLong(1, currentTime);\n-\n-                int noOfDeletedRecords = statement.executeUpdate();\n-                deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n-                totalDeletedEntries += noOfDeletedRecords;\n-                if (log.isDebugEnabled()) {\n-                    log.debug(String.format(\"Removed %d expired session records.\",\n-                            noOfDeletedRecords));\n+                try (PreparedStatement statement = connection.prepareStatement(sqlQuery)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238d308f8dbbb24e9a156e842915d3d24420c8f8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MjM2Ng==", "bodyText": "Fixed in a5f2647.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2735#discussion_r377072366", "createdAt": "2020-02-10T13:49:13Z", "author": {"login": "tharindu-bandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -445,26 +443,26 @@ private void removeExpiredSessionData(String sqlQuery) {\n             boolean deleteCompleted = false;\n             int totalDeletedEntries = 0;\n             while (!deleteCompleted) {\n-                statement = connection.prepareStatement(sqlQuery);\n-                statement.setLong(1, currentTime);\n-\n-                int noOfDeletedRecords = statement.executeUpdate();\n-                deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n-                totalDeletedEntries += noOfDeletedRecords;\n-                if (log.isDebugEnabled()) {\n-                    log.debug(String.format(\"Removed %d expired session records.\",\n-                            noOfDeletedRecords));\n+                try (PreparedStatement statement = connection.prepareStatement(sqlQuery)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2NTc2Mg=="}, "originalCommit": {"oid": "238d308f8dbbb24e9a156e842915d3d24420c8f8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjYxODMwOnYy", "diffSide": "RIGHT", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozODo1OVrOFnmUdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0OToyOFrOFnmrfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2NjYxMw==", "bodyText": "Let's remove the finally block and enclose the connection in a try with resource block.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2735#discussion_r377066613", "createdAt": "2020-02-10T13:38:59Z", "author": {"login": "madurangasiriwardena"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -445,26 +443,26 @@ private void removeExpiredSessionData(String sqlQuery) {\n             boolean deleteCompleted = false;\n             int totalDeletedEntries = 0;\n             while (!deleteCompleted) {\n-                statement = connection.prepareStatement(sqlQuery);\n-                statement.setLong(1, currentTime);\n-\n-                int noOfDeletedRecords = statement.executeUpdate();\n-                deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n-                totalDeletedEntries += noOfDeletedRecords;\n-                if (log.isDebugEnabled()) {\n-                    log.debug(String.format(\"Removed %d expired session records.\",\n-                            noOfDeletedRecords));\n+                try (PreparedStatement statement = connection.prepareStatement(sqlQuery)){\n+                    statement.setLong(1, currentTime);\n+                    int noOfDeletedRecords = statement.executeUpdate();\n+                    deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n+                    totalDeletedEntries += noOfDeletedRecords;\n+                    // Commit the chunk deletion.\n+                    IdentityDatabaseUtil.commitTransaction(connection);\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(String.format(\"Removed %d expired session records.\", noOfDeletedRecords));\n+                    }\n                 }\n-                IdentityDatabaseUtil.rollbackTransaction(connection);\n             }\n             if (log.isDebugEnabled()) {\n-                log.debug(String.format(\"Deleted total of %d entries \", totalDeletedEntries));\n+                log.debug(String.format(\"Deleted total of %d entries\", totalDeletedEntries));\n             }\n         } catch (SQLException e) {\n             IdentityDatabaseUtil.rollbackTransaction(connection);\n-            log.error(\"Error while removing session data from the database for nano time \" + currentTime, e);\n+            log.error(\"Error while removing session data from the database for nano time: \" + currentTime, e);\n         } finally {\n-            IdentityDatabaseUtil.closeAllConnections(connection, null, statement);\n+            IdentityDatabaseUtil.closeAllConnections(connection, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238d308f8dbbb24e9a156e842915d3d24420c8f8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MjUwOQ==", "bodyText": "Fixed in a5f2647.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2735#discussion_r377072509", "createdAt": "2020-02-10T13:49:28Z", "author": {"login": "tharindu-bandara"}, "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/SessionDataStore.java", "diffHunk": "@@ -445,26 +443,26 @@ private void removeExpiredSessionData(String sqlQuery) {\n             boolean deleteCompleted = false;\n             int totalDeletedEntries = 0;\n             while (!deleteCompleted) {\n-                statement = connection.prepareStatement(sqlQuery);\n-                statement.setLong(1, currentTime);\n-\n-                int noOfDeletedRecords = statement.executeUpdate();\n-                deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n-                totalDeletedEntries += noOfDeletedRecords;\n-                if (log.isDebugEnabled()) {\n-                    log.debug(String.format(\"Removed %d expired session records.\",\n-                            noOfDeletedRecords));\n+                try (PreparedStatement statement = connection.prepareStatement(sqlQuery)){\n+                    statement.setLong(1, currentTime);\n+                    int noOfDeletedRecords = statement.executeUpdate();\n+                    deleteCompleted = noOfDeletedRecords < deleteChunkSize;\n+                    totalDeletedEntries += noOfDeletedRecords;\n+                    // Commit the chunk deletion.\n+                    IdentityDatabaseUtil.commitTransaction(connection);\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(String.format(\"Removed %d expired session records.\", noOfDeletedRecords));\n+                    }\n                 }\n-                IdentityDatabaseUtil.rollbackTransaction(connection);\n             }\n             if (log.isDebugEnabled()) {\n-                log.debug(String.format(\"Deleted total of %d entries \", totalDeletedEntries));\n+                log.debug(String.format(\"Deleted total of %d entries\", totalDeletedEntries));\n             }\n         } catch (SQLException e) {\n             IdentityDatabaseUtil.rollbackTransaction(connection);\n-            log.error(\"Error while removing session data from the database for nano time \" + currentTime, e);\n+            log.error(\"Error while removing session data from the database for nano time: \" + currentTime, e);\n         } finally {\n-            IdentityDatabaseUtil.closeAllConnections(connection, null, statement);\n+            IdentityDatabaseUtil.closeAllConnections(connection, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2NjYxMw=="}, "originalCommit": {"oid": "238d308f8dbbb24e9a156e842915d3d24420c8f8"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2381, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}