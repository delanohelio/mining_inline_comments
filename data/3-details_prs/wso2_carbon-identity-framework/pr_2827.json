{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjQxMDg2", "number": 2827, "title": "Modify Template Manager to use Configuration Store", "bodyText": "Proposed changes in this pull request\nThis PR modifies the template model under the template-mgt component. This also introduces a few new services to the TemplateManager Interface", "createdAt": "2020-03-16T13:38:08Z", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827", "merged": true, "mergeCommit": {"oid": "f2566f19a72f8dc23e06c7439b94551596e79556"}, "closed": true, "closedAt": "2020-03-26T04:26:46Z", "author": {"login": "pamodaaw"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOPk7aAFqTM3NTMwOTc1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRTuWWgFqTM4MTY4MzI5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzA5NzU4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-375309758", "createdAt": "2020-03-16T15:09:56Z", "commit": {"oid": "b76e83066645585cb29eb3e870284e9a9f259310"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTowOTo1NlrOF24tyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTowOTo1NlrOF24tyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NjY0OQ==", "bodyText": "@thanujalk do we need filtering/sorting for the templates?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r393096649", "createdAt": "2020-03-16T15:09:56Z", "author": {"login": "emswbandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManager.java", "diffHunk": "@@ -77,4 +77,51 @@\n      */\n     List<TemplateInfo> listTemplates(Integer limit, Integer offset) throws TemplateManagementException;\n \n+    /**\n+     * Return the template given the template id.\n+     *\n+     * @param templateId unique identifier of the template.\n+     * @return template.\n+     * @throws TemplateManagementException if an error occurs while retrieving the template.\n+     */\n+    default Template getTemplateById(String templateId) throws TemplateManagementException {\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Update a template given the template id by replacing the existing template object.\n+     *\n+     * @param templateId unique identifier of the the template.\n+     * @param template   updated template object.\n+     * @throws TemplateManagementException if an error occurs while updating the template.\n+     */\n+    default void updateTemplateById(String templateId, Template template) throws TemplateManagementException {\n+\n+    }\n+\n+    /**\n+     * Delete a template given the template id.\n+     *\n+     * @param templateId unique identifier of the template.\n+     * @throws TemplateManagementException if an error occurs while deleting the template.\n+     */\n+    default void deleteTemplateById(String templateId) throws TemplateManagementException {\n+\n+    }\n+\n+    /**\n+     * List all the templates of a given type.\n+     *\n+     * @param templateType template type\n+     * @param limit number of templates required for the list.\n+     * @param offset offset of the list of templates.\n+     * @return list templates\n+     * @throws TemplateManagementException if an error occurs while retrieving the templates.\n+     */\n+    default List<Template> listTemplates(String templateType, Integer limit, Integer offset) throws", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76e83066645585cb29eb3e870284e9a9f259310"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76e83066645585cb29eb3e870284e9a9f259310", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/b76e83066645585cb29eb3e870284e9a9f259310", "committedDate": "2020-03-16T13:32:45Z", "message": "Update the template model and interface"}, "afterCommit": {"oid": "6f4f5d3302b526555bbba282af91f7ded4423678", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6f4f5d3302b526555bbba282af91f7ded4423678", "committedDate": "2020-03-17T06:44:36Z", "message": "Update the template model and interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f4f5d3302b526555bbba282af91f7ded4423678", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/6f4f5d3302b526555bbba282af91f7ded4423678", "committedDate": "2020-03-17T06:44:36Z", "message": "Update the template model and interface"}, "afterCommit": {"oid": "8126406deade50e76d9dcccaaa079568607bf19b", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8126406deade50e76d9dcccaaa079568607bf19b", "committedDate": "2020-03-19T09:10:22Z", "message": "Update template-mgt test cases to run with TemplateManagerDAO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf487a94ec656f70dcacc651d6508ca877b1bef", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/baf487a94ec656f70dcacc651d6508ca877b1bef", "committedDate": "2020-03-19T10:32:53Z", "message": "Add methods to retrieve and delete resources by id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47e97802bcb8c43744902bd3eac9bd921f1be8c4", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/47e97802bcb8c43744902bd3eac9bd921f1be8c4", "committedDate": "2020-03-19T10:33:12Z", "message": "Remove template-mgt dependency from authentication-framework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16708b43628695e58d57fd5569fb70e44d3c395e", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/16708b43628695e58d57fd5569fb70e44d3c395e", "committedDate": "2020-03-19T10:34:08Z", "message": "Add template management service with config-store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6202957389d95f5983b9c20215a132143ec2ff", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/2b6202957389d95f5983b9c20215a132143ec2ff", "committedDate": "2020-03-19T10:34:32Z", "message": "Update template-mgt test cases to run with TemplateManagerDAO"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8126406deade50e76d9dcccaaa079568607bf19b", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8126406deade50e76d9dcccaaa079568607bf19b", "committedDate": "2020-03-19T09:10:22Z", "message": "Update template-mgt test cases to run with TemplateManagerDAO"}, "afterCommit": {"oid": "abe5e7eefa4d5d9543b1a3017b5a4b25054fe612", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/abe5e7eefa4d5d9543b1a3017b5a4b25054fe612", "committedDate": "2020-03-19T13:14:47Z", "message": "Refactor the code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abe5e7eefa4d5d9543b1a3017b5a4b25054fe612", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/abe5e7eefa4d5d9543b1a3017b5a4b25054fe612", "committedDate": "2020-03-19T13:14:47Z", "message": "Refactor the code"}, "afterCommit": {"oid": "e68268fd7e879fc3f59e3d245cac51b7acc0d5bd", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/e68268fd7e879fc3f59e3d245cac51b7acc0d5bd", "committedDate": "2020-03-19T13:20:53Z", "message": "Refactor the code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e68268fd7e879fc3f59e3d245cac51b7acc0d5bd", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/e68268fd7e879fc3f59e3d245cac51b7acc0d5bd", "committedDate": "2020-03-19T13:20:53Z", "message": "Refactor the code"}, "afterCommit": {"oid": "7ae7bec2162fdcf95712228110b209b1ec017dc5", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/7ae7bec2162fdcf95712228110b209b1ec017dc5", "committedDate": "2020-03-19T13:25:46Z", "message": "Refactor the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538235e8d09048212b4d79fad0dda527c1f651c9", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/538235e8d09048212b4d79fad0dda527c1f651c9", "committedDate": "2020-03-19T20:07:13Z", "message": "Refactor the code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ae7bec2162fdcf95712228110b209b1ec017dc5", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/7ae7bec2162fdcf95712228110b209b1ec017dc5", "committedDate": "2020-03-19T13:25:46Z", "message": "Refactor the code"}, "afterCommit": {"oid": "538235e8d09048212b4d79fad0dda527c1f651c9", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/538235e8d09048212b4d79fad0dda527c1f651c9", "committedDate": "2020-03-19T20:07:13Z", "message": "Refactor the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68664b1c7bb03dfd736271ca227ec13fa00afc03", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/68664b1c7bb03dfd736271ca227ec13fa00afc03", "committedDate": "2020-03-20T02:39:03Z", "message": "Improve exception handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/7340dab3d80b07c80718a7aebd275dc7798abbc5", "committedDate": "2020-03-22T18:27:10Z", "message": "Add template update possibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQxNjUz", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379141653", "createdAt": "2020-03-23T05:31:00Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTozMTowMFrOF53YZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTozMTowMFrOF53YZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMDUxNw==", "bodyText": "Shall we throw the NotImplementedException in Apache commons library?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396220517", "createdAt": "2020-03-23T05:31:00Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/ConfigurationManager.java", "diffHunk": "@@ -252,4 +252,34 @@ InputStream getFileById(String resourceType, String resourceName, String fileId)\n     void deleteFileById(String resourceType, String resourceName, String fileId)\n             throws ConfigurationManagementException;\n \n+    /**\n+     * This function is used to get a resource by the resource id.\n+     *\n+     * @param resourceId Id representing the resource.\n+     * @throws ConfigurationManagementException Configuration management exception.\n+     */\n+    default Resource getTenantResourceById(String resourceId) throws ConfigurationManagementException {\n+\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQyMTQy", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379142142", "createdAt": "2020-03-23T05:32:53Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTozMjo1M1rOF53aEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTozMjo1M1rOF53aEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMDk0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                default void replaceResourceAndFiles(Resource resource) throws ConfigurationManagementException {\n          \n          \n            \n                default void replaceResourceWithFiles(Resource resource) throws ConfigurationManagementException {", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396220944", "createdAt": "2020-03-23T05:32:53Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/ConfigurationManager.java", "diffHunk": "@@ -252,4 +252,34 @@ InputStream getFileById(String resourceType, String resourceName, String fileId)\n     void deleteFileById(String resourceType, String resourceName, String fileId)\n             throws ConfigurationManagementException;\n \n+    /**\n+     * This function is used to get a resource by the resource id.\n+     *\n+     * @param resourceId Id representing the resource.\n+     * @throws ConfigurationManagementException Configuration management exception.\n+     */\n+    default Resource getTenantResourceById(String resourceId) throws ConfigurationManagementException {\n+\n+        return null;\n+    }\n+\n+    /**\n+     * This function is used to delete the given resource id.\n+     *\n+     * @param resourceId Request to delete the {@link Resource}.\n+     * @throws ConfigurationManagementException Configuration management exception.\n+     */\n+    default void deleteResourceById(String resourceId) throws ConfigurationManagementException {\n+\n+    }\n+\n+    /**\n+     * This function is used to replace a given resource along with all its file.\n+     *\n+     * @param resource resource object.\n+     * @throws ConfigurationManagementException Configuration management exception.\n+     */\n+    default void replaceResourceAndFiles(Resource resource) throws ConfigurationManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQ3NDk0", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379147494", "createdAt": "2020-03-23T05:52:30Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTo1MjozMFrOF53rZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNTo1MjozMFrOF53rZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyNTM4Mg==", "bodyText": "Shall we throw NotImplementedException from Apache commons?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396225382", "createdAt": "2020-03-23T05:52:30Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/ConfigurationDAO.java", "diffHunk": "@@ -71,6 +71,39 @@ Resource getResourceByName(int tenantId, String resourceTypeId, String name)\n      */\n     Resource getResourceById(String resourceId) throws ConfigurationManagementException;\n \n+    /**\n+     * Returns {@link Resource} by id given the tenant id.\n+     *\n+     * @param tenantId   Tenant id of the {@link Resource}.\n+     * @param resourceId Id value of the {@link Resource} to be returned.\n+     * @return {@link Resource} for the given name.\n+     * @throws ConfigurationManagementException Configuration Management Exception.\n+     */\n+    default Resource getTenantResourceById(int tenantId, String resourceId) throws ConfigurationManagementException {\n+\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTQ5Njcz", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379149673", "createdAt": "2020-03-23T06:00:08Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjowMDowOFrOF53yTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjowMDowOFrOF53yTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyNzE1MA==", "bodyText": "Instead, shall we define a separate query constant for  AND R.TENANT_ID = ??", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396227150", "createdAt": "2020-03-23T06:00:08Z", "author": {"login": "tharindu-bandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -321,6 +369,60 @@ public Resource getResourceById(String resourceId) throws ConfigurationManagemen\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Resource getTenantResourceById(int tenantId, String resourceId) throws ConfigurationManagementException {\n+\n+        JdbcTemplate jdbcTemplate = JdbcUtils.getNewTemplate();\n+        List<ConfigurationRawDataCollector> configurationRawDataCollectors;\n+        try {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(useCreatedTimeField() ? GET_RESOURCE_BY_ID_MYSQL :\n+                    GET_RESOURCE_BY_ID_MYSQL_WITHOUT_CREATED_TIME);\n+            sb.append(\" AND R.TENANT_ID = ?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 224}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTUxMjEy", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379151212", "createdAt": "2020-03-23T06:05:40Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjowNTo0MFrOF533FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjowNTo0MFrOF533FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyODM3Mg==", "bodyText": "How does the template.getTemplateType() is created?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396228372", "createdAt": "2020-03-23T06:05:40Z", "author": {"login": "tharindu-bandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManagerImpl.java", "diffHunk": "@@ -238,4 +244,149 @@ private void validatePaginationParameters(Integer limit, Integer offset) throws\n         }\n     }\n \n+    @Override\n+    public Template getTemplateById(String templateId) throws TemplateManagementException {\n+\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resource resource = configManager.getTenantResourceById(templateId);\n+            Template template = new ResourceToTemplate().apply(resource);\n+            if (resource.getFiles().size() == 1) {\n+                InputStream templateScriptInputStream = configManager.getFileById(resource.getResourceType(),\n+                        resource.getResourceName(), resource.getFiles().get(0).getId());\n+                template.setTemplateScript(IOUtils.toString(templateScriptInputStream));\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(template.getTemplateType().toString() + \" can have only one templated object. But the \" +\n+                            \"template with id: \" + templateId + \" has \" + resource.getFiles().size() + \" templated \" +\n+                            \"object/s. Therefore templated object is not retrieved.\");\n+                }\n+            }\n+            return template;\n+        } catch (ConfigurationManagementException e) {\n+            if(ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ID_DOES_NOT_EXISTS.getCode().equals(e.getErrorCode())){\n+                throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_TEMPLATE_NOT_FOUND, e,\n+                        templateId, getTenantDomainFromCarbonContext());\n+            }\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_RETRIEVE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());\n+        } catch (IOException e) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_RETRIEVE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());        }\n+    }\n+\n+    @Override\n+    public List<Template> listTemplates(String templateType, Integer limit, Integer offset) throws\n+            TemplateManagementException {\n+\n+        if (!isValidTemplateType(templateType)) {\n+            throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_INVALID_TEMPLATE_TYPE,\n+                    templateType);\n+        }\n+        if (limit != null || offset != null) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_PAGINATION_NOT_SUPPORTED, null);\n+        }\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resources resourcesList = configManager.getResourcesByType(templateType);\n+            return resourcesList.getResources().stream().map(resource -> {\n+                resource.setResourceType(templateType);\n+                return new ResourceToTemplate().apply(resource);\n+            }).collect(Collectors.toList());\n+        } catch (ConfigurationManagementException e) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_LIST_TEMPLATES, e, templateType,\n+                    getTenantDomainFromCarbonContext());\n+        }\n+    }\n+\n+    @Override\n+    public void deleteTemplateById(String templateId) throws TemplateManagementException {\n+\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            configManager.deleteResourceById(templateId);\n+        } catch (ConfigurationManagementException e) {\n+            if (ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ID_DOES_NOT_EXISTS.getCode().equals(\n+                    e.getErrorCode())) {\n+                throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_TEMPLATE_NOT_FOUND, e,\n+                        templateId, getTenantDomainFromCarbonContext());\n+            }\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_DELETE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());\n+        }\n+    }\n+\n+    private String addTemplateToConfigStore(Template template) throws TemplateManagementException {\n+\n+        if (!isValidTemplateType(template.getTemplateType().toString())) {\n+            throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_INVALID_TEMPLATE_TYPE,\n+                    template.getTemplateType().toString());\n+        }\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resource resource = configManager.addResource(template.getTemplateType().toString(), new", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTE3NDY4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379117468", "createdAt": "2020-03-23T03:46:46Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo0Njo0NlrOF52J-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxODozMFrOF54DLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMDQ0Mg==", "bodyText": "missing 'return'", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396200442", "createdAt": "2020-03-23T03:46:46Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/ConfigurationManager.java", "diffHunk": "@@ -252,4 +252,34 @@ InputStream getFileById(String resourceType, String resourceName, String fileId)\n     void deleteFileById(String resourceType, String resourceName, String fileId)\n             throws ConfigurationManagementException;\n \n+    /**\n+     * This function is used to get a resource by the resource id.\n+     *\n+     * @param resourceId Id representing the resource.\n+     * @throws ConfigurationManagementException Configuration management exception.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMDg2MQ==", "bodyText": "Do we need this debug log here? otherwise can simplify to \"return StringUtils.isNotBlank(resourceId);\"", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396200861", "createdAt": "2020-03-23T03:49:02Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/ConfigurationManagerImpl.java", "diffHunk": "@@ -419,6 +421,17 @@ private void validateResourcesRetrieveRequest(String resourceTypeName)\n         }\n     }\n \n+    private boolean isValidResourceId(String resourceId) {\n+\n+        if (StringUtils.isBlank(resourceId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMTU1NA==", "bodyText": "We are not using the loaded Resource here... so that's unnecessary load... So, create a different method to check isResourceExistsById() which returns a boolean from the data level.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396201554", "createdAt": "2020-03-23T03:52:46Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/ConfigurationManagerImpl.java", "diffHunk": "@@ -495,6 +508,19 @@ private boolean isResourceExists(String resourceTypeName, String resourceName)\n         return true;\n     }\n \n+    private boolean isResourceExistsById(String resourceId) throws ConfigurationManagementException {\n+\n+        try {\n+            getTenantResourceById(resourceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIxOTIzNg==", "bodyText": "remove \\n", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396219236", "createdAt": "2020-03-23T05:24:59Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -301,6 +303,11 @@\n             \"  NAME = ?\\n\" +\n             \"  AND TENANT_ID = ?\\n\" +\n             \"  AND TYPE_ID = ?\";\n+    public static final String DELETE_RESOURCE_BY_ID_SQL = \"DELETE FROM\\n\" +\n+            \"  IDN_CONFIG_RESOURCE\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMDQ2Mg==", "bodyText": "Suggestion: instead of null we can return Optional here... then the method will be public Optional getTenantResourceById(int tenantId, String resourceId) throws ConfigurationManagementException {", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396220462", "createdAt": "2020-03-23T05:30:47Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -321,6 +369,60 @@ public Resource getResourceById(String resourceId) throws ConfigurationManagemen\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Resource getTenantResourceById(int tenantId, String resourceId) throws ConfigurationManagementException {\n+\n+        JdbcTemplate jdbcTemplate = JdbcUtils.getNewTemplate();\n+        List<ConfigurationRawDataCollector> configurationRawDataCollectors;\n+        try {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(useCreatedTimeField() ? GET_RESOURCE_BY_ID_MYSQL :\n+                    GET_RESOURCE_BY_ID_MYSQL_WITHOUT_CREATED_TIME);\n+            sb.append(\" AND R.TENANT_ID = ?\");\n+            configurationRawDataCollectors = jdbcTemplate.executeQuery(sb.toString(), (resultSet, rowNumber) -> {\n+                        ConfigurationRawDataCollector.ConfigurationRawDataCollectorBuilder\n+                                configurationRawDataCollectorBuilder =\n+                                new ConfigurationRawDataCollector.ConfigurationRawDataCollectorBuilder()\n+                                        .setResourceId(resultSet.getString(DB_SCHEMA_COLUMN_NAME_ID))\n+                                        .setTenantId(resultSet.getInt(DB_SCHEMA_COLUMN_NAME_TENANT_ID))\n+                                        .setResourceName(resultSet.getString(DB_SCHEMA_COLUMN_NAME_NAME))\n+                                        .setLastModified(resultSet.getTimestamp(DB_SCHEMA_COLUMN_NAME_LAST_MODIFIED,\n+                                                calendar))\n+                                        .setResourceTypeName(resultSet.getString(DB_SCHEMA_COLUMN_NAME_RESOURCE_TYPE))\n+                                        .setResourceTypeDescription(resultSet.getString\n+                                                (DB_SCHEMA_COLUMN_NAME_DESCRIPTTION))\n+                                        .setAttributeKey(resultSet.getString(DB_SCHEMA_COLUMN_NAME_ATTRIBUTE_KEY))\n+                                        .setAttributeValue(resultSet.getString(DB_SCHEMA_COLUMN_NAME_ATTRIBUTE_VALUE))\n+                                        .setAttributeId(resultSet.getString(DB_SCHEMA_COLUMN_NAME_ATTRIBUTE_ID))\n+                                        .setFileId(resultSet.getString(DB_SCHEMA_COLUMN_NAME_FILE_ID))\n+                                        .setHasFile(resultSet.getBoolean(DB_SCHEMA_COLUMN_NAME_HAS_FILE))\n+                                        .setHasAttribute(resultSet.getBoolean(DB_SCHEMA_COLUMN_NAME_HAS_ATTRIBUTE));\n+                        if (useCreatedTimeField()) {\n+                            configurationRawDataCollectorBuilder.setCreatedTime(\n+                                    resultSet.getTimestamp(DB_SCHEMA_COLUMN_NAME_CREATED_TIME,\n+                                            calendar)\n+                            );\n+                        }\n+                        return configurationRawDataCollectorBuilder.build();\n+                    },\n+                    preparedStatement -> {\n+                        preparedStatement.setString(1, resourceId);\n+                        preparedStatement.setInt(2, tenantId);\n+                    });\n+            /*\n+            Database call can contain duplicate data for some columns. Need to filter them in order to build the\n+            resource.\n+            */\n+            return configurationRawDataCollectors == null || configurationRawDataCollectors.size() == 0 ?\n+                    null : buildResourceFromRawData(configurationRawDataCollectors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMjQ3OA==", "bodyText": "can go to previous line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396222478", "createdAt": "2020-03-23T05:39:45Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -341,6 +443,25 @@ public void deleteResourceByName(int tenantId, String resourceTypeId, String res\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void deleteResourceById(int tenantId, String resourceId)\n+            throws ConfigurationManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 278}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMjY1OA==", "bodyText": "Better set values by column name", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396222658", "createdAt": "2020-03-23T05:40:33Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -341,6 +443,25 @@ public void deleteResourceByName(int tenantId, String resourceTypeId, String res\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void deleteResourceById(int tenantId, String resourceId)\n+            throws ConfigurationManagementException {\n+\n+        JdbcTemplate jdbcTemplate = JdbcUtils.getNewTemplate();\n+        try {\n+            jdbcTemplate.executeUpdate(SQLConstants.DELETE_RESOURCE_BY_ID_SQL, preparedStatement -> {\n+                int initialParameterIndex = 1;\n+                preparedStatement.setString(initialParameterIndex, resourceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyMzQ4Mw==", "bodyText": "some places you start with 0 and some other 1... have a unified way... better set with column names.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396223483", "createdAt": "2020-03-23T05:43:53Z", "author": {"login": "thanujalk"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -766,6 +920,18 @@ private void updateMetadataForH2(Resource resource, String resourceTypeId, boole\n         }\n     }\n \n+    private void updateResourceMetadata(Template<?> template, Resource resource, boolean isAttributeExists, boolean\n+            isFileExists, Timestamp currentTime) throws DataAccessException {\n+\n+        template.executeUpdate(UPDATE_RESOURCE, preparedStatement -> {\n+            int initialParameterIndex = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 420}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMDIzMw==", "bodyText": "If the backend has the support... yes", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396230233", "createdAt": "2020-03-23T06:13:46Z", "author": {"login": "thanujalk"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManager.java", "diffHunk": "@@ -77,4 +77,51 @@\n      */\n     List<TemplateInfo> listTemplates(Integer limit, Integer offset) throws TemplateManagementException;\n \n+    /**\n+     * Return the template given the template id.\n+     *\n+     * @param templateId unique identifier of the template.\n+     * @return template.\n+     * @throws TemplateManagementException if an error occurs while retrieving the template.\n+     */\n+    default Template getTemplateById(String templateId) throws TemplateManagementException {\n+\n+        return null;\n+    }\n+\n+    /**\n+     * Update a template given the template id by replacing the existing template object.\n+     *\n+     * @param templateId unique identifier of the the template.\n+     * @param template   updated template object.\n+     * @throws TemplateManagementException if an error occurs while updating the template.\n+     */\n+    default void updateTemplateById(String templateId, Template template) throws TemplateManagementException {\n+\n+    }\n+\n+    /**\n+     * Delete a template given the template id.\n+     *\n+     * @param templateId unique identifier of the template.\n+     * @throws TemplateManagementException if an error occurs while deleting the template.\n+     */\n+    default void deleteTemplateById(String templateId) throws TemplateManagementException {\n+\n+    }\n+\n+    /**\n+     * List all the templates of a given type.\n+     *\n+     * @param templateType template type\n+     * @param limit number of templates required for the list.\n+     * @param offset offset of the list of templates.\n+     * @return list templates\n+     * @throws TemplateManagementException if an error occurs while retrieving the templates.\n+     */\n+    default List<Template> listTemplates(String templateType, Integer limit, Integer offset) throws", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NjY0OQ=="}, "originalCommit": {"oid": "b76e83066645585cb29eb3e870284e9a9f259310"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMDY5OA==", "bodyText": "format the line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396230698", "createdAt": "2020-03-23T06:15:37Z", "author": {"login": "thanujalk"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManagerImpl.java", "diffHunk": "@@ -238,4 +244,149 @@ private void validatePaginationParameters(Integer limit, Integer offset) throws\n         }\n     }\n \n+    @Override\n+    public Template getTemplateById(String templateId) throws TemplateManagementException {\n+\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resource resource = configManager.getTenantResourceById(templateId);\n+            Template template = new ResourceToTemplate().apply(resource);\n+            if (resource.getFiles().size() == 1) {\n+                InputStream templateScriptInputStream = configManager.getFileById(resource.getResourceType(),\n+                        resource.getResourceName(), resource.getFiles().get(0).getId());\n+                template.setTemplateScript(IOUtils.toString(templateScriptInputStream));\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(template.getTemplateType().toString() + \" can have only one templated object. But the \" +\n+                            \"template with id: \" + templateId + \" has \" + resource.getFiles().size() + \" templated \" +\n+                            \"object/s. Therefore templated object is not retrieved.\");\n+                }\n+            }\n+            return template;\n+        } catch (ConfigurationManagementException e) {\n+            if(ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ID_DOES_NOT_EXISTS.getCode().equals(e.getErrorCode())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMTQ3MQ==", "bodyText": "if-else will be nice", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396231471", "createdAt": "2020-03-23T06:18:30Z", "author": {"login": "thanujalk"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/function/ResourceToTemplate.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.template.mgt.function;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.wso2.carbon.identity.configuration.mgt.core.model.Attribute;\n+import org.wso2.carbon.identity.configuration.mgt.core.model.Resource;\n+import org.wso2.carbon.identity.core.util.IdentityTenantUtil;\n+import org.wso2.carbon.identity.template.mgt.TemplateMgtConstants;\n+import org.wso2.carbon.identity.template.mgt.model.Template;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+/**\n+ * Converts the Resource object coming from configuration manager service to a Template object.\n+ */\n+public class ResourceToTemplate implements Function<Resource, Template> {\n+\n+    @Override\n+    public Template apply(Resource resource) {\n+\n+        Template template = convertAttributesToProperties(resource.getAttributes());\n+        template.setTemplateName(resource.getResourceName());\n+        template.setTemplateId(resource.getResourceId());\n+        template.setTenantId(IdentityTenantUtil.getTenantId(resource.getTenantDomain()));\n+        template.setTemplateType(getTemplateTypeFromResourceType(resource.getResourceType()));\n+        return template;\n+    }\n+\n+    private Template convertAttributesToProperties(List<Attribute> attributeList) {\n+\n+        Template template = new Template();\n+        Map<String, String> propertiesMap = new HashMap<>();\n+\n+        attributeList.forEach(attribute -> {\n+            switch (attribute.getKey()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTkxMDY4", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379191068", "createdAt": "2020-03-23T07:49:25Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo0OToyNVrOF5509w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo0OToyNVrOF5509w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MDU5OQ==", "bodyText": "is the old query where we used to allow the id to be changed used by existing features? if so, let's add a new query without changing existing one", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396260599", "createdAt": "2020-03-23T07:49:25Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -86,9 +86,11 @@\n             \"(NAME), \" +\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n+    public static final String UPDATE_RESOURCE =\n+            \"UPDATE IDN_CONFIG_RESOURCE SET LAST_MODIFIED = ?, HAS_FILE = ?, HAS_ATTRIBUTE = ? WHERE ID = ?\";\n     public static final String UPDATE_RESOURCE_H2 =\n-            \"UPDATE IDN_CONFIG_RESOURCE SET ID = ?, TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, HAS_FILE = ?, \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTkzMzMx", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379193331", "createdAt": "2020-03-23T07:53:45Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1Mzo0NVrOF5573g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1Mzo0NVrOF5573g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MjM2Ng==", "bodyText": "shall we inline line 1383 and 1384", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396262366", "createdAt": "2020-03-23T07:53:45Z", "author": {"login": "emswbandara"}, "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -1213,4 +1379,21 @@ public void deleteFiles(String resourceId) throws ConfigurationManagementExcepti\n         }\n     }\n \n+    private void insertResourceAttributes(Template<?> template, Resource resource) throws\n+            DataAccessException,\n+            ConfigurationManagementClientException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 437}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTk0NDY3", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379194467", "createdAt": "2020-03-23T07:55:53Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1NTo1M1rOF55_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1NTo1M1rOF55_Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MzIxNQ==", "bodyText": "since we don't have 'resource' in other operations e.g. get, delete, list. shall we modify this method name to addTemplate?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396263215", "createdAt": "2020-03-23T07:55:53Z", "author": {"login": "emswbandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManagerImpl.java", "diffHunk": "@@ -55,18 +73,10 @@\n      * @throws TemplateManagementException Template Management Exception.\n      */\n     @Override\n-    public Template addTemplate(Template template) throws TemplateManagementException {\n+    public String addTemplateResource(Template template) throws TemplateManagementException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTk1NTk5", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379195599", "createdAt": "2020-03-23T07:57:52Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1Nzo1MlrOF56CrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1Nzo1MlrOF56CrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NDEwOQ==", "bodyText": "we can use StringUtils.isNotBlank here", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396264109", "createdAt": "2020-03-23T07:57:52Z", "author": {"login": "emswbandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/TemplateManagerImpl.java", "diffHunk": "@@ -238,4 +244,149 @@ private void validatePaginationParameters(Integer limit, Integer offset) throws\n         }\n     }\n \n+    @Override\n+    public Template getTemplateById(String templateId) throws TemplateManagementException {\n+\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resource resource = configManager.getTenantResourceById(templateId);\n+            Template template = new ResourceToTemplate().apply(resource);\n+            if (resource.getFiles().size() == 1) {\n+                InputStream templateScriptInputStream = configManager.getFileById(resource.getResourceType(),\n+                        resource.getResourceName(), resource.getFiles().get(0).getId());\n+                template.setTemplateScript(IOUtils.toString(templateScriptInputStream));\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(template.getTemplateType().toString() + \" can have only one templated object. But the \" +\n+                            \"template with id: \" + templateId + \" has \" + resource.getFiles().size() + \" templated \" +\n+                            \"object/s. Therefore templated object is not retrieved.\");\n+                }\n+            }\n+            return template;\n+        } catch (ConfigurationManagementException e) {\n+            if(ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ID_DOES_NOT_EXISTS.getCode().equals(e.getErrorCode())){\n+                throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_TEMPLATE_NOT_FOUND, e,\n+                        templateId, getTenantDomainFromCarbonContext());\n+            }\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_RETRIEVE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());\n+        } catch (IOException e) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_RETRIEVE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());        }\n+    }\n+\n+    @Override\n+    public List<Template> listTemplates(String templateType, Integer limit, Integer offset) throws\n+            TemplateManagementException {\n+\n+        if (!isValidTemplateType(templateType)) {\n+            throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_INVALID_TEMPLATE_TYPE,\n+                    templateType);\n+        }\n+        if (limit != null || offset != null) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_PAGINATION_NOT_SUPPORTED, null);\n+        }\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resources resourcesList = configManager.getResourcesByType(templateType);\n+            return resourcesList.getResources().stream().map(resource -> {\n+                resource.setResourceType(templateType);\n+                return new ResourceToTemplate().apply(resource);\n+            }).collect(Collectors.toList());\n+        } catch (ConfigurationManagementException e) {\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_LIST_TEMPLATES, e, templateType,\n+                    getTenantDomainFromCarbonContext());\n+        }\n+    }\n+\n+    @Override\n+    public void deleteTemplateById(String templateId) throws TemplateManagementException {\n+\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            configManager.deleteResourceById(templateId);\n+        } catch (ConfigurationManagementException e) {\n+            if (ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ID_DOES_NOT_EXISTS.getCode().equals(\n+                    e.getErrorCode())) {\n+                throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_TEMPLATE_NOT_FOUND, e,\n+                        templateId, getTenantDomainFromCarbonContext());\n+            }\n+            throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_DELETE_TEMPLATE_BY_ID, e,\n+                    templateId, getTenantDomainFromCarbonContext());\n+        }\n+    }\n+\n+    private String addTemplateToConfigStore(Template template) throws TemplateManagementException {\n+\n+        if (!isValidTemplateType(template.getTemplateType().toString())) {\n+            throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_INVALID_TEMPLATE_TYPE,\n+                    template.getTemplateType().toString());\n+        }\n+        ConfigurationManager configManager = TemplateManagerDataHolder.getInstance().getConfigurationManager();\n+        try {\n+            Resource resource = configManager.addResource(template.getTemplateType().toString(), new\n+                    TemplateToResourceAdd().apply(template));\n+            configManager.addFile(template.getTemplateType().toString(), template.getTemplateName(),\n+                    template.getTemplateName() + \"_template_object\",\n+                    IOUtils.toInputStream(template.getTemplateScript()));\n+            return resource.getResourceId();\n+        } catch (ConfigurationManagementException e) {\n+            if (ConfigurationConstants.ErrorMessages.ERROR_CODE_RESOURCE_ALREADY_EXISTS.getCode().equals(\n+                    e.getErrorCode())) {\n+                throw handleClientException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_TEMPLATE_ALREADY_EXIST, e,\n+                        template.getTemplateName());\n+            } else {\n+                throw handleServerException(TemplateMgtConstants.ErrorMessages.ERROR_CODE_INSERT_TEMPLATE, e,\n+                        template.getTemplateName());\n+            }\n+        }\n+    }\n+\n+    private boolean isValidTemplateType(String templateType) {\n+\n+        return EnumUtils.isValidEnum(TemplateMgtConstants.TemplateType.class, templateType);\n+    }\n+\n+    private boolean isValidTemplateId(String templateId) {\n+\n+        return !StringUtils.isBlank(templateId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 186}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTk2NTM2", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379196536", "createdAt": "2020-03-23T07:59:41Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1OTo0MVrOF56FxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1OTo0MVrOF56FxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NDkwMQ==", "bodyText": "shall we add a class level comment?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396264901", "createdAt": "2020-03-23T07:59:41Z", "author": {"login": "emswbandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/function/TemplatePropertiesToAttributes.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.template.mgt.function;\n+\n+import org.wso2.carbon.identity.configuration.mgt.core.model.Attribute;\n+import org.wso2.carbon.identity.template.mgt.TemplateMgtConstants;\n+import org.wso2.carbon.identity.template.mgt.model.Template;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n+\n+public class TemplatePropertiesToAttributes implements Function<Template, List<Attribute>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTk2Njc3", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-379196677", "createdAt": "2020-03-23T07:59:57Z", "commit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1OTo1N1rOF56GKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1OTo1N1rOF56GKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NTAwMQ==", "bodyText": "shall we add a class level comment?", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#discussion_r396265001", "createdAt": "2020-03-23T07:59:57Z", "author": {"login": "emswbandara"}, "path": "components/template-mgt/org.wso2.carbon.identity.template.mgt/src/main/java/org/wso2/carbon/identity/template/mgt/function/TemplateToResource.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.identity.template.mgt.function;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.wso2.carbon.identity.configuration.mgt.core.model.Resource;\n+import org.wso2.carbon.identity.configuration.mgt.core.model.ResourceFile;\n+import org.wso2.carbon.identity.template.mgt.TemplateMgtConstants;\n+import org.wso2.carbon.identity.template.mgt.model.Template;\n+import org.wso2.carbon.identity.template.mgt.util.TemplateMgtUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n+\n+import static org.wso2.carbon.identity.configuration.mgt.core.util.ConfigurationUtils.generateUniqueID;\n+\n+public class TemplateToResource implements Function<Template, Resource> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7340dab3d80b07c80718a7aebd275dc7798abbc5"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fc917b922e5fcc40d274e88111522392b5e520c", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/3fc917b922e5fcc40d274e88111522392b5e520c", "committedDate": "2020-03-23T12:44:37Z", "message": "Format the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dca6a811247d1bcfec62eeacaeac55e8a5644ffe", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/dca6a811247d1bcfec62eeacaeac55e8a5644ffe", "committedDate": "2020-03-23T17:10:56Z", "message": "Deprecate the existing template add logic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4eab9927db8c6a9b908f8c89daaee5b65be27b79", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/4eab9927db8c6a9b908f8c89daaee5b65be27b79", "committedDate": "2020-03-23T11:51:38Z", "message": "Format the code"}, "afterCommit": {"oid": "dca6a811247d1bcfec62eeacaeac55e8a5644ffe", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/dca6a811247d1bcfec62eeacaeac55e8a5644ffe", "committedDate": "2020-03-23T17:10:56Z", "message": "Deprecate the existing template add logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21141a2ec73b9007b991aa7c46fc0bd29b5a7fa7", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/21141a2ec73b9007b991aa7c46fc0bd29b5a7fa7", "committedDate": "2020-03-23T17:23:27Z", "message": "Change updateResource method signature"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b1cf8743a094c013058241453bb766aa03edcc0", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/8b1cf8743a094c013058241453bb766aa03edcc0", "committedDate": "2020-03-23T17:22:36Z", "message": "Change updateResource method signature"}, "afterCommit": {"oid": "21141a2ec73b9007b991aa7c46fc0bd29b5a7fa7", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/21141a2ec73b9007b991aa7c46fc0bd29b5a7fa7", "committedDate": "2020-03-23T17:23:27Z", "message": "Change updateResource method signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c8f09d1cd43cd61d8473013ee137c4aedf5514e", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/3c8f09d1cd43cd61d8473013ee137c4aedf5514e", "committedDate": "2020-03-24T06:32:25Z", "message": "Add new method to check resource existence with id"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7fc19c7ae52f3262ee5be92381d720463bbbe74", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/a7fc19c7ae52f3262ee5be92381d720463bbbe74", "committedDate": "2020-03-24T06:12:30Z", "message": "Add new method to check resource existence with id"}, "afterCommit": {"oid": "3c8f09d1cd43cd61d8473013ee137c4aedf5514e", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/3c8f09d1cd43cd61d8473013ee137c4aedf5514e", "committedDate": "2020-03-24T06:32:25Z", "message": "Add new method to check resource existence with id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "105acf9bfe2a8d8ba258c0986ea7f1596cccee94", "author": {"user": {"login": "pamodaaw", "name": "Pamoda Wimalasiri"}}, "url": "https://github.com/wso2/carbon-identity-framework/commit/105acf9bfe2a8d8ba258c0986ea7f1596cccee94", "committedDate": "2020-03-25T18:41:37Z", "message": "Create resurce-type if not exist when creating templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjgwNDg5", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-381680489", "createdAt": "2020-03-26T03:30:48Z", "commit": {"oid": "105acf9bfe2a8d8ba258c0986ea7f1596cccee94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjgzMjkw", "url": "https://github.com/wso2/carbon-identity-framework/pull/2827#pullrequestreview-381683290", "createdAt": "2020-03-26T03:41:37Z", "commit": {"oid": "105acf9bfe2a8d8ba258c0986ea7f1596cccee94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2296, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}