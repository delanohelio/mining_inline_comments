{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjA0NjI5", "number": 3295, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToxNjo0MFrOFGh4Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToxNjo0MFrOFGh4Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzkwODU5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserNameResolverListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToxNjo0MFrOIHlFPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToyOTo0NVrOIHlV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgxODQ5NA==", "bodyText": "resolveUserIdFromUsername, This method can be returned an empty user-id right? Don't we need to check its emptiness?", "url": "https://github.com/wso2/carbon-identity-framework/pull/3295#discussion_r544818494", "createdAt": "2020-12-17T05:16:40Z", "author": {"login": "Thumimku"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserNameResolverListener.java", "diffHunk": "@@ -797,6 +804,36 @@ public boolean doPreGetUserListWithID(String claimUri, String claimValue, List<U\n             }\n         }\n \n+        // Reflect newly removed users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnInitialUserNamesList);\n+            tempUserNamesList.removeAll(returnUserNamesList);\n+            for (User user : returnUsersList) {\n+                if (tempUserNamesList.contains(user.getUsername())) {\n+                    returnUsersList.remove(user);\n+                }\n+            }\n+            tempUserNamesList.clear();\n+        }\n+\n+        // Reflect newly add users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnUserNamesList);\n+            tempUserNamesList.removeAll(returnInitialUserNamesList);\n+            for (String username : tempUserNamesList) {\n+                User newUser = new User();\n+                newUser.setUsername(username);\n+                try {\n+                    newUser.setUserID(FrameworkUtils.resolveUserIdFromUsername(userStoreManager, username));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66dd93f10ea1fafd78c1e91d625ee743972e8aa4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMjQ3Mg==", "bodyText": "This won't send empty id. It will create a new id if user doesn't have one.  Even if it is empty we don't need to handle it here as our main intension is to get the username", "url": "https://github.com/wso2/carbon-identity-framework/pull/3295#discussion_r544822472", "createdAt": "2020-12-17T05:28:51Z", "author": {"login": "inthirakumaaran"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserNameResolverListener.java", "diffHunk": "@@ -797,6 +804,36 @@ public boolean doPreGetUserListWithID(String claimUri, String claimValue, List<U\n             }\n         }\n \n+        // Reflect newly removed users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnInitialUserNamesList);\n+            tempUserNamesList.removeAll(returnUserNamesList);\n+            for (User user : returnUsersList) {\n+                if (tempUserNamesList.contains(user.getUsername())) {\n+                    returnUsersList.remove(user);\n+                }\n+            }\n+            tempUserNamesList.clear();\n+        }\n+\n+        // Reflect newly add users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnUserNamesList);\n+            tempUserNamesList.removeAll(returnInitialUserNamesList);\n+            for (String username : tempUserNamesList) {\n+                User newUser = new User();\n+                newUser.setUsername(username);\n+                try {\n+                    newUser.setUserID(FrameworkUtils.resolveUserIdFromUsername(userStoreManager, username));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgxODQ5NA=="}, "originalCommit": {"oid": "66dd93f10ea1fafd78c1e91d625ee743972e8aa4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMjc3OA==", "bodyText": "ACK, that's why we don't throw the exception just logging.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3295#discussion_r544822778", "createdAt": "2020-12-17T05:29:45Z", "author": {"login": "Thumimku"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt/src/main/java/org/wso2/carbon/identity/mgt/listener/IdentityUserNameResolverListener.java", "diffHunk": "@@ -797,6 +804,36 @@ public boolean doPreGetUserListWithID(String claimUri, String claimValue, List<U\n             }\n         }\n \n+        // Reflect newly removed users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnInitialUserNamesList);\n+            tempUserNamesList.removeAll(returnUserNamesList);\n+            for (User user : returnUsersList) {\n+                if (tempUserNamesList.contains(user.getUsername())) {\n+                    returnUsersList.remove(user);\n+                }\n+            }\n+            tempUserNamesList.clear();\n+        }\n+\n+        // Reflect newly add users by listeners in returnUsersList\n+        if (CollectionUtils.isNotEmpty(returnUserNamesList)) {\n+            tempUserNamesList.addAll(returnUserNamesList);\n+            tempUserNamesList.removeAll(returnInitialUserNamesList);\n+            for (String username : tempUserNamesList) {\n+                User newUser = new User();\n+                newUser.setUsername(username);\n+                try {\n+                    newUser.setUserID(FrameworkUtils.resolveUserIdFromUsername(userStoreManager, username));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgxODQ5NA=="}, "originalCommit": {"oid": "66dd93f10ea1fafd78c1e91d625ee743972e8aa4"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2471, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}