{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzUxNjc2", "number": 3039, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNDoxNzozNFrOEVqTfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNToyODozN1rOEjbT-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTQ4NjcwOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/model/ReverseProxyConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNDoxNzozNFrOG8ir3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNDoxNzozNFrOG8ir3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEzNjAyOQ==", "bodyText": "Need new line at the end of the file", "url": "https://github.com/wso2/carbon-identity-framework/pull/3039#discussion_r466136029", "createdAt": "2020-08-06T04:17:34Z", "author": {"login": "ruwanta"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/model/ReverseProxyConfig.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.identity.core.model;\n+\n+/**\n+ * Reverse Proxy Config.\n+ */\n+public class ReverseProxyConfig {\n+\n+    private final String defaultContext;\n+    private final String proxyContext;\n+\n+    public ReverseProxyConfig(String defaultContext, String proxyContext) {\n+        this.defaultContext = defaultContext;\n+        this.proxyContext = proxyContext;\n+    }\n+\n+    public String getProxyContext() {\n+\n+        return proxyContext;\n+    }\n+\n+    public String getDefaultContext() {\n+\n+        return defaultContext;\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f5f1cd4fc8d7dc6e553aa60e72c4d68bc6e8b88"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE4Mzk1OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/model/ReverseProxyConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyODoyNFrOHPhluA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyODoyNFrOHPhluA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MTAxNg==", "bodyText": "Add new line after method signature.", "url": "https://github.com/wso2/carbon-identity-framework/pull/3039#discussion_r486041016", "createdAt": "2020-09-10T03:28:24Z", "author": {"login": "sachiniWettasinghe"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/model/ReverseProxyConfig.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.carbon.identity.core.model;\n+\n+/**\n+ * Reverse Proxy Config.\n+ */\n+public class ReverseProxyConfig {\n+\n+    private final String defaultContext;\n+    private final String proxyContext;\n+\n+    public ReverseProxyConfig(String defaultContext, String proxyContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0f0078cf8f32ffbc827aaab6c47f216a346188"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE4NjUzOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyOTo1OVrOHPhnQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyOTo1OVrOHPhnQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MTQwOQ==", "bodyText": "Remove redundant line", "url": "https://github.com/wso2/carbon-identity-framework/pull/3039#discussion_r486041409", "createdAt": "2020-09-10T03:29:59Z", "author": {"login": "sachiniWettasinghe"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "diffHunk": "@@ -440,6 +448,51 @@ public void buildLegacyFeatureConfig() {\n         }\n     }\n \n+    private void buildReverseProxyConfig() {\n+\n+        ReverseProxyConfig reverseProxyConfig;\n+        OMElement reverseProxyConfigElement =\n+                this.getConfigElement(IdentityConstants.ReverseProxyConfigElements.REVERSE_PROXY_CONFIG);\n+        if (reverseProxyConfigElement != null) {\n+\n+            int reverseProxyConfigElementIndex = 0;\n+            Iterator<OMElement> reverseProxies = reverseProxyConfigElement.getChildrenWithName(\n+                    getQNameWithIdentityNS(IdentityConstants.ReverseProxyConfigElements.REVERSE_PROXY));\n+\n+            if (reverseProxies != null) {\n+                while (reverseProxies.hasNext()) {\n+                    reverseProxyConfigElementIndex += 1;\n+                    OMElement reverseProxy = reverseProxies.next();\n+\n+                    OMElement defaultContextElement = reverseProxy.getFirstChildWithName(\n+                            getQNameWithIdentityNS(IdentityConstants.ReverseProxyConfigElements.DEFAULT_CONTEXT));\n+                    OMElement proxyContextElement = reverseProxy.getFirstChildWithName(\n+                            getQNameWithIdentityNS(IdentityConstants.ReverseProxyConfigElements.PROXY_CONTEXT));\n+\n+                    String defaultContext;\n+                    String proxyContext;\n+                    if (defaultContextElement != null && proxyContextElement != null) {\n+                        defaultContext = defaultContextElement.getText();\n+                        if (StringUtils.isNotBlank(defaultContext)) {\n+                            defaultContext = defaultContext.trim();\n+                        }\n+                        proxyContext = proxyContextElement.getText();\n+                        if (StringUtils.isNotBlank(proxyContext)) {\n+                            proxyContext = proxyContext.trim();\n+                        }\n+\n+                        reverseProxyConfig = new ReverseProxyConfig(defaultContext, proxyContext);\n+                        reverseProxyConfigurationHolder.put(defaultContext, reverseProxyConfig);\n+                    } else {\n+                        log.warn(\"Configured <ReverseProxy> element at index: \" + reverseProxyConfigElementIndex +\n+                                \" contains invalid entry.\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0f0078cf8f32ffbc827aaab6c47f216a346188"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE5MDEwOnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/util/IdentityUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzozMjowMFrOHPhpRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzozMjowMFrOHPhpRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MTkyNA==", "bodyText": "Remove redundant line", "url": "https://github.com/wso2/carbon-identity-framework/pull/3039#discussion_r486041924", "createdAt": "2020-09-10T03:32:00Z", "author": {"login": "sachiniWettasinghe"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/util/IdentityUtilTest.java", "diffHunk": "@@ -237,6 +238,26 @@ public void testReadEventListenerProperty() throws Exception {\n         };\n     }\n \n+    @DataProvider\n+    public Object[][] getReverseProxyConfigData() {\n+\n+        return new Object[][]{\n+                {\"/oauth2/authorize\", \"/authorize\", \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/authorize\"},\n+                {\"/oauth2/authorize\", null, \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {null, \"/authorize\", \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {null, null, \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {null, null, null, null, \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {\"\", \"\", \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {\"/oauth2/authorize\", \"\", \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {\"\", \"/authorize\", \"/oidc/logout\", \"/logout\", \"/oauth2/authorize\", \"/oauth2/authorize\"},\n+                {\"/oauth2/authorize\", \"/authorize\", \"/oidc/logout\", \"/logout\", \"\", \"\"},\n+                {\"/oauth2/authorize\", \"/authorize\", \"/oidc/logout\", \"/logout\", null, null},\n+                {\"/oauth2/authorize\", \"/authorize\", \"/oidc/logout\", \"/logout\", \"/oidc/logout\", \"/logout\"},\n+                {null, null, \"/oidc/logout\", \"/logout\", \"/oidc/logout\", \"/logout\"}\n+        };\n+    }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0f0078cf8f32ffbc827aaab6c47f216a346188"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTgzMDk5OnYy", "diffSide": "RIGHT", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNToyODozN1rOHRxOZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNToyODozN1rOHRxOZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM5NDM0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static Map<String, ReverseProxyConfig> reverseProxyConfigurationHolder = new HashMap();\n          \n          \n            \n                private static Map<String, ReverseProxyConfig> reverseProxyConfigurationHolder = new HashMap<>();", "url": "https://github.com/wso2/carbon-identity-framework/pull/3039#discussion_r488394342", "createdAt": "2020-09-15T05:28:37Z", "author": {"login": "pulasthi7"}, "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/util/IdentityConfigParser.java", "diffHunk": "@@ -55,6 +56,7 @@\n     private static Map<IdentityEventListenerConfigKey, IdentityEventListenerConfig> eventListenerConfiguration = new HashMap();\n     private static Map<IdentityCacheConfigKey, IdentityCacheConfig> identityCacheConfigurationHolder = new HashMap();\n     private static Map<String, IdentityCookieConfig> identityCookieConfigurationHolder = new HashMap<>();\n+    private static Map<String, ReverseProxyConfig> reverseProxyConfigurationHolder = new HashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "700ffbabc84b120cecda3397e8911c8ab1933d11"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2642, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}