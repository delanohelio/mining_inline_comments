{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODk3OTE0", "number": 2901, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMTozNjozOVrOD3JvRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMTozNjozOVrOD3JvRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTU3ODI5OnYy", "diffSide": "RIGHT", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMTozNjozOVrOGNPugg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMTo0NzowNlrOGNQFMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0MjMzOA==", "bodyText": "Let's remove this additional line", "url": "https://github.com/wso2/carbon-identity-framework/pull/2901#discussion_r416542338", "createdAt": "2020-04-28T11:36:39Z", "author": {"login": "malithie"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -660,30 +660,33 @@ public static String getBasePath(String tenantDomain, String context) throws Api\n     /**\n      * Get base path URL for API clients.\n      *\n-     * @param tenantDomain          tenant Domain.\n+     * @param tenantDomain          Tenant Domain.\n      * @param context               URL context.\n-     * @param isEndpointTenantAware whether the endpoint is tenant aware.\n-     * @return base path.\n+     * @param isEndpointTenantAware Whether the endpoint is tenant aware.\n+     * @return Base path.\n      * @throws ApiException ApiException.\n      */\n     public static String getBasePath(String tenantDomain, String context, boolean isEndpointTenantAware)\n             throws ApiException {\n \n         String basePath;\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURLFromFile();\n         try {\n-            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n-                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n-            } else {\n-                String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURLFromFile();\n-                if (StringUtils.isBlank(serverUrl)) {\n-                    serverUrl = ServiceURLBuilder.create().build().getAbsoluteInternalURL();\n-                }\n-                if (StringUtils.isNotBlank(tenantDomain) && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n-                        .equalsIgnoreCase(tenantDomain) && isEndpointTenantAware) {\n-                    basePath = serverUrl + \"/t/\" + tenantDomain + context;\n+            if (StringUtils.isBlank(serverUrl)) {\n+                if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                    basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n                 } else {\n-                    basePath = serverUrl + context;\n+                    serverUrl = ServiceURLBuilder.create().build().getAbsoluteInternalURL();\n+                    if (StringUtils.isNotBlank(tenantDomain) && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n+                            .equalsIgnoreCase(tenantDomain) && isEndpointTenantAware) {\n+                        basePath = serverUrl + \"/t/\" + tenantDomain + context;\n+                    } else {\n+                        basePath = serverUrl + context;\n+                    }\n                 }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "020eb987c17bd8bbd9cbdf772fa6aeca44819550"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0ODE0Nw==", "bodyText": "Fixed and updated the PR.", "url": "https://github.com/wso2/carbon-identity-framework/pull/2901#discussion_r416548147", "createdAt": "2020-04-28T11:47:06Z", "author": {"login": "ashensw"}, "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/IdentityManagementEndpointUtil.java", "diffHunk": "@@ -660,30 +660,33 @@ public static String getBasePath(String tenantDomain, String context) throws Api\n     /**\n      * Get base path URL for API clients.\n      *\n-     * @param tenantDomain          tenant Domain.\n+     * @param tenantDomain          Tenant Domain.\n      * @param context               URL context.\n-     * @param isEndpointTenantAware whether the endpoint is tenant aware.\n-     * @return base path.\n+     * @param isEndpointTenantAware Whether the endpoint is tenant aware.\n+     * @return Base path.\n      * @throws ApiException ApiException.\n      */\n     public static String getBasePath(String tenantDomain, String context, boolean isEndpointTenantAware)\n             throws ApiException {\n \n         String basePath;\n+        String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURLFromFile();\n         try {\n-            if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n-                basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n-            } else {\n-                String serverUrl = IdentityManagementServiceUtil.getInstance().getContextURLFromFile();\n-                if (StringUtils.isBlank(serverUrl)) {\n-                    serverUrl = ServiceURLBuilder.create().build().getAbsoluteInternalURL();\n-                }\n-                if (StringUtils.isNotBlank(tenantDomain) && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n-                        .equalsIgnoreCase(tenantDomain) && isEndpointTenantAware) {\n-                    basePath = serverUrl + \"/t/\" + tenantDomain + context;\n+            if (StringUtils.isBlank(serverUrl)) {\n+                if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+                    basePath = ServiceURLBuilder.create().addPath(context).build().getAbsoluteInternalURL();\n                 } else {\n-                    basePath = serverUrl + context;\n+                    serverUrl = ServiceURLBuilder.create().build().getAbsoluteInternalURL();\n+                    if (StringUtils.isNotBlank(tenantDomain) && !MultitenantConstants.SUPER_TENANT_DOMAIN_NAME\n+                            .equalsIgnoreCase(tenantDomain) && isEndpointTenantAware) {\n+                        basePath = serverUrl + \"/t/\" + tenantDomain + context;\n+                    } else {\n+                        basePath = serverUrl + context;\n+                    }\n                 }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU0MjMzOA=="}, "originalCommit": {"oid": "020eb987c17bd8bbd9cbdf772fa6aeca44819550"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}