{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTk1Mjcx", "number": 239, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo1OTo0NFrOEBI09w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo0NTozOFrOEB9Imw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjI4NjYzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo1OTo0NFrOGc1Ubw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo1OTo0NFrOGc1Ubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4Njg5NQ==", "bodyText": "I would suggest to keep the exception message as it is (i.e. whatever service returns), I mean not to prepend any text like \"no message, \"message: \" to it. The reason is, service often return the message in xml format. End user might want to parse it using xml parser, this prefix make it hard, now user has to know about the prefix, apply substring(..) before xml parsing.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r432886895", "createdAt": "2020-05-30T20:59:44Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -921,15 +1015,19 @@ public void onFailure(@NonNull Call<ResponseBody> call, @NonNull Throwable t) {\n                         headers);\n \n                     return new CallAndOptionalResult<>(call, result);\n-                } else { // Error response\n-                    String strContent = readAsString(response.body());\n+                } else {\n+                    ResponseBody responseBody = response.body();\n+                    String message = responseBody == null ? \"no message\" : \"message: \" + readAsString(responseBody);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 666}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjI4ODcyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTowMjo1OVrOGc1Vfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTowMjo1OVrOGc1Vfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NzE2Ng==", "bodyText": "Refer above comment i.e. I would suggest keeping the message as it is. Also the HTTP response.code() is often 200 with the actual error-code exists in the response-header, so this extra text additions may not add much value but make it bit difficult to parse like I mentioned above.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r432887166", "createdAt": "2020-05-30T21:02:59Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -921,15 +1015,19 @@ public void onFailure(@NonNull Call<ResponseBody> call, @NonNull Throwable t) {\n                         headers);\n \n                     return new CallAndOptionalResult<>(call, result);\n-                } else { // Error response\n-                    String strContent = readAsString(response.body());\n+                } else {\n+                    ResponseBody responseBody = response.body();\n+                    String message = responseBody == null ? \"no message\" : \"message: \" + readAsString(responseBody);\n \n-                    throw new BlobStorageException(strContent, response.raw());\n+                    throw new BlobStorageException(\"Response failed with code: \" + response.code() + \" and \" + message,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 669}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjI4OTE4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTowMzo0N1rOGc1VtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTowMzo0N1rOGc1VtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NzIyMA==", "bodyText": "good catch and fix \ud83d\udc4d", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r432887220", "createdAt": "2020-05-30T21:03:47Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "diffHunk": "@@ -28,17 +28,20 @@ public SasTokenCredentialInterceptor(SasTokenCredential credential) {\n     public Response intercept(Chain chain) throws IOException {\n         HttpUrl requestURL = chain.request().url();\n \n-        String encodedQuery = requestURL.encodedQuery();\n-        if (!isNullOrEmpty(encodedQuery)) {\n-            encodedQuery += \"&\";\n-        }\n-\n         String sasToken = this.credential.getSasToken();\n-        // SAS token is already encoded so its safe to append it to the encoded query from source request.\n-        encodedQuery += sasToken.startsWith(\"?\")\n+        sasToken = sasToken.startsWith(\"?\")\n             ? sasToken.substring(1)\n             : sasToken;\n \n+        // SAS token is already encoded so its safe to append it to the encoded query from source request.\n+        String encodedQuery = requestURL.encodedQuery();\n+\n+        if (isNullOrEmpty(encodedQuery)) {\n+            encodedQuery = sasToken;\n+        } else {\n+            encodedQuery += \"&\" + sasToken;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjMwNjIzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTozODo1MVrOGc1eXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjowODo0OVrOGdfxUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTQzOQ==", "bodyText": "The methods in this category are those with \"simplest\" signature, which should not return any Response type but instead returns the actual value in the response, in this case it should be void.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r432889439", "createdAt": "2020-05-30T21:38:51Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -392,28 +399,28 @@ public ServiceCall downloadWithHeaders(String containerName,\n             callback);\n     }\n \n-    public void stageBlock(String containerName,\n+    public BlockBlobsStageBlockResponse stageBlock(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MjQxOQ==", "bodyText": "You are right, I must have missed this for stageBlock.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r433582419", "createdAt": "2020-06-02T02:08:49Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -392,28 +399,28 @@ public ServiceCall downloadWithHeaders(String containerName,\n             callback);\n     }\n \n-    public void stageBlock(String containerName,\n+    public BlockBlobsStageBlockResponse stageBlock(String containerName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTQzOQ=="}, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 242}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjMwNjk4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTo0MDo0MlrOGc1exQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODowMzo1OVrOGd9pIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTU0MQ==", "bodyText": "ref the previous comment, this is the async variant with \"simplest\" signature, and should be producing value in the Response (i.e. void) not the Response.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r432889541", "createdAt": "2020-05-30T21:40:42Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -392,28 +399,28 @@ public ServiceCall downloadWithHeaders(String containerName,\n             callback);\n     }\n \n-    public void stageBlock(String containerName,\n+    public BlockBlobsStageBlockResponse stageBlock(String containerName,\n                            String blobName,\n                            String base64BlockId,\n-                           byte[] content,\n+                           byte[] blockContent,\n                            byte[] contentMd5) {\n-        this.storageBlobServiceClient.stageBlock(containerName,\n+        return this.storageBlobServiceClient.stageBlock(containerName,\n             blobName,\n             base64BlockId,\n-            content,\n+            blockContent,\n             contentMd5);\n     }\n \n     public ServiceCall stageBlock(String containerName,\n                                   String blobName,\n                                   String base64BlockId,\n-                                  byte[] body,\n+                                  byte[] blockContent,\n                                   byte[] contentMd5,\n-                                  Callback<Void> callback) {\n+                                  Callback<BlockBlobsStageBlockResponse> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 264}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MjU1Ng==", "bodyText": "So we would make this accept a Callback<Void> instead, right?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r433582556", "createdAt": "2020-06-02T02:09:25Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -392,28 +399,28 @@ public ServiceCall downloadWithHeaders(String containerName,\n             callback);\n     }\n \n-    public void stageBlock(String containerName,\n+    public BlockBlobsStageBlockResponse stageBlock(String containerName,\n                            String blobName,\n                            String base64BlockId,\n-                           byte[] content,\n+                           byte[] blockContent,\n                            byte[] contentMd5) {\n-        this.storageBlobServiceClient.stageBlock(containerName,\n+        return this.storageBlobServiceClient.stageBlock(containerName,\n             blobName,\n             base64BlockId,\n-            content,\n+            blockContent,\n             contentMd5);\n     }\n \n     public ServiceCall stageBlock(String containerName,\n                                   String blobName,\n                                   String base64BlockId,\n-                                  byte[] body,\n+                                  byte[] blockContent,\n                                   byte[] contentMd5,\n-                                  Callback<Void> callback) {\n+                                  Callback<BlockBlobsStageBlockResponse> callback) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTU0MQ=="}, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 264}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MTg0MA==", "bodyText": "right, I see you already made this change, sorry for delay.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r434071840", "createdAt": "2020-06-02T18:03:59Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -392,28 +399,28 @@ public ServiceCall downloadWithHeaders(String containerName,\n             callback);\n     }\n \n-    public void stageBlock(String containerName,\n+    public BlockBlobsStageBlockResponse stageBlock(String containerName,\n                            String blobName,\n                            String base64BlockId,\n-                           byte[] content,\n+                           byte[] blockContent,\n                            byte[] contentMd5) {\n-        this.storageBlobServiceClient.stageBlock(containerName,\n+        return this.storageBlobServiceClient.stageBlock(containerName,\n             blobName,\n             base64BlockId,\n-            content,\n+            blockContent,\n             contentMd5);\n     }\n \n     public ServiceCall stageBlock(String containerName,\n                                   String blobName,\n                                   String base64BlockId,\n-                                  byte[] body,\n+                                  byte[] blockContent,\n                                   byte[] contentMd5,\n-                                  Callback<Void> callback) {\n+                                  Callback<BlockBlobsStageBlockResponse> callback) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4OTU0MQ=="}, "originalCommit": {"oid": "ab62c210989e3056c91a5efd3e25def661d18de6"}, "originalPosition": 264}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDg1NjU5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/internal/util/test/EnqueueMockResponse.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo0NTozOFrOGeHigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1MzowNFrOGeHqGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzMzk4Nw==", "bodyText": "I guess there are two things in the test project:\n\nUnit tests for types in the core project.\nTest types that we want to share with other \"dependent\" projects (e.g., storage).\n\nFor the second category, does it make sense to keeping these shared types rooted at com.azure.android.core.test, hence consistent with the established namespace in java sdk. Its a shippable package in java SDK, we haven't there yet for android but agreeing on the namespace will be a good start. Thoughts?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r434233987", "createdAt": "2020-06-02T23:45:38Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/internal/util/test/EnqueueMockResponse.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package com.azure.android.core.http.interceptor;\n+package com.azure.android.core.internal.util.test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86866131dc024de70dfbbb5caa681e85e793b7e1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNDgyOA==", "bodyText": "Between why did we move \"shared test\" types from \"src/test\" to \"src/main\"?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r434234828", "createdAt": "2020-06-02T23:48:49Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/internal/util/test/EnqueueMockResponse.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package com.azure.android.core.http.interceptor;\n+package com.azure.android.core.internal.util.test;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzMzk4Nw=="}, "originalCommit": {"oid": "86866131dc024de70dfbbb5caa681e85e793b7e1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNTkzMQ==", "bodyText": "If discoverability of types are the reason for \"src/test\" -> \"src/main\" then worth checking this: https://stackoverflow.com/questions/5644011/multi-project-test-dependencies-with-gradle/60138176#60138176", "url": "https://github.com/Azure/azure-sdk-for-android/pull/239#discussion_r434235931", "createdAt": "2020-06-02T23:53:04Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/internal/util/test/EnqueueMockResponse.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package com.azure.android.core.http.interceptor;\n+package com.azure.android.core.internal.util.test;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzMzk4Nw=="}, "originalCommit": {"oid": "86866131dc024de70dfbbb5caa681e85e793b7e1"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2375, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}