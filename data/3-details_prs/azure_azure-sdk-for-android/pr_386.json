{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4Nzg4Nzk0", "number": 386, "title": "Added support to set access tier on a blob", "bodyText": "", "createdAt": "2020-10-06T19:33:04Z", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386", "merged": true, "mergeCommit": {"oid": "acb496d92626ea182ae766875fa7b5334b5ba25f"}, "closed": true, "closedAt": "2020-10-20T20:07:58Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP9mpJgH2gAyNDk4Nzg4Nzk0OjFjZmM3ZTk1N2U1YmJjMDRlM2QxYjg4MWE4ZTNjMDk3YjBlZWZlZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUeIU3AH2gAyNDk4Nzg4Nzk0OjRlMzZmZTFiZDlmNTQxYzc3MDlkZTUzYjkxMjA0MzQzNTc3OTU1OWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1cfc7e957e5bbc04e3d1b881a8e3c097b0eefeec", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/1cfc7e957e5bbc04e3d1b881a8e3c097b0eefeec", "committedDate": "2020-10-06T19:32:31Z", "message": "Added support to set access tier on a blob"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/8fdb9abb17f25758387d839b40ca3e6bda0cd2a1", "committedDate": "2020-10-06T19:44:43Z", "message": "Formatting of javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzA1ODM4", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-503305838", "createdAt": "2020-10-06T19:50:21Z", "commit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1MDoyMVrOHdXfIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTo1MDoyMVrOHdXfIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU1NTU1Mw==", "bodyText": "Should this be setTier or setBlobTier?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r500555553", "createdAt": "2020-10-06T19:50:21Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -374,6 +376,73 @@ public void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    public void setTier(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDA3MzU4", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-503407358", "createdAt": "2020-10-06T22:36:28Z", "commit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozNjoyOVrOHdcT6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozNjoyOVrOHdcT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzNDYwMQ==", "bodyText": "Can we get rid of this?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r500634601", "createdAt": "2020-10-06T22:36:29Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,131 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will\n+     * be present in the response with the same value.\n+     */\n+    @JsonProperty(value = \"x-ms-client-request-id\")\n+    private String clientRequestId;\n+\n+    /*\n+     * This header uniquely identifies the request that was made and can be\n+     * used for troubleshooting the request.\n+     */\n+    @JsonProperty(value = \"x-ms-request-id\")\n+    private String requestId;\n+\n+    /*\n+     * Indicates the version of the Blob service used to execute the request.\n+     * This header is returned for requests made against version 2009-09-19 and\n+     * newer.\n+     */\n+    @JsonProperty(value = \"x-ms-version\")\n+    private String version;\n+\n+    /*\n+     * The errorCode property.\n+     */\n+    @JsonProperty(value = \"x-ms-error-code\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDA3ODQx", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-503407841", "createdAt": "2020-10-06T22:37:36Z", "commit": {"oid": "8fdb9abb17f25758387d839b40ca3e6bda0cd2a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c20b844ed77fa3a96609d276fca4b5a62f79b57", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/4c20b844ed77fa3a96609d276fca4b5a62f79b57", "committedDate": "2020-10-07T16:20:09Z", "message": "renamed method to setBlobTier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/405f6a3b104cb963fd1b0d8b64194c8001e043a7", "committedDate": "2020-10-08T17:00:20Z", "message": "removed error code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTkzODIy", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-504993822", "createdAt": "2020-10-08T17:10:16Z", "commit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd2de7ff4bee2b20b6d45e08f4d127223f75c89b", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/cd2de7ff4bee2b20b6d45e08f4d127223f75c89b", "committedDate": "2020-10-09T00:06:58Z", "message": "Started on create container"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e1a8074ebf302b11352b46e3e9cf305037bc1f6", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/3e1a8074ebf302b11352b46e3e9cf305037bc1f6", "committedDate": "2020-10-09T18:41:29Z", "message": "Added support to delete container"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd2db40775cd27af30e8e3d4a385b074be54728", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/7fd2db40775cd27af30e8e3d4a385b074be54728", "committedDate": "2020-10-09T18:57:58Z", "message": "Finished createContainer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d2a0d674e12be953f4fc9b30021e8d51b8c5af", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/58d2a0d674e12be953f4fc9b30021e8d51b8c5af", "committedDate": "2020-10-09T20:19:27Z", "message": "Updated test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8042b1d882af59f48bfd2c9233ffb789893f29b0", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/8042b1d882af59f48bfd2c9233ffb789893f29b0", "committedDate": "2020-10-09T20:28:29Z", "message": "Exposed BlobRequestConditions publically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "368f15356e57f681bb1635e4aed0ee44c4789290", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/368f15356e57f681bb1635e4aed0ee44c4789290", "committedDate": "2020-10-09T23:38:27Z", "message": "Started setting up ways to get creds and clients"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34329b725b7f423436b09b35116080832ce3ade1", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/34329b725b7f423436b09b35116080832ce3ade1", "committedDate": "2020-10-12T18:46:07Z", "message": "Merge branch 'testInfra' into createContainer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "326f1d06598ff9e57a9179e6096fe68ee40c6ebd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/326f1d06598ff9e57a9179e6096fe68ee40c6ebd", "committedDate": "2020-10-12T19:21:19Z", "message": "Started on createContainer network tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d442292112b7d5dbdc9789ffa222b9495aff0913", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/d442292112b7d5dbdc9789ffa222b9495aff0913", "committedDate": "2020-10-12T19:23:36Z", "message": "Merge remote-tracking branch 'gauri/storage/deleteContainer' into createContainer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a838f0f2ce20ab11120c4ebb97981be695ec1eca", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/a838f0f2ce20ab11120c4ebb97981be695ec1eca", "committedDate": "2020-10-12T20:43:32Z", "message": "Added support for get container properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd01c2d9cabfb6853fbb3e05b4db00c2732c0a2", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/ebd01c2d9cabfb6853fbb3e05b4db00c2732c0a2", "committedDate": "2020-10-12T20:47:39Z", "message": "Working on deleteContainer tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95bfecb4dd10691bb8656971605b59733b723090", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/95bfecb4dd10691bb8656971605b59733b723090", "committedDate": "2020-10-12T20:50:47Z", "message": "Merge remote-tracking branch 'gauri/storage/getContainerProperties' into createContainer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d891da875b3a634f5fcc7d6a7cb5e8607d771a4f", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/d891da875b3a634f5fcc7d6a7cb5e8607d771a4f", "committedDate": "2020-10-13T00:00:30Z", "message": "Added live tests for create"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODg5OTM3", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-507889937", "createdAt": "2020-10-13T23:08:46Z", "commit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowODo0N1rOHg8kug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzozODozNVrOHg9JAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwODkyMg==", "bodyText": "nit;\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Defines headers for SetTier operation.\n          \n          \n            \n             * Defines headers for the setBlobTier operation.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504308922", "createdAt": "2020-10-13T23:08:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwOTg0NQ==", "bodyText": "We have not really talked about if we are going to use id or ID in the Javadoc for our clients, just making a note on this.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504309845", "createdAt": "2020-10-13T23:11:27Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDI5NQ==", "bodyText": "We use this notation on other Fluent types that are part of the Android SDKs, not a hard requirement for this PR though. We might want to revisit all these Javadocs to ensure consistency.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the BlobSetTierHeaders object itself.\n          \n          \n            \n                 * @return the updated BlobSetTierHeaders object.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504310295", "createdAt": "2020-10-13T23:12:48Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will\n+     * be present in the response with the same value.\n+     */\n+    @JsonProperty(value = \"x-ms-client-request-id\")\n+    private String clientRequestId;\n+\n+    /*\n+     * This header uniquely identifies the request that was made and can be\n+     * used for troubleshooting the request.\n+     */\n+    @JsonProperty(value = \"x-ms-request-id\")\n+    private String requestId;\n+\n+    /*\n+     * Indicates the version of the Blob service used to execute the request.\n+     * This header is returned for requests made against version 2009-09-19 and\n+     * newer.\n+     */\n+    @JsonProperty(value = \"x-ms-version\")\n+    private String version;\n+\n+    /**\n+     * Get the clientRequestId property: If a client request id header is sent\n+     * in the request, this header will be present in the response with the\n+     * same value.\n+     *\n+     * @return the clientRequestId value.\n+     */\n+    public String getClientRequestId() {\n+        return this.clientRequestId;\n+    }\n+\n+    /**\n+     * Set the clientRequestId property: If a client request id header is sent\n+     * in the request, this header will be present in the response with the\n+     * same value.\n+     *\n+     * @param clientRequestId the clientRequestId value to set.\n+     * @return the BlobSetTierHeaders object itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDc5MA==", "bodyText": "If we include property descriptions in our Javadoc we don't need to mention them again in the getters and setters. Not sure what the convention is in the Java SDKs but I guess code would look cleaner this way.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /*\n          \n          \n            \n                /**", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504310790", "createdAt": "2020-10-13T23:14:25Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDgxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /*\n          \n          \n            \n                /**", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504310812", "createdAt": "2020-10-13T23:14:30Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will\n+     * be present in the response with the same value.\n+     */\n+    @JsonProperty(value = \"x-ms-client-request-id\")\n+    private String clientRequestId;\n+\n+    /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDg0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /*\n          \n          \n            \n                /**", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504310845", "createdAt": "2020-10-13T23:14:35Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will\n+     * be present in the response with the same value.\n+     */\n+    @JsonProperty(value = \"x-ms-client-request-id\")\n+    private String clientRequestId;\n+\n+    /*\n+     * This header uniquely identifies the request that was made and can be\n+     * used for troubleshooting the request.\n+     */\n+    @JsonProperty(value = \"x-ms-request-id\")\n+    private String requestId;\n+\n+    /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMjE0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Contains all response data for the setTier operation.\n          \n          \n            \n             * Contains all response data for the setBlobTier operation.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504312148", "createdAt": "2020-10-13T23:18:33Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierResponse.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+\n+import com.azure.android.core.http.ResponseBase;\n+\n+import okhttp3.Headers;\n+import okhttp3.Request;\n+\n+/**\n+ * Contains all response data for the setTier operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDIzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BlobSetTierResponse response = setTierWithRestResponse(containerName,\n          \n          \n            \n                    BlobSetTierResponse response = setBlobTierWithRestResponse(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504314234", "createdAt": "2020-10-13T23:25:17Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDQxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    setTierWithRestResponseIntern(containerName,\n          \n          \n            \n                    setBlobTierWithRestResponseIntern(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504314411", "createdAt": "2020-10-13T23:25:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE);\n+\n+        return response.getValue();\n+    }\n+\n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        setTierWithRestResponseIntern(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNDUxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return setTierWithRestResponseIntern(containerName,\n          \n          \n            \n                    return setBlobTierWithRestResponseIntern(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504314515", "createdAt": "2020-10-13T23:26:07Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE);\n+\n+        return response.getValue();\n+    }\n+\n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        setTierWithRestResponseIntern(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE,\n+            callback);\n+    }\n+\n+    /**\n+     * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium storage account and on a block blob in a blob storage account (locally redundant storage only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's ETag.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param tier              Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param versionId         The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority Optional: Indicates the priority with which to rehydrate an archived blob. Possible values include: 'High', 'Standard'.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param leaseId           If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n+     * @param ifTags            Specify a SQL where clause on blob tags to operate only on blobs with a matching value.\n+     * @param cancellationToken The token to request cancellation.\n+     * @return The response information returned from the server when setting tier on a blob.\n+     */\n+    BlobSetTierResponse setTierWithRestResponse(String containerName,\n+                                                String blobName,\n+                                                AccessTier tier,\n+                                                String snapshot,\n+                                                String versionId,\n+                                                Integer timeout,\n+                                                String version,\n+                                                RehydratePriority rehydratePriority,\n+                                                String requestId,\n+                                                String leaseId,\n+                                                String ifTags,\n+                                                CancellationToken cancellationToken) {\n+        return setTierWithRestResponseIntern(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTIxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Void setTier(String containerName,\n          \n          \n            \n                             String blobName,\n          \n          \n            \n                             AccessTier tier) {\n          \n          \n            \n                Void setBlobTier(String containerName,\n          \n          \n            \n                                 String blobName,\n          \n          \n            \n                                 AccessTier tier) {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504315214", "createdAt": "2020-10-13T23:28:20Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTM0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void setTier(String containerName,\n          \n          \n            \n                             String blobName,\n          \n          \n            \n                             AccessTier tier,\n          \n          \n            \n                             CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n          \n          \n            \n                void setBlobTier(String containerName,\n          \n          \n            \n                                 String blobName,\n          \n          \n            \n                                 AccessTier tier,\n          \n          \n            \n                                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504315344", "createdAt": "2020-10-13T23:28:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE);\n+\n+        return response.getValue();\n+    }\n+\n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTUyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                BlobSetTierResponse setTierWithRestResponse(String containerName,\n          \n          \n            \n                                                            String blobName,\n          \n          \n            \n                                                            AccessTier tier,\n          \n          \n            \n                                                            String snapshot,\n          \n          \n            \n                                                            String versionId,\n          \n          \n            \n                                                            Integer timeout,\n          \n          \n            \n                                                            String version,\n          \n          \n            \n                                                            RehydratePriority rehydratePriority,\n          \n          \n            \n                                                            String requestId,\n          \n          \n            \n                                                            String leaseId,\n          \n          \n            \n                                                            String ifTags,\n          \n          \n            \n                                                            CancellationToken cancellationToken) {\n          \n          \n            \n                BlobSetTierResponse setBlobTierWithRestResponse(String containerName,\n          \n          \n            \n                                                                String blobName,\n          \n          \n            \n                                                                AccessTier tier,\n          \n          \n            \n                                                                String snapshot,\n          \n          \n            \n                                                                String versionId,\n          \n          \n            \n                                                                Integer timeout,\n          \n          \n            \n                                                                String version,\n          \n          \n            \n                                                                RehydratePriority rehydratePriority,\n          \n          \n            \n                                                                String requestId,\n          \n          \n            \n                                                                String leaseId,\n          \n          \n            \n                                                                String ifTags,\n          \n          \n            \n                                                                CancellationToken cancellationToken) {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504315524", "createdAt": "2020-10-13T23:29:20Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE);\n+\n+        return response.getValue();\n+    }\n+\n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        setTierWithRestResponseIntern(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE,\n+            callback);\n+    }\n+\n+    /**\n+     * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium storage account and on a block blob in a blob storage account (locally redundant storage only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's ETag.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param tier              Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param versionId         The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority Optional: Indicates the priority with which to rehydrate an archived blob. Possible values include: 'High', 'Standard'.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param leaseId           If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n+     * @param ifTags            Specify a SQL where clause on blob tags to operate only on blobs with a matching value.\n+     * @param cancellationToken The token to request cancellation.\n+     * @return The response information returned from the server when setting tier on a blob.\n+     */\n+    BlobSetTierResponse setTierWithRestResponse(String containerName,\n+                                                String blobName,\n+                                                AccessTier tier,\n+                                                String snapshot,\n+                                                String versionId,\n+                                                Integer timeout,\n+                                                String version,\n+                                                RehydratePriority rehydratePriority,\n+                                                String requestId,\n+                                                String leaseId,\n+                                                String ifTags,\n+                                                CancellationToken cancellationToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTgyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void setTier(String containerName,\n          \n          \n            \n                             String blobName,\n          \n          \n            \n                             AccessTier tier,\n          \n          \n            \n                             String snapshot,\n          \n          \n            \n                             String versionId,\n          \n          \n            \n                             Integer timeout,\n          \n          \n            \n                             String version,\n          \n          \n            \n                             RehydratePriority rehydratePriority,\n          \n          \n            \n                             String requestId,\n          \n          \n            \n                             String leaseId,\n          \n          \n            \n                             String ifTags,\n          \n          \n            \n                             CancellationToken cancellationToken,\n          \n          \n            \n                             CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n          \n          \n            \n                void setBlobTierWithResponse(String containerName,\n          \n          \n            \n                                             String blobName,\n          \n          \n            \n                                             AccessTier tier,\n          \n          \n            \n                                             String snapshot,\n          \n          \n            \n                                             String versionId,\n          \n          \n            \n                                             Integer timeout,\n          \n          \n            \n                                             String version,\n          \n          \n            \n                                             RehydratePriority rehydratePriority,\n          \n          \n            \n                                             String requestId,\n          \n          \n            \n                                             String leaseId,\n          \n          \n            \n                                             String ifTags,\n          \n          \n            \n                                             CancellationToken cancellationToken,\n          \n          \n            \n                                             CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504315824", "createdAt": "2020-10-13T23:30:18Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -260,6 +263,148 @@ void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    Void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier) {\n+        BlobSetTierResponse response = setTierWithRestResponse(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE);\n+\n+        return response.getValue();\n+    }\n+\n+    /**\n+     * Sets the access tier of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        setTierWithRestResponseIntern(containerName,\n+            blobName,\n+            tier,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            null,\n+            CancellationToken.NONE,\n+            callback);\n+    }\n+\n+    /**\n+     * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium storage account and on a block blob in a blob storage account (locally redundant storage only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's ETag.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param tier              Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param versionId         The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority Optional: Indicates the priority with which to rehydrate an archived blob. Possible values include: 'High', 'Standard'.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param leaseId           If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n+     * @param ifTags            Specify a SQL where clause on blob tags to operate only on blobs with a matching value.\n+     * @param cancellationToken The token to request cancellation.\n+     * @return The response information returned from the server when setting tier on a blob.\n+     */\n+    BlobSetTierResponse setTierWithRestResponse(String containerName,\n+                                                String blobName,\n+                                                AccessTier tier,\n+                                                String snapshot,\n+                                                String versionId,\n+                                                Integer timeout,\n+                                                String version,\n+                                                RehydratePriority rehydratePriority,\n+                                                String requestId,\n+                                                String leaseId,\n+                                                String ifTags,\n+                                                CancellationToken cancellationToken) {\n+        return setTierWithRestResponseIntern(containerName,\n+            blobName,\n+            tier,\n+            snapshot,\n+            versionId,\n+            timeout,\n+            version,\n+            rehydratePriority,\n+            requestId,\n+            leaseId,\n+            ifTags,\n+            cancellationToken,\n+            null);\n+    }\n+\n+    /**\n+     * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium storage account and on a block blob in a blob storage account (locally redundant storage only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's ETag.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName The blob name.\n+     * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'.\n+     * @param snapshot The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param versionId The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer.\n+     * @param timeout The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority Optional: Indicates the priority with which to rehydrate an archived blob. Possible values include: 'High', 'Standard'.\n+     * @param requestId Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param leaseId If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n+     * @param ifTags Specify a SQL where clause on blob tags to operate only on blobs with a matching value.\n+     * @param cancellationToken The token to request cancellation.\n+     * @param callback Callback that receives the response.\n+     */\n+    void setTier(String containerName,\n+                 String blobName,\n+                 AccessTier tier,\n+                 String snapshot,\n+                 String versionId,\n+                 Integer timeout,\n+                 String version,\n+                 RehydratePriority rehydratePriority,\n+                 String requestId,\n+                 String leaseId,\n+                 String ifTags,\n+                 CancellationToken cancellationToken,\n+                 CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNTk1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private BlobSetTierResponse setTierWithRestResponseIntern(String containerName,\n          \n          \n            \n                                                                          String blobName,\n          \n          \n            \n                                                                          AccessTier tier,\n          \n          \n            \n                                                                          String snapshot,\n          \n          \n            \n                                                                          String versionId,\n          \n          \n            \n                                                                          Integer timeout,\n          \n          \n            \n                                                                          String version,\n          \n          \n            \n                                                                          RehydratePriority rehydratePriority,\n          \n          \n            \n                                                                          String requestId,\n          \n          \n            \n                                                                          String leaseId,\n          \n          \n            \n                                                                          String ifTags,\n          \n          \n            \n                                                                          CancellationToken cancellationToken,\n          \n          \n            \n                                                                          CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n          \n          \n            \n                private BlobSetTierResponse setBlobTierWithRestResponseIntern(String containerName,\n          \n          \n            \n                                                                              String blobName,\n          \n          \n            \n                                                                              AccessTier tier,\n          \n          \n            \n                                                                              String snapshot,\n          \n          \n            \n                                                                              String versionId,\n          \n          \n            \n                                                                              Integer timeout,\n          \n          \n            \n                                                                              String version,\n          \n          \n            \n                                                                              RehydratePriority rehydratePriority,\n          \n          \n            \n                                                                              String requestId,\n          \n          \n            \n                                                                              String leaseId,\n          \n          \n            \n                                                                              String ifTags,\n          \n          \n            \n                                                                              CancellationToken cancellationToken,\n          \n          \n            \n                                                                              CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504315956", "createdAt": "2020-10-13T23:30:44Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -1013,6 +1158,94 @@ public void onFailure(@NonNull Call<Void> call, @NonNull Throwable t) {\n         }\n     }\n \n+    private BlobSetTierResponse setTierWithRestResponseIntern(String containerName,\n+                                                              String blobName,\n+                                                              AccessTier tier,\n+                                                              String snapshot,\n+                                                              String versionId,\n+                                                              Integer timeout,\n+                                                              String version,\n+                                                              RehydratePriority rehydratePriority,\n+                                                              String requestId,\n+                                                              String leaseId,\n+                                                              String ifTags,\n+                                                              CancellationToken cancellationToken,\n+                                                              CallbackWithHeader<Void, BlobSetTierHeaders> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNjE3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Call<Void> setTier(@Path(\"containerName\") String containerName,\n          \n          \n            \n                                       @Path(\"blob\") String blob,\n          \n          \n            \n                                       @Query(\"snapshot\") String snapshot,\n          \n          \n            \n                                       @Query(\"versionid\") String versionId,\n          \n          \n            \n                                       @Query(\"timeout\") Integer timeout,\n          \n          \n            \n                                       @Header(\"x-ms-version\") String version,\n          \n          \n            \n                                       @Header(\"x-ms-access-tier\") AccessTier tier,\n          \n          \n            \n                                       @Header(\"x-ms-rehydrate-priority\") RehydratePriority rehydratePriority,\n          \n          \n            \n                                       @Header(\"x-ms-client-request-id\") String requestId,\n          \n          \n            \n                                       @Header(\"x-ms-lease-id\") String leaseId,\n          \n          \n            \n                                       @Header(\"x-ms-if-tags\") String ifTags,\n          \n          \n            \n                                       @Header(\"comp\") String comp);\n          \n          \n            \n                    Call<Void> setBlobTier(@Path(\"containerName\") String containerName,\n          \n          \n            \n                                           @Path(\"blob\") String blob,\n          \n          \n            \n                                           @Query(\"snapshot\") String snapshot,\n          \n          \n            \n                                           @Query(\"versionid\") String versionId,\n          \n          \n            \n                                           @Query(\"timeout\") Integer timeout,\n          \n          \n            \n                                           @Header(\"x-ms-version\") String version,\n          \n          \n            \n                                           @Header(\"x-ms-access-tier\") AccessTier tier,\n          \n          \n            \n                                           @Header(\"x-ms-rehydrate-priority\") RehydratePriority rehydratePriority,\n          \n          \n            \n                                           @Header(\"x-ms-client-request-id\") String requestId,\n          \n          \n            \n                                           @Header(\"x-ms-lease-id\") String leaseId,\n          \n          \n            \n                                           @Header(\"x-ms-if-tags\") String ifTags,\n          \n          \n            \n                                           @Header(\"comp\") String comp);", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504316170", "createdAt": "2020-10-13T23:31:26Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -1580,6 +1813,19 @@ private static String readAsString(ResponseBody body) {\n                                      @Header(\"x-ms-encryption-key-sha256\") String encryptionKeySha256,\n                                      @Header(\"x-ms-encryption-algorithm\") EncryptionAlgorithmType encryptionAlgorithm);\n \n+        @PUT(\"{containerName}/{blob}\")\n+        Call<Void> setTier(@Path(\"containerName\") String containerName,\n+                           @Path(\"blob\") String blob,\n+                           @Query(\"snapshot\") String snapshot,\n+                           @Query(\"versionid\") String versionId,\n+                           @Query(\"timeout\") Integer timeout,\n+                           @Header(\"x-ms-version\") String version,\n+                           @Header(\"x-ms-access-tier\") AccessTier tier,\n+                           @Header(\"x-ms-rehydrate-priority\") RehydratePriority rehydratePriority,\n+                           @Header(\"x-ms-client-request-id\") String requestId,\n+                           @Header(\"x-ms-lease-id\") String leaseId,\n+                           @Header(\"x-ms-if-tags\") String ifTags,\n+                           @Header(\"comp\") String comp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 277}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNjI4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Call<Void> call = service.setTier(containerName,\n          \n          \n            \n                    Call<Void> call = service.setBlobTier(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504316284", "createdAt": "2020-10-13T23:31:56Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -1013,6 +1158,94 @@ public void onFailure(@NonNull Call<Void> call, @NonNull Throwable t) {\n         }\n     }\n \n+    private BlobSetTierResponse setTierWithRestResponseIntern(String containerName,\n+                                                              String blobName,\n+                                                              AccessTier tier,\n+                                                              String snapshot,\n+                                                              String versionId,\n+                                                              Integer timeout,\n+                                                              String version,\n+                                                              RehydratePriority rehydratePriority,\n+                                                              String requestId,\n+                                                              String leaseId,\n+                                                              String ifTags,\n+                                                              CancellationToken cancellationToken,\n+                                                              CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        cancellationToken = cancellationToken == null ? CancellationToken.NONE : cancellationToken;\n+\n+        final String comp = \"tier\";\n+\n+        Call<Void> call = service.setTier(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzM0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return storageBlobServiceClient.setTier(containerName,  blobName, tier);\n          \n          \n            \n                    return storageBlobServiceClient.setBlobTier(containerName,  blobName, tier);", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317345", "createdAt": "2020-10-13T23:35:34Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -199,6 +202,66 @@ public BlobGetPropertiesResponse getBlobPropertiesWithRestResponse(String contai\n             cancellationToken);\n     }\n \n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    public Void setBlobTier(String containerName,\n+                            String blobName,\n+                            AccessTier tier) {\n+        return storageBlobServiceClient.setTier(containerName,  blobName, tier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzUwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return storageBlobServiceClient.setTierWithRestResponse(containerName,\n          \n          \n            \n                    return storageBlobServiceClient.setBlobTierWithRestResponse(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317502", "createdAt": "2020-10-13T23:36:05Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -199,6 +202,66 @@ public BlobGetPropertiesResponse getBlobPropertiesWithRestResponse(String contai\n             cancellationToken);\n     }\n \n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     */\n+    public Void setBlobTier(String containerName,\n+                            String blobName,\n+                            AccessTier tier) {\n+        return storageBlobServiceClient.setTier(containerName,  blobName, tier);\n+    }\n+\n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName         The container name.\n+     * @param blobName              The blob name.\n+     * @param tier                  The access tier.\n+     * @param snapshot              The snapshot parameter is an opaque DateTime value that, when present, specifies\n+     *                              the blob snapshot to retrieve. For more information on working with blob snapshots,\n+     *                              see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout               The timeout parameter is expressed in seconds. For more information, see\n+     *                              &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version               Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority     The rehydrate priority.\n+     * @param blobRequestConditions Object that contains values which will restrict the successful operation of a\n+     *                              variety of requests to the conditions present. These conditions are entirely\n+     *                              optional.\n+     * @param requestId             Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                              recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken     The token to request cancellation.\n+     * @return The response information returned from the server when setting a blob's access tier.\n+     */\n+    public BlobSetTierResponse setBlobTierWithRestResponse(String containerName,\n+                                                           String blobName,\n+                                                           AccessTier tier,\n+                                                           String snapshot,\n+                                                           Integer timeout,\n+                                                           String version,\n+                                                           RehydratePriority rehydratePriority,\n+                                                           BlobRequestConditions blobRequestConditions,\n+                                                           String requestId,\n+                                                           CancellationToken cancellationToken) {\n+        blobRequestConditions = blobRequestConditions == null ? new BlobRequestConditions() : blobRequestConditions;\n+\n+        return storageBlobServiceClient.setTierWithRestResponse(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    storageBlobServiceClient.setTier(containerName,\n          \n          \n            \n                    storageBlobServiceClient.setBlobTier(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317600", "createdAt": "2020-10-13T23:36:26Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -374,6 +376,73 @@ public void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    public void setBlobTier(String containerName,\n+                            String blobName,\n+                            AccessTier tier,\n+                            CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        storageBlobServiceClient.setTier(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzY0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    storageBlobServiceClient.setTier(containerName,\n          \n          \n            \n                    storageBlobServiceClient.setBlobTier(containerName,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317646", "createdAt": "2020-10-13T23:36:35Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -374,6 +376,73 @@ public void getBlobProperties(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param tier          The access tier.\n+     * @param callback      The callback that receives the response.\n+     */\n+    public void setBlobTier(String containerName,\n+                            String blobName,\n+                            AccessTier tier,\n+                            CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        storageBlobServiceClient.setTier(containerName,\n+            blobName,\n+            tier,\n+            callback);\n+    }\n+\n+    /**\n+     * Sets the blob's tier.\n+     *\n+     * @param containerName         The container name.\n+     * @param blobName              The blob name.\n+     * @param tier                  The access tier.\n+     * @param snapshot              The snapshot parameter is an opaque DateTime value that, when present, specifies\n+     *                              the blob snapshot to retrieve. For more information on working with blob snapshots,\n+     *                              see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout               The timeout parameter is expressed in seconds. For more information, see\n+     *                              &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version               Specifies the version of the operation to use for this request.\n+     * @param rehydratePriority     The rehydrate priority.\n+     * @param blobRequestConditions Object that contains values which will restrict the successful operation of a\n+     *                              variety of requests to the conditions present. These conditions are entirely\n+     *                              optional.\n+     * @param requestId             Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                              recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken     The token to request cancellation.\n+     * @param callback              Callback that receives the response.\n+     */\n+    public void setBlobTier(String containerName,\n+                            String blobName,\n+                            AccessTier tier,\n+                            String snapshot,\n+                            Integer timeout,\n+                            String version,\n+                            RehydratePriority rehydratePriority,\n+                            BlobRequestConditions blobRequestConditions,\n+                            String requestId,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<Void, BlobSetTierHeaders> callback) {\n+        blobRequestConditions = blobRequestConditions == null ? new BlobRequestConditions() : blobRequestConditions;\n+\n+        storageBlobServiceClient.setTier(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzgwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setTier() {\n          \n          \n            \n                public void setBlobTier() {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317802", "createdAt": "2020-10-13T23:37:11Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzg1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // When setting tier on a blob using setTier().\n          \n          \n            \n                    // When setting the tier on a blob using setBlobTier().", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317856", "createdAt": "2020-10-13T23:37:21Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzkxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setTier_withCallback() {\n          \n          \n            \n                public void setBlobTier_withCallback() {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317919", "createdAt": "2020-10-13T23:37:36Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzk2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // When setting tier on a blob using setTier() while providing a callback.\n          \n          \n            \n                    // When setting the tier on a blob using setBlobTier() while providing a callback.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504317969", "createdAt": "2020-10-13T23:37:46Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODA0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setTierWithRestResponse() {\n          \n          \n            \n                public void setBlobTierWithRestResponse() {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504318047", "createdAt": "2020-10-13T23:38:04Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+\n+        storageBlobAsyncClient.setBlobTier(\"container\",\n+            \"blob\",\n+            AccessTier.HOT,\n+            new CallbackWithHeader<Void, BlobSetTierHeaders>() {\n+                @Override\n+                public void onSuccess(Void result, BlobSetTierHeaders header, Response response) {\n+                    try {\n+                        // Then a response without body and status code 202 will be returned by the server to the callback.\n+                        assertEquals(202, response.code());\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    try {\n+                        throw new RuntimeException(throwable);\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+            });\n+\n+        awaitOnLatch(latch, \"setTier\");\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODEyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // When setting tier on a blob using setTierWithResponse().\n          \n          \n            \n                    // When setting the tier on a blob using setBlobTierWithResponse().", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504318126", "createdAt": "2020-10-13T23:38:19Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+\n+        storageBlobAsyncClient.setBlobTier(\"container\",\n+            \"blob\",\n+            AccessTier.HOT,\n+            new CallbackWithHeader<Void, BlobSetTierHeaders>() {\n+                @Override\n+                public void onSuccess(Void result, BlobSetTierHeaders header, Response response) {\n+                    try {\n+                        // Then a response without body and status code 202 will be returned by the server to the callback.\n+                        assertEquals(202, response.code());\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    try {\n+                        throw new RuntimeException(throwable);\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+            });\n+\n+        awaitOnLatch(latch, \"setTier\");\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTierWithResponse().", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODE2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setTierWithRestResponse_withCallback() {\n          \n          \n            \n                public void setBlobTierWithRestResponse_withCallback() {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504318163", "createdAt": "2020-10-13T23:38:27Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+\n+        storageBlobAsyncClient.setBlobTier(\"container\",\n+            \"blob\",\n+            AccessTier.HOT,\n+            new CallbackWithHeader<Void, BlobSetTierHeaders>() {\n+                @Override\n+                public void onSuccess(Void result, BlobSetTierHeaders header, Response response) {\n+                    try {\n+                        // Then a response without body and status code 202 will be returned by the server to the callback.\n+                        assertEquals(202, response.code());\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    try {\n+                        throw new RuntimeException(throwable);\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+            });\n+\n+        awaitOnLatch(latch, \"setTier\");\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTierWithResponse().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        BlobSetTierResponse response =\n+            storageBlobClient.setBlobTierWithRestResponse(\"container\",\n+                \"blob\",\n+                AccessTier.HOT,\n+                null,\n+                null,\n+                null,\n+                null,\n+                null,\n+                null,\n+                CancellationToken.NONE);\n+\n+        assertEquals(202, response.getStatusCode());\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse_withCallback() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxODIxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // When setting tier on a blob using setTier() while providing a callback.\n          \n          \n            \n                    // When setting the tier on a blob using setTier() while providing a callback.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504318210", "createdAt": "2020-10-13T23:38:35Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -363,6 +365,134 @@ public void onFailure(Throwable error, Response response) {\n         awaitOnLatch(latch, \"getBlobPropertiesWithRestResponse\");\n     }\n \n+    @Test\n+    public void setTier() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        Void response = storageBlobClient.setBlobTier(\"container\",\n+            \"blob\", AccessTier.HOT);\n+\n+        assertNull(response);\n+    }\n+\n+    @Test\n+    public void setTier_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+\n+        storageBlobAsyncClient.setBlobTier(\"container\",\n+            \"blob\",\n+            AccessTier.HOT,\n+            new CallbackWithHeader<Void, BlobSetTierHeaders>() {\n+                @Override\n+                public void onSuccess(Void result, BlobSetTierHeaders header, Response response) {\n+                    try {\n+                        // Then a response without body and status code 202 will be returned by the server to the callback.\n+                        assertEquals(202, response.code());\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    try {\n+                        throw new RuntimeException(throwable);\n+                    } finally {\n+                        latch.countDown();\n+                    }\n+                }\n+            });\n+\n+        awaitOnLatch(latch, \"setTier\");\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTierWithResponse().\n+        MockResponse mockResponse = new MockResponse()\n+            .setResponseCode(202);\n+\n+        mockWebServer.enqueue(mockResponse);\n+\n+        // Then a response without body and status code 202 will be returned by the server.\n+        BlobSetTierResponse response =\n+            storageBlobClient.setBlobTierWithRestResponse(\"container\",\n+                \"blob\",\n+                AccessTier.HOT,\n+                null,\n+                null,\n+                null,\n+                null,\n+                null,\n+                null,\n+                CancellationToken.NONE);\n+\n+        assertEquals(202, response.getStatusCode());\n+    }\n+\n+    @Test\n+    public void setTierWithRestResponse_withCallback() {\n+        // Given a StorageBlobClient.\n+\n+        // When setting tier on a blob using setTier() while providing a callback.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTA1MzQy", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-507905342", "createdAt": "2020-10-13T23:53:02Z", "commit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo1MzowMlrOHg9ZSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzo1MzowMlrOHg9ZSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjM3Nw==", "bodyText": "Linking the property Javadoc instead of writing it all over again.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Get the clientRequestId property: If a client request id header is sent\n          \n          \n            \n                 * in the request, this header will be present in the response with the\n          \n          \n            \n                 * same value.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return the clientRequestId value.\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Get the {@link BlobSetTierHeaders#clientRequestId} property.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return the clientRequestId value.\n          \n          \n            \n                 */", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#discussion_r504322377", "createdAt": "2020-10-13T23:53:02Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobSetTierHeaders.java", "diffHunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.storage.blob.models;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+\n+/**\n+ * Defines headers for SetTier operation.\n+ */\n+@JacksonXmlRootElement(localName = \"Blob-SetTier-Headers\")\n+public class BlobSetTierHeaders {\n+    /*\n+     * If a client request id header is sent in the request, this header will\n+     * be present in the response with the same value.\n+     */\n+    @JsonProperty(value = \"x-ms-client-request-id\")\n+    private String clientRequestId;\n+\n+    /*\n+     * This header uniquely identifies the request that was made and can be\n+     * used for troubleshooting the request.\n+     */\n+    @JsonProperty(value = \"x-ms-request-id\")\n+    private String requestId;\n+\n+    /*\n+     * Indicates the version of the Blob service used to execute the request.\n+     * This header is returned for requests made against version 2009-09-19 and\n+     * newer.\n+     */\n+    @JsonProperty(value = \"x-ms-version\")\n+    private String version;\n+\n+    /**\n+     * Get the clientRequestId property: If a client request id header is sent\n+     * in the request, this header will be present in the response with the\n+     * same value.\n+     *\n+     * @return the clientRequestId value.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405f6a3b104cb963fd1b0d8b64194c8001e043a7"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "183e72276afceee0a4e993884fb018675760d5ae", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/183e72276afceee0a4e993884fb018675760d5ae", "committedDate": "2020-10-14T03:32:42Z", "message": "Added a bunch of network tests for container apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ca631081e4a802f484b049fa859d1b6259f0ae", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/24ca631081e4a802f484b049fa859d1b6259f0ae", "committedDate": "2020-10-14T16:25:52Z", "message": "Fixed some formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7492ee526ecb5fc3c23cff1294d783ea1f2e8991", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/7492ee526ecb5fc3c23cff1294d783ea1f2e8991", "committedDate": "2020-10-14T17:05:05Z", "message": "Added some blob tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc7d944e483eac9f8dd49be03b4e4ea955a18840", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/cc7d944e483eac9f8dd49be03b4e4ea955a18840", "committedDate": "2020-10-14T17:10:00Z", "message": "Merge remote-tracking branch 'rickle-msft/createContainer' into blobTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7155179db78c8a6f14c9030aced61cb7a3bacf3d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/7155179db78c8a6f14c9030aced61cb7a3bacf3d", "committedDate": "2020-10-14T19:20:02Z", "message": "Added some more commit block list tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6929a9ab8723590c57f36d539ab63dab48c114c7", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/6929a9ab8723590c57f36d539ab63dab48c114c7", "committedDate": "2020-10-14T20:36:25Z", "message": "Added more block blob tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de294c0d245bf0d0e2c051c4d73eb2ed2132e21c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/de294c0d245bf0d0e2c051c4d73eb2ed2132e21c", "committedDate": "2020-10-14T20:59:21Z", "message": "Added Access condition tests for blob delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "309cca429440a102a9d30c3ac9c4a7c0b9f38abe", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/309cca429440a102a9d30c3ac9c4a7c0b9f38abe", "committedDate": "2020-10-14T22:03:20Z", "message": "Added tests for blobs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbed26785e8c7b3f11ac37854f16c1eb1284bae4", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/dbed26785e8c7b3f11ac37854f16c1eb1284bae4", "committedDate": "2020-10-14T23:05:17Z", "message": "Merge branch 'blobTests' into storage/setAccessTier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf78e07f585b82b16dccd4a4554a7b773cdb61ac", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/bf78e07f585b82b16dccd4a4554a7b773cdb61ac", "committedDate": "2020-10-15T19:12:57Z", "message": "Added tests for setAccessTier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b4441fc05eb6460ab68193bd8496065994ac97", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/d1b4441fc05eb6460ab68193bd8496065994ac97", "committedDate": "2020-10-19T23:59:40Z", "message": "Merge branch 'master' into storage/setAccessTier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc0d6148c861aa7cfbc33f3a4c8adf93f4555e08", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/cc0d6148c861aa7cfbc33f3a4c8adf93f4555e08", "committedDate": "2020-10-20T00:03:38Z", "message": "Fixed test imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a4f09281dd0ef2c60e0ca50bcab8e6297aa2a3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/66a4f09281dd0ef2c60e0ca50bcab8e6297aa2a3", "committedDate": "2020-10-20T16:55:11Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57c3560507742aa9c8856ceb080d536e198dd762", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/57c3560507742aa9c8856ceb080d536e198dd762", "committedDate": "2020-10-20T16:56:18Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4359978f0b02c16cec933f4aaec3cc723549a33b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/4359978f0b02c16cec933f4aaec3cc723549a33b", "committedDate": "2020-10-20T17:02:05Z", "message": "Renamed everything from setTier to setBlobTier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2dc5ff822eb9612f97d683327c1f96a92ae210", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/4d2dc5ff822eb9612f97d683327c1f96a92ae210", "committedDate": "2020-10-20T17:05:38Z", "message": "Last few changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDcwNTY0", "url": "https://github.com/Azure/azure-sdk-for-android/pull/386#pullrequestreview-513070564", "createdAt": "2020-10-20T19:38:14Z", "commit": {"oid": "4d2dc5ff822eb9612f97d683327c1f96a92ae210"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e36fe1bd9f541c7709de53b912043435779559f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-android/commit/4e36fe1bd9f541c7709de53b912043435779559f", "committedDate": "2020-10-20T19:41:58Z", "message": "Fixed up last few set tier to set blob tier in BLobTest and Impl"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1246, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}