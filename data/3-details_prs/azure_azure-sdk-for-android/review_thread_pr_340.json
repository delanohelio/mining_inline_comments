{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTU4NDcy", "number": 340, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDozODo0MlrOEjX_pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyNjowN1rOEjt1Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTI4NzQzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/Callback.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDozODo0MlrOHRsTPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDozODo0MlrOHRsTPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxMzY2Mg==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param response  The response, if available for the failure.\n          \n          \n            \n                 * @param response  The response for the failure, if available.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488313662", "createdAt": "2020-09-15T00:38:42Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/Callback.java", "diffHunk": "@@ -12,14 +12,16 @@\n     /**\n      * The method to call on a successful result.\n      *\n+     * @param result   The result.\n      * @param response The response.\n      */\n-    void onResponse(T response);\n+    void onSuccess(T result, okhttp3.Response response);\n \n     /**\n      * The method to call on failure.\n      *\n-     * @param t A throwable with the failure details.\n+     * @param throwable A throwable with the failure details.\n+     * @param response  The response, if available for the failure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTI4OTM3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDozOTozOFrOHRsUSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDozOTozOFrOHRsUSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxMzkyOQ==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param response  The response, if available for the failure.\n          \n          \n            \n                 * @param response  The response for the failure, if available.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488313929", "createdAt": "2020-09-15T00:39:38Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);\n+\n+    /**\n+     * The method to call on failure.\n+     *\n+     * @param throwable A throwable with the failure details.\n+     * @param response  The response, if available for the failure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTI5NDA2OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo0MjowN1rOHRsXFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODozNzo1N1rOHSO_Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA==", "bodyText": "It is not clear H is a single or a collection. Consider making it clear. Single will be less useful, IMHO. If this can only be retrofit headers, make it clear, i.e., use the concrete rather than abstraction. Notice that okhttp3.Response already contains headers, what this additional H is meant for? Adding headers? but that doesn't make much sense in the response context (request maybe). I must be missing something", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488314644", "createdAt": "2020-09-15T00:42:07Z", "author": {"login": "JianpingChen"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0OTc5OA==", "bodyText": "It will be a single type. Basically swagger will define a header class type (H), whose properties are set from subset of raw http response headers. This often means those headers has special meaning or important for the service. All storage apis uses this pattern.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488349798", "createdAt": "2020-09-15T02:46:28Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgwNDYwNw==", "bodyText": "But they have to be part of okhttp3.Response.getHeaders() to be transported across, correct? If that's true, it is already contained in okhttp3.Response.getHeaders(). It is just when we interpret these headers, we need some kind of convenience, e.g. getBodyLength() or hasPagingHeader()/getPagingHeader(). To me, these convenience functions more belong to Response<T> class or its derivation. So instead of CallbackWithHeader, we may consider having Callback<Response<T>> where Response<T> class may interpret the raw okhttp3 headers for our convenience.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488804607", "createdAt": "2020-09-15T16:32:56Z", "author": {"login": "JianpingChen"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMDQyNw==", "bodyText": "For example, if ListBlobFlatSegmentHeaders is expected from the response, a class derived from Response<T>, e.g. ListBlobResponse, may provide function like getListBlobFlatSegmentHeaders(): ListBlobFlatSegmentHeaders where the corresponding raw header value is parsed into ListBlobFlatSegmentHeaders. When callback.onSuccess(listBlobResponse) is called, the header is already parsed. This way parsing of that particular header value will only happen in one place and one place only, in this case in ListBlobResponse only.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488820427", "createdAt": "2020-09-15T16:58:52Z", "author": {"login": "JianpingChen"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg0MDA5MQ==", "bodyText": "Thanks, JP. Like you explained, we do have the concept similar to ListBlobResponse that composing:\n\"(1). deserialized body\" + \"(2). deserialized header\" ListBlobFlatSegmentHeaders.\nWe return  ListBlobResponse from \"sync\" calls.\nFor async calls, we always want to emit the \"deserialized body\" and raw-response as a separate value, for example, if we take Callback\nCallback::onSuccess(T deserializedBody, okhttp3.response rawResponse)\nif we want a consistent \"extended\" signature for storage, it looks like (as in this PR)\nCallback::onSuccess(T deserializedBody,  H deserialziedHeader,  okhttp3.response rawResponse)\n\nOf course,  alternatively we consistent with the \"sync\" case i.e. Callback::onSuccess(U result) where result = \"T deserializedBody +  H deserialziedHeader + response\".\nBut I would rather ensure consistency within \"async\" rather across \"sync\" and \"async\", often use-case is either use \"sync client\" or use \"async client\", not a mix of these two.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488840091", "createdAt": "2020-09-15T17:29:06Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4MTk5MA==", "bodyText": "To me, reuse existing code, ListBlobResponse, makes more sense. But if you have good reasons, I'll pass then.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488881990", "createdAt": "2020-09-15T18:37:57Z", "author": {"login": "JianpingChen"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/CallbackWithHeader.java", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.android.core.http;\n+\n+/**\n+ * Callback to receive a service operation result.\n+ *\n+ * @param <T> The type of the result.\n+ * @param <T> The type of the header.\n+ */\n+public interface CallbackWithHeader<T, H> {\n+    /**\n+     * The method to call on a successful result.\n+     *\n+     * @param result   The result.\n+     * @param header   The custom header value.\n+     * @param response The response.\n+     */\n+    void onSuccess(T result, H header, okhttp3.Response response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNDY0NA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMyMDk2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo1NToyN1rOHRsmUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoyOTo0N1rOHSbyfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxODU0NQ==", "bodyText": "Check nullness?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488318545", "createdAt": "2020-09-15T00:55:27Z", "author": {"login": "JianpingChen"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1MDIzMA==", "bodyText": "PageId will be null for first page and nextPageId will be null for last page.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488350230", "createdAt": "2020-09-15T02:48:15Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxODU0NQ=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3OTQ1MQ==", "bodyText": "That's what I thought the first time around when working on our PagedCollection and Page, do we want to have a similar approach there? I mean not having a getFirstPage() method and getting the first page by passing a null pageId to getPage().", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488879451", "createdAt": "2020-09-15T18:33:05Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxODU0NQ=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4NDEzOA==", "bodyText": "But caching cannot use a null as key, to my understanding. The fact a pageId can sometimes be null will only may code more complicated. I'd hope the calling code can fake a pageId when it is not supposed to be returned (using the fetching Url, for example).", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488884138", "createdAt": "2020-09-15T18:41:51Z", "author": {"login": "JianpingChen"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxODU0NQ=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA5MTcwOQ==", "bodyText": "If the cache is a HashMap then null is a valid key. not sure if this is like an anti-pattern, though. I'll read a bit on that.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r489091709", "createdAt": "2020-09-16T00:29:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxODU0NQ=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMyNTE3OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo1Nzo0M1rOHRsovw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjo0OToxN1rOHRujMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxOTE2Nw==", "bodyText": "Fix annotation", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488319167", "createdAt": "2020-09-15T00:57:43Z", "author": {"login": "JianpingChen"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * Defines headers for ListBlobFlatSegment operation.\n  */\n @JacksonXmlRootElement(localName = \"Container-ListBlobFlatSegment-Headers\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1MDUxNQ==", "bodyText": "Container-ListBlobFlatSegment-Headers is the right root element name for wire data though the type name is simplified, or did I miss anything?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488350515", "createdAt": "2020-09-15T02:49:17Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * Defines headers for ListBlobFlatSegment operation.\n  */\n @JacksonXmlRootElement(localName = \"Container-ListBlobFlatSegment-Headers\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxOTE2Nw=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMyODc3OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo1OTo0M1rOHRsrEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo1OTo0M1rOHRsrEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxOTc2MA==", "bodyText": "Maybe this is a little outside of the scope of this PR but I was thinking it might make more sense to name this operation listBlobs()?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488319760", "createdAt": "2020-09-15T00:59:43Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -244,11 +248,24 @@ public void cancel(Context context, long transferId) {\n     public void getBlobsInPage(String pageId,\n                                String containerName,\n                                ListBlobsOptions options,\n-                               Callback<List<BlobItem>> callback) {\n-        this.storageBlobServiceClient.getBlobsInPage(pageId,\n+                               Callback<BlobsPage> callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMyOTM4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMDowMVrOHRsrbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMDowMVrOHRsrbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxOTg1Mg==", "bodyText": "Same comment about naming this listBlobs()?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488319852", "createdAt": "2020-09-15T01:00:01Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -266,24 +283,37 @@ public void getBlobsInPage(String pageId,\n      * @param callback          Callback that receives the response.\n      * @param cancellationToken The token to request cancellation.\n      */\n-    public void getBlobsInPageWithRestResponse(String pageId,\n-                                               String containerName,\n-                                               String prefix,\n-                                               Integer maxResults,\n-                                               List<ListBlobsIncludeItem> include,\n-                                               Integer timeout,\n-                                               String requestId,\n-                                               CancellationToken cancellationToken,\n-                                               Callback<ContainersListBlobFlatSegmentResponse> callback) {\n-        this.storageBlobServiceClient.getBlobsInPageWithRestResponse(pageId,\n+    public void getBlobsInPage(String pageId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMzMTI1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMToxMVrOHRssig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMToxMVrOHRssig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMDEzOA==", "bodyText": "I think list operations should use plurals.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.storageBlobServiceClient.listBlobFlatSegment(pageId,\n          \n          \n            \n                    this.storageBlobServiceClient.listBlobFlatSegments(pageId,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488320138", "createdAt": "2020-09-15T01:01:11Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -266,24 +283,37 @@ public void getBlobsInPage(String pageId,\n      * @param callback          Callback that receives the response.\n      * @param cancellationToken The token to request cancellation.\n      */\n-    public void getBlobsInPageWithRestResponse(String pageId,\n-                                               String containerName,\n-                                               String prefix,\n-                                               Integer maxResults,\n-                                               List<ListBlobsIncludeItem> include,\n-                                               Integer timeout,\n-                                               String requestId,\n-                                               CancellationToken cancellationToken,\n-                                               Callback<ContainersListBlobFlatSegmentResponse> callback) {\n-        this.storageBlobServiceClient.getBlobsInPageWithRestResponse(pageId,\n+    public void getBlobsInPage(String pageId,\n+                               String containerName,\n+                               String prefix,\n+                               Integer maxResults,\n+                               List<ListBlobsIncludeItem> include,\n+                               Integer timeout,\n+                               String requestId,\n+                               CancellationToken cancellationToken,\n+                               Callback<BlobsPage> callback) {\n+        this.storageBlobServiceClient.listBlobFlatSegment(pageId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTMzMzk5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMjoyOFrOHRsuGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowMjoyOFrOHRsuGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMDUzOQ==", "bodyText": "Is it ListBlobsFlatSegment, ListBlobFlatSegments or ListBlobFlatSegment?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488320539", "createdAt": "2020-09-15T01:02:28Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -266,24 +283,37 @@ public void getBlobsInPage(String pageId,\n      * @param callback          Callback that receives the response.\n      * @param cancellationToken The token to request cancellation.\n      */\n-    public void getBlobsInPageWithRestResponse(String pageId,\n-                                               String containerName,\n-                                               String prefix,\n-                                               Integer maxResults,\n-                                               List<ListBlobsIncludeItem> include,\n-                                               Integer timeout,\n-                                               String requestId,\n-                                               CancellationToken cancellationToken,\n-                                               Callback<ContainersListBlobFlatSegmentResponse> callback) {\n-        this.storageBlobServiceClient.getBlobsInPageWithRestResponse(pageId,\n+    public void getBlobsInPage(String pageId,\n+                               String containerName,\n+                               String prefix,\n+                               Integer maxResults,\n+                               List<ListBlobsIncludeItem> include,\n+                               Integer timeout,\n+                               String requestId,\n+                               CancellationToken cancellationToken,\n+                               Callback<BlobsPage> callback) {\n+        this.storageBlobServiceClient.listBlobFlatSegment(pageId,\n             containerName,\n             prefix,\n             maxResults,\n             include,\n             timeout,\n             requestId,\n             cancellationToken,\n-            callback);\n+            new CallbackWithHeader<ListBlobsFlatSegmentResponse, ListBlobFlatSegmentHeaders>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTM0MzQ2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowNzoxM1rOHRszcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowNzoxM1rOHRszcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMTkwNg==", "bodyText": "nit: To avoid code duplication we can have this method define the callback and call the overload that includes all optional arguments (the one below).", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488321906", "createdAt": "2020-09-15T01:07:13Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -244,11 +248,24 @@ public void cancel(Context context, long transferId) {\n     public void getBlobsInPage(String pageId,\n                                String containerName,\n                                ListBlobsOptions options,\n-                               Callback<List<BlobItem>> callback) {\n-        this.storageBlobServiceClient.getBlobsInPage(pageId,\n+                               Callback<BlobsPage> callback) {\n+        this.storageBlobServiceClient.listBlobFlatSegment(pageId,\n             containerName,\n             options,\n-            callback);\n+            new CallbackWithHeader<ListBlobsFlatSegmentResponse, ListBlobFlatSegmentHeaders>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTM1NDcyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToxMzo0OVrOHRs5_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToxMzo0OVrOHRs5_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMzU4MQ==", "bodyText": "This can either be listBlobs() or the following:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.storageBlobServiceClient.listBlobFlatSegment(pageId,\n          \n          \n            \n                    this.storageBlobServiceClient.listBlobFlatSegments(pageId,", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488323581", "createdAt": "2020-09-15T01:13:49Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -244,11 +248,24 @@ public void cancel(Context context, long transferId) {\n     public void getBlobsInPage(String pageId,\n                                String containerName,\n                                ListBlobsOptions options,\n-                               Callback<List<BlobItem>> callback) {\n-        this.storageBlobServiceClient.getBlobsInPage(pageId,\n+                               Callback<BlobsPage> callback) {\n+        this.storageBlobServiceClient.listBlobFlatSegment(pageId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTM1NTc4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToxNDoyNVrOHRs6mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToxNDoyNVrOHRs6mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMzczNg==", "bodyText": "Do we need to name this rawDownload() if there is no other form of download in the impl client?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488323736", "createdAt": "2020-09-15T01:14:25Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -398,23 +428,23 @@ public void rawDownload(String containerName,\n      * @param cancellationToken     The token to request cancellation.\n      * @param callback              Callback that receives the response.\n      */\n-    public void rawDownloadWithRestResponse(String containerName,\n-                                            String blobName,\n-                                            String snapshot,\n-                                            Integer timeout,\n-                                            BlobRange range,\n-                                            BlobRequestConditions blobRequestConditions,\n-                                            Boolean getRangeContentMd5,\n-                                            Boolean getRangeContentCrc64,\n-                                            String version,\n-                                            String requestId,\n-                                            CpkInfo cpkInfo,\n-                                            CancellationToken cancellationToken,\n-                                            Callback<BlobDownloadResponse> callback) {\n+    public void rawDownload(String containerName,\n+                            String blobName,\n+                            String snapshot,\n+                            Integer timeout,\n+                            BlobRange range,\n+                            BlobRequestConditions blobRequestConditions,\n+                            Boolean getRangeContentMd5,\n+                            Boolean getRangeContentCrc64,\n+                            String version,\n+                            String requestId,\n+                            CpkInfo cpkInfo,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<ResponseBody, BlobDownloadHeaders> callback) {\n         range = range == null ? new BlobRange(0) : range;\n         blobRequestConditions = blobRequestConditions == null ? new BlobRequestConditions() : blobRequestConditions;\n \n-        storageBlobServiceClient.downloadWithRestResponse(containerName,\n+        storageBlobServiceClient.rawDownload(containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTM3Mjk4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToyMzozMlrOHRtEdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMToyMzozMlrOHRtEdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNjI2MA==", "bodyText": "The same comments about naming from the async client apply to this client.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488326260", "createdAt": "2020-09-15T01:23:32Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -6,6 +6,7 @@\n import android.content.Context;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODg0MTIxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxOToxOVrOHSOXhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoxOToxOVrOHSOXhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3MTgxMg==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public List<BlobItem>  getItems() {\n          \n          \n            \n                public List<BlobItem> getItems() {", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488871812", "createdAt": "2020-09-15T18:19:19Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobsPage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.azure.android.storage.blob.models;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BlobsPage {\n+    private final List<BlobItem> items;\n+    private final String pageId;\n+    private final String nextPageId;\n+\n+    public BlobsPage(List<BlobItem> items, String pageId, String nextPageId) {\n+        this.items = items == null ? new ArrayList<>() : items;\n+        this.pageId = pageId;\n+        this.nextPageId = nextPageId;\n+    }\n+\n+    public List<BlobItem>  getItems() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODg0NjYwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyMDo0N1rOHSOaqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODo0MjoxMlrOHSPIXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3MjYxOA==", "bodyText": "Naming: Is this going to be ListBlobFlatSegmentHeaders, ListBlobFlatSegmentsHeaders or ListBlobsHeaders?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488872618", "createdAt": "2020-09-15T18:20:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * Defines headers for ListBlobFlatSegment operation.\n  */\n @JacksonXmlRootElement(localName = \"Container-ListBlobFlatSegment-Headers\")\n-public final class ContainerListBlobFlatSegmentHeaders {\n+public final class ListBlobFlatSegmentHeaders {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4NDMxOA==", "bodyText": "ideally, the name should be coming from swagger, we can always change the name through README transformations, lets do that as part of releasing storage, and ensure consistent with iOS.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488884318", "createdAt": "2020-09-15T18:42:12Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/ListBlobFlatSegmentHeaders.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * Defines headers for ListBlobFlatSegment operation.\n  */\n @JacksonXmlRootElement(localName = \"Container-ListBlobFlatSegment-Headers\")\n-public final class ContainerListBlobFlatSegmentHeaders {\n+public final class ListBlobFlatSegmentHeaders {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3MjYxOA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODg1MjQzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyMjo0MFrOHSOebQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyMjo0MFrOHSOebQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3MzU4MQ==", "bodyText": "nit: I don't think we need to have a new line here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertNotEquals(0, blobsPage.getItems()\n          \n          \n            \n                        .size());\n          \n          \n            \n                    assertNotEquals(0, blobsPage.getItems().size());", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488873581", "createdAt": "2020-09-15T18:22:40Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/android/storage/blob/StorageBlobClientTest.java", "diffHunk": "@@ -85,14 +90,15 @@ public void getBlobsInPage() {\n \n         mockWebServer.enqueue(mockResponse);\n \n-        List<BlobItem> blobItems = storageBlobClient.getBlobsInPage(null,\n+        BlobsPage blobsPage = storageBlobClient.getBlobsInPage(null,\n             \"testContainer\",\n             null);\n \n         // Then a list containing the details of the blobs will be returned by the service and converted to BlobItem\n         // objects by the client.\n-        assertNotEquals(0, blobItems.size());\n-        assertEquals(\"test.jpg\", blobItems.get(0).getName());\n+        assertNotEquals(0, blobsPage.getItems()\n+            .size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODg1NzYyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyNDowN1rOHSOhoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODo0MDowOFrOHSPEAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NDQwMA==", "bodyText": "listBlobs maybe?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488874400", "createdAt": "2020-09-15T18:24:07Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -75,12 +73,12 @@\n         this.serializerAdapter = serviceClient.getSerializerAdapter();\n     }\n \n-    List<BlobItem> getBlobsInPage(String pageId,\n-                                  String containerName,\n-                                  ListBlobsOptions options) {\n+    ListBlobsFlatSegmentResponse listBlobFlatSegment(String pageId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4MzIwMQ==", "bodyText": "it's protocol layer (hidden from user) and is how named in swagger, we can revisit this once azure-core is released, storage we have more time to clean up.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488883201", "createdAt": "2020-09-15T18:40:08Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -75,12 +73,12 @@\n         this.serializerAdapter = serviceClient.getSerializerAdapter();\n     }\n \n-    List<BlobItem> getBlobsInPage(String pageId,\n-                                  String containerName,\n-                                  ListBlobsOptions options) {\n+    ListBlobsFlatSegmentResponse listBlobFlatSegment(String pageId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NDQwMA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODg2NTI2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODoyNjowN1rOHSOmMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxODozODowNVrOHSO_iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NTU2OA==", "bodyText": "If there's no other type of download, do we really need to name this rawDownload()?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488875568", "createdAt": "2020-09-15T18:26:07Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -445,23 +407,23 @@ BlobDownloadResponse downloadWithRestResponse(String containerName,\n      * @param cpkInfo              Additional parameters for the operation.\n      * @param callback             Callback that receives the response.\n      */\n-    void downloadWithRestResponse(String containerName,\n-                                  String blobName,\n-                                  String snapshot,\n-                                  Integer timeout,\n-                                  String range,\n-                                  String leaseId,\n-                                  Boolean rangeGetContentMD5,\n-                                  Boolean rangeGetContentCRC64,\n-                                  OffsetDateTime ifModifiedSince,\n-                                  OffsetDateTime ifUnmodifiedSince,\n-                                  String ifMatch,\n-                                  String ifNoneMatch,\n-                                  String version,\n-                                  String requestId,\n-                                  CpkInfo cpkInfo,\n-                                  CancellationToken cancellationToken,\n-                                  Callback<BlobDownloadResponse> callback) {\n+    void rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 254}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg4MjA1Ng==", "bodyText": "yes, this is what we agreed across iOS and android, rawDownload for the protocol layer and download for the managed download.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/340#discussion_r488882056", "createdAt": "2020-09-15T18:38:05Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobServiceImpl.java", "diffHunk": "@@ -445,23 +407,23 @@ BlobDownloadResponse downloadWithRestResponse(String containerName,\n      * @param cpkInfo              Additional parameters for the operation.\n      * @param callback             Callback that receives the response.\n      */\n-    void downloadWithRestResponse(String containerName,\n-                                  String blobName,\n-                                  String snapshot,\n-                                  Integer timeout,\n-                                  String range,\n-                                  String leaseId,\n-                                  Boolean rangeGetContentMD5,\n-                                  Boolean rangeGetContentCRC64,\n-                                  OffsetDateTime ifModifiedSince,\n-                                  OffsetDateTime ifUnmodifiedSince,\n-                                  String ifMatch,\n-                                  String ifNoneMatch,\n-                                  String version,\n-                                  String requestId,\n-                                  CpkInfo cpkInfo,\n-                                  CancellationToken cancellationToken,\n-                                  Callback<BlobDownloadResponse> callback) {\n+    void rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg3NTU2OA=="}, "originalCommit": {"oid": "9cabfcc693712c238fbb8852b4921581246a3857"}, "originalPosition": 254}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2233, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}