{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTM3NjUx", "number": 242, "reviewThreads": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNjo1OVrOEEcvpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDozMzo0OVrOEE1yXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAwNzEwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNjo1OVrOGiFHUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNjo1OVrOGiFHUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4ODU2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param blockContent  the block content in bytes\n          \n          \n            \n                 * @param contentMd5    the transactional md5 for the body, to be validated by the service.\n          \n          \n            \n                 * @param blockContent  The block content in bytes.\n          \n          \n            \n                 * @param contentMd5    The transactional MD5 for the body, to be validated by the service.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438388561", "createdAt": "2020-06-10T20:26:59Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -399,6 +406,17 @@ public ServiceCall downloadWithRestResponse(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the body, to be validated by the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAwODA4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNzoyMFrOGiFH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNzoyMFrOGiFH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4ODcyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param blockContent  the block content in bytes\n          \n          \n            \n                 * @param contentMd5    the transactional md5 for the body, to be validated by the service.\n          \n          \n            \n                 * @param blockContent  The block content in bytes.\n          \n          \n            \n                 * @param contentMd5    The transactional MD5 for the body, to be validated by the service.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438388725", "createdAt": "2020-06-10T20:27:20Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -411,6 +429,19 @@ public Void stageBlock(String containerName,\n             contentMd5);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the body, to be validated by the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAwOTIxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNzozOFrOGiFIpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNzozOFrOGiFIpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4ODkwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param blockContent  the block content in bytes\n          \n          \n            \n                 * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n          \n          \n            \n                 * @param blockContent  The block content in bytes.\n          \n          \n            \n                 * @param contentMd5    The transactional MD5 for the block content, to be validated by the service.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438388903", "createdAt": "2020-06-10T20:27:38Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -425,34 +456,73 @@ public ServiceCall stageBlock(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxMDE0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyODowMFrOGiFJTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyODowMFrOGiFJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4OTA3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param blockContent  the block content in bytes\n          \n          \n            \n                 * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n          \n          \n            \n                 * @param blockContent  The block content in bytes.\n          \n          \n            \n                 * @param contentMd5    The transactional MD5 for the block content, to be validated by the service.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438389070", "createdAt": "2020-06-10T20:28:00Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -425,34 +456,73 @@ public ServiceCall stageBlock(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n+     * @param contentCrc64  Specify the transactional crc64 for the block content, to be validated by the service.\n+     * @param timeout       The timeout parameter is expressed in seconds. For more information,\n+     *     see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param leaseId       If specified, the staging only succeeds if the resource's lease is active and matches this ID.\n+     * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded\n+     *                      in the analytics logs when storage analytics logging is enabled.\n+     * @param cpkInfo       Additional parameters for the operation.\n+     * @return The response object\n+     */\n     public BlockBlobsStageBlockResponse stageBlockWithRestResponse(String containerName,\n                                                                    String blobName,\n                                                                    String base64BlockId,\n-                                                                   byte[] body,\n-                                                                   byte[] transactionalContentMD5,\n-                                                                   byte[] transactionalContentCrc64,\n+                                                                   byte[] blockContent,\n+                                                                   byte[] contentMd5,\n+                                                                   byte[] contentCrc64,\n                                                                    Integer timeout,\n                                                                    String leaseId,\n                                                                    String requestId,\n                                                                    CpkInfo cpkInfo) {\n         return this.storageBlobServiceClient.stageBlockWithRestResponse(containerName,\n             blobName,\n             base64BlockId,\n-            body,\n-            transactionalContentMD5,\n-            transactionalContentCrc64,\n+            blockContent,\n+            contentMd5,\n+            contentCrc64,\n             timeout,\n             leaseId,\n             requestId,\n             cpkInfo);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxMjEyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyODo0MlrOGiFKrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyODo0MlrOGiFKrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4OTQyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the properties about a block blob\n          \n          \n            \n                 * @return The properties about a block blob.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438389420", "createdAt": "2020-06-10T20:28:42Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -461,16 +531,30 @@ public ServiceCall stageBlockWithRestResponse(String containerName,\n         return this.storageBlobServiceClient.stageBlockWithRestResponse(containerName,\n             blobName,\n             base64BlockId,\n-            body,\n-            transactionalContentMD5,\n-            transactionalContentCrc64,\n+            blockContent,\n+            contentMd5,\n+            contentCrc64,\n             timeout,\n             leaseId,\n             requestId,\n             cpkInfo,\n             callback);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists\n+     * @return the properties about a block blob", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 199}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxMzE0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTowM1rOGiFLbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTowM1rOGiFLbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4OTYxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param overwrite      Indicate whether to overwrite the block list if already exists\n          \n          \n            \n                 * @param overwrite      Indicate whether to overwrite the block list if already exists.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438389612", "createdAt": "2020-06-10T20:29:03Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -481,24 +565,63 @@ public BlockBlobItem commitBlockList(String containerName,\n             overwrite);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 219}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxMzUwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTowOVrOGiFLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTowOVrOGiFLqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4OTY3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param overwrite      Indicate whether to overwrite the block list if already exists\n          \n          \n            \n                 * @param overwrite      Indicate whether to overwrite the block list if already exists.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438389674", "createdAt": "2020-06-10T20:29:09Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -461,16 +531,30 @@ public ServiceCall stageBlockWithRestResponse(String containerName,\n         return this.storageBlobServiceClient.stageBlockWithRestResponse(containerName,\n             blobName,\n             base64BlockId,\n-            body,\n-            transactionalContentMD5,\n-            transactionalContentCrc64,\n+            blockContent,\n+            contentMd5,\n+            contentCrc64,\n             timeout,\n             leaseId,\n             requestId,\n             cpkInfo,\n             callback);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxNDE4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOToyN1rOGiFMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOToyN1rOGiFMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4OTgxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded\n          \n          \n            \n                 * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438389811", "createdAt": "2020-06-10T20:29:27Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -425,34 +456,73 @@ public ServiceCall stageBlock(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n+     * @param contentCrc64  Specify the transactional crc64 for the block content, to be validated by the service.\n+     * @param timeout       The timeout parameter is expressed in seconds. For more information,\n+     *     see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param leaseId       If specified, the staging only succeeds if the resource's lease is active and matches this ID.\n+     * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded\n+     *                      in the analytics logs when storage analytics logging is enabled.\n+     * @param cpkInfo       Additional parameters for the operation.\n+     * @return The response object\n+     */\n     public BlockBlobsStageBlockResponse stageBlockWithRestResponse(String containerName,\n                                                                    String blobName,\n                                                                    String base64BlockId,\n-                                                                   byte[] body,\n-                                                                   byte[] transactionalContentMD5,\n-                                                                   byte[] transactionalContentCrc64,\n+                                                                   byte[] blockContent,\n+                                                                   byte[] contentMd5,\n+                                                                   byte[] contentCrc64,\n                                                                    Integer timeout,\n                                                                    String leaseId,\n                                                                    String requestId,\n                                                                    CpkInfo cpkInfo) {\n         return this.storageBlobServiceClient.stageBlockWithRestResponse(containerName,\n             blobName,\n             base64BlockId,\n-            body,\n-            transactionalContentMD5,\n-            transactionalContentCrc64,\n+            blockContent,\n+            contentMd5,\n+            contentCrc64,\n             timeout,\n             leaseId,\n             requestId,\n             cpkInfo);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n+     * @param contentCrc64  Specify the transactional crc64 for the block content, to be validated by the service.\n+     * @param timeout       The timeout parameter is expressed in seconds. For more information,\n+     *                      see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param leaseId       If specified, the staging only succeeds if the resource's lease is active and matches this ID.\n+     * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxNTU5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTo1NFrOGiFNHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTo1NFrOGiFNHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MDA0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded\n          \n          \n            \n                 * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438390044", "createdAt": "2020-06-10T20:29:54Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -425,34 +456,73 @@ public ServiceCall stageBlock(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n+     * @param contentCrc64  Specify the transactional crc64 for the block content, to be validated by the service.\n+     * @param timeout       The timeout parameter is expressed in seconds. For more information,\n+     *     see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param leaseId       If specified, the staging only succeeds if the resource's lease is active and matches this ID.\n+     * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAxNTgyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTo1OVrOGiFNSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyOTo1OVrOGiFNSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MDA5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return The response object\n          \n          \n            \n                 * @return The response object.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438390091", "createdAt": "2020-06-10T20:29:59Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -425,34 +456,73 @@ public ServiceCall stageBlock(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Creates a new block to be committed as part of a blob.\n+     *\n+     * @param containerName The container name.\n+     * @param blobName      The blob name.\n+     * @param base64BlockId A valid Base64 string value that identifies the block. Prior to encoding, the string must\n+     *                      be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n+     *                      for the base64BlockId parameter must be the same size for each block.\n+     * @param blockContent  the block content in bytes\n+     * @param contentMd5    the transactional md5 for the block content, to be validated by the service.\n+     * @param contentCrc64  Specify the transactional crc64 for the block content, to be validated by the service.\n+     * @param timeout       The timeout parameter is expressed in seconds. For more information,\n+     *     see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param leaseId       If specified, the staging only succeeds if the resource's lease is active and matches this ID.\n+     * @param requestId     Provides a client-generated, opaque value with a 1 KB character limit that is recorded\n+     *                      in the analytics logs when storage analytics logging is enabled.\n+     * @param cpkInfo       Additional parameters for the operation.\n+     * @return The response object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAyNDg4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDozMjo1NlrOGiFTOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDozMzoxOFrOGiFT9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MTYwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param requestConditions requests to the conditions\n          \n          \n            \n                 * @param requestConditions {@link BlobRequestConditions}.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438391609", "createdAt": "2020-06-10T20:32:56Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -481,24 +565,63 @@ public BlockBlobItem commitBlockList(String containerName,\n             overwrite);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists\n+     * @param callback       Callback that receives the response.\n+     * @return The service call object, representing the request scheduled for execution.\n+     */\n     public ServiceCall commitBlockList(String containerName,\n                                        String blobName,\n                                        List<String> base64BlockIds,\n                                        boolean overwrite,\n-                                       Callback<BlockBlobItem> callBack) {\n+                                       Callback<BlockBlobItem> callback) {\n         return this.storageBlobServiceClient.commitBlockList(containerName,\n             blobName,\n             base64BlockIds,\n             overwrite,\n-            callBack);\n+            callback);\n     }\n \n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param base64BlockIds    The block IDs.\n+     * @param contentMD5        Specify the transactional md5 for the body, to be validated by the service.\n+     * @param contentCrc64      Specify the transactional crc64 for the body, to be validated by the service.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information,\n+     *                          see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param blobHttpHeaders   Additional parameters for the operation.\n+     * @param metadata          Specifies a user-defined name-value pair associated with the blob.\n+     * @param requestConditions requests to the conditions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 255}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MTc5OQ==", "bodyText": "Changed this to how Java does it. Not sure if we should be more specific.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438391799", "createdAt": "2020-06-10T20:33:18Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -481,24 +565,63 @@ public BlockBlobItem commitBlockList(String containerName,\n             overwrite);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists\n+     * @param callback       Callback that receives the response.\n+     * @return The service call object, representing the request scheduled for execution.\n+     */\n     public ServiceCall commitBlockList(String containerName,\n                                        String blobName,\n                                        List<String> base64BlockIds,\n                                        boolean overwrite,\n-                                       Callback<BlockBlobItem> callBack) {\n+                                       Callback<BlockBlobItem> callback) {\n         return this.storageBlobServiceClient.commitBlockList(containerName,\n             blobName,\n             base64BlockIds,\n             overwrite,\n-            callBack);\n+            callback);\n     }\n \n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param base64BlockIds    The block IDs.\n+     * @param contentMD5        Specify the transactional md5 for the body, to be validated by the service.\n+     * @param contentCrc64      Specify the transactional crc64 for the body, to be validated by the service.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information,\n+     *                          see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param blobHttpHeaders   Additional parameters for the operation.\n+     * @param metadata          Specifies a user-defined name-value pair associated with the blob.\n+     * @param requestConditions requests to the conditions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MTYwOQ=="}, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 255}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTAyNjc0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDozMzozMVrOGiFUeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDozMzozMVrOGiFUeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MTkyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param requestConditions requests to the conditions\n          \n          \n            \n                 * @param requestConditions {@link BlobRequestConditions}.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r438391929", "createdAt": "2020-06-10T20:33:31Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -520,11 +643,36 @@ public BlockBlobsCommitBlockListResponse commitBlockListWithRestResponse(String\n             tier);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * In order to be written as part of a blob, a block must have been successfully written to the server in a prior\n+     * Put Block operation. You can call Put Block List to update a blob by uploading only those blocks that have\n+     * changed, then committing the new and existing blocks together. You can do this by specifying whether to commit\n+     * a block from the committed block list or from the uncommitted block list, or to commit the most recently uploaded\n+     * version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param base64BlockIds    The block IDs.\n+     * @param contentMD5        Specify the transactional md5 for the body, to be validated by the service.\n+     * @param contentCrc64      Specify the transactional crc64 for the body, to be validated by the service.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information,\n+     *                          see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param blobHttpHeaders   Additional parameters for the operation.\n+     * @param metadata          Specifies a user-defined name-value pair associated with the blob.\n+     * @param requestConditions requests to the conditions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7b6a7e98ff40dd4e889b521336a901292cdc45"}, "originalPosition": 304}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3NDIyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/AddDateInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1NjozN1rOGiseSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1NjozN1rOGiseSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMzQxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param chain provide access to the request to apply the HTTP Date header.\n          \n          \n            \n                 * @param chain Provide access to the request to apply the HTTP Date header.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439033418", "createdAt": "2020-06-11T19:56:37Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/AddDateInterceptor.java", "diffHunk": "@@ -20,6 +20,14 @@\n  * HTTP request.\n  */\n public class AddDateInterceptor implements Interceptor {\n+    /**\n+     * Intercept the current request in the pipeline and apply HTTP Date header.\n+     *\n+     * @param chain provide access to the request to apply the HTTP Date header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3NDg3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/CurlLoggingInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1Njo1MlrOGiseuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1Njo1MlrOGiseuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMzUzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param chain provide access to the request and response to log.\n          \n          \n            \n                 * @param chain Provide access to the request and response to log.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439033531", "createdAt": "2020-06-11T19:56:52Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/CurlLoggingInterceptor.java", "diffHunk": "@@ -39,6 +39,14 @@ public CurlLoggingInterceptor(ClientLogger clientLogger) {\n         curlCommand = new StringBuilder(\"curl\");\n     }\n \n+    /**\n+     * Intercept and log a request response pair in the pipeline as cURL commands.\n+     *\n+     * @param chain provide access to the request and response to log.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3NTY0OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/LoggingInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1NzowOVrOGisfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1NzowOVrOGisfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMzY3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param chain provide access to the request and response to log.\n          \n          \n            \n                 * @param chain Provide access to the request and response to log.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439033673", "createdAt": "2020-06-11T19:57:09Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/LoggingInterceptor.java", "diffHunk": "@@ -72,6 +72,14 @@ public LoggingInterceptor(LogOptions logOptions, ClientLogger clientLogger) {\n         }\n     }\n \n+    /**\n+     * Intercept and log a request response pair in the pipeline.\n+     *\n+     * @param chain provide access to the request and response to log.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3NzQ4OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/UserAgentInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1Nzo0NVrOGisgcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1Nzo0NVrOGisgcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzMzk3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Intercept the current request update it's the \"User-Agent\" header with the value supplied in the constructor.\n          \n          \n            \n                 * Intercept the current request and update the \"User-Agent\" header with the value supplied in the constructor.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439033971", "createdAt": "2020-06-11T19:57:45Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/UserAgentInterceptor.java", "diffHunk": "@@ -141,10 +141,16 @@ public UserAgentInterceptor(String applicationId,\n     }\n \n     /**\n-     * Updates the \"User-Agent\" header with the value supplied in the constructor.\n+     * Intercept the current request update it's the \"User-Agent\" header with the value supplied in the constructor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3OTQzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/LoggingInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1ODoyOFrOGishyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1ODoyOFrOGishyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNDMxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Intercept and log a request response pair in the pipeline.\n          \n          \n            \n                 * Intercept and log a request-response pair in the pipeline.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439034313", "createdAt": "2020-06-11T19:58:28Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/LoggingInterceptor.java", "diffHunk": "@@ -72,6 +72,14 @@ public LoggingInterceptor(LogOptions logOptions, ClientLogger clientLogger) {\n         }\n     }\n \n+    /**\n+     * Intercept and log a request response pair in the pipeline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk3OTc0OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/CurlLoggingInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1ODozN1rOGisiBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1ODozN1rOGisiBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNDM3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Intercept and log a request response pair in the pipeline as cURL commands.\n          \n          \n            \n                 * Intercept and log a request-response pair in the pipeline as cURL commands.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439034374", "createdAt": "2020-06-11T19:58:37Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/CurlLoggingInterceptor.java", "diffHunk": "@@ -39,6 +39,14 @@ public CurlLoggingInterceptor(ClientLogger clientLogger) {\n         curlCommand = new StringBuilder(\"curl\");\n     }\n \n+    /**\n+     * Intercept and log a request response pair in the pipeline as cURL commands.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk4MDgzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/AddDateInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTowMlrOGisizA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTowMlrOGisizA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNDU3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Intercept the current request in the pipeline and apply HTTP Date header.\n          \n          \n            \n                 * Intercept the current request in the pipeline and apply the HTTP \"Date\" header.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439034572", "createdAt": "2020-06-11T19:59:02Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/AddDateInterceptor.java", "diffHunk": "@@ -20,6 +20,14 @@\n  * HTTP request.\n  */\n public class AddDateInterceptor implements Interceptor {\n+    /**\n+     * Intercept the current request in the pipeline and apply HTTP Date header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk4MjIxOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/ServiceCall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTozNVrOGisjyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTozNVrOGisjyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNDgyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return true if {@link #cancel()} was called.\n          \n          \n            \n                 * @return true If {@link #cancel()} was called.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439034824", "createdAt": "2020-06-11T19:59:35Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/ServiceCall.java", "diffHunk": "@@ -28,7 +28,11 @@ public void cancel() {\n         this.call.cancel();\n     }\n \n-    /** True if {@link #cancel()} was called. */\n+    /**\n+     * Check whether {@link #cancel()} was called.\n+     *\n+     * @return true if {@link #cancel()} was called.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk4Mjk1OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/UserAgentInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTo0OFrOGiskPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTo1OTo0OFrOGiskPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNDk0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param chain provide access to the request to apply the \"User-Agent\" header.\n          \n          \n            \n                 * @param chain provide access to the request to apply the \"User-Agent\" header.\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param chain provide access to the request to apply the \"User-Agent\" header.\n          \n          \n            \n                 * @param chain Provide access to the request to apply the \"User-Agent\" header.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439034942", "createdAt": "2020-06-11T19:59:48Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/UserAgentInterceptor.java", "diffHunk": "@@ -141,10 +141,16 @@ public UserAgentInterceptor(String applicationId,\n     }\n \n     /**\n-     * Updates the \"User-Agent\" header with the value supplied in the constructor.\n+     * Intercept the current request update it's the \"User-Agent\" header with the value supplied in the constructor.\n+     *\n      * <p>\n      * When the User-Agent header already has a value and it differs from the value used to create this interceptor the\n      * User-Agent header is updated by prepending the value in this interceptor.\n+     *\n+     * @param chain provide access to the request to apply the \"User-Agent\" header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDk5NjIzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/RequestIdInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNDo1MVrOGistNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNDo1MVrOGistNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzNzIzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Intercept the current request in the pipeline and apply x-ms-client-request-id header.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param chain provide access to the request to apply the x-ms-client-request-id header.\n          \n          \n            \n                 * Intercept the current request in the pipeline and apply the \"x-ms-client-request-id\" header.\n          \n          \n            \n            \n          \n          \n            \n                 * @param chain Provide access to the request to apply the \"x-ms-client-request-id\" header.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439037239", "createdAt": "2020-06-11T20:04:51Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/http/interceptor/RequestIdInterceptor.java", "diffHunk": "@@ -19,6 +19,14 @@\n  * the request.\n  */\n public class RequestIdInterceptor implements Interceptor {\n+    /**\n+     * Intercept the current request in the pipeline and apply x-ms-client-request-id header.\n+     *\n+     * @param chain provide access to the request to apply the x-ms-client-request-id header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAwMzUzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/util/logging/ClientLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNjo1OVrOGisxlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNjo1OVrOGisxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzODM1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Get the current log level.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return the current log level\n          \n          \n            \n                 * Gets the current log level.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return The current log level.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439038356", "createdAt": "2020-06-11T20:06:59Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/util/logging/ClientLogger.java", "diffHunk": "@@ -57,14 +57,19 @@ static ClientLogger getDefault(String tag) {\n      */\n     int LOG_LEVEL_ERROR = 4;\n \n+\n     /**\n-     * Returns the logger's log level.\n+     * Get the current log level.\n+     *\n+     * @return the current log level", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAwNDgwOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/util/logging/ClientLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzoxM1rOGisyRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzoxM1rOGisyRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzODUzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param logLevel the log level\n          \n          \n            \n                 * @param logLevel The log level.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439038533", "createdAt": "2020-06-11T20:07:13Z", "author": {"login": "vcolin7"}, "path": "sdk/core/azure-core/src/main/java/com/azure/android/core/util/logging/ClientLogger.java", "diffHunk": "@@ -57,14 +57,19 @@ static ClientLogger getDefault(String tag) {\n      */\n     int LOG_LEVEL_ERROR = 4;\n \n+\n     /**\n-     * Returns the logger's log level.\n+     * Get the current log level.\n+     *\n+     * @return the current log level\n      */\n     @LogLevel\n     int getLogLevel();\n \n     /**\n      * Sets the log level for the logger.\n+     *\n+     * @param logLevel the log level", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAyNDkyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobStorageException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMTozOVrOGis_RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMTozOVrOGis_RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MTg2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets the status code of the response error.\n          \n          \n            \n                 * Gets the status code of the error response.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439041861", "createdAt": "2020-06-11T20:11:39Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobStorageException.java", "diffHunk": "@@ -41,21 +41,27 @@ public BlobStorageException(String message, okhttp3.Response response) {\n     }\n \n     /**\n-     * @return The error code returned by the service.\n+     * Gets the error code returned by the service.\n+     *\n+     * @return The error code.\n      */\n     public BlobErrorCode getErrorCode() {\n         return BlobErrorCode.fromString(super.getResponse().header(\"x-ms-error-code\"));\n     }\n \n     /**\n-     * @return The message returned by the service.\n+     * Gets the message returned by the service.\n+     *\n+     * @return The message.\n      */\n     public String getServiceMessage() {\n         return super.getMessage();\n     }\n \n     /**\n-     * @return The status code on the response.\n+     * Gets the status code of the response error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAyNjMzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMTo1NlrOGitAHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMTo1NlrOGitAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MjA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Pipeline interceptor that append SAS token to the request Uri.\n          \n          \n            \n             *  Pipeline interceptor that append SAS token to the request URI.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439042076", "createdAt": "2020-06-11T20:11:56Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "diffHunk": "@@ -15,7 +15,7 @@\n import static com.azure.android.core.util.CoreUtil.isNullOrEmpty;\n \n /**\n- *  Interceptor that append SAS token to the request Uri.\n+ *  Pipeline interceptor that append SAS token to the request Uri.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAyNzA2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjowNVrOGitAiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjowNVrOGitAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MjE4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return Response from the next interceptor in the pipeline.\n          \n          \n            \n                 * @return Response From the next interceptor in the pipeline.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439042184", "createdAt": "2020-06-11T20:12:05Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/SasTokenCredentialInterceptor.java", "diffHunk": "@@ -24,6 +24,14 @@ public SasTokenCredentialInterceptor(SasTokenCredential credential) {\n         this.credential = credential;\n     }\n \n+    /**\n+     * Intercept the current request in the pipeline and apply the SAS token.\n+     *\n+     * @param chain Provide access to the request to apply the SAS token.\n+     *\n+     * @return Response from the next interceptor in the pipeline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAyODIwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjoxOFrOGitBIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjoxOFrOGitBIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MjMzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return Response from the next interceptor in the pipeline.\n          \n          \n            \n                 * @return Response From the next interceptor in the pipeline.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439042338", "createdAt": "2020-06-11T20:12:18Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "diffHunk": "@@ -60,6 +67,14 @@ public ResponseHeadersValidationInterceptor(Collection<String> headerNames, Clie\n         logger = clientLogger;\n     }\n \n+    /**\n+     * Intercept and validate that a collection of headers have consistent values between a request and a response.\n+     *\n+     * @param chain Provide access to the response to be validated.\n+     *\n+     * @return Response from the next interceptor in the pipeline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAyOTc0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjozNVrOGitB_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjozNVrOGitB_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MjU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param headerNames  the header names\n          \n          \n            \n                 * @param clientLogger the logger\n          \n          \n            \n                 * @param headerNames The header names.\n          \n          \n            \n                 * @param clientLogger The logger.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439042556", "createdAt": "2020-06-11T20:12:35Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "diffHunk": "@@ -52,6 +56,9 @@ public ResponseHeadersValidationInterceptor(Collection<String> headerNames) {\n     /**\n      * Constructor that accepts a list of header names to validate. Adds two mandatory Storage header names as well\n      * and uses a provided {@link ClientLogger}.\n+     *\n+     * @param headerNames  the header names\n+     * @param clientLogger the logger", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAzMDM0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjo0MlrOGitCVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMjo0MlrOGitCVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MjY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param headerNames the header names\n          \n          \n            \n                 * @param headerNames The header names.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439042647", "createdAt": "2020-06-11T20:12:42Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "diffHunk": "@@ -44,6 +46,8 @@ public ResponseHeadersValidationInterceptor(ClientLogger clientLogger) {\n     /**\n      * Constructor that accepts a list of header names to validate. Adds two mandatory Storage header names as well.\n      * and uses a default {@link ClientLogger}.\n+     *\n+     * @param headerNames the header names", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTAzNTAwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMzo0MlrOGitFXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxMzo0MlrOGitFXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MzQyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param clientLogger the logger\n          \n          \n            \n                 * @param clientLogger The logger.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439043422", "createdAt": "2020-06-11T20:13:42Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/ResponseHeadersValidationInterceptor.java", "diffHunk": "@@ -34,6 +34,8 @@ public ResponseHeadersValidationInterceptor() {\n \n     /**\n      * Constructor that adds two mandatory headers used by Storage and uses a provided {@link ClientLogger}.\n+     *\n+     * @param clientLogger the logger", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA0NDUwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/NormalizeEtagInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxNTo0MVrOGitLRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoxNTo0MVrOGitLRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0NDkzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return Response from the next interceptor in the pipeline.\n          \n          \n            \n                 * @throws IOException If an IO error occurs while processing the request and response\n          \n          \n            \n                 * @return Response From the next interceptor in the pipeline.\n          \n          \n            \n                 * @throws IOException If an IO error occurs while processing the request and response.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439044934", "createdAt": "2020-06-11T20:15:41Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/interceptor/NormalizeEtagInterceptor.java", "diffHunk": "@@ -10,16 +10,22 @@\n import okhttp3.Response;\n \n /**\n- * Interceptor that wraps any potential error responses from the service and applies post processing of the response's\n- * ETag header to standardize the value.\n+ * Pipeline interceptor that wraps any potential error responses from the service and applies post processing\n+ * of the response's ETag header to standardize the value.\n  */\n public class NormalizeEtagInterceptor implements Interceptor {\n     /**\n+     * Intercept the service returned ETag value and normalize it if required.\n+     *\n+     * <p>\n      * The service is inconsistent in whether or not the ETag header value has quotes. This method will check if the\n      * response returns an ETag value, and if it does, remove any quotes that may be present to give the user a more\n      * predictable format to work with.\n      *\n-     * @return An updated response with post processing steps applied.\n+     * @param chain Provide access to the response containing ETag header to normalize.\n+     *\n+     * @return Response from the next interceptor in the pipeline.\n+     * @throws IOException If an IO error occurs while processing the request and response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA3MTU1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMTozM1rOGitdCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjozNjoxOFrOGixCnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTQ4Mg==", "bodyText": "What is the reason behind renaming this to rawDownload? Would download be reserved for the TransferClient? Is the word raw something commonly used in the Java world for an operation that directly calls an endpoint or something like that?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439049482", "createdAt": "2020-06-11T20:21:33Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes\n      */\n-    public ResponseBody download(String containerName,\n-                                 String blobName) {\n+    public ResponseBody rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5MDM5Mg==", "bodyText": "It was a preparation for the work of merging TransferClient APIs to StorageClient, similar to what iOS did, i.e. we want to discourage users from using raw GET APIs and encourage to use \"managed\" download. I'm not completely happy with this name though.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439090392", "createdAt": "2020-06-11T21:50:57Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes\n      */\n-    public ResponseBody download(String containerName,\n-                                 String blobName) {\n+    public ResponseBody rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTQ4Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMjk4Nw==", "bodyText": "Would it be a bad idea to keep download for both clients but to encourage people to use the managed operation both in the documentation and code samples? Any thoughts on this @bsiegel?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439102987", "createdAt": "2020-06-11T22:20:47Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes\n      */\n-    public ResponseBody download(String containerName,\n-                                 String blobName) {\n+    public ResponseBody rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTQ4Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwODI1Mw==", "bodyText": "Oh nevermind, looking at your other PR (#241) I piucked up on what you mean by merging both clients. I think having two different names is good, while I also feel there might be something better than the raw prefix.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439108253", "createdAt": "2020-06-11T22:36:18Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes\n      */\n-    public ResponseBody download(String containerName,\n-                                 String blobName) {\n+    public ResponseBody rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTQ4Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA3MzIzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMTo1OFrOGiteLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMTo1OFrOGiteLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTc3Mg==", "bodyText": "Same comment about renaming this method.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439049772", "createdAt": "2020-06-11T20:21:58Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes\n      */\n-    public ResponseBody download(String containerName,\n-                                 String blobName) {\n+    public ResponseBody rawDownload(String containerName,\n+                                    String blobName) {\n         return storageBlobServiceClient.download(containerName,\n             blobName);\n     }\n \n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n      * @param callback      Callback that receives the response.\n+     * @return The service call object, representing the request scheduled for execution.\n      */\n-    public ServiceCall download(String containerName,\n-                                String blobName,\n-                                Callback<ResponseBody> callback) {\n+    public ServiceCall rawDownload(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4MDIzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMzoyNVrOGitiZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMzoyNVrOGitiZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MDg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *  @param callback             Callback that receives the response.\n          \n          \n            \n                 * @param callback             Callback that receives the response.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439050852", "createdAt": "2020-06-11T20:23:25Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -239,6 +249,8 @@ public BlobGetPropertiesResponse getBlobPropertiesWithRestResponse(String contai\n      * @param requestId             Provides a client-generated, opaque value with a 1 KB character limit that is\n      *                              recorded in the analytics logs when storage analytics logging is enabled.\n      * @param cpkInfo               Additional parameters for the operation.\n+     *  @param callback             Callback that receives the response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4MTU0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMzo0MlrOGitjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMzo0MlrOGitjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MTA2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the response containing blob bytes\n          \n          \n            \n                 * @return The response containing the blob's bytes.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439051067", "createdAt": "2020-06-11T20:23:42Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -265,25 +277,41 @@ public ServiceCall getBlobPropertiesWithRestResponse(String containerName,\n     /**\n      * Reads the entire blob.\n      *\n+     * <p>\n+     * This method will execute a raw HTTP GET in order to download a single blob to the destination.\n+     * It is **STRONGLY** recommended that you use the {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, File)}\n+     * or {@link com.azure.android.storage.blob.transfer.TransferClient#download(String, String, String, Uri)} method instead - that method will\n+     * manage the transfer in the face of changing network conditions, and is able to transfer multiple\n+     * blocks in parallel.\n+     *`\n      * @param containerName The container name.\n      * @param blobName      The blob name.\n+     * @return the response containing blob bytes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4NDk3OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNDo1MFrOGitlgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNDo1MFrOGitlgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MTY0OA==", "bodyText": "Same comment about renaming download.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439051648", "createdAt": "2020-06-11T20:24:50Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -313,17 +348,17 @@ public ServiceCall download(String containerName,\n      * @param cpkInfo               Additional parameters for the operation.\n      * @return The response information returned from the server when downloading a blob.\n      */\n-    public BlobDownloadAsyncResponse downloadWithRestResponse(String containerName,\n-                                                              String blobName,\n-                                                              String snapshot,\n-                                                              Integer timeout,\n-                                                              BlobRange range,\n-                                                              BlobRequestConditions blobRequestConditions,\n-                                                              Boolean getRangeContentMd5,\n-                                                              Boolean getRangeContentCrc64,\n-                                                              String version,\n-                                                              String requestId,\n-                                                              CpkInfo cpkInfo) {\n+    public BlobDownloadResponse rawDownloadWithRestResponse(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4NTM4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNTowMFrOGitlyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNTowMFrOGitlyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MTcyMA==", "bodyText": "Same comment about renaming download.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439051720", "createdAt": "2020-06-11T20:25:00Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -365,19 +407,21 @@ public BlobDownloadAsyncResponse downloadWithRestResponse(String containerName,\n      * @param requestId             Provides a client-generated, opaque value with a 1 KB character limit that is\n      *                              recorded in the analytics logs when storage analytics logging is enabled.\n      * @param cpkInfo               Additional parameters for the operation.\n+     * @param callback              Callback that receives the response.\n+     * @return The service call object, representing the request scheduled for execution.\n      */\n-    public ServiceCall downloadWithRestResponse(String containerName,\n-                                                String blobName,\n-                                                String snapshot,\n-                                                Integer timeout,\n-                                                BlobRange range,\n-                                                BlobRequestConditions blobRequestConditions,\n-                                                Boolean getRangeContentMd5,\n-                                                Boolean getRangeContentCrc64,\n-                                                String version,\n-                                                String requestId,\n-                                                CpkInfo cpkInfo,\n-                                                Callback<BlobDownloadAsyncResponse> callback) {\n+    public ServiceCall rawDownloadWithRestResponse(String containerName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 228}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4Njc2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNTozMFrOGitmtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNTozMFrOGitmtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MTk1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the properties of the block blob\n          \n          \n            \n                 * @return The properties of the block blob", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439051956", "createdAt": "2020-06-11T20:25:30Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -461,16 +568,30 @@ public ServiceCall stageBlockWithRestResponse(String containerName,\n         return this.storageBlobServiceClient.stageBlockWithRestResponse(containerName,\n             blobName,\n             base64BlockId,\n-            body,\n-            transactionalContentMD5,\n-            transactionalContentCrc64,\n+            blockContent,\n+            contentMd5,\n+            contentCrc64,\n             timeout,\n             leaseId,\n             requestId,\n             cpkInfo,\n             callback);\n     }\n \n+    /**\n+     * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the blob.\n+     * For a block to be written as part of a blob, the block must have been successfully written to the server in a prior\n+     * {@link StorageBlobClient#stageBlock(String, String, String, byte[], byte[])} operation. You can call commit Block List\n+     * to update a blob by uploading only those blocks that have changed, then committing the new and existing blocks together.\n+     * You can do this by specifying whether to commit a block from the committed block list or from the uncommitted block list,\n+     * or to commit the most recently uploaded version of the block, whichever list it may belong to.\n+     *\n+     * @param containerName  The container name.\n+     * @param blobName       The blob name.\n+     * @param base64BlockIds The block IDs.\n+     * @param overwrite      Indicate whether to overwrite the block list if already exists.\n+     * @return the properties of the block blob", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 393}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA4OTcxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNjoyOFrOGitoqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNjoyOFrOGitoqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MjQ1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param storageBlobClientId the identifier of the blob storage client to use for the download\n          \n          \n            \n                 * @param storageBlobClientId The identifier of the blob storage client to use for the download", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439052458", "createdAt": "2020-06-11T20:26:28Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "diffHunk": "@@ -210,10 +210,10 @@ private TransferClient(Context context,\n      * @param storageBlobClientId the identifier of the blob storage client to use for the download", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA5MDkwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNjo1M1rOGitpbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNjo1M1rOGitpbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1MjY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * @param context the application context\n          \n          \n            \n                     * @param context The application context.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439052654", "createdAt": "2020-06-11T20:26:53Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "diffHunk": "@@ -607,6 +607,8 @@ private StopCheck(boolean canStop, boolean isUpload) {\n \n         /**\n          * Create a new {@link TransferClient} builder.\n+         *\n+         * @param context the application context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA5MTUzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNzowM1rOGitpzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyNzowM1rOGitpzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1Mjc0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * @param storageBlobClient the blob storage client.\n          \n          \n            \n                     * @param storageBlobClient The blob storage client.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439052748", "createdAt": "2020-06-11T20:27:03Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/transfer/TransferClient.java", "diffHunk": "@@ -623,8 +625,8 @@ public Builder(@NonNull Context context) {\n          *   it is recommended to use a value unique to your application (e.g. \"MyApplication\").\n          *   If your application uses multiple clients with different configurations, use a value unique\n          *   to both your application and the configuration (e.g. \"MyApplication.userClient\").\n-         * @param storageBlobClient the blob storage client\n-         * @return Builder with the provided blob storage client set\n+         * @param storageBlobClient the blob storage client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTExMDA2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDozMzo0OVrOGit19g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMTo0NTozMVrOGjVCMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg==", "bodyText": "Java has two distinct types: BlobDownloadResponse and BlobDownloadAsyncResponse. I originally decided to go for the latter because our use case lined up with what Java has.\nDo you think we will add something like Java's BlobDownloadResponse where no ResponseBody is returned but rather written to something like an OutputStream? I tend to think so.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439055862", "createdAt": "2020-06-11T20:33:49Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4NTcyMA==", "bodyText": "Right, Java has BlobDownloadAsyncResponse to support Flux that asynchronously streams the bytes from the connection, so the text \"async\" in the model indicates that it composes \"async\" Flux.\nIn the Android case, BlobDownloadAsyncResponse  was composing ResponseBody that exposes InputStream from which we can \"synch\"-ronously read the bytes from the connection. This is why I removed the text \"async\", in addition to that, it looks also weird when that type listed in the JavaDoc with our other Response types.", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439085720", "createdAt": "2020-06-11T21:42:21Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwNTUyOQ==", "bodyText": "Since the decision to read the bytes synchronously would come down to us, do you think there could be a point where we would want to go the fully async route with ResponseBody? (i.e. using byteStream).", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439105529", "createdAt": "2020-06-11T22:28:14Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExOTUyMA==", "bodyText": "byteStream() API returns \"InputStream\", in my previous comment when I said \"sync\" read I mean that the InputStream::read API itself is blocking. i.e. can't do something like below with IS:\nInputStream.readAsync(bytes_count, new CallBack(byte[] bytes) {\n});\nSo even though we can asynchronously return BlobDownloadResponse, we can't asynchronously read the content:\ndownloadAsync(params, new CallBack<BlobDownloadResponse>() {\n    // This is async\n    public void onResponse(BlobDownloadResponse res) {\n         // below read is not async but sync.\n         res.resposeBody.byteStream().read();\n    }\n}", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439119520", "createdAt": "2020-06-11T23:11:37Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3Nzc3Mw==", "bodyText": "Does this mean we won't be able to asynchronously read content if we are using OkHttp?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439577773", "createdAt": "2020-06-12T18:24:44Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyNjE2Mg==", "bodyText": "yes, OkHttp is natively built on blocking socket not based on selectable channel(e.g. netty). But it should be fine in the mobile space, even if we use native UrlConnection (like android SDK from other cloud providers), it still sync. I think we don't have to worry about it at least now (the user can still read from IS on demand instead of buffering).", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439626162", "createdAt": "2020-06-12T20:23:47Z", "author": {"login": "anuchandy"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5Nzk2OQ==", "bodyText": "Thanks for the thorough explanation! :)", "url": "https://github.com/Azure/azure-sdk-for-android/pull/242#discussion_r439697969", "createdAt": "2020-06-13T01:45:31Z", "author": {"login": "vcolin7"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobDownloadResponse.java", "diffHunk": "@@ -12,21 +12,21 @@\n /**\n  * This class contains the response information returned from the server when downloading a blob.\n  */\n-public final class BlobDownloadAsyncResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {\n+public final class BlobDownloadResponse extends ResponseBase<BlobDownloadHeaders, ResponseBody> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA1NTg2Mg=="}, "originalCommit": {"oid": "82f40498376d1676740955a0b0edf9310826bf8a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2407, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}