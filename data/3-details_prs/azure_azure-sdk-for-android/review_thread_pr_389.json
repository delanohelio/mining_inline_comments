{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NDA1Mzcz", "number": 389, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzoyNzozN1rOErSIdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo1NDoyMFrOErWotQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODIxMzAzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNzoyNzozN1rOHd9_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjo1NTowMVrOHentyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4NjQyMQ==", "bodyText": "Should we return empty map or null here if there are no tags?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501186421", "createdAt": "2020-10-07T17:27:37Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -701,6 +705,90 @@ void delete(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param callback          Callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;\n+                    if (result.getBlobTagSet() != null) {\n+                        tags = new HashMap<>();\n+                        for (BlobTag tag : result.getBlobTagSet()) {\n+                            tags.put(tag.getKey(), tag.getValue());\n+                        }\n+                    }\n+                    callback.onSuccess(tags, header, response);\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    callback.onFailure(throwable, response);\n+                }\n+            });\n+    }\n+\n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the\n+     *                          blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see\n+     *                          &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                          recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken The token to request cancellation.\n+     * @param callback          The callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            String snapshot,\n+                            Integer timeout,\n+                            String version,\n+                            String requestId,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            snapshot,\n+            null,\n+            timeout,\n+            version,\n+            null,\n+            requestId,\n+            cancellationToken,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4Njk2OA==", "bodyText": "We should probably bump the XMS_VERSION to the 73 version since gettags was not supported in 2019-02-02 I dont think", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501186968", "createdAt": "2020-10-07T17:28:31Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -701,6 +705,90 @@ void delete(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param callback          Callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;\n+                    if (result.getBlobTagSet() != null) {\n+                        tags = new HashMap<>();\n+                        for (BlobTag tag : result.getBlobTagSet()) {\n+                            tags.put(tag.getKey(), tag.getValue());\n+                        }\n+                    }\n+                    callback.onSuccess(tags, header, response);\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    callback.onFailure(throwable, response);\n+                }\n+            });\n+    }\n+\n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the\n+     *                          blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see\n+     *                          &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                          recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken The token to request cancellation.\n+     * @param callback          The callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            String snapshot,\n+                            Integer timeout,\n+                            String version,\n+                            String requestId,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            snapshot,\n+            null,\n+            timeout,\n+            version,\n+            null,\n+            requestId,\n+            cancellationToken,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4NjQyMQ=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMjM3MQ==", "bodyText": "I would think an empty map, but there might be a guideline for this", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501302371", "createdAt": "2020-10-07T20:51:32Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -701,6 +705,90 @@ void delete(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param callback          Callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;\n+                    if (result.getBlobTagSet() != null) {\n+                        tags = new HashMap<>();\n+                        for (BlobTag tag : result.getBlobTagSet()) {\n+                            tags.put(tag.getKey(), tag.getValue());\n+                        }\n+                    }\n+                    callback.onSuccess(tags, header, response);\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    callback.onFailure(throwable, response);\n+                }\n+            });\n+    }\n+\n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the\n+     *                          blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see\n+     *                          &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                          recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken The token to request cancellation.\n+     * @param callback          The callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            String snapshot,\n+                            Integer timeout,\n+                            String version,\n+                            String requestId,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            snapshot,\n+            null,\n+            timeout,\n+            version,\n+            null,\n+            requestId,\n+            cancellationToken,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4NjQyMQ=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3MDAyNQ==", "bodyText": "It looks like tagset will never be null from the generated code so I think this is fine?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501870025", "createdAt": "2020-10-08T16:55:01Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobAsyncClient.java", "diffHunk": "@@ -701,6 +705,90 @@ void delete(String containerName,\n             callback);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param callback          Callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;\n+                    if (result.getBlobTagSet() != null) {\n+                        tags = new HashMap<>();\n+                        for (BlobTag tag : result.getBlobTagSet()) {\n+                            tags.put(tag.getKey(), tag.getValue());\n+                        }\n+                    }\n+                    callback.onSuccess(tags, header, response);\n+                }\n+\n+                @Override\n+                public void onFailure(Throwable throwable, Response response) {\n+                    callback.onFailure(throwable, response);\n+                }\n+            });\n+    }\n+\n+    /**\n+     * Gets tags associated with a blob.\n+     *\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @param snapshot          The snapshot parameter is an opaque DateTime value that, when present, specifies the\n+     *                          blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;.\n+     * @param timeout           The timeout parameter is expressed in seconds. For more information, see\n+     *                          &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;.\n+     * @param version           Specifies the version of the operation to use for this request.\n+     * @param requestId         Provides a client-generated, opaque value with a 1 KB character limit that is\n+     *                          recorded in the analytics logs when storage analytics logging is enabled.\n+     * @param cancellationToken The token to request cancellation.\n+     * @param callback          The callback that receives the response.\n+     */\n+    public void getBlobTags(String containerName,\n+                            String blobName,\n+                            String snapshot,\n+                            Integer timeout,\n+                            String version,\n+                            String requestId,\n+                            CancellationToken cancellationToken,\n+                            CallbackWithHeader<Map<String, String>, BlobGetTagsHeaders> callback) {\n+        this.storageBlobServiceClient.getTags(containerName,\n+            blobName,\n+            snapshot,\n+            null,\n+            timeout,\n+            version,\n+            null,\n+            requestId,\n+            cancellationToken,\n+            new CallbackWithHeader<BlobTags, BlobGetTagsHeaders>() {\n+                @Override\n+                public void onSuccess(BlobTags result, BlobGetTagsHeaders header, Response response) {\n+                    Map<String, String> tags = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE4NjQyMQ=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODk0Mzc2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo1MjowMFrOHeFFdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo1MjowMFrOHeFFdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMjY0NQ==", "bodyText": "Extra new line", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501302645", "createdAt": "2020-10-07T20:52:00Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -508,6 +512,73 @@ BlobDeleteResponse deleteWithRestResponse(String containerName,\n             cancellationToken);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODk0NjQyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo1Mjo0OFrOHeFHEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzo0NjoyM1rOHeppsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzA1Ng==", "bodyText": "Is there any way we can push this conversion into the intern method?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501303056", "createdAt": "2020-10-07T20:52:48Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -508,6 +512,73 @@ BlobDeleteResponse deleteWithRestResponse(String containerName,\n             cancellationToken);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @return The blob's tags.\n+     */\n+    public Map<String, String> getBlobTags(String containerName,\n+                                           String blobName) {\n+        BlobTags response = this.storageBlobServiceClient.getTags(containerName,\n+            blobName);\n+        Map<String, String> tags = null;\n+        if (response.getBlobTagSet() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3MjgzNA==", "bodyText": "I hesitate to do that cause if/when there is a generator for Android it will probably replace everything in the Impl file, so I want to keep it as \"generated\" as possible", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501872834", "createdAt": "2020-10-08T16:59:18Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -508,6 +512,73 @@ BlobDeleteResponse deleteWithRestResponse(String containerName,\n             cancellationToken);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @return The blob's tags.\n+     */\n+    public Map<String, String> getBlobTags(String containerName,\n+                                           String blobName) {\n+        BlobTags response = this.storageBlobServiceClient.getTags(containerName,\n+            blobName);\n+        Map<String, String> tags = null;\n+        if (response.getBlobTagSet() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzA1Ng=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkwMTc0NA==", "bodyText": "Discussed offline, going to move this into a ModelHelper class", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501901744", "createdAt": "2020-10-08T17:46:23Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/StorageBlobClient.java", "diffHunk": "@@ -508,6 +512,73 @@ BlobDeleteResponse deleteWithRestResponse(String containerName,\n             cancellationToken);\n     }\n \n+    /**\n+     * Gets tags associated with a blob.\n+\n+     * @param containerName     The container name.\n+     * @param blobName          The blob name.\n+     * @return The blob's tags.\n+     */\n+    public Map<String, String> getBlobTags(String containerName,\n+                                           String blobName) {\n+        BlobTags response = this.storageBlobServiceClient.getTags(containerName,\n+            blobName);\n+        Map<String, String> tags = null;\n+        if (response.getBlobTagSet() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzA1Ng=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODk1MDkzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobGetTagsHeaders.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo1NDoyMFrOHeFJ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjoxMzowNVrOHeHV8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzc5MQ==", "bodyText": "Why is this empty?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501303791", "createdAt": "2020-10-07T20:54:20Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobGetTagsHeaders.java", "diffHunk": "@@ -0,0 +1,4 @@\n+package com.azure.android.storage.blob.models;\n+\n+public class BlobGetTagsHeaders {\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzOTYzNA==", "bodyText": "@rickle-msft Filled it in, Can you take another look?", "url": "https://github.com/Azure/azure-sdk-for-android/pull/389#discussion_r501339634", "createdAt": "2020-10-07T22:13:05Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/android/storage/blob/models/BlobGetTagsHeaders.java", "diffHunk": "@@ -0,0 +1,4 @@\n+package com.azure.android.storage.blob.models;\n+\n+public class BlobGetTagsHeaders {\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMwMzc5MQ=="}, "originalCommit": {"oid": "b76016c62e9cf457505267e5fbc9e17d7fcd6e43"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2293, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}