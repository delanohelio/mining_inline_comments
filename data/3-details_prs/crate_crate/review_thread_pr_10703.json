{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODkzOTQ0", "number": 10703, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMjozMlrOEyO_Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMjozMlrOEyO_Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTA5ODYyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/analyze/DropTableAnalyzer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMjozMlrOHowdOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowMzozMlrOHoxpng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5OTAwMA==", "bodyText": "I'd turn this into debug as I think this is not relevant for the user. The table is dropped afterwards anyway so its not possible to do anything after seeing this log. Any other reason why informing the user is helpful here?", "url": "https://github.com/crate/crate/pull/10703#discussion_r512499000", "createdAt": "2020-10-27T08:32:32Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/analyze/DropTableAnalyzer.java", "diffHunk": "@@ -63,16 +70,35 @@\n                                                                boolean dropIfExists,\n                                                                SessionContext sessionContext) {\n         T tableInfo;\n+        RelationName tableName;\n+        boolean maybeCorrupt = false;\n         try {\n             //noinspection unchecked\n             tableInfo = (T) schemas.resolveTableInfo(name, Operation.DROP, sessionContext.sessionUser(), sessionContext.searchPath());\n+            tableName = tableInfo.ident();\n         } catch (SchemaUnknownException | RelationUnknown e) {\n             if (dropIfExists) {\n                 tableInfo = null;\n+                tableName = RelationName.of(name, sessionContext.searchPath().currentSchema());\n             } else {\n                 throw e;\n             }\n+        } catch (OperationOnInaccessibleRelationException e) {\n+            throw e;\n+        } catch (Throwable t) {\n+            if (!sessionContext.sessionUser().isSuperUser()) {\n+                throw t;\n+            }\n+            tableInfo = null;\n+            maybeCorrupt = true;\n+            tableName = RelationName.of(name, sessionContext.searchPath().currentSchema());\n+            LOGGER.info(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad545b18c41ef88575d544e955a6b736c5c3665"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxODU1OA==", "bodyText": "Any other reason why informing the user is helpful here\n\nBecause the cluster was in a weird state that caused the error. May be helpful for us to have that in the logs by default", "url": "https://github.com/crate/crate/pull/10703#discussion_r512518558", "createdAt": "2020-10-27T09:03:32Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/DropTableAnalyzer.java", "diffHunk": "@@ -63,16 +70,35 @@\n                                                                boolean dropIfExists,\n                                                                SessionContext sessionContext) {\n         T tableInfo;\n+        RelationName tableName;\n+        boolean maybeCorrupt = false;\n         try {\n             //noinspection unchecked\n             tableInfo = (T) schemas.resolveTableInfo(name, Operation.DROP, sessionContext.sessionUser(), sessionContext.searchPath());\n+            tableName = tableInfo.ident();\n         } catch (SchemaUnknownException | RelationUnknown e) {\n             if (dropIfExists) {\n                 tableInfo = null;\n+                tableName = RelationName.of(name, sessionContext.searchPath().currentSchema());\n             } else {\n                 throw e;\n             }\n+        } catch (OperationOnInaccessibleRelationException e) {\n+            throw e;\n+        } catch (Throwable t) {\n+            if (!sessionContext.sessionUser().isSuperUser()) {\n+                throw t;\n+            }\n+            tableInfo = null;\n+            maybeCorrupt = true;\n+            tableName = RelationName.of(name, sessionContext.searchPath().currentSchema());\n+            LOGGER.info(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5OTAwMA=="}, "originalCommit": {"oid": "8ad545b18c41ef88575d544e955a6b736c5c3665"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 983, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}