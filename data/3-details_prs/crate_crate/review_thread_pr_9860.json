{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzYxMjI2", "number": 9860, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rODyEpGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rODyEpGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODMxNDQ4OnYy", "diffSide": "LEFT", "path": "sql/src/test/java/io/crate/expression/scalar/conditional/ConditionalFunctionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rOGF5zKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rOGF5zKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0MzA0OQ==", "bodyText": "That will be handled by the signature matching.", "url": "https://github.com/crate/crate/pull/9860#discussion_r408843049", "createdAt": "2020-04-15T13:31:43Z", "author": {"login": "kovrus"}, "path": "sql/src/test/java/io/crate/expression/scalar/conditional/ConditionalFunctionTest.java", "diffHunk": "@@ -22,33 +22,13 @@\n \n package io.crate.expression.scalar.conditional;\n \n-import com.google.common.collect.ImmutableList;\n import io.crate.exceptions.ConversionException;\n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n-import io.crate.types.DataType;\n-import io.crate.types.DataTypes;\n import org.junit.Test;\n \n-import java.util.Collections;\n-\n public class ConditionalFunctionTest extends AbstractScalarFunctionsTest {\n \n-    @Test\n-    public void testArgsLength() throws Exception {\n-        expectedException.expect(IllegalArgumentException.class);\n-        expectedException.expectMessage(\"dummy function requires at least one argument\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1604, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}