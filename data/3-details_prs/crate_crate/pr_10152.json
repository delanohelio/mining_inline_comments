{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDM5MjEy", "number": 10152, "title": "Resolve unnest and _values signature return type correctly.", "bodyText": "Summary of the changes / Why this improves CrateDB\nThe inner type of the unnest and _values function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due to the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variable arity.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-06-30T13:42:33Z", "url": "https://github.com/crate/crate/pull/10152", "merged": true, "mergeCommit": {"oid": "be28777ac7d5c47a894cbc669af174d77c134ea4"}, "closed": true, "closedAt": "2020-07-01T10:02:21Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwWYaAgBqjM0OTgwMDY4ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwmz47gBqjM1MDE1NDg1MzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8ba55f2281321ab9e029b62d0abd5c8b8a145c4", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a8ba55f2281321ab9e029b62d0abd5c8b8a145c4", "committedDate": "2020-06-30T13:41:37Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}, "afterCommit": {"oid": "6530bde9c08d75852bd1f687a7517e8ee48ece7f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/6530bde9c08d75852bd1f687a7517e8ee48ece7f", "committedDate": "2020-06-30T14:18:52Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6530bde9c08d75852bd1f687a7517e8ee48ece7f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/6530bde9c08d75852bd1f687a7517e8ee48ece7f", "committedDate": "2020-06-30T14:18:52Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}, "afterCommit": {"oid": "478003e222405b7e45b0cf7f4a76a00fb8ec4956", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/478003e222405b7e45b0cf7f4a76a00fb8ec4956", "committedDate": "2020-06-30T14:28:09Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "478003e222405b7e45b0cf7f4a76a00fb8ec4956", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/478003e222405b7e45b0cf7f4a76a00fb8ec4956", "committedDate": "2020-06-30T14:28:09Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}, "afterCommit": {"oid": "8452b778357bde5575dadaab0983d0071705e7b1", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/8452b778357bde5575dadaab0983d0071705e7b1", "committedDate": "2020-06-30T14:51:51Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTE0ODU5", "url": "https://github.com/crate/crate/pull/10152#pullrequestreview-440114859", "createdAt": "2020-06-30T15:08:43Z", "commit": {"oid": "8452b778357bde5575dadaab0983d0071705e7b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowODo0M1rOGrBD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowODo0M1rOGrBD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1OTMxNw==", "bodyText": "previously, we had kind of similar approach with overriding the function info 468e81c#diff-ac060c995181f48a5efb0b2e51fc576dL63-L70\nIt seems a bit complicated to do it in the type signature parsing itself :/ and such as we had the approach with overwriting before, i've decided to go this way. Also, it is only the unnest and _values that have this issue.", "url": "https://github.com/crate/crate/pull/10152#discussion_r447759317", "createdAt": "2020-06-30T15:08:43Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/expression/tablefunctions/UnnestFunction.java", "diffHunk": "@@ -68,15 +71,39 @@ public static void register(TableFunctionModule module) {\n                 )\n                 .withTypeVariableConstraints(typeVariable(\"E\"), typeVariableOfAnyType(\"N\"))\n                 .withVariableArity(),\n-            UnnestTableFunctionImplementation::new\n+            (signature, boundSignature) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8452b778357bde5575dadaab0983d0071705e7b1"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8452b778357bde5575dadaab0983d0071705e7b1", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/8452b778357bde5575dadaab0983d0071705e7b1", "committedDate": "2020-06-30T14:51:51Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}, "afterCommit": {"oid": "57a8fff7d6799633f59480769e0750e958a00961", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/57a8fff7d6799633f59480769e0750e958a00961", "committedDate": "2020-06-30T15:10:43Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjcwNzk2", "url": "https://github.com/crate/crate/pull/10152#pullrequestreview-440670796", "createdAt": "2020-07-01T08:48:30Z", "commit": {"oid": "d8bc6d2b0e35e11edd5ef17783fc263c52179d75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo0ODozMFrOGrc0-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo0ODozMFrOGrc0-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxNDI2Nw==", "bodyText": "\"If the the function has multiple fields, then the bound type must be RowType\"", "url": "https://github.com/crate/crate/pull/10152#discussion_r448214267", "createdAt": "2020-07-01T08:48:30Z", "author": {"login": "marregui"}, "path": "server/src/test/java/io/crate/expression/tablefunctions/AbstractTableFunctionsTest.java", "diffHunk": "@@ -58,16 +61,31 @@ public void prepareFunctions() throws Exception {\n         Symbol functionSymbol = sqlExpressions.normalize(sqlExpressions.asSymbol(expr));\n \n         var function = (Function) functionSymbol;\n-        TableFunctionImplementation<?> functionImplementation = (TableFunctionImplementation<?>) functions.getQualified(\n+        var functionImplementation = (TableFunctionImplementation<?>) functions.getQualified(\n             function,\n             txnCtx.sessionSettings().searchPath()\n         );\n+\n+        var boundArguments = functionImplementation.boundSignature().getArgumentTypes();\n+        if (boundArguments.size() > 1 && boundArguments.stream()\n+            .allMatch(arg -> arg.getBaseTypeName().equalsIgnoreCase(ArrayType.NAME))) {\n+\n+            var boundReturnType = functionImplementation.boundSignature().getReturnType();\n+            assertThat(\n+                \"If the the function has multiple fields, than the bound type must be RowType\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8bc6d2b0e35e11edd5ef17783fc263c52179d75"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjcxNTkz", "url": "https://github.com/crate/crate/pull/10152#pullrequestreview-440671593", "createdAt": "2020-07-01T08:49:28Z", "commit": {"oid": "d8bc6d2b0e35e11edd5ef17783fc263c52179d75"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8bc6d2b0e35e11edd5ef17783fc263c52179d75", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d8bc6d2b0e35e11edd5ef17783fc263c52179d75", "committedDate": "2020-07-01T08:26:20Z", "message": "fixup! Resolve unnest and _values signature return type correctly."}, "afterCommit": {"oid": "c9d4bc99d8f0c669631248c7cfee58a6aa68ab8e", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/c9d4bc99d8f0c669631248c7cfee58a6aa68ab8e", "committedDate": "2020-07-01T08:51:48Z", "message": "fixup! Resolve unnest and _values signature return type correctly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjc1NTA5", "url": "https://github.com/crate/crate/pull/10152#pullrequestreview-440675509", "createdAt": "2020-07-01T08:54:37Z", "commit": {"oid": "d8bc6d2b0e35e11edd5ef17783fc263c52179d75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1NToxNFrOGrdEkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODo1NToxNFrOGrdEkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIxODI1Nw==", "bodyText": "I was thinking of something like this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var boundArguments = functionImplementation.boundSignature().getArgumentTypes();\n          \n          \n            \n                    if (boundArguments.size() > 1 && boundArguments.stream()\n          \n          \n            \n                        .allMatch(arg -> arg.getBaseTypeName().equalsIgnoreCase(ArrayType.NAME))) {\n          \n          \n            \n            \n          \n          \n            \n                        var boundReturnType = functionImplementation.boundSignature().getReturnType();\n          \n          \n            \n                        assertThat(\n          \n          \n            \n                            \"If the function has multiple fields, than the bound type must be RowType\",\n          \n          \n            \n                            boundReturnType.getBaseTypeName(),\n          \n          \n            \n                            is(RowType.NAME)\n          \n          \n            \n                        );\n          \n          \n            \n                        assertThat(boundReturnType.getParameters().size(), greaterThan(1));\n          \n          \n            \n                    }\n          \n          \n            \n                    if (functionImplementation.returnType().numElements() > 1) {\n          \n          \n            \n                        // See classdocs of TableFunctionImplementation for an explanation\n          \n          \n            \n                        assertThat(\n          \n          \n            \n                            \"If the rowType has multiple elements, the returnType of the boundSignature must be an exact match of the returnType\",\n          \n          \n            \n                            functionImplementation.boundSignature().getReturnType().createType(),\n          \n          \n            \n                            is(functionImplementation.returnType())\n          \n          \n            \n                        );\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nWhat do you think?", "url": "https://github.com/crate/crate/pull/10152#discussion_r448218257", "createdAt": "2020-07-01T08:55:14Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/expression/tablefunctions/AbstractTableFunctionsTest.java", "diffHunk": "@@ -58,16 +61,31 @@ public void prepareFunctions() throws Exception {\n         Symbol functionSymbol = sqlExpressions.normalize(sqlExpressions.asSymbol(expr));\n \n         var function = (Function) functionSymbol;\n-        TableFunctionImplementation<?> functionImplementation = (TableFunctionImplementation<?>) functions.getQualified(\n+        var functionImplementation = (TableFunctionImplementation<?>) functions.getQualified(\n             function,\n             txnCtx.sessionSettings().searchPath()\n         );\n+\n+        var boundArguments = functionImplementation.boundSignature().getArgumentTypes();\n+        if (boundArguments.size() > 1 && boundArguments.stream()\n+            .allMatch(arg -> arg.getBaseTypeName().equalsIgnoreCase(ArrayType.NAME))) {\n+\n+            var boundReturnType = functionImplementation.boundSignature().getReturnType();\n+            assertThat(\n+                \"If the function has multiple fields, than the bound type must be RowType\",\n+                boundReturnType.getBaseTypeName(),\n+                is(RowType.NAME)\n+            );\n+            assertThat(boundReturnType.getParameters().size(), greaterThan(1));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d4bc99d8f0c669631248c7cfee58a6aa68ab8e"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjg0ODM1", "url": "https://github.com/crate/crate/pull/10152#pullrequestreview-440684835", "createdAt": "2020-07-01T09:06:50Z", "commit": {"oid": "3bc1a7fd14768509ea11f4afec3c3f40c862755b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bc1a7fd14768509ea11f4afec3c3f40c862755b", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/3bc1a7fd14768509ea11f4afec3c3f40c862755b", "committedDate": "2020-07-01T09:03:08Z", "message": "fixup! fixup! Resolve unnest and _values signature return type correctly."}, "afterCommit": {"oid": "a623e5e29ee6055b1800d7dcad63ef9c7df73762", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a623e5e29ee6055b1800d7dcad63ef9c7df73762", "committedDate": "2020-07-01T09:11:03Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222313970bb1beeff792aac4a2380786498431ab", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/222313970bb1beeff792aac4a2380786498431ab", "committedDate": "2020-07-01T09:27:26Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a623e5e29ee6055b1800d7dcad63ef9c7df73762", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a623e5e29ee6055b1800d7dcad63ef9c7df73762", "committedDate": "2020-07-01T09:11:03Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}, "afterCommit": {"oid": "222313970bb1beeff792aac4a2380786498431ab", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/222313970bb1beeff792aac4a2380786498431ab", "committedDate": "2020-07-01T09:27:26Z", "message": "Resolve unnest and _values signature return type correctly.\n\nThe inner type of the `unnest` and `_values` function resolved\ncorrectly and accounts the inner types of the record type, while\nthe return type of the bound signature return always the empty\nrecord type. It happens due the type signature binding limitation\nof functions that have an argument represented by the array type\nthat has a variable of any type and variably arity."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3173, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}