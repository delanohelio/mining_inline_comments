{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Mjk1MTk3", "number": 9544, "title": "Support arguments of type long as index access to arrays", "bodyText": "Summary of the changes / Why this improves CrateDB\nThis adds support for array_expr[long_column].\nPreviously the subscript function required the argument to be of type\ninteger. That worked well for literals, because there long can be\ncasted to int. But our implicit cast logic is more restrictive if\ncolumns are involved.\nThis therefore extends the function signature to allow both integer\nand long arguments.\nPostgreSQL JDBC uses a query that uses this, a subset of the full query\nis:\nselect\n    con.confkey[pos.n]\nfrom\n    generate_series(1, 32) as pos (n),\n    pg_catalog.pg_constraint con\n\nChecklist\n\n User relevant changes are recorded in CHANGES.txt\n Touched code is covered by tests\n Documentation has been updated if necessary\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-01-21T13:07:01Z", "url": "https://github.com/crate/crate/pull/9544", "merged": true, "mergeCommit": {"oid": "35d9ded63be29f5d602fe51158334d6f213a731f"}, "closed": true, "closedAt": "2020-01-21T15:32:39Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8g3h4ABqjI5NjYxMzA0ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8idXdAFqTM0NTk0MjE4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a570e0776707c1fc044631e895031e79d102090", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/2a570e0776707c1fc044631e895031e79d102090", "committedDate": "2020-01-21T12:58:35Z", "message": "Support arguments of type long as index access to arrays\n\nThis adds support for `array_expr[long_column]`.\n\nPreviously the subscript function required the argument to be of type\n`integer`. That worked well for literals, because there `long` can be\ncasted to `int`. But our implicit cast logic is more restrictive if\ncolumns are involved.\n\nThis therefore extends the function signature to allow both `integer`\nand `long` arguments.\n\nPostgreSQL JDBC uses a query that uses this, a subset of the full query\nis:\n\n    select\n        con.confkey[pos.n]\n    from\n        generate_series(1, 32) as pos (n),\n        pg_catalog.pg_constraint con"}, "afterCommit": {"oid": "4d68c6a72ec99f5fc862a9635978b4c1de09adab", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/4d68c6a72ec99f5fc862a9635978b4c1de09adab", "committedDate": "2020-01-21T13:07:21Z", "message": "Support arguments of type long as index access to arrays\n\nThis adds support for `array_expr[long_column]`.\n\nPreviously the subscript function required the argument to be of type\n`integer`. That worked well for literals, because there `long` can be\ncasted to `int`. But our implicit cast logic is more restrictive if\ncolumns are involved.\n\nThis therefore extends the function signature to allow both `integer`\nand `long` arguments.\n\nPostgreSQL JDBC uses a query that uses this, a subset of the full query\nis:\n\n    select\n        con.confkey[pos.n]\n    from\n        generate_series(1, 32) as pos (n),\n        pg_catalog.pg_constraint con"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODc0NTg0", "url": "https://github.com/crate/crate/pull/9544#pullrequestreview-345874584", "createdAt": "2020-01-21T13:28:44Z", "commit": {"oid": "4d68c6a72ec99f5fc862a9635978b4c1de09adab"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzoyODo0NFrOFf56Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzoyODo0NFrOFf56Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5OTAwMw==", "bodyText": "we probably can inline the evaluate method.", "url": "https://github.com/crate/crate/pull/9544#discussion_r368999003", "createdAt": "2020-01-21T13:28:44Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/expression/scalar/SubscriptFunction.java", "diffHunk": "@@ -61,16 +60,16 @@ public Object evaluate(TransactionContext txnCtx, Input[] args) {\n         return evaluate(args[0].value(), args[1].value());\n     }\n \n-    private Object evaluate(Object element, Object index) {\n+    private static Object evaluate(Object element, Object index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d68c6a72ec99f5fc862a9635978b4c1de09adab"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdce356e0576c69e05aa2a6babee32c15f29d3b0", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/fdce356e0576c69e05aa2a6babee32c15f29d3b0", "committedDate": "2020-01-21T14:55:47Z", "message": "Support arguments of type long as index access to arrays\n\nThis adds support for `array_expr[long_column]`.\n\nPreviously the subscript function required the argument to be of type\n`integer`. That worked well for literals, because there `long` can be\ncasted to `int`. But our implicit cast logic is more restrictive if\ncolumns are involved.\n\nThis therefore extends the function signature to allow both `integer`\nand `long` arguments.\n\nPostgreSQL JDBC uses a query that uses this, a subset of the full query\nis:\n\n    select\n        con.confkey[pos.n]\n    from\n        generate_series(1, 32) as pos (n),\n        pg_catalog.pg_constraint con"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8cafa768a00b2db9ad23d2c0142ff335322bcfd", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/f8cafa768a00b2db9ad23d2c0142ff335322bcfd", "committedDate": "2020-01-21T14:55:47Z", "message": "Inline evaluate in SubscriptFunction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d68c6a72ec99f5fc862a9635978b4c1de09adab", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/4d68c6a72ec99f5fc862a9635978b4c1de09adab", "committedDate": "2020-01-21T13:07:21Z", "message": "Support arguments of type long as index access to arrays\n\nThis adds support for `array_expr[long_column]`.\n\nPreviously the subscript function required the argument to be of type\n`integer`. That worked well for literals, because there `long` can be\ncasted to `int`. But our implicit cast logic is more restrictive if\ncolumns are involved.\n\nThis therefore extends the function signature to allow both `integer`\nand `long` arguments.\n\nPostgreSQL JDBC uses a query that uses this, a subset of the full query\nis:\n\n    select\n        con.confkey[pos.n]\n    from\n        generate_series(1, 32) as pos (n),\n        pg_catalog.pg_constraint con"}, "afterCommit": {"oid": "f8cafa768a00b2db9ad23d2c0142ff335322bcfd", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/f8cafa768a00b2db9ad23d2c0142ff335322bcfd", "committedDate": "2020-01-21T14:55:47Z", "message": "Inline evaluate in SubscriptFunction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTQyMTg4", "url": "https://github.com/crate/crate/pull/9544#pullrequestreview-345942188", "createdAt": "2020-01-21T14:59:14Z", "commit": {"oid": "f8cafa768a00b2db9ad23d2c0142ff335322bcfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3933, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}