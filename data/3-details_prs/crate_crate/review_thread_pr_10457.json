{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDYyODM3", "number": 10457, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1ODowNFrOEdzbnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjowMTo1NVrOEdzguQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Njg2ODEyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1ODowNFrOHJL6bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1ODowNFrOHJL6bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NDQxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var partitionIndexName = IndexParts.toIndexName(\n          \n          \n            \n                            new RelationName(ident.tableSchema, ident.tableName),\n          \n          \n            \n                            ident.partitionIdent\n          \n          \n            \n                        );\n          \n          \n            \n                        var partitionIndexName = IndexParts.toIndexName(\n          \n          \n            \n                            ident.tableSchema,\n          \n          \n            \n                            ident.tableName,\n          \n          \n            \n                            ident.partitionIdent\n          \n          \n            \n                        );\n          \n      \n    \n    \n  \n\nThere is an overload that takes schema and name directly - avoids the RelationName construction and some indirection.", "url": "https://github.com/crate/crate/pull/10457#discussion_r479394415", "createdAt": "2020-08-28T15:58:04Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3419d25c22c6d511215b99755cedbe1b3b6ea638"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Njg3NTk0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjowMDoyOVrOHJL_aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjowMDoyOVrOHJL_aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NTY4OA==", "bodyText": "I think it's legitimate for the indexMetaData to be absent if the partition is deleted concurrently. We should probably return null if indexMetaData is null - similar to how we handle the RelationUnknown case.", "url": "https://github.com/crate/crate/pull/10457#discussion_r479395688", "createdAt": "2020-08-28T16:00:29Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );\n+            var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n+            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eacf04b8800b7e30edb5d67b3ee1df655750d7a0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Njg4MTIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjowMTo1NVrOHJMCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjowMTo1NVrOHJMCtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5NjUzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var partitionInfo = PartitionInfos.createPartitionInfo(\n          \n          \n            \n                            partitionIndexName,\n          \n          \n            \n                            indexMetaData\n          \n          \n            \n                        );\n          \n          \n            \n                        assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n          \n          \n            \n                        shardsCount = partitionInfo.numberOfShards();\n          \n          \n            \n                        shardsCount = indexMetadata.getNumberOfShards();\n          \n      \n    \n    \n  \n\nNo need to go through the PartitionInfo  to access the shard count.", "url": "https://github.com/crate/crate/pull/10457#discussion_r479396535", "createdAt": "2020-08-28T16:01:55Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/metadata/sys/TableHealthService.java", "diffHunk": "@@ -165,7 +167,23 @@ private TableHealth tableHealthFromEntry(Map.Entry<TablePartitionIdent, ShardsIn\n         } catch (RelationUnknown e) {\n             return null;\n         }\n-        return calculateHealth(ident, shardsInfo, tableInfo.numberOfShards());\n+        int shardsCount = tableInfo.numberOfShards();\n+        if (ident.partitionIdent != null) {\n+            var partitionIndexName = IndexParts.toIndexName(\n+                new RelationName(ident.tableSchema, ident.tableName),\n+                ident.partitionIdent\n+            );\n+            var indexMetaData = clusterService.state().getMetadata().index(partitionIndexName);\n+            assert indexMetaData != null : \"index meta data for partition \" + partitionIndexName + \" not found\";\n+            var partitionInfo = PartitionInfos.createPartitionInfo(\n+                partitionIndexName,\n+                indexMetaData\n+            );\n+            assert partitionInfo != null : \"cannot resolve partition info for \" + partitionIndexName;\n+            shardsCount = partitionInfo.numberOfShards();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eacf04b8800b7e30edb5d67b3ee1df655750d7a0"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}