{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NjEyMzY2", "number": 9938, "title": "String scalar functions: chr", "bodyText": "Summary of the changes / Why this improves CrateDB\nRelated #9667\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-05-12T09:48:13Z", "url": "https://github.com/crate/crate/pull/9938", "merged": true, "mergeCommit": {"oid": "da54d0d645c201df7c23fbf0a07d2782df1fa874"}, "closed": true, "closedAt": "2020-05-28T13:24:49Z", "author": {"login": "pooja1pathak"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcghUUPgFqTQwOTg4NDEyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcltXajgBqjMzODI2MzU3MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODg0MTIy", "url": "https://github.com/crate/crate/pull/9938#pullrequestreview-409884122", "createdAt": "2020-05-12T09:55:36Z", "commit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOTo1NTozN1rOGT_J0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOTo1Njo0N1rOGT_MYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxMDgzMg==", "bodyText": "Could you change the test cases that test for errors to use expectedException.expectMessage(\"...\") and expectedException.expect(IllegalArgumentException.class) ?\nIf chr(0) would be changed to return an empty string, this test case as it is would still pass.", "url": "https://github.com/crate/crate/pull/9938#discussion_r423610832", "createdAt": "2020-05-12T09:55:37Z", "author": {"login": "mfussenegger"}, "path": "sql/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.string;\n+\n+import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n+import org.junit.Test;\n+import java.lang.Exception;\n+import static org.junit.matchers.JUnitMatchers.*;\n+\n+public class ChrFunctionTest extends AbstractScalarFunctionsTest {\n+\n+    @Test\n+    public void test_zero_value_throws_exception() throws Exception {\n+        try {\n+            assertEvaluate(\"chr(0)\", \"\");\n+        }\n+        catch (IllegalArgumentException illegalArgumentException){\n+            assertThat(illegalArgumentException.getMessage(), containsString(\"null character not permitted\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxMTQ5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int i = 65;\n          \n      \n    \n    \n  \n\ni isn't used in this context", "url": "https://github.com/crate/crate/pull/9938#discussion_r423611491", "createdAt": "2020-05-12T09:56:47Z", "author": {"login": "mfussenegger"}, "path": "sql/src/test/java/io/crate/expression/scalar/string/ChrFunctionTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.string;\n+\n+import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n+import org.junit.Test;\n+import java.lang.Exception;\n+import static org.junit.matchers.JUnitMatchers.*;\n+\n+public class ChrFunctionTest extends AbstractScalarFunctionsTest {\n+\n+    @Test\n+    public void test_zero_value_throws_exception() throws Exception {\n+        try {\n+            assertEvaluate(\"chr(0)\", \"\");\n+        }\n+        catch (IllegalArgumentException illegalArgumentException){\n+            assertThat(illegalArgumentException.getMessage(), containsString(\"null character not permitted\"));\n+        }\n+    }\n+\n+    @Test\n+    public void test_negative_number_throws_exception() throws Exception {\n+        try {\n+            assertEvaluate(\"chr(-1)\", \"\");\n+        }\n+        catch (IllegalArgumentException illegalArgumentException){\n+            assertThat(illegalArgumentException.getMessage(), containsString(\"requested character too large for encoding: -1\"));\n+        }\n+    }\n+\n+    @Test\n+    public void test_large_number_throws_exception() throws Exception {\n+        try {\n+            assertEvaluate(\"chr(1114112)\", \"\");\n+        }\n+        catch (IllegalArgumentException illegalArgumentException){\n+            assertThat(illegalArgumentException.getMessage(), containsString(\"requested character too large for encoding: 1114112\"));\n+        }\n+    }\n+\n+    @Test\n+    public void test_empty_value_throws_exception() throws Exception {\n+        try {\n+            assertEvaluate(\"chr()\", \"\");\n+        }\n+        catch (Exception exception){\n+            assertThat(exception.getMessage(), containsString(\"unknown function: chr()\"));\n+        }\n+    }\n+\n+    @Test\n+    public void test_chr_positive_number() throws Exception {\n+        int i = 65;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTU1NTQx", "url": "https://github.com/crate/crate/pull/9938#pullrequestreview-410155541", "createdAt": "2020-05-12T15:22:28Z", "commit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNToyMjoyOFrOGUMCoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNToyMjo1NFrOGUMEOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMTk4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Returns the Character with the given code. For UTF8 the argument is\n          \n          \n            \n            treated as a Unicode code point.\n          \n          \n            \n            Returns the Character with the given code. For UTF8 the argument is treated as\n          \n          \n            \n            a Unicode code point.\n          \n      \n    \n    \n  \n\nwrapped to 79 chars", "url": "https://github.com/crate/crate/pull/9938#discussion_r423821985", "createdAt": "2020-05-12T15:22:28Z", "author": {"login": "norosa"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -221,6 +221,26 @@ Returns: ``int``\n     +----+--------+\n     SELECT 1 row in set (... sec)\n \n+.. _scalar_chr:\n+\n+``chr(int)``\n+-----------------\n+\n+Returns the Character with the given code. For UTF8 the argument is\n+treated as a Unicode code point.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMjM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ``chr(int)``\n          \n          \n            \n            -----------------\n          \n          \n            \n            ``chr(int)``\n          \n          \n            \n            ------------\n          \n      \n    \n    \n  \n\nfixes underline length", "url": "https://github.com/crate/crate/pull/9938#discussion_r423822392", "createdAt": "2020-05-12T15:22:54Z", "author": {"login": "norosa"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -221,6 +221,26 @@ Returns: ``int``\n     +----+--------+\n     SELECT 1 row in set (... sec)\n \n+.. _scalar_chr:\n+\n+``chr(int)``\n+-----------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401b52f6be344ad22c45704f46c198589db01d07"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95b4fbf1d571567e820950eda4d318f7aa914145", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/95b4fbf1d571567e820950eda4d318f7aa914145", "committedDate": "2020-05-27T06:03:39Z", "message": "Merge branch 'master' into issue#9667"}, "afterCommit": {"oid": "6b5b0a4462313cfe41527df2a362f5f9ca015ee6", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/6b5b0a4462313cfe41527df2a362f5f9ca015ee6", "committedDate": "2020-05-27T09:32:11Z", "message": "Add chr(int) scalar function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDIxMDUx", "url": "https://github.com/crate/crate/pull/9938#pullrequestreview-419021051", "createdAt": "2020-05-27T09:34:09Z", "commit": {"oid": "6b5b0a4462313cfe41527df2a362f5f9ca015ee6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b5b0a4462313cfe41527df2a362f5f9ca015ee6", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/6b5b0a4462313cfe41527df2a362f5f9ca015ee6", "committedDate": "2020-05-27T09:32:11Z", "message": "Add chr(int) scalar function"}, "afterCommit": {"oid": "5a1d040f375acc2c8c941f207c63147d23f39050", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/5a1d040f375acc2c8c941f207c63147d23f39050", "committedDate": "2020-05-28T12:37:26Z", "message": "Add chr(int) scalar function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDczNTcx", "url": "https://github.com/crate/crate/pull/9938#pullrequestreview-420073571", "createdAt": "2020-05-28T12:51:06Z", "commit": {"oid": "f0592f19b3fbb2417e2e5a1e984b0ef099a33d47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f70d930df731b1c49a5875021c8038342facb808", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/f70d930df731b1c49a5875021c8038342facb808", "committedDate": "2020-05-28T12:52:28Z", "message": "Add chr(int) scalar function"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0592f19b3fbb2417e2e5a1e984b0ef099a33d47", "author": {"user": {"login": "matthijskrul", "name": "Matthijs Krul"}}, "url": "https://github.com/crate/crate/commit/f0592f19b3fbb2417e2e5a1e984b0ef099a33d47", "committedDate": "2020-05-28T12:49:21Z", "message": "Update scalar.rst\n\ncaps fix"}, "afterCommit": {"oid": "f70d930df731b1c49a5875021c8038342facb808", "author": {"user": {"login": "pooja1pathak", "name": "Pooja Pathak"}}, "url": "https://github.com/crate/crate/commit/f70d930df731b1c49a5875021c8038342facb808", "committedDate": "2020-05-28T12:52:28Z", "message": "Add chr(int) scalar function"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3363, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}