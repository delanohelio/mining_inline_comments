{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDI3NjQ1", "number": 10549, "title": "Deprecate the overhead circuit breaker setting", "bodyText": "Summary of the changes / Why this improves CrateDB\nThis deprecated the settings and internally removes any usages. The only\ncircuit breaker where the default diverged from 1.0 was the query breaker\nand the already unused fielddata breaker.\nThe usefulness of the setting was questionable. It provided another knob to\ntune the circuit breaker behavior, but it is somewhat redundant because\ntuning the limit had more or less the same outcome.\nnewUsed * overheadConstant > memoryBytesLimit\n\n=\n\nnewUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\nThere were also inconsistencies in its use. In one place it was applied to\nthe delta, in other cases it was applied to the total.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-09-16T14:24:03Z", "url": "https://github.com/crate/crate/pull/10549", "merged": true, "mergeCommit": {"oid": "ece58ee0dd1d337c4b51737386ac9b47ffba97fc"}, "closed": true, "closedAt": "2020-09-18T13:34:04Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJdwSygBqjM3NzM2NzQwNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKEtYaABqjM3ODIzNzQxNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23e2205f2891c1926a0644561dd0685437402b8d", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/23e2205f2891c1926a0644561dd0685437402b8d", "committedDate": "2020-09-16T14:23:18Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}, "afterCommit": {"oid": "34ea50862fc5c3ec7eb4cd310ef46b64f019485e", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/34ea50862fc5c3ec7eb4cd310ef46b64f019485e", "committedDate": "2020-09-16T15:02:26Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34ea50862fc5c3ec7eb4cd310ef46b64f019485e", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/34ea50862fc5c3ec7eb4cd310ef46b64f019485e", "committedDate": "2020-09-16T15:02:26Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}, "afterCommit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/9f35017ea5f92a59d8d85d54cecdd6d2fba4295b", "committedDate": "2020-09-16T15:26:12Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5ODU4OTMx", "url": "https://github.com/crate/crate/pull/10549#pullrequestreview-489858931", "createdAt": "2020-09-16T17:49:10Z", "commit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo0OToxMVrOHS7wvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo0OToxMVrOHS7wvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNTU1MQ==", "bodyText": "might be worth putting this in a CAUTION admonition?\n(here and elsewhere)", "url": "https://github.com/crate/crate/pull/10549#discussion_r489615551", "createdAt": "2020-09-16T17:49:11Z", "author": {"login": "norosa"}, "path": "docs/config/cluster.rst", "diffHunk": "@@ -992,11 +992,11 @@ keeps working.\n .. _indices.breaker.query.overhead:\n \n **indices.breaker.query.overhead**\n-  | *Default:*   ``1.09``\n+  | *Default:*   ``1.00``\n   | *Runtime:*   ``no``\n \n-  A constant that all data estimations are multiplied with to determine a final\n-  estimation.\n+  This setting is deprecated and changing it has no longer any effect.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDE1NDEz", "url": "https://github.com/crate/crate/pull/10549#pullrequestreview-490415413", "createdAt": "2020-09-17T09:35:18Z", "commit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNToxOFrOHTZyXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNToxOFrOHTZyXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwNzQ4Ng==", "bodyText": "maybe also add the @Deprecated annotation?", "url": "https://github.com/crate/crate/pull/10549#discussion_r490107486", "createdAt": "2020-09-17T09:35:18Z", "author": {"login": "seut"}, "path": "server/src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java", "diffHunk": "@@ -32,6 +32,8 @@\n     private final long limit;\n     private final long used;\n     private final long trippedCount;\n+\n+    // kept around for BWC of JMX metrics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjM3OTQw", "url": "https://github.com/crate/crate/pull/10549#pullrequestreview-490637940", "createdAt": "2020-09-17T14:11:14Z", "commit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDoxMToxNFrOHTkOpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDoxMToxNFrOHTkOpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3ODU2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              This setting is deprecated and changing it has no longer any effect.\n          \n          \n            \n              .. CAUTION::\n          \n          \n            \n              \n          \n          \n            \n                  This setting is deprecated has no effect.", "url": "https://github.com/crate/crate/pull/10549#discussion_r490278565", "createdAt": "2020-09-17T14:11:14Z", "author": {"login": "norosa"}, "path": "docs/config/cluster.rst", "diffHunk": "@@ -992,11 +992,11 @@ keeps working.\n .. _indices.breaker.query.overhead:\n \n **indices.breaker.query.overhead**\n-  | *Default:*   ``1.09``\n+  | *Default:*   ``1.00``\n   | *Runtime:*   ``no``\n \n-  A constant that all data estimations are multiplied with to determine a final\n-  estimation.\n+  This setting is deprecated and changing it has no longer any effect.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3983755334baed9dda0007fede27e8f7e876b9c7", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/3983755334baed9dda0007fede27e8f7e876b9c7", "committedDate": "2020-09-18T12:20:39Z", "message": "Remove name argument from ChildMemoryCircuitBreaker\n\nThe name is also present in the `BreakerSettings`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb6aacdc091808036dad5673f14c374caeaf3bc2", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/cb6aacdc091808036dad5673f14c374caeaf3bc2", "committedDate": "2020-09-18T12:23:30Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f35017ea5f92a59d8d85d54cecdd6d2fba4295b", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/9f35017ea5f92a59d8d85d54cecdd6d2fba4295b", "committedDate": "2020-09-16T15:26:12Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}, "afterCommit": {"oid": "cb6aacdc091808036dad5673f14c374caeaf3bc2", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/cb6aacdc091808036dad5673f14c374caeaf3bc2", "committedDate": "2020-09-18T12:23:30Z", "message": "Deprecate the overhead circuit breaker setting\n\nThis deprecated the settings and internally removes any usages.\nThe only circuit breaker where the default diverged from 1.0 was the\nquery breaker and the already unused fielddata breaker.\n\nThe usefulness of the setting was questionable. It provided another\nknob to tune the circuit breaker behavior, but it is somewhat redundant\nbecause tuning the limit had more or less the same outcome.\n\n    newUsed * overheadConstant > memoryBytesLimit\n\n    =\n\n    newUsed > memoryBytesLimit / overheadConstant\n\nIt made the implementations more complicated and also made it harder to\nreason about how the memory accounting works. Acting a bit like a smoke\nbomb.\n\nThere were also inconsistencies in its use. In one place it was applied\nto the *delta*, in other cases it was applied to the *total*."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3765, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}