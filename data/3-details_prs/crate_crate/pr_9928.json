{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDY1OTUy", "number": 9928, "title": "Use the new function registry for the subscript functions.", "bodyText": "Summary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-05-06T12:30:40Z", "url": "https://github.com/crate/crate/pull/9928", "merged": true, "mergeCommit": {"oid": "fae75af73930b280c02d7059a68b01a5f86983f1"}, "closed": true, "closedAt": "2020-05-14T13:14:40Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcepK6LABqjMzMDg2NDU3OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchM1F1AH2gAyNDE0MDY1OTUyOmVmYWQ3Njk5NDYwYjg3NDE2YTYyYjU5ZGE0N2EwYTE1MjcwZDliZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b20e31d6513efc40381ba2efdadaf5180419a2d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5b20e31d6513efc40381ba2efdadaf5180419a2d", "committedDate": "2020-05-06T12:30:18Z", "message": "WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "b6aef2ea90d219e6018879d096480aa944ee55a0", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b6aef2ea90d219e6018879d096480aa944ee55a0", "committedDate": "2020-05-06T14:01:38Z", "message": "WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a80faeb71011b8884746d23c89fe6606b3da0da8", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a80faeb71011b8884746d23c89fe6606b3da0da8", "committedDate": "2020-05-07T08:27:46Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "44f2a6f3e536594bc9420695bb1ae3daf063c760", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/44f2a6f3e536594bc9420695bb1ae3daf063c760", "committedDate": "2020-05-07T09:16:34Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44f2a6f3e536594bc9420695bb1ae3daf063c760", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/44f2a6f3e536594bc9420695bb1ae3daf063c760", "committedDate": "2020-05-07T09:16:34Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "049c5ebd92d8582ac497d1cc351772d32a574ed7", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/049c5ebd92d8582ac497d1cc351772d32a574ed7", "committedDate": "2020-05-07T13:28:59Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "049c5ebd92d8582ac497d1cc351772d32a574ed7", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/049c5ebd92d8582ac497d1cc351772d32a574ed7", "committedDate": "2020-05-07T13:28:59Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "7d3f92525aa6c6fb69dd3866d322ce89c92b6e15", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/7d3f92525aa6c6fb69dd3866d322ce89c92b6e15", "committedDate": "2020-05-07T13:40:24Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dff8f17d2c554e63c432780f2233f878ea0a4742", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/dff8f17d2c554e63c432780f2233f878ea0a4742", "committedDate": "2020-05-11T10:10:45Z", "message": "fixup! fixup! fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "30248f04ebe3e0813145dfef21f2621480f31a6c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/30248f04ebe3e0813145dfef21f2621480f31a6c", "committedDate": "2020-05-11T11:00:08Z", "message": "WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30248f04ebe3e0813145dfef21f2621480f31a6c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/30248f04ebe3e0813145dfef21f2621480f31a6c", "committedDate": "2020-05-11T11:00:08Z", "message": "WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "12947b5820c939a8276ddd04de32e7c0fee8d94d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/12947b5820c939a8276ddd04de32e7c0fee8d94d", "committedDate": "2020-05-11T12:34:32Z", "message": "WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c85b73f388c8b4cf7bb0bc5ba0b6cf26a9d96bc", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/7c85b73f388c8b4cf7bb0bc5ba0b6cf26a9d96bc", "committedDate": "2020-05-11T13:41:52Z", "message": "fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "18c63ea99949243557568fcdc92877c088a9cfa0", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/18c63ea99949243557568fcdc92877c088a9cfa0", "committedDate": "2020-05-12T13:34:46Z", "message": "fixup! fixup! WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16d75e320d9358b2417ee5d8c72e51054cf1a60c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/16d75e320d9358b2417ee5d8c72e51054cf1a60c", "committedDate": "2020-05-12T14:21:27Z", "message": "fixup! fixup! fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "5893e641ae7aa580cc2a05d77ec092504f0412e4", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5893e641ae7aa580cc2a05d77ec092504f0412e4", "committedDate": "2020-05-12T14:35:03Z", "message": "fixup! fixup! fixup! WIP: Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5893e641ae7aa580cc2a05d77ec092504f0412e4", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5893e641ae7aa580cc2a05d77ec092504f0412e4", "committedDate": "2020-05-12T14:35:03Z", "message": "fixup! fixup! fixup! WIP: Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d6c62a0509e1c54ed81f2c312395c53a723d0b39", "committedDate": "2020-05-12T21:15:34Z", "message": "Use the new func registry for the subscript functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjgzNTcy", "url": "https://github.com/crate/crate/pull/9928#pullrequestreview-410683572", "createdAt": "2020-05-13T08:06:24Z", "commit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODowNjoyNFrOGUmIfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODowOTozM1rOGUmP4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI0OTQ2OA==", "bodyText": "nitpick: should be folded into the line above or indented.", "url": "https://github.com/crate/crate/pull/9928#discussion_r424249468", "createdAt": "2020-05-13T08:06:24Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/expression/scalar/SubscriptFunction.java", "diffHunk": "@@ -57,14 +57,73 @@\n \n     public static final String NAME = \"subscript\";\n \n+    private final Signature signature;\n     private final FunctionInfo info;\n     private final BiFunction<Object, Object, Object> lookup;\n \n     public static void register(ScalarFunctionModule module) {\n-        module.register(NAME, new Resolver());\n+        // subscript(array(object)), text) -> array(undefined)\n+        module.register(\n+            Signature.scalar(\n+                NAME,\n+                parseTypeSignature(\"array(object)\"),\n+                DataTypes.STRING.getTypeSignature(),\n+                parseTypeSignature(\"array(undefined)\")),\n+            (signature, dataTypes) -> new SubscriptFunction(\n+                signature,\n+                FunctionInfo.of(NAME, dataTypes, new ArrayType<>(DataTypes.UNDEFINED)),\n+                SubscriptFunction::lookupIntoListObjectsByName)\n+        );\n+        // subscript(array(any)), text) -> any\n+        module.register(\n+            Signature\n+                .scalar(\n+                    NAME,\n+                    parseTypeSignature(\"array(E)\"),\n+                    DataTypes.INTEGER.getTypeSignature(),\n+                    parseTypeSignature(\"E\"))\n+                .withTypeVariableConstraints(\n+                typeVariable(\"E\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1MDE3NQ==", "bodyText": "Could we document this a bit (why is this needed)?", "url": "https://github.com/crate/crate/pull/9928#discussion_r424250175", "createdAt": "2020-05-13T08:07:38Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/expression/scalar/SubscriptFunction.java", "diffHunk": "@@ -57,14 +57,73 @@\n \n     public static final String NAME = \"subscript\";\n \n+    private final Signature signature;\n     private final FunctionInfo info;\n     private final BiFunction<Object, Object, Object> lookup;\n \n     public static void register(ScalarFunctionModule module) {\n-        module.register(NAME, new Resolver());\n+        // subscript(array(object)), text) -> array(undefined)\n+        module.register(\n+            Signature.scalar(\n+                NAME,\n+                parseTypeSignature(\"array(object)\"),\n+                DataTypes.STRING.getTypeSignature(),\n+                parseTypeSignature(\"array(undefined)\")),\n+            (signature, dataTypes) -> new SubscriptFunction(\n+                signature,\n+                FunctionInfo.of(NAME, dataTypes, new ArrayType<>(DataTypes.UNDEFINED)),\n+                SubscriptFunction::lookupIntoListObjectsByName)\n+        );\n+        // subscript(array(any)), text) -> any\n+        module.register(\n+            Signature\n+                .scalar(\n+                    NAME,\n+                    parseTypeSignature(\"array(E)\"),\n+                    DataTypes.INTEGER.getTypeSignature(),\n+                    parseTypeSignature(\"E\"))\n+                .withTypeVariableConstraints(\n+                typeVariable(\"E\")),\n+            (signature, dataTypes) -> {\n+                var returnType = ((ArrayType<?>) dataTypes.get(0)).innerType();\n+                return new SubscriptFunction(\n+                    signature,\n+                    FunctionInfo.of(NAME, dataTypes, returnType),\n+                    SubscriptFunction::lookupByNumericIndex);\n+            });\n+        // subscript(object(text, element), text) -> element\n+        module.register(\n+            Signature.scalar(\n+                NAME,\n+                DataTypes.UNTYPED_OBJECT.getTypeSignature(),\n+                DataTypes.STRING.getTypeSignature(),\n+                DataTypes.UNDEFINED.getTypeSignature()),\n+            (signature, dataTypes) ->\n+                new SubscriptFunction(\n+                    signature,\n+                    new FunctionInfo(new FunctionIdent(NAME, dataTypes), DataTypes.UNDEFINED),\n+                    SubscriptFunction::lookupByName\n+                )\n+        );\n+        module.register(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1MTM2Mw==", "bodyText": "I think this error message is not really understandable for users. Is it possible to improve here?", "url": "https://github.com/crate/crate/pull/9928#discussion_r424251363", "createdAt": "2020-05-13T08:09:33Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/expression/scalar/SubscriptFunctionTest.java", "diffHunk": "@@ -69,9 +69,7 @@ public void testIndexOutOfRange() throws Exception {\n \n     @Test\n     public void testIndexExpressionIsNotInteger() throws Exception {\n-        expectedException.expectMessage(\n-            \"`index` in subscript expression (`base[index]`) \" +\n-            \"must be a numeric type if the base expression is text_array\");\n+        expectedException.expectMessage(\"No cast function found for return type undefined\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjg4ODE4", "url": "https://github.com/crate/crate/pull/9928#pullrequestreview-410688818", "createdAt": "2020-05-13T08:13:23Z", "commit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoxMzoyM1rOGUmYcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoxNDowOFrOGUmaIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1MzU1Mw==", "bodyText": "Why are arrays of objects skipped here? Shouldn't the array-type/object-type be adapted instead?", "url": "https://github.com/crate/crate/pull/9928#discussion_r424253553", "createdAt": "2020-05-13T08:13:23Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/expressions/ExpressionAnalyzer.java", "diffHunk": "@@ -401,7 +402,11 @@ private FrameBoundDefinition convertToAnalyzedFrameBound(ExpressionAnalysisConte\n         int size = symbolsToCast.size();\n         List<Symbol> castList = new ArrayList<>(size);\n         for (int i = 0; i < size; i++) {\n-            castList.add(symbolsToCast.get(i).cast(targetTypes.get(i), false));\n+            var symbolToCast = symbolsToCast.get(i);\n+            if (ArrayType.unnest(symbolToCast.valueType()).id() != ObjectType.ID) {\n+                symbolToCast = symbolToCast.cast(targetTypes.get(i), false);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1Mzk4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // subscript(array(any)), text) -> any\n          \n          \n            \n                    // subscript(array(any)), integer) -> any\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/crate/crate/pull/9928#discussion_r424253984", "createdAt": "2020-05-13T08:14:08Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/scalar/SubscriptFunction.java", "diffHunk": "@@ -57,14 +57,73 @@\n \n     public static final String NAME = \"subscript\";\n \n+    private final Signature signature;\n     private final FunctionInfo info;\n     private final BiFunction<Object, Object, Object> lookup;\n \n     public static void register(ScalarFunctionModule module) {\n-        module.register(NAME, new Resolver());\n+        // subscript(array(object)), text) -> array(undefined)\n+        module.register(\n+            Signature.scalar(\n+                NAME,\n+                parseTypeSignature(\"array(object)\"),\n+                DataTypes.STRING.getTypeSignature(),\n+                parseTypeSignature(\"array(undefined)\")),\n+            (signature, dataTypes) -> new SubscriptFunction(\n+                signature,\n+                FunctionInfo.of(NAME, dataTypes, new ArrayType<>(DataTypes.UNDEFINED)),\n+                SubscriptFunction::lookupIntoListObjectsByName)\n+        );\n+        // subscript(array(any)), text) -> any", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c62a0509e1c54ed81f2c312395c53a723d0b39"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0f829ca106f51cf17f4acd6e0d6f0bcce78a9cf", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a0f829ca106f51cf17f4acd6e0d6f0bcce78a9cf", "committedDate": "2020-05-13T13:00:04Z", "message": "fixup! fixup! Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "014b49e422656643b5a449b398e3a4cf0f2af430", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/014b49e422656643b5a449b398e3a4cf0f2af430", "committedDate": "2020-05-13T09:35:44Z", "message": "fixup! Use the new func registry for the subscript functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTM1MTE3", "url": "https://github.com/crate/crate/pull/9928#pullrequestreview-410935117", "createdAt": "2020-05-13T13:40:54Z", "commit": {"oid": "d8a19c3254cd1e56c7c6734c803a1984e8b88c7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0MDo1NFrOGUyJEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzo0MDo1NFrOGUyJEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0NjIyNg==", "bodyText": "so basically the cast for the object and array(object) was added coz the target type, the one that comes from the signature, has the empty inner types while the source data type has some inner types. There is no point to cast an object to an object type with empty inner types, so probably these semantic is not correct. I've added this condition in the Symbol#cast. @mfussenegger (such as we talked a little bit about it during the daily coffee) wdyt?", "url": "https://github.com/crate/crate/pull/9928#discussion_r424446226", "createdAt": "2020-05-13T13:40:54Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/expression/symbol/Symbol.java", "diffHunk": "@@ -59,6 +61,9 @@ public final Symbol cast(DataType<?> targetType) {\n     public Symbol cast(DataType<?> targetType, boolean tryCast) {\n         if (targetType.equals(valueType())) {\n             return this;\n+        } else if (ArrayType.unnest(targetType).equals(DataTypes.UNTYPED_OBJECT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a19c3254cd1e56c7c6734c803a1984e8b88c7d"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8a19c3254cd1e56c7c6734c803a1984e8b88c7d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d8a19c3254cd1e56c7c6734c803a1984e8b88c7d", "committedDate": "2020-05-13T13:35:45Z", "message": "fixup! fixup! Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "871be74243c8661594f2bf4ce7933b3c1ac44a5d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/871be74243c8661594f2bf4ce7933b3c1ac44a5d", "committedDate": "2020-05-13T13:53:57Z", "message": "fixup! Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "871be74243c8661594f2bf4ce7933b3c1ac44a5d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/871be74243c8661594f2bf4ce7933b3c1ac44a5d", "committedDate": "2020-05-13T13:53:57Z", "message": "fixup! Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "1c05c116dbfc17350ade38f536c642b151ae8131", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1c05c116dbfc17350ade38f536c642b151ae8131", "committedDate": "2020-05-13T14:12:58Z", "message": "fixup! Use the new func registry for the subscript functions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934", "committedDate": "2020-05-13T19:46:15Z", "message": "Use the new func registry for the subscript functions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c05c116dbfc17350ade38f536c642b151ae8131", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1c05c116dbfc17350ade38f536c642b151ae8131", "committedDate": "2020-05-13T14:12:58Z", "message": "fixup! Use the new func registry for the subscript functions."}, "afterCommit": {"oid": "31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934", "committedDate": "2020-05-13T19:46:15Z", "message": "Use the new func registry for the subscript functions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjUwNzk3", "url": "https://github.com/crate/crate/pull/9928#pullrequestreview-411650797", "createdAt": "2020-05-14T09:59:50Z", "commit": {"oid": "31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzYxMzg4", "url": "https://github.com/crate/crate/pull/9928#pullrequestreview-411761388", "createdAt": "2020-05-14T12:40:52Z", "commit": {"oid": "31ad836ac588d9cc0d13c5c2b3e4c1d8fbeee934"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efad7699460b87416a62b59da47a0a15270d9be3", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/efad7699460b87416a62b59da47a0a15270d9be3", "committedDate": "2020-05-14T12:42:26Z", "message": "Merge branch 'master' into r/subscript-functions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3350, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}