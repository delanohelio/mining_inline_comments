{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyODQyMzYy", "number": 9916, "title": "Extend pg_proc table based on the new function signatures.", "bodyText": "Summary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-05-04T09:40:06Z", "url": "https://github.com/crate/crate/pull/9916", "merged": true, "mergeCommit": {"oid": "89f7f4eb1dcc6eec9e1895729cf0cb1bfae07773"}, "closed": true, "closedAt": "2020-05-06T08:54:17Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd_MIEgBqjMyOTk3ODU5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcekS7YABqjMzMDczOTE2NDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23efd743067310e2d398dd062b80b818be0c9f48", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/23efd743067310e2d398dd062b80b818be0c9f48", "committedDate": "2020-05-04T09:39:40Z", "message": "Extend pg_proc table based on the new function signatures."}, "afterCommit": {"oid": "c2eeceae6504b979d47edd196da836e27526a050", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/c2eeceae6504b979d47edd196da836e27526a050", "committedDate": "2020-05-04T13:00:34Z", "message": "Extend pg_proc table based on the new function signatures."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDAyMjAw", "url": "https://github.com/crate/crate/pull/9916#pullrequestreview-405002200", "createdAt": "2020-05-04T13:46:46Z", "commit": {"oid": "c2eeceae6504b979d47edd196da836e27526a050"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0Njo0NlrOGQBGSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo1MDowNFrOGQBPxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0ODM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static DataType<?> safeOfName(String typeName) {\n          \n          \n            \n                public static DataType<?> ofNameOrNull(String typeName) {\n          \n      \n    \n    \n  \n\nIn other places safe is used to indicate that an error is thrown if the name doesn't exist. E.g indexServiceSafe. I'd use a different name to not overload the same expression for two different purposes - that would confuse readers.", "url": "https://github.com/crate/crate/pull/9916#discussion_r419448392", "createdAt": "2020-05-04T13:46:46Z", "author": {"login": "mfussenegger"}, "path": "common/src/main/java/io/crate/types/DataTypes.java", "diffHunk": "@@ -343,14 +343,19 @@ private static boolean safeConversionPossible(DataType type1, DataType type2) {\n         entry(\"timestamp\", TIMESTAMPZ),\n         entry(\"interval\", INTERVAL));\n \n-    public static DataType ofName(String name) {\n-        DataType dataType = TYPES_BY_NAME_OR_ALIAS.get(name);\n+    public static DataType<?> ofName(String typeName) {\n+        DataType<?> dataType = safeOfName(typeName);\n         if (dataType == null) {\n-            throw new IllegalArgumentException(\"Cannot find data type: \" + name);\n+            throw new IllegalArgumentException(\"Cannot find data type: \" + typeName);\n         }\n         return dataType;\n     }\n \n+    @Nullable\n+    public static DataType<?> safeOfName(String typeName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2eeceae6504b979d47edd196da836e27526a050"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0OTU3Mg==", "bodyText": "Could this be moved to the SignatureBindingInfo, or do we need this always available?", "url": "https://github.com/crate/crate/pull/9916#discussion_r419449572", "createdAt": "2020-05-04T13:48:23Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/metadata/functions/Signature.java", "diffHunk": "@@ -308,6 +312,10 @@ public TypeSignature getReturnType() {\n         return returnType;\n     }\n \n+    public boolean variableArity() {\n+        return variableArity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2eeceae6504b979d47edd196da836e27526a050"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ1MDgyMg==", "bodyText": "Can you add a reference to where this is coming from?\nWould also rename such as to Because typalign of any is integer", "url": "https://github.com/crate/crate/pull/9916#discussion_r419450822", "createdAt": "2020-05-04T13:50:04Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/protocols/postgres/types/AnyType.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.protocols.postgres.types;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+import javax.annotation.Nonnull;\n+import java.nio.charset.StandardCharsets;\n+\n+public class AnyType extends PGType<Integer> {\n+    // we represent the any type as integer,\n+    // such as the typalign of any is integer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2eeceae6504b979d47edd196da836e27526a050"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1dd95e3b8367c10d8b49b78c26893379d6d4dc4c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1dd95e3b8367c10d8b49b78c26893379d6d4dc4c", "committedDate": "2020-05-04T14:46:16Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}, "afterCommit": {"oid": "17539ffa7f4cd1e5519ff53cbf635588856b3bb0", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/17539ffa7f4cd1e5519ff53cbf635588856b3bb0", "committedDate": "2020-05-05T09:11:07Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17539ffa7f4cd1e5519ff53cbf635588856b3bb0", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/17539ffa7f4cd1e5519ff53cbf635588856b3bb0", "committedDate": "2020-05-05T09:11:07Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}, "afterCommit": {"oid": "b471a12148686363bdcaf93a1e34225e19d0f55d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b471a12148686363bdcaf93a1e34225e19d0f55d", "committedDate": "2020-05-05T09:23:30Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1Njk0MjQ4", "url": "https://github.com/crate/crate/pull/9916#pullrequestreview-405694248", "createdAt": "2020-05-05T11:18:07Z", "commit": {"oid": "b471a12148686363bdcaf93a1e34225e19d0f55d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToxODowN1rOGQk15Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToxOTo1NFrOGQk5Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAzNDAyMQ==", "bodyText": "this can be removed", "url": "https://github.com/crate/crate/pull/9916#discussion_r420034021", "createdAt": "2020-05-05T11:18:07Z", "author": {"login": "seut"}, "path": "sql/src/test/java/io/crate/metadata/functions/SignatureTest.java", "diffHunk": "@@ -47,6 +47,7 @@ public void test_streaming_of_signature_and_type_signatures() throws Exception {\n         var signature = Signature.builder()\n             .name(\"foo\")\n             .kind(FunctionInfo.Type.SCALAR)\n+            .setVariableArity(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b471a12148686363bdcaf93a1e34225e19d0f55d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAzNDg2Mg==", "bodyText": "in PostgreSQL this is anyarray. why is it _any? this is not very expressive ;)", "url": "https://github.com/crate/crate/pull/9916#discussion_r420034862", "createdAt": "2020-05-05T11:19:54Z", "author": {"login": "seut"}, "path": "docs/interfaces/postgres.rst", "diffHunk": "@@ -190,9 +190,11 @@ table available in CrateDB::\n     | 1186 | interval                     |     1187 |       0 |     16 | T           |\n     | 1187 | _interval                    |        0 |    1186 |     -1 | A           |\n     | 2249 | record                       |     2287 |       0 |     -1 | P           |\n+    | 2276 | any                          |        0 |       0 |      4 | P           |\n+    | 2277 | _any                         |        0 |    2276 |     -1 | A           |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b471a12148686363bdcaf93a1e34225e19d0f55d"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b471a12148686363bdcaf93a1e34225e19d0f55d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b471a12148686363bdcaf93a1e34225e19d0f55d", "committedDate": "2020-05-05T09:23:30Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}, "afterCommit": {"oid": "1cf40689ab1bf6b99bee6805957affbc0c1e909b", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1cf40689ab1bf6b99bee6805957affbc0c1e909b", "committedDate": "2020-05-05T12:05:58Z", "message": "Extend pg_proc table based on the new function signatures."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTA2Mzg4", "url": "https://github.com/crate/crate/pull/9916#pullrequestreview-405906388", "createdAt": "2020-05-05T15:33:08Z", "commit": {"oid": "1cf40689ab1bf6b99bee6805957affbc0c1e909b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTozMzowOFrOGQvIIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTozMzowOFrOGQvIIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIwMjUyOQ==", "bodyText": "Could use .get instead of .getOrDefault", "url": "https://github.com/crate/crate/pull/9916#discussion_r420202529", "createdAt": "2020-05-05T15:33:08Z", "author": {"login": "mfussenegger"}, "path": "common/src/main/java/io/crate/types/DataTypes.java", "diffHunk": "@@ -343,14 +343,19 @@ private static boolean safeConversionPossible(DataType type1, DataType type2) {\n         entry(\"timestamp\", TIMESTAMPZ),\n         entry(\"interval\", INTERVAL));\n \n-    public static DataType ofName(String name) {\n-        DataType dataType = TYPES_BY_NAME_OR_ALIAS.get(name);\n+    public static DataType<?> ofName(String typeName) {\n+        DataType<?> dataType = ofNameOrNull(typeName);\n         if (dataType == null) {\n-            throw new IllegalArgumentException(\"Cannot find data type: \" + name);\n+            throw new IllegalArgumentException(\"Cannot find data type: \" + typeName);\n         }\n         return dataType;\n     }\n \n+    @Nullable\n+    public static DataType<?> ofNameOrNull(String typeName) {\n+        return TYPES_BY_NAME_OR_ALIAS.getOrDefault(typeName, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cf40689ab1bf6b99bee6805957affbc0c1e909b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzU5NDgw", "url": "https://github.com/crate/crate/pull/9916#pullrequestreview-406359480", "createdAt": "2020-05-06T07:25:09Z", "commit": {"oid": "9f249012d43f7a6b038c2f826d922491c559d462"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01feeef5dd1f79b5f9b525412ca22ed49003cf20", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/01feeef5dd1f79b5f9b525412ca22ed49003cf20", "committedDate": "2020-05-06T08:20:55Z", "message": "Add PostgreSQL any and anyarray data types.\n\nTypes are used internally to represent function signature\ntype parameters of any type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdd49c9b0932b108fe383907fb77b2729ca1d4ee", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/bdd49c9b0932b108fe383907fb77b2729ca1d4ee", "committedDate": "2020-05-06T08:20:55Z", "message": "Extend pg_proc table based on the new function signatures."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f249012d43f7a6b038c2f826d922491c559d462", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9f249012d43f7a6b038c2f826d922491c559d462", "committedDate": "2020-05-05T17:29:39Z", "message": "fixup! Extend pg_proc table based on the new function signatures."}, "afterCommit": {"oid": "bdd49c9b0932b108fe383907fb77b2729ca1d4ee", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/bdd49c9b0932b108fe383907fb77b2729ca1d4ee", "committedDate": "2020-05-06T08:20:55Z", "message": "Extend pg_proc table based on the new function signatures."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3331, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}