{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjM0NTgy", "number": 9957, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0MDozNlrOD9UYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0NDoyNVrOD9Ud9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjIzNjY4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0MDozNlrOGWvZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0MDozNlrOGWvZrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5ODQ3Ng==", "bodyText": "We could also keep it as primitive int with Integer.MAX_VALUE for the case that is represented as null now.", "url": "https://github.com/crate/crate/pull/9957#discussion_r426498476", "createdAt": "2020-05-18T09:40:36Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "diffHunk": "@@ -199,6 +210,7 @@ public KeywordFieldMapper build(BuilderContext context) {\n \n         private NamedAnalyzer normalizer = null;\n         private boolean splitQueriesOnWhitespace;\n+        private Integer lengthLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f71299fae1a4a85178dcbe2a79823263f14a15a"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI0MjczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0MjoxM1rOGWvddg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0MjoxM1rOGWvddg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5OTQ0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.ignoreAbove = ((KeywordFieldMapper) mergeWith).ignoreAbove;\n          \n          \n            \n                    this.ignoreAbove = mw.ignoreAbove;", "url": "https://github.com/crate/crate/pull/9957#discussion_r426499446", "createdAt": "2020-05-18T09:42:13Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java", "diffHunk": "@@ -420,7 +445,13 @@ protected String contentType() {\n     @Override\n     protected void doMerge(Mapper mergeWith, boolean updateAllTypes) {\n         super.doMerge(mergeWith, updateAllTypes);\n+        var mw = ((KeywordFieldMapper) mergeWith);\n         this.ignoreAbove = ((KeywordFieldMapper) mergeWith).ignoreAbove;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f71299fae1a4a85178dcbe2a79823263f14a15a"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI1MDc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0NDoyNVrOGWvihg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMzo1N1rOGWwSMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMDc0Mg==", "bodyText": "Is it necessary to have this property also on the TextFieldMapper ? Given that VARCHAR(lengthLimit) is mostly introduced for compatibility with SQL/PostgreSQL I think supporting it also for analyzed columns is not really necessary. If somebody adds an analyzer to a column, then it's already CrateDB dialect specific.", "url": "https://github.com/crate/crate/pull/9957#discussion_r426500742", "createdAt": "2020-05-18T09:44:25Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -672,10 +701,10 @@ private static boolean hasGaps(CachingTokenFilter stream) throws IOException {\n             }\n             return new PagedBytesIndexFieldData.Builder(fielddataMinFrequency, fielddataMaxFrequency, fielddataMinSegmentSize);\n         }\n-\n     }\n \n     private int positionIncrementGap;\n+    private Integer lengthLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fc2b51584b86bc504e30f499a9b54720f86509"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwNDA1Nw==", "bodyText": "didn't even think about it :(  shall we then forbid declaration of the length limit on analyzed columns in the crate analyzer?", "url": "https://github.com/crate/crate/pull/9957#discussion_r426504057", "createdAt": "2020-05-18T09:49:37Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -672,10 +701,10 @@ private static boolean hasGaps(CachingTokenFilter stream) throws IOException {\n             }\n             return new PagedBytesIndexFieldData.Builder(fielddataMinFrequency, fielddataMaxFrequency, fielddataMinSegmentSize);\n         }\n-\n     }\n \n     private int positionIncrementGap;\n+    private Integer lengthLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMDc0Mg=="}, "originalCommit": {"oid": "08fc2b51584b86bc504e30f499a9b54720f86509"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMjk0NA==", "bodyText": "Probably makes sense.\nOne other thing about analyzed columns is that they're tokenized, so whether the length would apply to the individual tokens or the raw input would also be a bit vague.", "url": "https://github.com/crate/crate/pull/9957#discussion_r426512944", "createdAt": "2020-05-18T10:03:57Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -672,10 +701,10 @@ private static boolean hasGaps(CachingTokenFilter stream) throws IOException {\n             }\n             return new PagedBytesIndexFieldData.Builder(fielddataMinFrequency, fielddataMaxFrequency, fielddataMinSegmentSize);\n         }\n-\n     }\n \n     private int positionIncrementGap;\n+    private Integer lengthLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMDc0Mg=="}, "originalCommit": {"oid": "08fc2b51584b86bc504e30f499a9b54720f86509"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1500, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}