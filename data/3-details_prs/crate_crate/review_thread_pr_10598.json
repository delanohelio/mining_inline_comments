{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDg3MzU5", "number": 10598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNDoyNFrOEneEqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNDoyNFrOEneEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODIyNjMyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/io/crate/statistics/ReservoirTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDowNDoyNFrOHYFCtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDoxOTo1MFrOHYFsnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMDQ4NQ==", "bodyText": "I think I'd just make itemsSeen package private to avoid the reflection, but no strong opinion.", "url": "https://github.com/crate/crate/pull/10598#discussion_r495010485", "createdAt": "2020-09-25T14:04:24Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/statistics/ReservoirTest.java", "diffHunk": "@@ -40,4 +42,18 @@ public void test_sampling() {\n         }\n         assertThat(samples.samples(), contains(83, 50, 13, 18, 38));\n     }\n+\n+    @Test\n+    public void test_reservoir_is_protected_against_integer_overflow() throws Exception {\n+        Random random = new Random(42);\n+\n+        Reservoir<Long> samples = new Reservoir<>(5, random);\n+        Field f1 = samples.getClass().getDeclaredField(\"itemsSeen\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17fb5a0bbc15f05952dcb2e540ffa9f2e4fbeaa7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMTIxMg==", "bodyText": "I'd prefer not to make it public because it would only be needed for testing.", "url": "https://github.com/crate/crate/pull/10598#discussion_r495021212", "createdAt": "2020-09-25T14:19:50Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/statistics/ReservoirTest.java", "diffHunk": "@@ -40,4 +42,18 @@ public void test_sampling() {\n         }\n         assertThat(samples.samples(), contains(83, 50, 13, 18, 38));\n     }\n+\n+    @Test\n+    public void test_reservoir_is_protected_against_integer_overflow() throws Exception {\n+        Random random = new Random(42);\n+\n+        Reservoir<Long> samples = new Reservoir<>(5, random);\n+        Field f1 = samples.getClass().getDeclaredField(\"itemsSeen\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMDQ4NQ=="}, "originalCommit": {"oid": "17fb5a0bbc15f05952dcb2e540ffa9f2e4fbeaa7"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1026, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}