{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjk5MzY3", "number": 9524, "title": "Implement equals, hashCode and isConvertableTo in ObjectType.", "bodyText": "Summary of the changes / Why this improves CrateDB\nImplements missing equals, hashCode and isConvertableTo in the object data type.\nChecklist\n\n User relevant changes are recorded in CHANGES.txt\n Touched code is covered by tests\n Documentation has been updated if necessary\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-01-16T15:17:49Z", "url": "https://github.com/crate/crate/pull/9524", "merged": true, "mergeCommit": {"oid": "b6a3969966b1f809ce74bddbca47220d6a29081f"}, "closed": true, "closedAt": "2020-01-20T15:37:12Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7MsdagBqjI5NTc3NjIxMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8N5bugBqjI5NjMyNjkxNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d7167a5162e8cf6015791694e27e9d34f0dc276", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0d7167a5162e8cf6015791694e27e9d34f0dc276", "committedDate": "2020-01-16T15:16:31Z", "message": "Implement equals and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "d455ca66c259f5cee03e7f9886bce1dbb6f8ef6f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d455ca66c259f5cee03e7f9886bce1dbb6f8ef6f", "committedDate": "2020-01-17T11:03:46Z", "message": "Implement equals and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d455ca66c259f5cee03e7f9886bce1dbb6f8ef6f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d455ca66c259f5cee03e7f9886bce1dbb6f8ef6f", "committedDate": "2020-01-17T11:03:46Z", "message": "Implement equals and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "2718498c23b293443e165929fd483a97065ce562", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2718498c23b293443e165929fd483a97065ce562", "committedDate": "2020-01-17T14:19:29Z", "message": "Implement equals and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2718498c23b293443e165929fd483a97065ce562", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2718498c23b293443e165929fd483a97065ce562", "committedDate": "2020-01-17T14:19:29Z", "message": "Implement equals and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "e7d43c82465d8205d3d50231be8f9e35e0c0fbe8", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e7d43c82465d8205d3d50231be8f9e35e0c0fbe8", "committedDate": "2020-01-17T14:39:42Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7d43c82465d8205d3d50231be8f9e35e0c0fbe8", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e7d43c82465d8205d3d50231be8f9e35e0c0fbe8", "committedDate": "2020-01-17T14:39:42Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "9e1c76f3ced71f027547cd17f13526379761c762", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9e1c76f3ced71f027547cd17f13526379761c762", "committedDate": "2020-01-20T09:06:17Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e1c76f3ced71f027547cd17f13526379761c762", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9e1c76f3ced71f027547cd17f13526379761c762", "committedDate": "2020-01-20T09:06:17Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "af533c9ae03c173541bb3f6b5671dad3feee0a29", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/af533c9ae03c173541bb3f6b5671dad3feee0a29", "committedDate": "2020-01-20T10:08:09Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af533c9ae03c173541bb3f6b5671dad3feee0a29", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/af533c9ae03c173541bb3f6b5671dad3feee0a29", "committedDate": "2020-01-20T10:08:09Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "500292e3efb0abc722f20ca75521ad174bec244d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/500292e3efb0abc722f20ca75521ad174bec244d", "committedDate": "2020-01-20T11:05:08Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "500292e3efb0abc722f20ca75521ad174bec244d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/500292e3efb0abc722f20ca75521ad174bec244d", "committedDate": "2020-01-20T11:05:08Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "e34c20ac6e67ad2f2c88e6cc738a99926e5c39a4", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e34c20ac6e67ad2f2c88e6cc738a99926e5c39a4", "committedDate": "2020-01-20T12:46:35Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e34c20ac6e67ad2f2c88e6cc738a99926e5c39a4", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e34c20ac6e67ad2f2c88e6cc738a99926e5c39a4", "committedDate": "2020-01-20T12:46:35Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9dcb773e32cc5004064c93d4b471896fe071a732", "committedDate": "2020-01-20T13:07:43Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1Mjk1OTA1", "url": "https://github.com/crate/crate/pull/9524#pullrequestreview-345295905", "createdAt": "2020-01-20T13:09:09Z", "commit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzowOToxMFrOFfd0IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzowOToxMFrOFfd0IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzODY1Nw==", "bodyText": "or shall we go with catching Exception as it is done in  normalizePrimitiveValue?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368538657", "createdAt": "2020-01-20T13:09:10Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/analyze/expressions/ValueNormalizer.java", "diffHunk": "@@ -68,7 +69,7 @@ public static Symbol normalizeInputForReference(Symbol valueSymbol, Reference re\n         Literal<?> literal;\n         try {\n             literal = (Literal<?>) valueSymbol.cast(reference.valueType());\n-        } catch (ConversionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9dcb773e32cc5004064c93d4b471896fe071a732", "committedDate": "2020-01-20T13:07:43Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "f5eacab9d7e16b0145b69187dd24426212453a76", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/f5eacab9d7e16b0145b69187dd24426212453a76", "committedDate": "2020-01-20T13:25:56Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1Mjk5MDc0", "url": "https://github.com/crate/crate/pull/9524#pullrequestreview-345299074", "createdAt": "2020-01-20T13:15:16Z", "commit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoxNToxNlrOFfd9Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzo1Nzo1NlrOFffJ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MTAxNA==", "bodyText": "why isn't this type added to the list above (no extra assertion)?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368541014", "createdAt": "2020-01-20T13:15:16Z", "author": {"login": "seut"}, "path": "common/src/test/java/io/crate/types/TypeConversionTest.java", "diffHunk": "@@ -183,14 +185,17 @@ public void testIpNegativeValue() throws Exception {\n \n     @Test\n     public void selfConversionTest() throws Exception {\n-        for (DataType type : com.google.common.collect.Iterables.concat(\n+        for (DataType<?> type : Lists2.concat(\n             DataTypes.PRIMITIVE_TYPES,\n-            Arrays.asList(DataTypes.UNDEFINED, DataTypes.GEO_POINT, DataTypes.GEO_SHAPE, ObjectType.untyped()))) {\n-\n-            assertTrue(type.isConvertableTo(type));\n-\n-            ArrayType arrayType = new ArrayType(type);\n-            assertTrue(arrayType.isConvertableTo(arrayType));\n+            List.of(DataTypes.UNDEFINED, DataTypes.GEO_POINT, DataTypes.GEO_SHAPE, ObjectType.untyped()))) {\n+            assertThat(\n+                \"type '\" + type + \"' is not self convertible\",\n+                type.isConvertableTo(type), is(true));\n+\n+            ArrayType<?> arrayType = new ArrayType<>(type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MjIyOQ==", "bodyText": "shouldn't this be ObjectType.undefined() as well? otherwise it tests the same as here https://github.com/crate/crate/pull/9524/files#diff-726498b21d19949db0e0009971e5b32eR253", "url": "https://github.com/crate/crate/pull/9524#discussion_r368542229", "createdAt": "2020-01-20T13:18:00Z", "author": {"login": "seut"}, "path": "common/src/test/java/io/crate/types/TypeConversionTest.java", "diffHunk": "@@ -234,4 +239,38 @@ public void testTimestampToDoubleConversion() {\n             is(true));\n \n     }\n+\n+    @Test\n+    public void test_object_to_object_conversion_no_inner() {\n+        var objectTypeWithInner = ObjectType.builder().setInnerType(\"field\", DataTypes.STRING).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2MDE1OA==", "bodyText": "unused imports?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368560158", "createdAt": "2020-01-20T13:57:00Z", "author": {"login": "seut"}, "path": "sql/src/test/java/io/crate/integrationtests/SQLTypeMappingTest.java", "diffHunk": "@@ -22,6 +22,8 @@\n package io.crate.integrationtests;\n \n import io.crate.action.sql.SQLActionException;\n+import io.crate.exceptions.ColumnValidationException;\n+import io.crate.exceptions.SQLParseException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5eacab9d7e16b0145b69187dd24426212453a76"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2MDYxOQ==", "bodyText": "maybe I'm missing something: how can a PgArrayParsingException happen here?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368560619", "createdAt": "2020-01-20T13:57:56Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/analyze/expressions/ValueNormalizer.java", "diffHunk": "@@ -68,7 +69,7 @@ public static Symbol normalizeInputForReference(Symbol valueSymbol, Reference re\n         Literal<?> literal;\n         try {\n             literal = (Literal<?>) valueSymbol.cast(reference.valueType());\n-        } catch (ConversionException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzODY1Nw=="}, "originalCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzI2NTcz", "url": "https://github.com/crate/crate/pull/9524#pullrequestreview-345326573", "createdAt": "2020-01-20T14:00:48Z", "commit": {"oid": "f5eacab9d7e16b0145b69187dd24426212453a76"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDowMDo0OFrOFffPPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDowMzoxN1rOFffT6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2MTk4Mg==", "bodyText": "Is it okay to use unnest like this here? What if one array has more dimensions than the other?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368561982", "createdAt": "2020-01-20T14:00:48Z", "author": {"login": "mfussenegger"}, "path": "common/src/main/java/io/crate/types/DataTypes.java", "diffHunk": "@@ -413,6 +414,28 @@ public static void register(int id, Writeable.Reader<DataType<?>> dataType) {\n         return streamer;\n     }\n \n+    public static boolean compareTypesById(DataType<?> left, DataType<?> right) {\n+        if (left.id() != right.id()) {\n+            return false;\n+        } else if (isArray(left)) {\n+            return compareTypesById(unnest(left), unnest(right));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5eacab9d7e16b0145b69187dd24426212453a76"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2MjUxMA==", "bodyText": "should we add an assertion that first and second implement RandomAccess ?", "url": "https://github.com/crate/crate/pull/9524#discussion_r368562510", "createdAt": "2020-01-20T14:01:52Z", "author": {"login": "mfussenegger"}, "path": "common/src/main/java/io/crate/types/DataTypes.java", "diffHunk": "@@ -413,6 +414,28 @@ public static void register(int id, Writeable.Reader<DataType<?>> dataType) {\n         return streamer;\n     }\n \n+    public static boolean compareTypesById(DataType<?> left, DataType<?> right) {\n+        if (left.id() != right.id()) {\n+            return false;\n+        } else if (isArray(left)) {\n+            return compareTypesById(unnest(left), unnest(right));\n+        } else {\n+            return true;\n+        }\n+    }\n+\n+    public static boolean compareTypesById(List<DataType> first, List<DataType> second) {\n+        if (first.size() != second.size()) {\n+            return false;\n+        }\n+        for (int i = 0; i < first.size(); i++) {\n+            if (!compareTypesById(first.get(i), second.get(i))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5eacab9d7e16b0145b69187dd24426212453a76"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU2MzE3OQ==", "bodyText": "I think it is better to be more specific when catching the exceptions.", "url": "https://github.com/crate/crate/pull/9524#discussion_r368563179", "createdAt": "2020-01-20T14:03:17Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/analyze/expressions/ValueNormalizer.java", "diffHunk": "@@ -68,7 +69,7 @@ public static Symbol normalizeInputForReference(Symbol valueSymbol, Reference re\n         Literal<?> literal;\n         try {\n             literal = (Literal<?>) valueSymbol.cast(reference.valueType());\n-        } catch (ConversionException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUzODY1Nw=="}, "originalCommit": {"oid": "9dcb773e32cc5004064c93d4b471896fe071a732"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzY0ODQ5", "url": "https://github.com/crate/crate/pull/9524#pullrequestreview-345364849", "createdAt": "2020-01-20T14:59:04Z", "commit": {"oid": "6e65e0222706d04cbebde2841b415f1f948f1ab6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24db150b8c3b154ac7d99bea4454dc2ce33807c1", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/24db150b8c3b154ac7d99bea4454dc2ce33807c1", "committedDate": "2020-01-20T15:01:44Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e65e0222706d04cbebde2841b415f1f948f1ab6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/6e65e0222706d04cbebde2841b415f1f948f1ab6", "committedDate": "2020-01-20T14:40:18Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "24db150b8c3b154ac7d99bea4454dc2ce33807c1", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/24db150b8c3b154ac7d99bea4454dc2ce33807c1", "committedDate": "2020-01-20T15:01:44Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3916, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}