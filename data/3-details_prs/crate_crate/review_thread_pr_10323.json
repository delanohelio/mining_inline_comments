{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTgwNTY4", "number": 10323, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozOTo1MVrOEWtCFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozOTo1MVrOEWtCFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjQxOTQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/expression/reference/sys/shard/ShardRowContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODozOTo1MVrOG-F5LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODo1Mzo0NVrOG-GUeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MTQ1Mg==", "bodyText": "getRetentionLeaseStats can return null is it safe to use it like this?", "url": "https://github.com/crate/crate/pull/10323#discussion_r467761452", "createdAt": "2020-08-10T08:39:51Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/expression/reference/sys/shard/ShardRowContext.java", "diffHunk": "@@ -349,4 +353,28 @@ public Float recoveryFilesPercent() {\n             ? null\n             : recoveryState.getIndex().recoveredFilesPercent();\n     }\n+\n+    public Long retentionLeasesPrimaryTerm() {\n+        try {\n+            return indexShard.getRetentionLeaseStats().leases().primaryTerm();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a0be7a02517107146b776518ff638c3052ce58"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2NDY1Mg==", "bodyText": "Currently the expression implementations in SystemTable catch npe's, so yes it is safe. But maybe worth handling here to avoid unnecessary stacktrace generations.\nI'll adapt it", "url": "https://github.com/crate/crate/pull/10323#discussion_r467764652", "createdAt": "2020-08-10T08:46:15Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/reference/sys/shard/ShardRowContext.java", "diffHunk": "@@ -349,4 +353,28 @@ public Float recoveryFilesPercent() {\n             ? null\n             : recoveryState.getIndex().recoveredFilesPercent();\n     }\n+\n+    public Long retentionLeasesPrimaryTerm() {\n+        try {\n+            return indexShard.getRetentionLeaseStats().leases().primaryTerm();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MTQ1Mg=="}, "originalCommit": {"oid": "69a0be7a02517107146b776518ff638c3052ce58"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2ODQ0MA==", "bodyText": "From the code IndexShard.getRetentionLeaseStats() will never return null (compared to ShardStats.getRetentionLeaseStats() which can return null) or do I miss anything?", "url": "https://github.com/crate/crate/pull/10323#discussion_r467768440", "createdAt": "2020-08-10T08:53:45Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/expression/reference/sys/shard/ShardRowContext.java", "diffHunk": "@@ -349,4 +353,28 @@ public Float recoveryFilesPercent() {\n             ? null\n             : recoveryState.getIndex().recoveredFilesPercent();\n     }\n+\n+    public Long retentionLeasesPrimaryTerm() {\n+        try {\n+            return indexShard.getRetentionLeaseStats().leases().primaryTerm();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MTQ1Mg=="}, "originalCommit": {"oid": "69a0be7a02517107146b776518ff638c3052ce58"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1254, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}