{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTc1MzI1", "number": 10492, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1OToyMFrOEgVuPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1OToyMFrOEgVuPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzQ1NzkxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/io/crate/integrationtests/KillIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1OToyMFrOHNJRYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1OToyMFrOHNJRYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0NTQ0Mg==", "bodyText": "This handles the following case:\n\n  \n    \n      crate/libs/dex/src/test/java/io/crate/testing/FailingBatchIterator.java\n    \n    \n         Line 46\n      in\n      6814214\n    \n    \n    \n    \n\n        \n          \n           Exceptions.rethrowUnchecked(new InterruptedException(\"Job killed\")); \n        \n    \n  \n\n\nThe test used to match against SqlActionException which wrapped all underlying exceptions. Now since SqlActionException is gone we need to match each exception type.", "url": "https://github.com/crate/crate/pull/10492#discussion_r483545442", "createdAt": "2020-09-04T10:59:20Z", "author": {"login": "mkleen"}, "path": "server/src/test/java/io/crate/integrationtests/KillIntegrationTest.java", "diffHunk": "@@ -95,7 +95,7 @@ private void assertGotCancelled(final String statement, @Nullable final Object[]\n                 future.get(10, TimeUnit.SECONDS);\n             } catch (Throwable exception) {\n                 exception = SQLExceptions.unwrap(exception); // wrapped in ExecutionException\n-                assertThat(exception, instanceOf(JobKilledException.class));\n+                assertThat(exception, anyOf(instanceOf(JobKilledException.class), instanceOf(InterruptedException.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b92fd1e9ae38cdf7f6a63ec502840ea2f33c29"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1210, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}