{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDYyMzg2", "number": 9747, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyMjozNlrODmNaeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMDozNFrODmOMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzkyMjQ4OnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/io/crate/expression/scalar/string/StringRepeatFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyMjozNlrOFzfq3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyMjozNlrOFzfq3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MDU3Mg==", "bodyText": "This will fail on null", "url": "https://github.com/crate/crate/pull/9747#discussion_r389540572", "createdAt": "2020-03-09T09:22:36Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/expression/scalar/string/StringRepeatFunction.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.string;\n+\n+import io.crate.data.Input;\n+import io.crate.expression.scalar.ScalarFunctionModule;\n+import io.crate.metadata.FunctionIdent;\n+import io.crate.metadata.FunctionInfo;\n+import io.crate.metadata.Scalar;\n+import io.crate.metadata.TransactionContext;\n+import io.crate.types.DataTypes;\n+\n+import java.util.List;\n+\n+public final class StringRepeatFunction extends Scalar<String, Object> {\n+\n+    private static final FunctionInfo INFO = new FunctionInfo(\n+        new FunctionIdent(\n+            \"repeat\",\n+            List.of(DataTypes.STRING, DataTypes.INTEGER)\n+        ),\n+        DataTypes.STRING\n+    );\n+\n+    public static void register(ScalarFunctionModule module) {\n+        module.register(new StringRepeatFunction());\n+    }\n+\n+    @Override\n+    public String evaluate(TransactionContext txnCtx, Input<Object>[] args) {\n+        assert args.length == 2 : \"repeat takes exactly two arguments\";\n+        var text = (String) args[0].value();\n+        if (text == null) {\n+            return null;\n+        }\n+        var repetitions = (int) args[1].value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83503967183ace4a0400b13da51ad6fdaf46d3bb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDA0OTIyOnYy", "diffSide": "RIGHT", "path": "docs/general/builtins/scalar.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMDowM1rOFzg3Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMDowM1rOFzg3Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MDE0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ``length('string')``\n          \n          \n            \n            ``length(text)``", "url": "https://github.com/crate/crate/pull/9747#discussion_r389560146", "createdAt": "2020-03-09T10:00:03Z", "author": {"login": "seut"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -129,6 +129,15 @@ Each character counts only once, regardless of its byte size.\n     +-------------+\n     SELECT 1 row in set (... sec)\n \n+.. _scalar-length:\n+\n+``length('string')``", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c44d202b6470c144cca91c4db063c5ec47ae88d4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDA1MTAzOnYy", "diffSide": "RIGHT", "path": "docs/general/builtins/scalar.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMDozNFrOFzg4bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMTozNlrOFzg6qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MDQyOA==", "bodyText": "What is the return type?", "url": "https://github.com/crate/crate/pull/9747#discussion_r389560428", "createdAt": "2020-03-09T10:00:34Z", "author": {"login": "seut"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -129,6 +129,15 @@ Each character counts only once, regardless of its byte size.\n     +-------------+\n     SELECT 1 row in set (... sec)\n \n+.. _scalar-length:\n+\n+``length('string')``\n+--------------------\n+\n+Returns the number of characters in a string.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c44d202b6470c144cca91c4db063c5ec47ae88d4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MTAwMQ==", "bodyText": "Ah already solved by referencing to char_length, ignore my comment ;)", "url": "https://github.com/crate/crate/pull/9747#discussion_r389561001", "createdAt": "2020-03-09T10:01:36Z", "author": {"login": "seut"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -129,6 +129,15 @@ Each character counts only once, regardless of its byte size.\n     +-------------+\n     SELECT 1 row in set (... sec)\n \n+.. _scalar-length:\n+\n+``length('string')``\n+--------------------\n+\n+Returns the number of characters in a string.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MDQyOA=="}, "originalCommit": {"oid": "c44d202b6470c144cca91c4db063c5ec47ae88d4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1640, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}