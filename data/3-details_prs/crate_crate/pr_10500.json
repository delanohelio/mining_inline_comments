{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTcyODI0", "number": 10500, "title": "Improve error handling when group by with an undefined type", "bodyText": "Summary of the changes / Why this improves CrateDB\nAdded more detailed information on the error message when an undefined type is used in a GROUP BY. See #10359 (comment) for discussion on this.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-09-08T11:22:47Z", "url": "https://github.com/crate/crate/pull/10500", "merged": true, "mergeCommit": {"oid": "9acdae085adc636717247647829c8ea83b6b991d"}, "closed": true, "closedAt": "2020-09-09T20:12:47Z", "author": {"login": "mkleen"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG3EYsgBqjM3NDA3NjkxNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHQz4JgBqjM3NDczMTI4MzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "515293b37b2f8b02a27c580d91842026d8803291", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/515293b37b2f8b02a27c580d91842026d8803291", "committedDate": "2020-09-08T11:21:58Z", "message": "wip"}, "afterCommit": {"oid": "19c0d3184532fbe4664a2c953d0ce12ed2f642c2", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/19c0d3184532fbe4664a2c953d0ce12ed2f642c2", "committedDate": "2020-09-08T12:49:40Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTA0NzQy", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-484104742", "createdAt": "2020-09-08T12:57:36Z", "commit": {"oid": "19c0d3184532fbe4664a2c953d0ce12ed2f642c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjo1NzozNlrOHObmWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjo1NzozNlrOHObmWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5NDI5OA==", "bodyText": "psql returns a 42703 undefined_column in the case of an unknown column but i think this is a bit different here. We mention in the docs that the type object ignored cannot not be used for grouping https://crate.io/docs/crate/reference/en/4.2/general/ddl/data-types.html#ignored", "url": "https://github.com/crate/crate/pull/10500#discussion_r484894298", "createdAt": "2020-09-08T12:57:36Z", "author": {"login": "mkleen"}, "path": "server/src/test/java/io/crate/integrationtests/GroupByAggregateTest.java", "diffHunk": "@@ -673,9 +674,9 @@ public void testGroupByUnknownResultColumn() throws Exception {\n     @Test\n     public void testGroupByUnknownGroupByColumn() throws Exception {\n         this.setup.groupBySetup();\n-        Assertions.assertThrows(Exception.class,\n-                                () -> execute(\"select max(birthdate) from characters group by details_ignored['lol']\",\n-                                              \"Cannot GROUP BY type: undefined\"));\n+        assertThrows(() -> execute(\"select max(age) from characters group by details_ignored['lol']\"),\n+                     isSQLError(is(\"Using column type ignored 'details_ignored['lol']' for grouping or aggregations is not allowed\"),\n+                                INTERNAL_ERROR, BAD_REQUEST, 4000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c0d3184532fbe4664a2c953d0ce12ed2f642c2"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19c0d3184532fbe4664a2c953d0ce12ed2f642c2", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/19c0d3184532fbe4664a2c953d0ce12ed2f642c2", "committedDate": "2020-09-08T12:49:40Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "643a65b3884831512ba661664a69d5dafd6a030d", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/643a65b3884831512ba661664a69d5dafd6a030d", "committedDate": "2020-09-08T13:02:53Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTEwODAw", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-484110800", "createdAt": "2020-09-08T13:04:48Z", "commit": {"oid": "643a65b3884831512ba661664a69d5dafd6a030d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzowNDo0OFrOHOb3rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzowNDo0OFrOHOb3rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5ODczMw==", "bodyText": "We could probably just go with the analyzer test and remove the integration test.", "url": "https://github.com/crate/crate/pull/10500#discussion_r484898733", "createdAt": "2020-09-08T13:04:48Z", "author": {"login": "mkleen"}, "path": "server/src/test/java/io/crate/analyze/GroupByAnalyzerTest.java", "diffHunk": "@@ -118,6 +121,13 @@ public void testGroupByWithDistinctAggregation() throws Exception {\n         analyze(\"select count(DISTINCT name) from sys.nodes group by 1\");\n     }\n \n+    @Test\n+    public void test_group_by_unknown_column() {\n+        Assertions.assertThrows(IllegalArgumentException.class,\n+                                () -> analyze(\"select max(age) from foo.users group by details_ignored['lol']\"),\n+                                \"Using column type ignored 'details_ignored['lol']' for grouping or aggregations is not allowed\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "643a65b3884831512ba661664a69d5dafd6a030d"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "643a65b3884831512ba661664a69d5dafd6a030d", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/643a65b3884831512ba661664a69d5dafd6a030d", "committedDate": "2020-09-08T13:02:53Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "670bfa46b095620ef3f49172425f145c4fb94d4e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/670bfa46b095620ef3f49172425f145c4fb94d4e", "committedDate": "2020-09-08T13:07:41Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "670bfa46b095620ef3f49172425f145c4fb94d4e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/670bfa46b095620ef3f49172425f145c4fb94d4e", "committedDate": "2020-09-08T13:07:41Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "1746b949585ff096a23f9623745c54fc90c4a96c", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/1746b949585ff096a23f9623745c54fc90c4a96c", "committedDate": "2020-09-08T13:22:15Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1746b949585ff096a23f9623745c54fc90c4a96c", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/1746b949585ff096a23f9623745c54fc90c4a96c", "committedDate": "2020-09-08T13:22:15Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "b08bb8914c6de8fdde8ecf9e709c3eccd76ae014", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b08bb8914c6de8fdde8ecf9e709c3eccd76ae014", "committedDate": "2020-09-08T13:44:16Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTM1ODEz", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-484135813", "createdAt": "2020-09-08T13:24:56Z", "commit": {"oid": "670bfa46b095620ef3f49172425f145c4fb94d4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzoyNTowNlrOHOc3NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzoyNTowNlrOHOc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkxNDk5Ng==", "bodyText": "If there is an alias involved or some form of sub-query we'd have a Field instead of a Reference here and I think in that case the validation would be by-passed.\nI also wonder if we're too restrictive here - or rather, fail for the wrong reason. The problem is that we don't know the type and that it may be mixed, not that the column policy is ignored.\nSee the conversation here - we tell users that they can use aggregations on ignored columns if they use casts, the same applies for GROUP BY:\ncreate table tbl (obj object (ignored));\ninsert into tbl (obj) values ({x=10}), ({x=10}), ({x=20});\nselect obj['x'], count(*) from tbl group by 1;\nUnsupportedFeatureException[Cannot GROUP BY type: undefined]\n\ncr> select obj['x']::integer, count(*) from tbl group by 1;\n+---------------------------+----------+\n| cast(obj['x'] AS integer) | count(*) |\n+---------------------------+----------+\n|                        10 |        2 |\n|                        20 |        1 |\n+---------------------------+----------+\nWe could change the check to assert that there is a type, and the error could also point users to adding an explicit cast (+ pointing out a performance impact)", "url": "https://github.com/crate/crate/pull/10500#discussion_r484914996", "createdAt": "2020-09-08T13:25:06Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/symbol/GroupAndAggregateSemantics.java", "diffHunk": "@@ -76,6 +79,17 @@ public static void validate(List<Symbol> outputSymbols,\n         }\n     }\n \n+    private static void validateGroupBySymbol(Symbol groupBy) {\n+        if (groupBy instanceof Reference) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1746b949585ff096a23f9623745c54fc90c4a96c"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b08bb8914c6de8fdde8ecf9e709c3eccd76ae014", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b08bb8914c6de8fdde8ecf9e709c3eccd76ae014", "committedDate": "2020-09-08T13:44:16Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "d9e407f03fbe1651b3f55980d7df59d3e7445cc6", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d9e407f03fbe1651b3f55980d7df59d3e7445cc6", "committedDate": "2020-09-08T15:37:15Z", "message": "Change validation for group"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9e407f03fbe1651b3f55980d7df59d3e7445cc6", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d9e407f03fbe1651b3f55980d7df59d3e7445cc6", "committedDate": "2020-09-08T15:37:15Z", "message": "Change validation for group"}, "afterCommit": {"oid": "3a1e83baed6a38f85aef5b8c5269c169eb00c49f", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3a1e83baed6a38f85aef5b8c5269c169eb00c49f", "committedDate": "2020-09-08T15:43:47Z", "message": "Change validation for group by column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a1e83baed6a38f85aef5b8c5269c169eb00c49f", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3a1e83baed6a38f85aef5b8c5269c169eb00c49f", "committedDate": "2020-09-08T15:43:47Z", "message": "Change validation for group by column"}, "afterCommit": {"oid": "acc3a65917810b7d59ec9110b05d85c1d644960a", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/acc3a65917810b7d59ec9110b05d85c1d644960a", "committedDate": "2020-09-08T15:46:17Z", "message": "Change validation for group by column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acc3a65917810b7d59ec9110b05d85c1d644960a", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/acc3a65917810b7d59ec9110b05d85c1d644960a", "committedDate": "2020-09-08T15:46:17Z", "message": "Change validation for group by column"}, "afterCommit": {"oid": "ca2f460dcc24450ad5abf87958165e52f2ce61fa", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/ca2f460dcc24450ad5abf87958165e52f2ce61fa", "committedDate": "2020-09-08T15:50:11Z", "message": "Change validation for group by column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53fac360b15998cc46a69be05d771f48f94eec63", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/53fac360b15998cc46a69be05d771f48f94eec63", "committedDate": "2020-09-08T18:37:44Z", "message": "Add visitor to validate symbol type"}, "afterCommit": {"oid": "f674a1af7007998760608863a6f92b0ee76d2536", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/f674a1af7007998760608863a6f92b0ee76d2536", "committedDate": "2020-09-08T18:44:19Z", "message": "Add visitor to validate symbol type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f674a1af7007998760608863a6f92b0ee76d2536", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/f674a1af7007998760608863a6f92b0ee76d2536", "committedDate": "2020-09-08T18:44:19Z", "message": "Add visitor to validate symbol type"}, "afterCommit": {"oid": "663a88c8159df8f5fa10e64a2236d6d046a58a63", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/663a88c8159df8f5fa10e64a2236d6d046a58a63", "committedDate": "2020-09-08T18:53:36Z", "message": "Add visitor to validate symbol type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "663a88c8159df8f5fa10e64a2236d6d046a58a63", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/663a88c8159df8f5fa10e64a2236d6d046a58a63", "committedDate": "2020-09-08T18:53:36Z", "message": "Add visitor to validate symbol type"}, "afterCommit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/8787ba944fc48f0234c1f5907c489e6e12766f9b", "committedDate": "2020-09-09T07:43:22Z", "message": "Add visitor to validate symbol type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzQ3NjIz", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-484747623", "createdAt": "2020-09-09T07:51:20Z", "commit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo1MToyMFrOHO7CQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo1NTowNVrOHO7LkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwOTM0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return visitSymbol(symbol, context);\n          \n          \n            \n                        return null;\n          \n      \n    \n    \n  \n\nvisitSymbol would do the valueType() == UNDEFINED check again.", "url": "https://github.com/crate/crate/pull/10500#discussion_r485409346", "createdAt": "2020-09-09T07:51:20Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/symbol/GroupAndAggregateSemantics.java", "diffHunk": "@@ -76,6 +79,40 @@ public static void validate(List<Symbol> outputSymbols,\n         }\n     }\n \n+    private static void validateGroupBySymbol(Symbol groupBy) {\n+        groupBy.accept(SymbolTypeValidator.INSTANCE, null);\n+    }\n+\n+    private static class SymbolTypeValidator extends SymbolVisitor<Void, Void> {\n+\n+        static final SymbolTypeValidator INSTANCE = new SymbolTypeValidator();\n+\n+        @Override\n+        public Void visitSymbol(Symbol symbol, Void context) {\n+            if (symbol.valueType() == DataTypes.UNDEFINED) {\n+                throw new IllegalArgumentException(\n+                    \"Cannot group or aggregate on '\" + symbol.toString() + \"' efficiently with an undefined type.\" +\n+                    \" Use an explicit type cast.\"\n+                );\n+            }\n+            return null;\n+        }\n+\n+        @Override\n+        public Void visitLiteral(Literal symbol, Void context) {\n+            if (symbol.valueType() == DataTypes.UNDEFINED && symbol.value() == null) {\n+                // `NULL` is a valid case\n+                return null;\n+            }\n+            return visitSymbol(symbol, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMDY1OQ==", "bodyText": "I think the error is a bit misleading. It's not that it cannot do it efficiently without a defined type, it can't do it at all.\nIt works with casts, but the cast has a bit of overhead and given that it's most likely to be undefined because of being an ignored column it won't have a column-store (docvalues) available and it will use a source lookup and other more expensive code paths.", "url": "https://github.com/crate/crate/pull/10500#discussion_r485410659", "createdAt": "2020-09-09T07:53:22Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/symbol/GroupAndAggregateSemantics.java", "diffHunk": "@@ -76,6 +79,40 @@ public static void validate(List<Symbol> outputSymbols,\n         }\n     }\n \n+    private static void validateGroupBySymbol(Symbol groupBy) {\n+        groupBy.accept(SymbolTypeValidator.INSTANCE, null);\n+    }\n+\n+    private static class SymbolTypeValidator extends SymbolVisitor<Void, Void> {\n+\n+        static final SymbolTypeValidator INSTANCE = new SymbolTypeValidator();\n+\n+        @Override\n+        public Void visitSymbol(Symbol symbol, Void context) {\n+            if (symbol.valueType() == DataTypes.UNDEFINED) {\n+                throw new IllegalArgumentException(\n+                    \"Cannot group or aggregate on '\" + symbol.toString() + \"' efficiently with an undefined type.\" +\n+                    \" Use an explicit type cast.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMTM2Ng==", "bodyText": "Maybe we could make the names a bit specific. E.g. ensurehasDefinedType and EnsureTypedGroupKey or something like that.\nvalidator and validate is always a bit vague in that it doesn't indicate what constraints or conditions need to be met for it to be valid", "url": "https://github.com/crate/crate/pull/10500#discussion_r485411366", "createdAt": "2020-09-09T07:54:31Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/symbol/GroupAndAggregateSemantics.java", "diffHunk": "@@ -76,6 +79,40 @@ public static void validate(List<Symbol> outputSymbols,\n         }\n     }\n \n+    private static void validateGroupBySymbol(Symbol groupBy) {\n+        groupBy.accept(SymbolTypeValidator.INSTANCE, null);\n+    }\n+\n+    private static class SymbolTypeValidator extends SymbolVisitor<Void, Void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQxMTcyOA==", "bodyText": "On second thought, maybe we could keep the integration test but change it to use a cast, so we make sure to verify that it works.", "url": "https://github.com/crate/crate/pull/10500#discussion_r485411728", "createdAt": "2020-09-09T07:55:05Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/GroupByAggregateTest.java", "diffHunk": "@@ -670,14 +665,6 @@ public void testGroupByUnknownResultColumn() throws Exception {\n                                 \"'details_ignored['lol']' must appear in the GROUP BY clause\");\n     }\n \n-    @Test\n-    public void testGroupByUnknownGroupByColumn() throws Exception {\n-        this.setup.groupBySetup();\n-        Assertions.assertThrows(Exception.class,\n-                                () -> execute(\"select max(birthdate) from characters group by details_ignored['lol']\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8787ba944fc48f0234c1f5907c489e6e12766f9b"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c302e2b4d6924bc40a606ab08249c8832764777d", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/c302e2b4d6924bc40a606ab08249c8832764777d", "committedDate": "2020-09-09T11:59:48Z", "message": "Improve groupBy symbol validation"}, "afterCommit": {"oid": "d6683766e091e933ebbb1ece4eb82ece70d08536", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d6683766e091e933ebbb1ece4eb82ece70d08536", "committedDate": "2020-09-09T12:11:45Z", "message": "Improve groupBy symbol validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6683766e091e933ebbb1ece4eb82ece70d08536", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d6683766e091e933ebbb1ece4eb82ece70d08536", "committedDate": "2020-09-09T12:11:45Z", "message": "Improve groupBy symbol validation"}, "afterCommit": {"oid": "29d80a37d457eb57bfccd81b52be7cf97ec49bce", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/29d80a37d457eb57bfccd81b52be7cf97ec49bce", "committedDate": "2020-09-09T12:40:20Z", "message": "Improve groupBy symbol validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29d80a37d457eb57bfccd81b52be7cf97ec49bce", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/29d80a37d457eb57bfccd81b52be7cf97ec49bce", "committedDate": "2020-09-09T12:40:20Z", "message": "Improve groupBy symbol validation"}, "afterCommit": {"oid": "942dc0b4e0c5350da108d0a4474a801138d59909", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/942dc0b4e0c5350da108d0a4474a801138d59909", "committedDate": "2020-09-09T12:48:07Z", "message": "Improve groupBy symbol validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MDkxMDk4", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-485091098", "createdAt": "2020-09-09T14:49:33Z", "commit": {"oid": "942dc0b4e0c5350da108d0a4474a801138d59909"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo0OTozNFrOHPLJkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo0OTozNFrOHPLJkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3MzM2Mw==", "bodyText": "I meant to change the query to have a cast. For the error case the analyzer test is good enough. But a integration test that confirms that it works with cast should be here additionally", "url": "https://github.com/crate/crate/pull/10500#discussion_r485673363", "createdAt": "2020-09-09T14:49:34Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/GroupByAggregateTest.java", "diffHunk": "@@ -673,9 +672,10 @@ public void testGroupByUnknownResultColumn() throws Exception {\n     @Test\n     public void testGroupByUnknownGroupByColumn() throws Exception {\n         this.setup.groupBySetup();\n-        Assertions.assertThrows(Exception.class,\n-                                () -> execute(\"select max(birthdate) from characters group by details_ignored['lol']\",\n-                                              \"Cannot GROUP BY type: undefined\"));\n+        assertThrows(() -> execute(\"select max(age) from characters group by details_ignored['lol']\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "942dc0b4e0c5350da108d0a4474a801138d59909"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTgwOTc5", "url": "https://github.com/crate/crate/pull/10500#pullrequestreview-485180979", "createdAt": "2020-09-09T16:11:14Z", "commit": {"oid": "b62bf1afad94ec57943a3029efac3991640e0b74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b62bf1afad94ec57943a3029efac3991640e0b74", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b62bf1afad94ec57943a3029efac3991640e0b74", "committedDate": "2020-09-09T15:42:51Z", "message": "Add integration test for cast"}, "afterCommit": {"oid": "404e88c6b8acdab5c8a6492a6ea4b0894b9cc249", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/404e88c6b8acdab5c8a6492a6ea4b0894b9cc249", "committedDate": "2020-09-09T18:48:30Z", "message": "Improve error handling when group by unknown column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b00c33ce549d9e93b1e8abd65252523234245b6f", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b00c33ce549d9e93b1e8abd65252523234245b6f", "committedDate": "2020-09-09T18:49:24Z", "message": "Improve error handling when group by with undefined type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "404e88c6b8acdab5c8a6492a6ea4b0894b9cc249", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/404e88c6b8acdab5c8a6492a6ea4b0894b9cc249", "committedDate": "2020-09-09T18:48:30Z", "message": "Improve error handling when group by unknown column"}, "afterCommit": {"oid": "b00c33ce549d9e93b1e8abd65252523234245b6f", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b00c33ce549d9e93b1e8abd65252523234245b6f", "committedDate": "2020-09-09T18:49:24Z", "message": "Improve error handling when group by with undefined type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3065, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}