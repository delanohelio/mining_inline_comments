{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODI4MDc3", "number": 10048, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOToxMTozM1rOEHDBSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo1MjozMVrOEHDyZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODI0OTY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOToxMTozM1rOGmNwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjo0MToyNlrOGmTafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcyNDQ5MA==", "bodyText": "Once we use DocValueAggregator for grouping we should probably extend this for memory accounting. Not sure if already necessary for the global aggregate case, since there is only a single row.", "url": "https://github.com/crate/crate/pull/10048#discussion_r442724490", "createdAt": "2020-06-19T09:11:33Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {\n+\n+    public abstract T initialState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NTI5OQ==", "bodyText": "Ram accounting would also be required for the collect_set aggregation afaik.", "url": "https://github.com/crate/crate/pull/10048#discussion_r442745299", "createdAt": "2020-06-19T09:53:46Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {\n+\n+    public abstract T initialState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcyNDQ5MA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgxNzE1MA==", "bodyText": "Right, I'll adapt it once I optimize that function (or any other where we allocate more than a couple of bytes)", "url": "https://github.com/crate/crate/pull/10048#discussion_r442817150", "createdAt": "2020-06-19T12:41:26Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {\n+\n+    public abstract T initialState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcyNDQ5MA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODM3NTQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo1MjozMVrOGmO_bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMjowNDowMlrOGmiO9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA==", "bodyText": "any reason for an abstract class instead of an interface here?", "url": "https://github.com/crate/crate/pull/10048#discussion_r442744684", "createdAt": "2020-06-19T09:52:31Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgyMzY0NA==", "bodyText": "No not really. I remember reading that other projects saw performance improvements using abstract classes over interfaces, but comparing two variants it looks to be within the noise.\nGiven the current use I don't see a good rationale to prefer one over the other, do you?\nQ: select avg(\"adRevenue\") from uservisits\nC: 1\n| Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n|   V1    |       29.886 \u00b1   31.273 |     23.795 |     25.733 |     29.571 |    716.034 |\n|   V2    |       30.842 \u00b1   28.182 |     24.007 |     27.005 |     32.376 |    644.652 |\n\u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n|               +   3.15%                           +   4.83%\nThere is a 38.82% probability that the observed difference is not random, and the best estimate of that difference is 3.15%\nThe test has no statistical significance\n\n\nSystem/JVM Metrics (durations in ms, byte-values in MB)\n    |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n    |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n V1 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.29        201\n V2 |    1    31.33    31.33 |    0     0.00     0.00 |     8590     2288 |    15.94        249\n\nV1: 4.2.0-5dc2bf16ea7b60b70a4decdb1699fab7d239062e\nV2: 4.2.0-96ccb18013a00b077ed72764750d99bd6b9c14d4\n\nQ: select avg(\"adRevenue\") from uservisits\nC: 1\n| Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n|   V1    |       30.697 \u00b1   30.922 |     25.107 |     27.639 |     29.414 |    711.979 |\n|   V2    |       30.527 \u00b1   26.952 |     24.135 |     27.340 |     29.316 |    620.206 |\n\u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n|               -   0.55%                           -   1.09%\nThere is a 7.37% probability that the observed difference is not random, and the best estimate of that difference is 0.55%\nThe test has no statistical significance\n\n\nSystem/JVM Metrics (durations in ms, byte-values in MB)\n    |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n    |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n V1 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    12.99        201\n V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    12.89        199", "url": "https://github.com/crate/crate/pull/10048#discussion_r442823644", "createdAt": "2020-06-19T12:54:59Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgyODcxNA==", "bodyText": "Given the current use I don't see a good rationale to prefer one over the other, do you?\n\nOnly for the multi-inheritance support of interfaces. If there is no need for an abstract class (e.g. ctor definition) I prefer interfaces, but no strong opinion here.", "url": "https://github.com/crate/crate/pull/10048#discussion_r442828714", "createdAt": "2020-06-19T13:05:07Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMTQwMA==", "bodyText": "Changed it", "url": "https://github.com/crate/crate/pull/10048#discussion_r442831400", "createdAt": "2020-06-19T13:10:41Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1OTk1OA==", "bodyText": "By coincidence found one of the references mentioning the improved performance: https://netty.io/wiki/new-and-noteworthy-in-4.0.html#bytebuf-is-not-an-interface-but-an-abstract-class", "url": "https://github.com/crate/crate/pull/10048#discussion_r443059958", "createdAt": "2020-06-19T22:04:02Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1371, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}