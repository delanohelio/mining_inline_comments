{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDkzNjQx", "number": 10599, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDozNjo0NVrOEne7Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDozNjo0NVrOEne7Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODM2NTk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/common/collections/RefCountedItem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDozNjo0NVrOHYGZNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0MjozNFrOHYGn2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAzMjYyOQ==", "bodyText": "do we need to clean it on close?", "url": "https://github.com/crate/crate/pull/10599#discussion_r495032629", "createdAt": "2020-09-25T14:36:45Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/common/collections/RefCountedItem.java", "diffHunk": "@@ -21,33 +21,56 @@\n \n package io.crate.common.collections;\n \n-import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.ArrayList;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+\n \n public class RefCountedItem<T> implements AutoCloseable {\n \n-    private final T item;\n-    private final Runnable onClose;\n-    private final AtomicInteger refs = new AtomicInteger(1);\n+    private final Function<String, T> itemFactory;\n+    private final Consumer<T> closeItem;\n+    private final ArrayList<String> sources = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ebda4b77f030ba8c55ed1ce931cdd3539855cde"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAzNjM3Nw==", "bodyText": "Wasn't sure about that. It's not really required - the life-time of the RefCountedItem is for a single query, so it should never grow large and it may be interesting for debugging to track all acquisition calls.", "url": "https://github.com/crate/crate/pull/10599#discussion_r495036377", "createdAt": "2020-09-25T14:42:34Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/common/collections/RefCountedItem.java", "diffHunk": "@@ -21,33 +21,56 @@\n \n package io.crate.common.collections;\n \n-import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.ArrayList;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+\n \n public class RefCountedItem<T> implements AutoCloseable {\n \n-    private final T item;\n-    private final Runnable onClose;\n-    private final AtomicInteger refs = new AtomicInteger(1);\n+    private final Function<String, T> itemFactory;\n+    private final Consumer<T> closeItem;\n+    private final ArrayList<String> sources = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAzMjYyOQ=="}, "originalCommit": {"oid": "3ebda4b77f030ba8c55ed1ce931cdd3539855cde"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1028, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}