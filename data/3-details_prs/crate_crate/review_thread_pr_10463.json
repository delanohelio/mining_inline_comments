{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MTg3MjQx", "number": 10463, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo1NjoxOVrOEeRtfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo1NjoxOVrOEeRtfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTgyOTExOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/io/crate/integrationtests/JoinIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMTo1NjoxOVrOHJ1ziQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozNDozMlrOHJ28pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDc3Nw==", "bodyText": "Could we maybe come up with a unit test for this? I think adding integration tests for error code mapping will slow down the test suite to much for what is being tested.", "url": "https://github.com/crate/crate/pull/10463#discussion_r480080777", "createdAt": "2020-08-31T11:56:19Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/JoinIntegrationTest.java", "diffHunk": "@@ -1108,4 +1110,16 @@ public void test_many_table_join_with_filter_pushdown() throws Exception {\n         execute(stmt);\n         assertThat(response.rowCount(), is(0L));\n     }\n+\n+    @Test\n+    public void test_ambiguous_columns() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae5ef8eb184ac9020ff06be00b4d1354598f37a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5NDUxMA==", "bodyText": "There are a couple of unit tests that assert for AmbiguousColumnException\nMaybe we could extend the assertion there to also verify the mapped errors.\nWe could have some kind of\nassertThrows(... , errors(orginalExcpetion, mappedPsqlError))", "url": "https://github.com/crate/crate/pull/10463#discussion_r480094510", "createdAt": "2020-08-31T12:24:48Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/JoinIntegrationTest.java", "diffHunk": "@@ -1108,4 +1110,16 @@ public void test_many_table_join_with_filter_pushdown() throws Exception {\n         execute(stmt);\n         assertThat(response.rowCount(), is(0L));\n     }\n+\n+    @Test\n+    public void test_ambiguous_columns() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDc3Nw=="}, "originalCommit": {"oid": "ae5ef8eb184ac9020ff06be00b4d1354598f37a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5ODY4OA==", "bodyText": "Or alternatively we could write a dedicated unit test for the mapping logic. That way we wouldn't clutter all the other unit tests with additional mapping information and we'd still have the integration level tests where we confirm both http and postgresql error codes.", "url": "https://github.com/crate/crate/pull/10463#discussion_r480098688", "createdAt": "2020-08-31T12:32:53Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/JoinIntegrationTest.java", "diffHunk": "@@ -1108,4 +1110,16 @@ public void test_many_table_join_with_filter_pushdown() throws Exception {\n         execute(stmt);\n         assertThat(response.rowCount(), is(0L));\n     }\n+\n+    @Test\n+    public void test_ambiguous_columns() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDc3Nw=="}, "originalCommit": {"oid": "ae5ef8eb184ac9020ff06be00b4d1354598f37a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA5OTQ5NA==", "bodyText": "Ok, thanks for feedback. I will see what I can do.", "url": "https://github.com/crate/crate/pull/10463#discussion_r480099494", "createdAt": "2020-08-31T12:34:32Z", "author": {"login": "mkleen"}, "path": "server/src/test/java/io/crate/integrationtests/JoinIntegrationTest.java", "diffHunk": "@@ -1108,4 +1110,16 @@ public void test_many_table_join_with_filter_pushdown() throws Exception {\n         execute(stmt);\n         assertThat(response.rowCount(), is(0L));\n     }\n+\n+    @Test\n+    public void test_ambiguous_columns() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA4MDc3Nw=="}, "originalCommit": {"oid": "ae5ef8eb184ac9020ff06be00b4d1354598f37a5"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1196, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}