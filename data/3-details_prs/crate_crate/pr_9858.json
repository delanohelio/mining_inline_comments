{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTczMTg1", "number": 9858, "title": "Drop guava dependecy from sql-parser.", "bodyText": "Summary of the changes / Why this improves CrateDB\nRemove the Guava dependency from the sql-parser module.\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\njava.base there is no reason to depend on Guava in the sql-parser module.\nI've also dropped some preconditions checks that made no sense, e.g. checking optional and lists for null, etc.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-14T13:08:09Z", "url": "https://github.com/crate/crate/pull/9858", "merged": true, "mergeCommit": {"oid": "47187777e4c5e1929da7ea7b5b4a1530cf35b2f6"}, "closed": true, "closedAt": "2020-04-14T19:34:33Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXl0migFqTM5MzA3ODUzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXoPYygBqjMyMzI0ODQ1NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDc4NTMz", "url": "https://github.com/crate/crate/pull/9858#pullrequestreview-393078533", "createdAt": "2020-04-14T16:06:48Z", "commit": {"oid": "95bd4cd1e991a18685cd846247835a99784283d9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowNjo0OFrOGFWCCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowNjo0OFrOGFWCCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzAzNQ==", "bodyText": "Could also use a StringBuilder or StringJoiner directly here and further above", "url": "https://github.com/crate/crate/pull/9858#discussion_r408257035", "createdAt": "2020-04-14T16:06:48Z", "author": {"login": "mfussenegger"}, "path": "sql-parser/src/main/java/io/crate/sql/ExpressionFormatter.java", "diffHunk": "@@ -586,35 +584,35 @@ protected String visitTryCast(TryCast node, @Nullable List<Expression> parameter\n \n         @Override\n         protected String visitSearchedCaseExpression(SearchedCaseExpression node, @Nullable List<Expression> parameters) {\n-            ImmutableList.Builder<String> parts = ImmutableList.builder();\n+            ArrayList<String> parts = new ArrayList<>();\n             parts.add(\"CASE\");\n             for (WhenClause whenClause : node.getWhenClauses()) {\n                 parts.add(whenClause.accept(this, parameters));\n             }\n             if (node.getDefaultValue() != null) {\n-                parts.add(\"ELSE\")\n-                    .add(node.getDefaultValue().accept(this, parameters));\n+                parts.add(\"ELSE\");\n+                parts.add(node.getDefaultValue().accept(this, parameters));\n             }\n             parts.add(\"END\");\n \n-            return \"(\" + String.join(\" \", parts.build()) + \")\";\n+            return \"(\" + String.join(\" \", parts) + \")\";\n         }\n \n         @Override\n         protected String visitSimpleCaseExpression(SimpleCaseExpression node, @Nullable List<Expression> parameters) {\n-            ImmutableList.Builder<String> parts = ImmutableList.builder();\n-            parts.add(\"CASE\")\n-                .add(node.getOperand().accept(this, parameters));\n+            ArrayList<String> parts = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95bd4cd1e991a18685cd846247835a99784283d9"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f13ee935867f915200f24085397af663000b8d3", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1f13ee935867f915200f24085397af663000b8d3", "committedDate": "2020-04-14T18:59:09Z", "message": "Drop guava dependecy from sql-parser.\n\nRemove the Guava dependency from the sql-parser module.\n\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\n`java.base` there is no reason to depend on Guava in the sql-parser module."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95bd4cd1e991a18685cd846247835a99784283d9", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/95bd4cd1e991a18685cd846247835a99784283d9", "committedDate": "2020-04-14T13:03:58Z", "message": "Drop guava dependecy from sql-parser.\n\nRemove the Guava dependency from the sql-parser module.\n\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\n`java.base` there is no reason to depend on Guava in the sql-parser module."}, "afterCommit": {"oid": "1f13ee935867f915200f24085397af663000b8d3", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1f13ee935867f915200f24085397af663000b8d3", "committedDate": "2020-04-14T18:59:09Z", "message": "Drop guava dependecy from sql-parser.\n\nRemove the Guava dependency from the sql-parser module.\n\nThe library was mainly used to check preconditions\n(checkNotNull, checkArgument), implement equals/hashCode/toString\nmethods, and as well provided a couple of util methods to join\nstrings, etc. Such as all of the above can be easily replaced with\n`java.base` there is no reason to depend on Guava in the sql-parser module."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3524, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}