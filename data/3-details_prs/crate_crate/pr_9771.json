{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTU4MTY0", "number": 9771, "title": "Improve encapsulation of components used in FetchBatchAccumulator", "bodyText": "Summary of the changes / Why this improves CrateDB\nImprove encapsulation of components used in FetchBatchAccumulator\n\n\nRenames FetchProjectorContext \u2192 ReaderBuckets. Is now used only\nfor partitioning of the _fetchIds by _readerId into a _docId +\nlater carry the result for the fetched values for the doc-ids.\n\n\nFetchRowInputSymbolVisitor leaked a lot of the workings into the\nFetchBatchAccumulator. This is now encapsulated via FetchRows.\n\n\nReplace AsyncOperationBatchIterator with AsyncFlatMapBatchIterator\nThe AsyncOperationBatchIterator was a combination of two things:\n\nBuilding chunks (batches)\nAsync invocation of an operation, and generating rows based on the\nresult of this operation.\n\nThis introduces a new AsyncFlatMapBatchIterator that is similar to\nFlatMapBatchIterator, but takes a mapper that returns a future.\nThe \"building chunks\" part is separated by using\nBatchIterators.partition.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-03-17T16:56:01Z", "url": "https://github.com/crate/crate/pull/9771", "merged": true, "mergeCommit": {"oid": "81c9fb3abde39855424a3630526f79e6049db1c8"}, "closed": true, "closedAt": "2020-03-18T13:23:49Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOmuipgBqjMxMzg0ODU1NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO2C33ABqjMxNDExNDIxMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72eaa932a21201a3773db3b523794d74a13fbe10", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/72eaa932a21201a3773db3b523794d74a13fbe10", "committedDate": "2020-03-17T16:55:37Z", "message": "Improve encapsulation of components used in FetchBatchAccumulator\n\n- Renames `FetchProjectorContext` \u2192 `ReaderBuckets`. Is now used only\nfor partitioning of the `_fetchId`s by `_readerId` into a `_docId` +\n  later carry the result for the fetched values for the doc-ids.\n\n- `FetchRowInputSymbolVisitor` leaked a lot of the workings into the\n`FetchBatchAccumulator`. This is now encapsulated via `FetchRows`."}, "afterCommit": {"oid": "b634ef1cebe0ad3fc04619c38be0d1abecf19ccb", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/b634ef1cebe0ad3fc04619c38be0d1abecf19ccb", "committedDate": "2020-03-17T18:08:05Z", "message": "Improve encapsulation of components used in FetchBatchAccumulator\n\n- Renames `FetchProjectorContext` \u2192 `ReaderBuckets`. Is now used only\nfor partitioning of the `_fetchId`s by `_readerId` into a `_docId` +\n  later carry the result for the fetched values for the doc-ids.\n\n- `FetchRowInputSymbolVisitor` leaked a lot of the workings into the\n`FetchBatchAccumulator`. This is now encapsulated via `FetchRows`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzAzMTM3", "url": "https://github.com/crate/crate/pull/9771#pullrequestreview-376703137", "createdAt": "2020-03-18T09:45:12Z", "commit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTo0NToxMlrOF39L0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTo0NToxMlrOF39L0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxODQ1MA==", "bodyText": "It is a bit tricky to see the flatmap here, seems like this only provides the map operation yielding the Iterator<O> and the flattening happens in AsyncFlatMapBatchIterator. However this makes all sense. Maybe a few lines of documentation/comments would be good, otherwise it will be hard to use it for everyone who is not so familiar with all the concepts and internals.", "url": "https://github.com/crate/crate/pull/9771#discussion_r394218450", "createdAt": "2020-03-18T09:45:12Z", "author": {"login": "mkleen"}, "path": "dex/src/main/java/io/crate/data/AsyncFlatMapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.data;\n+\n+import java.util.Iterator;\n+import java.util.concurrent.CompletableFuture;\n+\n+public interface AsyncFlatMapper<I, O> extends AutoCloseable {\n+\n+    CompletableFuture<? extends Iterator<O>> apply(I item, boolean isLastCall);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzIxMTY5", "url": "https://github.com/crate/crate/pull/9771#pullrequestreview-376721169", "createdAt": "2020-03-18T10:08:55Z", "commit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDowODo1NVrOF3-Ebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDowODo1NVrOF3-Ebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzMjk0Mw==", "bodyText": "Very nice!", "url": "https://github.com/crate/crate/pull/9771#discussion_r394232943", "createdAt": "2020-03-18T10:08:55Z", "author": {"login": "mkleen"}, "path": "sql/src/main/java/io/crate/execution/engine/fetch/FetchMapper.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.fetch;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+\n+import com.carrotsearch.hppc.IntContainer;\n+import com.carrotsearch.hppc.IntObjectHashMap;\n+import com.carrotsearch.hppc.IntObjectMap;\n+import com.carrotsearch.hppc.IntSet;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import io.crate.concurrent.CompletableFutures;\n+import io.crate.data.AsyncFlatMapper;\n+import io.crate.data.Bucket;\n+import io.crate.data.Row;\n+\n+public class FetchMapper implements AsyncFlatMapper<ReaderBuckets, Row> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzIyODc4", "url": "https://github.com/crate/crate/pull/9771#pullrequestreview-376722878", "createdAt": "2020-03-18T10:11:12Z", "commit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NzM2OTg4", "url": "https://github.com/crate/crate/pull/9771#pullrequestreview-376736988", "createdAt": "2020-03-18T10:30:30Z", "commit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c3c3d44e3e21b4ef39a3f298b449a79c4b04dc6", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/3c3c3d44e3e21b4ef39a3f298b449a79c4b04dc6", "committedDate": "2020-03-18T11:58:52Z", "message": "Improve encapsulation of components used in FetchBatchAccumulator\n\n- Renames `FetchProjectorContext` \u2192 `ReaderBuckets`. Is now used only\nfor partitioning of the `_fetchId`s by `_readerId` into a `_docId` +\n  later carry the result for the fetched values for the doc-ids.\n\n- `FetchRowInputSymbolVisitor` leaked a lot of the workings into the\n`FetchBatchAccumulator`. This is now encapsulated via `FetchRows`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81c9fb3abde39855424a3630526f79e6049db1c8", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/81c9fb3abde39855424a3630526f79e6049db1c8", "committedDate": "2020-03-18T11:58:52Z", "message": "Replace AsyncOperationBatchIterator with AsyncFlatMapBatchIterator\n\nThe AsyncOperationBatchIterator was a combination of two things:\n\n- Building chunks (batches)\n- Async invocation of an operation, and generating rows based on the\nresult of this operation.\n\nThis introduces a new `AsyncFlatMapBatchIterator` that is similar to\n`FlatMapBatchIterator`, but takes a mapper that returns a future.\n\nThe \"building chunks\" part is separated by using\n`BatchIterators.partition`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebf25b710404e4cadf159cc0e7938ea6af4c5ccf", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ebf25b710404e4cadf159cc0e7938ea6af4c5ccf", "committedDate": "2020-03-17T18:56:03Z", "message": "Replace AsyncOperationBatchIterator with AsyncFlatMapBatchIterator\n\nThe AsyncOperationBatchIterator was a combination of two things:\n\n- Building chunks (batches)\n- Async invocation of an operation, and generating rows based on the\nresult of this operation.\n\nThis introduces a new `AsyncFlatMapBatchIterator` that is similar to\n`FlatMapBatchIterator`, but takes a mapper that returns a future.\n\nThe \"building chunks\" part is separated by using\n`BatchIterators.partition`."}, "afterCommit": {"oid": "81c9fb3abde39855424a3630526f79e6049db1c8", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/81c9fb3abde39855424a3630526f79e6049db1c8", "committedDate": "2020-03-18T11:58:52Z", "message": "Replace AsyncOperationBatchIterator with AsyncFlatMapBatchIterator\n\nThe AsyncOperationBatchIterator was a combination of two things:\n\n- Building chunks (batches)\n- Async invocation of an operation, and generating rows based on the\nresult of this operation.\n\nThis introduces a new `AsyncFlatMapBatchIterator` that is similar to\n`FlatMapBatchIterator`, but takes a mapper that returns a future.\n\nThe \"building chunks\" part is separated by using\n`BatchIterators.partition`."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3417, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}