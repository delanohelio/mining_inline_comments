{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzc2NTYw", "number": 9707, "title": "Remove QuerySpec, HavingClause and move WhereClause", "bodyText": "Summary of the changes / Why this improves CrateDB\nSee individual commits\nOne other motivation not mentioned directly in the commits is that the Filter operator could take a WhereClause but ignore the partitions on it. (That happened on the fields/outputs PR, I worked around that by changing the CopyTo plan)\nChecklist\n\n User relevant changes are recorded in CHANGES.txt\n Touched code is covered by tests\n Documentation has been updated if necessary\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-02-26T16:18:41Z", "url": "https://github.com/crate/crate/pull/9707", "merged": true, "mergeCommit": {"oid": "7d419f184fe7d9cda7150a00944dde4d31b0703b"}, "closed": true, "closedAt": "2020-02-27T08:49:55Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIJAqqgH2gAyMzgwMzc2NTYwOjJjYzgxMTQwYmE2YmZiZmM1NThkYWFlMTE0M2IzOTVjMTgzYTMwODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIW6kxABqjMwNzY4MzY1MDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2cc81140ba6bfbfc558daae1143b395c183a3085", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/2cc81140ba6bfbfc558daae1143b395c183a3085", "committedDate": "2020-02-26T16:07:21Z", "message": "Inline QuerySpec into QueriedSelectRelation\n\nNo need anymore for the indirection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDY1MzQ3", "url": "https://github.com/crate/crate/pull/9707#pullrequestreview-365465347", "createdAt": "2020-02-27T07:39:58Z", "commit": {"oid": "79bb29358d446b7051b95625735845f309f57912"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzozOTo1OVrOFvH1NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzozOTo1OVrOFvH1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1NTcwMQ==", "bodyText": "minor: we could store this into a local var to avoid checking for NULL twice", "url": "https://github.com/crate/crate/pull/9707#discussion_r384955701", "createdAt": "2020-02-27T07:39:59Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/analyze/relations/RelationAnalyzer.java", "diffHunk": "@@ -333,14 +332,13 @@ protected AnalyzedRelation visitQuerySpecification(QuerySpecification node, Stat\n \n         boolean isDistinct = node.getSelect().isDistinct();\n         Symbol querySymbol = expressionAnalyzer.generateQuerySymbol(node.getWhere(), expressionAnalysisContext);\n-        WhereClause whereClause = new WhereClause(querySymbol);\n-        WhereClauseValidator.validate(whereClause.queryOrFallback());\n+        WhereClauseValidator.validate(querySymbol == null ? Literal.BOOLEAN_TRUE : querySymbol);\n         QueriedSelectRelation relation = new QueriedSelectRelation(\n             isDistinct,\n             List.copyOf(context.sources().values()),\n             context.joinPairs(),\n             selectAnalysis.outputSymbols(),\n-            whereClause,\n+            querySymbol == null ? Literal.BOOLEAN_TRUE : querySymbol,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bb29358d446b7051b95625735845f309f57912"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDc0OTk4", "url": "https://github.com/crate/crate/pull/9707#pullrequestreview-365474998", "createdAt": "2020-02-27T08:01:21Z", "commit": {"oid": "8d1a48cecf5304f1e4bf47581a106c592c061ae6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91493a626143de691f6a47320848df39ef7e0422", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/91493a626143de691f6a47320848df39ef7e0422", "committedDate": "2020-02-27T08:05:56Z", "message": "Replace WhereClause on QueriedSelectRelation with a Symbol\n\nTo make it clear that it is just a query expression, not a further\nanalyzed `WhereClause` with `partitions` or `clusteredBy`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568c37d7a98456e370104f654d62f3d61d17d021", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/568c37d7a98456e370104f654d62f3d61d17d021", "committedDate": "2020-02-27T08:09:21Z", "message": "Remove HavingClause\n\nHaving a dedicated HavingClause is no longer necessary. We're not doing\npartition selection or `clusteredBy` extraction on a `HavingClause`.\n\nSuch an optimization would only apply if the query can be pushed down\nall the way into the `Collect` operator."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d1a48cecf5304f1e4bf47581a106c592c061ae6", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/8d1a48cecf5304f1e4bf47581a106c592c061ae6", "committedDate": "2020-02-27T07:54:39Z", "message": "fixup! Replace WhereClause on QueriedSelectRelation with a Symbol"}, "afterCommit": {"oid": "568c37d7a98456e370104f654d62f3d61d17d021", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/568c37d7a98456e370104f654d62f3d61d17d021", "committedDate": "2020-02-27T08:09:21Z", "message": "Remove HavingClause\n\nHaving a dedicated HavingClause is no longer necessary. We're not doing\npartition selection or `clusteredBy` extraction on a `HavingClause`.\n\nSuch an optimization would only apply if the query can be pushed down\nall the way into the `Collect` operator."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3886, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}