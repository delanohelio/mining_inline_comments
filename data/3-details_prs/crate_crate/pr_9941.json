{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MjE3MDY1", "number": 9941, "title": "Make column value lookup lazy", "bodyText": "Summary of the changes / Why this improves CrateDB\nThe LuceneCollectorExpression implementations already loaded the\nvalues on setNextDocId. This is a huge performance cost if the value\nis not used.\nThis is for example the case in the GroupByOptimizedIterator when the\ngroup-key doesn't appear in an aggregation.\nIt is also the case for aggregations like arbitrary or could be the\ncase when HAVING and a sub-set of the row is used to determine if the\nrow should be excluded.\nQ: select \"TagKey\" from texttest group by 1\nC: 1\n| Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n|   V1    |     2660.127 \u00b1  349.842 |   2400.170 |   2551.109 |   2616.811 |   3955.798 |\n|   V2    |      232.981 \u00b1   34.012 |    174.144 |    238.127 |    247.981 |    343.805 |\nmean:   - 167.79%\nmedian: - 165.85%\n\nI remember that we had issues with self-joins with this in the past. But now no tests fail.\nShould we backport this to 4.1?\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-05-13T08:53:51Z", "url": "https://github.com/crate/crate/pull/9941", "merged": true, "mergeCommit": {"oid": "20e990f3917560f63aa84445372f8dcf9a4e408b"}, "closed": true, "closedAt": "2020-05-13T14:00:49Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg31uPgFqTQxMDg2MDgxNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg45SdgBqjMzMzIwNzY0Mjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwODYwODE2", "url": "https://github.com/crate/crate/pull/9941#pullrequestreview-410860816", "createdAt": "2020-05-13T12:13:42Z", "commit": {"oid": "fe64bbb6162b7c795a312211b8717e4d13591819"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjoxMzo0MlrOGUumzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjoxMzo0MlrOGUumzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM4ODMwMQ==", "bodyText": "Looks like we could remove the exception annotation from the parent class?", "url": "https://github.com/crate/crate/pull/9941#discussion_r424388301", "createdAt": "2020-05-13T12:13:42Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/expression/reference/doc/lucene/BooleanColumnReference.java", "diffHunk": "@@ -29,38 +29,41 @@\n import org.elasticsearch.index.fielddata.SortedBinaryDocValues;\n \n import java.io.IOException;\n+import java.io.UncheckedIOException;\n \n public class BooleanColumnReference extends LuceneCollectorExpression<Boolean> {\n \n     private static final BytesRef TRUE_BYTESREF = new BytesRef(\"1\");\n     private final String columnName;\n     private SortedBinaryDocValues values;\n-    private Boolean value;\n+    private int docId;\n \n     public BooleanColumnReference(String columnName) {\n         this.columnName = columnName;\n     }\n \n     @Override\n     public Boolean value() {\n-        return value;\n+        try {\n+            if (values.advanceExact(docId)) {\n+                switch (values.docValueCount()) {\n+                    case 1:\n+                        return values.nextValue().compareTo(TRUE_BYTESREF) == 0;\n+\n+                    default:\n+                        throw new GroupByOnArrayUnsupportedException(columnName);\n+                }\n+            } else {\n+                return null;\n+            }\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n     }\n \n     @Override\n     public void setNextDocId(int docId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe64bbb6162b7c795a312211b8717e4d13591819"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe64bbb6162b7c795a312211b8717e4d13591819", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/fe64bbb6162b7c795a312211b8717e4d13591819", "committedDate": "2020-05-13T08:43:43Z", "message": "Make column value lookup lazy\n\nThe `LuceneCollectorExpression` implementations already loaded the\nvalues on `setNextDocId`. This is a huge performance cost if the value\nis not used.\n\nThis is for example the case in the `GroupByOptimizedIterator` when the\ngroup-key doesn't appear in an aggregation.\n\nIt is also the case for aggregations like `arbitrary` or could be the\ncase when `HAVING` and a sub-set of the row is used to determine if the\nrow should be excluded.\n\n    Q: select \"TagKey\" from texttest group by 1\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |     2660.127 \u00b1  349.842 |   2400.170 |   2551.109 |   2616.811 |   3955.798 |\n    |   V2    |      232.981 \u00b1   34.012 |    174.144 |    238.127 |    247.981 |    343.805 |\n    mean:   - 167.79%\n    median: - 165.85%"}, "afterCommit": {"oid": "aa80905660ccc064adf458c01ed4795994a1af08", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/aa80905660ccc064adf458c01ed4795994a1af08", "committedDate": "2020-05-13T13:12:01Z", "message": "fixup! Make column value lookup lazy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTE5Nzc5", "url": "https://github.com/crate/crate/pull/9941#pullrequestreview-410919779", "createdAt": "2020-05-13T13:24:35Z", "commit": {"oid": "aa80905660ccc064adf458c01ed4795994a1af08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a32c1ea1d164496babf3d46d9ae121757e3d36", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/12a32c1ea1d164496babf3d46d9ae121757e3d36", "committedDate": "2020-05-13T13:28:47Z", "message": "Make column value lookup lazy\n\nThe `LuceneCollectorExpression` implementations already loaded the\nvalues on `setNextDocId`. This is a huge performance cost if the value\nis not used.\n\nThis is for example the case in the `GroupByOptimizedIterator` when the\ngroup-key doesn't appear in an aggregation.\n\nIt is also the case for aggregations like `arbitrary` or could be the\ncase when `HAVING` and a sub-set of the row is used to determine if the\nrow should be excluded.\n\n    Q: select \"TagKey\" from texttest group by 1\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |     2660.127 \u00b1  349.842 |   2400.170 |   2551.109 |   2616.811 |   3955.798 |\n    |   V2    |      232.981 \u00b1   34.012 |    174.144 |    238.127 |    247.981 |    343.805 |\n    mean:   - 167.79%\n    median: - 165.85%"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa80905660ccc064adf458c01ed4795994a1af08", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/aa80905660ccc064adf458c01ed4795994a1af08", "committedDate": "2020-05-13T13:12:01Z", "message": "fixup! Make column value lookup lazy"}, "afterCommit": {"oid": "12a32c1ea1d164496babf3d46d9ae121757e3d36", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/12a32c1ea1d164496babf3d46d9ae121757e3d36", "committedDate": "2020-05-13T13:28:47Z", "message": "Make column value lookup lazy\n\nThe `LuceneCollectorExpression` implementations already loaded the\nvalues on `setNextDocId`. This is a huge performance cost if the value\nis not used.\n\nThis is for example the case in the `GroupByOptimizedIterator` when the\ngroup-key doesn't appear in an aggregation.\n\nIt is also the case for aggregations like `arbitrary` or could be the\ncase when `HAVING` and a sub-set of the row is used to determine if the\nrow should be excluded.\n\n    Q: select \"TagKey\" from texttest group by 1\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |     2660.127 \u00b1  349.842 |   2400.170 |   2551.109 |   2616.811 |   3955.798 |\n    |   V2    |      232.981 \u00b1   34.012 |    174.144 |    238.127 |    247.981 |    343.805 |\n    mean:   - 167.79%\n    median: - 165.85%"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3369, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}