{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODI4MDc3", "number": 10048, "title": "Add optimized global aggregates using doc-values", "bodyText": "Summary of the changes / Why this improves CrateDB\nQ: select avg(\"adRevenue\") from uservisits\nC: 1\n| Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n|   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n|   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n\u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n|               -  96.79%                           - 102.34%\nThere is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\nThe test has statistical significance\n\nSystem/JVM Metrics (durations in ms, byte-values in MB)\n    |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n    |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\nV1 top allocation frames\n  Float.valueOf(float):30818982785\n  CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n  169079530.get$Lambda(...):78850440\n  291374498.get$Lambda(...):57452096\n  MatchAllDocsQuery.createWeight(...):26222072\nV2 top allocation frames\n  CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n  ParserATNSimulator.getEpsilonTarget(...):12582912\n  IndexInput.getFullSliceDescription(String):10487808\n  Weight.scorerSupplier(...):1047961\n\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-06-04T13:15:29Z", "url": "https://github.com/crate/crate/pull/10048", "merged": true, "mergeCommit": {"oid": "12fcce54df95ff2ec7e3bd3652b7fe02a65f333c"}, "closed": true, "closedAt": "2020-06-19T14:28:43Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsKTVRgBqjM0NTM3MzE5MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsyzV8gBqjM0NjIzOTU0ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b28f09ed940cbabc154e070fd3b36d3e6b67b5c3", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/b28f09ed940cbabc154e070fd3b36d3e6b67b5c3", "committedDate": "2020-06-04T13:14:39Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "91ca4fa823d4d2c10d708b1fdf642ae1defc109c", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/91ca4fa823d4d2c10d708b1fdf642ae1defc109c", "committedDate": "2020-06-17T13:02:57Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91ca4fa823d4d2c10d708b1fdf642ae1defc109c", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/91ca4fa823d4d2c10d708b1fdf642ae1defc109c", "committedDate": "2020-06-17T13:02:57Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "b08bc8562f1f437b959fb87ec207d5f962cca3e6", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/b08bc8562f1f437b959fb87ec207d5f962cca3e6", "committedDate": "2020-06-18T06:29:51Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b64d7a224b2fa6360de8278e1a29cd3382bf14f3", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/b64d7a224b2fa6360de8278e1a29cd3382bf14f3", "committedDate": "2020-06-18T07:05:36Z", "message": "fixup! Add optimized global aggregates using doc-values"}, "afterCommit": {"oid": "6ba2c33ab1042c53f512fd70e9a38e128376122a", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/6ba2c33ab1042c53f512fd70e9a38e128376122a", "committedDate": "2020-06-19T08:24:46Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ba2c33ab1042c53f512fd70e9a38e128376122a", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/6ba2c33ab1042c53f512fd70e9a38e128376122a", "committedDate": "2020-06-19T08:24:46Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "40b724bc2f693d384c97c6f016854799cd738d64", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/40b724bc2f693d384c97c6f016854799cd738d64", "committedDate": "2020-06-19T08:45:33Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40b724bc2f693d384c97c6f016854799cd738d64", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/40b724bc2f693d384c97c6f016854799cd738d64", "committedDate": "2020-06-19T08:45:33Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/7bc33800866adad0b7a5bf186f89e81a68556007", "committedDate": "2020-06-19T09:01:28Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTIwMzc2", "url": "https://github.com/crate/crate/pull/10048#pullrequestreview-433920376", "createdAt": "2020-06-19T09:11:33Z", "commit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOToxMTozM1rOGmNwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOToxMTozM1rOGmNwig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcyNDQ5MA==", "bodyText": "Once we use DocValueAggregator for grouping we should probably extend this for memory accounting. Not sure if already necessary for the global aggregate case, since there is only a single row.", "url": "https://github.com/crate/crate/pull/10048#discussion_r442724490", "createdAt": "2020-06-19T09:11:33Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {\n+\n+    public abstract T initialState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTQ4MDI4", "url": "https://github.com/crate/crate/pull/10048#pullrequestreview-433948028", "createdAt": "2020-06-19T09:52:31Z", "commit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo1MjozMVrOGmO_bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo1Mzo0NlrOGmPB0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NDY4NA==", "bodyText": "any reason for an abstract class instead of an interface here?", "url": "https://github.com/crate/crate/pull/10048#discussion_r442744684", "createdAt": "2020-06-19T09:52:31Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NTI5OQ==", "bodyText": "Ram accounting would also be required for the collect_set aggregation afaik.", "url": "https://github.com/crate/crate/pull/10048#discussion_r442745299", "createdAt": "2020-06-19T09:53:46Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/aggregation/DocValueAggregator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.aggregation;\n+\n+import java.io.IOException;\n+\n+import javax.annotation.Nullable;\n+\n+import org.apache.lucene.index.LeafReader;\n+\n+public abstract class DocValueAggregator<T> {\n+\n+    public abstract T initialState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcyNDQ5MA=="}, "originalCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bc33800866adad0b7a5bf186f89e81a68556007", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/7bc33800866adad0b7a5bf186f89e81a68556007", "committedDate": "2020-06-19T09:01:28Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "5dc2bf16ea7b60b70a4decdb1699fab7d239062e", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/5dc2bf16ea7b60b70a4decdb1699fab7d239062e", "committedDate": "2020-06-19T12:41:46Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61735525b175c216a9c50deeef77959bc874d58", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/f61735525b175c216a9c50deeef77959bc874d58", "committedDate": "2020-06-19T13:09:53Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dc2bf16ea7b60b70a4decdb1699fab7d239062e", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/5dc2bf16ea7b60b70a4decdb1699fab7d239062e", "committedDate": "2020-06-19T12:41:46Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}, "afterCommit": {"oid": "f61735525b175c216a9c50deeef77959bc874d58", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/f61735525b175c216a9c50deeef77959bc874d58", "committedDate": "2020-06-19T13:09:53Z", "message": "Add optimized global aggregates using doc-values\n\n    Q: select avg(\"adRevenue\") from uservisits\n    C: 1\n    | Version |         Mean \u00b1    Stdev |        Min |     Median |         Q3 |        Max |\n    |   V1    |       80.198 \u00b1   32.376 |     46.869 |     78.789 |     80.146 |    789.931 |\n    |   V2    |       27.888 \u00b1   20.782 |     23.429 |     25.451 |     26.543 |    480.902 |\n    \u251c---------\u2534-------------------------\u2534------------\u2534------------\u2534------------\u2534------------\u2518\n    |               -  96.79%                           - 102.34%\n    There is a 100.00% probability that the observed difference is not random, and the best estimate of that difference is 96.79%\n    The test has statistical significance\n\n    System/JVM Metrics (durations in ms, byte-values in MB)\n        |    YOUNG GC            |       OLD GC           |      HEAP         |     ALLOC\n        |  cnt      avg      max |  cnt      avg      max |  initial     used |     rate      total\n     V1 |    8    23.13    26.17 |    0     0.00     0.00 |     8590     2319 |   777.04      31413\n     V2 |    0     0.00     0.00 |    0     0.00     0.00 |     8590        0 |    14.71        198\n\n    V1 top allocation frames\n      Float.valueOf(float):30818982785\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):287010080\n      169079530.get$Lambda(...):78850440\n      291374498.get$Lambda(...):57452096\n      MatchAllDocsQuery.createWeight(...):26222072\n    V2 top allocation frames\n      CompositeBatchIterator$AsyncCompositeBI.lambda$loadNextBatch$0(int, int):46133248\n      ParserATNSimulator.getEpsilonTarget(...):12582912\n      IndexInput.getFullSliceDescription(String):10487808\n      Weight.scorerSupplier(...):1047961"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3238, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}