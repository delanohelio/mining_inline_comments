{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjEwODQ4", "number": 9846, "title": "Refactor some of aggregation functions to use the new function registry. ", "bodyText": "Summary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-02T14:21:34Z", "url": "https://github.com/crate/crate/pull/9846", "merged": true, "mergeCommit": {"oid": "ca16acab25084dae601021b8889910a0d42372b8"}, "closed": true, "closedAt": "2020-04-20T10:20:53Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTtTyVgBqjMxOTI1MTU0NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZb-bkgBqjMyNTA5NzE3ODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2e26a7cea827f0d8625f93fa87023263a4c217b", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b2e26a7cea827f0d8625f93fa87023263a4c217b", "committedDate": "2020-04-02T14:19:25Z", "message": "Refactor statistics functions to use new function registry.\n\n- variance\n- geometric_mean\n- sdv"}, "afterCommit": {"oid": "9b834a0d537dc996a9bd6b27b345f5020fd87c18", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9b834a0d537dc996a9bd6b27b345f5020fd87c18", "committedDate": "2020-04-02T14:37:44Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b834a0d537dc996a9bd6b27b345f5020fd87c18", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/9b834a0d537dc996a9bd6b27b345f5020fd87c18", "committedDate": "2020-04-02T14:37:44Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "68f6078f518d1df5272f8b041be840c9f4557ef6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/68f6078f518d1df5272f8b041be840c9f4557ef6", "committedDate": "2020-04-03T09:25:54Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68f6078f518d1df5272f8b041be840c9f4557ef6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/68f6078f518d1df5272f8b041be840c9f4557ef6", "committedDate": "2020-04-03T09:25:54Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "877afd13e2d0e54063339e51210a2d35a0e81cd6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/877afd13e2d0e54063339e51210a2d35a0e81cd6", "committedDate": "2020-04-03T09:47:01Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "877afd13e2d0e54063339e51210a2d35a0e81cd6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/877afd13e2d0e54063339e51210a2d35a0e81cd6", "committedDate": "2020-04-03T09:47:01Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "0d6ea4ecf61c5eec39d13307b1a10d67fe5f01fa", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0d6ea4ecf61c5eec39d13307b1a10d67fe5f01fa", "committedDate": "2020-04-14T08:35:34Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d6ea4ecf61c5eec39d13307b1a10d67fe5f01fa", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0d6ea4ecf61c5eec39d13307b1a10d67fe5f01fa", "committedDate": "2020-04-14T08:35:34Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "0c0d714752c290a2a95946fe33f8799777bd79d2", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0c0d714752c290a2a95946fe33f8799777bd79d2", "committedDate": "2020-04-14T19:38:55Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c0d714752c290a2a95946fe33f8799777bd79d2", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0c0d714752c290a2a95946fe33f8799777bd79d2", "committedDate": "2020-04-14T19:38:55Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "2627a9b4941164c8d21deb036c0ffb61a61fe46c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2627a9b4941164c8d21deb036c0ffb61a61fe46c", "committedDate": "2020-04-15T07:47:29Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2627a9b4941164c8d21deb036c0ffb61a61fe46c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2627a9b4941164c8d21deb036c0ffb61a61fe46c", "committedDate": "2020-04-15T07:47:29Z", "message": "Refactor hyperloglog_distinct function to use new function registry."}, "afterCommit": {"oid": "73a9acc849d6280503792f8ced4a236df94f989a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/73a9acc849d6280503792f8ced4a236df94f989a", "committedDate": "2020-04-14T19:38:55Z", "message": "Refactor sum agg function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73a9acc849d6280503792f8ced4a236df94f989a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/73a9acc849d6280503792f8ced4a236df94f989a", "committedDate": "2020-04-14T19:38:55Z", "message": "Refactor sum agg function to use new function registry."}, "afterCommit": {"oid": "16b65d9cabfe1939558024903f11458158af3599", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/16b65d9cabfe1939558024903f11458158af3599", "committedDate": "2020-04-15T10:13:44Z", "message": "Refactor sum agg function to use new function registry."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjQ0NDA1", "url": "https://github.com/crate/crate/pull/9846#pullrequestreview-396244405", "createdAt": "2020-04-20T08:30:31Z", "commit": {"oid": "16b65d9cabfe1939558024903f11458158af3599"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODozMDozMVrOGIJLeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODozNjowN1rOGIJaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5MjE4NQ==", "bodyText": "minor: We could decide this outside of the factory method to avoid \"on-call/on-demand\" instanceof checks", "url": "https://github.com/crate/crate/pull/9846#discussion_r411192185", "createdAt": "2020-04-20T08:30:31Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/execution/engine/aggregation/impl/MaximumAggregation.java", "diffHunk": "@@ -45,15 +45,26 @@\n     private final FunctionInfo info;\n \n     public static void register(AggregationImplModule mod) {\n-        for (final DataType dataType : DataTypes.PRIMITIVE_TYPES) {\n-            FunctionInfo functionInfo = new FunctionInfo(\n-                new FunctionIdent(NAME, ImmutableList.of(dataType)), dataType, FunctionInfo.Type.AGGREGATE);\n-\n-            if (dataType instanceof FixedWidthType) {\n-                mod.register(new FixedMaximumAggregation(functionInfo));\n-            } else {\n-                mod.register(new VariableMaximumAggregation(functionInfo));\n-            }\n+        for (var supportedType : DataTypes.PRIMITIVE_TYPES) {\n+            mod.register(\n+                Signature.aggregate(\n+                    NAME,\n+                    supportedType.getTypeSignature(),\n+                    supportedType.getTypeSignature()),\n+                args -> {\n+                    var arg = args.get(0); // f(x) -> x\n+                    var info = new FunctionInfo(\n+                        new FunctionIdent(NAME, args),\n+                        arg,\n+                        FunctionInfo.Type.AGGREGATE\n+                    );\n+                    if (arg instanceof FixedWidthType) {\n+                        return new FixedMaximumAggregation(info);\n+                    } else {\n+                        return new VariableMaximumAggregation(info);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b65d9cabfe1939558024903f11458158af3599"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5MjYyOA==", "bodyText": "same here: could be decided outside of the factory", "url": "https://github.com/crate/crate/pull/9846#discussion_r411192628", "createdAt": "2020-04-20T08:31:08Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/execution/engine/aggregation/impl/MinimumAggregation.java", "diffHunk": "@@ -45,15 +45,26 @@\n     private final FunctionInfo info;\n \n     public static void register(AggregationImplModule mod) {\n-        for (final DataType dataType : DataTypes.PRIMITIVE_TYPES) {\n-            FunctionInfo functionInfo = new FunctionInfo(new FunctionIdent(NAME, ImmutableList.of(dataType)),\n-                dataType, FunctionInfo.Type.AGGREGATE);\n-\n-            if (dataType instanceof FixedWidthType) {\n-                mod.register(new FixedMinimumAggregation(functionInfo));\n-            } else {\n-                mod.register(new VariableMinimumAggregation(functionInfo));\n-            }\n+        for (var supportedType : DataTypes.PRIMITIVE_TYPES) {\n+            mod.register(\n+                Signature.aggregate(\n+                    NAME,\n+                    supportedType.getTypeSignature(),\n+                    supportedType.getTypeSignature()),\n+                args -> {\n+                    var arg = args.get(0); // f(x) -> x\n+                    var info = new FunctionInfo(\n+                        new FunctionIdent(NAME, args),\n+                        arg,\n+                        FunctionInfo.Type.AGGREGATE\n+                    );\n+                    if (arg instanceof FixedWidthType) {\n+                        return new FixedMinimumAggregation(info);\n+                    } else {\n+                        return new VariableMinimumAggregation(info);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b65d9cabfe1939558024903f11458158af3599"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NTk2Mw==", "bodyText": "The return type is always LONG", "url": "https://github.com/crate/crate/pull/9846#discussion_r411195963", "createdAt": "2020-04-20T08:36:07Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/execution/engine/aggregation/impl/SumAggregation.java", "diffHunk": "@@ -28,29 +28,49 @@\n import io.crate.memory.MemoryManager;\n import io.crate.metadata.FunctionIdent;\n import io.crate.metadata.FunctionInfo;\n+import io.crate.metadata.functions.Signature;\n import io.crate.types.DataType;\n import io.crate.types.DataTypes;\n import org.elasticsearch.Version;\n import org.elasticsearch.common.breaker.CircuitBreakingException;\n \n import javax.annotation.Nullable;\n import java.util.Collections;\n+import java.util.List;\n import java.util.function.BinaryOperator;\n \n public class SumAggregation<T extends Number> extends AggregationFunction<T, T> {\n \n     public static final String NAME = \"sum\";\n \n     public static void register(AggregationImplModule mod) {\n-        final BinaryOperator<Long> add = Math::addExact;\n-        final BinaryOperator<Long> substract = Math::subtractExact;\n-\n-        mod.register(new SumAggregation<Float>(DataTypes.FLOAT, (n1, n2) -> n1 + n2, (n1, n2) -> n1 - n2));\n-        mod.register(new SumAggregation<Double>(DataTypes.DOUBLE, (n1, n2) -> n1 + n2, (n1, n2) -> n1 - n2));\n-        mod.register(new SumAggregation<>(DataTypes.BYTE, DataTypes.LONG, add, substract));\n-        mod.register(new SumAggregation<>(DataTypes.SHORT, DataTypes.LONG, add, substract));\n-        mod.register(new SumAggregation<>(DataTypes.INTEGER, DataTypes.LONG, add, substract));\n-        mod.register(new SumAggregation<>(DataTypes.LONG, add, substract));\n+        BinaryOperator<Long> add = Math::addExact;\n+        BinaryOperator<Long> sub = Math::subtractExact;\n+\n+        mod.register(\n+            Signature.aggregate(\n+                NAME,\n+                DataTypes.FLOAT.getTypeSignature(),\n+                DataTypes.FLOAT.getTypeSignature()),\n+            args -> new SumAggregation<>(DataTypes.FLOAT, Float::sum, (n1, n2) -> n1 - n2)\n+        );\n+        mod.register(\n+            Signature.aggregate(\n+                NAME,\n+                DataTypes.DOUBLE.getTypeSignature(),\n+                DataTypes.DOUBLE.getTypeSignature()),\n+            args -> new SumAggregation<>(DataTypes.DOUBLE, Double::sum, (n1, n2) -> n1 - n2)\n+        );\n+\n+        for (var supportedType : List.of(DataTypes.BYTE, DataTypes.SHORT, DataTypes.INTEGER, DataTypes.LONG)) {\n+            mod.register(\n+                Signature.aggregate(\n+                    NAME,\n+                    supportedType.getTypeSignature(),\n+                    supportedType.getTypeSignature()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16b65d9cabfe1939558024903f11458158af3599"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a697c562e5b71cafa80560334c2b70e6a1f5e76a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a697c562e5b71cafa80560334c2b70e6a1f5e76a", "committedDate": "2020-04-20T08:41:52Z", "message": "Refactor arbitraty agg function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16b65d9cabfe1939558024903f11458158af3599", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/16b65d9cabfe1939558024903f11458158af3599", "committedDate": "2020-04-15T10:13:44Z", "message": "Refactor sum agg function to use new function registry."}, "afterCommit": {"oid": "20a84f5c7008480eaf2427a3cdd3622868ac0f26", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/20a84f5c7008480eaf2427a3cdd3622868ac0f26", "committedDate": "2020-04-20T08:54:02Z", "message": "fixup! Refactor sum agg function to use new function registry."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjY0NTcw", "url": "https://github.com/crate/crate/pull/9846#pullrequestreview-396264570", "createdAt": "2020-04-20T08:58:30Z", "commit": {"oid": "20a84f5c7008480eaf2427a3cdd3622868ac0f26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ac9d6fa95f840cbd215e8f5d5daf6d33e6a3973", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5ac9d6fa95f840cbd215e8f5d5daf6d33e6a3973", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor min/max agg functions to use new function registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5572b79a8ebbe0bb89d0f95aa8091586f8ce520b", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5572b79a8ebbe0bb89d0f95aa8091586f8ce520b", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor percentile agg function to use new function registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d910460f0a289fce0563d265d29c1e718dcdea7", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/6d910460f0a289fce0563d265d29c1e718dcdea7", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor collect_set agg function to use new function registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daf2e2bc51727aa935699354c35702fd71bb53bd", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/daf2e2bc51727aa935699354c35702fd71bb53bd", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor statistics functions to use new function registry.\n\n- variance\n- geometric_mean\n- sdv\n- mean/avg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9330b7c6863ff235693ba63cf0b9509d205ab02", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/f9330b7c6863ff235693ba63cf0b9509d205ab02", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor sum agg function to use new function registry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20a84f5c7008480eaf2427a3cdd3622868ac0f26", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/20a84f5c7008480eaf2427a3cdd3622868ac0f26", "committedDate": "2020-04-20T08:54:02Z", "message": "fixup! Refactor sum agg function to use new function registry."}, "afterCommit": {"oid": "f9330b7c6863ff235693ba63cf0b9509d205ab02", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/f9330b7c6863ff235693ba63cf0b9509d205ab02", "committedDate": "2020-04-20T09:49:36Z", "message": "Refactor sum agg function to use new function registry."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3505, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}