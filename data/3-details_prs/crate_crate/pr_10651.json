{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjU5NzE1", "number": 10651, "title": "Prevent dropping of a UDF used inside a generated col expression", "bodyText": "UDFs which are used inside any generated column expression must not be able to be dropped, otherwise the table info fails on resolving, making the table unusable.", "createdAt": "2020-10-12T15:43:22Z", "url": "https://github.com/crate/crate/pull/10651", "merged": true, "mergeCommit": {"oid": "bdde76ec638015ac1aec0774026f5eaf7525b019"}, "closed": true, "closedAt": "2020-10-15T09:00:00Z", "author": {"login": "seut"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR18KnABqjM4NjcyNDMxODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdStHUwABqjM4ODAxMzMwMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b203613a40da065cc440ccc48dc77d4f7e85e42e", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/b203613a40da065cc440ccc48dc77d4f7e85e42e", "committedDate": "2020-10-12T15:42:25Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}, "afterCommit": {"oid": "2722f9c2c036ce30c0796b380c2a04ff9aa60eec", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/2722f9c2c036ce30c0796b380c2a04ff9aa60eec", "committedDate": "2020-10-12T15:44:31Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2722f9c2c036ce30c0796b380c2a04ff9aa60eec", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/2722f9c2c036ce30c0796b380c2a04ff9aa60eec", "committedDate": "2020-10-12T15:44:31Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}, "afterCommit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/147d5d8a52896d4657f796eaf623cc4865cb3515", "committedDate": "2020-10-12T15:45:16Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzM0OTI5", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-506734929", "createdAt": "2020-10-12T15:48:42Z", "commit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTo0ODo0MlrOHgEI-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTo0ODo0MlrOHgEI-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NDMxNQ==", "bodyText": "This is flaky and sometimes result in 5000 instead, any idea why?", "url": "https://github.com/crate/crate/pull/10651#discussion_r503384315", "createdAt": "2020-10-12T15:48:42Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -344,4 +349,20 @@ public void test_pg_function_is_visible_when_oid_is_retrieved_from_column() thro\n         assertThat(response.rows()[0][0], is(true));\n         execute(\"drop table oid_test\");\n     }\n+\n+    @Test\n+    public void test_udf_used_inside_generated_column_definition_cannot_be_dropped() {\n+        execute(\"create function doc.foo(long) returns string language dummy_lang as\" +\n+            \" 'function foo(a) { return a; }'\");\n+        execute(\"create table doc.t1 (id long, l as doc.foo(id))\");\n+\n+        assertThrows(\n+            () -> execute(\"drop function doc.foo(long)\"),\n+            isSQLError(containsString(\n+                    \"Function 'doc.foo(bigint)' cannot be dropped because it is still in use as a generated column expression at: doc.t1.l AS doc.foo(id)\"),\n+                INTERNAL_ERROR,\n+                BAD_REQUEST,\n+                4003)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzM1NTQy", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-506735542", "createdAt": "2020-10-12T15:49:32Z", "commit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTo0OTozMlrOHgEK3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTo0OTozMlrOHgEK3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM4NDc5Ng==", "bodyText": "We must pass in the schemas here instead of getting it as a guice singleton on the ctor to avoid circular dependencies.", "url": "https://github.com/crate/crate/pull/10651#discussion_r503384796", "createdAt": "2020-10-12T15:49:32Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/expression/udf/UserDefinedFunctionService.java", "diffHunk": "@@ -123,7 +133,8 @@ void dropFunction(final String schema,\n                       final List<DataType<?>> argumentTypes,\n                       final boolean ifExists,\n                       final ActionListener<AcknowledgedResponse> listener,\n-                      final TimeValue timeout) {\n+                      final TimeValue timeout,\n+                      Schemas schemas) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzQ1MDMx", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-506745031", "createdAt": "2020-10-12T16:02:10Z", "commit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowMjoxMFrOHgEoxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowMjoxMFrOHgEoxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5MjQ1NQ==", "bodyText": "Shouldn't this operate on the currentState of the ClusterStateUpdateTask ?\nSchemas is updated via clusterChanged events and I think there could be some race conditions - e.g. UDF being dropped while concurrently a new table is created that uses it.", "url": "https://github.com/crate/crate/pull/10651#discussion_r503392455", "createdAt": "2020-10-12T16:02:10Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/udf/UserDefinedFunctionService.java", "diffHunk": "@@ -240,4 +263,37 @@ public FunctionProvider buildFunctionResolver(UserDefinedFunctionMetadata udf) {\n \n         return new FunctionProvider(signature, (s, args) -> scalar);\n     }\n+\n+    private void validateFunctionIsNotInUseByGeneratedColumn(String schema,\n+                                                             String functionName,\n+                                                             UserDefinedFunctionsMetadata functions,\n+                                                             Schemas schemas) {\n+        // The iteration of schemas/tables must happen on the node context WITHOUT the UDF already removed.\n+        // Otherwise the lazy table factories will already fail while evaluating generated functions.\n+        // To avoid that, a copy of the node context with the removed UDF function is used on concrete expression evaluation.\n+        var nodeCtx = new NodeContext(this.nodeCtx.functions().copyOf());\n+        updateImplementations(schema, functions.functionsMetadata().stream(), nodeCtx);\n+\n+        for (var schemaInfo : schemas) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147d5d8a52896d4657f796eaf623cc4865cb3515"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e590c4703288ba1447a75c1a3da82023f7af7e7", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/3e590c4703288ba1447a75c1a3da82023f7af7e7", "committedDate": "2020-10-13T10:30:13Z", "message": "fixup! Prevent dropping of a UDF used inside a generated col expression"}, "afterCommit": {"oid": "bccbf56dcea43e653b0640e5c69b401902d3839a", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/bccbf56dcea43e653b0640e5c69b401902d3839a", "committedDate": "2020-10-13T10:35:43Z", "message": "fixup! Prevent dropping of a UDF used inside a generated col expression"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f15c87d00a2fe1a37135dbd9da48b06b7004cfb2", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/f15c87d00a2fe1a37135dbd9da48b06b7004cfb2", "committedDate": "2020-10-13T15:44:43Z", "message": "fixup! Prevent dropping of a UDF used inside a generated col expression"}, "afterCommit": {"oid": "6224e90ca1c1a1445135f204ac45525183bb3629", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/6224e90ca1c1a1445135f204ac45525183bb3629", "committedDate": "2020-10-13T17:22:39Z", "message": "fixup! Prevent dropping of a UDF used inside a generated col expression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDg4NzEw", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-508088710", "createdAt": "2020-10-14T08:00:37Z", "commit": {"oid": "6224e90ca1c1a1445135f204ac45525183bb3629"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMDozN1rOHhG5lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMDozN1rOHhG5lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODEwMA==", "bodyText": "If we filter out all partitions, wouldn't we also need to go through the templates to make sure we also check that the UDF is not used within a partitioned table?", "url": "https://github.com/crate/crate/pull/10651#discussion_r504478100", "createdAt": "2020-10-14T08:00:37Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/udf/UserDefinedFunctionService.java", "diffHunk": "@@ -240,4 +266,49 @@ public FunctionProvider buildFunctionResolver(UserDefinedFunctionMetadata udf) {\n \n         return new FunctionProvider(signature, (s, args) -> scalar);\n     }\n+\n+    private void validateFunctionIsNotInUseByGeneratedColumn(String schema,\n+                                                             String functionName,\n+                                                             UserDefinedFunctionsMetadata functionsMetadata,\n+                                                             ClusterState currentState) {\n+        // The iteration of schemas/tables must happen on the node context WITHOUT the UDF already removed.\n+        // Otherwise the lazy table factories will already fail while evaluating generated functionsMetadata.\n+        // To avoid that, a copy of the node context with the removed UDF function is used on concrete expression evaluation.\n+        var nodeCtxWithRemovedFunction = new NodeContext(this.nodeCtx.functions().copyOf());\n+        updateImplementations(schema, functionsMetadata.functionsMetadata().stream(), nodeCtxWithRemovedFunction);\n+\n+        var metadata = currentState.metadata();\n+        var indices = Stream.of(metadata.getConcreteAllIndices()).filter(NO_BLOB_NOR_DANGLING)\n+            .map(IndexParts::new)\n+            .filter(indexParts -> !indexParts.isPartitioned())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6224e90ca1c1a1445135f204ac45525183bb3629"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjExNTM2", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-508211536", "createdAt": "2020-10-14T10:33:28Z", "commit": {"oid": "be7d5c42026192aeadc44e537ade8a8b6304d9e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozMzoyOVrOHhMsng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozMzoyOVrOHhMsng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MzA4Ng==", "bodyText": "I've added unit tests by the latest fixup commit, shall we still keep this for the  full-stack test (testing that the validation code is triggered)?", "url": "https://github.com/crate/crate/pull/10651#discussion_r504573086", "createdAt": "2020-10-14T10:33:29Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -344,4 +349,20 @@ public void test_pg_function_is_visible_when_oid_is_retrieved_from_column() thro\n         assertThat(response.rows()[0][0], is(true));\n         execute(\"drop table oid_test\");\n     }\n+\n+    @Test\n+    public void test_udf_used_inside_generated_column_definition_cannot_be_dropped() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7d5c42026192aeadc44e537ade8a8b6304d9e6"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjY0MDI0", "url": "https://github.com/crate/crate/pull/10651#pullrequestreview-508264024", "createdAt": "2020-10-14T11:50:50Z", "commit": {"oid": "be7d5c42026192aeadc44e537ade8a8b6304d9e6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMTo1MDo1MFrOHhPMig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMTo1MDo1MFrOHhPMig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYxNDAyNg==", "bodyText": "Yep would keep one integration test \ud83d\udc4d", "url": "https://github.com/crate/crate/pull/10651#discussion_r504614026", "createdAt": "2020-10-14T11:50:50Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -344,4 +349,20 @@ public void test_pg_function_is_visible_when_oid_is_retrieved_from_column() thro\n         assertThat(response.rows()[0][0], is(true));\n         execute(\"drop table oid_test\");\n     }\n+\n+    @Test\n+    public void test_udf_used_inside_generated_column_definition_cannot_be_dropped() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3MzA4Ng=="}, "originalCommit": {"oid": "be7d5c42026192aeadc44e537ade8a8b6304d9e6"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be7d5c42026192aeadc44e537ade8a8b6304d9e6", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/be7d5c42026192aeadc44e537ade8a8b6304d9e6", "committedDate": "2020-10-14T10:32:06Z", "message": "fixup! Prevent dropping of a UDF used inside a generated col expression"}, "afterCommit": {"oid": "baf16b6ea7e51eb10606f757ae0914aa3850d310", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/baf16b6ea7e51eb10606f757ae0914aa3850d310", "committedDate": "2020-10-14T11:57:59Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "baf16b6ea7e51eb10606f757ae0914aa3850d310", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/baf16b6ea7e51eb10606f757ae0914aa3850d310", "committedDate": "2020-10-14T11:57:59Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}, "afterCommit": {"oid": "c1a372e96ba7505a464a720a377edc60bad7a5e9", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/c1a372e96ba7505a464a720a377edc60bad7a5e9", "committedDate": "2020-10-14T12:21:02Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58e5a3d45bc8802fc082c46260f64f4b0f8254f7", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/58e5a3d45bc8802fc082c46260f64f4b0f8254f7", "committedDate": "2020-10-15T08:01:24Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1a372e96ba7505a464a720a377edc60bad7a5e9", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/c1a372e96ba7505a464a720a377edc60bad7a5e9", "committedDate": "2020-10-14T12:21:02Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}, "afterCommit": {"oid": "58e5a3d45bc8802fc082c46260f64f4b0f8254f7", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/58e5a3d45bc8802fc082c46260f64f4b0f8254f7", "committedDate": "2020-10-15T08:01:24Z", "message": "Prevent dropping of a UDF used inside a generated col expression\n\nUDFs which are used inside any generated column expression must\nnot be able to be dropped, otherwise the table info fails on\nresolving, making the table unusable."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3709, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}