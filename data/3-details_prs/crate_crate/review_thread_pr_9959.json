{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODI3NjU0", "number": 9959, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowOTo0NVrOD9aTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowOTo0NVrOD9aTjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzIwNzE5OnYy", "diffSide": "RIGHT", "path": "docs/appendices/release-notes/unreleased.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowOTo0NVrOGW46GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDowOTo0NVrOGW46GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY1NDIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Add the :ref:`CHECK <check_constraint>` constraint syntax, which specifies\n          \n          \n            \n            - Added the :ref:`CHECK <check_constraint>` constraint syntax, which specifies", "url": "https://github.com/crate/crate/pull/9959#discussion_r426654233", "createdAt": "2020-05-18T14:09:45Z", "author": {"login": "seut"}, "path": "docs/appendices/release-notes/unreleased.rst", "diffHunk": "@@ -152,23 +162,28 @@ Changes\n \n - Added the :ref:`ascii <scalar_ascii>` scalar function.\n \n-- Introduced new optional ``RETURNING`` clause for :ref:`Update <ref-update>` to\n-  return specified values from each row updated.\n-\n - Added the :ref:`obj_description(integer, text) <obj_description>` scalar\n   function for improved PostgreSQL compatibility.\n \n-- Added support for using columns of type ``long`` inside subscript expressions\n-  (e.g., ``array_expr[column]``).\n+- Added the :ref:`version() <version>` system information function.\n \n-- Made :ref:`generate_series <table-functions-generate-series>` addressable by\n-  specifying the ``pg_catalog`` schema explicitly. So, for example, both\n-  ``generate_series(1, 2)`` and ``pg_catalog.generate_series(1, 2)`` are valid.\n \n-- Added the :ref:`version() <version>` system information function.\n+New statements and clauses\n+--------------------------\n+\n+- Add the :ref:`CHECK <check_constraint>` constraint syntax, which specifies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7a93a49bb4ba19f565bb3260bb72b029e018f1"}, "originalPosition": 142}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1503, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}