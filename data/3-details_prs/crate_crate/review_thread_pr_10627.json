{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjIwODE0", "number": 10627, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxMzowNVrOErLCjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODozNzoyNVrOErgbHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzA1MTAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxMzowNVrOHdyoyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDo0NDozNVrOHd2-kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMDM5NA==", "bodyText": "Looking at some of the usages I think this could also lead to bugs if the query is a literal false.\nMaybe we should combine this with canMatch ?", "url": "https://github.com/crate/crate/pull/10627#discussion_r501000394", "createdAt": "2020-10-07T13:13:05Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "diffHunk": "@@ -81,7 +81,7 @@ public WhereClause(@Nullable Symbol normalizedQuery,\n     }\n \n     public boolean hasQuery() {\n-        return query != null;\n+        return query != null && !query.symbolType().isValueSymbol();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MDkyNw==", "bodyText": "hm do you mean combine it with the method body logic query != null && !query.symbolType().isValueSymbol() or at the hasQuery call sides? Combining it in the method body would probably be semantically incorrect Another possible solution would be just using canMatch in the DeletePlanner instead of !hasQuery https://github.com/crate/crate/blob/master/server/src/main/java/io/crate/planner/statement/DeletePlanner.java#L136 and leave the hasQuery without further modifications.", "url": "https://github.com/crate/crate/pull/10627#discussion_r501060927", "createdAt": "2020-10-07T14:31:09Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "diffHunk": "@@ -81,7 +81,7 @@ public WhereClause(@Nullable Symbol normalizedQuery,\n     }\n \n     public boolean hasQuery() {\n-        return query != null;\n+        return query != null && !query.symbolType().isValueSymbol();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMDM5NA=="}, "originalCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA3MDA2NQ==", "bodyText": "Another possible solution would be just using canMatch in the DeletePlanner instead of !hasQuery\n\nI like that solution \ud83d\udc4d", "url": "https://github.com/crate/crate/pull/10627#discussion_r501070065", "createdAt": "2020-10-07T14:42:45Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "diffHunk": "@@ -81,7 +81,7 @@ public WhereClause(@Nullable Symbol normalizedQuery,\n     }\n \n     public boolean hasQuery() {\n-        return query != null;\n+        return query != null && !query.symbolType().isValueSymbol();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMDM5NA=="}, "originalCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA3MTUwNg==", "bodyText": "Although I think it would also change semantics? If there still is a query, then it's not guranteed that it matches the entire query?\nI think we'd have to be explicit and check that either there is no query, or it matches everything", "url": "https://github.com/crate/crate/pull/10627#discussion_r501071506", "createdAt": "2020-10-07T14:44:35Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "diffHunk": "@@ -81,7 +81,7 @@ public WhereClause(@Nullable Symbol normalizedQuery,\n     }\n \n     public boolean hasQuery() {\n-        return query != null;\n+        return query != null && !query.symbolType().isValueSymbol();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMDM5NA=="}, "originalCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDU1NDUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/planner/statement/DeletePlanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODozNzoyNVrOHeT2MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODozOToxOFrOHeT6kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0NDQ5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            && (!where.hasQuery() || WhereClause.canMatch(where.query()))) {\n          \n          \n            \n                            && (!where.hasQuery() || Literal.BOOLEAN_TRUE.equals(where.query()))) {\n          \n      \n    \n    \n  \n\nI think canMatch could also return true for queries that have a chance of matching a sub-set of the records. In that case we cannot delete the full partition.\nSee \n  \n    \n      crate/server/src/main/java/io/crate/analyze/where/WhereClauseAnalyzer.java\n    \n    \n        Lines 142 to 149\n      in\n      ced7812\n    \n    \n    \n    \n\n        \n          \n           } else if (queryPartitionMap.size() > 0) { \n        \n\n        \n          \n               PartitionResult partitionResult = tieBreakPartitionQueries( \n        \n\n        \n          \n                   normalizer, queryPartitionMap, coordinatorTxnCtx); \n        \n\n        \n          \n               return partitionResult == null \n        \n\n        \n          \n                   // if partitionResult is null we can't narrow the partitions and keep the full query + use all partitions \n        \n\n        \n          \n                   // the query will then be evaluated correctly within each partition to see whether it matches or not \n        \n\n        \n          \n                   ? new PartitionResult(query, Lists2.map(tableInfo.partitions(), PartitionName::asIndexName)) \n        \n\n        \n          \n                   : partitionResult; \n        \n    \n  \n\n\ntest_where_on_date_with_null_partition_or_id_can_match_all_partitions and test_where_clause_that_could_match_on_null_partition_filters_correct_records are examples where that can be the case.", "url": "https://github.com/crate/crate/pull/10627#discussion_r501544496", "createdAt": "2020-10-08T08:37:25Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/planner/statement/DeletePlanner.java", "diffHunk": "@@ -133,7 +133,8 @@ public void executeOrFail(DependencyCarrier executor,\n                 subQueryResults,\n                 plannerContext.transactionContext(),\n                 executor.nodeContext());\n-            if (!where.partitions().isEmpty() && !where.hasQuery()) {\n+            if (!where.partitions().isEmpty()\n+                && (!where.hasQuery() || WhereClause.canMatch(where.query()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0NTYxOQ==", "bodyText": "Yep, true. WIll check the quality against the Literal.BOOLEAN_TRUE \ud83d\udc4d tnx", "url": "https://github.com/crate/crate/pull/10627#discussion_r501545619", "createdAt": "2020-10-08T08:39:18Z", "author": {"login": "kovrus"}, "path": "server/src/main/java/io/crate/planner/statement/DeletePlanner.java", "diffHunk": "@@ -133,7 +133,8 @@ public void executeOrFail(DependencyCarrier executor,\n                 subQueryResults,\n                 plannerContext.transactionContext(),\n                 executor.nodeContext());\n-            if (!where.partitions().isEmpty() && !where.hasQuery()) {\n+            if (!where.partitions().isEmpty()\n+                && (!where.hasQuery() || WhereClause.canMatch(where.query()))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0NDQ5Ng=="}, "originalCommit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 952, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}