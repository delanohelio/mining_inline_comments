{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTM2NzA1", "number": 9791, "title": "Use small block size if table stats are not available", "bodyText": "Summary of the changes / Why this improves CrateDB\nFor system tables there are no table stats. This caused the hash join\noperation to default to 500_000 as block size, which is way too much for\nsmall tables. A lot of time is then spent creating hash tables which\ncaused a couple of joins on system tables to take several seconds.\nThis adds a much smaller fallback block size.\ntest_select_from_virtual_table_with_window_function_and_column_pruning\nran into timeouts because of this.\nReal fix would be to provide stats for system tables, but I think lowering the fallback size also doesn't hurt.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-03-23T17:36:34Z", "url": "https://github.com/crate/crate/pull/9791", "merged": true, "mergeCommit": {"oid": "60ab2a6b7216fbf162caa8e67c75f1b7b111abaf"}, "closed": true, "closedAt": "2020-03-23T22:44:18Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQikiUgFqTM3OTcwNTk4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQlzIAABqjMxNTczMTYyODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzA1OTgw", "url": "https://github.com/crate/crate/pull/9791#pullrequestreview-379705980", "createdAt": "2020-03-23T18:25:33Z", "commit": {"oid": "81c78392f22c02e134a9bcf43cc6330b5f41cb98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODE4MjE5", "url": "https://github.com/crate/crate/pull/9791#pullrequestreview-379818219", "createdAt": "2020-03-23T21:00:16Z", "commit": {"oid": "81c78392f22c02e134a9bcf43cc6330b5f41cb98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTowMDoxN1rOF6X5qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTowMDoxN1rOF6X5qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc1MzMyMw==", "bodyText": "Maybe use FALLBACK_SIZE?\n(this suggestion, seems I forgot to send ;-)", "url": "https://github.com/crate/crate/pull/9791#discussion_r396753323", "createdAt": "2020-03-23T21:00:17Z", "author": {"login": "seut"}, "path": "sql/src/test/java/io/crate/execution/engine/join/RamBlockSizeCalculatorTest.java", "diffHunk": "@@ -39,48 +39,88 @@\n     public void testCalculationOfBlockSize() {\n         when(circuitBreaker.getLimit()).thenReturn(110L);\n         when(circuitBreaker.getUsed()).thenReturn(10L);\n-        RamBlockSizeCalculator blockCalculator100leftRows = new RamBlockSizeCalculator(defaultBlockSize, circuitBreaker, 5, 100);\n+        RamBlockSizeCalculator blockCalculator100leftRows = new RamBlockSizeCalculator(\n+            defaultBlockSize,\n+            circuitBreaker,\n+            5,\n+            100\n+        );\n         assertThat(blockCalculator100leftRows.getAsInt(), is(20));\n-        RamBlockSizeCalculator blockCalculator10LeftRows = new RamBlockSizeCalculator(defaultBlockSize, circuitBreaker, 5, 10);\n+        RamBlockSizeCalculator blockCalculator10LeftRows = new RamBlockSizeCalculator(\n+            defaultBlockSize,\n+            circuitBreaker,\n+            5,\n+            10\n+        );\n         assertThat(blockCalculator10LeftRows.getAsInt(), is(10));\n     }\n \n     @Test\n     public void testCalculationOfBlockSizeWithMissingStats() {\n         when(circuitBreaker.getLimit()).thenReturn(-1L);\n-        RamBlockSizeCalculator blockSizeCalculator = new RamBlockSizeCalculator(defaultBlockSize, circuitBreaker, 10, 10);\n-        assertThat(blockSizeCalculator.getAsInt(), is(defaultBlockSize));\n+        RamBlockSizeCalculator blockSizeCalculator = new RamBlockSizeCalculator(\n+            defaultBlockSize,\n+            circuitBreaker,\n+            10,\n+            10\n+        );\n+        assertThat(blockSizeCalculator.getAsInt(), is(500));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81c78392f22c02e134a9bcf43cc6330b5f41cb98"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "643e7aa0ef60977319be9cebec2df51a86f7a340", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/643e7aa0ef60977319be9cebec2df51a86f7a340", "committedDate": "2020-03-23T22:07:08Z", "message": "Use small block size if table stats are not available\n\nFor system tables there are no table stats. This caused the hash join\noperation to default to 500_000 as block size, which is way too much for\nsmall tables. A lot of time is then spent creating hash tables which\ncaused a couple of joins on system tables to take several seconds.\n\nThis adds a much smaller fallback block size.\n\n`test_select_from_virtual_table_with_window_function_and_column_pruning`\nran into timeouts because of this."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81c78392f22c02e134a9bcf43cc6330b5f41cb98", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/81c78392f22c02e134a9bcf43cc6330b5f41cb98", "committedDate": "2020-03-23T17:32:02Z", "message": "Use small block size if table stats are not available\n\nFor system tables there are no table stats. This caused the hash join\noperation to default to 500_000 as block size, which is way too much for\nsmall tables. A lot of time is then spent creating hash tables which\ncaused a couple of joins on system tables to take several seconds.\n\nThis adds a much smaller fallback block size.\n\n`test_select_from_virtual_table_with_window_function_and_column_pruning`\nran into timeouts because of this."}, "afterCommit": {"oid": "643e7aa0ef60977319be9cebec2df51a86f7a340", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/643e7aa0ef60977319be9cebec2df51a86f7a340", "committedDate": "2020-03-23T22:07:08Z", "message": "Use small block size if table stats are not available\n\nFor system tables there are no table stats. This caused the hash join\noperation to default to 500_000 as block size, which is way too much for\nsmall tables. A lot of time is then spent creating hash tables which\ncaused a couple of joins on system tables to take several seconds.\n\nThis adds a much smaller fallback block size.\n\n`test_select_from_virtual_table_with_window_function_and_column_pruning`\nran into timeouts because of this."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3440, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}