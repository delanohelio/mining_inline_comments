{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTEzNDc5", "number": 10156, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozMTozOFrOEKaq3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozMTozOFrOEKaq3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzU4MTc0OnYy", "diffSide": "RIGHT", "path": "libs/sql-parser/src/main/java/io/crate/sql/tree/SetTransactionStatement.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozMTozOFrOGrcP4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODozMTozOFrOGrcP4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwNDc3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return not ? \"NO DEFERRABLE\" : \"DEFERRABLE\";\n          \n          \n            \n                        return not ? \"NOT DEFERRABLE\" : \"DEFERRABLE\";", "url": "https://github.com/crate/crate/pull/10156#discussion_r448204771", "createdAt": "2020-07-01T08:31:38Z", "author": {"login": "kovrus"}, "path": "libs/sql-parser/src/main/java/io/crate/sql/tree/SetTransactionStatement.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to CRATE Technology GmbH (\"Crate\") under one or more contributor\n+ * license agreements.  See the NOTICE file distributed with this work for\n+ * additional information regarding copyright ownership.  Crate licenses\n+ * this file to you under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial agreement.\n+ */\n+\n+package io.crate.sql.tree;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import io.crate.common.collections.Lists2;\n+\n+public class SetTransactionStatement extends Statement {\n+\n+    public interface TransactionMode {\n+    }\n+\n+    public enum IsolationLevel implements TransactionMode {\n+        SERIALIZABLE,\n+        REPEATABLE_READ,\n+        READ_COMMITTED,\n+        READ_UNCOMMITTED;\n+    }\n+\n+    public enum ReadMode implements TransactionMode {\n+        READ_WRITE,\n+        READ_ONLY;\n+    }\n+\n+    public static class Deferrable implements TransactionMode {\n+\n+        private final boolean not;\n+\n+        public Deferrable(boolean not) {\n+            this.not = not;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return not ? \"NO DEFERRABLE\" : \"DEFERRABLE\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8418040bba926e205f59b6090e8d6efe7c28ecd0"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1319, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}