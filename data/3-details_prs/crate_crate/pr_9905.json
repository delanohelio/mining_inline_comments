{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNjkxMDk3", "number": 9905, "title": "Use the new func registry for the not and is null predicates.", "bodyText": "Summary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-29T12:47:37Z", "url": "https://github.com/crate/crate/pull/9905", "merged": true, "mergeCommit": {"oid": "8c498c221eab2d8c5e977efde92a0722e376dbd4"}, "closed": true, "closedAt": "2020-04-29T14:31:32Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccYUvKAFqTQwMjY1MzY2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccY6YVgBqjMyODQ3NDU3MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNjUzNjY2", "url": "https://github.com/crate/crate/pull/9905#pullrequestreview-402653666", "createdAt": "2020-04-29T13:16:19Z", "commit": {"oid": "e3432a37bb95d238594cd7bc3e324759eaa0f8e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoxNjoyMFrOGN-RyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoxNjoyMFrOGN-RyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNTAzMg==", "bodyText": "I extended the PredicateModule from AbstractFunctionModule or there was a reason why it wasn't done like that before?", "url": "https://github.com/crate/crate/pull/9905#discussion_r417305032", "createdAt": "2020-04-29T13:16:20Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/expression/predicate/PredicateModule.java", "diffHunk": "@@ -21,34 +21,13 @@\n \n package io.crate.expression.predicate;\n \n-import io.crate.metadata.FunctionIdent;\n+import io.crate.expression.AbstractFunctionModule;\n import io.crate.metadata.FunctionImplementation;\n-import io.crate.metadata.FunctionName;\n-import io.crate.metadata.FunctionResolver;\n-import org.elasticsearch.common.inject.AbstractModule;\n-import org.elasticsearch.common.inject.multibindings.MapBinder;\n \n-public class PredicateModule extends AbstractModule {\n-\n-    private MapBinder<FunctionIdent, FunctionImplementation> functionBinder;\n-    private MapBinder<FunctionName, FunctionResolver> resolverBinder;\n-\n-    public void register(FunctionImplementation impl) {\n-        functionBinder.addBinding(impl.info().ident()).toInstance(impl);\n-    }\n-\n-    public void register(String name, FunctionResolver functionResolver) {\n-        register(new FunctionName(name), functionResolver);\n-    }\n-\n-    public void register(FunctionName qualifiedName, FunctionResolver functionResolver) {\n-        resolverBinder.addBinding(qualifiedName).toInstance(functionResolver);\n-    }\n+public class PredicateModule extends AbstractFunctionModule<FunctionImplementation> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3432a37bb95d238594cd7bc3e324759eaa0f8e9"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNjU2MzU0", "url": "https://github.com/crate/crate/pull/9905#pullrequestreview-402656354", "createdAt": "2020-04-29T13:19:25Z", "commit": {"oid": "e3432a37bb95d238594cd7bc3e324759eaa0f8e9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoxOToyNVrOGN-ZvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoxOToyNVrOGN-ZvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNzA2OQ==", "bodyText": "I had to adjust these tests for the operators as well and I went with an simpler approach. Just use this for functions with signatures:\n    private FunctionInfo functionInfo(Signature signature, DataType dataType) {\n        return functions.getQualified(signature, List.of(dataType, dataType)).info();\n    }", "url": "https://github.com/crate/crate/pull/9905#discussion_r417307069", "createdAt": "2020-04-29T13:19:25Z", "author": {"login": "seut"}, "path": "sql/src/test/java/io/crate/analyze/EvaluatingNormalizerTest.java", "diffHunk": "@@ -123,17 +130,25 @@ public void testEvaluationClusterGranularity() {\n         assertThat(query, instanceOf(Function.class));\n     }\n \n-    private FunctionInfo functionInfo(String name, DataType dataType, boolean isPredicate) {\n-        ImmutableList<DataType> dataTypes;\n+    private FunctionInfo functionInfo(String name, DataType<?> dataType, boolean isPredicate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3432a37bb95d238594cd7bc3e324759eaa0f8e9"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3432a37bb95d238594cd7bc3e324759eaa0f8e9", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e3432a37bb95d238594cd7bc3e324759eaa0f8e9", "committedDate": "2020-04-29T12:46:21Z", "message": "Use the new func registry for the not and is null predicates."}, "afterCommit": {"oid": "d58013a5adff7fa0688bf18aded641f491f92582", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d58013a5adff7fa0688bf18aded641f491f92582", "committedDate": "2020-04-29T13:24:59Z", "message": "Use the new func registry for the not and is null predicates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1792a40b1769e627b5bafd6ab5b1e241fcda4018", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1792a40b1769e627b5bafd6ab5b1e241fcda4018", "committedDate": "2020-04-29T13:57:18Z", "message": "Use the new func registry for the not and is null predicates."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d58013a5adff7fa0688bf18aded641f491f92582", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/d58013a5adff7fa0688bf18aded641f491f92582", "committedDate": "2020-04-29T13:24:59Z", "message": "Use the new func registry for the not and is null predicates."}, "afterCommit": {"oid": "1792a40b1769e627b5bafd6ab5b1e241fcda4018", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/1792a40b1769e627b5bafd6ab5b1e241fcda4018", "committedDate": "2020-04-29T13:57:18Z", "message": "Use the new func registry for the not and is null predicates."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3321, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}