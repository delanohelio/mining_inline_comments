{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDYxMTg1", "number": 10149, "title": "Add oid type to pg_type table", "bodyText": "Summary of the changes / Why this improves CrateDB\nAfter the introduction of the oidvector, the npgsql driver failed with:\nUnhandled exception. System.Collections.Generic.KeyNotFoundException: The given key 'oid' was not present in the dictionary.\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n   at Npgsql.TypeHandlers.InternalTypesHandlers.OIDVectorHandlerFactory.Create(PostgresType pgType, NpgsqlConnection conn)\n   at Npgsql.TypeMapping.ConnectorTypeMapper.BindType(NpgsqlTypeMapping mapping, NpgsqlConnector connector, Boolean externalCall)\n   at Npgsql.TypeMapping.ConnectorTypeMapper.BindTypes()\n   at Npgsql.TypeMapping.ConnectorTypeMapper.Bind(NpgsqlDatabaseInfo databaseInfo)\n   at Npgsql.NpgsqlConnector.LoadDatabaseInfo(NpgsqlTimeout timeout, Boolean async)\n   at Npgsql.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.ConnectorPool.AllocateLong(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n   at Npgsql.NpgsqlConnection.<>c__DisplayClass32_0.<<Open>g__OpenLong|0>d.MoveNext()\n\nThis adds an Oid type entry to the pg_type table to fix the issue.\n(It doesn't add a oid cratedb type, looks like it is not necessary - we\ncan still follow up on that later)\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-06-29T14:40:45Z", "url": "https://github.com/crate/crate/pull/10149", "merged": true, "mergeCommit": {"oid": "a11649c4e67bd179be5103e1671713609e258207"}, "closed": true, "closedAt": "2020-06-29T16:02:17Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwCKfdgFqTQzOTIxODI5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwCtLMABqjM0OTMyNzgzNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjE4Mjk4", "url": "https://github.com/crate/crate/pull/10149#pullrequestreview-439218298", "createdAt": "2020-06-29T14:45:43Z", "commit": {"oid": "bb5cfad51f74a31ca232b5c2b80a438b352e29c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDo0NTo0M1rOGqUYqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDo0NTo0M1rOGqUYqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNzM3MA==", "bodyText": "oidvector and oid have the same typarray oid. I've looked it up and it should be 1028 for oid:\ntemplate1=# select typarray from pg_type where typname = 'oid';\n typarray\n----------\n     1028\n(1 row)", "url": "https://github.com/crate/crate/pull/10149#discussion_r447027370", "createdAt": "2020-06-29T14:45:43Z", "author": {"login": "kovrus"}, "path": "docs/interfaces/postgres.rst", "diffHunk": "@@ -171,7 +171,8 @@ table available in CrateDB::\n     |   21 | int2                         |     1005 |       0 |      2 | b       | N           |\n     |   23 | int4                         |     1007 |       0 |      4 | b       | N           |\n     |   24 | regproc                      |     1008 |       0 |      4 | b       | N           |\n-    |   30 | oidvector                    |     1013 |       0 |     -1 | b       | A           |\n+    |   26 | oid                          |     1013 |       0 |      4 | b       | N           |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5cfad51f74a31ca232b5c2b80a438b352e29c4"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjUxMjU1", "url": "https://github.com/crate/crate/pull/10149#pullrequestreview-439251255", "createdAt": "2020-06-29T15:19:40Z", "commit": {"oid": "66c5ab64fbd478ba5f8d589861e75a72630f2aeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee28c23e6a3ec7022e776f1431656ac979edc507", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ee28c23e6a3ec7022e776f1431656ac979edc507", "committedDate": "2020-06-29T15:23:27Z", "message": "Add oid type to pg_type table\n\nAfter the introduction of the oidvector, the npgsql driver failed with:\n\n    Unhandled exception. System.Collections.Generic.KeyNotFoundException: The given key 'oid' was not present in the dictionary.\n       at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n       at Npgsql.TypeHandlers.InternalTypesHandlers.OIDVectorHandlerFactory.Create(PostgresType pgType, NpgsqlConnection conn)\n       at Npgsql.TypeMapping.ConnectorTypeMapper.BindType(NpgsqlTypeMapping mapping, NpgsqlConnector connector, Boolean externalCall)\n       at Npgsql.TypeMapping.ConnectorTypeMapper.BindTypes()\n       at Npgsql.TypeMapping.ConnectorTypeMapper.Bind(NpgsqlDatabaseInfo databaseInfo)\n       at Npgsql.NpgsqlConnector.LoadDatabaseInfo(NpgsqlTimeout timeout, Boolean async)\n       at Npgsql.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n       at Npgsql.ConnectorPool.AllocateLong(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n       at Npgsql.NpgsqlConnection.<>c__DisplayClass32_0.<<Open>g__OpenLong|0>d.MoveNext()\n\nThis adds an Oid type entry to the `pg_type` table to fix the issue.\n(It doesn't add a oid cratedb type, looks like it is not necessary - we\ncan still follow up on that later)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66c5ab64fbd478ba5f8d589861e75a72630f2aeb", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/66c5ab64fbd478ba5f8d589861e75a72630f2aeb", "committedDate": "2020-06-29T15:16:31Z", "message": "fixup! Add oid type to pg_type table"}, "afterCommit": {"oid": "ee28c23e6a3ec7022e776f1431656ac979edc507", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ee28c23e6a3ec7022e776f1431656ac979edc507", "committedDate": "2020-06-29T15:23:27Z", "message": "Add oid type to pg_type table\n\nAfter the introduction of the oidvector, the npgsql driver failed with:\n\n    Unhandled exception. System.Collections.Generic.KeyNotFoundException: The given key 'oid' was not present in the dictionary.\n       at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\n       at Npgsql.TypeHandlers.InternalTypesHandlers.OIDVectorHandlerFactory.Create(PostgresType pgType, NpgsqlConnection conn)\n       at Npgsql.TypeMapping.ConnectorTypeMapper.BindType(NpgsqlTypeMapping mapping, NpgsqlConnector connector, Boolean externalCall)\n       at Npgsql.TypeMapping.ConnectorTypeMapper.BindTypes()\n       at Npgsql.TypeMapping.ConnectorTypeMapper.Bind(NpgsqlDatabaseInfo databaseInfo)\n       at Npgsql.NpgsqlConnector.LoadDatabaseInfo(NpgsqlTimeout timeout, Boolean async)\n       at Npgsql.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n       at Npgsql.ConnectorPool.AllocateLong(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)\n       at Npgsql.NpgsqlConnection.<>c__DisplayClass32_0.<<Open>g__OpenLong|0>d.MoveNext()\n\nThis adds an Oid type entry to the `pg_type` table to fix the issue.\n(It doesn't add a oid cratedb type, looks like it is not necessary - we\ncan still follow up on that later)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3170, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}