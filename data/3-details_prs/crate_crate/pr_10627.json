{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjIwODE0", "number": 10627, "title": "Fix the partitions deletion from the subquery expressions.", "bodyText": "Summary of the changes / Why this improves CrateDB\nThis change fixes the regression introduced by #9707 in the WhereClause.\nThe WhereClause#hasQuery before the removal of the QuerySpec\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that\nwould leave empty orphaned partitions after the deletion.\nThis change address this issue in the DeletePlanner by adding an additional\nwhere clause query = Literal.BOOLEAN_TRUE check to decide which delete\nplan to execute.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-10-07T12:41:33Z", "url": "https://github.com/crate/crate/pull/10627", "merged": true, "mergeCommit": {"oid": "1eef6672b74907390184c8fc06aec9b1ab407d51"}, "closed": true, "closedAt": "2020-10-08T09:15:36Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQMWL3gBqjM4NTAzMjgwNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQd7dcgFqTUwNDU4MTMwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b05f58015cae1caa359876b4d8d6fd6ac3dcf42d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b05f58015cae1caa359876b4d8d6fd6ac3dcf42d", "committedDate": "2020-10-07T12:40:28Z", "message": "WhereClause#hasQuery return false if query is a value symbol.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type.\nThis change restores the previous behaviour."}, "afterCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a", "committedDate": "2020-10-07T12:42:22Z", "message": "Make WhereClause#hasQuery return false if query is a value symbol.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type.\nThis change restores the previous behaviour."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODYyODQx", "url": "https://github.com/crate/crate/pull/10627#pullrequestreview-503862841", "createdAt": "2020-10-07T13:13:05Z", "commit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxMzowNVrOHdyoyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxMzowNVrOHdyoyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMDM5NA==", "bodyText": "Looking at some of the usages I think this could also lead to bugs if the query is a literal false.\nMaybe we should combine this with canMatch ?", "url": "https://github.com/crate/crate/pull/10627#discussion_r501000394", "createdAt": "2020-10-07T13:13:05Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/analyze/WhereClause.java", "diffHunk": "@@ -81,7 +81,7 @@ public WhereClause(@Nullable Symbol normalizedQuery,\n     }\n \n     public boolean hasQuery() {\n-        return query != null;\n+        return query != null && !query.symbolType().isValueSymbol();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/8cc6ccde61cc5464c5ae0dbe544a4f0a7a00a62a", "committedDate": "2020-10-07T12:42:22Z", "message": "Make WhereClause#hasQuery return false if query is a value symbol.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type.\nThis change restores the previous behaviour."}, "afterCommit": {"oid": "ecffe7207c0556d8e88fbd1e3c6d94d399ef49e6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/ecffe7207c0556d8e88fbd1e3c6d94d399ef49e6", "committedDate": "2020-10-08T08:08:31Z", "message": "Fix the deletion of partiitions from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.TRUE. This change address this issue in the\nDeletePlanner by adding an additional `canMatch` check when deciding\nwhich delete plan to execute."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecffe7207c0556d8e88fbd1e3c6d94d399ef49e6", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/ecffe7207c0556d8e88fbd1e3c6d94d399ef49e6", "committedDate": "2020-10-08T08:08:31Z", "message": "Fix the deletion of partiitions from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.TRUE. This change address this issue in the\nDeletePlanner by adding an additional `canMatch` check when deciding\nwhich delete plan to execute."}, "afterCommit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/edd43782abbf334e1e152034348fa1d45a032c6c", "committedDate": "2020-10-08T08:21:16Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.TRUE. That resulted in the wrong plan that would\nleave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\n`canMatch` check when deciding which delete plan to execute."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTUwOTk3", "url": "https://github.com/crate/crate/pull/10627#pullrequestreview-504550997", "createdAt": "2020-10-08T08:37:25Z", "commit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODozNzoyNVrOHeT2MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODozNzoyNVrOHeT2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU0NDQ5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            && (!where.hasQuery() || WhereClause.canMatch(where.query()))) {\n          \n          \n            \n                            && (!where.hasQuery() || Literal.BOOLEAN_TRUE.equals(where.query()))) {\n          \n      \n    \n    \n  \n\nI think canMatch could also return true for queries that have a chance of matching a sub-set of the records. In that case we cannot delete the full partition.\nSee \n  \n    \n      crate/server/src/main/java/io/crate/analyze/where/WhereClauseAnalyzer.java\n    \n    \n        Lines 142 to 149\n      in\n      ced7812\n    \n    \n    \n    \n\n        \n          \n           } else if (queryPartitionMap.size() > 0) { \n        \n\n        \n          \n               PartitionResult partitionResult = tieBreakPartitionQueries( \n        \n\n        \n          \n                   normalizer, queryPartitionMap, coordinatorTxnCtx); \n        \n\n        \n          \n               return partitionResult == null \n        \n\n        \n          \n                   // if partitionResult is null we can't narrow the partitions and keep the full query + use all partitions \n        \n\n        \n          \n                   // the query will then be evaluated correctly within each partition to see whether it matches or not \n        \n\n        \n          \n                   ? new PartitionResult(query, Lists2.map(tableInfo.partitions(), PartitionName::asIndexName)) \n        \n\n        \n          \n                   : partitionResult; \n        \n    \n  \n\n\ntest_where_on_date_with_null_partition_or_id_can_match_all_partitions and test_where_clause_that_could_match_on_null_partition_filters_correct_records are examples where that can be the case.", "url": "https://github.com/crate/crate/pull/10627#discussion_r501544496", "createdAt": "2020-10-08T08:37:25Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/planner/statement/DeletePlanner.java", "diffHunk": "@@ -133,7 +133,8 @@ public void executeOrFail(DependencyCarrier executor,\n                 subQueryResults,\n                 plannerContext.transactionContext(),\n                 executor.nodeContext());\n-            if (!where.partitions().isEmpty() && !where.hasQuery()) {\n+            if (!where.partitions().isEmpty()\n+                && (!where.hasQuery() || WhereClause.canMatch(where.query()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edd43782abbf334e1e152034348fa1d45a032c6c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/edd43782abbf334e1e152034348fa1d45a032c6c", "committedDate": "2020-10-08T08:21:16Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.TRUE. That resulted in the wrong plan that would\nleave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\n`canMatch` check when deciding which delete plan to execute."}, "afterCommit": {"oid": "abcc3cea66a2172274a9744ddd9b00d58e9fa13a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/abcc3cea66a2172274a9744ddd9b00d58e9fa13a", "committedDate": "2020-10-08T08:40:07Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that\nwould leave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\nwhere clause = Literal.BOOLEAN_TRUE check to decide which delete plan to execute."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96bb1c9148d72b9211abe8311681e6bb949df87c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/96bb1c9148d72b9211abe8311681e6bb949df87c", "committedDate": "2020-10-08T08:43:38Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that\nwould leave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\nwhere clause = Literal.BOOLEAN_TRUE check to decide which delete plan to execute."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abcc3cea66a2172274a9744ddd9b00d58e9fa13a", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/abcc3cea66a2172274a9744ddd9b00d58e9fa13a", "committedDate": "2020-10-08T08:40:07Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that\nwould leave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\nwhere clause = Literal.BOOLEAN_TRUE check to decide which delete plan to execute."}, "afterCommit": {"oid": "96bb1c9148d72b9211abe8311681e6bb949df87c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/96bb1c9148d72b9211abe8311681e6bb949df87c", "committedDate": "2020-10-08T08:43:38Z", "message": "Fix the partitions deletion from the subquery expressions.\n\nThis change fixes the regression introduced by\nhttps://github.com/crate/crate/pull/9707 in the `WhereClause`.\nThe `WhereClause#hasQuery` before the removal of the `QuerySpec`\nretuned the false if the normalized query was a symbol of the value type\nrepresented by Literal.BOOLEAN_TRUE. That resulted in the wrong plan that\nwould leave empty orphaned partitions after the delition.\n\nThis change address this issue in the DeletePlanner by adding an additional\nwhere clause = Literal.BOOLEAN_TRUE check to decide which delete plan to execute."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTgxMzA2", "url": "https://github.com/crate/crate/pull/10627#pullrequestreview-504581306", "createdAt": "2020-10-08T09:12:13Z", "commit": {"oid": "96bb1c9148d72b9211abe8311681e6bb949df87c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3693, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}