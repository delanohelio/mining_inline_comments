{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzYxMjI2", "number": 9860, "title": "Use new function registry to register conditional functions.", "bodyText": "Summary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-15T13:30:48Z", "url": "https://github.com/crate/crate/pull/9860", "merged": true, "mergeCommit": {"oid": "bfee8b5655c70ebc5c8639f449a64888f8289d76"}, "closed": true, "closedAt": "2020-04-16T12:13:14Z", "author": {"login": "kovrus"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX4JyhgFqTM5Mzc3NTI1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYLLaQgBqjMyMzk1MDU1NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzc1MjUw", "url": "https://github.com/crate/crate/pull/9860#pullrequestreview-393775250", "createdAt": "2020-04-15T13:31:43Z", "commit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rOGF5zKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzozMTo0M1rOGF5zKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0MzA0OQ==", "bodyText": "That will be handled by the signature matching.", "url": "https://github.com/crate/crate/pull/9860#discussion_r408843049", "createdAt": "2020-04-15T13:31:43Z", "author": {"login": "kovrus"}, "path": "sql/src/test/java/io/crate/expression/scalar/conditional/ConditionalFunctionTest.java", "diffHunk": "@@ -22,33 +22,13 @@\n \n package io.crate.expression.scalar.conditional;\n \n-import com.google.common.collect.ImmutableList;\n import io.crate.exceptions.ConversionException;\n import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n import io.crate.expression.symbol.Literal;\n-import io.crate.types.DataType;\n-import io.crate.types.DataTypes;\n import org.junit.Test;\n \n-import java.util.Collections;\n-\n public class ConditionalFunctionTest extends AbstractScalarFunctionsTest {\n \n-    @Test\n-    public void testArgsLength() throws Exception {\n-        expectedException.expect(IllegalArgumentException.class);\n-        expectedException.expectMessage(\"dummy function requires at least one argument\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODI3MjIx", "url": "https://github.com/crate/crate/pull/9860#pullrequestreview-393827221", "createdAt": "2020-04-15T14:26:09Z", "commit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDYzNzg4", "url": "https://github.com/crate/crate/pull/9860#pullrequestreview-394463788", "createdAt": "2020-04-16T09:37:48Z", "commit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2530257d5828b52a0d368a47fa93f4d56c199d0", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b2530257d5828b52a0d368a47fa93f4d56c199d0", "committedDate": "2020-04-16T11:41:30Z", "message": "Use new func registry for greatest, least, nullif, coalesce."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80dc9b0c1eb8aa746bf1fa8899f6105d2c9fb9c5", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/80dc9b0c1eb8aa746bf1fa8899f6105d2c9fb9c5", "committedDate": "2020-04-16T11:41:30Z", "message": "Use new func registry for the if function."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/07ed9310bb5dbecf90c07c84a1b9eea6f3fe943c", "committedDate": "2020-04-15T13:24:32Z", "message": "fixup! Use new func registry for greatest, least, nullif, coalesce."}, "afterCommit": {"oid": "80dc9b0c1eb8aa746bf1fa8899f6105d2c9fb9c5", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/80dc9b0c1eb8aa746bf1fa8899f6105d2c9fb9c5", "committedDate": "2020-04-16T11:41:30Z", "message": "Use new func registry for the if function."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3529, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}