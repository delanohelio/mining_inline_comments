{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5Njg1MjM3", "number": 9900, "title": "Fix sys.columns for aliased relations", "bodyText": "Summary of the changes / Why this improves CrateDB\nThis fixes sys.columns for aliased relations adressing #9873 .\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-27T19:01:04Z", "url": "https://github.com/crate/crate/pull/9900", "merged": true, "mergeCommit": {"oid": "c543ff7fe150a4dee2f227841806d96cad4c1bf4"}, "closed": true, "closedAt": "2020-04-29T13:55:07Z", "author": {"login": "mkleen"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb0VGigBqjMyNzcyNDU1Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccYas_gH2gAyNDA5Njg1MjM3OmMxMGZhYzk4OWIwMDI4ZGFhYmFmYjNjZGM4MjgzMDM5M2U2NzkyZGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31bde7cc736fd45f755740a5ae0695579353e416", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/31bde7cc736fd45f755740a5ae0695579353e416", "committedDate": "2020-04-27T18:59:48Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "12d6e0fcef70918c4f7146dbd6c5acfafbbb94c3", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/12d6e0fcef70918c4f7146dbd6c5acfafbbb94c3", "committedDate": "2020-04-27T19:19:58Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12d6e0fcef70918c4f7146dbd6c5acfafbbb94c3", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/12d6e0fcef70918c4f7146dbd6c5acfafbbb94c3", "committedDate": "2020-04-27T19:19:58Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "4e7f0538cee7be8f9c60b717da83bfe15ddfebd2", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/4e7f0538cee7be8f9c60b717da83bfe15ddfebd2", "committedDate": "2020-04-27T19:20:46Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e7f0538cee7be8f9c60b717da83bfe15ddfebd2", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/4e7f0538cee7be8f9c60b717da83bfe15ddfebd2", "committedDate": "2020-04-27T19:20:46Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "a78748a0a21ddbd2983e7a7ad6738337bd99155e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/a78748a0a21ddbd2983e7a7ad6738337bd99155e", "committedDate": "2020-04-28T15:07:20Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a78748a0a21ddbd2983e7a7ad6738337bd99155e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/a78748a0a21ddbd2983e7a7ad6738337bd99155e", "committedDate": "2020-04-28T15:07:20Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "9bf10ad25d424db27245e903640075f22f5a38b3", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/9bf10ad25d424db27245e903640075f22f5a38b3", "committedDate": "2020-04-28T15:12:57Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bf10ad25d424db27245e903640075f22f5a38b3", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/9bf10ad25d424db27245e903640075f22f5a38b3", "committedDate": "2020-04-28T15:12:57Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "6a0e37563bf24b75190415bd5bc4c9b7c82806b9", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6a0e37563bf24b75190415bd5bc4c9b7c82806b9", "committedDate": "2020-04-28T15:46:37Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a0e37563bf24b75190415bd5bc4c9b7c82806b9", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6a0e37563bf24b75190415bd5bc4c9b7c82806b9", "committedDate": "2020-04-28T15:46:37Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "6e40a9fe59fd0f8bc2eb2fdc16c8be5c6cb96d5b", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6e40a9fe59fd0f8bc2eb2fdc16c8be5c6cb96d5b", "committedDate": "2020-04-28T15:47:14Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e40a9fe59fd0f8bc2eb2fdc16c8be5c6cb96d5b", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6e40a9fe59fd0f8bc2eb2fdc16c8be5c6cb96d5b", "committedDate": "2020-04-28T15:47:14Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/f49143a3db1c062f3a0338cf2f28de5e16e3c046", "committedDate": "2020-04-28T16:18:46Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNDU5NTc5", "url": "https://github.com/crate/crate/pull/9900#pullrequestreview-402459579", "createdAt": "2020-04-29T08:28:32Z", "commit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyODozMlrOGN0vVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODozMjozOVrOGN04Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODc1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!isSysColumn(field)) {\n          \n          \n            \n                                context.add(Symbols.pathFromSymbol(field), field);\n          \n          \n            \n                            }\n          \n          \n            \n                            var columnIdent = Symbols.pathFromSymbol(field)\n          \n          \n            \n                            if (!columnIdent.isSystemColumn()) {\n          \n          \n            \n                                context.add(columnIdent, field);\n          \n          \n            \n                            }", "url": "https://github.com/crate/crate/pull/9900#discussion_r417148759", "createdAt": "2020-04-29T08:28:32Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/analyze/relations/select/SelectAnalyzer.java", "diffHunk": "@@ -115,8 +118,21 @@ protected Void visitAllColumns(AllColumns node, SelectAnalysis context) {\n \n         private static void addAllFieldsFromRelation(SelectAnalysis context, AnalyzedRelation relation) {\n             for (Symbol field : relation.outputs()) {\n-                context.add(Symbols.pathFromSymbol(field), field);\n+                if (!isSysColumn(field)) {\n+                    context.add(Symbols.pathFromSymbol(field), field);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODkwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static boolean isSysColumn(Symbol symbol) {\n          \n          \n            \n                    ColumnIdent columnIdent = null;\n          \n          \n            \n                    if (symbol instanceof ScopedSymbol) {\n          \n          \n            \n                        columnIdent = ((ScopedSymbol) symbol).column();\n          \n          \n            \n                    } else if (symbol instanceof Reference) {\n          \n          \n            \n                        columnIdent = ((Reference) symbol).column();\n          \n          \n            \n                    } else {\n          \n          \n            \n                        throw new IllegalArgumentException(String.format(Locale.ENGLISH, \"Unknown column type %s\", symbol));\n          \n          \n            \n                    }\n          \n          \n            \n                    return DocSysColumns.COLUMN_IDENTS.containsKey(columnIdent);\n          \n          \n            \n                }", "url": "https://github.com/crate/crate/pull/9900#discussion_r417148908", "createdAt": "2020-04-29T08:28:46Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/analyze/relations/select/SelectAnalyzer.java", "diffHunk": "@@ -115,8 +118,21 @@ protected Void visitAllColumns(AllColumns node, SelectAnalysis context) {\n \n         private static void addAllFieldsFromRelation(SelectAnalysis context, AnalyzedRelation relation) {\n             for (Symbol field : relation.outputs()) {\n-                context.add(Symbols.pathFromSymbol(field), field);\n+                if (!isSysColumn(field)) {\n+                    context.add(Symbols.pathFromSymbol(field), field);\n+                }\n             }\n         }\n     }\n+    private static boolean isSysColumn(Symbol symbol) {\n+        ColumnIdent columnIdent = null;\n+        if (symbol instanceof ScopedSymbol) {\n+            columnIdent = ((ScopedSymbol) symbol).column();\n+        } else if (symbol instanceof Reference) {\n+            columnIdent = ((Reference) symbol).column();\n+        } else {\n+            throw new IllegalArgumentException(String.format(Locale.ENGLISH, \"Unknown column type %s\", symbol));\n+        }\n+        return DocSysColumns.COLUMN_IDENTS.containsKey(columnIdent);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0OTgzMw==", "bodyText": "I think this could be moved to DocSysColumn.forTable(Relationname) -> List<Reference>", "url": "https://github.com/crate/crate/pull/9900#discussion_r417149833", "createdAt": "2020-04-29T08:30:21Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/metadata/doc/DocTableInfoBuilder.java", "diffHunk": "@@ -161,13 +163,21 @@ private DocIndexMetaData buildDocIndexMetaDataFromTemplate(String index, String\n         return partitions;\n     }\n \n+    private Collection<Reference> buildSysColumns() {\n+        ArrayList<Reference> result = new ArrayList<>();\n+        DocSysColumns.forTable(this.ident, (c,r) -> result.add(r));\n+        return result;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0OTk0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Collection<Reference> sysColumns = buildSysColumns();", "url": "https://github.com/crate/crate/pull/9900#discussion_r417149947", "createdAt": "2020-04-29T08:30:34Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/metadata/doc/DocTableInfoBuilder.java", "diffHunk": "@@ -161,13 +163,21 @@ private DocIndexMetaData buildDocIndexMetaDataFromTemplate(String index, String\n         return partitions;\n     }\n \n+    private Collection<Reference> buildSysColumns() {\n+        ArrayList<Reference> result = new ArrayList<>();\n+        DocSysColumns.forTable(this.ident, (c,r) -> result.add(r));\n+        return result;\n+    }\n+\n     public DocTableInfo build() {\n         DocIndexMetaData md = docIndexMetaData();\n         List<PartitionName> partitions = buildPartitions(md);\n+        Collection<Reference> sysColumns = buildSysColumns();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MDA2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        sysColumns,\n          \n          \n            \n                        DocSysColumns.forTable(ident),", "url": "https://github.com/crate/crate/pull/9900#discussion_r417150063", "createdAt": "2020-04-29T08:30:49Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/metadata/doc/DocTableInfoBuilder.java", "diffHunk": "@@ -161,13 +163,21 @@ private DocIndexMetaData buildDocIndexMetaDataFromTemplate(String index, String\n         return partitions;\n     }\n \n+    private Collection<Reference> buildSysColumns() {\n+        ArrayList<Reference> result = new ArrayList<>();\n+        DocSysColumns.forTable(this.ident, (c,r) -> result.add(r));\n+        return result;\n+    }\n+\n     public DocTableInfo build() {\n         DocIndexMetaData md = docIndexMetaData();\n         List<PartitionName> partitions = buildPartitions(md);\n+        Collection<Reference> sysColumns = buildSysColumns();\n \n         return new DocTableInfo(\n             ident,\n             md.columns(),\n+            sysColumns,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MDQ3Nw==", "bodyText": "I think we could write a planner or analyzer test instead to see that the columns can be resolved despite aliased relation?", "url": "https://github.com/crate/crate/pull/9900#discussion_r417150477", "createdAt": "2020-04-29T08:31:36Z", "author": {"login": "mfussenegger"}, "path": "sql/src/test/java/io/crate/integrationtests/SystemColumnIntegrationTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.integrationtests;\n+\n+import org.elasticsearch.test.ESIntegTestCase;\n+import org.junit.Test;\n+\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.core.IsNull.notNullValue;\n+\n+@ESIntegTestCase.ClusterScope(numClientNodes = 0, numDataNodes = 2, supportsDedicatedMasters = false)\n+public class SystemColumnIntegrationTest extends SQLTransportIntegrationTest {\n+\n+    @Test\n+    public void test_system_columns_on_aliased_table() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MTA1NA==", "bodyText": "Or maybe we can remove this from the DocTableInfo altogether, and instead create it ad-hoc in the DocTableRelation ? Not sure which way is better. Higher memory footprint vs. more ad-hoc allocations", "url": "https://github.com/crate/crate/pull/9900#discussion_r417151054", "createdAt": "2020-04-29T08:32:39Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/metadata/doc/DocTableInfoBuilder.java", "diffHunk": "@@ -161,13 +163,21 @@ private DocIndexMetaData buildDocIndexMetaDataFromTemplate(String index, String\n         return partitions;\n     }\n \n+    private Collection<Reference> buildSysColumns() {\n+        ArrayList<Reference> result = new ArrayList<>();\n+        DocSysColumns.forTable(this.ident, (c,r) -> result.add(r));\n+        return result;\n+    }\n+\n     public DocTableInfo build() {\n         DocIndexMetaData md = docIndexMetaData();\n         List<PartitionName> partitions = buildPartitions(md);\n+        Collection<Reference> sysColumns = buildSysColumns();\n \n         return new DocTableInfo(\n             ident,\n             md.columns(),\n+            sysColumns,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MDA2Mw=="}, "originalCommit": {"oid": "f49143a3db1c062f3a0338cf2f28de5e16e3c046"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bceabe1c1b132dc3ee497bf8bac74828af8842e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/1bceabe1c1b132dc3ee497bf8bac74828af8842e", "committedDate": "2020-04-29T09:26:12Z", "message": "Move sys.columns test to SelectStatementAnalyzerTest"}, "afterCommit": {"oid": "b1c05311804c83437468c939ef0fc3e173dc7420", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b1c05311804c83437468c939ef0fc3e173dc7420", "committedDate": "2020-04-29T09:30:33Z", "message": "Move sys.columns test to SelectStatementAnalyzerTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNTA0OTg0", "url": "https://github.com/crate/crate/pull/9900#pullrequestreview-402504984", "createdAt": "2020-04-29T09:32:44Z", "commit": {"oid": "b1c05311804c83437468c939ef0fc3e173dc7420"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMjo0NFrOGN2-Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTozMjo0NFrOGN2-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE4NTM0Mg==", "bodyText": "Document why vs what:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Add additionally system columns to the output of the relation\n          \n          \n            \n                    // System columns are excluded  from `tableInfo.columns()` by default, but parent relations need to be able to see them so that they're selectable. E.g. in `select a._id from tbl as a`", "url": "https://github.com/crate/crate/pull/9900#discussion_r417185342", "createdAt": "2020-04-29T09:32:44Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/analyze/relations/DocTableRelation.java", "diffHunk": "@@ -27,16 +27,19 @@\n import io.crate.metadata.ColumnIdent;\n import io.crate.metadata.GeneratedReference;\n import io.crate.metadata.Reference;\n+import io.crate.metadata.doc.DocSysColumns;\n import io.crate.metadata.doc.DocTableInfo;\n import io.crate.metadata.table.Operation;\n \n import javax.annotation.Nullable;\n import java.util.List;\n+import static io.crate.common.collections.Lists2.concat;\n \n public class DocTableRelation extends AbstractTableRelation<DocTableInfo> {\n \n     public DocTableRelation(DocTableInfo tableInfo) {\n-        super(tableInfo);\n+        // Add additionally system columns to the output of the relation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c05311804c83437468c939ef0fc3e173dc7420"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f995e97d67ccb7778b5b38f7b33816b431cd5bf", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/9f995e97d67ccb7778b5b38f7b33816b431cd5bf", "committedDate": "2020-04-29T09:35:18Z", "message": "Update sql/src/main/java/io/crate/analyze/relations/DocTableRelation.java\n\nCo-Authored-By: Mathias Fu\u00dfenegger <mfussenegger@users.noreply.github.com>"}, "afterCommit": {"oid": "6f1d986e935dbb9833acd979d81e6846079203c0", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6f1d986e935dbb9833acd979d81e6846079203c0", "committedDate": "2020-04-29T09:39:22Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48cb8e6d28dad3bbb9dda3a50e3e1f984284a6b4", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/48cb8e6d28dad3bbb9dda3a50e3e1f984284a6b4", "committedDate": "2020-04-29T12:11:01Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f1d986e935dbb9833acd979d81e6846079203c0", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/6f1d986e935dbb9833acd979d81e6846079203c0", "committedDate": "2020-04-29T09:39:22Z", "message": "Add sys.columns to aliased relations"}, "afterCommit": {"oid": "48cb8e6d28dad3bbb9dda3a50e3e1f984284a6b4", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/48cb8e6d28dad3bbb9dda3a50e3e1f984284a6b4", "committedDate": "2020-04-29T12:11:01Z", "message": "Add sys.columns to aliased relations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc8da7d4f7c0017396d78550459710aab6725dac", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/dc8da7d4f7c0017396d78550459710aab6725dac", "committedDate": "2020-04-29T12:46:20Z", "message": "Merge branch 'master' into mkleen/alias_system_columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c10fac989b0028daabafb3cdc82830393e6792db", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/c10fac989b0028daabafb3cdc82830393e6792db", "committedDate": "2020-04-29T13:22:51Z", "message": "Merge branch 'master' into mkleen/alias_system_columns"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3315, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}