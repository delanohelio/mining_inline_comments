{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzI2Mjg4", "number": 10305, "title": "Add scalar function pg_get_function_result required by conn.getMetaData().getFunctions()", "bodyText": "complementing #10286 to resolve #9976", "createdAt": "2020-08-03T18:16:40Z", "url": "https://github.com/crate/crate/pull/10305", "merged": true, "mergeCommit": {"oid": "ae507cc46432064a019e3dc56b5a44d402d1d3b8"}, "closed": true, "closedAt": "2020-09-07T15:48:18Z", "author": {"login": "marregui"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7kCnNgBqjM2MTk2MDA1MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGkfrjABqjM3Mzc2MTgyMTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f75c1c6ad894cce8abfe5eddf4f6a4d21be1c5d0", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/f75c1c6ad894cce8abfe5eddf4f6a4d21be1c5d0", "committedDate": "2020-08-03T18:13:16Z", "message": "Remove test"}, "afterCommit": {"oid": "f4ead315ad96af382573cd96f367c297fae56b1d", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/f4ead315ad96af382573cd96f367c297fae56b1d", "committedDate": "2020-08-04T10:26:54Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4ead315ad96af382573cd96f367c297fae56b1d", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/f4ead315ad96af382573cd96f367c297fae56b1d", "committedDate": "2020-08-04T10:26:54Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though."}, "afterCommit": {"oid": "05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "committedDate": "2020-08-04T10:35:57Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzgzMTQy", "url": "https://github.com/crate/crate/pull/10305#pullrequestreview-461383142", "createdAt": "2020-08-05T06:47:19Z", "commit": {"oid": "05f164e50ce5af3ed314feb08d36f669ebeb0cd6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "committedDate": "2020-08-04T10:35:57Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though."}, "afterCommit": {"oid": "b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "committedDate": "2020-08-20T10:07:52Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "committedDate": "2020-08-20T10:07:52Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "committedDate": "2020-08-20T12:29:47Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "committedDate": "2020-08-20T12:29:47Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "daeeef8dd640243bd582c6f427e24486b5730079", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/daeeef8dd640243bd582c6f427e24486b5730079", "committedDate": "2020-08-20T12:48:20Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daeeef8dd640243bd582c6f427e24486b5730079", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/daeeef8dd640243bd582c6f427e24486b5730079", "committedDate": "2020-08-20T12:48:20Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "committedDate": "2020-08-25T14:37:40Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "committedDate": "2020-08-25T14:37:40Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "96956a00384bb4f5e710bda87f68e7208e0cf98c", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/96956a00384bb4f5e710bda87f68e7208e0cf98c", "committedDate": "2020-08-25T17:40:43Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96956a00384bb4f5e710bda87f68e7208e0cf98c", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/96956a00384bb4f5e710bda87f68e7208e0cf98c", "committedDate": "2020-08-25T17:40:43Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "03b242ba71c393d04415d38628d23a9d10bf9dc3", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/03b242ba71c393d04415d38628d23a9d10bf9dc3", "committedDate": "2020-08-25T17:43:05Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03b242ba71c393d04415d38628d23a9d10bf9dc3", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/03b242ba71c393d04415d38628d23a9d10bf9dc3", "committedDate": "2020-08-25T17:43:05Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}, "afterCommit": {"oid": "f495e1b16597069be2bdf24797a509dce107143f", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/f495e1b16597069be2bdf24797a509dce107143f", "committedDate": "2020-08-26T09:37:34Z", "message": "Make the function's OID be created out of its signature, rather than just its name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f495e1b16597069be2bdf24797a509dce107143f", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/f495e1b16597069be2bdf24797a509dce107143f", "committedDate": "2020-08-26T09:37:34Z", "message": "Make the function's OID be created out of its signature, rather than just its name"}, "afterCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "committedDate": "2020-08-31T08:28:19Z", "message": "Make the function's OID be created out of its signature, rather than just its name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDYyNjU0", "url": "https://github.com/crate/crate/pull/10305#pullrequestreview-483462654", "createdAt": "2020-09-07T10:55:43Z", "commit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1NTo0M1rOHN60NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMToxMToxMVrOHN7Q2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NzE3Mg==", "bodyText": "Maybe something like that can be more redable?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    execute(\"select pg_get_function_result(\" + functionOid + \")\");\n          \n          \n            \n                    execute(\"select pg_get_function_result(?)\", new Object[]{functionOid});", "url": "https://github.com/crate/crate/pull/10305#discussion_r484357172", "createdAt": "2020-09-07T10:55:43Z", "author": {"login": "kovrus"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n+            .returnType(returnTypeSig)\n+            .build();\n+        int functionOid = OidHash.functionOid(signature);\n+\n+        execute(\"select pg_get_function_result(\" + functionOid + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NzMxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as '\" + returnType + \"'\");\n          \n          \n            \n                    execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as ?\", new Object[]{returnType});", "url": "https://github.com/crate/crate/pull/10305#discussion_r484357316", "createdAt": "2020-09-07T10:56:01Z", "author": {"login": "kovrus"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n+            .returnType(returnTypeSig)\n+            .build();\n+        int functionOid = OidHash.functionOid(signature);\n+\n+        execute(\"select pg_get_function_result(\" + functionOid + \")\");\n+        assertThat(response.rows()[0][0], nullValue());\n+\n+        execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as '\" + returnType + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MDY0MQ==", "bodyText": "can you maybe extract these two assertions into a separate test?", "url": "https://github.com/crate/crate/pull/10305#discussion_r484360641", "createdAt": "2020-09-07T11:02:58Z", "author": {"login": "kovrus"}, "path": "server/src/test/java/io/crate/expression/scalar/systeminformation/PgGetFunctionResultFunctionTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.systeminformation;\n+\n+import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n+import io.crate.metadata.FunctionProvider;\n+import io.crate.metadata.functions.Signature;\n+import io.crate.metadata.pgcatalog.OidHash;\n+import org.junit.Test;\n+\n+import java.util.List;\n+\n+public class PgGetFunctionResultFunctionTest extends AbstractScalarFunctionsTest {\n+\n+    @Test\n+    public void test_null_oid_results_in_null() {\n+        assertEvaluate(\"pg_function_is_visible(null)\", null);\n+    }\n+\n+    @Test\n+    public void test_system_function_result_type_text_representation() {\n+        assertEvaluate(\"pg_get_function_result(0)\",null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MTIxNg==", "bodyText": "The changelog entry is missing.", "url": "https://github.com/crate/crate/pull/10305#discussion_r484361216", "createdAt": "2020-09-07T11:04:11Z", "author": {"login": "kovrus"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -2669,6 +2669,32 @@ Example:\n     +------------------------+\n     SELECT 1 row in set (... sec)\n \n+.. _pg_get_function_result:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MTkzMw==", "bodyText": "return value's data type of the function referred **to** by the OID. is to obsolete here?", "url": "https://github.com/crate/crate/pull/10305#discussion_r484361933", "createdAt": "2020-09-07T11:05:39Z", "author": {"login": "kovrus"}, "path": "docs/general/builtins/scalar.rst", "diffHunk": "@@ -2669,6 +2669,32 @@ Example:\n     +------------------------+\n     SELECT 1 row in set (... sec)\n \n+.. _pg_get_function_result:\n+\n+``pg_get_function_result``\n+--------------------------\n+\n+The function ``pg_get_function_result`` returns the text representation of the\n+return value's data type of the function referred to by the OID.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NDUwNA==", "bodyText": "will be a better choise if there would be some kind of refactoring\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n          \n          \n            \n                        .argumentTypes(DataTypes.INTEGER.getTypeSignature()\"))", "url": "https://github.com/crate/crate/pull/10305#discussion_r484364504", "createdAt": "2020-09-07T11:11:11Z", "author": {"login": "kovrus"}, "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "committedDate": "2020-08-31T08:28:19Z", "message": "Make the function's OID be created out of its signature, rather than just its name"}, "afterCommit": {"oid": "1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "committedDate": "2020-09-07T14:35:31Z", "message": "Ruslan's suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjIyNzc1", "url": "https://github.com/crate/crate/pull/10305#pullrequestreview-483622775", "createdAt": "2020-09-07T15:10:55Z", "commit": {"oid": "1d8ff3ee1b84cd221618af263df791e7e5ddc3d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce7453300317bb11b055c1f28a1e26d0668f621b", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/ce7453300317bb11b055c1f28a1e26d0668f621b", "committedDate": "2020-09-07T15:11:43Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "committedDate": "2020-09-07T14:35:31Z", "message": "Ruslan's suggestions"}, "afterCommit": {"oid": "ce7453300317bb11b055c1f28a1e26d0668f621b", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/ce7453300317bb11b055c1f28a1e26d0668f621b", "committedDate": "2020-09-07T15:11:43Z", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3102, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}