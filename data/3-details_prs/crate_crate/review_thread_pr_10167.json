{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDc5NTU3", "number": 10167, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMzo0MFrOELrvNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1ODo0NFrOELzrYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjg2Mzg5OnYy", "diffSide": "RIGHT", "path": "docs/appendices/release-notes/unreleased.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMzo0MFrOGtXEGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyMzo0MFrOGtXEGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIxNjk4Ng==", "bodyText": "It's a regression in master and works in 4.1, so no fixes entry necessary.", "url": "https://github.com/crate/crate/pull/10167#discussion_r450216986", "createdAt": "2020-07-06T13:23:40Z", "author": {"login": "mfussenegger"}, "path": "docs/appendices/release-notes/unreleased.rst", "diffHunk": "@@ -268,6 +268,10 @@ Performance improvements\n Fixes\n =====\n \n+- Fixed issued whereby the ``crate-node`` tool would perform its task, and\n+  would report an exception when attempting to exit, as class IOUtils, and\n+  method close where missing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a30ac9ec79e67d0451b14ada88dffcf8786ca7f7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNjg2OTIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/cli/Command.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzoyNDo1OFrOGtXHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowMToyN1rOGtfysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIxNzc4Nw==", "bodyText": "Would it make sense to move this stuff into a new libs/shared/cli module?", "url": "https://github.com/crate/crate/pull/10167#discussion_r450217787", "createdAt": "2020-07-06T13:24:58Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/cli/Command.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.cli;\n+\n+import joptsimple.OptionException;\n+import joptsimple.OptionParser;\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.Arrays;\n+\n+/**\n+ * An action to execute within a cli.\n+ */\n+public abstract class Command implements Closeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a30ac9ec79e67d0451b14ada88dffcf8786ca7f7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1OTk4NA==", "bodyText": "Moved to libs/cli (instead of libs/shared/cli)", "url": "https://github.com/crate/crate/pull/10167#discussion_r450359984", "createdAt": "2020-07-06T17:01:27Z", "author": {"login": "marregui"}, "path": "server/src/main/java/org/elasticsearch/cli/Command.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.cli;\n+\n+import joptsimple.OptionException;\n+import joptsimple.OptionParser;\n+import joptsimple.OptionSet;\n+import joptsimple.OptionSpec;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.Arrays;\n+\n+/**\n+ * An action to execute within a cli.\n+ */\n+public abstract class Command implements Closeable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIxNzc4Nw=="}, "originalCommit": {"oid": "a30ac9ec79e67d0451b14ada88dffcf8786ca7f7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODE2NDgyOnYy", "diffSide": "RIGHT", "path": "libs/cli/src/main/java/org/elasticsearch/cli/Terminal.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1ODo0NFrOGtjeuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1ODo0NFrOGtjeuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyMDQwOA==", "bodyText": "Could we prune the unused stuff? Not sure if all of this is used", "url": "https://github.com/crate/crate/pull/10167#discussion_r450420408", "createdAt": "2020-07-06T18:58:44Z", "author": {"login": "mfussenegger"}, "path": "libs/cli/src/main/java/org/elasticsearch/cli/Terminal.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.cli;\n+\n+import java.io.BufferedReader;\n+import java.io.Console;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.PrintWriter;\n+import java.nio.charset.Charset;\n+import java.util.Locale;\n+\n+/**\n+ * A Terminal wraps access to reading input and writing output for a cli.\n+ *\n+ * The available methods are similar to those of {@link Console}, with the ability\n+ * to read either normal text or a password, and the ability to print a line\n+ * of text. Printing is also gated by the {@link Verbosity} of the terminal,\n+ * which allows {@link #println(Verbosity,String)} calls which act like a logger,\n+ * only actually printing if the verbosity level of the terminal is above\n+ * the verbosity of the message.\n+*/\n+public abstract class Terminal {\n+\n+    /** The default terminal implementation, which will be a console if available, or stdout/stderr if not. */\n+    public static final Terminal DEFAULT = ConsoleTerminal.isSupported() ? new ConsoleTerminal() : new SystemTerminal();\n+\n+    /** Defines the available verbosity levels of messages to be printed. */\n+    public enum Verbosity {\n+        SILENT, /* always printed */\n+        NORMAL, /* printed when no options are given to cli */\n+        VERBOSE /* printed only when cli is passed verbose option */\n+    }\n+\n+    /** The current verbosity for the terminal, defaulting to {@link Verbosity#NORMAL}. */\n+    private Verbosity verbosity = Verbosity.NORMAL;\n+\n+    /** The newline used when calling println. */\n+    private final String lineSeparator;\n+\n+    protected Terminal(String lineSeparator) {\n+        this.lineSeparator = lineSeparator;\n+    }\n+\n+    /** Sets the verbosity of the terminal. */\n+    public void setVerbosity(Verbosity verbosity) {\n+        this.verbosity = verbosity;\n+    }\n+\n+    /** Reads clear text from the terminal input. See {@link Console#readLine()}. */\n+    public abstract String readText(String prompt);\n+\n+    /** Reads password text from the terminal input. See {@link Console#readPassword()}}. */\n+    public abstract char[] readSecret(String prompt);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07bd5e61ccfe247b8f771b7468dadca1361454da"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1321, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}