{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDcyMTc4", "number": 9841, "title": "Integrate row accounting into HashInnerJoinBatchIterator", "bodyText": "Summary of the changes / Why this improves CrateDB\nThe HashInnerJoinBatchIterator already had a concrete dependency to\nRamAccountingBatchIterator, so the RamAccountingBatchIterator never\nacted as a \"transparent\" abstraction.\nGiven that the knowledge about which rows should be accounted is always up\nto the implementation of another component, I think having a generic\nRamAccountingBatchIterator doesn't make that much sense.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-01T15:35:17Z", "url": "https://github.com/crate/crate/pull/9841", "merged": true, "mergeCommit": {"oid": "a540e0c0a38e2d6b8e0ca67063f3c91d18563296"}, "closed": true, "closedAt": "2020-04-02T09:28:39Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTZfjWAH2gAyMzk3MDcyMTc4Ojk5OGM1N2VmN2YxMTgwNjU1MWVlMmY1ZWQ2ZjQ1MzdmNjI4OTYzMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcToa74AH2gAyMzk3MDcyMTc4OjRjYzYyNGM1Mjc0OTQwOTRlNTRiZDhkOWRlYjNiYzQ2NzcyNmE3Yzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "998c57ef7f11806551ee2f5ed6f4537f62896309", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/998c57ef7f11806551ee2f5ed6f4537f62896309", "committedDate": "2020-04-01T15:32:44Z", "message": "Integrate row accounting into HashInnerJoinBatchIterator\n\nThe HashInnerJoinBatchIterator already had a concrete dependency to\nRamAccountingBatchIterator, so the RamAccountingBatchIterator never\nacted as a \"transparent\" abstraction.\n\nGiven that the knowledge about which rows should be accounted is always up\nto the implementation of another component, I think having a generic\nRamAccountingBatchIterator doesn't make that much sense."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzA2NDU4", "url": "https://github.com/crate/crate/pull/9841#pullrequestreview-385706458", "createdAt": "2020-04-01T15:36:28Z", "commit": {"oid": "998c57ef7f11806551ee2f5ed6f4537f62896309"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozNjoyOFrOF_GexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozNjoyOFrOF_GexA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMDc4OA==", "bodyText": "Increased from 7 to 8 because now it is called initially also once in the CTOR. Shouldn't have too much impact.", "url": "https://github.com/crate/crate/pull/9841#discussion_r401710788", "createdAt": "2020-04-01T15:36:28Z", "author": {"login": "mfussenegger"}, "path": "sql/src/test/java/io/crate/execution/engine/join/HashInnerJoinBatchIteratorMemoryTest.java", "diffHunk": "@@ -79,21 +85,7 @@ public void testReleaseAccountingRows() throws Exception {\n         TestingRowConsumer consumer = new TestingRowConsumer();\n         consumer.accept(it, null);\n         consumer.getResult();\n-        assertThat(leftIterator.countCallsForReleaseMem, is(7));\n-    }\n-\n-    private class TestRamAccountingBatchIterator extends RamAccountingBatchIterator<Row> {\n-\n-        private int countCallsForReleaseMem = 0;\n-\n-        private TestRamAccountingBatchIterator(BatchIterator<Row> delegatePagingIterator, RowAccounting rowAccounting) {\n-            super(delegatePagingIterator, rowAccounting);\n-        }\n-\n-        @Override\n-        public void releaseAccountedRows() {\n-            countCallsForReleaseMem++;\n-            super.releaseAccountedRows();\n-        }\n+        verify(rowAccounting, times(8)).release();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998c57ef7f11806551ee2f5ed6f4537f62896309"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjI4ODMy", "url": "https://github.com/crate/crate/pull/9841#pullrequestreview-386228832", "createdAt": "2020-04-02T08:54:55Z", "commit": {"oid": "998c57ef7f11806551ee2f5ed6f4537f62896309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cc624c527494094e54bd8d9deb3bc467726a7c9", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/4cc624c527494094e54bd8d9deb3bc467726a7c9", "committedDate": "2020-04-02T08:56:16Z", "message": "Merge branch 'master' into j/hash-join-ram-accounting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3492, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}