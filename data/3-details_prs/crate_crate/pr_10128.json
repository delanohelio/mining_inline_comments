{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTIyNjMw", "number": 10128, "title": "Track Shard-Snapshot Index Generation at Repository Root", "bodyText": "Summary of the changes / Why this improves CrateDB\nBased on elastic/elasticsearch#46250 , also contains  elastic/elasticsearch@be397b7 and elastic/elasticsearch@4849c3e\nAll tests are passing, but what is missing is the logic to trigger the cleanup from the master node introduced in  elastic/elasticsearch#43900. My plan was to put this into a separate pr and only the parts which we need, not the whole endpoint.\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-06-24T10:44:28Z", "url": "https://github.com/crate/crate/pull/10128", "merged": true, "mergeCommit": {"oid": "f5505cbfa113aa2a5612d910fde2e29bd919e06d"}, "closed": true, "closedAt": "2020-06-30T13:45:20Z", "author": {"login": "mkleen"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuqf5VgBqjM0ODEyMjExNTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwVbS4ABqjM0OTc2ODIyNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab3e91ffd873913087ba6bb513b8acbe79457923", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/ab3e91ffd873913087ba6bb513b8acbe79457923", "committedDate": "2020-06-25T08:28:41Z", "message": "Fix javadoc in BlobStoreRepository"}, "afterCommit": {"oid": "f0e223946c4453ca8b4dd4914aa7c346e84a878a", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/f0e223946c4453ca8b4dd4914aa7c346e84a878a", "committedDate": "2020-06-25T08:37:19Z", "message": "Fix javadoc in BlobStoreRepository"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7512979539c07a8717a8ed3cb7db156a37952172", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7512979539c07a8717a8ed3cb7db156a37952172", "committedDate": "2020-06-26T13:39:27Z", "message": "Fix formatting"}, "afterCommit": {"oid": "4c034a02a214e44cf12d19a6a9503779b0b29d06", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/4c034a02a214e44cf12d19a6a9503779b0b29d06", "committedDate": "2020-06-26T13:44:40Z", "message": "Fix formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "830159aba095c55238cf8a7cbce0aff015ecd1aa", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/830159aba095c55238cf8a7cbce0aff015ecd1aa", "committedDate": "2020-06-29T09:51:14Z", "message": "Add formatting"}, "afterCommit": {"oid": "336c30d05c10924640599e89947622b1099fa6a6", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/336c30d05c10924640599e89947622b1099fa6a6", "committedDate": "2020-06-29T10:35:34Z", "message": "Remove uneeded changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDQwNzkz", "url": "https://github.com/crate/crate/pull/10128#pullrequestreview-439040793", "createdAt": "2020-06-29T11:22:41Z", "commit": {"oid": "221c5c7abe30f45973db82fc8db45d1d0d9a6a30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToyMjo0MVrOGqMTqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToyMjo0MVrOGqMTqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5NTAxOA==", "bodyText": "See https://github.com/original-brownbear/elasticsearch/blob/222c587c0ae930f2dde097621e8757b9cf217d81/server/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java#L3050", "url": "https://github.com/crate/crate/pull/10128#discussion_r446895018", "createdAt": "2020-06-29T11:22:41Z", "author": {"login": "mkleen"}, "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -539,24 +542,15 @@ public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n         var fullSnapShotName2 = REPOSITORY_NAME + \".s2\";\n \n         execute(\"CREATE SNAPSHOT \" + fullSnapShotName2 + \" ALL WITH (wait_for_completion=true)\");\n-\n-        assertSnapShotState(snapShotName2);\n-\n-        execute(\"drop table t1\");\n-        execute(\"RESTORE SNAPSHOT \" + fullSnapShotName2 + \" TABLE t1 with (wait_for_completion=true)\");\n-        ensureYellow();\n-\n-        execute(\"SELECT COUNT(*) FROM t1\");\n-        assertThat(response.rows()[0][0], is(numberOfDocs + numberOfAdditionalDocs));\n-\n+        assertSnapShotState(snapShotName2, SnapshotState.PARTIAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "221c5c7abe30f45973db82fc8db45d1d0d9a6a30"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7bb44bd3fc1814a222a55cf084e06f50db6891e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d7bb44bd3fc1814a222a55cf084e06f50db6891e", "committedDate": "2020-06-29T12:15:58Z", "message": "Fix formatting"}, "afterCommit": {"oid": "2ab4e7fef64469bbfa23790b319583ea692aa558", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/2ab4e7fef64469bbfa23790b319583ea692aa558", "committedDate": "2020-06-29T14:42:42Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ab4e7fef64469bbfa23790b319583ea692aa558", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/2ab4e7fef64469bbfa23790b319583ea692aa558", "committedDate": "2020-06-29T14:42:42Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250"}, "afterCommit": {"oid": "e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "committedDate": "2020-06-29T15:11:01Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/e24c7abdd5f4ff8115b2c6500e28a7396499b9c8", "committedDate": "2020-06-29T15:11:01Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250"}, "afterCommit": {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/803c0efac6fbfd78bb39c831de531a565d0268be", "committedDate": "2020-06-29T15:13:27Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjQzMjI4", "url": "https://github.com/crate/crate/pull/10128#pullrequestreview-439243228", "createdAt": "2020-06-29T15:11:13Z", "commit": {"oid": "2ab4e7fef64469bbfa23790b319583ea692aa558"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNToxMToxM1rOGqVh0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTozMDo0MVrOGqWY9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NjA5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> bc) {\n          \n          \n            \n                    return new ActionListener<T>() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onResponse(T r) {\n          \n          \n            \n                            delegate.onResponse(r);\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onFailure(Exception e) {\n          \n          \n            \n                            bc.accept(delegate, e);\n          \n          \n            \n                        }\n          \n          \n            \n                    };\n          \n          \n            \n                }\n          \n          \n            \n                static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> onFailure) {\n          \n          \n            \n                    return new ActionListener<T>() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onResponse(T r) {\n          \n          \n            \n                            delegate.onResponse(r);\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void onFailure(Exception e) {\n          \n          \n            \n                            onFailure.accept(delegate, e);\n          \n          \n            \n                        }\n          \n          \n            \n                    };\n          \n          \n            \n                }", "url": "https://github.com/crate/crate/pull/10128#discussion_r447046098", "createdAt": "2020-06-29T15:11:13Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/action/ActionListener.java", "diffHunk": "@@ -247,4 +247,27 @@ public void onFailure(Exception e) {\n             }\n         };\n     }\n+\n+    /**\n+     * Creates a listener that delegates all responses it receives to another listener.\n+     *\n+     * @param delegate ActionListener to wrap and delegate any exception to\n+     * @param bc BiConsumer invoked with delegate listener and exception\n+     * @param <T> Type of the listener\n+     * @return Delegating listener\n+     */\n+    static <T> ActionListener<T> delegateResponse(ActionListener<T> delegate, BiConsumer<ActionListener<T>, Exception> bc) {\n+        return new ActionListener<T>() {\n+\n+            @Override\n+            public void onResponse(T r) {\n+                delegate.onResponse(r);\n+            }\n+\n+            @Override\n+            public void onFailure(Exception e) {\n+                bc.accept(delegate, e);\n+            }\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ab4e7fef64469bbfa23790b319583ea692aa558"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1NjQ3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Shard generations.\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nThe comment just repeats the variable name - no point in having it.", "url": "https://github.com/crate/crate/pull/10128#discussion_r447056474", "createdAt": "2020-06-29T15:25:36Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -78,20 +79,33 @@\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n+    /**\n+     * Shard generations.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1NzY1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.shardGenerations = Objects.requireNonNull(shardGenerations);\n          \n          \n            \n                    this.shardGenerations = Objects.requireNonNull(shardGenerations, \"shardGenerations must not be null\");", "url": "https://github.com/crate/crate/pull/10128#discussion_r447057652", "createdAt": "2020-06-29T15:27:14Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -78,20 +79,33 @@\n      */\n     private final Map<IndexId, Set<SnapshotId>> indexSnapshots;\n \n+    /**\n+     * Shard generations.\n+     */\n+    private final ShardGenerations shardGenerations;\n+\n     public RepositoryData(long genId,\n                           Map<String, SnapshotId> snapshotIds,\n                           Map<String, SnapshotState> snapshotStates,\n-                          Map<IndexId, Set<SnapshotId>> indexSnapshots) {\n+                          Map<IndexId, Set<SnapshotId>> indexSnapshots,\n+                          ShardGenerations shardGenerations) {\n         this.genId = genId;\n         this.snapshotIds = Collections.unmodifiableMap(snapshotIds);\n         this.snapshotStates = Collections.unmodifiableMap(snapshotStates);\n         this.indices = Collections.unmodifiableMap(indexSnapshots.keySet().stream()\n             .collect(Collectors.toMap(IndexId::getName, Function.identity())));\n         this.indexSnapshots = Collections.unmodifiableMap(indexSnapshots);\n+        this.shardGenerations = Objects.requireNonNull(shardGenerations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1OTIyMw==", "bodyText": "In ES this got introduced in elastic/elasticsearch@be397b7 do we have the other changes from that?", "url": "https://github.com/crate/crate/pull/10128#discussion_r447059223", "createdAt": "2020-06-29T15:29:23Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -134,13 +148,32 @@ public SnapshotState getSnapshotState(final SnapshotId snapshotId) {\n         return indices;\n     }\n \n+    /**\n+     * Returns the list of {@link IndexId} that have their snapshots updated but not removed (because they are still referenced by other\n+     * snapshots) after removing the given snapshot from the repository.\n+     *\n+     * @param snapshotId SnapshotId to remove\n+     * @return List of indices that are changed but not removed\n+     */\n+    public List<IndexId> indicesToUpdateAfterRemovingSnapshot(SnapshotId snapshotId) {\n+        return indexSnapshots.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2MDIxNA==", "bodyText": "This came with elastic/elasticsearch@4849c3e\nAre the other changes also ported?", "url": "https://github.com/crate/crate/pull/10128#discussion_r447060214", "createdAt": "2020-06-29T15:30:41Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/repositories/RepositoryData.java", "diffHunk": "@@ -152,16 +185,35 @@ public RepositoryData addSnapshot(final SnapshotId snapshotId,\n         Map<String, SnapshotState> newSnapshotStates = new HashMap<>(snapshotStates);\n         newSnapshotStates.put(snapshotId.getUUID(), snapshotState);\n         Map<IndexId, Set<SnapshotId>> allIndexSnapshots = new HashMap<>(indexSnapshots);\n-        for (final IndexId indexId : snapshottedIndices) {\n+        for (final IndexId indexId : shardGenerations.indices()) {\n             allIndexSnapshots.computeIfAbsent(indexId, k -> new LinkedHashSet<>()).add(snapshotId);\n         }\n-        return new RepositoryData(genId, snapshots, newSnapshotStates, allIndexSnapshots);\n+        return new RepositoryData(genId, snapshots, newSnapshotStates, allIndexSnapshots,\n+                                  ShardGenerations.builder().putAll(this.shardGenerations).putAll(shardGenerations).build());\n+    }\n+\n+    /**\n+     * Create a new instance with the given generation and all other fields equal to this instance.\n+     *\n+     * @param newGeneration New Generation\n+     * @return New instance\n+     */\n+    public RepositoryData withGenId(long newGeneration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803c0efac6fbfd78bb39c831de531a565d0268be"}, "originalPosition": 114}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58635c80a434e955329234cd74c900991fbb1129", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/58635c80a434e955329234cd74c900991fbb1129", "committedDate": "2020-06-30T08:59:50Z", "message": "Add relevant tests for BlobStoreRepository"}, "afterCommit": {"oid": "2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/2c3b958efca2fd6788c5fddab3b5eba46f3c289e", "committedDate": "2020-06-30T09:08:22Z", "message": "Add relevant tests for BlobStoreRepository"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3e9fb9f1781ce2205da2b20ed2f5927226d34fc", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/c3e9fb9f1781ce2205da2b20ed2f5927226d34fc", "committedDate": "2020-06-30T09:25:32Z", "message": "Remove uneeded formatting from napshotShardsService"}, "afterCommit": {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/15a3e0be567e4be1689893fa2675c3c5c677ed43", "committedDate": "2020-06-30T09:32:55Z", "message": "Remove uneeded formatting from SnapshotShardsService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5ODU1MjUy", "url": "https://github.com/crate/crate/pull/10128#pullrequestreview-439855252", "createdAt": "2020-06-30T09:51:02Z", "commit": {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOTo1MTowMlrOGq0z5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOTo1MTo0OFrOGq02Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1ODYyOQ==", "bodyText": "can't these still be final?", "url": "https://github.com/crate/crate/pull/10128#discussion_r447558629", "createdAt": "2020-06-30T09:51:02Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -400,10 +389,16 @@ private void syncShardStatsOnNewMaster(ClusterChangedEvent event) {\n      * Internal request that is used to send changes in snapshot status to master\n      */\n     public static class UpdateIndexShardSnapshotStatusRequest extends MasterNodeRequest<UpdateIndexShardSnapshotStatusRequest> {\n+        private Snapshot snapshot;\n+        private ShardId shardId;\n+        private ShardSnapshotStatus status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1OTE5OQ==", "bodyText": "Why the formatting changes?", "url": "https://github.com/crate/crate/pull/10128#discussion_r447559199", "createdAt": "2020-06-30T09:51:48Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java", "diffHunk": "@@ -575,25 +564,21 @@ public void clusterStateProcessed(String source, ClusterState oldState, ClusterS\n \n     static class UpdateIndexShardSnapshotStatusResponse extends TransportResponse {\n \n-        @Override\n-        public void writeTo(StreamOutput out) throws IOException {\n+        public UpdateIndexShardSnapshotStatusResponse() {\n+\n         }\n \n-        public UpdateIndexShardSnapshotStatusResponse() {\n+        @Override\n+        public void writeTo(StreamOutput out) throws IOException {\n         }\n     }\n \n     private class UpdateSnapshotStatusAction\n         extends TransportMasterNodeAction<UpdateIndexShardSnapshotStatusRequest, UpdateIndexShardSnapshotStatusResponse> {\n         UpdateSnapshotStatusAction(TransportService transportService, ClusterService clusterService,\n-                                   ThreadPool threadPool, IndexNameExpressionResolver indexNameExpressionResolver) {\n+                                   ThreadPool threadPool,IndexNameExpressionResolver indexNameExpressionResolver) {\n             super(\n-                SnapshotShardsService.UPDATE_SNAPSHOT_STATUS_ACTION_NAME,\n-                transportService,\n-                clusterService,\n-                threadPool,\n-                UpdateIndexShardSnapshotStatusRequest::new,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43"}, "originalPosition": 263}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15a3e0be567e4be1689893fa2675c3c5c677ed43", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/15a3e0be567e4be1689893fa2675c3c5c677ed43", "committedDate": "2020-06-30T09:32:55Z", "message": "Remove uneeded formatting from SnapshotShardsService"}, "afterCommit": {"oid": "2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "committedDate": "2020-06-30T13:03:03Z", "message": "Revert formatting in SnapshotShardsService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1f866302b5598c40d74fa121170c45e2b047042", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d1f866302b5598c40d74fa121170c45e2b047042", "committedDate": "2020-06-30T13:12:03Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250\nhttps://github.com/elastic/elasticsearch/commit/be397b7 and\nhttps://github.com/elastic/elasticsearch/commit/4849c3e"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/2a5ab62b4d58e0cbcd12b4867f5087e79cef5ce0", "committedDate": "2020-06-30T13:03:03Z", "message": "Revert formatting in SnapshotShardsService"}, "afterCommit": {"oid": "d1f866302b5598c40d74fa121170c45e2b047042", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d1f866302b5598c40d74fa121170c45e2b047042", "committedDate": "2020-06-30T13:12:03Z", "message": "Track Shard-Snapshot Index Generation at Repository Root\n\nBased on https://github.com/elastic/elasticsearch/pull/46250\nhttps://github.com/elastic/elasticsearch/commit/be397b7 and\nhttps://github.com/elastic/elasticsearch/commit/4849c3e"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3154, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}