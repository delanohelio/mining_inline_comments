{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDcyNjMz", "number": 10101, "title": "Remove old deprecated function registry", "bodyText": "Remove the old deprecated function registry.\nAdditionally introduce BWC function resolving helper when function symbols are retrieved from older nodes without any signature. In that case a full function matching will be performed instead of a fast by-signature lookup.\nAs this only happens in mixed clusters (rolling upgrade) for a short period, this should be neglectable.\nAlso old and now unused function registry/matching related interfaces and classes are removed.\nRelates #9901.", "createdAt": "2020-06-18T13:26:05Z", "url": "https://github.com/crate/crate/pull/10101", "merged": true, "mergeCommit": {"oid": "53df6eae288ec8e0df8f3019133098d18c0f72f4"}, "closed": true, "closedAt": "2020-06-19T10:17:47Z", "author": {"login": "seut"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsedflgFqTQzMzI4MjA4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsv3z_gBqjM0NjE3NDEyMDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjgyMDgw", "url": "https://github.com/crate/crate/pull/10101#pullrequestreview-433282080", "createdAt": "2020-06-18T13:28:07Z", "commit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyODowN1rOGlvR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoyODowN1rOGlvR0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIyNTEwNA==", "bodyText": "We do not promote our plugin infrastructure anymore, our plugin example repository is archived.", "url": "https://github.com/crate/crate/pull/10101#discussion_r442225104", "createdAt": "2020-06-18T13:28:07Z", "author": {"login": "seut"}, "path": "app/src/test/java/io/crate/plugin/PluginLoaderTest.java", "diffHunk": "@@ -83,32 +77,6 @@ public void testPluginWithCrateSettings() throws Exception {\n         assertThat(settings.get(\"setting.for.crate\"), is(\"foo\"));\n     }\n \n-    @Test\n-    public void testLoadPluginRegisteringScalarFunction() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDgzNzM2", "url": "https://github.com/crate/crate/pull/10101#pullrequestreview-433483736", "createdAt": "2020-06-18T17:08:11Z", "commit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzowODoxMlrOGl4jQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzowODoxMlrOGl4jQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3NzAyNw==", "bodyText": "I think argumentTypes is only used in the error case further below. Maybe the typeView call could be moved into the else block.", "url": "https://github.com/crate/crate/pull/10101#discussion_r442377027", "createdAt": "2020-06-18T17:08:12Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/BaseImplementationSymbolVisitor.java", "diffHunk": "@@ -53,14 +54,12 @@ public BaseImplementationSymbolVisitor(TransactionContext txnCtx, Functions func\n \n     @Override\n     public Input<?> visitFunction(Function function, C context) {\n-        FunctionIdent ident = function.info().ident();\n         Signature signature = function.signature();\n-        FunctionImplementation functionImplementation;\n-        if (signature == null) {\n-            functionImplementation = functions.getQualified(ident);\n-        } else {\n-            functionImplementation = functions.getQualified(signature, ident.argumentTypes());\n-        }\n+        List<DataType> argumentTypes = Symbols.typeView(function.arguments());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDkwNTIw", "url": "https://github.com/crate/crate/pull/10101#pullrequestreview-433490520", "createdAt": "2020-06-18T17:17:10Z", "commit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODkwNDQ4", "url": "https://github.com/crate/crate/pull/10101#pullrequestreview-433890448", "createdAt": "2020-06-19T08:17:32Z", "commit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a8fffeae4dd4597e51ad966ee8090dfa9b94fdb", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/9a8fffeae4dd4597e51ad966ee8090dfa9b94fdb", "committedDate": "2020-06-19T09:45:05Z", "message": "Remove signature nullable annotation at function impl iface\n\nAll functions are now converted to the signature based registry and\nthus must provide a signature."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4e1f9f9c39637b9cd4349625ac4f7552bbf7910", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/d4e1f9f9c39637b9cd4349625ac4f7552bbf7910", "committedDate": "2020-06-19T09:45:05Z", "message": "Remove old deprecated function registry\n\nAdditionally introduce BWC function resolving helper when function`\nsymbols are retrieved from older nodes without any signature.\nIn that case a full function matching will be performed instead of\na fast by-signature lookup.\nAs this only happens in mixed clusters (rolling upgrade) for a short\nperiod, this should be neglectable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4390f90bf77144951aab094dfd4dd75e83dd6bb3", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/4390f90bf77144951aab094dfd4dd75e83dd6bb3", "committedDate": "2020-06-19T09:45:05Z", "message": "Remove unused deprecated function related interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b43cbe4016e955eedfeae0a7ca2666b113a2282", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/8b43cbe4016e955eedfeae0a7ca2666b113a2282", "committedDate": "2020-06-19T09:45:05Z", "message": "Rename function providing interface\n\nRename `FuncResolver` to `FunctionProvider` as it is providing a \nfunction factory for a given signature and not resolving."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "684f44dbe4c54c9648ce6ab8f6468240cb55234d", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/684f44dbe4c54c9648ce6ab8f6468240cb55234d", "committedDate": "2020-06-18T13:16:55Z", "message": "Rename function providing interface\n\nRename `FuncResolver` to `FunctionProvider` as it is providing a \nfunction factory for a given signature and not resolving."}, "afterCommit": {"oid": "8b43cbe4016e955eedfeae0a7ca2666b113a2282", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/8b43cbe4016e955eedfeae0a7ca2666b113a2282", "committedDate": "2020-06-19T09:45:05Z", "message": "Rename function providing interface\n\nRename `FuncResolver` to `FunctionProvider` as it is providing a \nfunction factory for a given signature and not resolving."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3282, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}