{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTYzNTk5", "number": 9951, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozODo0MVrOD8dYpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1ODoyM1rOECfXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzIyNTk2OnYy", "diffSide": "RIGHT", "path": "docs/general/ddl/data-types.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozODo0MVrOGVaO1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozODo0MVrOGVaO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEwMzA2Mg==", "bodyText": "pg documentation says the following about this behaviour: . (This somewhat bizarre exception is required by the SQL standard.)", "url": "https://github.com/crate/crate/pull/9951#discussion_r425103062", "createdAt": "2020-05-14T12:38:41Z", "author": {"login": "kovrus"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,110 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.\n+\n+Columns of below listed character data types can also be analyzed. By default\n+the :ref:`plain <plain-analyzer>` analyzer is used. See\n+:ref:`sql_ddl_index_fulltext`.\n+\n+.. _data-type-varchar:\n+\n+``character varying(n)``, ``varchar(n)``\n+----------------------------------------\n+\n+The ``character varying(n)`` or ``varchar(n)`` character data types represent\n+variable length strings. All unicode characters are allowed.\n+\n+The mandatory length specification ``n`` is an unsigned, positive `integer\n+<numeric types_>`_ that defines the maximum length, in characters, of the\n+values that have to be stored ot cast. The minimum length is ``1``. The\n+maximum length is defined by the upper `integer <numeric types_>`_ range.\n+\n+An attempt to store a longer string into a column of these types will result\n+in an error.\n+\n+::\n+\n+    cr> CREATE TABLE users (id varchar(2), name varchar));\n+    CREATE OK, 1 row affected (... sec)\n+\n+::\n+\n+    cr> INSERT INTO users (id, name) VALUES ('1361', 'john doe')\n+    SQLActionException[value too long for type character varying(2)]\n+\n+Unless the excess characters are all spaces, in which case the string will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e8b4a4eb2322049679e892f903e7ed8c9e9897"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzI5NTgxOnYy", "diffSide": "RIGHT", "path": "docs/general/ddl/data-types.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjo1NzoxOVrOGVa7KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjo1NzoxOVrOGVa7KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTExNDQwOQ==", "bodyText": "The length is optional, no?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The mandatory length specification ``n`` is an unsigned, positive `integer\n          \n          \n            \n            The mandatory length specification ``n`` is a positive `integer\n          \n      \n    \n    \n  \n\nWe are probably going to use an Integer to represent it, so it won't be unsigned.", "url": "https://github.com/crate/crate/pull/9951#discussion_r425114409", "createdAt": "2020-05-14T12:57:19Z", "author": {"login": "mfussenegger"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,110 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.\n+\n+Columns of below listed character data types can also be analyzed. By default\n+the :ref:`plain <plain-analyzer>` analyzer is used. See\n+:ref:`sql_ddl_index_fulltext`.\n+\n+.. _data-type-varchar:\n+\n+``character varying(n)``, ``varchar(n)``\n+----------------------------------------\n+\n+The ``character varying(n)`` or ``varchar(n)`` character data types represent\n+variable length strings. All unicode characters are allowed.\n+\n+The mandatory length specification ``n`` is an unsigned, positive `integer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e8b4a4eb2322049679e892f903e7ed8c9e9897"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQ1MzYxOnYy", "diffSide": "RIGHT", "path": "docs/general/ddl/data-types.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1NToyNVrOGe-dUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1NToyNVrOGe-dUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzMzc3OQ==", "bodyText": "If the excess characters are all spaces, the string literal will be truncated\nto the specified length.", "url": "https://github.com/crate/crate/pull/9951#discussion_r435133779", "createdAt": "2020-06-04T09:55:25Z", "author": {"login": "infoverload"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,116 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.\n+\n+Columns of below listed character data types can also be analyzed. By default\n+the :ref:`plain <plain-analyzer>` analyzer is used. See\n+:ref:`sql_ddl_index_fulltext`.\n+\n+.. _data-type-varchar:\n+\n+``character varying(n)``, ``varchar(n)``\n+----------------------------------------\n+\n+The ``character varying(n)`` or ``varchar(n)`` character data types represent\n+variable length strings. All unicode characters are allowed.\n+\n+The optional length specification ``n`` is a positive `integer <numeric\n+types_>`_ that defines the maximum length, in characters, of the values\n+that have to be stored or cast. The minimum length is ``1``. The maximum\n+length is defined by the upper `integer <numeric types_>`_ range.\n+\n+An attempt to store a string literal that exceeds the specified length\n+of the character data type results in an error.\n+\n+::\n+\n+    cr> CREATE TABLE users (id varchar, name varchar(6));\n+    CREATE OK, 1 row affected (... sec)\n+\n+::\n+\n+    cr> INSERT INTO users (id, name) VALUES ('1361', 'john doe')\n+    SQLActionException[SQLParseException: 'john doe' is too long for the text type of length: 6]\n+\n+Unless the excess characters are all spaces, in this case the string literal\n+will be truncated to the specified length.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e6d12311a56112b3a894f04f42d1d5683dc1b0"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQ1NjY5OnYy", "diffSide": "RIGHT", "path": "docs/general/ddl/data-types.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1NjoyMFrOGe-fVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1NjoyMFrOGe-fVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzNDI5Mg==", "bodyText": "These are general purpose character data types available in CrateDB.", "url": "https://github.com/crate/crate/pull/9951#discussion_r435134292", "createdAt": "2020-06-04T09:56:20Z", "author": {"login": "infoverload"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,116 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e6d12311a56112b3a894f04f42d1d5683dc1b0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQ2NDgzOnYy", "diffSide": "RIGHT", "path": "docs/general/ddl/data-types.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo1ODoyM1rOGe-kRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDoxMDo0NVrOGe_AGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzNTU1OQ==", "bodyText": "I think we can remove \"Columns of below listed character data types can also be analyzed.\"", "url": "https://github.com/crate/crate/pull/9951#discussion_r435135559", "createdAt": "2020-06-04T09:58:23Z", "author": {"login": "infoverload"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,116 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.\n+\n+Columns of below listed character data types can also be analyzed. By default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e6d12311a56112b3a894f04f42d1d5683dc1b0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE0MjY4Mg==", "bodyText": "it was not correct actually, changed it now and pushed the fixup.", "url": "https://github.com/crate/crate/pull/9951#discussion_r435142682", "createdAt": "2020-06-04T10:10:45Z", "author": {"login": "kovrus"}, "path": "docs/general/ddl/data-types.rst", "diffHunk": "@@ -82,28 +82,116 @@ A basic boolean type. Accepting ``true`` and ``false`` as values. Example::\n     cr> drop table my_bool_table;\n     DROP OK, 1 row affected (... sec)\n \n+.. _character-data-types:\n+\n+Character Types\n+===============\n+\n+The general-purpose character data types available in CrateDB.\n+\n+Columns of below listed character data types can also be analyzed. By default", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEzNTU1OQ=="}, "originalCommit": {"oid": "94e6d12311a56112b3a894f04f42d1d5683dc1b0"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1492, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}