{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODE3Mzky", "number": 9562, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowNjoxOVrODaeqEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowNjoxOVrODaeqEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDkxODU2OnYy", "diffSide": "RIGHT", "path": "sql/src/test/java/io/crate/integrationtests/PostgresITest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowNjoxOVrOFhdESA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowOTo1M1rOFhdJyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMzU2MA==", "bodyText": "Would it be possible to turn this into an analyzer test? (Cheaper to run)", "url": "https://github.com/crate/crate/pull/9562#discussion_r370623560", "createdAt": "2020-01-24T13:06:19Z", "author": {"login": "mfussenegger"}, "path": "sql/src/test/java/io/crate/integrationtests/PostgresITest.java", "diffHunk": "@@ -516,6 +516,25 @@ public void testExecuteBatchWithOneFailingAndNothingExecuted() throws Exception\n         }\n     }\n \n+    @Test\n+    public void test_execute_bulk_insert_from_subquery_fails_with_analyzer__types_incompatibility_exception() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a3bbc4cbf0fb33a2c091c52ef26ac2e0e6712f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyNDk2OQ==", "bodyText": "i deliberately wanted it to keep as an integration test, but probably it should be also fine to have it as the . analyzer test.  \ud83d\udc4d will update", "url": "https://github.com/crate/crate/pull/9562#discussion_r370624969", "createdAt": "2020-01-24T13:09:53Z", "author": {"login": "kovrus"}, "path": "sql/src/test/java/io/crate/integrationtests/PostgresITest.java", "diffHunk": "@@ -516,6 +516,25 @@ public void testExecuteBatchWithOneFailingAndNothingExecuted() throws Exception\n         }\n     }\n \n+    @Test\n+    public void test_execute_bulk_insert_from_subquery_fails_with_analyzer__types_incompatibility_exception() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMzU2MA=="}, "originalCommit": {"oid": "16a3bbc4cbf0fb33a2c091c52ef26ac2e0e6712f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1141, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}