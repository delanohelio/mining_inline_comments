{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTI2NDM5", "number": 10001, "title": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation", "bodyText": "Backport of elastic/elasticsearch#41310\nSummary of the changes / Why this improves CrateDB\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-05-26T10:42:31Z", "url": "https://github.com/crate/crate/pull/10001", "merged": true, "mergeCommit": {"oid": "956c9c70bb6196ad29f5e48c3c7ea05caaa12833"}, "closed": true, "closedAt": "2020-05-28T14:36:54Z", "author": {"login": "mkleen"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclqQ9YgBqjMzODE4NzQ5NzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcluXPhAH2gAyNDIzMTI2NDM5OjE3OTQxZmI0MjIyMTYzYWQwMDA5YTc3YWY0N2IwM2JkOWFmMTMwMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d97d6aa272bfd927b446733cb8c4ef64300c400d", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d97d6aa272bfd927b446733cb8c4ef64300c400d", "committedDate": "2020-05-26T10:41:33Z", "message": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation\n\nBackport of https://github.com/elastic/elasticsearch/pull/41310"}, "afterCommit": {"oid": "65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "committedDate": "2020-05-28T09:14:26Z", "message": "Add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/65e0ee536ca1b8491c9b0cb6c6d89a4f7780c808", "committedDate": "2020-05-28T09:14:26Z", "message": "Add integration test"}, "afterCommit": {"oid": "7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "committedDate": "2020-05-28T09:18:42Z", "message": "Add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7a6f50e7c8f2b04f5d5caee600733e613edbc6cd", "committedDate": "2020-05-28T09:18:42Z", "message": "Add integration test"}, "afterCommit": {"oid": "93df10848d6a56bbc03a92b941a3cdaab9140752", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/93df10848d6a56bbc03a92b941a3cdaab9140752", "committedDate": "2020-05-28T09:22:15Z", "message": "Add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93df10848d6a56bbc03a92b941a3cdaab9140752", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/93df10848d6a56bbc03a92b941a3cdaab9140752", "committedDate": "2020-05-28T09:22:15Z", "message": "Add integration test"}, "afterCommit": {"oid": "507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "committedDate": "2020-05-28T09:24:24Z", "message": "Add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/507c85a6e4ed6266c7afe26ea5e41a14aca6c550", "committedDate": "2020-05-28T09:24:24Z", "message": "Add integration test"}, "afterCommit": {"oid": "3d479382eb1216d07f7f6c37f8e788300789c68a", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3d479382eb1216d07f7f6c37f8e788300789c68a", "committedDate": "2020-05-28T09:28:20Z", "message": "Add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d479382eb1216d07f7f6c37f8e788300789c68a", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3d479382eb1216d07f7f6c37f8e788300789c68a", "committedDate": "2020-05-28T09:28:20Z", "message": "Add integration test"}, "afterCommit": {"oid": "4faf786afe84f11817e3b38df8a9022388415581", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/4faf786afe84f11817e3b38df8a9022388415581", "committedDate": "2020-05-28T09:32:27Z", "message": "Add integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDUzMTc0", "url": "https://github.com/crate/crate/pull/10001#pullrequestreview-420053174", "createdAt": "2020-05-28T12:24:05Z", "commit": {"oid": "4faf786afe84f11817e3b38df8a9022388415581"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNDowNVrOGbyqGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNDo1M1rOGbyrxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NDcxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ensureYellow();\n          \n      \n    \n    \n  \n\nShouldn't be required here.", "url": "https://github.com/crate/crate/pull/10001#discussion_r431794712", "createdAt": "2020-05-28T12:24:05Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -485,4 +493,86 @@ public void test_cannot_create_snapshot_in_read_only_repo() {\n         expectedException.expectMessage(\"cannot create snapshot in a readonly repository\");\n         execute(\"create snapshot my_repo_ro.s1 ALL WITH (wait_for_completion=true)\");\n     }\n+\n+    public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n+        execute(\"CREATE TABLE t1 (x int)\");\n+        var numberOfDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName1 = \"s1\";\n+        var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4faf786afe84f11817e3b38df8a9022388415581"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTE0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ensureYellow();", "url": "https://github.com/crate/crate/pull/10001#discussion_r431795140", "createdAt": "2020-05-28T12:24:53Z", "author": {"login": "mfussenegger"}, "path": "server/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java", "diffHunk": "@@ -485,4 +493,86 @@ public void test_cannot_create_snapshot_in_read_only_repo() {\n         expectedException.expectMessage(\"cannot create snapshot in a readonly repository\");\n         execute(\"create snapshot my_repo_ro.s1 ALL WITH (wait_for_completion=true)\");\n     }\n+\n+    public void test_snapshot_with_corrupted_shard_index_file() throws Exception {\n+        execute(\"CREATE TABLE t1 (x int)\");\n+        var numberOfDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName1 = \"s1\";\n+        var fullSnapShotName1 =  REPOSITORY_NAME + \".\" + snapShotName1;\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName1 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();\n+\n+        var repositoryData = getRepositoryData();\n+        var indexIds = repositoryData.getIndices();\n+        assertThat(indexIds.size(), equalTo(1));\n+\n+        var corruptedIndex = indexIds.entrySet().iterator().next().getValue();\n+        var shardIndexFile = defaultRepositoryLocation.toPath().resolve(\"indices\")\n+            .resolve(corruptedIndex.getId()).resolve(\"0\")\n+            .resolve(\"index-0\");\n+\n+        // Truncating shard index file\n+        try (var outChan = Files.newByteChannel(shardIndexFile, StandardOpenOption.WRITE)) {\n+            outChan.truncate(randomInt(10));\n+        }\n+\n+        assertSnapShotState(snapShotName1);\n+\n+        execute(\"drop table t1\");\n+        execute(\"RESTORE SNAPSHOT \" +  fullSnapShotName1 + \" TABLE t1 with (wait_for_completion=true)\");\n+        ensureYellow();\n+\n+        execute(\"SELECT COUNT(*) FROM t1\");\n+        assertThat(response.rows()[0][0], is(numberOfDocs));\n+\n+        var numberOfAdditionalDocs = randomLongBetween(0, 10);\n+        for (int i = 0; i < numberOfAdditionalDocs; i++) {\n+            execute(\"INSERT INTO t1 (x) VALUES (?)\", new Object[]{randomInt()});\n+        }\n+        execute(\"REFRESH TABLE t1\");\n+\n+        var snapShotName2 = \"s2\";\n+        var fullSnapShotName2 = REPOSITORY_NAME + \".s2\";\n+\n+        execute(\"CREATE SNAPSHOT \" + fullSnapShotName2 + \" ALL WITH (wait_for_completion=true)\");\n+        ensureYellow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4faf786afe84f11817e3b38df8a9022388415581"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "committedDate": "2020-05-28T13:28:17Z", "message": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation\n\nBackport of https://github.com/elastic/elasticsearch/pull/41310"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4faf786afe84f11817e3b38df8a9022388415581", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/4faf786afe84f11817e3b38df8a9022388415581", "committedDate": "2020-05-28T09:32:27Z", "message": "Add integration test"}, "afterCommit": {"oid": "5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/5028f5cd7c0cf453443b09b7efcb5476c8df77cb", "committedDate": "2020-05-28T13:28:17Z", "message": "Fix Broken Index Shard Snapshot File Preventing Snapshot Creation\n\nBackport of https://github.com/elastic/elasticsearch/pull/41310"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17941fb4222163ad0009a77af47b03bd9af13028", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/17941fb4222163ad0009a77af47b03bd9af13028", "committedDate": "2020-05-28T14:02:18Z", "message": "Merge branch 'master' into mkleen/fix_broken_shard_snapshot"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3210, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}