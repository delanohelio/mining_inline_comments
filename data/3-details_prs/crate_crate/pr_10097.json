{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MzU4ODk1", "number": 10097, "title": "Limit line_numbers to 50 in the presence of errors when using  COPY FROM RETURN SUMMARY", "bodyText": "Issue #9890\nLimits the output of COPY FROM RETURN SUMMARY in the presence of errors to 50 line_numbers per error, to avoid crashing the Admin UI and crash.", "createdAt": "2020-06-18T09:51:24Z", "url": "https://github.com/crate/crate/pull/10097", "merged": true, "mergeCommit": {"oid": "c41a99336cb8c5a14e74f81d6c802211a59788a8"}, "closed": true, "closedAt": "2020-06-18T20:53:41Z", "author": {"login": "marregui"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcse0QngBqjM0NTgyMzkzODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsjPrSgBqjM0NTk2NTQzNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7803befcbf32935c2ac53ad7e7db55a0ac7e9f4b", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/7803befcbf32935c2ac53ad7e7db55a0ac7e9f4b", "committedDate": "2020-06-18T09:48:46Z", "message": "Add documentation"}, "afterCommit": {"oid": "4574473719ebcafea98c88eba144d268ca115aff", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/4574473719ebcafea98c88eba144d268ca115aff", "committedDate": "2020-06-18T13:52:41Z", "message": "Add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMTI4ODEw", "url": "https://github.com/crate/crate/pull/10097#pullrequestreview-433128810", "createdAt": "2020-06-18T09:59:45Z", "commit": {"oid": "7803befcbf32935c2ac53ad7e7db55a0ac7e9f4b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo1OTo0NlrOGloYYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDozMDo0M1rOGlyF5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMjA5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              display up to 50 line_numbers, as a larger value is really unnecessary.\n          \n          \n            \n              display up to 50 ``line_numbers`` to avoid buffer pressure at clients and to improve readability.", "url": "https://github.com/crate/crate/pull/10097#discussion_r442112099", "createdAt": "2020-06-18T09:59:46Z", "author": {"login": "seut"}, "path": "docs/appendices/release-notes/unreleased.rst", "diffHunk": "@@ -225,6 +225,9 @@ Performance improvements\n Fixes\n =====\n \n+- Limit the output of COPY FROM RETURN SUMMARY in the presence of errors to\n+  display up to 50 line_numbers, as a larger value is really unnecessary.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7803befcbf32935c2ac53ad7e7db55a0ac7e9f4b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExNDI2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |                                       | error occurred, limited to the first 50, for   |               |\n          \n          \n            \n            |                                       | readability.                                   |               |\n          \n          \n            \n            |                                       | error occurred. Limited to the first 50        |               |\n          \n          \n            \n            |                                       | errors, to avoid buffer pressure on clients.   |               |", "url": "https://github.com/crate/crate/pull/10097#discussion_r442114265", "createdAt": "2020-06-18T10:03:48Z", "author": {"login": "seut"}, "path": "docs/sql/statements/copy-from.rst", "diffHunk": "@@ -368,7 +368,8 @@ inserted records.\n | ``errors[ERROR_MSG]['count']``        | The number records failed with this error.     | ``BIGINT``    |\n +---------------------------------------+------------------------------------------------+---------------+\n | ``errors[ERROR_MSG]['line_numbers']`` | The line numbers of the source URI where the   | ``ARRAY``     |\n-|                                       | error occurred.                                |               |\n+|                                       | error occurred, limited to the first 50, for   |               |\n+|                                       | readability.                                   |               |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7803befcbf32935c2ac53ad7e7db55a0ac7e9f4b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI2Njk5MQ==", "bodyText": "Using assertThat is prefered over assertEquals as it returns nicer errors messages. Also the API has clearer definitions of which argument is expected  and which given.\nLooks like using it would also highlight current test failure in a better way ;-)", "url": "https://github.com/crate/crate/pull/10097#discussion_r442266991", "createdAt": "2020-06-18T14:25:19Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/integrationtests/CopyIntegrationTest.java", "diffHunk": "@@ -705,6 +705,42 @@ public void testCopyWithGeneratedPartitionColumnThatIsPartOfPrimaryKey() throws\n         assertThat(response.rowCount(), is(2L));\n     }\n \n+    @Test\n+    public void test_copy_from_return_summary_with_failed_rows_line_numers_limitted_to_50() throws Exception {\n+\n+        execute(\"create table tmp_t1 (v integer)\");\n+        Path tmpDir = newTempDir(LifecycleScope.TEST);\n+        Path target = Files.createDirectories(tmpDir.resolve(\"target\"));\n+        String fileName = \"uzulo.json\";\n+\n+        // two correct inserts\n+        tmpFileWithLines(Arrays.asList(\n+            \"{\\\"v\\\": 100}\",\n+            \"{\\\"v\\\": 200}\"\n+        ), fileName, target);\n+\n+        int numBrokenInserts = 60;\n+        String [] brokenInserts = new String[numBrokenInserts];\n+        for (int i=0; i < numBrokenInserts; i++) {\n+            brokenInserts[i] = String.format(\"{ \\\"v\\\": %d, \\\"bob\\\": 42\", i); // bob is unexpected\n+        }\n+        tmpFileWithLines(Arrays.asList(brokenInserts), fileName, target);\n+\n+        execute(\"copy tmp_t1 from ? return summary\", new Object[]{target.toUri().toString() + \"*\"});\n+\n+        assertThat(printedTable(response.rows()),\n+                   containsString(\"mapping set to strict, dynamic introduction of [bob] within [default] is not allowed\"));\n+\n+        assertEquals(response.rows()[1].length, 5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8adafd1268f734c2e76b596991ac923952d84f4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI3MDA5NQ==", "bodyText": "nitpick: the following assertion would already fail if it is missing.", "url": "https://github.com/crate/crate/pull/10097#discussion_r442270095", "createdAt": "2020-06-18T14:29:24Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/integrationtests/CopyIntegrationTest.java", "diffHunk": "@@ -705,6 +705,42 @@ public void testCopyWithGeneratedPartitionColumnThatIsPartOfPrimaryKey() throws\n         assertThat(response.rowCount(), is(2L));\n     }\n \n+    @Test\n+    public void test_copy_from_return_summary_with_failed_rows_line_numers_limitted_to_50() throws Exception {\n+\n+        execute(\"create table tmp_t1 (v integer)\");\n+        Path tmpDir = newTempDir(LifecycleScope.TEST);\n+        Path target = Files.createDirectories(tmpDir.resolve(\"target\"));\n+        String fileName = \"uzulo.json\";\n+\n+        // two correct inserts\n+        tmpFileWithLines(Arrays.asList(\n+            \"{\\\"v\\\": 100}\",\n+            \"{\\\"v\\\": 200}\"\n+        ), fileName, target);\n+\n+        int numBrokenInserts = 60;\n+        String [] brokenInserts = new String[numBrokenInserts];\n+        for (int i=0; i < numBrokenInserts; i++) {\n+            brokenInserts[i] = String.format(\"{ \\\"v\\\": %d, \\\"bob\\\": 42\", i); // bob is unexpected\n+        }\n+        tmpFileWithLines(Arrays.asList(brokenInserts), fileName, target);\n+\n+        execute(\"copy tmp_t1 from ? return summary\", new Object[]{target.toUri().toString() + \"*\"});\n+\n+        assertThat(printedTable(response.rows()),\n+                   containsString(\"mapping set to strict, dynamic introduction of [bob] within [default] is not allowed\"));\n+\n+        assertEquals(response.rows()[1].length, 5);\n+        for (Map<String, Object> mappingError: ((Map<String, Map<String, Object>>) response.rows()[1][4]).values()) {\n+            assertTrue(mappingError.containsKey(\"count\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8adafd1268f734c2e76b596991ac923952d84f4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI3MTIwNw==", "bodyText": "Same nitpick here, I think this is unnecessary.", "url": "https://github.com/crate/crate/pull/10097#discussion_r442271207", "createdAt": "2020-06-18T14:30:43Z", "author": {"login": "seut"}, "path": "server/src/test/java/io/crate/integrationtests/CopyIntegrationTest.java", "diffHunk": "@@ -705,6 +705,42 @@ public void testCopyWithGeneratedPartitionColumnThatIsPartOfPrimaryKey() throws\n         assertThat(response.rowCount(), is(2L));\n     }\n \n+    @Test\n+    public void test_copy_from_return_summary_with_failed_rows_line_numers_limitted_to_50() throws Exception {\n+\n+        execute(\"create table tmp_t1 (v integer)\");\n+        Path tmpDir = newTempDir(LifecycleScope.TEST);\n+        Path target = Files.createDirectories(tmpDir.resolve(\"target\"));\n+        String fileName = \"uzulo.json\";\n+\n+        // two correct inserts\n+        tmpFileWithLines(Arrays.asList(\n+            \"{\\\"v\\\": 100}\",\n+            \"{\\\"v\\\": 200}\"\n+        ), fileName, target);\n+\n+        int numBrokenInserts = 60;\n+        String [] brokenInserts = new String[numBrokenInserts];\n+        for (int i=0; i < numBrokenInserts; i++) {\n+            brokenInserts[i] = String.format(\"{ \\\"v\\\": %d, \\\"bob\\\": 42\", i); // bob is unexpected\n+        }\n+        tmpFileWithLines(Arrays.asList(brokenInserts), fileName, target);\n+\n+        execute(\"copy tmp_t1 from ? return summary\", new Object[]{target.toUri().toString() + \"*\"});\n+\n+        assertThat(printedTable(response.rows()),\n+                   containsString(\"mapping set to strict, dynamic introduction of [bob] within [default] is not allowed\"));\n+\n+        assertEquals(response.rows()[1].length, 5);\n+        for (Map<String, Object> mappingError: ((Map<String, Map<String, Object>>) response.rows()[1][4]).values()) {\n+            assertTrue(mappingError.containsKey(\"count\"));\n+            assertEquals(mappingError.get(\"count\"), (long) numBrokenInserts);\n+            assertTrue(mappingError.containsKey(\"line_numbers\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8adafd1268f734c2e76b596991ac923952d84f4"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzQ0OTY0", "url": "https://github.com/crate/crate/pull/10097#pullrequestreview-433344964", "createdAt": "2020-06-18T14:32:18Z", "commit": {"oid": "a8adafd1268f734c2e76b596991ac923952d84f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDozMjoxOFrOGlyKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDozMjoxOFrOGlyKtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI3MjQzNw==", "bodyText": "This is kind a breaking change and not a fix or do we plan to backport it?", "url": "https://github.com/crate/crate/pull/10097#discussion_r442272437", "createdAt": "2020-06-18T14:32:18Z", "author": {"login": "seut"}, "path": "docs/appendices/release-notes/unreleased.rst", "diffHunk": "@@ -225,6 +225,9 @@ Performance improvements\n Fixes\n =====\n \n+- Limit the output of COPY FROM RETURN SUMMARY in the presence of errors to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8adafd1268f734c2e76b596991ac923952d84f4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDgzNjIx", "url": "https://github.com/crate/crate/pull/10097#pullrequestreview-433483621", "createdAt": "2020-06-18T17:08:00Z", "commit": {"oid": "24b8e1b54e60a0fde0661e7f0fcb6a547b223f50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c41a99336cb8c5a14e74f81d6c802211a59788a8", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/c41a99336cb8c5a14e74f81d6c802211a59788a8", "committedDate": "2020-06-18T19:01:17Z", "message": "Limit the number of returned 'line_numbers' to 50 (COPY FROM RETURN SUMMARY)\n\nHaving thousands of line numbers is not helpful and puts a lot of pressure\non the client."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24b8e1b54e60a0fde0661e7f0fcb6a547b223f50", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/24b8e1b54e60a0fde0661e7f0fcb6a547b223f50", "committedDate": "2020-06-18T16:02:40Z", "message": "Explicitly expect 50 line_numbers in the test"}, "afterCommit": {"oid": "c41a99336cb8c5a14e74f81d6c802211a59788a8", "author": {"user": {"login": "marregui", "name": "marregui"}}, "url": "https://github.com/crate/crate/commit/c41a99336cb8c5a14e74f81d6c802211a59788a8", "committedDate": "2020-06-18T19:01:17Z", "message": "Limit the number of returned 'line_numbers' to 50 (COPY FROM RETURN SUMMARY)\n\nHaving thousands of line numbers is not helpful and puts a lot of pressure\non the client."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3279, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}