{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzYyNjA4", "number": 9835, "title": "Use BlockBasedRamAccounting for projections", "bodyText": "Summary of the changes / Why this improves CrateDB\nUsing ConcurrentRamAccounting directly has a large performance overhead.\nSee #9830\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-03-31T14:09:44Z", "url": "https://github.com/crate/crate/pull/9835", "merged": true, "mergeCommit": {"oid": "8be09e603ef5e4341e389f077b8f41d561acfb78"}, "closed": true, "closedAt": "2020-03-31T16:06:15Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTEYoXABqjMxODM3MjYwMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTE8I0gBqjMxODM5MDg4NDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f9db4028e6705bcce2339a1f761ff94f2c9cc2e", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/2f9db4028e6705bcce2339a1f761ff94f2c9cc2e", "committedDate": "2020-03-31T14:09:13Z", "message": "Use BlockBasedRamAccounting for projections\n\nUsing `ConcurrentRamAccounting` directly has a large performance\noverhead. See https://github.com/crate/crate/pull/9830"}, "afterCommit": {"oid": "ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "committedDate": "2020-03-31T14:57:02Z", "message": "Move ramAccounting/memory release closer to acquire"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0ODI0NDQ5", "url": "https://github.com/crate/crate/pull/9835#pullrequestreview-384824449", "createdAt": "2020-03-31T15:02:04Z", "commit": {"oid": "61261a93a27733a9f914068ce8610f9b7321d0b3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowMjowNFrOF-aNYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowMjowNFrOF-aNYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4NTQ0MQ==", "bodyText": "I think this is worth a comment something like \"A non-thread-safe ram accounting instance may be used here, so we must ensure thread-safety.\"", "url": "https://github.com/crate/crate/pull/9835#discussion_r400985441", "createdAt": "2020-03-31T15:02:04Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/execution/engine/fetch/TransportFetchOperation.java", "diffHunk": "@@ -84,6 +84,13 @@ static RamAccounting ramAccountingForIncomingResponse(RamAccounting ramAccountin\n             return RamAccounting.NO_ACCOUNTING;\n         }\n         // Each response may run in a different thread and thus should use its own ram accounting instance\n-        return new BlockBasedRamAccounting(ramAccounting::addBytes, MAX_BLOCK_SIZE_IN_BYTES);\n+        return new BlockBasedRamAccounting(\n+            usedBytes -> {\n+                synchronized (ramAccounting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61261a93a27733a9f914068ce8610f9b7321d0b3"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ae8f5fb673b31e058337cc8ea18f5e11dd0eb3d7", "committedDate": "2020-03-31T14:57:02Z", "message": "Move ramAccounting/memory release closer to acquire"}, "afterCommit": {"oid": "5282041367c4559531d47572ea8b07a9a28eb8a2", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/5282041367c4559531d47572ea8b07a9a28eb8a2", "committedDate": "2020-03-31T15:11:25Z", "message": "Move ramAccounting/memory release closer to acquire"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d81f3215265c00a883c13c8fedd21f65e80a34b9", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/d81f3215265c00a883c13c8fedd21f65e80a34b9", "committedDate": "2020-03-31T15:35:49Z", "message": "Split calculateBlockSizeInBytes for the non-sharded case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d84bf9092364bc4a3db5e387a28c81e1a03b6a", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/d6d84bf9092364bc4a3db5e387a28c81e1a03b6a", "committedDate": "2020-03-31T15:35:49Z", "message": "Use BlockBasedRamAccounting for projections\n\nUsing `ConcurrentRamAccounting` directly has a large performance\noverhead. See https://github.com/crate/crate/pull/9830"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c222ecdeb8336e0312785f6c3eb39b0645cddf22", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/c222ecdeb8336e0312785f6c3eb39b0645cddf22", "committedDate": "2020-03-31T15:35:49Z", "message": "Move ramAccounting/memory release closer to acquire"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5282041367c4559531d47572ea8b07a9a28eb8a2", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/5282041367c4559531d47572ea8b07a9a28eb8a2", "committedDate": "2020-03-31T15:11:25Z", "message": "Move ramAccounting/memory release closer to acquire"}, "afterCommit": {"oid": "c222ecdeb8336e0312785f6c3eb39b0645cddf22", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/c222ecdeb8336e0312785f6c3eb39b0645cddf22", "committedDate": "2020-03-31T15:35:49Z", "message": "Move ramAccounting/memory release closer to acquire"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3476, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}