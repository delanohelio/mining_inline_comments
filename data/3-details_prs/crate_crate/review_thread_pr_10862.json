{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTY3ODg3", "number": 10862, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyMjowMlrOFGJBJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjowMjowNFrOFGx_VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTgzNTI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/execution/engine/fetch/FetchCollector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyMjowMlrOIHAezQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyMjowMlrOIHAezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIxODgyOQ==", "bodyText": "I experimented with smaller values as size theshold since the amount of doc ids can be less due to parallel fetch execution in comparison to elasticsearch. However,  the performance goes worse with smaller batches.", "url": "https://github.com/crate/crate/pull/10862#discussion_r544218829", "createdAt": "2020-12-16T11:22:02Z", "author": {"login": "mkleen"}, "path": "server/src/main/java/io/crate/execution/engine/fetch/FetchCollector.java", "diffHunk": "@@ -67,27 +71,59 @@\n \n     }\n \n-    private void setNextDocId(LeafReaderContext readerContext, int doc) throws IOException {\n+    private void setNextDocId(ReaderContext readerContext, int doc) throws IOException {\n         for (LuceneCollectorExpression<?> e : collectorExpressions) {\n             e.setNextReader(readerContext);\n             e.setNextDocId(doc);\n         }\n     }\n \n     public StreamBucket collect(IntContainer docIds) {\n+        if (docIds.size() >= 10) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de913fb3cf47b165ac86d761d2dbfb5de988b23"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjQ5NTk0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/crate/execution/engine/fetch/ReaderContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTo1MjoxM1rOIH8NEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNTo1MjoxM1rOIH8NEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5NzMzMA==", "bodyText": "The null check on every document could be avoided by defining a BiConsumer on the ctor.", "url": "https://github.com/crate/crate/pull/10862#discussion_r545197330", "createdAt": "2020-12-17T15:52:13Z", "author": {"login": "seut"}, "path": "server/src/main/java/io/crate/execution/engine/fetch/ReaderContext.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.execution.engine.fetch;\n+\n+import org.apache.lucene.codecs.StoredFieldsReader;\n+import org.apache.lucene.index.LeafReader;\n+import org.apache.lucene.index.LeafReaderContext;\n+import org.apache.lucene.index.StoredFieldVisitor;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+\n+public class ReaderContext {\n+\n+    private final LeafReaderContext leafReaderContext;\n+    @Nullable\n+    private final StoredFieldsReader storedFieldsReader;\n+\n+    public ReaderContext(LeafReaderContext leafReaderContext, @Nullable StoredFieldsReader storedFieldsReader) {\n+        this.leafReaderContext = leafReaderContext;\n+        this.storedFieldsReader = storedFieldsReader;\n+    }\n+\n+    public ReaderContext(LeafReaderContext leafReaderContext) {\n+        this(leafReaderContext, null);\n+    }\n+\n+    public void visitDocument(int docId, StoredFieldVisitor visitor) throws IOException {\n+        if (storedFieldsReader == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de913fb3cf47b165ac86d761d2dbfb5de988b23"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjU0ODA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjowMjowNFrOIH8r7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNjowMjowNFrOIH8r7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIwNTIyOQ==", "bodyText": "I wonder why this change is needed as the related ES commit does not change anything here?", "url": "https://github.com/crate/crate/pull/10862#discussion_r545205229", "createdAt": "2020-12-17T16:02:04Z", "author": {"login": "seut"}, "path": "server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java", "diffHunk": "@@ -50,7 +52,7 @@ public ShardId shardId() {\n     }\n \n     @Override\n-    public CacheHelper getCoreCacheHelper() {\n+    public IndexReader.CacheHelper getCoreCacheHelper() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de913fb3cf47b165ac86d761d2dbfb5de988b23"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 875, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}