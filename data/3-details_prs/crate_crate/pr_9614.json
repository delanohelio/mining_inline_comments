{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NTA4NjI0", "number": 9614, "title": "Merge InsertFromSubQuery into Insert", "bodyText": "Summary of the changes / Why this improves CrateDB\nThis merges InsertFromSubQuery into Insert and related classes such as InsertFromSubQueryAnalyzedStatement into AnalyzedInsertStatement as well as related functions using these types.\nChecklist\n\n User relevant changes are recorded in CHANGES.txt\n Touched code is covered by tests\n Documentation has been updated if necessary\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-01-31T10:17:29Z", "url": "https://github.com/crate/crate/pull/9614", "merged": true, "mergeCommit": {"oid": "9145c10ddf03336226132e9f22e160579004dc8d"}, "closed": true, "closedAt": "2020-01-31T15:01:36Z", "author": {"login": "mkleen"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_sdc6gFqTM1MTQxMDIxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_vzcOgBqjI5OTcyMTgwNDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDEwMjEx", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351410211", "createdAt": "2020-01-31T10:20:09Z", "commit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMDowOVrOFkHAQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMDowOVrOFkHAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNzgwOA==", "bodyText": "I think we should not rename InsertFromSubQueryPlanner. Otherwise, we end up with InsertPlanner and InsertFromValues plan.", "url": "https://github.com/crate/crate/pull/9614#discussion_r373407808", "createdAt": "2020-01-31T10:20:09Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/planner/consumer/InsertPlanner.java", "diffHunk": "@@ -45,12 +45,12 @@\n import java.util.List;\n \n \n-public final class InsertFromSubQueryPlanner {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDExMzcy", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351411372", "createdAt": "2020-01-31T10:22:13Z", "commit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMjoxM1rOFkHDnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMjoxM1rOFkHDnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwODY2OQ==", "bodyText": "Not sure about this renaming as well", "url": "https://github.com/crate/crate/pull/9614#discussion_r373408669", "createdAt": "2020-01-31T10:22:13Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/planner/operators/LogicalPlanner.java", "diffHunk": "@@ -143,7 +143,7 @@ public LogicalPlanner(Functions functions, TableStats tableStats, Supplier<Versi\n             minNodeVersionInCluster\n         );\n         this.writeOptimizer = new Optimizer(\n-            List.of(new RewriteInsertFromSubQueryToInsertFromValues()),\n+            List.of(new RewriteInsertToInsertFromValues()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDEyMDg3", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351412087", "createdAt": "2020-01-31T10:23:30Z", "commit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzozMFrOFkHF4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzozMFrOFkHF4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwOTI1MQ==", "bodyText": "Is the DuplicateKeyContext left out on purpose from equals/hashcode/toString ?", "url": "https://github.com/crate/crate/pull/9614#discussion_r373409251", "createdAt": "2020-01-31T10:23:30Z", "author": {"login": "mkleen"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/Insert.java", "diffHunk": "@@ -46,13 +49,17 @@ public Table table() {\n         return columns;\n     }\n \n-    public DuplicateKeyContext<T> getDuplicateKeyContext() {\n+    public Query subQuery() {\n+        return subQuery;\n+    }\n+\n+    public DuplicateKeyContext<T> duplicateKeyContext() {\n         return duplicateKeyContext;\n     }\n \n     @Override\n     public int hashCode() {\n-        return Objects.hashCode(table, columns);\n+        return Objects.hashCode(table, columns, subQuery);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDEyMTg1", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351412185", "createdAt": "2020-01-31T10:23:41Z", "commit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzo0MVrOFkHGKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyMzo0MVrOFkHGKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwOTMyMg==", "bodyText": "in the test names we still want to keep the knowledge of what we are testing. imho, testInsertFromSubQueryNonDistributedGroupBy was alright. Also, it is related to all other renamed tests.", "url": "https://github.com/crate/crate/pull/9614#discussion_r373409322", "createdAt": "2020-01-31T10:23:41Z", "author": {"login": "kovrus"}, "path": "sql/src/test/java/io/crate/planner/InsertPlannerTest.java", "diffHunk": "@@ -94,7 +94,7 @@ public void prepare() throws IOException {\n     }\n \n     @Test\n-    public void testInsertFromSubQueryNonDistributedGroupBy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3ac65304b4d9366ea64eca00937f10206ddc847"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2558ff754aa8292ec54ed11cfd78f806080af75", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/b2558ff754aa8292ec54ed11cfd78f806080af75", "committedDate": "2020-01-31T10:31:33Z", "message": "Revert all test method names which are related to real subqueries"}, "afterCommit": {"oid": "ed3f29b6fc92ac6b0ff6013f32488b53e6d8d18c", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/ed3f29b6fc92ac6b0ff6013f32488b53e6d8d18c", "committedDate": "2020-01-31T10:44:28Z", "message": "Make subquery nullable and add checks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed3f29b6fc92ac6b0ff6013f32488b53e6d8d18c", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/ed3f29b6fc92ac6b0ff6013f32488b53e6d8d18c", "committedDate": "2020-01-31T10:44:28Z", "message": "Make subquery nullable and add checks"}, "afterCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3e9c26395fa59208adeba5610c971eac879667d4", "committedDate": "2020-01-31T10:52:30Z", "message": "Make subquery nullable and add checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDI4MTY0", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351428164", "createdAt": "2020-01-31T10:53:17Z", "commit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo1MzoxN1rOFkH3GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo1MzoxN1rOFkH3GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyMTg0OA==", "bodyText": "As far as I understand subquery can be null, right ?", "url": "https://github.com/crate/crate/pull/9614#discussion_r373421848", "createdAt": "2020-01-31T10:53:17Z", "author": {"login": "mkleen"}, "path": "sql-parser/src/main/java/io/crate/sql/parser/AstBuilder.java", "diffHunk": "@@ -560,9 +560,10 @@ public Node visitInsert(SqlBaseParser.InsertContext context) {\n             }\n             throw e;\n         }\n-        return new Insert(\n+        Node subquery = visit(context.insertSource().query());\n+        return new Insert<>(\n             table,\n-            (Query) visit(context.insertSource().query()),\n+            subquery == null ? null : (Query) subquery,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDI4NTA1", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351428505", "createdAt": "2020-01-31T10:53:55Z", "commit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo1Mzo1NVrOFkH4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo1Mzo1NVrOFkH4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyMjE0MQ==", "bodyText": "As far as I understand subquery can be null, right ?", "url": "https://github.com/crate/crate/pull/9614#discussion_r373422141", "createdAt": "2020-01-31T10:53:55Z", "author": {"login": "mkleen"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/Insert.java", "diffHunk": "@@ -32,9 +33,10 @@\n     private final Table<T> table;\n     private final DuplicateKeyContext<T> duplicateKeyContext;\n     private final List<String> columns;\n+    @Nullable\n     private final Query subQuery;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDMzMzc4", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351433378", "createdAt": "2020-01-31T11:03:23Z", "commit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMTowMzoyM1rOFkIHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMTowNDo0MlrOFkIJaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyNTk5OQ==", "bodyText": "null would mean that the insert source is missing https://github.com/crate/crate/blob/master/sql-parser/src/main/antlr/SqlBase.g4#L441-L442 . I don't think that can be a case.\nAlso, do we want to keep calling it subquery? insertSource().query() can be either querySpec (subqquery) or values, therefore I am not sure that it is suitable name.", "url": "https://github.com/crate/crate/pull/9614#discussion_r373425999", "createdAt": "2020-01-31T11:03:23Z", "author": {"login": "kovrus"}, "path": "sql-parser/src/main/java/io/crate/sql/parser/AstBuilder.java", "diffHunk": "@@ -560,9 +560,10 @@ public Node visitInsert(SqlBaseParser.InsertContext context) {\n             }\n             throw e;\n         }\n-        return new Insert(\n+        Node subquery = visit(context.insertSource().query());\n+        return new Insert<>(\n             table,\n-            (Query) visit(context.insertSource().query()),\n+            subquery == null ? null : (Query) subquery,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyMTg0OA=="}, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyNjMxOQ==", "bodyText": "there always should be an insert source.", "url": "https://github.com/crate/crate/pull/9614#discussion_r373426319", "createdAt": "2020-01-31T11:04:13Z", "author": {"login": "kovrus"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/DefaultTraversalVisitor.java", "diffHunk": "@@ -325,9 +325,11 @@ public R visitAlterTable(AlterTable<?> node, C context) {\n     }\n \n     @Override\n-    public R visitInsertFromSubquery(InsertFromSubquery<?> node, C context) {\n+    public R visitInsert(Insert<?> node, C context) {\n         node.table().accept(this, context);\n-        node.subQuery().accept(this, context);\n+        if (node.subQuery() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyNjUzNg==", "bodyText": "see the comment above", "url": "https://github.com/crate/crate/pull/9614#discussion_r373426536", "createdAt": "2020-01-31T11:04:42Z", "author": {"login": "kovrus"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/Insert.java", "diffHunk": "@@ -32,9 +33,10 @@\n     private final Table<T> table;\n     private final DuplicateKeyContext<T> duplicateKeyContext;\n     private final List<String> columns;\n+    @Nullable\n     private final Query subQuery;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyMjE0MQ=="}, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDM1OTcw", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351435970", "createdAt": "2020-01-31T11:08:29Z", "commit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMTowODoyOVrOFkIPgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMTowODoyOVrOFkIPgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQyODA5Nw==", "bodyText": "we can keep the old test names here and for the tests bellow", "url": "https://github.com/crate/crate/pull/9614#discussion_r373428097", "createdAt": "2020-01-31T11:08:29Z", "author": {"login": "kovrus"}, "path": "sql/src/test/java/io/crate/integrationtests/InsertIntoIntegrationTest.java", "diffHunk": "@@ -1239,7 +1239,7 @@ public void testInsertGeneratedPrimaryKeyValueGiven() throws Exception {\n     }\n \n     @Test\n-    public void testInsertFromSubQueryMissingPrimaryKeyValues() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e9c26395fa59208adeba5610c971eac879667d4", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/3e9c26395fa59208adeba5610c971eac879667d4", "committedDate": "2020-01-31T10:52:30Z", "message": "Make subquery nullable and add checks"}, "afterCommit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d904f02b2cc2fd7e0b53de593731a42012d90ee1", "committedDate": "2020-01-31T11:31:23Z", "message": "Revert renaming of planner and operator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDg2NzU2", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351486756", "createdAt": "2020-01-31T12:56:44Z", "commit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMjo1Njo0NVrOFkKkog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMjo1Njo0NVrOFkKkog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NjI3NA==", "bodyText": "maybe insertSource, just query or smth else? Because it can a bit confusing when you have values in there, but the variable is called subQuery.\nOtherwise, lgtm", "url": "https://github.com/crate/crate/pull/9614#discussion_r373466274", "createdAt": "2020-01-31T12:56:45Z", "author": {"login": "kovrus"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/Insert.java", "diffHunk": "@@ -21,20 +21,23 @@\n \n package io.crate.sql.tree;\n \n+import com.google.common.base.MoreObjects;\n import com.google.common.base.Objects;\n \n import java.util.Collections;\n import java.util.List;\n \n-public abstract class Insert<T> extends Statement {\n+public final class Insert<T> extends Statement {\n \n-    protected final Table<T> table;\n+    private final Table<T> table;\n     private final DuplicateKeyContext<T> duplicateKeyContext;\n-    protected final List<String> columns;\n+    private final List<String> columns;\n+    private final Query subQuery;\n \n-    Insert(Table<T> table, List<String> columns, DuplicateKeyContext<T> duplicateKeyContext) {\n+    public Insert(Table<T> table, Query subQuery, List<String> columns, DuplicateKeyContext<T> duplicateKeyContext) {\n         this.table = table;\n         this.columns = columns;\n+        this.subQuery = subQuery;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDg4ODIx", "url": "https://github.com/crate/crate/pull/9614#pullrequestreview-351488821", "createdAt": "2020-01-31T13:00:42Z", "commit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzowMDo0MlrOFkKqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzowMDo0MlrOFkKqSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2NzcyMQ==", "bodyText": "the null check is not needed", "url": "https://github.com/crate/crate/pull/9614#discussion_r373467721", "createdAt": "2020-01-31T13:00:42Z", "author": {"login": "kovrus"}, "path": "sql-parser/src/main/java/io/crate/sql/tree/Insert.java", "diffHunk": "@@ -66,10 +73,23 @@ public boolean equals(Object o) {\n             return false;\n         if (table != null ? !table.equals(insert.table) : insert.table != null)\n             return false;\n+        if (subQuery != null ? !subQuery.equals(insert.subQuery) : insert.subQuery != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d904f02b2cc2fd7e0b53de593731a42012d90ee1", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/d904f02b2cc2fd7e0b53de593731a42012d90ee1", "committedDate": "2020-01-31T11:31:23Z", "message": "Revert renaming of planner and operator"}, "afterCommit": {"oid": "7f7606b3fb3ff8450fa5bc8652578faa390b8c82", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7f7606b3fb3ff8450fa5bc8652578faa390b8c82", "committedDate": "2020-01-31T13:35:47Z", "message": "Merge InsertFromSubQuery into Insert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f7606b3fb3ff8450fa5bc8652578faa390b8c82", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7f7606b3fb3ff8450fa5bc8652578faa390b8c82", "committedDate": "2020-01-31T13:35:47Z", "message": "Merge InsertFromSubQuery into Insert"}, "afterCommit": {"oid": "7859f090d7dd384337913d937ac6a202991ca743", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7859f090d7dd384337913d937ac6a202991ca743", "committedDate": "2020-01-31T13:36:54Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7859f090d7dd384337913d937ac6a202991ca743", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/7859f090d7dd384337913d937ac6a202991ca743", "committedDate": "2020-01-31T13:36:54Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}, "afterCommit": {"oid": "0d539509d7ede9628f58ef19f5f627a456ad8c0e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/0d539509d7ede9628f58ef19f5f627a456ad8c0e", "committedDate": "2020-01-31T13:47:39Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd3101eb7fb2c10a4a39b1a57283053caae30d9b", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/bd3101eb7fb2c10a4a39b1a57283053caae30d9b", "committedDate": "2020-01-31T14:13:37Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d539509d7ede9628f58ef19f5f627a456ad8c0e", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/0d539509d7ede9628f58ef19f5f627a456ad8c0e", "committedDate": "2020-01-31T13:47:39Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}, "afterCommit": {"oid": "bd3101eb7fb2c10a4a39b1a57283053caae30d9b", "author": {"user": {"login": "mkleen", "name": "Michael Kleen"}}, "url": "https://github.com/crate/crate/commit/bd3101eb7fb2c10a4a39b1a57283053caae30d9b", "committedDate": "2020-01-31T14:13:37Z", "message": "Merge InsertFromSubQuery into Insert\n\nThis merges InsertFromSubQuery into Insert and related functions\nusing these types."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3804, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}