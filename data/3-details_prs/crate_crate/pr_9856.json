{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDQ3MDYz", "number": 9856, "title": "Fix OFFSET application for UNION with ORDER BY", "bodyText": "Summary of the changes / Why this improves CrateDB\nThe logical plan was correct, but the offset of the Limit operator was\npassed down too far.\nLimit[100;1]                          // Due to the offset application below, OFFSET 2 was already applied *before* the LIMIT operator\n  \u2514 Union[id, num]                    // passed down (limit + offset) as limit BUT also offset (1)\n    \u251c OrderBy[max(num) AS num ASC]    // Resulted in a OrderedTopN with limit 101, offset 1\n    \u2502  \u2514 Eval[id, max(num) AS num]\n    \u2502    \u2514 GroupHashAggregate[id | max(num)]\n    \u2502      \u2514 Rename[id, num] AS t\n    \u2502        \u2514 TableFunction[unnest | [col1, col2] | true]\n    \u2514 OrderBy[max(num) AS num ASC]    // Same as above\n      \u2514 Eval[id, max(num) AS num]\n        \u2514 GroupHashAggregate[id | max(num)]\n          \u2514 Rename[id, num] AS t\n            \u2514 TableFunction[unnest | [col1, col2] | true]\n\nFixes #9854\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-04-09T14:10:53Z", "url": "https://github.com/crate/crate/pull/9856", "merged": true, "mergeCommit": {"oid": "765571dbd38578698d44798959c9193f4050321c"}, "closed": true, "closedAt": "2020-04-09T19:45:53Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV9J_mgFqTM5MDgzMTI1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWBZO-gBqjMyMTk2MTA3MjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODMxMjU0", "url": "https://github.com/crate/crate/pull/9856#pullrequestreview-390831254", "createdAt": "2020-04-09T14:13:37Z", "commit": {"oid": "17f2513d1173b8c98d040278f56f502cf45e6ac7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDoxMzozN1rOGDanGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDoxMzozN1rOGDanGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNDkwNQ==", "bodyText": "This removed the resultDescription.orderBy information, which is required so that further merges on top of the union are ordered correctly.\nThe UnionExecutionPlan carries on the limit + offset, so that later operators which force a merge apply it correctly.", "url": "https://github.com/crate/crate/pull/9856#discussion_r406234905", "createdAt": "2020-04-09T14:13:37Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/planner/operators/Union.java", "diffHunk": "@@ -195,21 +191,4 @@ public long estimatedRowSize() {\n     public <C, R> R accept(LogicalPlanVisitor<C, R> visitor, C context) {\n         return visitor.visitUnion(this, context);\n     }\n-\n-    /**\n-     * Wraps the plan inside a Merge plan if limit or offset need to be applied.\n-     */\n-    private static ExecutionPlan addMergeIfNeeded(ExecutionPlan plan, PlannerContext plannerContext) {\n-        ResultDescription resultDescription = plan.resultDescription();\n-        if (resultDescription.hasRemainingLimitOrOffset()) {\n-            // Do a merge because we have to apply a limit/offset projection\n-            //\n-            // Note: Currently, this is performed on the handler node. It would be possible to\n-            // do this on another involved node instead but we don't do that for now because\n-            // the Merge of the union itself is always performed on the handler. So the\n-            // performance gain would be small.\n-            return Merge.ensureOnHandler(plan, plannerContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f2513d1173b8c98d040278f56f502cf45e6ac7"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODM5Njgw", "url": "https://github.com/crate/crate/pull/9856#pullrequestreview-390839680", "createdAt": "2020-04-09T14:23:10Z", "commit": {"oid": "17f2513d1173b8c98d040278f56f502cf45e6ac7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db12ecd9598bfc98d3b95e1ef0275910b3d07d62", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/db12ecd9598bfc98d3b95e1ef0275910b3d07d62", "committedDate": "2020-04-09T19:09:44Z", "message": "Fix OFFSET application for UNION with ORDER BY\n\nThe logical plan was correct, but the offset of the Limit operator was\npassed down too far.\n\n    Limit[100;1]                          // Due to the offset application below, OFFSET 2 was already applied *before* the LIMIT operator\n      \u2514 Union[id, num]                    // passed down (limit + offset) as limit BUT also offset (1)\n        \u251c OrderBy[max(num) AS num ASC]    // Resulted in a OrderedTopN with limit 101, offset 1\n        \u2502  \u2514 Eval[id, max(num) AS num]\n        \u2502    \u2514 GroupHashAggregate[id | max(num)]\n        \u2502      \u2514 Rename[id, num] AS t\n        \u2502        \u2514 TableFunction[unnest | [col1, col2] | true]\n        \u2514 OrderBy[max(num) AS num ASC]    // Same as above\n          \u2514 Eval[id, max(num) AS num]\n            \u2514 GroupHashAggregate[id | max(num)]\n              \u2514 Rename[id, num] AS t\n                \u2514 TableFunction[unnest | [col1, col2] | true]"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "744e0625a35ae42396dd23272efcbab5b19baaf3", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/744e0625a35ae42396dd23272efcbab5b19baaf3", "committedDate": "2020-04-09T18:33:41Z", "message": "fixup! Fix OFFSET application for UNION with ORDER BY"}, "afterCommit": {"oid": "db12ecd9598bfc98d3b95e1ef0275910b3d07d62", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/db12ecd9598bfc98d3b95e1ef0275910b3d07d62", "committedDate": "2020-04-09T19:09:44Z", "message": "Fix OFFSET application for UNION with ORDER BY\n\nThe logical plan was correct, but the offset of the Limit operator was\npassed down too far.\n\n    Limit[100;1]                          // Due to the offset application below, OFFSET 2 was already applied *before* the LIMIT operator\n      \u2514 Union[id, num]                    // passed down (limit + offset) as limit BUT also offset (1)\n        \u251c OrderBy[max(num) AS num ASC]    // Resulted in a OrderedTopN with limit 101, offset 1\n        \u2502  \u2514 Eval[id, max(num) AS num]\n        \u2502    \u2514 GroupHashAggregate[id | max(num)]\n        \u2502      \u2514 Rename[id, num] AS t\n        \u2502        \u2514 TableFunction[unnest | [col1, col2] | true]\n        \u2514 OrderBy[max(num) AS num ASC]    // Same as above\n          \u2514 Eval[id, max(num) AS num]\n            \u2514 GroupHashAggregate[id | max(num)]\n              \u2514 Rename[id, num] AS t\n                \u2514 TableFunction[unnest | [col1, col2] | true]"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3521, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}