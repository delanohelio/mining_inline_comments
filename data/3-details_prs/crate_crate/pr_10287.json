{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3ODUwOTQ4", "number": 10287, "title": "Backport more engine changes from ES", "bodyText": "Summary of the changes / Why this improves CrateDB\n\nelastic/elasticsearch@fd4eb96\nelastic/elasticsearch@399d53e\n\nChecklist\n\n Added an entry in CHANGES.txt for user facing changes\n Updated documentation & sql_features table for user facing changes\n Touched code is covered by tests\n CLA is signed\n This does not contain breaking changes, or if it does:\n\nIt is released within a major release\nIt is recorded in CHANGES.txt\nIt was marked as deprecated in an earlier release if possible\nYou've thought about the consequences and other components are adapted\n(E.g. AdminUI)", "createdAt": "2020-07-28T14:32:35Z", "url": "https://github.com/crate/crate/pull/10287", "merged": true, "mergeCommit": {"oid": "e7695886044540030b1a50f82f33a52d99c9b1be"}, "closed": true, "closedAt": "2020-07-29T08:45:58Z", "author": {"login": "mfussenegger"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5XVFsgH2gAyNDU3ODUwOTQ4OmFjYWM2NjY4NmU1NWM0ODkxNmZmOThkNTcxNTJlNGIwOGI0MTkwMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5m93gAFqTQ1NzMxNTY0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "acac66686e55c48916ff98d57152e4b08b41902b", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/acac66686e55c48916ff98d57152e4b08b41902b", "committedDate": "2020-07-28T14:30:37Z", "message": "bp: Refactor IndexSearcherWrapper to disallow the wrapping of IndexSearcher\n\nhttps://github.com/elastic/elasticsearch/commit/fd4eb96d1c2ee7091d99b5a5069673de45833801"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/12a88093ab5db9f5953d62282af55a5e33db59fb", "committedDate": "2020-07-29T08:00:37Z", "message": "bp: Refactor index engines to manage readers instead of searchers\n\nhttps://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee534d0eefd2f4234149b84b43dbe751f65cf519", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/ee534d0eefd2f4234149b84b43dbe751f65cf519", "committedDate": "2020-07-29T07:54:24Z", "message": "bp: Refactor index engines to manage readers instead of searchers\n\nhttps://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972"}, "afterCommit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb", "author": {"user": {"login": "mfussenegger", "name": "Mathias Fu\u00dfenegger"}}, "url": "https://github.com/crate/crate/commit/12a88093ab5db9f5953d62282af55a5e33db59fb", "committedDate": "2020-07-29T08:00:37Z", "message": "bp: Refactor index engines to manage readers instead of searchers\n\nhttps://github.com/elastic/elasticsearch/commit/399d53e5c03ae4157d9ba107d01fbecfed758972"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Mjk1NDU2", "url": "https://github.com/crate/crate/pull/10287#pullrequestreview-457295456", "createdAt": "2020-07-29T08:17:22Z", "commit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoxNzoyMlrOG4tr7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoxNzoyMlrOG4tr7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTk2Nw==", "bodyText": "The searchers are already ref-counted inside the engine. So it shouldn't be necessary to add another ref-counting layer on top.", "url": "https://github.com/crate/crate/pull/10287#discussion_r462121967", "createdAt": "2020-07-29T08:17:22Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/execution/jobs/SharedShardContext.java", "diffHunk": "@@ -22,46 +22,40 @@\n \n package io.crate.execution.jobs;\n \n-import org.apache.lucene.search.IndexSearcher;\n+import java.util.function.UnaryOperator;\n+\n+import javax.annotation.concurrent.NotThreadSafe;\n+\n import org.elasticsearch.index.IndexNotFoundException;\n import org.elasticsearch.index.IndexService;\n import org.elasticsearch.index.engine.Engine;\n import org.elasticsearch.index.shard.IndexShard;\n import org.elasticsearch.index.shard.ShardId;\n import org.elasticsearch.indices.IndicesService;\n \n-import javax.annotation.concurrent.NotThreadSafe;\n-import java.util.function.UnaryOperator;\n-\n @NotThreadSafe\n public class SharedShardContext {\n \n     private final IndicesService indicesService;\n     private final ShardId shardId;\n     private final int readerId;\n-    private final UnaryOperator<IndexSearcher> wrapSearcher;\n+    private final UnaryOperator<Engine.Searcher> wrapSearcher;\n \n-    private RefCountSearcher searcher;\n     private IndexService indexService;\n     private IndexShard indexShard;\n \n     SharedShardContext(IndicesService indicesService,\n                        ShardId shardId,\n                        int readerId,\n-                       UnaryOperator<IndexSearcher> wrapSearcher) {\n+                       UnaryOperator<Engine.Searcher> wrapSearcher) {\n         this.indicesService = indicesService;\n         this.shardId = shardId;\n         this.readerId = readerId;\n         this.wrapSearcher = wrapSearcher;\n     }\n \n     public Engine.Searcher acquireSearcher(String source) throws IndexNotFoundException {\n-        if (searcher == null) {\n-            Engine.Searcher searcher = indexShard().acquireSearcher(source);\n-            this.searcher = new RefCountSearcher(shardId, searcher, wrapSearcher.apply(searcher.searcher()));\n-        }\n-        searcher.inc();\n-        return searcher;\n+        return wrapSearcher.apply(indexShard().acquireSearcher(source));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzE0NDYy", "url": "https://github.com/crate/crate/pull/10287#pullrequestreview-457314462", "createdAt": "2020-07-29T08:42:05Z", "commit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzE1NjQy", "url": "https://github.com/crate/crate/pull/10287#pullrequestreview-457315642", "createdAt": "2020-07-29T08:43:44Z", "commit": {"oid": "12a88093ab5db9f5953d62282af55a5e33db59fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}