{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTI4MDAx", "number": 10835, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxOTo1OFrOE-s7Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozODowMFrOE_NiHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTgzMTgzOnYy", "diffSide": "RIGHT", "path": "docs/admin/monitoring.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxOTo1OFrOH7_59A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxOTo1OFrOH7_59A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3NTA2MA==", "bodyText": "I left recovering shards for now out on purpose as it would mix up shard routing state and shard state in the metrics. It also would require to access the shard instance because it cannot be retrieved from the clusterstate so this is  a more expensive call. I can add this if desired.", "url": "https://github.com/crate/crate/pull/10835#discussion_r532675060", "createdAt": "2020-11-30T15:19:58Z", "author": {"login": "mkleen"}, "path": "docs/admin/monitoring.rst", "diffHunk": "@@ -168,22 +168,78 @@ NodeStatus can be accessed using the JMX MBean object name\n NodeInfo MBean\n --------------\n \n-The ``NodeInfo`` JMX MBean exposes information about the current node;\n+The ``NodeInfo`` JMX MXBean exposes information about the current node;\n \n-NodeInfo can be accessed using the JMX MBean object name\n+NodeInfo can be accessed using the JMX MXBean object name\n ``io.crate.monitoring:type=NodeInfo`` and the following attributes:\n \n- - ``ClusterStateVersion``\n-\n-   Provides the version of the current applied cluster state\n-\n- - ``NodeId``\n-\n-   Provides the unique identifier of the node in the cluster\n-\n- - ``NodeName``\n-\n-   Provides the human friendly name of the node\n++-------------------------+---------------------------------------------------+\n+| Name                    | Description                                       |\n++=========================+===================================================+\n+| ``NodeId``              | Provides the unique identifier of the node in the |\n+|                         | cluster.                                          |\n++-------------------------+---------------------------------------------------+\n+| ``NodeName``            | Provides the human friendly name of the node.     |\n++-------------------------+---------------------------------------------------+\n+| ``ClusterStateVersion`` | Provides the version of the current applied       |\n+|                         | cluster state.                                    |\n++-------------------------+---------------------------------------------------+\n+| ``ShardStats``          | Statistics about the number of shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+| ``ShardInfo``           | Detailed information about the shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+\n+``ShardStats`` returns a `CompositeData`_ object containing statistics about\n+the number of shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Total``         | The number of shards located on the node.               |\n++-------------------+---------------------------------------------------------+\n+| ``Primaries``     | The number of primary shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Replicas``      | The number of replica shards located on the node.       |\n++-------------------+---------------------------------------------------------+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bba6ea4a8a1fd3fea9a4b84488bda8588192ab9a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjUyMzUzOnYy", "diffSide": "RIGHT", "path": "enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzo0NjowN1rOH8GgKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzo0NjowN1rOH8GgKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MzE0NA==", "bodyText": "shard.storeStats().getSizeInBytes() involve io (if data is not cached)\n\n  \n    \n      crate/server/src/main/java/org/elasticsearch/index/store/ByteSizeCachingDirectory.java\n    \n    \n         Line 118\n      in\n      3e7490b\n    \n    \n    \n    \n\n        \n          \n           long estimateSizeInBytes() throws IOException {", "url": "https://github.com/crate/crate/pull/10835#discussion_r532783144", "createdAt": "2020-11-30T17:46:07Z", "author": {"login": "mkleen"}, "path": "enterprise/jmx-monitoring/src/main/java/io/crate/beans/NodeInfo.java", "diffHunk": "@@ -18,35 +18,110 @@\n \n package io.crate.beans;\n \n-import org.elasticsearch.cluster.node.DiscoveryNode;\n+import io.crate.common.collections.Tuple;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.index.shard.IndexShardState;\n+import org.elasticsearch.index.shard.ShardId;\n+import org.elasticsearch.indices.IndicesService;\n \n-import java.util.function.LongSupplier;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n import java.util.function.Supplier;\n \n-public class NodeInfo implements NodeInfoMBean {\n+public class NodeInfo implements NodeInfoMXBean {\n \n     public static final String NAME = \"io.crate.monitoring:type=NodeInfo\";\n \n-    private final LongSupplier clusterStateVersion;\n-    private final Supplier<DiscoveryNode> localNode;\n+    private final Supplier<ClusterState> clusterState;\n+    private final Function<ShardId, Tuple<IndexShardState, Long>> shardStateAndSizeProvider;\n \n-    public NodeInfo(Supplier<DiscoveryNode> localNode, LongSupplier clusterStateVersion) {\n-        this.localNode = localNode;\n-        this.clusterStateVersion = clusterStateVersion;\n+    public NodeInfo(Supplier<ClusterState> clusterState,\n+                    Function<ShardId, Tuple<IndexShardState, Long>> shardStateAndSizeProvider) {\n+        this.clusterState = clusterState;\n+        this.shardStateAndSizeProvider = shardStateAndSizeProvider;\n     }\n \n     @Override\n     public String getNodeId() {\n-        return localNode.get().getId();\n+        return clusterState.get().nodes().getLocalNodeId();\n     }\n \n     @Override\n     public String getNodeName() {\n-        return localNode.get().getName();\n+        return clusterState.get().nodes().getLocalNode().getName();\n     }\n \n     @Override\n     public long getClusterStateVersion() {\n-        return clusterStateVersion.getAsLong();\n+        return clusterState.get().version();\n+    }\n+\n+    public ShardStats getShardStats() {\n+        var total = 0;\n+        var replicas = 0;\n+        var unassigned = 0;\n+        var primaries = 0;\n+        var cs = this.clusterState.get();\n+        var localNodeId = cs.nodes().getLocalNodeId();\n+        var isMasterNode = cs.nodes().isLocalNodeElectedMaster();\n+        var routingTable = cs.getRoutingTable();\n+        if (routingTable != null) {\n+            for (var shardRouting : routingTable.allShards()) {\n+                if (localNodeId.equals(shardRouting.currentNodeId())) {\n+                    total++;\n+                    if (shardRouting.primary()) {\n+                        primaries++;\n+                    } else {\n+                        replicas++;\n+                    }\n+                } else if (isMasterNode && shardRouting.unassigned()) {\n+                    unassigned++;\n+                }\n+            }\n+        }\n+        return new ShardStats(total, primaries, replicas, unassigned);\n+    }\n+\n+    @Override\n+    public List<ShardInfo> getShardInfo() {\n+        var cs = this.clusterState.get();\n+        var localNodeId = cs.nodes().getLocalNodeId();\n+        var isMasterNode = cs.nodes().isLocalNodeElectedMaster();\n+        var routingTable = cs.getRoutingTable();\n+        if (routingTable == null) {\n+            return List.of();\n+        }\n+        var result = new ArrayList<ShardInfo>();\n+        for (var shardRouting : routingTable.allShards()) {\n+            var shardId = shardRouting.shardId();\n+            if (localNodeId.equals(shardRouting.currentNodeId()) || (isMasterNode && shardRouting.unassigned())) {\n+                var shardStateAndSize = shardStateAndSizeProvider.apply(shardId);\n+                if (shardStateAndSize != null) {\n+                    result.add(new ShardInfo(shardId.id(),\n+                                             shardId.getIndexName(),\n+                                             shardRouting.state().name(),\n+                                             shardStateAndSize.v1().name(),\n+                                             shardStateAndSize.v2()));\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    public static class ShardStateAndSizeProvider implements Function<ShardId, Tuple<IndexShardState, Long>> {\n+        private final IndicesService indicesService;\n+\n+        public ShardStateAndSizeProvider(IndicesService indicesService) {\n+            this.indicesService = indicesService;\n+        }\n+\n+        public Tuple<IndexShardState, Long> apply(ShardId shardId) {\n+            var shard = indicesService.getShardOrNull(shardId);\n+            if (shard == null) {\n+                return null;\n+            }\n+            return new Tuple<>(shard.state(), shard.storeStats().getSizeInBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "558ae5b4eac2f852023e3e84724883d2b2766fe3"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTAzNzAyOnYy", "diffSide": "RIGHT", "path": "docs/admin/monitoring.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo0NzozNlrOH8dtgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo0NzozNlrOH8dtgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE2MzM5NQ==", "bodyText": "I think only the currently elected master should show the total number of unassigned shards.\nIf we do this for each eligible master node then we'd have eligible_master_nodes * unassigned_shards number of unassigned shards.\nUpdate\nLooks like the implementation handles it correctly - but the docs here can be a bit misleading?", "url": "https://github.com/crate/crate/pull/10835#discussion_r533163395", "createdAt": "2020-12-01T08:47:36Z", "author": {"login": "mfussenegger"}, "path": "docs/admin/monitoring.rst", "diffHunk": "@@ -165,25 +165,81 @@ NodeStatus can be accessed using the JMX MBean object name\n \n    Defines if the node is able to process SQL statements.\n \n-NodeInfo MBean\n---------------\n+NodeInfo MXBean\n+---------------\n \n-The ``NodeInfo`` JMX MBean exposes information about the current node;\n+The ``NodeInfo`` JMX MXBean exposes information about the current node;\n \n-NodeInfo can be accessed using the JMX MBean object name\n+NodeInfo can be accessed using the JMX MXBean object name\n ``io.crate.monitoring:type=NodeInfo`` and the following attributes:\n \n- - ``ClusterStateVersion``\n-\n-   Provides the version of the current applied cluster state\n-\n- - ``NodeId``\n-\n-   Provides the unique identifier of the node in the cluster\n-\n- - ``NodeName``\n-\n-   Provides the human friendly name of the node\n++-------------------------+---------------------------------------------------+\n+| Name                    | Description                                       |\n++=========================+===================================================+\n+| ``NodeId``              | Provides the unique identifier of the node in the |\n+|                         | cluster.                                          |\n++-------------------------+---------------------------------------------------+\n+| ``NodeName``            | Provides the human friendly name of the node.     |\n++-------------------------+---------------------------------------------------+\n+| ``ClusterStateVersion`` | Provides the version of the current applied       |\n+|                         | cluster state.                                    |\n++-------------------------+---------------------------------------------------+\n+| ``ShardStats``          | Statistics about the number of shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+| ``ShardInfo``           | Detailed information about the shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+\n+``ShardStats`` returns a `CompositeData`_ object containing statistics about\n+the number of shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Total``         | The number of shards located on the node.               |\n++-------------------+---------------------------------------------------------+\n+| ``Primaries``     | The number of primary shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Replicas``      | The number of replica shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Unassigned``    | The number of unassigned shards in the cluster. If the  |\n+|                   | role of the node is ``MASTER`` this will show the total |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d24b673554a2ade79f7f7c3364323c235643a"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTA0NDA3OnYy", "diffSide": "RIGHT", "path": "docs/admin/monitoring.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo0ODozNFrOH8dyMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo0ODozNFrOH8dyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE2NDU5Mw==", "bodyText": "We may also need the partition_ident for partitioned tables to distinguish between partitions.", "url": "https://github.com/crate/crate/pull/10835#discussion_r533164593", "createdAt": "2020-12-01T08:48:34Z", "author": {"login": "mfussenegger"}, "path": "docs/admin/monitoring.rst", "diffHunk": "@@ -165,25 +165,81 @@ NodeStatus can be accessed using the JMX MBean object name\n \n    Defines if the node is able to process SQL statements.\n \n-NodeInfo MBean\n---------------\n+NodeInfo MXBean\n+---------------\n \n-The ``NodeInfo`` JMX MBean exposes information about the current node;\n+The ``NodeInfo`` JMX MXBean exposes information about the current node;\n \n-NodeInfo can be accessed using the JMX MBean object name\n+NodeInfo can be accessed using the JMX MXBean object name\n ``io.crate.monitoring:type=NodeInfo`` and the following attributes:\n \n- - ``ClusterStateVersion``\n-\n-   Provides the version of the current applied cluster state\n-\n- - ``NodeId``\n-\n-   Provides the unique identifier of the node in the cluster\n-\n- - ``NodeName``\n-\n-   Provides the human friendly name of the node\n++-------------------------+---------------------------------------------------+\n+| Name                    | Description                                       |\n++=========================+===================================================+\n+| ``NodeId``              | Provides the unique identifier of the node in the |\n+|                         | cluster.                                          |\n++-------------------------+---------------------------------------------------+\n+| ``NodeName``            | Provides the human friendly name of the node.     |\n++-------------------------+---------------------------------------------------+\n+| ``ClusterStateVersion`` | Provides the version of the current applied       |\n+|                         | cluster state.                                    |\n++-------------------------+---------------------------------------------------+\n+| ``ShardStats``          | Statistics about the number of shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+| ``ShardInfo``           | Detailed information about the shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+\n+``ShardStats`` returns a `CompositeData`_ object containing statistics about\n+the number of shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Total``         | The number of shards located on the node.               |\n++-------------------+---------------------------------------------------------+\n+| ``Primaries``     | The number of primary shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Replicas``      | The number of replica shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Unassigned``    | The number of unassigned shards in the cluster. If the  |\n+|                   | role of the node is ``MASTER`` this will show the total |\n+|                   | number of unassigned shards in the cluster, otherwise 0.|\n++-------------------+---------------------------------------------------------+\n+\n+``ShardInfo`` returns an Array of `CompositeData`_ objects containing detailed\n+information about the shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Id``            | The shard id. This shard id is managed by the system,   |\n+|                   | ranging from 0 up to the number of configured shards of |\n+|                   | the table.                                              |\n++-------------------+---------------------------------------------------------+\n+| ``Table``         | The name of the table this shard belongs to.            |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d24b673554a2ade79f7f7c3364323c235643a"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjMxODc2OnYy", "diffSide": "RIGHT", "path": "docs/admin/monitoring.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMzoyMFrOH8qkYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMzoyMFrOH8qkYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3NDA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |                    | Possible states are:                                   |\n          \n          \n            \n            |                    | Possible states are:                                   |\n          \n          \n            \n            |                    |                                                        |", "url": "https://github.com/crate/crate/pull/10835#discussion_r533374051", "createdAt": "2020-12-01T12:33:20Z", "author": {"login": "norosa"}, "path": "docs/admin/monitoring.rst", "diffHunk": "@@ -165,25 +165,84 @@ NodeStatus can be accessed using the JMX MBean object name\n \n    Defines if the node is able to process SQL statements.\n \n-NodeInfo MBean\n---------------\n+NodeInfo MXBean\n+---------------\n \n-The ``NodeInfo`` JMX MBean exposes information about the current node;\n+The ``NodeInfo`` JMX MXBean exposes information about the current node;\n \n-NodeInfo can be accessed using the JMX MBean object name\n+NodeInfo can be accessed using the JMX MXBean object name\n ``io.crate.monitoring:type=NodeInfo`` and the following attributes:\n \n- - ``ClusterStateVersion``\n-\n-   Provides the version of the current applied cluster state\n-\n- - ``NodeId``\n-\n-   Provides the unique identifier of the node in the cluster\n-\n- - ``NodeName``\n-\n-   Provides the human friendly name of the node\n++-------------------------+---------------------------------------------------+\n+| Name                    | Description                                       |\n++=========================+===================================================+\n+| ``NodeId``              | Provides the unique identifier of the node in the |\n+|                         | cluster.                                          |\n++-------------------------+---------------------------------------------------+\n+| ``NodeName``            | Provides the human friendly name of the node.     |\n++-------------------------+---------------------------------------------------+\n+| ``ClusterStateVersion`` | Provides the version of the current applied       |\n+|                         | cluster state.                                    |\n++-------------------------+---------------------------------------------------+\n+| ``ShardStats``          | Statistics about the number of shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+| ``ShardInfo``           | Detailed information about the shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+\n+``ShardStats`` returns a `CompositeData`_ object containing statistics about\n+the number of shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Total``         | The number of shards located on the node.               |\n++-------------------+---------------------------------------------------------+\n+| ``Primaries``     | The number of primary shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Replicas``      | The number of replica shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Unassigned``    | The number of unassigned shards in the cluster. If the  |\n+|                   | node is the elected ``MASTER`` this will show the total |\n+|                   | number of unassigned shards in the cluster, otherwise 0.|\n++-------------------+---------------------------------------------------------+\n+\n+``ShardInfo`` returns an Array of `CompositeData`_ objects containing detailed\n+information about the shards located on the node with the following attributes:\n+\n++--------------------+--------------------------------------------------------+\n+| Name               | Description                                            |\n++====================+========================================================+\n+| ``Id``             | The shard id. This shard id is managed by the system,  |\n+|                    | ranging from 0 up to the number of configured shards   |\n+|                    | of the table.                                          |\n++--------------------+--------------------------------------------------------+\n+| ``Table``          | The name of the table this shard belongs to.           |\n++--------------------+--------------------------------------------------------+\n+| ``PartitionIdent`` | The partition ident of a partitioned table. Empty for  |\n+|                    | non-partitioned tables.                                |\n++--------------------+--------------------------------------------------------+\n+| ``RoutingState``   | The current state of the shard in the routing table.   |\n+|                    | Possible states are:                                   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32ac3d5c375173859c043c8ab58a10599445a21e"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjMxOTUzOnYy", "diffSide": "RIGHT", "path": "docs/admin/monitoring.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMzozOFrOH8qk7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMjozMzozOFrOH8qk7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM3NDE5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | ``State``          | The current state of the shard. Possible states are:   |\n          \n          \n            \n            | ``State``          | The current state of the shard. Possible states are:   |\n          \n          \n            \n            |                    |                                                        |", "url": "https://github.com/crate/crate/pull/10835#discussion_r533374191", "createdAt": "2020-12-01T12:33:38Z", "author": {"login": "norosa"}, "path": "docs/admin/monitoring.rst", "diffHunk": "@@ -165,25 +165,84 @@ NodeStatus can be accessed using the JMX MBean object name\n \n    Defines if the node is able to process SQL statements.\n \n-NodeInfo MBean\n---------------\n+NodeInfo MXBean\n+---------------\n \n-The ``NodeInfo`` JMX MBean exposes information about the current node;\n+The ``NodeInfo`` JMX MXBean exposes information about the current node;\n \n-NodeInfo can be accessed using the JMX MBean object name\n+NodeInfo can be accessed using the JMX MXBean object name\n ``io.crate.monitoring:type=NodeInfo`` and the following attributes:\n \n- - ``ClusterStateVersion``\n-\n-   Provides the version of the current applied cluster state\n-\n- - ``NodeId``\n-\n-   Provides the unique identifier of the node in the cluster\n-\n- - ``NodeName``\n-\n-   Provides the human friendly name of the node\n++-------------------------+---------------------------------------------------+\n+| Name                    | Description                                       |\n++=========================+===================================================+\n+| ``NodeId``              | Provides the unique identifier of the node in the |\n+|                         | cluster.                                          |\n++-------------------------+---------------------------------------------------+\n+| ``NodeName``            | Provides the human friendly name of the node.     |\n++-------------------------+---------------------------------------------------+\n+| ``ClusterStateVersion`` | Provides the version of the current applied       |\n+|                         | cluster state.                                    |\n++-------------------------+---------------------------------------------------+\n+| ``ShardStats``          | Statistics about the number of shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+| ``ShardInfo``           | Detailed information about the shards located on  |\n+|                         | the node.                                         |\n++-------------------------+---------------------------------------------------+\n+\n+``ShardStats`` returns a `CompositeData`_ object containing statistics about\n+the number of shards located on the node with the following attributes:\n+\n++-------------------+---------------------------------------------------------+\n+| Name              | Description                                             |\n++===================+=========================================================+\n+| ``Total``         | The number of shards located on the node.               |\n++-------------------+---------------------------------------------------------+\n+| ``Primaries``     | The number of primary shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Replicas``      | The number of replica shards located on the node.       |\n++-------------------+---------------------------------------------------------+\n+| ``Unassigned``    | The number of unassigned shards in the cluster. If the  |\n+|                   | node is the elected ``MASTER`` this will show the total |\n+|                   | number of unassigned shards in the cluster, otherwise 0.|\n++-------------------+---------------------------------------------------------+\n+\n+``ShardInfo`` returns an Array of `CompositeData`_ objects containing detailed\n+information about the shards located on the node with the following attributes:\n+\n++--------------------+--------------------------------------------------------+\n+| Name               | Description                                            |\n++====================+========================================================+\n+| ``Id``             | The shard id. This shard id is managed by the system,  |\n+|                    | ranging from 0 up to the number of configured shards   |\n+|                    | of the table.                                          |\n++--------------------+--------------------------------------------------------+\n+| ``Table``          | The name of the table this shard belongs to.           |\n++--------------------+--------------------------------------------------------+\n+| ``PartitionIdent`` | The partition ident of a partitioned table. Empty for  |\n+|                    | non-partitioned tables.                                |\n++--------------------+--------------------------------------------------------+\n+| ``RoutingState``   | The current state of the shard in the routing table.   |\n+|                    | Possible states are:                                   |\n+|                    | * UNASSIGNED                                           |\n+|                    | * INITIALIZING                                         |\n+|                    | * STARTED                                              |\n+|                    | * RELOCATING                                           |\n++--------------------+--------------------------------------------------------+\n+| ``State``          | The current state of the shard. Possible states are:   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32ac3d5c375173859c043c8ab58a10599445a21e"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzE1ODk4OnYy", "diffSide": "RIGHT", "path": "blackbox/test_jmx.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozNDo1NVrOH8yqjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozNDo1NVrOH8yqjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUwNjcwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        result = list((line.strip() for line in stdout.split('\\n') if line.strip()))\n          \n          \n            \n                        result = [line.strip() for line in stdout.split('\\n') if line.strip()]\n          \n      \n    \n    \n  \n\nIt is more common to use a list comprehension directly instead of calling list on a generator expression.", "url": "https://github.com/crate/crate/pull/10835#discussion_r533506700", "createdAt": "2020-12-01T15:34:55Z", "author": {"login": "mfussenegger"}, "path": "blackbox/test_jmx.py", "diffHunk": "@@ -156,6 +156,31 @@ def test_mbean_node_id(self):\n         self.assertEqual(stderr, '')\n         self.assertNotEqual(stdout.rstrip(), '', 'node id must not be empty')\n \n+    def test_mbean_shards(self):\n+        jmx_client = JmxClient(JMX_PORT)\n+        with connect(enterprise_crate.http_url) as conn:\n+            c = conn.cursor()\n+            c.execute('''create table test(id integer) clustered into 1 shards with (number_of_replicas=0)''')\n+            stdout, stderr = jmx_client.query_jmx(\n+                'io.crate.monitoring:type=NodeInfo',\n+                'ShardStats'\n+            )\n+            result = list((line.strip() for line in stdout.split('\\n') if line.strip()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc9ca983d01e0beda0abe3d65630447490f0e81"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzE3NDcwOnYy", "diffSide": "RIGHT", "path": "docs/appendices/release-notes/unreleased.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozODowMFrOH8y0FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNTozODowMFrOH8y0FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUwOTE0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Added statistics and detailed information about the shards located on the\n          \n          \n            \n              node to the ``NodeInfo MXBean`` which is available as an enterprise feature.\n          \n          \n            \n            - Added information about the shards located on the node to the ``NodeInfo MXBean`` which is available as an enterprise feature.\n          \n      \n    \n    \n  \n\nWe aren't really exposing statistics. It's only the number of the number of shard copies and their size and state.\nCould you also turn NodeInfo MXBean into a link to the relevant section in monitoring.rst ?", "url": "https://github.com/crate/crate/pull/10835#discussion_r533509140", "createdAt": "2020-12-01T15:38:00Z", "author": {"login": "mfussenegger"}, "path": "docs/appendices/release-notes/unreleased.rst", "diffHunk": "@@ -53,6 +53,9 @@ None\n Changes\n =======\n \n+- Added statistics and detailed information about the shards located on the\n+  node to the ``NodeInfo MXBean`` which is available as an enterprise feature.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fc9ca983d01e0beda0abe3d65630447490f0e81"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 941, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}