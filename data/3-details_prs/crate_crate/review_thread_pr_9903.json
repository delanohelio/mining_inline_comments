{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTEzMDEx", "number": 9903, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOToxMzo0OFrOD3itrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOToxMzo0OFrOD3itrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTY3MDIxOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/io/crate/metadata/functions/SignatureBinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOToxMzo0OFrOGN2UjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOToxMzo0OFrOGN2UjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE3NDY2OA==", "bodyText": "wouldn't this case result in the same as here? https://github.com/crate/crate/pull/9903/files#diff-f5c59a6293ee86d741b614ade3f78ed4R434\nSo we maybe could just always use replaceTypeVariable()?", "url": "https://github.com/crate/crate/pull/9903#discussion_r417174668", "createdAt": "2020-04-29T09:13:48Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/metadata/functions/SignatureBinder.java", "diffHunk": "@@ -386,18 +386,59 @@ private static void addVarArgTypeSignature(TypeSignature typeSignature,\n                                                Map<String, TypeVariableConstraint> typeVariableConstraints,\n                                                List<TypeSignature> builder,\n                                                int actualArity) {\n-        TypeVariableConstraint typeVariableConstraint = typeVariableConstraints.get(typeSignature.getBaseTypeName());\n+        TypeVariableConstraint typeVariableConstraint = resolveTypeVariableConstraint(\n+            typeSignature,\n+            typeVariableConstraints\n+        );\n         if (typeVariableConstraint != null && typeVariableConstraint.isAnyAllowed()) {\n             // Type variables defaults to be bound to the same type.\n             // To support independent variable type arguments, each vararg must be bound to a dedicated type variable.\n-            String constraintName = \"_generated_\" + typeSignature.getBaseTypeName() + actualArity;\n-            TypeSignature newTypeSignature = new TypeSignature(constraintName);\n-            typeVariableConstraints.put(constraintName, typeVariableOfAnyType(constraintName));\n+            var newConstraintName = \"_generated_\" + typeVariableConstraint + actualArity;\n+            TypeSignature newTypeSignature;\n+            if (typeSignature.getParameters().isEmpty()) {\n+                newTypeSignature = new TypeSignature(newConstraintName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43c9b7b9ac3b6068f57ee57b5c83f9435b5479a"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1443, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}