{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NjU1NTI1", "number": 9823, "title": "Refactor all geo scalars to new function registry", "bodyText": "", "createdAt": "2020-03-30T13:36:08Z", "url": "https://github.com/crate/crate/pull/9823", "merged": true, "mergeCommit": {"oid": "ddfafbedba281cb33ee9dfc16b4be1acc207b87a"}, "closed": true, "closedAt": "2020-03-30T15:19:03Z", "author": {"login": "seut"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSu79xgFqTM4Mzg3ODE2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSvpvdgH2gAyMzk1NjU1NTI1OjhmNTU5YTExYmE5MWQ2MzUzYmU0Yzc5M2E3N2ZmOWQ0NTE4OTJmY2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODc4MTY3", "url": "https://github.com/crate/crate/pull/9823#pullrequestreview-383878167", "createdAt": "2020-03-30T13:55:02Z", "commit": {"oid": "f3f8abb54460f320f0ae06cfd6dcba6c4f8866af"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1NTowMlrOF9q6Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1NTowMlrOF9q6Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMDUwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DataTypes.STRING, DataTypes.GEO_POINT, new ArrayType<>(DataTypes.DOUBLE));\n          \n          \n            \n                    DataTypes.STRING, DataTypes.GEO_POINT, DataTypes.DOUBLE_ARRAY);", "url": "https://github.com/crate/crate/pull/9823#discussion_r400210507", "createdAt": "2020-03-30T13:55:02Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/expression/scalar/geo/DistanceFunction.java", "diffHunk": "@@ -44,22 +40,30 @@\n import java.util.Arrays;\n import java.util.List;\n \n+import static io.crate.metadata.functions.Signature.scalar;\n+import static io.crate.types.TypeSignature.parseTypeSignature;\n+\n public class DistanceFunction extends Scalar<Double, Point> {\n \n     public static final String NAME = \"distance\";\n-    private static final Param ALLOWED_PARAM = Param.of(\n-        DataTypes.STRING, DataTypes.GEO_POINT, new ArrayType(DataTypes.DOUBLE));\n+    private static final List<DataType<?>> SUPPORTED_TYPES = List.of(\n+        DataTypes.STRING, DataTypes.GEO_POINT, new ArrayType<>(DataTypes.DOUBLE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3f8abb54460f320f0ae06cfd6dcba6c4f8866af"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODgyNTUx", "url": "https://github.com/crate/crate/pull/9823#pullrequestreview-383882551", "createdAt": "2020-03-30T13:59:19Z", "commit": {"oid": "f3f8abb54460f320f0ae06cfd6dcba6c4f8866af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1OToyMFrOF9rHjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1OToyMFrOF9rHjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIxMzkwMQ==", "bodyText": "what is the preferable way of defining the signature\nparseTypeSignature(\"double precision\")\n\nor\nDataTypes.DOUBLE.getTypeSignature()\n\n?", "url": "https://github.com/crate/crate/pull/9823#discussion_r400213901", "createdAt": "2020-03-30T13:59:20Z", "author": {"login": "kovrus"}, "path": "sql/src/main/java/io/crate/expression/scalar/geo/CoordinateFunction.java", "diffHunk": "@@ -31,13 +30,20 @@\n import java.util.List;\n import java.util.function.Function;\n \n+import static io.crate.metadata.functions.Signature.scalar;\n+import static io.crate.types.TypeSignature.parseTypeSignature;\n+\n public final class CoordinateFunction {\n \n-    private static final List<DataType> SUPPORTED_INPUT_TYPES = ImmutableList.of(DataTypes.GEO_POINT, DataTypes.STRING, DataTypes.DOUBLE_ARRAY, DataTypes.UNDEFINED);\n+    private static final List<DataType<?>> SUPPORTED_INPUT_TYPES =\n+        List.of(DataTypes.GEO_POINT, DataTypes.STRING, DataTypes.DOUBLE_ARRAY, DataTypes.UNDEFINED);\n \n     private static void register(ScalarFunctionModule module, String name, Function<Object, Double> func) {\n-        for (DataType inputType : SUPPORTED_INPUT_TYPES) {\n-            module.register(new UnaryScalar<>(name, inputType, DataTypes.DOUBLE, func));\n+        for (DataType<?> inputType : SUPPORTED_INPUT_TYPES) {\n+            module.register(\n+                scalar(name, inputType.getTypeSignature(), parseTypeSignature(\"double precision\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3f8abb54460f320f0ae06cfd6dcba6c4f8866af"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f32609238cd803447975ce35cfc590d0b5cf634", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/7f32609238cd803447975ce35cfc590d0b5cf634", "committedDate": "2020-03-30T14:10:49Z", "message": "Refactor all geo scalars to new function registry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3f8abb54460f320f0ae06cfd6dcba6c4f8866af", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/f3f8abb54460f320f0ae06cfd6dcba6c4f8866af", "committedDate": "2020-03-30T13:34:31Z", "message": "Refactor all geo scalars to new function registry"}, "afterCommit": {"oid": "7f32609238cd803447975ce35cfc590d0b5cf634", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/7f32609238cd803447975ce35cfc590d0b5cf634", "committedDate": "2020-03-30T14:10:49Z", "message": "Refactor all geo scalars to new function registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f559a11ba91d6353be4c793a77ff9d451892fcb", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/8f559a11ba91d6353be4c793a77ff9d451892fcb", "committedDate": "2020-03-30T14:47:51Z", "message": "Merge branch 'master' into s/geo-scalars"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3461, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}