{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NzMyMTMz", "number": 9830, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTozODo0OVrODsu48Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTozODo0OVrODsu48Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjMyMTc3OnYy", "diffSide": "LEFT", "path": "sql/src/main/java/io/crate/execution/jobs/JobSetup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTozODo0OVrOF9v38g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODozNjoyMFrOF-LDjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5MTgyNg==", "bodyText": "Not sure why there was a special exception for blockNestedLoop. To me it seems like there is also a single thread that uses the ramAccounting instance.", "url": "https://github.com/crate/crate/pull/9830#discussion_r400291826", "createdAt": "2020-03-30T15:38:49Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/execution/jobs/JobSetup.java", "diffHunk": "@@ -883,7 +883,7 @@ public Boolean visitNestedLoopPhase(NestedLoopPhase phase, Context context) {\n                 joinCondition,\n                 phase.joinType(),\n                 breaker(),\n-                phase.blockNestedLoop ? ramAccounting : ramAccountingOfOperation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aeab12859cd4839c406de1a06d721ea6402864c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczNzE2Ng==", "bodyText": "Maybe it was just a mistake by me? I agree that only 1 thread will use it concurrently.", "url": "https://github.com/crate/crate/pull/9830#discussion_r400737166", "createdAt": "2020-03-31T08:36:20Z", "author": {"login": "seut"}, "path": "sql/src/main/java/io/crate/execution/jobs/JobSetup.java", "diffHunk": "@@ -883,7 +883,7 @@ public Boolean visitNestedLoopPhase(NestedLoopPhase phase, Context context) {\n                 joinCondition,\n                 phase.joinType(),\n                 breaker(),\n-                phase.blockNestedLoop ? ramAccounting : ramAccountingOfOperation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI5MTgyNg=="}, "originalCommit": {"oid": "6aeab12859cd4839c406de1a06d721ea6402864c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1565, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}