{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDAxMTEw", "number": 9554, "title": "Insert from values/subquery inserts data into the same partition if the same partition by value (object[timestamp]) is used. (bp #9546)", "bodyText": "This is an automated backport of pull request #9546 done by Mergify.io\nCherry-pick of a4dbfe3 has failed:\nOn branch mergify/bp/4.0/pr-9546\nYour branch is ahead of 'origin/4.0' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit a4dbfe3ab0.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nChanges to be committed:\n\n\tmodified:   common/src/main/java/io/crate/types/DataTypes.java\n\tmodified:   common/src/main/java/io/crate/types/ObjectType.java\n\tmodified:   common/src/test/java/io/crate/types/DataTypesTest.java\n\tmodified:   common/src/test/java/io/crate/types/TypeConversionTest.java\n\tmodified:   sql/src/main/java/io/crate/analyze/relations/RelationAnalyzer.java\n\tmodified:   sql/src/main/java/io/crate/expression/reference/doc/lucene/LuceneReferenceResolver.java\n\tmodified:   sql/src/main/java/io/crate/expression/scalar/cast/CastFunction.java\n\tmodified:   sql/src/main/java/io/crate/expression/scalar/cast/TryCastScalarFunction.java\n\tmodified:   sql/src/main/java/io/crate/planner/operators/Union.java\n\tmodified:   sql/src/test/java/io/crate/integrationtests/SQLTypeMappingTest.java\n\tmodified:   sql/src/test/java/io/crate/metadata/doc/DocIndexMetaDataTest.java\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n\tboth modified:   sql/src/main/java/io/crate/analyze/TableElementsAnalyzer.java\n\tboth modified:   sql/src/main/java/io/crate/analyze/expressions/ValueNormalizer.java\n\tboth modified:   sql/src/main/java/io/crate/expression/scalar/cast/CastFunctionResolver.java\n\tboth modified:   sql/src/main/java/io/crate/protocols/postgres/types/PGTypes.java\n\tboth modified:   sql/src/test/java/io/crate/analyze/InsertFromValuesAnalyzerTest.java\n\tboth modified:   sql/src/test/java/io/crate/metadata/table/ColumnRegistrarTest.java\n\n\nCherry-pick of 4f98c5e has failed:\nOn branch mergify/bp/4.0/pr-9546\nYour branch is ahead of 'origin/4.0' by 2 commits.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit 4f98c5ee24.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nChanges to be committed:\n\n\tmodified:   sql/src/main/java/io/crate/expression/scalar/ScalarFunctionModule.java\n\tdeleted:    sql/src/main/java/io/crate/expression/scalar/cast/TryCastScalarFunction.java\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n\tboth modified:   sql/src/main/java/io/crate/expression/scalar/cast/CastFunction.java\n\n\nCherry-pick of 3e74966 has failed:\nOn branch mergify/bp/4.0/pr-9546\nYour branch is ahead of 'origin/4.0' by 3 commits.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit 3e74966e37.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nChanges to be committed:\n\n\tmodified:   sql/src/main/java/io/crate/expression/symbol/format/SymbolPrinter.java\n\tmodified:   sql/src/test/java/io/crate/analyze/SelectStatementAnalyzerTest.java\n\tmodified:   sql/src/test/java/io/crate/expression/symbol/format/SymbolPrinterTest.java\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n\tboth modified:   sql/src/main/java/io/crate/expression/scalar/cast/CastFunction.java\n\tboth modified:   sql/src/main/java/io/crate/expression/scalar/cast/CastFunctionResolver.java\n\tboth modified:   sql/src/test/java/io/crate/expression/scalar/cast/CastFunctionTest.java\n\n\nCherry-pick of 70e1a39 has failed:\nOn branch mergify/bp/4.0/pr-9546\nYour branch is ahead of 'origin/4.0' by 4 commits.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit 70e1a395e0.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nChanges to be committed:\n\n\tmodified:   docs/appendices/release-notes/unreleased.rst\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n\tboth modified:   sql/src/test/java/io/crate/integrationtests/PartitionedTableIntegrationTest.java\n\n\nTo fixup this pull request, you can check out it locally. See documentation: https://help.github.com/articles/checking-out-pull-requests-locally/\n\nMergify commands and options\n\nMore conditions and actions can be found in the [documention](https://doc.mergify.io/).\n\n\nYou can also trigger Mergify actions by commenting on this pull request:\n\n@Mergifyio refresh will re-evaluate the rules\n@Mergifyio rebase will rebase this PR\n@Mergifyio backports <destination> will backport this PR on <destination> branch\n\nAdditionally, on Mergify dashboard you can:\n\nlook at your merge queues\ngenerate the Mergify configuration with the simulator.\n\nFinally, you can contact us on https://mergify.io/", "createdAt": "2020-01-21T16:39:04Z", "url": "https://github.com/crate/crate/pull/9554", "merged": true, "mergeCommit": {"oid": "48379c5c3a6873bea732c2d49709cc1012d86e10"}, "closed": true, "closedAt": "2020-01-30T13:27:01Z", "author": {"login": "mergify"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8zkiRgBqjI5Njk1ODcyNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_aK0_gBqjI5OTMyMzEzMTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea9c40c667605b5b496c160d98b3727f844cbc25", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/ea9c40c667605b5b496c160d98b3727f844cbc25", "committedDate": "2020-01-21T16:38:58Z", "message": "Add test for insert from subquery/values into the same partition.\n\n(cherry picked from commit 70e1a395e0b2888e0fc4dc1f4ea6d350a65af4d8)\n\n# Conflicts:\n#\tsql/src/test/java/io/crate/integrationtests/PartitionedTableIntegrationTest.java"}, "afterCommit": {"oid": "43dc1e62c9a65d70550308d406b8be2ae29f14a9", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/43dc1e62c9a65d70550308d406b8be2ae29f14a9", "committedDate": "2020-01-22T10:54:48Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43dc1e62c9a65d70550308d406b8be2ae29f14a9", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/43dc1e62c9a65d70550308d406b8be2ae29f14a9", "committedDate": "2020-01-22T10:54:48Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "fa78105f83d3c0aef829e7487377a69936de1664", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/fa78105f83d3c0aef829e7487377a69936de1664", "committedDate": "2020-01-29T11:14:53Z", "message": "Pass the return type info as a second argument of cast functions.\n\nCurrently, it is not possible to resolve a function based on\nits return type. For instance, it won't be possible to generated\nan object cast function with the return type which inner types\nhave to be considered. Therefore, to bypass this limitation we\nencode the return type info as a second argument of a cast function\nand resolve the return type based on it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa78105f83d3c0aef829e7487377a69936de1664", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/fa78105f83d3c0aef829e7487377a69936de1664", "committedDate": "2020-01-29T11:14:53Z", "message": "Pass the return type info as a second argument of cast functions.\n\nCurrently, it is not possible to resolve a function based on\nits return type. For instance, it won't be possible to generated\nan object cast function with the return type which inner types\nhave to be considered. Therefore, to bypass this limitation we\nencode the return type info as a second argument of a cast function\nand resolve the return type based on it."}, "afterCommit": {"oid": "b90711b15f0fdaea8b51104d19db9edd37b72c19", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b90711b15f0fdaea8b51104d19db9edd37b72c19", "committedDate": "2020-01-29T14:35:28Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b90711b15f0fdaea8b51104d19db9edd37b72c19", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/b90711b15f0fdaea8b51104d19db9edd37b72c19", "committedDate": "2020-01-29T14:35:28Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "2c9c68311d7fb6b635e052455536e94d298dc454", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2c9c68311d7fb6b635e052455536e94d298dc454", "committedDate": "2020-01-29T14:36:15Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c9c68311d7fb6b635e052455536e94d298dc454", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/2c9c68311d7fb6b635e052455536e94d298dc454", "committedDate": "2020-01-29T14:36:15Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "db93358f895d2aef0dfb4408dcb580a7e47ed60c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/db93358f895d2aef0dfb4408dcb580a7e47ed60c", "committedDate": "2020-01-29T15:54:33Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db93358f895d2aef0dfb4408dcb580a7e47ed60c", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/db93358f895d2aef0dfb4408dcb580a7e47ed60c", "committedDate": "2020-01-29T15:54:33Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "committedDate": "2020-01-29T16:31:07Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0d76b4810f759445f510e2d64a2f10d4d1c44fbf", "committedDate": "2020-01-29T16:31:07Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "3f362d30088b1f30c7fa9d722cea6e1c20b39331", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/3f362d30088b1f30c7fa9d722cea6e1c20b39331", "committedDate": "2020-01-29T16:56:40Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f362d30088b1f30c7fa9d722cea6e1c20b39331", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/3f362d30088b1f30c7fa9d722cea6e1c20b39331", "committedDate": "2020-01-29T16:56:40Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "committedDate": "2020-01-29T18:00:23Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/5ef486cc7ec4ebaa3dc9862c7f6fd234e4fb2912", "committedDate": "2020-01-29T18:00:23Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "8d568694fbc30fd58ec4ad5114729a3ff6577d06", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/8d568694fbc30fd58ec4ad5114729a3ff6577d06", "committedDate": "2020-01-29T18:02:18Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzc5MzI0", "url": "https://github.com/crate/crate/pull/9554#pullrequestreview-350379324", "createdAt": "2020-01-29T19:48:47Z", "commit": {"oid": "8d568694fbc30fd58ec4ad5114729a3ff6577d06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0ODo0N1rOFjValg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0ODo0N1rOFjValg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTM1MA==", "bodyText": "Isn't this the part for which we added a breaking changes entry in master?", "url": "https://github.com/crate/crate/pull/9554#discussion_r372595350", "createdAt": "2020-01-29T19:48:47Z", "author": {"login": "mfussenegger"}, "path": "sql/src/main/java/io/crate/protocols/postgres/types/PGTypes.java", "diffHunk": "@@ -105,15 +105,21 @@ public static PGType get(DataType type) {\n             DataType<?> innerType = ((CollectionType) type).innerType();\n             if (innerType instanceof CollectionType) {\n                 // if this is a nested collection stream it as JSON because\n-                // postgres binary format doesn't support multidimensional arrays with sub-arrays of different length\n+                // postgres binary format doesn't support multidimensional arrays\n+                // with sub-arrays of different length\n                 // (something like [ [1, 2], [3] ] is not supported)\n                 return JsonType.INSTANCE;\n+            } else if (innerType.id() == ObjectType.ID) {\n+                return PGArray.JSON_ARRAY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d568694fbc30fd58ec4ad5114729a3ff6577d06"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDIzMDQx", "url": "https://github.com/crate/crate/pull/9554#pullrequestreview-350423041", "createdAt": "2020-01-29T21:05:17Z", "commit": {"oid": "e059b781be6099313c45170336f57fc8755e7200"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e059b781be6099313c45170336f57fc8755e7200", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/e059b781be6099313c45170336f57fc8755e7200", "committedDate": "2020-01-29T20:18:42Z", "message": "fixup! Implement equals, hashCode and isConvertableTo in ObjectType."}, "afterCommit": {"oid": "aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "committedDate": "2020-01-30T08:52:05Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/aa8f6a759a17f65fc1797bf8417f9d82c404cd1e", "committedDate": "2020-01-30T08:52:05Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "0de93bee8203374a2c9f053165724ff068091164", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0de93bee8203374a2c9f053165724ff068091164", "committedDate": "2020-01-30T09:24:29Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0de93bee8203374a2c9f053165724ff068091164", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/0de93bee8203374a2c9f053165724ff068091164", "committedDate": "2020-01-30T09:24:29Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "3db3114ff2b582c64e21b6780b44736252c3ef7f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/3db3114ff2b582c64e21b6780b44736252c3ef7f", "committedDate": "2020-01-30T09:49:40Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3db3114ff2b582c64e21b6780b44736252c3ef7f", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/3db3114ff2b582c64e21b6780b44736252c3ef7f", "committedDate": "2020-01-30T09:49:40Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "a086031733cb8ca5687134860b8a6ed73bbe5ab3", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a086031733cb8ca5687134860b8a6ed73bbe5ab3", "committedDate": "2020-01-30T10:26:53Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a00a97f47896dbc19b4f8f5983f55ef07a8f83", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/87a00a97f47896dbc19b4f8f5983f55ef07a8f83", "committedDate": "2020-01-30T12:34:42Z", "message": "Add missing inner object types to columns index metadata."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11012d6da625fa42e5bbca58b3794cae8b78398d", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/11012d6da625fa42e5bbca58b3794cae8b78398d", "committedDate": "2020-01-30T12:38:42Z", "message": "Implement equals, hashCode and isConvertableTo in ObjectType."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81a5dbf8292e8aab47329c1225c072548d5be38", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/f81a5dbf8292e8aab47329c1225c072548d5be38", "committedDate": "2020-01-30T12:51:07Z", "message": "Merge CastFunction and TryCastFunction classes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65e1863337d4efd8d455b4b49b94083f38599cda", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/65e1863337d4efd8d455b4b49b94083f38599cda", "committedDate": "2020-01-30T12:55:19Z", "message": "Pass the return type info as a second argument of cast functions.\n\nCurrently, it is not possible to resolve a function based on\nits return type. For instance, it won't be possible to generated\nan object cast function with the return type which inner types\nhave to be considered. Therefore, to bypass this limitation we\nencode the return type info as a second argument of a cast function\nand resolve the return type based on it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48379c5c3a6873bea732c2d49709cc1012d86e10", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/48379c5c3a6873bea732c2d49709cc1012d86e10", "committedDate": "2020-01-30T12:57:46Z", "message": "Add test for insert from subquery/values into the same partition."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a086031733cb8ca5687134860b8a6ed73bbe5ab3", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/a086031733cb8ca5687134860b8a6ed73bbe5ab3", "committedDate": "2020-01-30T10:26:53Z", "message": "Add test for insert from subquery/values into the same partition."}, "afterCommit": {"oid": "48379c5c3a6873bea732c2d49709cc1012d86e10", "author": {"user": {"login": "kovrus", "name": "Ruslan Kovalov"}}, "url": "https://github.com/crate/crate/commit/48379c5c3a6873bea732c2d49709cc1012d86e10", "committedDate": "2020-01-30T12:57:46Z", "message": "Add test for insert from subquery/values into the same partition."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3937, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}