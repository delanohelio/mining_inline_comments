{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMDQzMzIw", "number": 10138, "title": "Use Signature instead of FunctionIdent/Info ", "bodyText": "Summary of the changes / Why this improves CrateDB\nReplace all usages of FunctionIdent and FunctionInfo with Signature and mark them as deprecated.\nRemaining usages are only for BWC inside mixed version clusters. Implementation and usages should be removed with the next major version (5.0).\nAlso some function signatures return types are fixed. The signature return type is now used the first time and thus highlighted the errors. These fixes could be committed dedicated but without real usage, they wouldn't be tested.\nRelates #9901.", "createdAt": "2020-06-25T14:04:41Z", "url": "https://github.com/crate/crate/pull/10138", "merged": true, "mergeCommit": {"oid": "5dd03a1a8c28dd41d5d370bc0987c859c5258160"}, "closed": true, "closedAt": "2020-06-26T15:55:26Z", "author": {"login": "seut"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuvV8HAFqTQzNzUzODY0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvE11ugH2gAyNDQwMDQzMzIwOjkyYmRmMWFiYzZjZGZhMjA1OGNjYzkzMDMyNGNhMTM3MjgyZTA1MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NTM4NjQ4", "url": "https://github.com/crate/crate/pull/10138#pullrequestreview-437538648", "createdAt": "2020-06-25T14:16:06Z", "commit": {"oid": "f146be5d2b5fd56707e6b6a9d89f359042a0d39d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxNjowNlrOGo8yMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxNjowNlrOGo8yMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5MjExNQ==", "bodyText": "Plugin providing scalars would not work anymore, as they rely on the old function registry including old methods.\nIs it worth to keep compatibility given that our plugin infrastructure seems to be unused?", "url": "https://github.com/crate/crate/pull/10138#discussion_r445592115", "createdAt": "2020-06-25T14:16:06Z", "author": {"login": "seut"}, "path": "app/src/test/java/io/crate/plugin/PluginLoaderTest.java", "diffHunk": "@@ -54,29 +54,6 @@\n         return Arrays.asList(PluginLoaderPlugin.class, Netty4Plugin.class);\n     }\n \n-    @Test\n-    public void testLoadPlugin() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f146be5d2b5fd56707e6b6a9d89f359042a0d39d"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b7e3d34157ff035f302847280472dbea86f067e", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/8b7e3d34157ff035f302847280472dbea86f067e", "committedDate": "2020-06-25T14:30:29Z", "message": "fixup! Replace read usages of deprecated function info"}, "afterCommit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/194d49b976bf12ca8e2609daf70c670d31db7095", "committedDate": "2020-06-25T14:31:20Z", "message": "Replace read usages of deprecated function info\n\nAdd wrapper methods to fallback to the function info when no signature\nis given (for function symbols retrieved from CrateDB < 4.2 nodes)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDgyMzIx", "url": "https://github.com/crate/crate/pull/10138#pullrequestreview-438082321", "createdAt": "2020-06-26T07:47:13Z", "commit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0NzoxM1rOGpXGMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo1ODoyNVrOGpXbmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMzIxNw==", "bodyText": "I think we should add some assertions here that the signature has the right arguments for UnaryScalar, or keep a more restrictive constructor so that it cannot be parametrized in an illegal way.  Same for the TrippleScalar", "url": "https://github.com/crate/crate/pull/10138#discussion_r446023217", "createdAt": "2020-06-26T07:47:13Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/scalar/UnaryScalar.java", "diffHunk": "@@ -42,43 +37,27 @@\n  */\n public class UnaryScalar<R, T> extends Scalar<R, T> {\n \n-    private final FunctionInfo info;\n     private final Function<T, R> func;\n-    @Nullable\n     private final Signature signature;\n+    private final Signature boundSignature;\n \n-    public UnaryScalar(FunctionIdent functionIdent, DataType<?> returnType, Function<T, R> func) {\n-        this(functionIdent, null, returnType, func);\n-    }\n-\n-    public UnaryScalar(String name, DataType<?> argType, DataType<?> returnType, Function<T, R> func) {\n-        this(new FunctionIdent(name, List.of(argType)), returnType, func);\n-    }\n-\n-    public UnaryScalar(String name,\n-                       Signature signature,\n-                       DataType<?> argType, DataType<?> returnType,\n-                       Function<T, R> func) {\n-        this(new FunctionIdent(name, List.of(argType)), signature, returnType, func);\n-    }\n \n-    public UnaryScalar(FunctionIdent functionIdent,\n-                       @Nullable Signature signature,\n-                       DataType<?> returnType,\n+    public UnaryScalar(Signature signature,\n+                       Signature boundSignature,\n                        Function<T, R> func) {\n-        this.info = new FunctionInfo(functionIdent, returnType);\n         this.signature = signature;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMzQ5MQ==", "bodyText": "Same here. See comment on the UnaryScalar", "url": "https://github.com/crate/crate/pull/10138#discussion_r446023491", "createdAt": "2020-06-26T07:47:47Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/expression/scalar/arithmetic/BinaryScalar.java", "diffHunk": "@@ -23,49 +23,38 @@\n package io.crate.expression.scalar.arithmetic;\n \n import io.crate.data.Input;\n-import io.crate.metadata.FunctionIdent;\n-import io.crate.metadata.FunctionInfo;\n import io.crate.metadata.Scalar;\n import io.crate.metadata.TransactionContext;\n import io.crate.metadata.functions.Signature;\n import io.crate.types.DataType;\n \n-import javax.annotation.Nullable;\n-import java.util.Arrays;\n-import java.util.Set;\n import java.util.function.BinaryOperator;\n \n public final class BinaryScalar<T> extends Scalar<T, T> {\n \n     private final BinaryOperator<T> func;\n-    private final FunctionInfo info;\n-    @Nullable\n     private final Signature signature;\n+    private final Signature boundSignature;\n     private final DataType<T> type;\n \n-    public BinaryScalar(BinaryOperator<T> func, String name, DataType<T> type, Set<FunctionInfo.Feature> feature) {\n-        this(func, name, null, type, feature);\n-    }\n-\n     public BinaryScalar(BinaryOperator<T> func,\n-                        String name,\n-                        @Nullable Signature signature,\n-                        DataType<T> type,\n-                        Set<FunctionInfo.Feature> feature) {\n+                        Signature signature,\n+                        Signature boundSignature,\n+                        DataType<T> type) {\n         this.func = func;\n-        this.info = new FunctionInfo(new FunctionIdent(name, Arrays.asList(type, type)), type, FunctionInfo.Type.SCALAR, feature);\n         this.signature = signature;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyODY5Nw==", "bodyText": "Would probably also be worth to elaborate a bit on the difference between signature and boundSignature", "url": "https://github.com/crate/crate/pull/10138#discussion_r446028697", "createdAt": "2020-06-26T07:58:25Z", "author": {"login": "mfussenegger"}, "path": "server/src/main/java/io/crate/metadata/FunctionImplementation.java", "diffHunk": "@@ -33,16 +33,26 @@\n public interface FunctionImplementation {\n \n     /**\n+     * @deprecated Use {@link #signature()} instead. Will be removed with next major version.\n+     *\n      * Provides meta information about this function implementation.\n      */\n-    FunctionInfo info();\n+    default FunctionInfo info() {\n+        return FunctionInfo.of(boundSignature());\n+    }\n \n     /**\n      * Return the declared signature for this implementation.\n      * This should be favoured over {@link #info()}.\n      */\n     Signature signature();\n \n+    /**\n+     * Return the bound signature for this implementation.\n+     * Main use-case is for the default {@link #info()} implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDk2Njg3", "url": "https://github.com/crate/crate/pull/10138#pullrequestreview-438096687", "createdAt": "2020-06-26T08:10:07Z", "commit": {"oid": "194d49b976bf12ca8e2609daf70c670d31db7095"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzUxMzcw", "url": "https://github.com/crate/crate/pull/10138#pullrequestreview-438351370", "createdAt": "2020-06-26T14:39:06Z", "commit": {"oid": "44e75cfb756561b3345b6c082e6c1d1d5f6241b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ed4a6b4467805dddf8b55b63d8b7d8dc91d6780", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/6ed4a6b4467805dddf8b55b63d8b7d8dc91d6780", "committedDate": "2020-06-26T14:40:23Z", "message": "Use Signature instead of FunctionIdent/Info\n\nReplaced all usages of `FunctionIdent` and `FunctionInfo` with `Signature` and\nmarked them as deprecated.\nRemaining usages are only for BWC inside mixed version clusters.\nImplementation and usages should be removed with the next major version (5.0)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950044a8bf164ab9315cf5b207a19aa09d2fe3f0", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/950044a8bf164ab9315cf5b207a19aa09d2fe3f0", "committedDate": "2020-06-26T14:40:23Z", "message": "Replace read usages of deprecated function info\n\nAdd wrapper methods to fallback to the function info when no signature\nis given (for function symbols retrieved from CrateDB < 4.2 nodes)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44e75cfb756561b3345b6c082e6c1d1d5f6241b6", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/44e75cfb756561b3345b6c082e6c1d1d5f6241b6", "committedDate": "2020-06-26T14:25:36Z", "message": "fixup! Use Signature instead of FunctionIdent/Info"}, "afterCommit": {"oid": "950044a8bf164ab9315cf5b207a19aa09d2fe3f0", "author": {"user": {"login": "seut", "name": "Sebastian Utz"}}, "url": "https://github.com/crate/crate/commit/950044a8bf164ab9315cf5b207a19aa09d2fe3f0", "committedDate": "2020-06-26T14:40:23Z", "message": "Replace read usages of deprecated function info\n\nAdd wrapper methods to fallback to the function info when no signature\nis given (for function symbols retrieved from CrateDB < 4.2 nodes)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92bdf1abc6cdfa2058ccc930324ca137282e0501", "author": {"user": {"login": "mergify[bot]", "name": null}}, "url": "https://github.com/crate/crate/commit/92bdf1abc6cdfa2058ccc930324ca137282e0501", "committedDate": "2020-06-26T15:18:57Z", "message": "Merge branch 'master' into s/func-info"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3161, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}