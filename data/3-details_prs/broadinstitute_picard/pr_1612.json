{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NzA3MzM4", "number": 1612, "title": "Yf fix il to bed sorting", "bodyText": "IntervalListToBed used Interval::compare for sorting the output but this uses a lexicographic order on the contig names...this was defintly not intended. the tests passed since the dictionaries were also in that order...\n\nusing the correct sorting\nadd better tests\nuse a data provider in the tests.", "createdAt": "2020-11-25T21:47:15Z", "url": "https://github.com/broadinstitute/picard/pull/1612", "merged": true, "mergeCommit": {"oid": "70dd405a072911c4b1512b0dd02cd7d635838de6"}, "closed": true, "closedAt": "2021-01-21T23:37:17Z", "author": {"login": "yfarjoun"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgFaRbAH2gAyNTI3NzA3MzM4OjFlM2UxMjk0MDRjYThmOGE3Njc1ODE0ZTA3OTY4ZmE2NTE3YzYwYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyUOdygFqTU3MzMwODU5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e3e129404ca8f8a7675814e07968fa6517c60a6", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/1e3e129404ca8f8a7675814e07968fa6517c60a6", "committedDate": "2020-11-25T21:41:02Z", "message": "- IntervalListToBed was sorting the output lexicographically rather than looking at the sequence dictionary\n- added proper testing. (with non-lexicographic order...)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/dcce4531b8446832f26a976ee50d0382d7705c46", "committedDate": "2020-11-25T21:44:53Z", "message": "- fixed imports\n- add another unsorted output (bed)\n- remove unused code\n- fix whitespaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4OTE5MDA2", "url": "https://github.com/broadinstitute/picard/pull/1612#pullrequestreview-538919006", "createdAt": "2020-11-26T00:25:41Z", "commit": {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMDoyNTo0MVrOH6HvNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMDoyNzo1M1rOH6HxTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwNjIyOA==", "bodyText": "clever", "url": "https://github.com/broadinstitute/picard/pull/1612#discussion_r530706228", "createdAt": "2020-11-26T00:25:41Z", "author": {"login": "nh13"}, "path": "testdata/picard/util/interval_list_to_bed_test.bed", "diffHunk": "@@ -2,12 +2,12 @@ chr1\t0\t50\ttarget_at_chrom_start\t333\t+\n chr1\t99\t110\ttarget_1\t333\t+\n chr2\t199\t220\ttarget_2\t333\t-\n chr3\t299\t330\ttarget_3\t333\t+\n-chr4\t399\t440\ttarget_4\t333\t+\n chr5\t499\t550\ttarget_5\t333\t-\n chr5\t4999\t5150\toverlapping_1\t333\t+\n chr5\t5099\t5250\toverlapping_2\t333\t-\n chr5\t5199\t5350\toverlapping_3\t333\t-\n chr5\t5299\t5450\toverlapping_4\t333\t+\n chr5\t9999\t10000\tone_base_feature\t333\t+\n chr5\t10000\t10000\tzero_base_feature\t333\t+\n-chr5\t999999\t1000000\ttarget_at_chrom_end\t333\t+\n\\ No newline at end of file\n+chr5\t999999\t1000000\ttarget_at_chrom_end\t333\t+\n+chr4\t399\t440\ttarget_4\t333\t+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwNjQ1NA==", "bodyText": "Any chance you can write 1-2 lines of comments about the properties of these BED files (ex chr5/chr4 are out of karyotype order)?  That way we don't have to look at the test files to know (but can look to verify).", "url": "https://github.com/broadinstitute/picard/pull/1612#discussion_r530706454", "createdAt": "2020-11-26T00:26:40Z", "author": {"login": "nh13"}, "path": "src/test/java/picard/util/IntervalListToBedTest.java", "diffHunk": "@@ -14,57 +15,41 @@\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n-    private final File BED_FILE      = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n-\n-    @Test\n-    public void testConvertToBed() throws Exception {\n-        final IntervalListToBed program = new IntervalListToBed();\n-        final File tmp = File.createTempFile(\"interval_list_to_bed_test_output\", \".bed\");\n-        tmp.deleteOnExit();\n-\n-        final String[] args = {\n-                \"INPUT=\" + INTERVAL_LIST.getAbsolutePath(),\n-                \"OUTPUT=\" + tmp.getAbsolutePath(),\n-                \"SCORE=333\"\n+    private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+    private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcwNjc2NQ==", "bodyText": "some comments on what's being tested would be nice.  Even \"out-of-order gets put into karyotype order\" or \"seq dict is out of karyotype order, so sorted interval list will be too\"", "url": "https://github.com/broadinstitute/picard/pull/1612#discussion_r530706765", "createdAt": "2020-11-26T00:27:53Z", "author": {"login": "nh13"}, "path": "src/test/java/picard/util/IntervalListToBedTest.java", "diffHunk": "@@ -14,57 +15,41 @@\n     private static final String TEST_DATA_DIR = \"testdata/picard/util/\";\n     private final File INTERVAL_LIST = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.interval_list\");\n     private final File UNSORTED_INTERVAL_LIST = new File(TEST_DATA_DIR, \"unsorted_interval_list_to_bed_test.interval_list\");\n-    private final File BED_FILE      = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n-\n-    @Test\n-    public void testConvertToBed() throws Exception {\n-        final IntervalListToBed program = new IntervalListToBed();\n-        final File tmp = File.createTempFile(\"interval_list_to_bed_test_output\", \".bed\");\n-        tmp.deleteOnExit();\n-\n-        final String[] args = {\n-                \"INPUT=\" + INTERVAL_LIST.getAbsolutePath(),\n-                \"OUTPUT=\" + tmp.getAbsolutePath(),\n-                \"SCORE=333\"\n+    private final File BED_FILE = new File(TEST_DATA_DIR, \"interval_list_to_bed_test.bed\");\n+    private final File NO_SORT_BED_FILE = new File(TEST_DATA_DIR, \"no_sort_interval_list_to_bed_test.bed\");\n+\n+    @DataProvider()\n+    Object[][] testConvertILToBedData() {\n+        return new Object[][]{\n+                {INTERVAL_LIST, BED_FILE, true},\n+                {INTERVAL_LIST, NO_SORT_BED_FILE, false},\n+                {UNSORTED_INTERVAL_LIST, BED_FILE, true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcce4531b8446832f26a976ee50d0382d7705c46"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/e9e9339cd8b5eb939bf492ea3cb1e2a860a2fd33", "committedDate": "2020-12-02T20:35:19Z", "message": "responding to review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d041cf9fb7a51a0ce13dc8d33f1d5e91fbe86f1a", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/d041cf9fb7a51a0ce13dc8d33f1d5e91fbe86f1a", "committedDate": "2021-01-21T03:46:04Z", "message": "Merge branch 'master' into yf_fix_IL_to_BED_sorting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczMzA4NTk1", "url": "https://github.com/broadinstitute/picard/pull/1612#pullrequestreview-573308595", "createdAt": "2021-01-21T13:07:21Z", "commit": {"oid": "d041cf9fb7a51a0ce13dc8d33f1d5e91fbe86f1a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2346, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}