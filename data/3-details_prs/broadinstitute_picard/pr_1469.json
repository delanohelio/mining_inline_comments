{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzU0MjAw", "number": 1469, "title": "Fixes LiftoverVCF for indels (again)", "bodyText": "included getStop() from rev'ed htsJDK.\nfixes (again) #1258 which was still broken due to the call to \"make()\" in the presence of a mismatching \"END\" attribute and \"getEnd()\" result.\nmodified a test that is fixed by this commit (checked that it failing prior to the change)\n\nfixes #1258\nfixes #1280\nThanks to the several users who reported this is still a problem, and sorry for ignoring you for a year. @nh13, @kirannarta, and @duartemolha!\nDescription\nGive your PR a concise yet descriptive title\nPlease explain the changes you made here.\nExplain the motivation for making this change. What existing problem does the pull request solve?\nMention any issues fixed, addressed or otherwise related to this pull request, including issue numbers or hard links for issues in other repos.\nYou can delete these instructions once you have written your PR description.\n\nChecklist (never delete this)\nNever delete this, it is our record that procedure was followed. If you find that for whatever reason one of the checklist points doesn't apply to your PR, you can leave it unchecked but please add an explanation below.\nContent\n\n Added or modified tests to cover changes and any new functionality\n Edited the README / documentation (if applicable)\n All tests passing on Travis\n\nReview\n\n Final thumbs-up from reviewer\n Rebase, squash and reword as applicable\n\nFor more detailed guidelines, see https://github.com/broadinstitute/picard/wiki/Guidelines-for-pull-requests", "createdAt": "2020-02-15T20:22:04Z", "url": "https://github.com/broadinstitute/picard/pull/1469", "merged": true, "mergeCommit": {"oid": "f20d6ec2acc7c8ac1ee0468bd5e4f45bbc256836"}, "closed": true, "closedAt": "2020-04-06T18:14:12Z", "author": {"login": "yfarjoun"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEp_UhgH2gAyMzc1NzU0MjAwOjFhMmU1ZWVlOTVjNmE0MzRhMTBmMTUzMDI2YzBjODdlYmEyMzBmZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVAjyhgH2gAyMzc1NzU0MjAwOjZhMWJkYmUwMjc2MDIwNTQ1MDA1NjFmNzFjZjdjYmRhNDIxNGU3YjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1a2e5eee95c6a434a10f153026c0c87eba230feb", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/1a2e5eee95c6a434a10f153026c0c87eba230feb", "committedDate": "2020-02-15T20:17:03Z", "message": "- included getStop from rev'ed htsJDK.\n- fixes (again) #1258 which was still broken due to the call to \"make()\" in the presence of a mismatching \"END\" attribute and \"getEnd()\" result."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9c680235e6fc20682185be5b2e41d8edc3b07b5", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/b9c680235e6fc20682185be5b2e41d8edc3b07b5", "committedDate": "2020-02-15T21:06:19Z", "message": "- typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNDkxNjg4", "url": "https://github.com/broadinstitute/picard/pull/1469#pullrequestreview-360491688", "createdAt": "2020-02-18T16:36:03Z", "commit": {"oid": "b9c680235e6fc20682185be5b2e41d8edc3b07b5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTAxNzU4", "url": "https://github.com/broadinstitute/picard/pull/1469#pullrequestreview-360501758", "createdAt": "2020-02-18T16:48:35Z", "commit": {"oid": "b9c680235e6fc20682185be5b2e41d8edc3b07b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0ODozNVrOFrKKGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0ODozNVrOFrKKGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5OTUxMw==", "bodyText": "bingo", "url": "https://github.com/broadinstitute/picard/pull/1469#discussion_r380799513", "createdAt": "2020-02-18T16:48:35Z", "author": {"login": "nh13"}, "path": "src/test/java/picard/util/LiftoverVcfTest.java", "diffHunk": "@@ -1124,36 +1149,73 @@ public void testLeftAlignVariants(final VariantContext source, final ReferenceSe\n         stop = 1049;\n         offset = 0;\n         builder.start(start).stop(stop).alleles(CollectionUtil.makeList(AAAARef, AAA));\n-        result_builder.start(start + offset).stop(stop + offset).alleles(CollectionUtil.makeList(AAAARef, AAA));\n+        resultBuilder.start(start + offset).stop(stop + offset).alleles(CollectionUtil.makeList(AAAARef, AAA));\n         genotypeBuilder.alleles(builder.getAlleles());\n-        resultGenotypeBuilder.alleles(result_builder.getAlleles());\n+        resultGenotypeBuilder.alleles(resultBuilder.getAlleles());\n         builder.genotypes(genotypeBuilder.make());\n-        result_builder.genotypes(resultGenotypeBuilder.make());\n-        tests.add(new Object[]{liftOver, twoIntervalChainReference, builder.make(), result_builder.make()});\n+        resultBuilder.genotypes(resultGenotypeBuilder.make());\n+        tests.add(new Object[]{liftOver, twoIntervalChainReference, builder.make(), resultBuilder.make()});\n \n         // near start of second interval snp\n         builder.source(\"test13\");\n         start = 1046;\n         builder.start(start).stop(start).alleles(CollectionUtil.makeList(ARef, T));\n-        result_builder.start(start + offset).stop(start + offset).alleles(CollectionUtil.makeList(ARef, T));\n+        resultBuilder.start(start + offset).stop(start + offset).alleles(CollectionUtil.makeList(ARef, T));\n         genotypeBuilder.alleles(builder.getAlleles());\n-        resultGenotypeBuilder.alleles(result_builder.getAlleles());\n+        resultGenotypeBuilder.alleles(resultBuilder.getAlleles());\n         builder.genotypes(genotypeBuilder.make());\n-        result_builder.genotypes(resultGenotypeBuilder.make());\n-        tests.add(new Object[]{liftOver, twoIntervalChainReference, builder.make(), result_builder.make()});\n+        resultBuilder.genotypes(resultGenotypeBuilder.make());\n+        tests.add(new Object[]{liftOver, twoIntervalChainReference, builder.make(), resultBuilder.make()});\n \n         return tests.iterator();\n     }\n \n-    @Test(dataProvider = \"indelNoFlipData\")\n-    public void testLiftOverSimpleIndels(final LiftOver liftOver, final ReferenceSequence reference, final VariantContext source, final VariantContext result) {\n+    @DataProvider\n+    public Iterator<Object[]> cleanIndelNoFlipData(){\n+        Iterator<Object[]> sourceIterator = indelNoFlipData();\n \n-        final Interval target = liftOver.liftOver(new Interval(source.getContig(), source.getStart(), source.getEnd()), .95);\n+        return new Iterator<Object[]>() {\n+            @Override\n+            public boolean hasNext() {\n+                return sourceIterator.hasNext();\n+            }\n+\n+            @Override\n+            public Object[] next() {\n+                final Object[] next = sourceIterator.next();\n+                final LiftOver liftOver = (LiftOver) next[0];\n+                final VariantContext source = (VariantContext) next[2];\n+                final VariantContext result = (VariantContext) next[3];\n+                return new Object[]{\n+                        liftOver,\n+                        Optional.ofNullable(source).map(v -> new VariantContextBuilder(v).rmAttribute(VCFConstants.END_KEY).make()).orElse(null),\n+                        Optional.ofNullable(result).map(v -> new VariantContextBuilder(v).rmAttribute(VCFConstants.END_KEY).make()).orElse(null)\n+                };\n+            }\n+        };\n+    }\n+\n+    @Test(dataProvider = \"cleanIndelNoFlipData\")\n+    public void testLiftOverSimpleIndels(final LiftOver liftOver, final VariantContext source, final VariantContext result) {\n+\n+        final Interval target = liftOver.liftOver(new Interval(source.getContig(), source.getStart(), source.getEnd()), 1);\n+\n+        final VariantContextBuilder vcb = LiftoverUtils.liftSimpleVariantContext(source, target);\n+        // liftSimpleVariantContext doesn't take care of end attributes...\n \n-        VariantContextBuilder vcb = LiftoverUtils.liftSimpleVariantContext(source, target);\n         VcfTestUtils.assertEquals(vcb == null ? null : vcb.make(), result);\n     }\n \n+    @Test(dataProvider = \"indelNoFlipData\")\n+    public void testLiftOverIndels(final LiftOver liftOver, final ReferenceSequence reference, final VariantContext source, final VariantContext result) {\n+\n+        final Interval target = liftOver.liftOver(new Interval(source.getContig(), source.getStart(), source.getEnd()), 1);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c680235e6fc20682185be5b2e41d8edc3b07b5"}, "originalPosition": 378}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2366b461d715a3ac4e2766b13a39fe29f2862c97", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/2366b461d715a3ac4e2766b13a39fe29f2862c97", "committedDate": "2020-02-18T20:27:02Z", "message": "- making Symbolic Alleles great again!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f93689dd5e1cdb05a0f3d6e9207fb88d16f2ef4b", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/f93689dd5e1cdb05a0f3d6e9207fb88d16f2ef4b", "committedDate": "2020-02-19T12:46:55Z", "message": "- WIP. problems with tests...."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "828705bdd73486698c7540d441db0db5dd59f8e2", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/828705bdd73486698c7540d441db0db5dd59f8e2", "committedDate": "2020-02-19T20:33:10Z", "message": "- WIP. problems with tests...."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d676561eaefa65fa35902db93436982693347d", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/34d676561eaefa65fa35902db93436982693347d", "committedDate": "2020-02-19T22:42:29Z", "message": "- Greatly simplified liftover logic for indels.\n- Symbolic alleles are now lifted over as well, by simply carrying them along."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f81b94e4550d918e454711e4fb9a1d96929ff40", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/6f81b94e4550d918e454711e4fb9a1d96929ff40", "committedDate": "2020-02-19T22:52:03Z", "message": "- cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd95c01cda9f8f61f638a6007281b1730858d92c", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/cd95c01cda9f8f61f638a6007281b1730858d92c", "committedDate": "2020-03-25T19:30:44Z", "message": "Merge branch 'master' into yf_liftover_still_has_issues_with_END_attribute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTI0OTc2", "url": "https://github.com/broadinstitute/picard/pull/1469#pullrequestreview-362124976", "createdAt": "2020-02-20T18:16:16Z", "commit": {"oid": "34d676561eaefa65fa35902db93436982693347d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoxNjoxNlrOFsd-gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo0MTo1NFrOGAYguw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3MjgwMA==", "bodyText": "Not sure if the sun/oracle java code guidelines cover streaming operations yet, but I think it's more readable if each stream segment starts a new line:\n        return vc.getAlleles().stream()\n                .filter(a -> !a.isSymbolic())\n                .filter(a -> !a.equals(Allele.SPAN_DEL))\n                .anyMatch(a -> a.length() != 1);", "url": "https://github.com/broadinstitute/picard/pull/1469#discussion_r382172800", "createdAt": "2020-02-20T18:16:16Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/util/LiftoverUtils.java", "diffHunk": "@@ -182,33 +190,30 @@ protected static VariantContextBuilder reverseComplementVariantContext(final Var\n         return vcb;\n     }\n \n-    private static List<Allele> reverseComplementAlleles(final List<Allele> originalAlleles, final Interval target, final ReferenceSequence refSeq, final boolean isIndel, final boolean addToStart) {\n+    private static boolean isIndelForLiftover(final VariantContext vc){\n+        final Allele ref = vc.getReference();\n+        if (ref.length() != 1) {\n+            return true;\n+        }\n+\n+       return vc.getAlleles().stream().filter(a -> !a.isSymbolic()).filter(a -> !a.equals(Allele.SPAN_DEL)).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d676561eaefa65fa35902db93436982693347d"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1MzcxOA==", "bodyText": "whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .filter(a->!a.equals(Allele.SPAN_DEL)&&!a.isSymbolic())\n          \n          \n            \n                            .filter(a -> !a.equals(Allele.SPAN_DEL) && !a.isSymbolic())\n          \n      \n    \n    \n  \n\nalso, above you write filter(a -> !a.isSymbolic()).filter(a -> !a.equals(Allele.SPAN_DEL). The version with one call to filter() is probably clearer, either way I would use the same form in both places to be consistent.", "url": "https://github.com/broadinstitute/picard/pull/1469#discussion_r403053718", "createdAt": "2020-04-03T14:40:27Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/util/LiftoverUtils.java", "diffHunk": "@@ -365,7 +359,9 @@ protected static void leftAlignVariant(final VariantContextBuilder builder, fina\n \n         // Put each allele into the alleleBasesMap unless it is a spanning deletion.\n         // Spanning deletions are dealt with as a special case later in fixedAlleleMap.\n-        alleles.stream().filter(a->!a.equals(Allele.SPAN_DEL)).forEach(a -> alleleBasesMap.put(a, a.getBases()));\n+        alleles.stream()\n+                .filter(a->!a.equals(Allele.SPAN_DEL)&&!a.isSymbolic())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd95c01cda9f8f61f638a6007281b1730858d92c"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NDc3OQ==", "bodyText": "whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static boolean isIndelForLiftover(final VariantContext vc){\n          \n          \n            \n                private static boolean isIndelForLiftover(final VariantContext vc) {", "url": "https://github.com/broadinstitute/picard/pull/1469#discussion_r403054779", "createdAt": "2020-04-03T14:41:54Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/util/LiftoverUtils.java", "diffHunk": "@@ -183,33 +184,26 @@ protected static VariantContextBuilder reverseComplementVariantContext(final Var\n         return vcb;\n     }\n \n-    private static List<Allele> reverseComplementAlleles(final List<Allele> originalAlleles, final Interval target, final ReferenceSequence refSeq, final boolean isIndel, final boolean addToStart) {\n-        final List<Allele> alleles = new ArrayList<>();\n-\n-        for (final Allele oldAllele : originalAlleles) {\n-            alleles.add(LiftoverUtils.reverseComplement(oldAllele, target, refSeq, isIndel, addToStart));\n+    private static boolean isIndelForLiftover(final VariantContext vc){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd95c01cda9f8f61f638a6007281b1730858d92c"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f59b04eed5bb74fe6e6d6f2dfd8429e2eb375be1", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/f59b04eed5bb74fe6e6d6f2dfd8429e2eb375be1", "committedDate": "2020-04-03T18:46:06Z", "message": "-whitespaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1bdbe027602054500561f71cf7cbda4214e7b4", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/6a1bdbe027602054500561f71cf7cbda4214e7b4", "committedDate": "2020-04-06T15:37:35Z", "message": "Merge branch 'master' into yf_liftover_still_has_issues_with_END_attribute"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2396, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}