{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNzk4MTIz", "number": 1556, "title": "Make Fingerprint checking fail when run on a truly unsorted file (currently it returns a non-informative fingerprint)", "bodyText": "fix fingerprintChecker test\nmake sure that fingerprint checker fails on sam file with \"unsorted\" sort order if it fails to find any information.\nadd test.\nadd logging to inform whether (sam) file is being read using an index or not.\n\nDescription\nGive your PR a concise yet descriptive title\nPlease explain the changes you made here.\nExplain the motivation for making this change. What existing problem does the pull request solve?\nMention any issues fixed, addressed or otherwise related to this pull request, including issue numbers or hard links for issues in other repos.\nYou can delete these instructions once you have written your PR description.\n\nChecklist (never delete this)\nNever delete this, it is our record that procedure was followed. If you find that for whatever reason one of the checklist points doesn't apply to your PR, you can leave it unchecked but please add an explanation below.\nContent\n\n Added or modified tests to cover changes and any new functionality\n Edited the README / documentation (if applicable)\n All tests passing on Travis\n\nReview\n\n Final thumbs-up from reviewer\n Rebase, squash and reword as applicable\n\nFor more detailed guidelines, see https://github.com/broadinstitute/picard/wiki/Guidelines-for-pull-requests", "createdAt": "2020-08-04T14:19:36Z", "url": "https://github.com/broadinstitute/picard/pull/1556", "merged": true, "mergeCommit": {"oid": "da47fc6ea4bd60b0c2c358249baf1a4abcad1688"}, "closed": true, "closedAt": "2020-08-04T16:56:25Z", "author": {"login": "yfarjoun"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7nV6pgH2gAyNDYyNzk4MTIzOjM0NGNjMDZjNTczYTJiMmZiOGE1NjkyMTY1MTUxOGE0NDMxZWI1MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7pMS0gH2gAyNDYyNzk4MTIzOmFiZDk0ZjJkNjg0MGIxY2QyOGNmMGZmZWJkZjI2N2RhOWZkZjc1NmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/344cc06c573a2b2fb8a56921651518a4431eb530", "committedDate": "2020-08-04T14:17:51Z", "message": "- fix fingerprintChecker test\n- make sure that fingerprint checker fails on sam file with \"unsorted\" sort order if it fails to find any information.\n- add test.\n- add logging to inform whether (sam) file is being read using an index or not."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwODY5NzY1", "url": "https://github.com/broadinstitute/picard/pull/1556#pullrequestreview-460869765", "createdAt": "2020-08-04T14:29:56Z", "commit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyOTo1NlrOG7jGeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDozNTo0NFrOG7jXmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5NDI2NQ==", "bodyText": "Is it usual to log before throw in picard? Normally I would expect code to throw and then rely on the catch point to log. This is also usually shorter to write as code has (potentially) many throw points but few catch points.", "url": "https://github.com/broadinstitute/picard/pull/1556#discussion_r465094265", "createdAt": "2020-08-04T14:29:56Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/fingerprint/FingerprintChecker.java", "diffHunk": "@@ -575,6 +582,12 @@ public IntervalList getLociToGenotype(final Collection<Fingerprint> fingerprints\n             }\n         }\n \n+        if (!foundALocus && in.getFileHeader().getSortOrder()!= SAMFileHeader.SortOrder.coordinate) {\n+            final PicardException noReadsFound = new PicardException(String.format(\"Couldn't even find one locus with reads to fingerprint in file %s, which in addition isn't coordinate-sorted. Please sort the file and try again.\", samFile));\n+            log.error(noReadsFound);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5NDY3Mw==", "bodyText": "whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!foundALocus && in.getFileHeader().getSortOrder()!= SAMFileHeader.SortOrder.coordinate) {\n          \n          \n            \n                    if (!foundALocus && in.getFileHeader().getSortOrder() != SAMFileHeader.SortOrder.coordinate) {", "url": "https://github.com/broadinstitute/picard/pull/1556#discussion_r465094673", "createdAt": "2020-08-04T14:30:24Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/fingerprint/FingerprintChecker.java", "diffHunk": "@@ -575,6 +582,12 @@ public IntervalList getLociToGenotype(final Collection<Fingerprint> fingerprints\n             }\n         }\n \n+        if (!foundALocus && in.getFileHeader().getSortOrder()!= SAMFileHeader.SortOrder.coordinate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5NDc5OQ==", "bodyText": "whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                foundALocus=true;\n          \n          \n            \n                                foundALocus = true;", "url": "https://github.com/broadinstitute/picard/pull/1556#discussion_r465094799", "createdAt": "2020-08-04T14:30:35Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/fingerprint/FingerprintChecker.java", "diffHunk": "@@ -556,6 +562,7 @@ public IntervalList getLociToGenotype(final Collection<Fingerprint> fingerprints\n                 }\n \n                 if (fingerprintIdDetailsMap.containsKey(rg)) {\n+                    foundALocus=true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5NTA1Mg==", "bodyText": "whitespace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(!in.hasIndex()){\n          \n          \n            \n                    if (!in.hasIndex()) {", "url": "https://github.com/broadinstitute/picard/pull/1556#discussion_r465095052", "createdAt": "2020-08-04T14:30:56Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/fingerprint/FingerprintChecker.java", "diffHunk": "@@ -480,6 +480,12 @@ public IntervalList getLociToGenotype(final Collection<Fingerprint> fingerprints\n \n         checkDictionaryGoodForFingerprinting(in.getFileHeader().getSequenceDictionary());\n \n+        if(!in.hasIndex()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5ODY0OQ==", "bodyText": "unnecessary new\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new Object[]{\"NA12891.over.fingerprints.r1.sam\", true},\n          \n          \n            \n                           {\"NA12891.over.fingerprints.r1.sam\", true},", "url": "https://github.com/broadinstitute/picard/pull/1556#discussion_r465098649", "createdAt": "2020-08-04T14:35:44Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/fingerprint/FingerprintCheckerTest.java", "diffHunk": "@@ -151,11 +151,26 @@ public void testFingerprintSwapEqual(final File vcfFile, final File genotypesFil\n         }\n     }\n \n-    @Test(expectedExceptions = PicardException.class)\n-    public void testTerminateOnBadFile() {\n+    @DataProvider\n+    Object[][] samFilesforFingerprinting() {\n+        return new Object[][]{\n+                new Object[]{\"NA12891.over.fingerprints.r1.sam\", true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344cc06c573a2b2fb8a56921651518a4431eb530"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd94f2d6840b1cd28cf0ffebdf267da9fdf756f", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/abd94f2d6840b1cd28cf0ffebdf267da9fdf756f", "committedDate": "2020-08-04T16:27:09Z", "message": "- responding to review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2300, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}