{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NzA3Njgw", "number": 1613, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNToyNFrOE_VE3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDo0OTozMFrOE_VYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQxMDUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/analysis/CollectMultipleMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNToyNVrOH8-vYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMjo1MjozMFrOH9DGAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNDU0Nw==", "bodyText": "Why is this true?", "url": "https://github.com/broadinstitute/picard/pull/1613#discussion_r533704547", "createdAt": "2020-12-01T20:35:25Z", "author": {"login": "khajoue2"}, "path": "src/main/java/picard/analysis/CollectMultipleMetrics.java", "diffHunk": "@@ -669,6 +669,8 @@ public String getHelpDoc() {\n         }\n         programsToRun = new LinkedHashSet<>(PROGRAM);\n \n+        checkRInstallation(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405abceb7b7d60e9b5c3b72902b043601aa42fdd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc3NTg3NQ==", "bodyText": "Almost all of the metrics within CollectMultipleMetrics are given a CHART_OUTPUT/Histogram_FILE which means the rscript will be run. CollectMultipleMetrics itself doesn't have those as an argument. Since those metrics will run the rscript anyways, I just put true.", "url": "https://github.com/broadinstitute/picard/pull/1613#discussion_r533775875", "createdAt": "2020-12-01T22:52:30Z", "author": {"login": "sophiacrennan"}, "path": "src/main/java/picard/analysis/CollectMultipleMetrics.java", "diffHunk": "@@ -669,6 +669,8 @@ public String getHelpDoc() {\n         }\n         programsToRun = new LinkedHashSet<>(PROGRAM);\n \n+        checkRInstallation(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNDU0Nw=="}, "originalCommit": {"oid": "405abceb7b7d60e9b5c3b72902b043601aa42fdd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQzMTE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/cmdline/CommandLineProgram.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDo0MToyM1rOH8-78A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDo0MToyM1rOH8-78A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNzc2MA==", "bodyText": "space between if and (", "url": "https://github.com/broadinstitute/picard/pull/1613#discussion_r533707760", "createdAt": "2020-12-01T20:41:23Z", "author": {"login": "gbggrant"}, "path": "src/main/java/picard/cmdline/CommandLineProgram.java", "diffHunk": "@@ -497,4 +498,18 @@ public static boolean hasWebDocumentation(final Class<?> clazz){\n     public static String getFaqLink() {\n         return \"To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp\";\n     }\n+\n+    /**\n+     * Check if R is installed\n+     * @param has_chart_output\n+     */\n+    public static void checkRInstallation(final boolean has_chart_output) {\n+        if(has_chart_output) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405abceb7b7d60e9b5c3b72902b043601aa42fdd"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQ1OTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/cmdline/CommandLineProgram.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDo0OTozMFrOH8_NQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDo0OTozMFrOH8_NQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcxMjE5Mw==", "bodyText": "Rather than throwing an exception here, could you return the error string (or just a true / false) from this class if R is not installed?\nAnd then in the calling program's CustomCommandLineValidator code you could just check if checkRInstallation failed and return a string array like:\n         if (!checkRInstallation(CHART_OUTPUT != null)) { return new String[]{\"R is not installed on this machine. It is required for creating the chart.\"}; }\nThis is more in line with how CustomCommandLine validation should work.\nI think the usage in CollectInsertSizeMetrics.java is more correct than that in CollectRnaSeqMetrics.java", "url": "https://github.com/broadinstitute/picard/pull/1613#discussion_r533712193", "createdAt": "2020-12-01T20:49:30Z", "author": {"login": "gbggrant"}, "path": "src/main/java/picard/cmdline/CommandLineProgram.java", "diffHunk": "@@ -497,4 +498,18 @@ public static boolean hasWebDocumentation(final Class<?> clazz){\n     public static String getFaqLink() {\n         return \"To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp\";\n     }\n+\n+    /**\n+     * Check if R is installed\n+     * @param has_chart_output\n+     */\n+    public static void checkRInstallation(final boolean has_chart_output) {\n+        if(has_chart_output) {\n+            try {\n+                RExecutor.executeFromClasspath(\"picard/analysis/checkRInstallation.R\");\n+            } catch (htsjdk.samtools.SAMException e) {\n+                throw new PicardException(\"R is not installed on this machine. It is required for creating the chart.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405abceb7b7d60e9b5c3b72902b043601aa42fdd"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 675, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}