{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzMwODcz", "number": 1578, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowNDo0NVrOEk-_rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo1NDozMVrOElGP6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjE2MzAwOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowNDo0NVrOHUOl2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDowNDo0NVrOHUOl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3MjYzNQ==", "bodyText": "I think it would probably be simpler to just take as input the integer and the expected Sex, and the test that Sex.fromCode(i) == sex.  You don't really need the false tests, once you know that Sex.fromCode returns one value, you know it doesn't return any of the other values.", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490972635", "createdAt": "2020-09-18T14:04:45Z", "author": {"login": "kachulis"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},\n+                new Object[]{Sex.Female, \"Female\", true},\n+                new Object[]{Sex.Unknown, \"Unknown\", true},\n+                new Object[]{Sex.NotReported, \"NotReported\", true},\n+                new Object[]{Sex.Female, \"M\", false},\n+                new Object[]{Sex.Unknown, \"female\", false}\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i, final boolean b){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjE5NTU3OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoxMjo0M1rOHUO5-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoxMjo0M1rOHUO5-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3Nzc4Nw==", "bodyText": "test out different cases and full/short versions for each value", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490977787", "createdAt": "2020-09-18T14:12:43Z", "author": {"login": "kachulis"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjIwMjExOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoxNDoxOVrOHUO-BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoxNDoxOVrOHUO-BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk3ODgyMQ==", "bodyText": "same here, don't need the true/false, can just test that the correct enum value is returned", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490978821", "createdAt": "2020-09-18T14:14:19Z", "author": {"login": "kachulis"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},\n+                new Object[]{Sex.Female, 2, true},\n+                new Object[]{Sex.Unknown, 0, true},\n+                new Object[]{Sex.NotReported, 0, false},\n+                new Object[]{Sex.Female, 1, false},\n+                new Object[]{Sex.Unknown, 2, false},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, \"M\", true},\n+                new Object[]{Sex.Female, \"Female\", true},\n+                new Object[]{Sex.Unknown, \"Unknown\", true},\n+                new Object[]{Sex.NotReported, \"NotReported\", true},\n+                new Object[]{Sex.Female, \"M\", false},\n+                new Object[]{Sex.Unknown, \"female\", false}\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i, final boolean b){\n+        Assert.assertEquals(sex == Sex.fromCode(i), b);\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s, final boolean b){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjI3Njk2OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozMTowOVrOHUPsAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozMTowOVrOHUPsAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5MDU5NA==", "bodyText": "operator new not needed here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new Object[]{Sex.Male, 1, true},\n          \n          \n            \n                           {Sex.Male, 1, true},", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r490990594", "createdAt": "2020-09-18T14:31:09Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1, true},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09079b0dce7b9da66a9e9c68bd13ae2ac7401a4d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzEwMTgxOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzowOVrOHUXqGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzowOVrOHUXqGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTE3Nw==", "bodyText": "unnecessary new\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new Object[]{Sex.Male, 1},\n          \n          \n            \n                            {Sex.Male, 1},", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121177", "createdAt": "2020-09-18T18:27:09Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857bce2525ea6106402055d7059844e39e5dc73"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzEwMjY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzoyNFrOHUXqoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzoyNFrOHUXqoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTMxMw==", "bodyText": "fix whitespace\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            };\n          \n          \n            \n                        };", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121313", "createdAt": "2020-09-18T18:27:24Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857bce2525ea6106402055d7059844e39e5dc73"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzEwMzMzOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzozOVrOHUXrDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzozOVrOHUXrDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTQyMQ==", "bodyText": "more whitespace\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromCode(final Sex sex, final int i){\n          \n          \n            \n                public void testFromCode(final Sex sex, final int i) {", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121421", "createdAt": "2020-09-18T18:27:39Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857bce2525ea6106402055d7059844e39e5dc73"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzEwMzY5OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzo0NlrOHUXrRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyNzo0NlrOHUXrRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTQ3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromString(final Sex sex, final String s){\n          \n          \n            \n                public void testFromString(final Sex sex, final String s) {", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121478", "createdAt": "2020-09-18T18:27:46Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){\n+        Assert.assertTrue(sex == Sex.fromCode(i));\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857bce2525ea6106402055d7059844e39e5dc73"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzEwNDcxOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyODoxMVrOHUXr9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODoyODoxMVrOHUXr9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMTY1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testFromStringException(){\n          \n          \n            \n                public void testFromStringException() {\n          \n      \n    \n    \n  \n\nreformatting in an IDE like Intellij would work too", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491121655", "createdAt": "2020-09-18T18:28:11Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name=\"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][] {\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},\n+                new Object[]{Sex.Unknown, 0},\n+                };\n+    }\n+\n+    @DataProvider(name=\"testSexDataProviderStr\")\n+    public Object[][] testSexDataProviderStr() {\n+        return new Object[][] {\n+                {Sex.Female, \"F\"},\n+                {Sex.Female, \"f\"},\n+                {Sex.Female, \"Female\"},\n+                {Sex.Female, \"female\"},\n+                {Sex.Male, \"M\"},\n+                {Sex.Male, \"m\"},\n+                {Sex.Male, \"Male\"},\n+                {Sex.Male, \"male\"},\n+                {Sex.Unknown, \"Unknown\"},\n+                {Sex.Unknown, \"U\"},\n+                {Sex.Unknown, \"unknown\"},\n+                {Sex.Unknown, \"u\"},\n+        };\n+    }\n+\n+    /**\n+     *Test Methods within Sex enum\n+     */\n+\n+    @Test(dataProvider=\"testSexDataProviderInt\")\n+    public void testFromCode(final Sex sex, final int i){\n+        Assert.assertTrue(sex == Sex.fromCode(i));\n+    }\n+\n+    @Test(dataProvider=\"testSexDataProviderStr\")\n+    public void testFromString(final Sex sex, final String s){\n+        Assert.assertTrue(sex == Sex.fromString(s));\n+    }\n+\n+    @Test(expectedExceptions = PicardException.class)\n+    public void testFromStringException(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857bce2525ea6106402055d7059844e39e5dc73"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzM1MTQ0OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/pedigree/SexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo1NDozMVrOHUaDWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo1NDozMVrOHUaDWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MDQwOQ==", "bodyText": "still need to remove the new Object[] here.", "url": "https://github.com/broadinstitute/picard/pull/1578#discussion_r491160409", "createdAt": "2020-09-18T19:54:31Z", "author": {"login": "kachulis"}, "path": "src/test/java/picard/pedigree/SexTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package picard.pedigree;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import picard.PicardException;\n+\n+import java.util.Arrays;\n+\n+public class SexTest {\n+    @DataProvider(name = \"testSexDataProviderInt\")\n+    public Object[][] testSexDataProviderInt() {\n+        return new Object[][]{\n+                new Object[]{Sex.Male, 1},\n+                new Object[]{Sex.Female, 2},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde797a49b61767883e41c1fde2e9b90b819c877"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 635, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}