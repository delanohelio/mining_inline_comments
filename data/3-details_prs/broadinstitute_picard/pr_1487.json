{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTE4NjYz", "number": 1487, "title": "Only requiring that the input VCF be indexed if an INTERVAL is provided", "bodyText": "Only requiring that the input VCF be indexed if an INTERVAL is provided (since only then the vcf qill be queried)\nfixed the testing so it's a bit quicker (by running the code once on every input file rather than once for every test)\nfixed the javaDoc to describe when index is needed\n\nfixes #1477", "createdAt": "2020-03-16T22:09:40Z", "url": "https://github.com/broadinstitute/picard/pull/1487", "merged": true, "mergeCommit": {"oid": "d7559730519c04196b6ac882538d909d1e5700c4"}, "closed": true, "closedAt": "2020-04-06T15:36:52Z", "author": {"login": "yfarjoun"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOVjRIgH2gAyMzg5NTE4NjYzOjIxNGU3OWZmYmVjNWRhNzRlZmFhZjEzMTdhOTM3OGYzOTRmYjM4ZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUGz_RgH2gAyMzg5NTE4NjYzOjkxOGJhNTNlMmM4ZjgxZTM1ZWYzYWZmYWQxMWNhNWNkMzU0NmEwY2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "214e79ffbec5da74efaaf1317a9378f394fb38d5", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/214e79ffbec5da74efaaf1317a9378f394fb38d5", "committedDate": "2020-03-16T22:07:33Z", "message": "- only requiring that the input VCF be indexed if an INTERVAL is also provided (since only then the vcf qill be queried)\n- fixed the testing so it's a bit quicker\n- fixed the javaDoc to describe when index is needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48462507746637f721f1ab6e2291b236ca9a44c9", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/48462507746637f721f1ab6e2291b236ca9a44c9", "committedDate": "2020-03-16T22:10:46Z", "message": "Merge branch 'master' into yf_make_CollectSamErrorMetrics_work_with_unindexed_vcf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da796190d15e7494aac31607e5df9dddf9825040", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/da796190d15e7494aac31607e5df9dddf9825040", "committedDate": "2020-03-19T15:33:27Z", "message": "- forgot to update one test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbfb94c8c14765ad49b8194740054663b4aebe55", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/dbfb94c8c14765ad49b8194740054663b4aebe55", "committedDate": "2020-03-19T19:46:30Z", "message": "- @BeforeTest more appropriate than @BeforeClass?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/be91bf4c6d67b570de1ea0d9ba13d2c1720eca39", "committedDate": "2020-03-25T19:23:49Z", "message": "Merge branch 'master' into yf_make_CollectSamErrorMetrics_work_with_unindexed_vcf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjYyNTU0", "url": "https://github.com/broadinstitute/picard/pull/1487#pullrequestreview-387262554", "createdAt": "2020-04-03T13:37:30Z", "commit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzozNzozMFrOGAV0Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo0MzoyMFrOGAWCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDU2Mg==", "bodyText": "Odd indent, or maybe github is showing the diff wrong?", "url": "https://github.com/broadinstitute/picard/pull/1487#discussion_r403010562", "createdAt": "2020-04-03T13:37:30Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/sam/SamErrorMetric/CollectSamErrorMetricsTest.java", "diffHunk": "@@ -294,14 +323,9 @@ public void testOneCovariateErrorMetrics(final String errorSubscript, final File\n         Assert.assertEquals(metric, expectedMetric);\n     }\n \n-    @DataProvider(name = \"OneCovariateIndelErrorMetricsDataProvider\")\n+    @DataProvider()\n     public Object[][] oneCovariateIndelErrorMetricsDataProvider() {\n-        final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n-        final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n-        final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n-        final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n-        final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n-        final int priorQ = 30;\n+                final int priorQ = 30;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMTQxNg==", "bodyText": "It's hard to see in the diff but it looks like this file is no longer deleted on exit, is that correct?", "url": "https://github.com/broadinstitute/picard/pull/1487#discussion_r403011416", "createdAt": "2020-04-03T13:38:50Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/sam/SamErrorMetric/CollectSamErrorMetricsTest.java", "diffHunk": "@@ -422,28 +446,10 @@ public void testOneCovariateErrorMetrics(final String errorSubscript, final File\n         };\n     }\n \n-    @Test(dataProvider = \"OneCovariateIndelErrorMetricsDataProvider\")\n+    @Test(dataProvider = \"oneCovariateIndelErrorMetricsDataProvider\")\n     public void testOneCovariateIndelErrorMetrics(final String errorSubscript, final File samFile, final int priorQ, BaseErrorMetric expectedMetric) {\n-        final File referenceFile = CHR_M_REFERENCE;\n-        final File vcf = new File(TEST_DIR, \"NIST.selected.vcf\");\n \n-        final File outputBaseFileName = new File(OUTPUT_DATA_PATH, \"test\");\n-        final File errorByAll = new File(outputBaseFileName.getAbsolutePath() + errorSubscript);\n-        errorByAll.deleteOnExit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMzg3Mw==", "bodyText": "This is run before every test, so this will create a new temp dir for each test, and store it in a static field. Is that what you want to do here? If each test gets its own temp dir, using a non-static field would make that clearer.", "url": "https://github.com/broadinstitute/picard/pull/1487#discussion_r403013873", "createdAt": "2020-04-03T13:42:41Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/sam/SamErrorMetric/CollectSamErrorMetricsTest.java", "diffHunk": "@@ -128,15 +140,52 @@ private static void parseDirective0(final String directive, final String extensi\n         }\n     }\n \n-    @DataProvider(name = \"OneCovariateErrorMetricsDataProvider\")\n-    public Object[][] oneCovariateErrorMetricsDataProvider() {\n-        final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n-        final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n-        final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n-        final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n-        final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n-        final int priorQ = 30;\n+    private final Map<File, File> errorMetrics = new HashMap<>();\n+\n+    private final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n+    private final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n+    private final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n+    private final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n+    private final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n+\n+    @BeforeTest()\n+    public void samMetricsProvider() {\n+        final File[] files = new File[]{\n+                simpleSamWithBaseErrors1,\n+                simpleSamWithBaseErrors2,\n+                simpleSingleStrandConsensusSamWithBaseErrors,\n+                simpleDuplexConsensusSamWithBaseErrors,\n+                chrMReadsWithClips};\n+\n+        OUTPUT_DATA_PATH = IOUtil.createTempDir(\"CollectSamErrorMetricsTest\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxNDI2Ng==", "bodyText": "these can all be static", "url": "https://github.com/broadinstitute/picard/pull/1487#discussion_r403014266", "createdAt": "2020-04-03T13:43:20Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/sam/SamErrorMetric/CollectSamErrorMetricsTest.java", "diffHunk": "@@ -128,15 +140,52 @@ private static void parseDirective0(final String directive, final String extensi\n         }\n     }\n \n-    @DataProvider(name = \"OneCovariateErrorMetricsDataProvider\")\n-    public Object[][] oneCovariateErrorMetricsDataProvider() {\n-        final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n-        final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n-        final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n-        final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n-        final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n-        final int priorQ = 30;\n+    private final Map<File, File> errorMetrics = new HashMap<>();\n+\n+    private final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Mjc0NjA5", "url": "https://github.com/broadinstitute/picard/pull/1487#pullrequestreview-387274609", "createdAt": "2020-04-03T13:51:25Z", "commit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MToyNVrOGAWX5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1MToyNVrOGAWX5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxOTc0OA==", "bodyText": "Does this mean that testdata/picard/sam/BamErrorMetrics/NIST.selected.vcf.idx can be deleted?", "url": "https://github.com/broadinstitute/picard/pull/1487#discussion_r403019748", "createdAt": "2020-04-03T13:51:25Z", "author": {"login": "pshapiro4broad"}, "path": "src/test/java/picard/sam/SamErrorMetric/CollectSamErrorMetricsTest.java", "diffHunk": "@@ -128,15 +140,52 @@ private static void parseDirective0(final String directive, final String extensi\n         }\n     }\n \n-    @DataProvider(name = \"OneCovariateErrorMetricsDataProvider\")\n-    public Object[][] oneCovariateErrorMetricsDataProvider() {\n-        final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n-        final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n-        final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n-        final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n-        final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n-        final int priorQ = 30;\n+    private final Map<File, File> errorMetrics = new HashMap<>();\n+\n+    private final File simpleSamWithBaseErrors1 = new File(TEST_DIR, \"simpleSamWithBaseErrors1.sam\");\n+    private final File simpleSamWithBaseErrors2 = new File(TEST_DIR, \"simpleSamWithBaseErrors2.sam\");\n+    private final File simpleSingleStrandConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleSingleStrandConsensusSamWithBaseErrors.sam\");\n+    private final File simpleDuplexConsensusSamWithBaseErrors = new File(TEST_DIR, \"simpleDuplexConsensusSamWithBaseErrors.sam\");\n+    private final File chrMReadsWithClips = new File(TEST_DIR, \"chrMReadsWithClips.sam\");\n+\n+    @BeforeTest()\n+    public void samMetricsProvider() {\n+        final File[] files = new File[]{\n+                simpleSamWithBaseErrors1,\n+                simpleSamWithBaseErrors2,\n+                simpleSingleStrandConsensusSamWithBaseErrors,\n+                simpleDuplexConsensusSamWithBaseErrors,\n+                chrMReadsWithClips};\n+\n+        OUTPUT_DATA_PATH = IOUtil.createTempDir(\"CollectSamErrorMetricsTest\", null);\n+\n+        for (final File file : files) {\n+            final File vcf = new File(TEST_DIR, \"NIST.selected.vcf\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be91bf4c6d67b570de1ea0d9ba13d2c1720eca39"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2513df8b0242407036a276e17479808d59f1153", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/a2513df8b0242407036a276e17479808d59f1153", "committedDate": "2020-04-03T20:20:12Z", "message": "- responding to review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "918ba53e2c8f81e35ef3affad11ca5cd3546a0cd", "author": {"user": {"login": "yfarjoun", "name": "Yossi Farjoun"}}, "url": "https://github.com/broadinstitute/picard/commit/918ba53e2c8f81e35ef3affad11ca5cd3546a0cd", "committedDate": "2020-04-03T20:20:47Z", "message": "Merge branch 'master' into yf_make_CollectSamErrorMetrics_work_with_unindexed_vcf"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2420, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}