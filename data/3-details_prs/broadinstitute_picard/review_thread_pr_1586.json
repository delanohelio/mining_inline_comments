{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2Mzk2Nzg2", "number": 1586, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0MTozN1rOFEHauA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo1MTo1NlrOFEOPcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODYwMTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/analysis/AlignmentSummaryMetrics.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0MTozN1rOIEFQYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDozNzowNVrOIEMESQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA==", "bodyText": "AVG_NON_ZERO_3PRIME_SOFTCLIP_LENGTH? What about the name did you want to improve?", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541151328", "createdAt": "2020-12-11T18:41:37Z", "author": {"login": "meganshand"}, "path": "src/main/java/picard/analysis/AlignmentSummaryMetrics.java", "diffHunk": "@@ -181,4 +185,12 @@\n      * PF_ALIGNED_BASES (even though these are not aligned!)\n      */\n     public double PCT_HARDCLIP;\n+\n+    /**\n+     * The average length of the soft-clipped bases at the 3' end of reads. This could be used as an estimate for\n+     * the amount by which the insert-size must be increased in order to obtain a significant reduction in bases\n+     * lost due to reading off the end of the insert.\n+     */\n+    public double AVERAGE_NON_ZERO_3PRIME_SOFTCLIP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MTczMg==", "bodyText": "\ud83e\udd37 it seems long and convoluted....was hoping for something pithier (is that really a word!?!)", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541261732", "createdAt": "2020-12-11T20:35:56Z", "author": {"login": "yfarjoun"}, "path": "src/main/java/picard/analysis/AlignmentSummaryMetrics.java", "diffHunk": "@@ -181,4 +185,12 @@\n      * PF_ALIGNED_BASES (even though these are not aligned!)\n      */\n     public double PCT_HARDCLIP;\n+\n+    /**\n+     * The average length of the soft-clipped bases at the 3' end of reads. This could be used as an estimate for\n+     * the amount by which the insert-size must be increased in order to obtain a significant reduction in bases\n+     * lost due to reading off the end of the insert.\n+     */\n+    public double AVERAGE_NON_ZERO_3PRIME_SOFTCLIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA=="}, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjkyMQ==", "bodyText": "well then I went in the wrong direction :)", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541262921", "createdAt": "2020-12-11T20:37:05Z", "author": {"login": "meganshand"}, "path": "src/main/java/picard/analysis/AlignmentSummaryMetrics.java", "diffHunk": "@@ -181,4 +185,12 @@\n      * PF_ALIGNED_BASES (even though these are not aligned!)\n      */\n     public double PCT_HARDCLIP;\n+\n+    /**\n+     * The average length of the soft-clipped bases at the 3' end of reads. This could be used as an estimate for\n+     * the amount by which the insert-size must be increased in order to obtain a significant reduction in bases\n+     * lost due to reading off the end of the insert.\n+     */\n+    public double AVERAGE_NON_ZERO_3PRIME_SOFTCLIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MTMyOA=="}, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODYxMTUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0NDoxN1rOIEFWNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0NDoxN1rOIEFWNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MjgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * returns The sum of lengths of a particular cigar operator in the provided cigar\n          \n          \n            \n                 * returns the length of the soft clip on the 3' end", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541152820", "createdAt": "2020-12-11T18:44:17Z", "author": {"login": "meganshand"}, "path": "src/main/java/picard/analysis/AlignmentSummaryMetricsCollector.java", "diffHunk": "@@ -91,6 +92,59 @@ public void acceptRecord(final SAMRecord rec, final ReferenceSequence ref) {\n         }\n     }\n \n+    /**\n+     * returns The sum of lengths of a particular cigar operator in the provided cigar\n+     *\n+     * @param cigar The input Cigar of the read\n+     * @param op The operator that is being looked for\n+     * @return Sum of lengths of the Cigar elements in cigar that are of the operator op\n+     */\n+    static private int getTotalCigarOperatorCount(final Cigar cigar, final CigarOperator op) {\n+        return cigar.getCigarElements().stream()\n+                .filter(e -> e.getOperator().equals(op))\n+                .mapToInt(CigarElement::getLength)\n+                .reduce(Integer::sum).orElse(0);\n+    }\n+\n+\n+    /**\n+     * returns The sum of lengths of a particular cigar operator in the provided cigar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODY1NzUxOnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1NjoyM1rOIEFw4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDozNjoxOVrOIEMBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1OTY1MQ==", "bodyText": "Can you add another edge case here with hard and soft clips on the same read: \"2H3S10M4S5H\"?", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541159651", "createdAt": "2020-12-11T18:56:23Z", "author": {"login": "meganshand"}, "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package picard.analysis;\n+\n+import htsjdk.samtools.Cigar;\n+import htsjdk.samtools.TextCigarCodec;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+public class AlignmentSummaryMetricsCollectorTest {\n+\n+    @DataProvider\n+    public Object[][] get3PrimeSoftClipData() {\n+        return new Object[][]{\n+                {\"20M\", true, 0},\n+                {\"20M\", false, 0},\n+\n+                {\"2H20M\", true, 0},\n+                {\"2H20M\", false, 0},\n+\n+                {\"2S20M\", false, 0},\n+                {\"2S20M\", true, 2},\n+                {\"20M2S\", true, 0},\n+                {\"20M2S\", false, 2},\n+\n+                {\"2S20M5S\", false, 5},\n+                {\"2S20M4S\", true, 2},\n+                {\"4S20M2S\", true, 4},\n+                {\"4S20M2S\", false, 2},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjExNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541262115", "createdAt": "2020-12-11T20:36:19Z", "author": {"login": "yfarjoun"}, "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package picard.analysis;\n+\n+import htsjdk.samtools.Cigar;\n+import htsjdk.samtools.TextCigarCodec;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+public class AlignmentSummaryMetricsCollectorTest {\n+\n+    @DataProvider\n+    public Object[][] get3PrimeSoftClipData() {\n+        return new Object[][]{\n+                {\"20M\", true, 0},\n+                {\"20M\", false, 0},\n+\n+                {\"2H20M\", true, 0},\n+                {\"2H20M\", false, 0},\n+\n+                {\"2S20M\", false, 0},\n+                {\"2S20M\", true, 2},\n+                {\"20M2S\", true, 0},\n+                {\"20M2S\", false, 2},\n+\n+                {\"2S20M5S\", false, 5},\n+                {\"2S20M4S\", true, 2},\n+                {\"4S20M2S\", true, 4},\n+                {\"4S20M2S\", false, 2},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1OTY1MQ=="}, "originalCommit": {"oid": "14a7863636db406fd030ebe648abf431a1d6a753"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTcxOTU0OnYy", "diffSide": "RIGHT", "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo1MTo1NlrOIEQSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo1NzowMlrOIEQlRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMjE0MQ==", "bodyText": "Are these legal cigar strings? Doesn't the S operator have to come at the end? I guess it doesn't matter for this test and I agree with 6 for this length (and 0 for the one below).", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541332141", "createdAt": "2020-12-11T21:51:56Z", "author": {"login": "meganshand"}, "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -22,6 +27,9 @@\n                 {\"20M2S\", true, 0},\n                 {\"20M2S\", false, 2},\n \n+                {\"20M2S4S\", false, 6},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67f3be613375c3e6377c1bda78e5ebb09d01cb2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzNjkwMg==", "bodyText": "From the spec:\n\u2022 H can only be present as the first and/or last operation.\n\u2022 S may only have H operations between them and the ends of the CIGAR string\n\nso probably, no. but I wanted to make the code robust to this....", "url": "https://github.com/broadinstitute/picard/pull/1586#discussion_r541336902", "createdAt": "2020-12-11T21:57:02Z", "author": {"login": "yfarjoun"}, "path": "src/test/java/picard/analysis/AlignmentSummaryMetricsCollectorTest.java", "diffHunk": "@@ -22,6 +27,9 @@\n                 {\"20M2S\", true, 0},\n                 {\"20M2S\", false, 2},\n \n+                {\"20M2S4S\", false, 6},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMjE0MQ=="}, "originalCommit": {"oid": "d67f3be613375c3e6377c1bda78e5ebb09d01cb2"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 650, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}