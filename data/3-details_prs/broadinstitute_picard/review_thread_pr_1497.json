{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjkxOTkz", "number": 1497, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMjo1N1rODxSmKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzowOTo0OFrODxT_pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDExNDk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/analysis/CompareMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMjo1N1rOGErULw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowMjo1N1rOGErULw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzE2Nw==", "bodyText": "Can use fewer parens\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if ((!Double.isNaN(numValue1)) || (!Double.isNaN(numValue2))) {\n          \n          \n            \n                            if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407557167", "createdAt": "2020-04-13T16:02:57Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,7 +267,11 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n+                double relativeChange = 0;\n+                if ((!Double.isNaN(numValue1)) || (!Double.isNaN(numValue2))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d514a2f666c44744d11588db578f375e8986c67"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM0NDA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/picard/analysis/CompareMetrics.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzowOTo0OFrOGEtiIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOToyMjowM1rOGEx_Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA==", "bodyText": "Under what conditions is it possible for absoluteChange to be non-zero and for (numValue1 == 0 && numValue2 == 0) to be true? Are this trying to avoid dividing by zero?\nAlso this code now divides by numValue1 and before it divided by numValue2, is that a fix?", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407593504", "createdAt": "2020-04-13T17:09:48Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxMzI0Mg==", "bodyText": "Yes, that's to avoid the divide by zero.\nI've changed the code to be comparison of the second metric, relative to the first metric, so that's why the denominator has changed.\nchange = (value2 - value1) / value1", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407613242", "createdAt": "2020-04-13T17:45:22Z", "author": {"login": "gbggrant"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, "originalCommit": {"oid": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNDQ1Ng==", "bodyText": "That explains the second numValue1 == 0 check. But I don't see how (numValue1 == 0 && numValue2 == 0) can be true if absoluteChange is not zero.", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407634456", "createdAt": "2020-04-13T18:23:36Z", "author": {"login": "pshapiro4broad"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, "originalCommit": {"oid": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1OTM2MA==", "bodyText": "Probably true, the problem with doing lots of incremental changes.", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407659360", "createdAt": "2020-04-13T19:08:44Z", "author": {"login": "gbggrant"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, "originalCommit": {"oid": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NjUwMg==", "bodyText": "And it's really not even a problem if the numerator is 0.", "url": "https://github.com/broadinstitute/picard/pull/1497#discussion_r407666502", "createdAt": "2020-04-13T19:22:03Z", "author": {"login": "gbggrant"}, "path": "src/main/java/picard/analysis/CompareMetrics.java", "diffHunk": "@@ -267,22 +267,26 @@ protected SimpleResult compareMetricValues(final Object value1, final Object val\n             if (value1 instanceof Number) {\n                 double numValue1 = ((Number) value1).doubleValue();\n                 double numValue2 = ((Number) value2).doubleValue();\n-                double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : (numValue1 - numValue2) / numValue2;\n-                if (relativeChange != 0) {\n+                double absoluteChange = 0;\n+                if (!Double.isNaN(numValue1) || !Double.isNaN(numValue2)) {\n+                    absoluteChange = numValue2 - numValue1;\n+                }\n+                if (absoluteChange != 0) {\n+                    double relativeChange = (numValue1 == 0 && numValue2 == 0) ? 0 : (numValue1 == 0) ? Double.MAX_VALUE : absoluteChange / numValue1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MzUwNA=="}, "originalCommit": {"oid": "5ed9f9f671fdfbb90261f80818e6ae13caf36e31"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 752, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}