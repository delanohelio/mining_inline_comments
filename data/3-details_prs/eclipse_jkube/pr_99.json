{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzE2NTA2", "number": 99, "title": "Provide support for setting BuildConfig memory/CPU requests and limits", "bodyText": "Ported PR fabric8io/fabric8-maven-plugin#1772", "createdAt": "2020-03-06T09:23:58Z", "url": "https://github.com/eclipse/jkube/pull/99", "merged": true, "mergeCommit": {"oid": "f553aa627b23d05ef41741d6184522f00cdeafab"}, "closed": true, "closedAt": "2020-03-26T13:52:47Z", "author": {"login": "rohanKanojia"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLAtNnAFqTM3MDM0NjEyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRcdvIgFqTM4MjAyODY5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ2MTI4", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370346128", "createdAt": "2020-03-06T14:08:37Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODozN1rOFy548Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODozN1rOFy548Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMTU4NQ==", "bodyText": "Can be stored as a static constant for the class:\nprivate static final String FILENAME_PATTERN_REGEX = \"^(?<name>.*?)(-(?<type>[^-]+))?\\\\.(?<ext>yaml|yml|json)$\";\nprivate static final Pattern FILENAME_PATTERN = Pattern.compile(FILENAME_PATTERN_REGEX)", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388921585", "createdAt": "2020-03-06T14:08:37Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ2MzI3", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370346327", "createdAt": "2020-03-06T14:08:54Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODo1NFrOFy55gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODo1NFrOFy55gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMTczMQ==", "bodyText": "Same as FILENAME_PATTERN", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388921731", "createdAt": "2020-03-06T14:08:54Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);\n+        final Pattern exludePattern = Pattern.compile(PROFILES_PATTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ2OTU5", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370346959", "createdAt": "2020-03-06T14:09:48Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowOTo0OFrOFy57Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowOTo0OFrOFy57Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjE5MA==", "bodyText": "Please provide some Unit Test validating and documenting the logic", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922190", "createdAt": "2020-03-06T14:09:48Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ3NDAx", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370347401", "createdAt": "2020-03-06T14:10:26Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMDoyNlrOFy58lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMDoyNlrOFy58lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjUxOA==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922518", "createdAt": "2020-03-06T14:10:26Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ3OTEz", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370347913", "createdAt": "2020-03-06T14:11:09Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTowOVrOFy5-Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTowOVrOFy5-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjkzMQ==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922931", "createdAt": "2020-03-06T14:11:09Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzQ4MTkw", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-370348190", "createdAt": "2020-03-06T14:11:31Z", "commit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTozMVrOFy5_Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTozMVrOFy5_Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMzE1MA==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388923150", "createdAt": "2020-03-06T14:11:31Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);\n+        final Pattern exludePattern = Pattern.compile(PROFILES_PATTERN);\n+        return resourceDir.listFiles((File dir, String name) -> filenamePattern.matcher(name).matches() && !exludePattern.matcher(name).matches());\n+    }\n+\n+    public static File[] listRemoteResourceFragments(List<String> remotes, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 105}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/08ebba836c6d8fb2deb9262b71780a02ae9a6c38", "committedDate": "2020-03-06T09:22:55Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "6ce537c0cb69c335f3bd40880e9f4fab87a414a8", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/6ce537c0cb69c335f3bd40880e9f4fab87a414a8", "committedDate": "2020-03-09T06:49:21Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ce537c0cb69c335f3bd40880e9f4fab87a414a8", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/6ce537c0cb69c335f3bd40880e9f4fab87a414a8", "committedDate": "2020-03-09T06:49:21Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "79ccafb5a573f35a2cdf6272c13a6475e30e73c7", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/79ccafb5a573f35a2cdf6272c13a6475e30e73c7", "committedDate": "2020-03-09T07:04:42Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79ccafb5a573f35a2cdf6272c13a6475e30e73c7", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/79ccafb5a573f35a2cdf6272c13a6475e30e73c7", "committedDate": "2020-03-09T07:04:42Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "e6180431115bfd9b5ba26a53a0a7ed89910c5347", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/e6180431115bfd9b5ba26a53a0a7ed89910c5347", "committedDate": "2020-03-09T07:08:18Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6180431115bfd9b5ba26a53a0a7ed89910c5347", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/e6180431115bfd9b5ba26a53a0a7ed89910c5347", "committedDate": "2020-03-09T07:08:18Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "8da1dc9d95a9fb11842407b8e196a326982a8fe6", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/8da1dc9d95a9fb11842407b8e196a326982a8fe6", "committedDate": "2020-03-09T07:29:24Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8da1dc9d95a9fb11842407b8e196a326982a8fe6", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/8da1dc9d95a9fb11842407b8e196a326982a8fe6", "committedDate": "2020-03-09T07:29:24Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "67b3955ef4e70eddf5d75a49648a456fbf29e0bf", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/67b3955ef4e70eddf5d75a49648a456fbf29e0bf", "committedDate": "2020-03-16T08:20:25Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67b3955ef4e70eddf5d75a49648a456fbf29e0bf", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/67b3955ef4e70eddf5d75a49648a456fbf29e0bf", "committedDate": "2020-03-16T08:20:25Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "4b46f9052daabf4439b6138a5a14758140ca90bf", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/4b46f9052daabf4439b6138a5a14758140ca90bf", "committedDate": "2020-03-17T17:20:28Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b46f9052daabf4439b6138a5a14758140ca90bf", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/4b46f9052daabf4439b6138a5a14758140ca90bf", "committedDate": "2020-03-17T17:20:28Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "1778d2fbd945795497e700e298b27bb17feb3a78", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/1778d2fbd945795497e700e298b27bb17feb3a78", "committedDate": "2020-03-26T09:53:08Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1778d2fbd945795497e700e298b27bb17feb3a78", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/1778d2fbd945795497e700e298b27bb17feb3a78", "committedDate": "2020-03-26T09:53:08Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "50b3686492b4e30c2ec0643caaa4c3d5db6c8f16", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/50b3686492b4e30c2ec0643caaa4c3d5db6c8f16", "committedDate": "2020-03-26T11:58:27Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f27b67cd23709cfd0b92b8133684d993d1a9a82b", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/f27b67cd23709cfd0b92b8133684d993d1a9a82b", "committedDate": "2020-03-26T12:37:17Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50b3686492b4e30c2ec0643caaa4c3d5db6c8f16", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/50b3686492b4e30c2ec0643caaa4c3d5db6c8f16", "committedDate": "2020-03-26T11:58:27Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}, "afterCommit": {"oid": "f27b67cd23709cfd0b92b8133684d993d1a9a82b", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/f27b67cd23709cfd0b92b8133684d993d1a9a82b", "committedDate": "2020-03-26T12:37:17Z", "message": "Provide support for setting BuildConfig memory/CPU requests and limits\n\nPorted PR https://github.com/fabric8io/fabric8-maven-plugin/pull/1772"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDI4Njk1", "url": "https://github.com/eclipse/jkube/pull/99#pullrequestreview-382028695", "createdAt": "2020-03-26T13:52:37Z", "commit": {"oid": "f27b67cd23709cfd0b92b8133684d993d1a9a82b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 324, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}