{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwOTkxNzE3", "number": 235, "title": "unit tests for jkube-kit/common dir", "bodyText": "Description\n\nType of change\n\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change)\n\nChecklist\n\n I have read the contributing guidelines\n I signed-off my commit with a user that has signed the Eclipse Contributor Agreement\n I Added CHANGELOG entry\n I have implemented unit tests to cover my changes\n I have updated the documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-06-08T09:30:06Z", "url": "https://github.com/eclipse/jkube/pull/235", "merged": true, "mergeCommit": {"oid": "ec7d115fd5ec4ec2167bdabbe4961eb64ed73cbb"}, "closed": true, "closedAt": "2020-06-23T05:51:04Z", "author": {"login": "anandrkskd"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpeIVdAFqTQyNjc5NDgyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABct-6qmAFqTQzNTQ2MDMxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Nzk0ODI1", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-426794825", "createdAt": "2020-06-09T05:17:46Z", "commit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNToxNzo0NlrOGg5E3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNToyMjozMVrOGg5J2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjc1MQ==", "bodyText": "I think this can be simplified to assertFalse(isWindows())", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142751", "createdAt": "2020-06-09T05:17:46Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -62,4 +197,12 @@ public void testLoadTimestampShouldLoadFromFile() throws Exception {\n         // Then\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n+\n+    @Test\n+    public  void testIsWindows(){\n+        //When\n+        boolean result = isWindows();\n+        //Then\n+        assertEquals(false,result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MjkxMQ==", "bodyText": "remove this line", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142911", "createdAt": "2020-06-09T05:18:20Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);\n+        //assertEquals(\"\",result2.get(0));\n+    }\n+\n+    /*\n+    @Test\n+    public void testSplitAtCommasAndTrim(){\n+        //Given\n+        Iterable<String>  strings = \"hello,world\";\n+        //When\n+        String[] resutl = EnvUtil.splitAtCommasAndTrim(strings);\n+\n+    }\n+\n+     */\n+\n+\n+    @Test\n+    public void testStringJoin(){\n+        //Given\n+        List<String> list = new ArrayList<>();\n+        String separator = \",\";\n+        list.add(\"element1\");\n+        list.add(\"element2\");\n+        //When\n+        String result = EnvUtil.stringJoin(list,separator);\n+        //Then\n+        assertEquals(\"element1,element2\",result);\n+    }\n+\n+    @Test\n+    public void testSplitOnSpaceWithEscape(){\n+        //Given\n+        String strings = \"hello world\";\n+        //when\n+        String[] result = EnvUtil.splitOnSpaceWithEscape(strings);\n+        //then\n+        //System.out.println(\"result:\"+ Arrays.toString(result));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjk4NA==", "bodyText": "Please remove dead code", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142984", "createdAt": "2020-06-09T05:18:38Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);\n+        //assertEquals(\"\",result2.get(0));\n+    }\n+\n+    /*\n+    @Test\n+    public void testSplitAtCommasAndTrim(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MzA0Ng==", "bodyText": "Please remove dead code", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437143046", "createdAt": "2020-06-09T05:18:50Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MzIwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGreaterOrEqualsVersion(){\n          \n          \n            \n                public void testGreaterOrEqualsVersion() {", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437143203", "createdAt": "2020-06-09T05:19:26Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NDAyNQ==", "bodyText": "I think assertEquals() expects expected item as the first argument and actual arguments as the second. You need to swap these", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437144025", "createdAt": "2020-06-09T05:22:31Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258212278ef3333f42daffb005214fa9a9458971"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYwNDU0", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430360454", "createdAt": "2020-06-15T06:45:29Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NToyOVrOGjlEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NToyOVrOGjlEvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MDc2Ng==", "bodyText": "Please, remove the comments:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    // Both version are null\n          \n          \n            \n                    //When\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n      \n    \n    \n  \n\nOr replace by  declarative code:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    // Both version are null\n          \n          \n            \n                    //When\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n          \n            \n                    //Given\n          \n          \n            \n                    var v1 = null;\n          \n          \n            \n                    var v2 = null;\n          \n          \n            \n                    //When\n          \n          \n            \n                    var result = EnvUtil.extractLargerVersion(v1, v2);\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(result);", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439960766", "createdAt": "2020-06-15T06:45:29Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYwNjgw", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430360680", "createdAt": "2020-06-15T06:45:57Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NTo1N1rOGjlFkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NTo1N1rOGjlFkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MDk3Nw==", "bodyText": "nit, maybe you don't need to write // Given... when... Then when test statements are one-liners.", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439960977", "createdAt": "2020-06-15T06:45:57Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYwODc1", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430360875", "createdAt": "2020-06-15T06:46:20Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NjoyMFrOGjlGOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NjoyMFrOGjlGOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTE0NA==", "bodyText": "I don't think you need to add this comment since test name indicates the same", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961144", "createdAt": "2020-06-15T06:46:20Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYxMTc1", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430361175", "createdAt": "2020-06-15T06:46:55Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0Njo1NlrOGjlHGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0Njo1NlrOGjlHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTM2OQ==", "bodyText": "Seems like a copy-paste leftover\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA,null);\n          \n          \n            \n                    String versionB = null;\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA, versionB);", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961369", "createdAt": "2020-06-15T06:46:56Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYxNTEw", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430361510", "createdAt": "2020-06-15T06:47:36Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NzozNlrOGjlIEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NzozNlrOGjlIEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTYxNg==", "bodyText": "Seems like a copy-paste leftover\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    String versionA = \"4.0.2\";\n          \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(null,versionB);\n          \n          \n            \n                    //Given\n          \n          \n            \n                    String versionA = null;\n          \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA, versionB);", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961616", "createdAt": "2020-06-15T06:47:36Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYxOTU0", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430361954", "createdAt": "2020-06-15T06:48:29Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0ODoyOVrOGjlJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0ODoyOVrOGjlJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTk1OA==", "bodyText": "This test is redundant/duplicate of testExtractLargerVersion()", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961958", "createdAt": "2020-06-15T06:48:29Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAisGreater(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYzMTI3", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430363127", "createdAt": "2020-06-15T06:50:44Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1MDo0NVrOGjlNHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1MDo0NVrOGjlNHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjkxMA==", "bodyText": "This is very bad, try not to use this in tests ever. I don't even see the purpose of this sleep/wait in the test.", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439962910", "createdAt": "2020-06-15T06:50:45Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAisGreater(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,versionB);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        //When\n+        String result = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertEquals(\"4.0.0.1\",result);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenTrue(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        //Then\n+        assertTrue(result1);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenEqual() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\", versionA);\n+        //Then\n+        assertTrue(result2);\n+    }\n+\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenFalse(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColonWhenNotNull() {\n+        // Given\n+        List<String> list1 = Collections.singletonList(\"element1:element2\");\n+        // When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        // Then\n+        assertEquals(1, result1.size());\n+        assertEquals(2,result1.get(0).length);\n+        assertArrayEquals(new String[]{\"element1\", \"element2\"}, result1.get(0));\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColonWhenNull() {\n+        // Given\n+        List<String> list2 = null;\n+        // When\n+        List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        // Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+    @Test\n+    public void testRemoveEmptyEntrieWhenNotNull(){\n+        //Given\n+        List<String>  string1 = new ArrayList<>();\n+        string1.add(\" set \");\n+        string1.add(\" set2  \");\n+        string1.add(\"\");\n+        //When\n+        List<String>  result1 = EnvUtil.removeEmptyEntries(string1);\n+        //Then\n+        assertArrayEquals( new String[]{\"set\", \"set2\"} ,result1.toArray());\n+    }\n+\n+    @Test\n+    public void testRemoveEmptyEntriesWhenNull(){\n+        //Given\n+        List<String>  string2 = new ArrayList<>();\n+        string2.add(null);\n+        //When\n+        List<String>  result2 = EnvUtil.removeEmptyEntries(string2);\n+        //Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+\n+    @Test\n+    public void testSplitAtCommasAndTrimWhenNotNull(){\n+        //Given\n+        Iterable<String>  strings1 = Collections.singleton(\"hello,world\");\n+        //When\n+        List<String> result1 = EnvUtil.splitAtCommasAndTrim(strings1);\n+        //Then\n+        assertEquals(2,result1.size());\n+        assertEquals(\"world\", result1.get(1));\n+        }\n+\n+    @Test\n+    public void testSplitAtCommasAndTrimWhenNull(){\n+        //Given\n+        Iterable<String>  strings2 = Collections.singleton(null);\n+        //When\n+        List<String> result2 = EnvUtil.splitAtCommasAndTrim(strings2);\n+        //Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+    @Test\n+    public void testExtractFromPropertiesAsList() {\n+        //Given\n+        String string = \"key\";\n+        Properties properties = new Properties();\n+        properties.put(\"key.name\",\"value\");\n+        properties.put(\"key.value\",\"valu\");\n+        properties.put(\"art\",\"id\");\n+        properties.put(\"note\",\"bool\");\n+        properties.put(\"key._combine\",\"bool\");\n+        //When\n+        List<String> result = EnvUtil.extractFromPropertiesAsList(string,properties);\n+        //Then\n+        assertEquals(2,result.size());\n+        assertArrayEquals(new String[]{\"valu\", \"value\"}, result.toArray());\n+    }\n+\n+    @Test\n+    public void testExtractFromPropertiesAsMap(){\n+        //Given\n+        String prefix = \"key\";\n+        Properties properties = new Properties();\n+        properties.put(\"key.name\",\"value\");\n+        properties.put(\"key.value\",\"valu\");\n+        properties.put(\"art\",\"id\");\n+        properties.put(\"note\",\"bool\");\n+        properties.put(\"key._combine\",\"bool\");\n+        //when\n+        Map<String, String> result = EnvUtil.extractFromPropertiesAsMap(prefix,properties);\n+        //Then\n+        assertEquals(2 ,result.size());\n+        assertEquals(\"value\",result.get(\"name\"));\n+    }\n+\n+    @Test\n+    public void testFormatDurationTill() throws InterruptedException {\n+        long startTime = System.currentTimeMillis();\n+        // Wait for 200 milliseconds\n+        Thread.sleep(200L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 236}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzYzNjgz", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-430363683", "createdAt": "2020-06-15T06:51:48Z", "commit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1MTo0OFrOGjlO4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1MTo0OFrOGjlO4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MzM2Mg==", "bodyText": "Platform dependent test. Try to make it platform independent and provide two tests, one that verifies it is windows and one that verifies it's not.", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439963362", "createdAt": "2020-06-15T06:51:48Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -62,4 +367,10 @@ public void testLoadTimestampShouldLoadFromFile() throws Exception {\n         // Then\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n+\n+    @Test\n+    public  void testIsWindows(){\n+        //Then\n+        assertEquals(false,isWindows());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138"}, "originalPosition": 330}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f44537d5c7bb854b8ed096342c8685925dfa0138", "author": {"user": {"login": "anandrkskd", "name": "Anand Kumar Singh"}}, "url": "https://github.com/eclipse/jkube/commit/f44537d5c7bb854b8ed096342c8685925dfa0138", "committedDate": "2020-06-15T06:09:05Z", "message": "devided test into smaller unit test\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>"}, "afterCommit": {"oid": "2e6d224850e9478c04ca64179faa3e982e24a123", "author": {"user": {"login": "anandrkskd", "name": "Anand Kumar Singh"}}, "url": "https://github.com/eclipse/jkube/commit/2e6d224850e9478c04ca64179faa3e982e24a123", "committedDate": "2020-06-18T18:20:31Z", "message": "Unit Test added for EnvUtils\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447", "author": {"user": {"login": "anandrkskd", "name": "Anand Kumar Singh"}}, "url": "https://github.com/eclipse/jkube/commit/805f4c9740117a0f97430829cbb7f1777adf5447", "committedDate": "2020-06-19T06:35:59Z", "message": "Unit test added\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e6d224850e9478c04ca64179faa3e982e24a123", "author": {"user": {"login": "anandrkskd", "name": "Anand Kumar Singh"}}, "url": "https://github.com/eclipse/jkube/commit/2e6d224850e9478c04ca64179faa3e982e24a123", "committedDate": "2020-06-18T18:20:31Z", "message": "Unit Test added for EnvUtils\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>"}, "afterCommit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447", "author": {"user": {"login": "anandrkskd", "name": "Anand Kumar Singh"}}, "url": "https://github.com/eclipse/jkube/commit/805f4c9740117a0f97430829cbb7f1777adf5447", "committedDate": "2020-06-19T06:35:59Z", "message": "Unit test added\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODQ0MDI2", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-433844026", "createdAt": "2020-06-19T06:56:35Z", "commit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODUwMjgy", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-433850282", "createdAt": "2020-06-19T07:09:27Z", "commit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzowOToyN1rOGmKafw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzowOToyN1rOGmKafw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2OTY5NQ==", "bodyText": "Why are we ignoring this test?", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r442669695", "createdAt": "2020-06-19T07:09:27Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -16,33 +16,332 @@\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull() {\n+        //Given\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion() {\n+        //Given\n+        //When\n+        String result = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertEquals(\"4.0.0.1\",result);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenTrue() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        //Then\n+        assertTrue(result1);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenEqual() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\", versionA);\n+        //Then\n+        assertTrue(result2);\n+    }\n+\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenFalse() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertFalse(result3);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    @Ignore\n+// TODO: Remove when implementation is fixed\n+    public void testGreaterOrEqualsVersionCornerCase() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447"}, "originalPosition": 122}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDYwMzE3", "url": "https://github.com/eclipse/jkube/pull/235#pullrequestreview-435460317", "createdAt": "2020-06-23T05:50:52Z", "commit": {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 271, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}