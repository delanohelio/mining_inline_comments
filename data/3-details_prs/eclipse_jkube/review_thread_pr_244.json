{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NDk4MDYx", "number": 244, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozMToyN1rOEG_uGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo1MzoxNFrOEHArOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzcwOTA3OnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozMToyN1rOGmIhsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozMToyN1rOGmIhsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzODc3MQ==", "bodyText": "Plexus deserialization is not configurable for enums (this is the reason why this values were still in lower-case).\nMake sure that this value is never deserialized from a Maven property (i.e. jkube.mode), if it still is deserialized somewhere, it will fail).", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442638771", "createdAt": "2020-06-19T05:31:27Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "diffHunk": "@@ -33,36 +33,23 @@\n      * onto cluster. It can be used both on vanilla Kubernetes and\n      * OpenShift.\n      */\n-    kubernetes(false, \"Kubernetes\"),\n+    KUBERNETES(\"Kubernetes\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzcwOTg2OnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozMTo1NlrOGmIiJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozMTo1NlrOGmIiJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzODg4Nw==", "bodyText": "Maybe it's time to rename this constant", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442638887", "createdAt": "2020-06-19T05:31:56Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "diffHunk": "@@ -33,36 +33,23 @@\n      * onto cluster. It can be used both on vanilla Kubernetes and\n      * OpenShift.\n      */\n-    kubernetes(false, \"Kubernetes\"),\n+    KUBERNETES(\"Kubernetes\"),\n \n     /**\n      * Use special OpenShift features like BuildConfigs, DeploymentConfigs\n      * ImageStreams and S2I builds while deploying onto cluster. It can be\n      * used only when on OpenShift.\n      */\n-    openshift(false, \"OpenShift\"),\n+    OPENSHIFT(\"OpenShift\");\n \n-    /**\n-     * Detect automatically whether running cluster is OpenShift or Kuberentes.\n-     * This is done by contacting cluster API server.\n-     */\n-    auto(true, \"Auto\");\n-\n-    public static final RuntimeMode DEFAULT = RuntimeMode.auto;\n     public static final String FABRIC8_EFFECTIVE_PLATFORM_MODE = \"jkube.internal.effective.platform.mode\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzcxNDAyOnYy", "diffSide": "LEFT", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/JKubeServiceHub.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozNDoyM1rOGmIkoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozNDoyM1rOGmIkoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTUyMQ==", "bodyText": "If platformMode is now required, add the nullcheck:\nObjects.requireNonNull(platformMode, \"platformMode is a required parameter\");", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442639521", "createdAt": "2020-06-19T05:34:23Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/JKubeServiceHub.java", "diffHunk": "@@ -71,16 +70,9 @@ public JKubeServiceHub(\n     private void init() {\n         Objects.requireNonNull(configuration, \"JKubeKitConfiguration is required\");\n         Objects.requireNonNull(log, \"log is a required parameter\");\n-        if (platformMode == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzcxNTYxOnYy", "diffSide": "RIGHT", "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/AutoTLSEnricherTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNTozNToxOVrOGmIlkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDo1MzoyNlrOGo1iMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        TreeMap<String, String> configMap = new TreeMap<String, String>() {\n          \n          \n            \n                        TreeMap<String, String> configMap = new TreeMap<>() {", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442639763", "createdAt": "2020-06-19T05:35:19Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/AutoTLSEnricherTest.java", "diffHunk": "@@ -91,18 +91,18 @@ private AdaptTestConfig(PlatformMode mode, String initContainerNameConfig, Strin\n     @Test\n     public void testAdapt() throws Exception {\n         final AdaptTestConfig[] data = new AdaptTestConfig[] {\n-                new AdaptTestConfig(PlatformMode.kubernetes, null, null, null, null, null, null, null, null),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.KUBERNETES, null, null, null, null, null, null, null, null),\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", \"tls-a\", \"tls-a\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", \"jks-b\", \"jks-b\"),\n-                new AdaptTestConfig(PlatformMode.openshift, \"test-container-name\", \"test-container-name\", \"image/123\",\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, \"test-container-name\", \"test-container-name\", \"image/123\",\n                         \"image/123\", \"tls-a\", \"tls-a\", \"jks-b\", \"jks-b\") };\n \n         for (final AdaptTestConfig tc : data) {\n-            TreeMap configMap = new TreeMap() {\n+            TreeMap<String, String> configMap = new TreeMap<String, String>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQyMzEzNA==", "bodyText": "I tried doing this but I couldn't use <> with anonymous inner classes. Our project is at JDK8 right now, maybe we should upgrade to JDK11? WDYT?", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445423134", "createdAt": "2020-06-25T09:19:56Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/AutoTLSEnricherTest.java", "diffHunk": "@@ -91,18 +91,18 @@ private AdaptTestConfig(PlatformMode mode, String initContainerNameConfig, Strin\n     @Test\n     public void testAdapt() throws Exception {\n         final AdaptTestConfig[] data = new AdaptTestConfig[] {\n-                new AdaptTestConfig(PlatformMode.kubernetes, null, null, null, null, null, null, null, null),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.KUBERNETES, null, null, null, null, null, null, null, null),\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", \"tls-a\", \"tls-a\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", \"jks-b\", \"jks-b\"),\n-                new AdaptTestConfig(PlatformMode.openshift, \"test-container-name\", \"test-container-name\", \"image/123\",\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, \"test-container-name\", \"test-container-name\", \"image/123\",\n                         \"image/123\", \"tls-a\", \"tls-a\", \"jks-b\", \"jks-b\") };\n \n         for (final AdaptTestConfig tc : data) {\n-            TreeMap configMap = new TreeMap() {\n+            TreeMap<String, String> configMap = new TreeMap<String, String>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3MzMzMQ==", "bodyText": "We should not be doing this, this is really bad.\nCreating an inner class extending a TreeMap is something I don't see really the purpose here, and is really a bad practice.\nJust instantiate the Map and put the entries after.", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445473331", "createdAt": "2020-06-25T10:53:26Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/AutoTLSEnricherTest.java", "diffHunk": "@@ -91,18 +91,18 @@ private AdaptTestConfig(PlatformMode mode, String initContainerNameConfig, Strin\n     @Test\n     public void testAdapt() throws Exception {\n         final AdaptTestConfig[] data = new AdaptTestConfig[] {\n-                new AdaptTestConfig(PlatformMode.kubernetes, null, null, null, null, null, null, null, null),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.KUBERNETES, null, null, null, null, null, null, null, null),\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", \"tls-a\", \"tls-a\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", \"jks-b\", \"jks-b\"),\n-                new AdaptTestConfig(PlatformMode.openshift, \"test-container-name\", \"test-container-name\", \"image/123\",\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, \"test-container-name\", \"test-container-name\", \"image/123\",\n                         \"image/123\", \"tls-a\", \"tls-a\", \"jks-b\", \"jks-b\") };\n \n         for (final AdaptTestConfig tc : data) {\n-            TreeMap configMap = new TreeMap() {\n+            TreeMap<String, String> configMap = new TreeMap<String, String>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzgzMDg0OnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-false/invoker.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODoxMVrOGmJsxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODoxMVrOGmJsxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1Nzk4OA==", "bodyText": "Probably the second option -Dfabric8.openshift.generateRoute=false has no effect (if it does then something is wrong), we should remove it.", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442657988", "createdAt": "2020-06-19T06:38:11Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-false/invoker.properties", "diffHunk": "@@ -13,5 +13,5 @@\n #\n \n invoker.goals.1=clean k8s:resource\n-invoker.mavenOpts=-Djkube.verbose -Djkube.mode=openshift -Dfabric8.openshift.generateRoute=false\n+invoker.mavenOpts=-Djkube.verbose -Dfabric8.openshift.generateRoute=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzgzMTczOnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/invoker.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODo0M1rOGmJtVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODo0M1rOGmJtVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODEzNA==", "bodyText": "https://github.com/eclipse/jkube/pull/244/files#r442657988", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442658134", "createdAt": "2020-06-19T06:38:43Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/invoker.properties", "diffHunk": "@@ -13,5 +13,5 @@\n #\n \n invoker.goals.1=clean k8s:resource\n-invoker.mavenOpts=-Djkube.verbose -Djkube.mode=openshift -Dfabric8.openshift.generateRoute=true\n-invoker.debug=false\n\\ No newline at end of file\n+invoker.mavenOpts=-Djkube.verbose -Djkube.openshift.generateRoute=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzgzMjQ5OnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozOTowNFrOGmJtyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTowNDo0MFrOGo12eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA==", "bodyText": "Is this because previously this file was ignored?", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442658248", "createdAt": "2020-06-19T06:39:04Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0MzQxNQ==", "bodyText": "Actually, earlier this test was running with jkube.mode=openshift. With this PR, runtime mode is KUBERNETES for Kubernetes Maven Plugin.\n\n  \n    \n      jkube/kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/invoker.properties\n    \n    \n         Line 16\n      in\n      48ccd83\n    \n    \n    \n    \n\n        \n          \n           invoker.mavenOpts=-Djkube.verbose -Djkube.mode=openshift -Dfabric8.openshift.generateRoute=true", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445343415", "createdAt": "2020-06-25T06:53:14Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NDgwNg==", "bodyText": "So this file was being ignored previously, right? i.e. if we delete it from master/main branch, tests won't break", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445344806", "createdAt": "2020-06-25T06:56:45Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NTYyNQ==", "bodyText": "I don't think this file is ignored. I was talking about the cause of above change", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445345625", "createdAt": "2020-06-25T06:58:41Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2OTc0Nw==", "bodyText": "If this is the case, was previous behavior was wrong? Why were kubernetes.yml files generated if runtime mode was openshift?", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445369747", "createdAt": "2020-06-25T07:47:35Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3NzUyNQ==", "bodyText": "I think kubernetes.yml were getting generated because kubernetes-maven-plugin goals were being invoked. This jkube.mode property was changing default generator image name depending upon runtime mode. Earlier with jkube.mode set to Openshift, they were generating image name for Openshift builds. Right now we have same test in openshift and it's image field looks like this:\n\n  \n    \n      jkube/openshift-maven-plugin/it/src/it/simple-with-route-flag-true/expected/openshift.yml\n    \n    \n         Line 90\n      in\n      b2e25f6\n    \n    \n    \n    \n\n        \n          \n           image: jkube-maven-sample-zero-config:latest", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445377525", "createdAt": "2020-06-25T08:01:04Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3Nzg1NQ==", "bodyText": "Right now we have same test in openshift and it's image field looks like this:\n\nYes, but it's generated in an openshift.yml file (as expected).\nThe fact that this wasn't the case before, and that instead of generating an openshift.yml file a kubernetes.yml file was being generated with openshift specific configurations (i.e. image)  and not even completed with deploymentconfig files, makes me understand that previous behavior was wrong.\nSo conclusion is that this file was not being ignored before due to an inconsistent behavior, but after the current PR, things will behave as expected and only specific cluster files will be generated with the right configs.", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445477855", "createdAt": "2020-06-25T11:03:12Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3ODUyMQ==", "bodyText": "cool, thanks. I would mark this as resolved.", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445478521", "createdAt": "2020-06-25T11:04:40Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/it/src/it/simple-with-route-flag-true/expected/kubernetes.yml", "diffHunk": "@@ -84,7 +84,7 @@ items:\n             valueFrom:\n               fieldRef:\n                 fieldPath: metadata.namespace\n-          image: jkube-maven-sample-zero-config:latest\n+          image: jkube/jkube-maven-sample-zero-config:latest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1ODI0OA=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Nzg0MDMzOnYy", "diffSide": "RIGHT", "path": "openshift-maven-plugin/it/src/it/simple-with-route-flag-false/invoker.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo0MjozOFrOGmJydQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo0MzowMlrOGmJzAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1OTQ0NQ==", "bodyText": "https://github.com/eclipse/jkube/pull/244/files#r442657988", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442659445", "createdAt": "2020-06-19T06:42:38Z", "author": {"login": "manusa"}, "path": "openshift-maven-plugin/it/src/it/simple-with-route-flag-false/invoker.properties", "diffHunk": "@@ -13,5 +13,5 @@\n #\n \n invoker.goals.1=clean oc:resource\n-invoker.mavenOpts=-Djkube.verbose -Djkube.mode=openshift -Dfabric8.openshift.generateRoute=false\n+invoker.mavenOpts=-Djkube.verbose -Dfabric8.openshift.generateRoute=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1OTU4NA==", "bodyText": "Invalid comment, please ignore", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442659584", "createdAt": "2020-06-19T06:43:02Z", "author": {"login": "manusa"}, "path": "openshift-maven-plugin/it/src/it/simple-with-route-flag-false/invoker.properties", "diffHunk": "@@ -13,5 +13,5 @@\n #\n \n invoker.goals.1=clean oc:resource\n-invoker.mavenOpts=-Djkube.verbose -Djkube.mode=openshift -Dfabric8.openshift.generateRoute=false\n+invoker.mavenOpts=-Djkube.verbose -Dfabric8.openshift.generateRoute=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1OTQ0NQ=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Nzg2NTU0OnYy", "diffSide": "RIGHT", "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo1MzoxNFrOGmKB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzoxMDo1N1rOGouDWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg==", "bodyText": "Are these properties dead? Could you open an issue providing details (if you know about them)?\nIt seems that at least some of them are used on Enrichers, but are not read from the Mojo.", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442663382", "createdAt": "2020-06-19T06:53:14Z", "author": {"login": "manusa"}, "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "diffHunk": "@@ -28,6 +30,48 @@\n @Mojo(name = \"resource\", defaultPhase = LifecyclePhase.PROCESS_RESOURCES, requiresDependencyResolution = ResolutionScope.COMPILE)\n public class OpenshiftResourceMojo extends ResourceMojo {\n \n+    /**\n+     * The OpenShift deploy timeout in seconds:\n+     * See this issue for background of why for end users on slow wifi on their laptops\n+     * DeploymentConfigs usually barf: https://github.com/openshift/origin/issues/10531\n+     *\n+     * Please follow also the discussion at\n+     * <ul>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/944#discussion_r116962969</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/794</li>\n+     * </ul>\n+     * and the references within it for the reason of this ridiculous long default timeout\n+     * (in short: Its because Docker image download times are added to the deployment time, making\n+     * the default of 10 minutes quite unusable if multiple images are included in the deployment).\n+     */\n+    @Parameter(property = \"jkube.openshift.deployTimeoutSeconds\", defaultValue = \"3600\")\n+    private Long openshiftDeployTimeoutSeconds;\n+\n+    /**\n+     * If set to true it would set the container image reference to \"\", this is done to handle weird\n+     * behavior of OpenShift 3.7 in which subsequent rollouts lead to ImagePullErr\n+     *\n+     * Please see discussion at\n+     * <ul>\n+     *     <li>https://github.com/openshift/origin/issues/18406</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/issues/1130</li>\n+     * </ul>\n+     */\n+    @Parameter(property = \"jkube.openshift.trimImageInContainerSpec\", defaultValue = \"false\")\n+    private Boolean trimImageInContainerSpec;\n+\n+    @Parameter(property = \"jkube.openshift.generateRoute\", defaultValue = \"true\")\n+    private Boolean generateRoute;\n+\n+    @Parameter(property = \"jkube.openshift.enableAutomaticTrigger\", defaultValue = \"true\")\n+    private Boolean enableAutomaticTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.imageChangeTrigger\", defaultValue = \"true\")\n+    private Boolean enableImageChangeTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.enrichAllWithImageChangeTrigger\", defaultValue = \"false\")\n+    private Boolean erichAllWithImageChangeTrigger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NDM3MA==", "bodyText": "Umm, you mean add javadocs? I see these are covered in plugin documentation: https://www.eclipse.org/jkube/docs/openshift-maven-plugin#Supported-Properties-Resource", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445344370", "createdAt": "2020-06-25T06:55:45Z", "author": {"login": "rohanKanojia"}, "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "diffHunk": "@@ -28,6 +30,48 @@\n @Mojo(name = \"resource\", defaultPhase = LifecyclePhase.PROCESS_RESOURCES, requiresDependencyResolution = ResolutionScope.COMPILE)\n public class OpenshiftResourceMojo extends ResourceMojo {\n \n+    /**\n+     * The OpenShift deploy timeout in seconds:\n+     * See this issue for background of why for end users on slow wifi on their laptops\n+     * DeploymentConfigs usually barf: https://github.com/openshift/origin/issues/10531\n+     *\n+     * Please follow also the discussion at\n+     * <ul>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/944#discussion_r116962969</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/794</li>\n+     * </ul>\n+     * and the references within it for the reason of this ridiculous long default timeout\n+     * (in short: Its because Docker image download times are added to the deployment time, making\n+     * the default of 10 minutes quite unusable if multiple images are included in the deployment).\n+     */\n+    @Parameter(property = \"jkube.openshift.deployTimeoutSeconds\", defaultValue = \"3600\")\n+    private Long openshiftDeployTimeoutSeconds;\n+\n+    /**\n+     * If set to true it would set the container image reference to \"\", this is done to handle weird\n+     * behavior of OpenShift 3.7 in which subsequent rollouts lead to ImagePullErr\n+     *\n+     * Please see discussion at\n+     * <ul>\n+     *     <li>https://github.com/openshift/origin/issues/18406</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/issues/1130</li>\n+     * </ul>\n+     */\n+    @Parameter(property = \"jkube.openshift.trimImageInContainerSpec\", defaultValue = \"false\")\n+    private Boolean trimImageInContainerSpec;\n+\n+    @Parameter(property = \"jkube.openshift.generateRoute\", defaultValue = \"true\")\n+    private Boolean generateRoute;\n+\n+    @Parameter(property = \"jkube.openshift.enableAutomaticTrigger\", defaultValue = \"true\")\n+    private Boolean enableAutomaticTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.imageChangeTrigger\", defaultValue = \"true\")\n+    private Boolean enableImageChangeTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.enrichAllWithImageChangeTrigger\", defaultValue = \"false\")\n+    private Boolean erichAllWithImageChangeTrigger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NzE3Mg==", "bodyText": "Ok, let me rephrase. These properties are dead in the Mojo, they are directly computed/retrieved in the Enricher, meaning these fields can be deleted (fields are ignored, same as provided defaults).\nSo what we need is an issue providing details about what these properties do (link to docs is good), and what should we do with them. Basically, we need an answer to why are they in the Mojo if they are ignored > this seems like the result of an abandoned work in progress. And what we want, complete their movement to the Mojo (properties no longer retrieved from Enricher) or complete their movement to the Enricher (delete them from the Mojo).", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445347172", "createdAt": "2020-06-25T07:02:29Z", "author": {"login": "manusa"}, "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "diffHunk": "@@ -28,6 +30,48 @@\n @Mojo(name = \"resource\", defaultPhase = LifecyclePhase.PROCESS_RESOURCES, requiresDependencyResolution = ResolutionScope.COMPILE)\n public class OpenshiftResourceMojo extends ResourceMojo {\n \n+    /**\n+     * The OpenShift deploy timeout in seconds:\n+     * See this issue for background of why for end users on slow wifi on their laptops\n+     * DeploymentConfigs usually barf: https://github.com/openshift/origin/issues/10531\n+     *\n+     * Please follow also the discussion at\n+     * <ul>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/944#discussion_r116962969</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/794</li>\n+     * </ul>\n+     * and the references within it for the reason of this ridiculous long default timeout\n+     * (in short: Its because Docker image download times are added to the deployment time, making\n+     * the default of 10 minutes quite unusable if multiple images are included in the deployment).\n+     */\n+    @Parameter(property = \"jkube.openshift.deployTimeoutSeconds\", defaultValue = \"3600\")\n+    private Long openshiftDeployTimeoutSeconds;\n+\n+    /**\n+     * If set to true it would set the container image reference to \"\", this is done to handle weird\n+     * behavior of OpenShift 3.7 in which subsequent rollouts lead to ImagePullErr\n+     *\n+     * Please see discussion at\n+     * <ul>\n+     *     <li>https://github.com/openshift/origin/issues/18406</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/issues/1130</li>\n+     * </ul>\n+     */\n+    @Parameter(property = \"jkube.openshift.trimImageInContainerSpec\", defaultValue = \"false\")\n+    private Boolean trimImageInContainerSpec;\n+\n+    @Parameter(property = \"jkube.openshift.generateRoute\", defaultValue = \"true\")\n+    private Boolean generateRoute;\n+\n+    @Parameter(property = \"jkube.openshift.enableAutomaticTrigger\", defaultValue = \"true\")\n+    private Boolean enableAutomaticTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.imageChangeTrigger\", defaultValue = \"true\")\n+    private Boolean enableImageChangeTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.enrichAllWithImageChangeTrigger\", defaultValue = \"false\")\n+    private Boolean erichAllWithImageChangeTrigger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM1MDc0Ng==", "bodyText": "Thanks for explanation. I've filed #259 for this", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445350746", "createdAt": "2020-06-25T07:10:57Z", "author": {"login": "rohanKanojia"}, "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "diffHunk": "@@ -28,6 +30,48 @@\n @Mojo(name = \"resource\", defaultPhase = LifecyclePhase.PROCESS_RESOURCES, requiresDependencyResolution = ResolutionScope.COMPILE)\n public class OpenshiftResourceMojo extends ResourceMojo {\n \n+    /**\n+     * The OpenShift deploy timeout in seconds:\n+     * See this issue for background of why for end users on slow wifi on their laptops\n+     * DeploymentConfigs usually barf: https://github.com/openshift/origin/issues/10531\n+     *\n+     * Please follow also the discussion at\n+     * <ul>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/944#discussion_r116962969</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/794</li>\n+     * </ul>\n+     * and the references within it for the reason of this ridiculous long default timeout\n+     * (in short: Its because Docker image download times are added to the deployment time, making\n+     * the default of 10 minutes quite unusable if multiple images are included in the deployment).\n+     */\n+    @Parameter(property = \"jkube.openshift.deployTimeoutSeconds\", defaultValue = \"3600\")\n+    private Long openshiftDeployTimeoutSeconds;\n+\n+    /**\n+     * If set to true it would set the container image reference to \"\", this is done to handle weird\n+     * behavior of OpenShift 3.7 in which subsequent rollouts lead to ImagePullErr\n+     *\n+     * Please see discussion at\n+     * <ul>\n+     *     <li>https://github.com/openshift/origin/issues/18406</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/issues/1130</li>\n+     * </ul>\n+     */\n+    @Parameter(property = \"jkube.openshift.trimImageInContainerSpec\", defaultValue = \"false\")\n+    private Boolean trimImageInContainerSpec;\n+\n+    @Parameter(property = \"jkube.openshift.generateRoute\", defaultValue = \"true\")\n+    private Boolean generateRoute;\n+\n+    @Parameter(property = \"jkube.openshift.enableAutomaticTrigger\", defaultValue = \"true\")\n+    private Boolean enableAutomaticTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.imageChangeTrigger\", defaultValue = \"true\")\n+    private Boolean enableImageChangeTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.enrichAllWithImageChangeTrigger\", defaultValue = \"false\")\n+    private Boolean erichAllWithImageChangeTrigger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}, "originalCommit": {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1971, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}