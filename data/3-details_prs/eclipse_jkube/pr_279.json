{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NTE4MzUw", "number": 279, "title": "Fix #267: openshift-maven-plugin does not update Routes", "bodyText": "Signed-off-by: Marcos Trejo marcos.trejo@gmail.com\nDescription\nGenerating a patch for Route, in a similar fashion as the plugin already did for Service and other resources. This fixes #267\nType of change\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n I have read the contributing guidelines\n I signed-off my commit with a user that has signed the Eclipse Contributor Agreement\n I Added CHANGELOG entry\n I have implemented unit tests to cover my changes\n I have updated the documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-07-06T03:36:12Z", "url": "https://github.com/eclipse/jkube/pull/279", "merged": true, "mergeCommit": {"oid": "31e167e43cff6d846982a2a7233691e59584fadf"}, "closed": true, "closedAt": "2020-07-16T12:53:52Z", "author": {"login": "mtrejo"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcx5diCgH2gAyNDQ0NTE4MzUwOjU3OGUxYTE3ZTBmNTkyZTYyNjk2MTczZmRjMTExYzg0NDRmOWIyODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0hmlEgFqTQ0NzI1ODk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280", "author": {"user": {"login": "mtrejo", "name": "Marcos Trejo Munguia"}}, "url": "https://github.com/eclipse/jkube/commit/578e1a17e0f592e62696173fdc111c8444f9b280", "committedDate": "2020-07-05T09:45:13Z", "message": "Fix #267: openshift-maven-plugin does not update Routes\n\nSigned-off-by: Marcos Trejo <marcos.trejo@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDMxOTA0", "url": "https://github.com/eclipse/jkube/pull/279#pullrequestreview-444431904", "createdAt": "2020-07-08T05:54:13Z", "commit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNTo1NDoxM1rOGuZIhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjowMDo0MVrOGuZQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299463", "createdAt": "2020-07-08T05:54:13Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTU4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"new-route\").andReturn(201, route))\n          \n          \n            \n                            .andReply(collector.record(\"new-route\").andReturn(HttpURLConnection.HTTP_CREATED, route))", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299584", "createdAt": "2020-07-08T05:54:35Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTc2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299762", "createdAt": "2020-07-08T05:55:06Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))\n+                .once();\n+\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsRecordedInOrder(\"get-route\", \"new-route\");\n+    }\n+\n+    @Test\n+    public void testCreateRouteInServiceOnlyMode() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTg2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299865", "createdAt": "2020-07-08T05:55:21Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))\n+                .once();\n+\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsRecordedInOrder(\"get-route\", \"new-route\");\n+    }\n+\n+    @Test\n+    public void testCreateRouteInServiceOnlyMode() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+\n+        applyService.setServicesOnlyMode(true);\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsNotRecorded(\"get-route\");\n+        assertEquals(1, mockServer.getRequestCount());\n+    }\n+\n+    @Test\n+    public void testCreateRouteNotAllowed() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDE1NA==", "bodyText": "Could you please add license header here?", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451300154", "createdAt": "2020-07-08T05:56:18Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMTU2NA==", "bodyText": "I'm not sure KitLogger supports format specifiers", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451301564", "createdAt": "2020-07-08T06:00:41Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -939,6 +926,17 @@ public void applyService(Service service, String sourceName) throws Exception {\n         }\n     }\n \n+    private <T extends HasMetadata> void doPatchEntity(T oldEntity, T newEntity, String namespace, String sourceName) {\n+        String kind = newEntity.getKind();\n+        log.info(\"Updating {} from {}\", kind, sourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "578e1a17e0f592e62696173fdc111c8444f9b280"}, "originalPosition": 194}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c2bb1e14c804950fbb68d069ba1df1aaab867e8", "author": {"user": {"login": "mtrejo", "name": "Marcos Trejo Munguia"}}, "url": "https://github.com/eclipse/jkube/commit/3c2bb1e14c804950fbb68d069ba1df1aaab867e8", "committedDate": "2020-07-10T01:55:16Z", "message": "Fix #267: openshift-maven-plugin does not update Routes\n\nSigned-off-by: Marcos Trejo <marcos.trejo@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjU4OTU1", "url": "https://github.com/eclipse/jkube/pull/279#pullrequestreview-447258955", "createdAt": "2020-07-13T13:39:09Z", "commit": {"oid": "3c2bb1e14c804950fbb68d069ba1df1aaab867e8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 291, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}