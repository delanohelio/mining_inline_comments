{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMTQ5NjQ1", "number": 114, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjozMjoxOVrODqP5rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo0MjoxM1rODqQAqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjI3MzA5OnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/core/assembly/JKubeTarArchiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjozMjoxOVrOF54RHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjozMjoxOVrOF54RHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNTAzNw==", "bodyText": "Try to use Java native ways to achieve the same purpose.\nIf I understand correctly, we're trying to create the directory containing the file specified in the targetFileName variable.\nThis can easily be achieved with: new File(targetFileName).getParent().mkdirs(), no need to reinvent the wheel or create so many helper class methods (there are also alternatives using the new java.nio.file).\nI also see that this targetFileName should always point to a file within a directory > don't see a valid compliant use-case having this variable set to something like /archive.tar especially on *nix systems > pathParts.length > 0 shouldn't be optional.", "url": "https://github.com/eclipse/jkube/pull/114#discussion_r396235037", "createdAt": "2020-03-23T06:32:19Z", "author": {"login": "manusa"}, "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/core/assembly/JKubeTarArchiver.java", "diffHunk": "@@ -67,7 +67,7 @@ public File createArchive(File inputDirectory, BuildDirs buildDirs, ArchiveCompr\n                 String targetFileName = entry.getValue();\n \n                 // 1. Check whether nested directory is there, if not create it\n-                String[] pathParts = targetFileName.split(File.separator);\n+                String[] pathParts = FileUtil.splitFilePathIntoParts(targetFileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2970d2d5d93803e628bef76d0be3355df9e23f9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjI5MDk3OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/FileUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo0MjoxM1rOF54bmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo0MjoxM1rOF54bmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNzcyMw==", "bodyText": "BTW, this comment is not accurate.\nYou have to re-escape the \\ character because String#split accepts a regex and \\ is the escape sequence for Java regular expressions, so you have to re-escape it.", "url": "https://github.com/eclipse/jkube/pull/114#discussion_r396237723", "createdAt": "2020-03-23T06:42:13Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/FileUtil.java", "diffHunk": "@@ -360,5 +360,25 @@ public static void createDirectory(File directory) throws IOException {\n             }\n         }\n     }\n+\n+    protected static String[] splitFilePathIntoParts(String filePath, String separator) {\n+        // To deal with Windows Path separators we have to do this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2970d2d5d93803e628bef76d0be3355df9e23f9"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2049, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}