{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjQwOTk2", "number": 531, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNzozNjozNVrOFKyasA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDoxNTozN1rOFME1vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODU2MTEyOnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/test/java/org/eclipse/jkube/kit/build/service/docker/access/KeyStoreUtilLoadPrivateKeyTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNzozNjozNVrOINn1LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNzozNjozNVrOINn1LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE1NDk4OA==", "bodyText": "I think you are the author of this file :-) .", "url": "https://github.com/eclipse/jkube/pull/531#discussion_r551154988", "createdAt": "2021-01-04T07:36:35Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/build/service/docker/src/test/java/org/eclipse/jkube/kit/build/service/docker/access/KeyStoreUtilLoadPrivateKeyTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * Copyright (c) 2019 Red Hat, Inc.\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at:\n+ *\n+ *     https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Red Hat, Inc. - initial API and implementation\n+ */\n+package org.eclipse.jkube.kit.build.service.docker.access;\n+\n+import java.io.FileNotFoundException;\n+import java.net.URL;\n+import java.security.PrivateKey;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * @author Stas Sukhanov\n+ * @since 08.03.2017\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2e8a57c86af8ab95c8a5bd5c4b28df4cfb9af4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MjA2NTI3OnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/test/java/org/eclipse/jkube/kit/build/service/docker/access/KeyStoreUtilLoadPrivateKeyTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDoxNTozN1rOIPmv6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMDoxNTozN1rOIPmv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzIzNDQxMA==", "bodyText": "nit: Can we make the copy-pasted method in KeyStoreUtilTest static (package private) and reuse it?", "url": "https://github.com/eclipse/jkube/pull/531#discussion_r553234410", "createdAt": "2021-01-07T10:15:37Z", "author": {"login": "manusa"}, "path": "jkube-kit/build/service/docker/src/test/java/org/eclipse/jkube/kit/build/service/docker/access/KeyStoreUtilLoadPrivateKeyTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) 2019 Red Hat, Inc.\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at:\n+ *\n+ *     https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *   Red Hat, Inc. - initial API and implementation\n+ */\n+package org.eclipse.jkube.kit.build.service.docker.access;\n+\n+import java.io.FileNotFoundException;\n+import java.net.URL;\n+import java.security.PrivateKey;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+@RunWith(Parameterized.class)\n+public class KeyStoreUtilLoadPrivateKeyTest {\n+\n+  @Parameterized.Parameter\n+  public String loadPrivateKeyTestName;\n+\n+  @Parameterized.Parameter(1)\n+  public String privateKeyFile;\n+\n+  @Parameterized.Parameters(name = \"{index}: {0}\")\n+  public static Object[][] data() {\n+    return new Object[][] {\n+        { \"loadPrivateKeyDefault\", \"keys/pkcs1.pem\" },\n+        { \"loadPrivateKeyPKCS8\", \"keys/pkcs8.pem\" },\n+        { \"loadPrivateKeyECDSA\", \"keys/ecdsa.pem\" }\n+    };\n+  }\n+\n+  @Test\n+  public void loadPrivateKey() throws Exception {\n+    PrivateKey privateKey = KeyStoreUtil.loadPrivateKey(getFile(privateKeyFile));\n+    assertNotNull(privateKey);\n+  }\n+\n+  private String getFile(String path) throws FileNotFoundException {\n+    URL fileURL = KeyStoreUtilTest.class.getResource(path);\n+    if (fileURL == null)\n+      throw new FileNotFoundException(\"Required private key : '\" + path + \"' not found it test resource directory\");\n+    return fileURL.getFile();\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c20ba5914d2230cfde8201201bd8eb82d75fbd"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1858, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}