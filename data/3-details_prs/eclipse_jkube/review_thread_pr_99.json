{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzE2NTA2", "number": 99, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODozN1rODlzukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTozMVrODlzyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcxNDA4OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODozN1rOFy548Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODozN1rOFy548Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMTU4NQ==", "bodyText": "Can be stored as a static constant for the class:\nprivate static final String FILENAME_PATTERN_REGEX = \"^(?<name>.*?)(-(?<type>[^-]+))?\\\\.(?<ext>yaml|yml|json)$\";\nprivate static final Pattern FILENAME_PATTERN = Pattern.compile(FILENAME_PATTERN_REGEX)", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388921585", "createdAt": "2020-03-06T14:08:37Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcxNTA0OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODo1NFrOFy55gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowODo1NFrOFy55gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMTczMQ==", "bodyText": "Same as FILENAME_PATTERN", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388921731", "createdAt": "2020-03-06T14:08:54Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);\n+        final Pattern exludePattern = Pattern.compile(PROFILES_PATTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcxNzg2OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowOTo0OFrOFy57Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowOTo0OFrOFy57Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjE5MA==", "bodyText": "Please provide some Unit Test validating and documenting the logic", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922190", "createdAt": "2020-03-06T14:09:48Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcyMDE0OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMDoyNlrOFy58lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMDoyNlrOFy58lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjUxOA==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922518", "createdAt": "2020-03-06T14:10:26Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcyMjY3OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTowOVrOFy5-Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTowOVrOFy5-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMjkzMQ==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388922931", "createdAt": "2020-03-06T14:11:09Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTcyNDA5OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTozMVrOFy5_Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxMTozMVrOFy5_Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyMzE1MA==", "bodyText": "Should this be public?", "url": "https://github.com/eclipse/jkube/pull/99#discussion_r388923150", "createdAt": "2020-03-06T14:11:31Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/KubernetesHelper.java", "diffHunk": "@@ -828,5 +834,76 @@ public static boolean removeEnvVar(List<EnvVar> envVarList, String name) {\n         }\n         return removed;\n     }\n+\n+\n+    /**\n+     * Get a specific resource fragment ending with some suffix\n+     *\n+     * @param resourceDirFinal resource directory\n+     * @param remotes list remote fragments if provided\n+     * @param resourceNameSuffix resource name suffix\n+     * @param log log object\n+     * @return file if present or null\n+     */\n+    public static File getResourceFragmentFromSource(File resourceDirFinal, List<String> remotes, String resourceNameSuffix, KitLogger log) {\n+        if (resourceDirFinal != null) {\n+            File[] resourceFiles = listResourceFragments(resourceDirFinal, remotes, log);\n+\n+            if (resourceFiles != null) {\n+                for (File file : resourceFiles) {\n+                    if (file.getName().endsWith(resourceNameSuffix)) {\n+                        return file;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Get requests or limit objects from string hashmaps\n+     *\n+     * @param quantity hashmap of strings\n+     * @return hashmap of string to quantity\n+     */\n+    public static Map<String, Quantity> getQuantityFromString(Map<String, String> quantity) {\n+        Map<String, Quantity> stringQuantityMap = new HashMap<>();\n+        if (quantity != null && !quantity.isEmpty()) {\n+            for (Map.Entry<String, String> entry : quantity.entrySet()) {\n+                stringQuantityMap.put(entry.getKey(), new Quantity(entry.getValue()));\n+            }\n+        }\n+        return stringQuantityMap;\n+    }\n+\n+    public static File[] listResourceFragments(File localResourceDir, List<String> remotes, KitLogger log) {\n+        File[] resourceFiles = listResourceFragments(localResourceDir);\n+\n+        if(remotes != null) {\n+            File[] remoteResourceFiles = listRemoteResourceFragments(remotes, log);\n+            if (remoteResourceFiles.length > 0) {\n+                resourceFiles = ArrayUtils.addAll(resourceFiles, remoteResourceFiles);\n+            }\n+        }\n+        return resourceFiles;\n+    }\n+\n+    public static File[] listResourceFragments(File resourceDir) {\n+        final Pattern filenamePattern = Pattern.compile(FILENAME_PATTERN);\n+        final Pattern exludePattern = Pattern.compile(PROFILES_PATTERN);\n+        return resourceDir.listFiles((File dir, String name) -> filenamePattern.matcher(name).matches() && !exludePattern.matcher(name).matches());\n+    }\n+\n+    public static File[] listRemoteResourceFragments(List<String> remotes, KitLogger log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08ebba836c6d8fb2deb9262b71780a02ae9a6c38"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2041, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}