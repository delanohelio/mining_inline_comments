{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjM4NjQ4", "number": 528, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNDo1MVrOFIktdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNToxNTo0OVrOFIm61g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTM0MzkxOnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/validator/ResourceValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNDo1MVrOIKkZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNDo1MVrOIKkZiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk1MzAzMw==", "bodyText": "Can be replaced by:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String[] allJars = ClassUtil.getJavaClassPath();\n          \n          \n            \n                            for (String jar : allJars) {\n          \n          \n            \n                                URL schemaFile = ClassUtil.getFileFromJar(jar, SCHEMA_JSON);\n          \n          \n            \n                                if (schemaFile != null) {\n          \n          \n            \n                                    JsonSchema schema = getJsonSchema(schemaFile, kind);\n          \n          \n            \n                                    Set<ValidationMessage> errors = schema.validate(inputSpecNode);\n          \n          \n            \n                                    processErrors(errors, resource);\n          \n          \n            \n                                }\n          \n          \n            \n                            for (URL schemaFile : Collections.list(ResourceValidator.class.getClassLoader().getResources(SCHEMA_JSON))) {\n          \n          \n            \n                                JsonSchema schema = getJsonSchema(schemaFile, kind);\n          \n          \n            \n                                Set<ValidationMessage> errors = schema.validate(inputSpecNode);\n          \n          \n            \n                                processErrors(errors, resource);\n          \n          \n            \n                            }\n          \n      \n    \n    \n  \n\nNo need for ClassUtil changes and manually checking Jar files (they should be available to the ClassLoader).", "url": "https://github.com/eclipse/jkube/pull/528#discussion_r547953033", "createdAt": "2020-12-23T13:14:51Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/validator/ResourceValidator.java", "diffHunk": "@@ -102,15 +105,17 @@ private void setupIgnoreRules(ResourceClassifier target) {\n     public int validate() throws IOException {\n         for(File resource: resources) {\n             if (resource.isFile() && resource.exists()) {\n-                try {\n-                    log.info(\"validating %s resource\", resource.toString());\n-                    JsonNode inputSpecNode = geFileContent(resource);\n-                    String kind = inputSpecNode.get(\"kind\").toString();\n-                    JsonSchema schema = getJsonSchema(prepareSchemaUrl(SCHEMA_JSON), kind);\n-                    Set<ValidationMessage> errors = schema.validate(inputSpecNode);\n-                    processErrors(errors, resource);\n-                } catch (URISyntaxException e) {\n-                    throw new IOException(e);\n+                log.info(\"validating %s resource\", resource.toString());\n+                JsonNode inputSpecNode = geFileContent(resource);\n+                String kind = inputSpecNode.get(\"kind\").toString();\n+                String[] allJars = ClassUtil.getJavaClassPath();\n+                for (String jar : allJars) {\n+                    URL schemaFile = ClassUtil.getFileFromJar(jar, SCHEMA_JSON);\n+                    if (schemaFile != null) {\n+                        JsonSchema schema = getJsonSchema(schemaFile, kind);\n+                        Set<ValidationMessage> errors = schema.validate(inputSpecNode);\n+                        processErrors(errors, resource);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c6cdf6170275c9dc5ae2a75505d339f90f07ab"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTM1MjM0OnYy", "diffSide": "RIGHT", "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/ClassUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNzo1NFrOIKkeYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoxNzo1NFrOIKkeYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk1NDI3Mg==", "bodyText": "Can be removed if https://github.com/eclipse/jkube/pull/528/files#r547953033 is applied", "url": "https://github.com/eclipse/jkube/pull/528#discussion_r547954272", "createdAt": "2020-12-23T13:17:54Z", "author": {"login": "manusa"}, "path": "jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/ClassUtil.java", "diffHunk": "@@ -219,5 +225,32 @@ public static URLClassLoader createProjectClassLoader(List<String> elements, Kit\n         // if somehow we incorrectly call this method\n         return new URLClassLoader(new URL[]{});\n     }\n+\n+    public static String[] getJavaClassPath() {\n+        return System.getProperty(JAVA_CLASS_PATH).split(File.pathSeparator);\n+    }\n+\n+    public static URL getFileFromJar(String jarPath, String filePath) throws IOException {\n+        File jarFile = new File(jarPath);\n+        if (jarFile.isFile()) {\n+            try (final JarFile jar = new JarFile(jarFile)) {\n+                final Enumeration<JarEntry> entries = jar.entries(); //gives ALL entries in jar\n+                while(entries.hasMoreElements()) {\n+                    final String name = entries.nextElement().getName();\n+                    if (name.contains(filePath)) { //filter according to the path\n+                        return new URL(\"jar:file:\" + jarPath + \"!\" + appendPathSeparatorIfNotPresent(name));\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private static String appendPathSeparatorIfNotPresent(String fileName) {\n+        if (!fileName.startsWith(File.separator)) {\n+            return File.separator + fileName;\n+        }\n+        return fileName;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c6cdf6170275c9dc5ae2a75505d339f90f07ab"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTM2MTk4OnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/PodLogService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoyMToyN1rOIKkkDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzoyMToyN1rOIKkkDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk1NTcyNw==", "bodyText": "IIRC this has a default implementation (no need to override)", "url": "https://github.com/eclipse/jkube/pull/528#discussion_r547955727", "createdAt": "2020-12-23T13:21:27Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/PodLogService.java", "diffHunk": "@@ -165,9 +165,13 @@ public void eventReceived(Action action, Pod pod) {\n             }\n \n             @Override\n-            public void onClose(KubernetesClientException e) {\n+            public void onClose() {\n                 // ignore\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c6cdf6170275c9dc5ae2a75505d339f90f07ab"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTQ4MTUwOnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/openshift/OpenshiftBuildService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDowMzozNFrOIKlp0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDowMzozNFrOIKlp0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3MzU4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        client.secrets().withName(pullSecretName).edit(s -> new SecretBuilder()\n          \n          \n            \n                        client.secrets().withName(pullSecretName).edit(s -> new SecretBuilder(s)", "url": "https://github.com/eclipse/jkube/pull/528#discussion_r547973584", "createdAt": "2020-12-23T14:03:34Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/openshift/OpenshiftBuildService.java", "diffHunk": "@@ -455,13 +457,13 @@ private boolean checkOrCreatePullSecret(OpenShiftClient client, KubernetesListBu\n \n     private boolean updateSecret(OpenShiftClient client, String pullSecretName, Map<String, String> data) {\n         if (!Objects.equals(data, client.secrets().withName(pullSecretName).get().getData())) {\n-            client.secrets().withName(pullSecretName).edit()\n+            client.secrets().withName(pullSecretName).edit(s -> new SecretBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11c6cdf6170275c9dc5ae2a75505d339f90f07ab"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTcwNTgyOnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/PortForwardService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNToxNTo0OVrOIKnsWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNToxNTo0OVrOIKnsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAwNzAwMw==", "bodyText": "Same as #528 (review)\nPlease check if there are more of these.", "url": "https://github.com/eclipse/jkube/pull/528#discussion_r548007003", "createdAt": "2020-12-23T15:15:49Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/PortForwardService.java", "diffHunk": "@@ -154,9 +155,15 @@ public void eventReceived(Action action, Pod pod) {\n             }\n \n             @Override\n-            public void onClose(KubernetesClientException e) {\n+            public void onClose() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c578461e69cd90e83241b39d86f704d5d6489ce"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1855, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}