{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjc4Njg3", "number": 271, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0NTo1M1rOEMClTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0ODo0NVrOEMCoxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDYwNjg0OnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/DockerFileUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0NTo1M1rOGt63Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0NTo1M1rOGt63Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwMzQ5NA==", "bodyText": "No longer used, since we have `public static String interpolate(File dockerFile, Properties properties, String filter) throws IOException {, please remove (test too)", "url": "https://github.com/eclipse/jkube/pull/271#discussion_r450803494", "createdAt": "2020-07-07T11:45:53Z", "author": {"login": "manusa"}, "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/DockerFileUtil.java", "diffHunk": "@@ -103,15 +102,36 @@ private DockerFileUtil() {}\n      *\n      * @param dockerFile docker file to interpolate.\n      * @param properties properties to interpolate in the provided dockerFile.\n+     * @param filter filter for parsing properties from Dockerfile\n+     * @return The interpolated contents of the file.\n+     * @throws IOException if there's a problem while performin IO operations.\n+     */\n+    public static String interpolate(File dockerFile, Properties properties, String filter) throws IOException {\n+        StringBuilder ret = new StringBuilder();\n+        try (BufferedReader reader = new BufferedReader(new FileReader(dockerFile))) {\n+            String line;\n+            while ((line = reader.readLine()) != null) {\n+                ret.append(JKubeDockerfileInterpolator.interpolate(line, properties, filter)).append(System.lineSeparator());\n+            }\n+        }\n+        return ret.toString();\n+    }\n+\n+     /**\n+     * Interpolate a docker file with the given properties and filter\n+     *\n+     * @param dockerFile docker file to interpolate.\n+     * @param properties properties to interpolate in the provided dockerFile.\n+      * @param customInterpolationParams additional delimiters for interpolation\n      * @return The interpolated contents of the file.\n      * @throws IOException if there's a problem while performin IO operations.\n      */\n-    public static String interpolate(File dockerFile, Properties properties) throws IOException {\n+    public static String interpolate(File dockerFile, Properties properties, Map<String, String> customInterpolationParams) throws IOException {\n         StringBuilder ret = new StringBuilder();\n         try (BufferedReader reader = new BufferedReader(new FileReader(dockerFile))) {\n             String line;\n             while ((line = reader.readLine()) != null) {\n-                ret.append(JKubeDockerfileInterpolator.interpolate(line, properties)).append(System.lineSeparator());\n+                ret.append(JKubeDockerfileInterpolator.interpolate(line, properties, customInterpolationParams)).append(System.lineSeparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc1f7fc75fd2a47149c83180f23fea6b4f9dfd5"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDYwOTA5OnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/JKubeDockerfileInterpolator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0NjoyOVrOGt64aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0NjoyOVrOGt64aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwMzgxOQ==", "bodyText": "Unused code, please remove", "url": "https://github.com/eclipse/jkube/pull/271#discussion_r450803819", "createdAt": "2020-07-07T11:46:29Z", "author": {"login": "manusa"}, "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/JKubeDockerfileInterpolator.java", "diffHunk": "@@ -13,37 +13,197 @@\n  */\n package org.eclipse.jkube.kit.build.service.docker.helper;\n \n+import org.apache.commons.lang3.StringUtils;\n+\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n \n public class JKubeDockerfileInterpolator {\n-    private static Map<String, String> delimiters;\n-    static {\n-        delimiters = new HashMap<>();\n-        delimiters.put(\"@\", \"@\");\n-        delimiters.put(\"${\", \"}\");\n-    }\n \n     private JKubeDockerfileInterpolator() { }\n \n-    public static String interpolate(String line, Properties properties) {\n+    public static String interpolate(String line, Map<String, String> context, String filter) {\n+        return interpolate(line, context, getExpressionMarkersFromFilter(filter));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc1f7fc75fd2a47149c83180f23fea6b4f9dfd5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDYxNTc1OnYy", "diffSide": "RIGHT", "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/JKubeDockerfileInterpolator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0ODo0NVrOGt68vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo0ODo0NVrOGt68vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNDkyNA==", "bodyText": "Unused code, please remove.\nIf you created either of these unused methods to comply with tests, just update the tests to provide the necessary input parameters for the functions.", "url": "https://github.com/eclipse/jkube/pull/271#discussion_r450804924", "createdAt": "2020-07-07T11:48:45Z", "author": {"login": "manusa"}, "path": "jkube-kit/build/service/docker/src/main/java/org/eclipse/jkube/kit/build/service/docker/helper/JKubeDockerfileInterpolator.java", "diffHunk": "@@ -13,37 +13,197 @@\n  */\n package org.eclipse.jkube.kit.build.service.docker.helper;\n \n+import org.apache.commons.lang3.StringUtils;\n+\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n \n public class JKubeDockerfileInterpolator {\n-    private static Map<String, String> delimiters;\n-    static {\n-        delimiters = new HashMap<>();\n-        delimiters.put(\"@\", \"@\");\n-        delimiters.put(\"${\", \"}\");\n-    }\n \n     private JKubeDockerfileInterpolator() { }\n \n-    public static String interpolate(String line, Properties properties) {\n+    public static String interpolate(String line, Map<String, String> context, String filter) {\n+        return interpolate(line, context, getExpressionMarkersFromFilter(filter));\n+    }\n+\n+    public static String interpolate(String line, Properties properties, String filter) {\n+        return interpolate(line, properties, getExpressionMarkersFromFilter(filter));\n+    }\n+\n+    /**\n+     * Replace properties in a string\n+     *\n+     * @param line              string provided with parameters\n+     * @param context           properties provided as hashmap\n+     * @param expressionMarkers additional markers to use for parameterized expressions\n+     * @return string with properties parameters replaced\n+     */\n+    public static String interpolate(String line, Map<String, String> context, Map<String, String> expressionMarkers) {\n+        Properties p = new Properties();\n+        context.forEach(p::put);\n+        return checkForPropertiesInLine(line, p, expressionMarkers, null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc1f7fc75fd2a47149c83180f23fea6b4f9dfd5"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1986, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}