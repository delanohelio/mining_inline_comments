{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTIwMjQ5", "number": 278, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo0MzoyMFrOENLL4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoyMDoyOVrOENORvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjUwMjA5OnYy", "diffSide": "RIGHT", "path": "jkube-kit/generator/java-exec/src/main/java/org/eclipse/jkube/generator/javaexec/JavaExecGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo0MzoyMFrOGvtRZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzo0MzoyMFrOGvtRZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3Nzk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \" dependencies for you application to run.\");\n          \n          \n            \n                            \" dependencies for your application to run.\");", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452677991", "createdAt": "2020-07-10T07:43:20Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/generator/java-exec/src/main/java/org/eclipse/jkube/generator/javaexec/JavaExecGenerator.java", "diffHunk": "@@ -173,21 +170,17 @@ protected AssemblyConfiguration createAssembly() {\n     }\n \n     protected void addAssembly(AssemblyConfiguration.AssemblyConfigurationBuilder builder) {\n-        String assemblyRef = getConfig(Config.assemblyRef);\n-        if (assemblyRef != null) {\n-            builder.descriptorRef(assemblyRef);\n-        } else {\n-            final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n-            if (isFatJar()) {\n-                FatJarDetector.Result fatJar = detectFatJar();\n-                if (fatJar != null) {\n-                    fileSets.add(getOutputDirectoryFileSet(fatJar, getProject()));\n-                }\n-            } else {\n-                builder.descriptorRef(\"artifact-with-dependencies\");\n+        final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n+        if (isFatJar()) {\n+            FatJarDetector.Result fatJar = detectFatJar();\n+            if (fatJar != null) {\n+                fileSets.add(getOutputDirectoryFileSet(fatJar, getProject()));\n             }\n-            builder.inline(Assembly.builder().fileSets(fileSets).build());\n+        } else {\n+            log.warn(\"No fat Jar detected, make sure your image assembly configuration contains all the required\" +\n+                \" dependencies for you application to run.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjk1MTgzOnYy", "diffSide": "RIGHT", "path": "jkube-kit/jkube-kit-openliberty/src/main/java/org/eclipse/jkube/openliberty/generator/OpenLibertyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDowMTowN1rOGvxlMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDowMTowN1rOGvxlMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0ODU5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \" dependencies for you application to run.\");\n          \n          \n            \n                            \" dependencies for your application to run.\");", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452748592", "createdAt": "2020-07-10T10:01:07Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/jkube-kit-openliberty/src/main/java/org/eclipse/jkube/openliberty/generator/OpenLibertyGenerator.java", "diffHunk": "@@ -70,26 +70,22 @@ public boolean isApplicable(List<ImageConfiguration> configs) {\n \n     @Override\n     protected void addAssembly(AssemblyConfiguration.AssemblyConfigurationBuilder builder) {\n-        String assemblyRef = getConfig(Config.assemblyRef);\n-        if (assemblyRef != null) {\n-            builder.descriptorRef(assemblyRef);\n-        } else {\n-            final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n-            if (isFatJar()) {\n-                FatJarDetector.Result fatJar = detectFatJar();\n-                JavaProject project = getProject();\n-                if (fatJar != null) {\n-                    AssemblyFileSet fileSet = getOutputDirectoryFileSet(fatJar, project);\n-                    if (LIBERTY_SELF_EXTRACTOR.equals(fatJar.getMainClass())) {\n-                        this.runnableJarName = fatJar.getArchiveFile().getName();\n-                    }\n-                    fileSets.add(fileSet);\n+        final List<AssemblyFileSet> fileSets = new ArrayList<>(addAdditionalFiles());\n+        if (isFatJar()) {\n+            FatJarDetector.Result fatJar = detectFatJar();\n+            JavaProject project = getProject();\n+            if (fatJar != null) {\n+                AssemblyFileSet fileSet = getOutputDirectoryFileSet(fatJar, project);\n+                if (LIBERTY_SELF_EXTRACTOR.equals(fatJar.getMainClass())) {\n+                    this.runnableJarName = fatJar.getArchiveFile().getName();\n                 }\n-            } else {\n-                builder.descriptorRef(\"artifact-with-dependencies\");\n+                fileSets.add(fileSet);\n             }\n-            builder.inline(Assembly.builder().fileSets(fileSets).build());\n+        } else {\n+            log.warn(\"No fat Jar detected, make sure your image assembly configuration contains all the required\" +\n+                \" dependencies for you application to run.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjk2NDU2OnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDowNToyN1rOGvxtTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1OTo0NVrOGv2YeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            a| User and/or group under which the files should be added. The user must already exist in the base image.\n          \n          \n            \n            | User and/or group under which the files should be added. The user must already exist in the base image.", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452750669", "createdAt": "2020-07-10T10:05:27Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -51,8 +55,8 @@ assembly configuration\n | *tarLongFileMode*\n | Sets the TarArchiver behaviour on file paths with more than 100 characters length. Valid values are: \"warn\"(default), \"fail\", \"truncate\", \"gnu\", \"posix\", \"posix_warn\" or \"omit\"\n \n-| [[config-image-build-assembly-user]] *user*\n-| User and/or group under which the files should be added. The user must already exist in the base image.\n+| *user*\n+a| User and/or group under which the files should be added. The user must already exist in the base image.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNjk1NQ==", "bodyText": "This is not a typo, it's asciidoc syntax", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452826955", "createdAt": "2020-07-10T12:59:14Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -51,8 +55,8 @@ assembly configuration\n | *tarLongFileMode*\n | Sets the TarArchiver behaviour on file paths with more than 100 characters length. Valid values are: \"warn\"(default), \"fail\", \"truncate\", \"gnu\", \"posix\", \"posix_warn\" or \"omit\"\n \n-| [[config-image-build-assembly-user]] *user*\n-| User and/or group under which the files should be added. The user must already exist in the base image.\n+| *user*\n+a| User and/or group under which the files should be added. The user must already exist in the base image.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ=="}, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNzI1Ng==", "bodyText": "oh,ok", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452827256", "createdAt": "2020-07-10T12:59:45Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -51,8 +55,8 @@ assembly configuration\n | *tarLongFileMode*\n | Sets the TarArchiver behaviour on file paths with more than 100 characters length. Valid values are: \"warn\"(default), \"fail\", \"truncate\", \"gnu\", \"posix\", \"posix_warn\" or \"omit\"\n \n-| [[config-image-build-assembly-user]] *user*\n-| User and/or group under which the files should be added. The user must already exist in the base image.\n+| *user*\n+a| User and/or group under which the files should be added. The user must already exist in the base image.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MDY2OQ=="}, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjk3MTU0OnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDowNzo0N1rOGvxxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1OTozMVrOGv2X_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MTc4Mw==", "bodyText": "Is this by accident or does this preceding a has some purpose which I'm not aware of?", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452751783", "createdAt": "2020-07-10T10:07:47Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -64,140 +68,50 @@ For example, the image `jboss/wildfly` use a \"jboss\" user under which all comman\n \n In the event you do not need to include any artifacts with the image, you may safely omit this element from the configuration.\n \n-[[build-assembly-descriptor]]\n-==== Assembly Descriptor\n-\n-With using the `inline`, `descriptor` or `descriptorRef` option\n-it is possible to bring local files, artifacts and dependencies into\n-the running Docker container. A `descriptor` points to a file\n-describing the data to put into an image to build. It has the same\n-http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[format] as for creating assemblies with the\n-http://maven.apache.org/plugins/maven-assembly-plugin[maven-assembly-plugin] with following exceptions:\n-\n-* `<formats>` are ignored, the assembly will allways use a directory\n-when preparing the data container (i.e. the format is fixed to\n-`dir`)\n-* The `<id>` is ignored since only a single assembly descriptor is\n-used (no need to distinguish multiple descriptors)\n-\n-Also you can inline the assembly description with a `inline` description\n-directly into the pom file. Adding the proper namespace even allows for\n-IDE autocompletion. As an example, refer to the profile `inline` in\n-the `data-jolokia-demo` 's pom.xml.\n-\n-Alternatively `descriptorRef` can be used with the name of a\n-predefined assembly descriptor. The following symbolic names can be\n-used for `descriptorRef`:\n-\n-[[build-assembly-descriptor-refs]]\n-.Predefined Assembly Descriptors\n-[cols=\"1,3\"]\n+[[build-assembly-inline]]\n+==== Assembly - Inline\n+\n+Inlined assembly description with a format very similar to\n+https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[Maven Assembly Plugin].\n+\n+[cols=\"1,5\"]\n |===\n-| Assembly Reference | Description\n+| Element | Description\n \n-| *artifact-with-dependencies*\n-| Attaches project's artifact and all its dependencies. Also, when a `classpath` file exists in the target directory, this will be added to.\n+| *id*\n+| Unique ID for the assembly.\n \n-| *artifact*\n-| Attaches only the project's artifact but no dependencies.\n+| *files*\n+a| List of files for the assembly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNzEzNA==", "bodyText": "https://asciidoctor.org/docs/user-manual/#tables\nOur docs are full of these", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452827134", "createdAt": "2020-07-10T12:59:31Z", "author": {"login": "manusa"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -64,140 +68,50 @@ For example, the image `jboss/wildfly` use a \"jboss\" user under which all comman\n \n In the event you do not need to include any artifacts with the image, you may safely omit this element from the configuration.\n \n-[[build-assembly-descriptor]]\n-==== Assembly Descriptor\n-\n-With using the `inline`, `descriptor` or `descriptorRef` option\n-it is possible to bring local files, artifacts and dependencies into\n-the running Docker container. A `descriptor` points to a file\n-describing the data to put into an image to build. It has the same\n-http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[format] as for creating assemblies with the\n-http://maven.apache.org/plugins/maven-assembly-plugin[maven-assembly-plugin] with following exceptions:\n-\n-* `<formats>` are ignored, the assembly will allways use a directory\n-when preparing the data container (i.e. the format is fixed to\n-`dir`)\n-* The `<id>` is ignored since only a single assembly descriptor is\n-used (no need to distinguish multiple descriptors)\n-\n-Also you can inline the assembly description with a `inline` description\n-directly into the pom file. Adding the proper namespace even allows for\n-IDE autocompletion. As an example, refer to the profile `inline` in\n-the `data-jolokia-demo` 's pom.xml.\n-\n-Alternatively `descriptorRef` can be used with the name of a\n-predefined assembly descriptor. The following symbolic names can be\n-used for `descriptorRef`:\n-\n-[[build-assembly-descriptor-refs]]\n-.Predefined Assembly Descriptors\n-[cols=\"1,3\"]\n+[[build-assembly-inline]]\n+==== Assembly - Inline\n+\n+Inlined assembly description with a format very similar to\n+https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[Maven Assembly Plugin].\n+\n+[cols=\"1,5\"]\n |===\n-| Assembly Reference | Description\n+| Element | Description\n \n-| *artifact-with-dependencies*\n-| Attaches project's artifact and all its dependencies. Also, when a `classpath` file exists in the target directory, this will be added to.\n+| *id*\n+| Unique ID for the assembly.\n \n-| *artifact*\n-| Attaches only the project's artifact but no dependencies.\n+| *files*\n+a| List of files for the assembly.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MTc4Mw=="}, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjk5MjcyOnYy", "diffSide": "RIGHT", "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoxNTowN1rOGvx-ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoxNTowN1rOGvx-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1NTEzOQ==", "bodyText": "here too", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452755139", "createdAt": "2020-07-10T10:15:07Z", "author": {"login": "rohanKanojia"}, "path": "kubernetes-maven-plugin/doc/src/main/asciidoc/inc/build/_assembly.adoc", "diffHunk": "@@ -64,140 +68,50 @@ For example, the image `jboss/wildfly` use a \"jboss\" user under which all comman\n \n In the event you do not need to include any artifacts with the image, you may safely omit this element from the configuration.\n \n-[[build-assembly-descriptor]]\n-==== Assembly Descriptor\n-\n-With using the `inline`, `descriptor` or `descriptorRef` option\n-it is possible to bring local files, artifacts and dependencies into\n-the running Docker container. A `descriptor` points to a file\n-describing the data to put into an image to build. It has the same\n-http://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[format] as for creating assemblies with the\n-http://maven.apache.org/plugins/maven-assembly-plugin[maven-assembly-plugin] with following exceptions:\n-\n-* `<formats>` are ignored, the assembly will allways use a directory\n-when preparing the data container (i.e. the format is fixed to\n-`dir`)\n-* The `<id>` is ignored since only a single assembly descriptor is\n-used (no need to distinguish multiple descriptors)\n-\n-Also you can inline the assembly description with a `inline` description\n-directly into the pom file. Adding the proper namespace even allows for\n-IDE autocompletion. As an example, refer to the profile `inline` in\n-the `data-jolokia-demo` 's pom.xml.\n-\n-Alternatively `descriptorRef` can be used with the name of a\n-predefined assembly descriptor. The following symbolic names can be\n-used for `descriptorRef`:\n-\n-[[build-assembly-descriptor-refs]]\n-.Predefined Assembly Descriptors\n-[cols=\"1,3\"]\n+[[build-assembly-inline]]\n+==== Assembly - Inline\n+\n+Inlined assembly description with a format very similar to\n+https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html[Maven Assembly Plugin].\n+\n+[cols=\"1,5\"]\n |===\n-| Assembly Reference | Description\n+| Element | Description\n \n-| *artifact-with-dependencies*\n-| Attaches project's artifact and all its dependencies. Also, when a `classpath` file exists in the target directory, this will be added to.\n+| *id*\n+| Unique ID for the assembly.\n \n-| *artifact*\n-| Attaches only the project's artifact but no dependencies.\n+| *files*\n+a| List of files for the assembly.\n \n-| *project*\n-| Attaches the whole Maven project but with out the `target/` directory.\n+Each file has the following fields:\n+\n+* `source`: Absolute or relative path from the project's directory of the file to be included in the assembly.\n+* `outputDirectory`: Output directory relative to the root of the root directory of the assembly.\n+* `destName`: Destination filename in the outputDirectory.\n+* `fileMode`: Similar to a UNIX permission, sets the file mode of the file included.\n+\n+| *fileSets*\n+a| List of filesets for the Assembly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzAwODYzOnYy", "diffSide": "RIGHT", "path": "quickstarts/maven/xml-config/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoyMDoyOVrOGvyIZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoyMDoyOVrOGvyIZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1NzYwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      <!-- Standard d-m-p configuration which defines how images are build, i.e. how the docker.tar is created -->\n          \n          \n            \n                      <!-- Standard jkube/kmp configuration which defines how images are build, i.e. how the docker.tar is created -->", "url": "https://github.com/eclipse/jkube/pull/278#discussion_r452757605", "createdAt": "2020-07-10T10:20:29Z", "author": {"login": "rohanKanojia"}, "path": "quickstarts/maven/xml-config/pom.xml", "diffHunk": "@@ -135,167 +156,111 @@\n           <mainClass>org.apache.camel.cdi.Main</mainClass>\n         </configuration>\n       </plugin>\n+      <plugin>\n+        <groupId>org.eclipse.jkube</groupId>\n+        <artifactId>kubernetes-maven-plugin</artifactId>\n+        <version>${project.version}</version>\n+\n+        <configuration>\n+          <!-- Standard d-m-p configuration which defines how images are build, i.e. how the docker.tar is created -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0158f25a46284d5253860d671f27caa4b773e964"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1993, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}