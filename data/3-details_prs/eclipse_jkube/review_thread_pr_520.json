{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTI4Nzgz", "number": 520, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDowNTo0NlrOFKB2qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDowNTo0NlrOFKB2qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDYwNDU3OnYy", "diffSide": "RIGHT", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDowNTo0NlrOIMnxaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo1MjoxOVrOIS15_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ==", "bodyText": "This test is used to verify that all applicable entities are deleted.\nPreviously this meant pod and service, but not namespace.\nPlease, add a new \"not-applicable\" entity to verify that it's not deleted.", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r550105449", "createdAt": "2020-12-30T10:05:46Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "diffHunk": "@@ -98,13 +98,16 @@ public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file\n     // Then\n     // @formatter:off\n     new Verifications() {{\n-      kubernetesHelper.getKind((HasMetadata)any); times = 2;\n+      kubernetesHelper.getKind((HasMetadata)any); times = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b232901d40ef70744d0c1b2c48902280eaa2bcf9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE4MTUyNg==", "bodyText": "Hello, I am not able to understand\tyour comment. Could you please elaborate on it? Are you talking about a jkubeServiceHub.getClient().resource(..) verification entry for namespace? I think it's already there.\nWe were earlier filtering Namespace and Project in undeployResources. Now we're processing them after un-deploying standard resources. I'm not sure which entities can be considered as non-applicable since we're covering both now.", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r551181526", "createdAt": "2021-01-04T08:47:08Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "diffHunk": "@@ -98,13 +98,16 @@ public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file\n     // Then\n     // @formatter:off\n     new Verifications() {{\n-      kubernetesHelper.getKind((HasMetadata)any); times = 2;\n+      kubernetesHelper.getKind((HasMetadata)any); times = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}, "originalCommit": {"oid": "b232901d40ef70744d0c1b2c48902280eaa2bcf9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMxMzI4Nw==", "bodyText": "No, I mean this test verifies that only \"deletable\"/\"undeployable\" instances are deleted.\nInitially this test used Namespace, not because of its specific resource type, but because it was not deletable. Namespace resource verification is not what this test is for, it's to verify undeploy behavior.\nThis meant that the kubernetesHelper.getKind((HasMetadata)any);  method was called 2 times despite there was a request to delete 3 resources . This is because before this PR, Namespace was not an \"undeployable\" resource (now it is).\nYou need to find some other resource which is not \"undeployable\" and use that instead of Namespace.", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r553313287", "createdAt": "2021-01-07T13:01:50Z", "author": {"login": "manusa"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "diffHunk": "@@ -98,13 +98,16 @@ public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file\n     // Then\n     // @formatter:off\n     new Verifications() {{\n-      kubernetesHelper.getKind((HasMetadata)any); times = 2;\n+      kubernetesHelper.getKind((HasMetadata)any); times = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}, "originalCommit": {"oid": "b232901d40ef70744d0c1b2c48902280eaa2bcf9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYyODQ3OQ==", "bodyText": "Umm, I'm sorry. I'm still a bit confused. Earlier we were ignoring Namespace/ Project which we're not doing anymore. Now we don't have any resource which is undeployable. Even if I include some resource that is not supported by resource API like this(TokenReview doesn't have any handler since it hasn't got any list type):\n  @Test\n  public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file) throws Exception {\n    // Given\n    final Namespace namespace = new NamespaceBuilder().withNewMetadata().withName(\"default\").endMetadata().build();\n    final TokenReview tokenReview = new TokenReviewBuilder().build(); // -> A Resource which can't be deployed via client.resource() API\n    final Pod pod = new PodBuilder().withNewMetadata().withName(\"MrPoddington\").endMetadata().build();\n    final Service service = new Service();\n    // @formatter:off\n    new Expectations() {{\n      file.exists(); result = true;\n      file.isFile(); result = true;\n      kubernetesHelper.loadResources(file);\n      result = new HashSet<>(Arrays.asList(namespace, pod, service, tokenReview));\n    }};\n    // @formatter:on\n    // When\n    kubernetesUndeployService.undeploy(null, null, file);\n    // Then\n    // @formatter:off\n    new Verifications() {{\n      kubernetesHelper.getKind((HasMetadata)any); times = 4; // <- Extra invocation for TokenReview\n      jKubeServiceHub.getClient().resource(pod).inNamespace(\"default\")\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n      jKubeServiceHub.getClient().resource(service).inNamespace(\"default\")\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n      jKubeServiceHub.getClient().resource(namespace)\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n    }};\n    // @formatter:on\n  }\nKubernetesHelper.getKind() still gets invoked.", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r556628479", "createdAt": "2021-01-13T15:52:19Z", "author": {"login": "rohanKanojia"}, "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "diffHunk": "@@ -98,13 +98,16 @@ public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file\n     // Then\n     // @formatter:off\n     new Verifications() {{\n-      kubernetesHelper.getKind((HasMetadata)any); times = 2;\n+      kubernetesHelper.getKind((HasMetadata)any); times = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}, "originalCommit": {"oid": "b232901d40ef70744d0c1b2c48902280eaa2bcf9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1852, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}