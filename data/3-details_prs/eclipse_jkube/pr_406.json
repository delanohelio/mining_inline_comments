{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDI4MTg2", "number": 406, "title": "Fix #382: Add support for merging fragment Route spec with default generated Route", "bodyText": "Fix #382 & #383\nRouteEnricher now considers merging opinionated route with route provided in resource fragments(if any). Earlier RouteEnricher used to skip a generation of the opinionated route if it found a route corresponding to target Service inside KubernetesListBuilder\nDescription\n\nType of change\n\n\n Bug fix (non-breaking change which fixes an issue)\n Feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to change\n Chore (non-breaking change which doesn't affect codebase;\ntest, version modification, documentation, etc.)\n\nChecklist\n\n I have read the contributing guidelines\n I signed-off my commit with a user that has signed the Eclipse Contributor Agreement\n I Added CHANGELOG entry\n I have implemented unit tests to cover my changes\n I have updated the documentation accordingly\n No new bugs, code smells, etc. in SonarCloud report\n I tested my code in Kubernetes\n I tested my code in OpenShift", "createdAt": "2020-09-25T12:05:37Z", "url": "https://github.com/eclipse/jkube/pull/406", "merged": true, "mergeCommit": {"oid": "63bde26c01317f4075238cd81d667879c9292efd"}, "closed": true, "closedAt": "2020-09-30T12:51:28Z", "author": {"login": "rohanKanojia"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNOfH5gFqTQ5NzI1MjA0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN5bmPgFqTQ5OTI1MDMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjUyMDQ3", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-497252047", "createdAt": "2020-09-28T07:30:55Z", "commit": {"oid": "10df4d96f5588d12a2e24d46bdb291087fb2ba91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzozMDo1NVrOHYxm6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzozMDo1NVrOHYxm6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0MDY1MQ==", "bodyText": "There are several things I don't understand here.\n\nWhy did we replace the Set with an ArrayList?\nWhy are we no longer statically initilaizing the collection (The collection is now created each time we invoke the method)?\nIf this collection is to be different depending on where it is invoked (e.g. DefaultControllerEnricher), why aren't we creating an instantiable dedicated util class where the Collection can be customized?", "url": "https://github.com/eclipse/jkube/pull/406#discussion_r495740651", "createdAt": "2020-09-28T07:30:55Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/api/src/main/java/org/eclipse/jkube/kit/enricher/api/util/KubernetesResourceUtil.java", "diffHunk": "@@ -727,6 +725,27 @@ private static void ensureHasPort(Container container, ContainerPort port) {\n         ports.add(port);\n     }\n \n+    private static boolean isSimpleFieldType(Class<?> type) {\n+        ArrayList<Class<?>> simpleFieldTypes = new ArrayList<>();\n+        simpleFieldTypes.add(String.class);\n+        simpleFieldTypes.add(Double.class);\n+        simpleFieldTypes.add(Float.class);\n+        simpleFieldTypes.add(Long.class);\n+        simpleFieldTypes.add(Integer.class);\n+        simpleFieldTypes.add(Short.class);\n+        simpleFieldTypes.add(Character.class);\n+        simpleFieldTypes.add(Byte.class);\n+        simpleFieldTypes.add(double.class);\n+        simpleFieldTypes.add(float.class);\n+        simpleFieldTypes.add(long.class);\n+        simpleFieldTypes.add(int.class);\n+        simpleFieldTypes.add(short.class);\n+        simpleFieldTypes.add(char.class);\n+        simpleFieldTypes.add(byte.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10df4d96f5588d12a2e24d46bdb291087fb2ba91"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10df4d96f5588d12a2e24d46bdb291087fb2ba91", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/10df4d96f5588d12a2e24d46bdb291087fb2ba91", "committedDate": "2020-09-25T12:03:59Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}, "afterCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/fca541fff543cc576c625cee84e10ba70894572c", "committedDate": "2020-09-28T07:43:36Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzY5Nzcw", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-497369770", "createdAt": "2020-09-28T10:09:43Z", "commit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDowOTo0M1rOHY3GMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDowOTo0M1rOHY3GMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzMDU3Ng==", "bodyText": "MapUtil.mergeMaps already takes care of the initial checks you've done here (+ preserves immutability)\n\n  \n    \n      jkube/jkube-kit/common/src/main/java/org/eclipse/jkube/kit/common/util/MapUtil.java\n    \n    \n        Lines 59 to 67\n      in\n      645268c\n    \n    \n    \n    \n\n        \n          \n           public static <K,V> Map<K,V> mergeMaps(Map<K, V> map1, Map<K, V> map2) { \n        \n\n        \n          \n               Map<K, V> answer = new HashMap<>(); \n        \n\n        \n          \n               if (map2 != null) { \n        \n\n        \n          \n                   answer.putAll(map2); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               if (map1 != null) { \n        \n\n        \n          \n                   answer.putAll(map1); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               return answer; \n        \n    \n  \n\n\nYou probably just want to do this:\nfinal Map<String, String> answer = MapUtil.mergeMaps(overrideMap, originalMap);\nif (overrideMap != null && originalMap != null) {\n  /* ... */\n}\nreturn answer;", "url": "https://github.com/eclipse/jkube/pull/406#discussion_r495830576", "createdAt": "2020-09-28T10:09:43Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/api/src/main/java/org/eclipse/jkube/kit/enricher/api/util/KubernetesResourceUtil.java", "diffHunk": "@@ -983,16 +1002,24 @@ protected static void mergeMetadata(HasMetadata item1, HasMetadata item2) {\n      * when overriding\n      */\n     private static Map<String, String> mergeMapsAndRemoveEmptyStrings(Map<String, String> overrideMap, Map<String, String> originalMap) {\n-        Map<String, String> answer = MapUtil.mergeMaps(overrideMap, originalMap);\n-        Set<Map.Entry<String, String>> entries = overrideMap.entrySet();\n-        for (Map.Entry<String, String> entry : entries) {\n-            String value = entry.getValue();\n-            if (value == null || value.isEmpty()) {\n-                String key = entry.getKey();\n-                answer.remove(key);\n+        if (overrideMap == null && originalMap == null) {\n+            return Collections.emptyMap();\n+        } else if (originalMap == null) {\n+            return overrideMap;\n+        } else if (overrideMap == null) {\n+            return originalMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mzc3NTMx", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-497377531", "createdAt": "2020-09-28T10:21:03Z", "commit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyMTowM1rOHY3c-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyMTowM1rOHY3c-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzNjQxMQ==", "bodyText": "This comment is completely irrelevant.\nIf you want to add a helpful comment because it's necessary and cannot be inferred with a test, then write something like\n// Update version because of/due to....\nI read the code and still don't understand why the change in the api version is required. This comment only tells me what I can already read in the code.", "url": "https://github.com/eclipse/jkube/pull/406#discussion_r495836411", "createdAt": "2020-09-28T10:21:03Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/generic/src/main/java/org/eclipse/jkube/enricher/generic/openshift/RouteEnricher.java", "diffHunk": "@@ -157,58 +151,111 @@ private boolean hasExactlyOneServicePort(ServiceBuilder service, String id) {\n         }\n     }\n \n-    private void addRoute(KubernetesListBuilder listBuilder, ServiceBuilder serviceBuilder, List<Route> routes) {\n+    private void addRoute(KubernetesListBuilder listBuilder, ServiceBuilder serviceBuilder) {\n         ObjectMeta serviceMetadata = serviceBuilder.buildMetadata();\n \n         if (serviceMetadata != null && StringUtils.isNotBlank(serviceMetadata.getName())\n                 && hasExactlyOneServicePort(serviceBuilder, serviceMetadata.getName()) && isExposedService(serviceMetadata)) {\n             String name = serviceMetadata.getName();\n-            if (!hasRoute(listBuilder, name)) {\n-                if (StringUtils.isNotBlank(routeDomainPostfix)) {\n-                    routeDomainPostfix = prepareHostForRoute(routeDomainPostfix, name);\n-                } else {\n-                    routeDomainPostfix = \"\";\n+            updateRouteDomainPostFixBasedOnServiceName(name);\n+            Route opinionatedRoute = createOpinionatedRouteFromService(serviceBuilder, routeDomainPostfix);\n+            if (opinionatedRoute != null) {\n+                int routeFromFragmentIndex = getRouteIndexWithName(listBuilder, name);\n+                if (routeFromFragmentIndex > 0) { // Merge fragment with Opinionated Route\n+                    Route routeFragment = (Route) listBuilder.buildItems().get(routeFromFragmentIndex);\n+                    Route mergedRoute = mergeRoute(routeFragment, opinionatedRoute);\n+                    KubernetesResourceUtil.removeItemFromKubernetesBuilder(listBuilder, listBuilder.getItems().get(routeFromFragmentIndex));\n+                    listBuilder.addToItems(mergedRoute);\n+                } else { // No fragment provided. Use Opinionated Route.\n+                    listBuilder.addToItems(opinionatedRoute);\n                 }\n+            }\n+        }\n+    }\n \n-                RoutePort routePort = createRoutePort(serviceBuilder);\n-                if (routePort != null) {\n-                    RouteBuilder routeBuilder = new RouteBuilder().\n-                            withMetadata(serviceMetadata).\n-                            withNewSpec().\n-                            withPort(routePort).\n-                            withNewTo().withKind(\"Service\").withName(name).endTo().\n-                            withHost(routeDomainPostfix.isEmpty() ? null : routeDomainPostfix).\n-                            endSpec();\n-\n-                    // removing `expose : true` label from metadata.\n-                    removeLabel(routeBuilder.buildMetadata(), EXPOSE_LABEL, \"true\");\n-                    removeLabel(routeBuilder.buildMetadata(), JKubeAnnotations.SERVICE_EXPOSE_URL.value(), \"true\");\n-                    routeBuilder.withNewMetadataLike(routeBuilder.buildMetadata());\n-                    routes.add(routeBuilder.build());\n-                }\n+    private void updateRouteDomainPostFixBasedOnServiceName(String serviceName) {\n+        if (StringUtils.isNotBlank(routeDomainPostfix)) {\n+            routeDomainPostfix = prepareHostForRoute(routeDomainPostfix, serviceName);\n+        } else {\n+            routeDomainPostfix = \"\";\n+        }\n+    }\n+\n+    static Route mergeRoute(Route routeFromFragment, Route opinionatedRoute) {\n+        // Update ApiVersion to route.openshift.io/v1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mzc4NDQ5", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-497378449", "createdAt": "2020-09-28T10:22:29Z", "commit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyMjoyOVrOHY3f6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyMjoyOVrOHY3f6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzNzE2MA==", "bodyText": "More irrelevant comments, I can read this in the code thanks to the helpful method name mergeMetadata\nIf you do an import static of the method, it will be even more obvious.", "url": "https://github.com/eclipse/jkube/pull/406#discussion_r495837160", "createdAt": "2020-09-28T10:22:29Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/generic/src/main/java/org/eclipse/jkube/enricher/generic/openshift/RouteEnricher.java", "diffHunk": "@@ -157,58 +151,111 @@ private boolean hasExactlyOneServicePort(ServiceBuilder service, String id) {\n         }\n     }\n \n-    private void addRoute(KubernetesListBuilder listBuilder, ServiceBuilder serviceBuilder, List<Route> routes) {\n+    private void addRoute(KubernetesListBuilder listBuilder, ServiceBuilder serviceBuilder) {\n         ObjectMeta serviceMetadata = serviceBuilder.buildMetadata();\n \n         if (serviceMetadata != null && StringUtils.isNotBlank(serviceMetadata.getName())\n                 && hasExactlyOneServicePort(serviceBuilder, serviceMetadata.getName()) && isExposedService(serviceMetadata)) {\n             String name = serviceMetadata.getName();\n-            if (!hasRoute(listBuilder, name)) {\n-                if (StringUtils.isNotBlank(routeDomainPostfix)) {\n-                    routeDomainPostfix = prepareHostForRoute(routeDomainPostfix, name);\n-                } else {\n-                    routeDomainPostfix = \"\";\n+            updateRouteDomainPostFixBasedOnServiceName(name);\n+            Route opinionatedRoute = createOpinionatedRouteFromService(serviceBuilder, routeDomainPostfix);\n+            if (opinionatedRoute != null) {\n+                int routeFromFragmentIndex = getRouteIndexWithName(listBuilder, name);\n+                if (routeFromFragmentIndex > 0) { // Merge fragment with Opinionated Route\n+                    Route routeFragment = (Route) listBuilder.buildItems().get(routeFromFragmentIndex);\n+                    Route mergedRoute = mergeRoute(routeFragment, opinionatedRoute);\n+                    KubernetesResourceUtil.removeItemFromKubernetesBuilder(listBuilder, listBuilder.getItems().get(routeFromFragmentIndex));\n+                    listBuilder.addToItems(mergedRoute);\n+                } else { // No fragment provided. Use Opinionated Route.\n+                    listBuilder.addToItems(opinionatedRoute);\n                 }\n+            }\n+        }\n+    }\n \n-                RoutePort routePort = createRoutePort(serviceBuilder);\n-                if (routePort != null) {\n-                    RouteBuilder routeBuilder = new RouteBuilder().\n-                            withMetadata(serviceMetadata).\n-                            withNewSpec().\n-                            withPort(routePort).\n-                            withNewTo().withKind(\"Service\").withName(name).endTo().\n-                            withHost(routeDomainPostfix.isEmpty() ? null : routeDomainPostfix).\n-                            endSpec();\n-\n-                    // removing `expose : true` label from metadata.\n-                    removeLabel(routeBuilder.buildMetadata(), EXPOSE_LABEL, \"true\");\n-                    removeLabel(routeBuilder.buildMetadata(), JKubeAnnotations.SERVICE_EXPOSE_URL.value(), \"true\");\n-                    routeBuilder.withNewMetadataLike(routeBuilder.buildMetadata());\n-                    routes.add(routeBuilder.build());\n-                }\n+    private void updateRouteDomainPostFixBasedOnServiceName(String serviceName) {\n+        if (StringUtils.isNotBlank(routeDomainPostfix)) {\n+            routeDomainPostfix = prepareHostForRoute(routeDomainPostfix, serviceName);\n+        } else {\n+            routeDomainPostfix = \"\";\n+        }\n+    }\n+\n+    static Route mergeRoute(Route routeFromFragment, Route opinionatedRoute) {\n+        // Update ApiVersion to route.openshift.io/v1\n+        if (routeFromFragment.getApiVersion().equals(\"v1\")) {\n+            routeFromFragment.setApiVersion(opinionatedRoute.getApiVersion());\n+        }\n+\n+        // Merge metadata", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mzc5OTEx", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-497379911", "createdAt": "2020-09-28T10:24:40Z", "commit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyNDo0MFrOHY3kdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoyNDo0MFrOHY3kdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzODMyNg==", "bodyText": "If you preserve indentation. it's much easier to read.\nSurround the code with // @formatter:off // @formatter:on comments so that autoformat won't accidentally break indentation.", "url": "https://github.com/eclipse/jkube/pull/406#discussion_r495838326", "createdAt": "2020-09-28T10:24:40Z", "author": {"login": "manusa"}, "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/RouteEnricherTest.java", "diffHunk": "@@ -171,6 +168,118 @@ public void testCreateWithDefaultsAndExistingRouteWithMatchingNameInBuilderInOpe\n             .containsExactly(\"Service\", \"Route\");\n         assertThat(klb.build().getItems().get(1))\n             .extracting(\"metadata.name\", \"spec.host\", \"spec.to.kind\", \"spec.to.name\", \"spec.port.targetPort.intVal\")\n-            .contains(\"test-svc\", \"example.com\", null, null, 1337);\n+            .contains(\"test-svc\", \"example.com\", \"Service\", \"test-svc\", 1337);\n+    }\n+\n+    @Test\n+    public void testCreateOpinionatedRouteFromService() {\n+        // Given\n+        ServiceBuilder serviceBuilder = getMockServiceBuilder();\n+\n+        // When\n+        Route route = RouteEnricher.createOpinionatedRouteFromService(serviceBuilder, \"example.com\");\n+\n+        // Then\n+        assertNotNull(route);\n+        assertThat(route)\n+                .extracting(\"metadata.name\", \"spec.host\", \"spec.to.kind\", \"spec.to.name\", \"spec.port.targetPort.intVal\")\n+                .contains(\"test-svc\", \"example.com\", \"Service\", \"test-svc\", 8080);\n+    }\n+\n+    @Test\n+    public void testCreateOpinionatedRouteFromServiceWithNullService() {\n+        // Given\n+        ServiceBuilder serviceBuilder = new ServiceBuilder();\n+\n+        // When\n+        Route route = RouteEnricher.createOpinionatedRouteFromService(serviceBuilder, \"example.com\");\n+\n+        // Then\n+        assertNull(route);\n+    }\n+\n+    @Test\n+    public void testIsExposedService() {\n+       assertTrue(RouteEnricher.isExposedService(new ObjectMetaBuilder().addToLabels(\"expose\", \"true\").build()));\n+       assertTrue(RouteEnricher.isExposedService(new ObjectMetaBuilder().addToLabels(\"jkube.io/exposeUrl\", \"true\").build()));\n+    }\n+\n+    @Test\n+    public void testMergeRouteWithEmptyFragment() {\n+        // Given\n+        Route opinionatedRoute = getMockOpinionatedRoute();\n+        Route fragmentRoute = new RouteBuilder().build();\n+\n+        // When\n+        Route result = RouteEnricher.mergeRoute(fragmentRoute, opinionatedRoute);\n+\n+        // Then\n+        assertNotNull(result);\n+        assertEquals(opinionatedRoute, result);\n+    }\n+\n+    @Test\n+    public void testMergeRouteWithNonEmptyFragment() {\n+        // Given\n+        Route opinionatedRoute = getMockOpinionatedRoute();\n+        Route fragmentRoute = new RouteBuilder()\n+                .withNewSpec()\n+                .withNewTls()\n+                .withInsecureEdgeTerminationPolicy(\"Redirect\")\n+                .withTermination(\"edge\")\n+                .endTls()\n+                .endSpec()\n+                .build();\n+\n+        // When\n+        Route result = RouteEnricher.mergeRoute(fragmentRoute, opinionatedRoute);\n+\n+        // Then\n+        assertNotNull(result);\n+        assertThat(result)\n+                .extracting(\"metadata.name\", \"spec.host\", \"spec.to.kind\", \"spec.to.name\",\n+                        \"spec.port.targetPort.intVal\", \"spec.tls.insecureEdgeTerminationPolicy\", \"spec.tls.termination\")\n+                .contains(\"test-svc\", \"example.com\", \"Service\", \"test-svc\",\n+                        8080, \"Redirect\", \"edge\");\n+    }\n+\n+    private Route getMockOpinionatedRoute() {\n+        return new RouteBuilder()\n+                .withNewMetadata().withName(\"test-svc\").endMetadata()\n+                .withNewSpec()\n+                .withNewPort()\n+                .withNewTargetPort().withIntVal(8080).endTargetPort()\n+                .endPort()\n+                .withHost(\"example.com\")\n+                .withNewTo().withKind(\"Service\").withName(\"test-svc\").endTo()\n+                .withNewTls()\n+                .withInsecureEdgeTerminationPolicy(\"Redirect\")\n+                .withTermination(\"edge\")\n+                .endTls()\n+                .addNewAlternateBackend()\n+                .withKind(\"Service\")\n+                .withName(\"test-svc-2\")\n+                .withWeight(10)\n+                .endAlternateBackend()\n+                .endSpec()\n+                .build();\n+    }\n+\n+    private ServiceBuilder getMockServiceBuilder() {\n+        return new ServiceBuilder()\n+                .editOrNewMetadata()\n+                .withName(\"test-svc\")\n+                .addToLabels(\"expose\", \"true\")\n+                .endMetadata()\n+                .editOrNewSpec()\n+                .addNewPort()\n+                .withName(\"http\")\n+                .withPort(8080)\n+                .withProtocol(\"TCP\")\n+                .withTargetPort(new IntOrString(8080))\n+                .endPort()\n+                .addToSelector(\"group\", \"test\")\n+                .withType(\"LoadBalancer\")\n+                .endSpec();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c"}, "originalPosition": 220}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fca541fff543cc576c625cee84e10ba70894572c", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/fca541fff543cc576c625cee84e10ba70894572c", "committedDate": "2020-09-28T07:43:36Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}, "afterCommit": {"oid": "5a9672b5106ec7b658aa8719ce441321b4785852", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/5a9672b5106ec7b658aa8719ce441321b4785852", "committedDate": "2020-09-28T17:26:45Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a9672b5106ec7b658aa8719ce441321b4785852", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/5a9672b5106ec7b658aa8719ce441321b4785852", "committedDate": "2020-09-28T17:26:45Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}, "afterCommit": {"oid": "08b3d8a141a36f7b9aea862793fe3165205cc561", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/08b3d8a141a36f7b9aea862793fe3165205cc561", "committedDate": "2020-09-29T09:21:51Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDE3NjEw", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-498417610", "createdAt": "2020-09-29T12:33:28Z", "commit": {"oid": "08b3d8a141a36f7b9aea862793fe3165205cc561"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95fabacca2853ef4a6e3c4897c7cabe17aa8136b", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/95fabacca2853ef4a6e3c4897c7cabe17aa8136b", "committedDate": "2020-09-29T14:19:49Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08b3d8a141a36f7b9aea862793fe3165205cc561", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/08b3d8a141a36f7b9aea862793fe3165205cc561", "committedDate": "2020-09-29T09:21:51Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}, "afterCommit": {"oid": "95fabacca2853ef4a6e3c4897c7cabe17aa8136b", "author": {"user": {"login": "rohanKanojia", "name": "Rohan Kumar "}}, "url": "https://github.com/eclipse/jkube/commit/95fabacca2853ef4a6e3c4897c7cabe17aa8136b", "committedDate": "2020-09-29T14:19:49Z", "message": "Fix #382: Add support for merging fragment Route spec with default generated Route"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjUwMzE4", "url": "https://github.com/eclipse/jkube/pull/406#pullrequestreview-499250318", "createdAt": "2020-09-30T09:32:59Z", "commit": {"oid": "95fabacca2853ef4a6e3c4897c7cabe17aa8136b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 250, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}