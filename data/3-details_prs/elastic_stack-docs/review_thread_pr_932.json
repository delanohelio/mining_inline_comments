{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTI1NzM2", "number": 932, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoxODoxMVrODmXaaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo1Njo1NVrODodq4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTU2MDczOnYy", "diffSide": "RIGHT", "path": "docs/en/siem/machine-learning.asciidoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoxODoxMVrOFzvhtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozMjo0NVrOF3BCAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwMDM3NA==", "bodyText": "We typically make cross-book inclusions relative to this intrinsic attribute (https://www.methods.co.nz/asciidoc/chunked/ch31.html):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            include::../stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc[tag=siem-jobs]\n          \n          \n            \n            include::{asciidoc-dir}/../stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc[tag=siem-jobs]", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389800374", "createdAt": "2020-03-09T16:18:11Z", "author": {"login": "lcawl"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -71,399 +71,4 @@ do not need to manually map the fields.\n \n The following prebuilt jobs are available:\n \n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n\\ No newline at end of file\n+include::../stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc[tag=siem-jobs]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 401}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2NDM0Mg==", "bodyText": "@lcawl\nCan you help? I couldn't get this to resolve. Is it only true when including files from the docs repo, not when including tags.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r390864342", "createdAt": "2020-03-11T10:09:24Z", "author": {"login": "benskelker"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -71,399 +71,4 @@ do not need to manually map the fields.\n \n The following prebuilt jobs are available:\n \n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n\\ No newline at end of file\n+include::../stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc[tag=siem-jobs]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwMDM3NA=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 401}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMjg5Nw==", "bodyText": "You're right.  I've changed it just use an \"ml-dir\" attribute, in case that path changes in the future.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393232897", "createdAt": "2020-03-16T18:32:45Z", "author": {"login": "lcawl"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -71,399 +71,4 @@ do not need to manually map the fields.\n \n The following prebuilt jobs are available:\n \n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n\\ No newline at end of file\n+include::../stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc[tag=siem-jobs]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwMDM3NA=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 401}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTU4Nzg2OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNTowNlrOFzvzAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo0NzozOVrOFzy_iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ==", "bodyText": "Shouldn't this match the other sections and have this title and then \"(influencer)\" after each field?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ml-docs}/ml-influencers.html[Influencers]:::\n          \n          \n            \n            Required ECS fields:::", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389804801", "createdAt": "2020-03-09T16:25:06Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyMTMzNg==", "bodyText": "@lcawl\nhmm not sure here. From our perspective, it's only interesting when users are not using beats and can manually map their data to ECS. When a job can be mapped, the influencers are always ECS fields. When a job cannot be mapped because it relies on non-ECS beat fields, I listed the influencers separately.\nWhat do you think?", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389821336", "createdAt": "2020-03-09T16:50:47Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyMzEwNw==", "bodyText": "Are the non-influencer fields \"detector\" fields? If I was reading this documentation for the first time trying to understand the ML job options, it's not clear to me what these other fields are doing.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389823107", "createdAt": "2020-03-09T16:53:31Z", "author": {"login": "dcode"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNTE1OQ==", "bodyText": "Sorry, I'm not sure I understand the difference.  These look like the same field names that exist in other \"ECS fields\" sections, so if they're not the same I think further clarification is required.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389825159", "createdAt": "2020-03-09T16:56:38Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMDAzMg==", "bodyText": "The way I read the description, the agent.type must be as specified in these jobs, so ECS-compliant data from other sources wouldn't work. Is that accurate?", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389830032", "createdAt": "2020-03-09T17:04:29Z", "author": {"login": "dcode"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMzE5Mg==", "bodyText": "This is the intro sentence in the SIEM docs, before including your stuff:\nIf you use Beats to ship your data, the ECS fields are populated and you\ndo not need to manually map the fields.\nNot sure, but maybe add something to your file before the include?", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389833192", "createdAt": "2020-03-09T17:09:33Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1NzE2MQ==", "bodyText": "The way I read the description, the agent.type must be as specified in these jobs, so ECS-compliant data from other sources wouldn't work. Is that accurate?\n\nDon't think so. The agent.type would need to be mapped to the user's data shipper. The issue with some jobs is that they rely on non-compliant ECS fields, so the only way they can be run is when beats are used to ship the data.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389857161", "createdAt": "2020-03-09T17:47:39Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDgwMQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTU5Mjk1OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNjowNFrOFzv18g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNjowNFrOFzv18g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNTU1NA==", "bodyText": "Ditto re changing title and adding \"(influencer)\" after each field:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ml-docs}/ml-influencers.html[Influencers]:::\n          \n          \n            \n            Required ECS fields:::", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389805554", "createdAt": "2020-03-09T16:26:04Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `destination.ip`\n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_service::\n \n-Function: `rare`.\n-////\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n \n-linux_anomalous_network_service::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTYwMTg0OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNzo1NVrOFzv7Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNzo1NVrOFzv7Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNjg2Mw==", "bodyText": "Ditto re synching title and adding \"(influencer)\" after each field:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ml-docs}/ml-influencers.html[Influencers]:::\n          \n          \n            \n            Required ECS fields:::", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389806863", "createdAt": "2020-03-09T16:27:55Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `destination.ip`\n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_service::\n \n-Function: `rare`.\n-////\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n \n-linux_anomalous_network_service::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_url_activity_ecs::\n \n-Function: `rare`.\n-////\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n \n-linux_anomalous_network_url_activity_ecs::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n \n-* `destination.ip`\n-* `destination.port` \n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `destination.port` (influencer)\n+* `host.name` (influencer)\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple Windows/Linux hosts in an\n+entire fleet or network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n+* Detects processes that occur rarely compared to other processes on all \n   Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.executable` (Windows)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used \n+usernames only when personnel log in to make authorized or unauthorized \n+changes, or threat actors have acquired credentials and log in for malicious \n+purposes. Unusual usernames can also indicate pivoting, where compromised \n+credentials are used to try and move laterally from one host to another.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or\n+`winlogbeat` (Windows).\n * Models user activity.\n * Detects users that are rarely or unusually active compared to other users \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n-\n-rare_process_by_host_linux_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Linux (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-suspicious_login_activity_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of authentication attempts (`partition_field_name` is \n-  `host.name`).\n-* Detects unusually high number of authentication attempts (using the \n-  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `source.ip`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `high_non_zero_count`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n+packetbeat_dns_tunneling::\n \n-[float]\n-[[ootb-ml-jobs-siem-packet]]\n-==== SIEM - Packetbeat\n+Searches for unusually large numbers of DNS queries\n+for a single top-level DNS domain, which is often used for DNS tunneling.\n++\n+DNS tunneling can be used for command-and-control, persistence, or data\n+exfiltration activity. For example, `dnscat` tends to generate many DNS\n+questions for a top-level domain as it uses the DNS protocol to tunnel data.\n \n-packetbeat_dns_tunneling::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n-* Models occurrances of DNS activity.\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n * Detects unusual DNS activity (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control or data \n-exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `dns.question.etld_plus_one`\n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.registered_domain` (if manually mapping ECS fields, use this\n+  field as an influencer)\n+* `host.name` (influencer)\n+* `dns.question.name`\n+* `event.dataset`\n+* `agent.type`\n \n-Function: `high_info_content`.\n-////\n++\n+NOTE: This {ml} job uses the Packetbeat\n+{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n+which is not defined in ECS. Instead, map your network data to the\n+{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS field. The\n+`dns.question.etld_plus_one` is a {ml} job influencer.\n \n packetbeat_rare_dns_question::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon domain. When malware is already running, it may send requests to an\n+uncommon DNS domain the malware uses for command-and-control communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of DNS activity.\n * Detects DNS activity that is rare compared to other DNS activities (using the \n   {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n++\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.name`\n+* `dns.question.type`\n+* `event.dataset`\n+* `agent.type`\n \n packetbeat_rare_server_domain::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon HTTP or TLS server. When malware is already running, it may send\n+requests to an uncommon DNS domain the malware uses for command-and-control\n+communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models HTTP or TLS domain activity.\n-* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+* Detects HTTP or TLS domain activity that is rare compared to other \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP or TLS destination domain activity that could indicate \n-execution, persistence, command-and-control or data exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `host.name`\n-* `source.ip`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `source.ip` (influencer)\n+* `host.name` (influencer)\n+* `server.domain`\n+* `agent.type`\n \n packetbeat_rare_urls::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual URLs that indicate unusual \n+web browsing activity. This can be due to initial access, persistence,\n+command-and-control, or exfiltration activity.\n++\n+For example, in a strategic web compromise or watering hole attack, when a\n+trusted website is compromised to target a particular sector or organization,\n+targeted users may receive emails with uncommon URLs for trusted websites. These\n+URLs can be used to download and run a payload. When malware is already running,\n+it may send requests to uncommon URLs on trusted websites the malware uses for\n+command-and-control communication. When rare URLs are observed being requested\n+for a local web server by a remote source, these can be due to web scanning,\n+enumeration or attack traffic, or they can be due to bots and web scrapers which\n+are part of common Internet background traffic.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of web browsing URL activity.\n * Detects URL activity that rarely occurs compared to other URL activities \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual web browsing URL activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `destination.ip`\n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `url.full`\n+* `agent.type`\n \n packetbeat_rare_user_agent::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual user agents that indicate web browsing activity\n+by an unusual process other than a web browser. This can be due to persistence,\n+command-and-control, or exfiltration activity. Uncommon user agents coming from\n+remote sources to local destinations are often the result of scanners, bots,\n+and web scrapers, which are part of common internet background traffic.\n++\n+Much of this is noise, but more targeted attacks on websites using tools like\n+Burp or SQLmap can sometimes be discovered by spotting uncommon user agents.\n+Uncommon user agents in traffic from local sources to remote destinations can\n+be any number of things, including harmless programs like weather monitoring or\n+stock-trading programs. However, uncommon user agents from local sources can\n+also be due to malware or scanning activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of HTTP user agent activity.\n * Detects HTTP user agent activity that occurs rarely compared to other HTTP \n   user agent activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP user agent activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name`\n-\n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Packetbeat (Windows and Linux)\n \n-[float]\n-[[ootb-ml-jobs-siem-winlog]]\n-==== SIEM - Winlogbeat\n-\n-windows_anomalous_network_activity_ecs::\n-\n-* For network activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes that cause network activity.\n-* Detects network activity caused by processes that occur rarely compared to \n-  other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-windows_anomalous_process_all_hosts_ecs::\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `event.dataset`\n+* `user_agent.original`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+rare_process_by_host_linux_ecs::\n++\n+rare_process_by_host_windows_ecs::\n \n-Looks for processes that are unusual to all Windows hosts. Such unusual \n-processes may indicate unauthorized services, malware, or persistence \n-mechanisms.\n+Identifies rare processes that do not usually run on individual Windows/Linux\n+hosts, which can indicate execution of unauthorized services, malware, or\n+persistence mechanisms.\n++\n+Processes are considered rare when they only run occasionally as compared with\n+other processes running on the host.\n \n-////\n-Influencers:\n+Job details:::\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Analyzes host activity logs where `agent.type` is `winlogbeat` (Windows) or `auditbeat` (Linux).\n+* Models occurrences of process activities on the host. \n+* Detects unusually rare processes compared to other processes on the host (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-windows_anomalous_user_name_ecs::\n+Required ECS fields:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models user activity.\n-* Detects users that are rarely or unusually active compared to other users \n-  (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+suspicious_login_activity_ecs::\n \n-////\n-Influencers:\n+Identifies an unusually high number of authentication attempts.\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Job details:::\n \n-Bucket span: 15m.\n+* Analyzes host activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts (using the \n+  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Function: `rare`.\n-////\n+Beats required on hosts:::\n \n-rare_process_by_host_windows_ecs::\n+* Auditbeat (Linux)\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Windows (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-////\n-Influencers:\n+* `source.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `user.name` (influencer)\n+* `event.category`\n+* `agent.type`\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+windows_anomalous_path_activity_ecs::\n \n-Function: `rare`.\n-////\n+Identifies processes started from atypical folders in the file system, which\n+might indicate malware execution or persistence mechanisms.\n++\n+In corporate Windows environments, software installation is centrally managed\n+and it is unusual for programs to be executed from user or temporary\n+directories. Processes executed from these locations can denote that a user\n+downloaded software directly from the internet or a malicious script/macro\n+executed malware.\n \n-windows_anomalous_path_activity_ecs::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of processes in paths.\n * Detects activity in unusual paths (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Activities in unusual paths may indicate execution of malware or persistence \n-mechanisms. Windows payloads often execute from user profile paths.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.working_directory`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_process_creation::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies unusual parent/child process relationships that can indicate\n+malware execution or persistence mechanisms.\n++\n+Malicious scripts often call on other applications and processes as part of\n+their exploit payload. For example, when a malicious Office document runs\n+scripts as part of an exploit payload, Excel or Word may start a script\n+interpreter process, which, in turn, runs a script that downloads and executes\n+malware. Another common scenario is Outlook running an unusual process when\n+malware is downloaded in an email.\n++\n+Monitoring and identifying anomalous process relationships is an excellent way\n+of detecting new and emerging malware that is not yet recognized by anti-virus\n+scanners.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of process creation activities (`partition_field_name` is \n   `process.parent.name`).\n * Detects process relationships that are rare compared to other process \n   relationships (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual process relationships which may indicate execution of malware \n-or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.parent.name`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_script::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of powershell script activities.\n-* Detects unusual powershell script execution compared to other powershell \n+Searches for PowerShell scripts with unusual data characteristics, such as\n+obfuscation, that may be a characteristic of malicious PowerShell script text\n+blocks.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of PowerShell script activities.\n+* Detects unusual PowerShell script execution compared to other PowerShell \n   script activities (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual powershell scripts that may indicate execution of malware, or \n-persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 811}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTYwNDk2OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyODo0MlrOFzv8_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyODo0MlrOFzv8_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNzM1OA==", "bodyText": "Ditto\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ml-docs}/ml-influencers.html[Influencers]:::\n          \n          \n            \n            Required ECS fields:::", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389807358", "createdAt": "2020-03-09T16:28:42Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `destination.ip`\n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_service::\n \n-Function: `rare`.\n-////\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n \n-linux_anomalous_network_service::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_url_activity_ecs::\n \n-Function: `rare`.\n-////\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n \n-linux_anomalous_network_url_activity_ecs::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n \n-* `destination.ip`\n-* `destination.port` \n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `destination.port` (influencer)\n+* `host.name` (influencer)\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple Windows/Linux hosts in an\n+entire fleet or network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n+* Detects processes that occur rarely compared to other processes on all \n   Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.executable` (Windows)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used \n+usernames only when personnel log in to make authorized or unauthorized \n+changes, or threat actors have acquired credentials and log in for malicious \n+purposes. Unusual usernames can also indicate pivoting, where compromised \n+credentials are used to try and move laterally from one host to another.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or\n+`winlogbeat` (Windows).\n * Models user activity.\n * Detects users that are rarely or unusually active compared to other users \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n-\n-rare_process_by_host_linux_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Linux (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-suspicious_login_activity_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of authentication attempts (`partition_field_name` is \n-  `host.name`).\n-* Detects unusually high number of authentication attempts (using the \n-  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `source.ip`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `high_non_zero_count`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n+packetbeat_dns_tunneling::\n \n-[float]\n-[[ootb-ml-jobs-siem-packet]]\n-==== SIEM - Packetbeat\n+Searches for unusually large numbers of DNS queries\n+for a single top-level DNS domain, which is often used for DNS tunneling.\n++\n+DNS tunneling can be used for command-and-control, persistence, or data\n+exfiltration activity. For example, `dnscat` tends to generate many DNS\n+questions for a top-level domain as it uses the DNS protocol to tunnel data.\n \n-packetbeat_dns_tunneling::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n-* Models occurrances of DNS activity.\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n * Detects unusual DNS activity (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control or data \n-exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `dns.question.etld_plus_one`\n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.registered_domain` (if manually mapping ECS fields, use this\n+  field as an influencer)\n+* `host.name` (influencer)\n+* `dns.question.name`\n+* `event.dataset`\n+* `agent.type`\n \n-Function: `high_info_content`.\n-////\n++\n+NOTE: This {ml} job uses the Packetbeat\n+{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n+which is not defined in ECS. Instead, map your network data to the\n+{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS field. The\n+`dns.question.etld_plus_one` is a {ml} job influencer.\n \n packetbeat_rare_dns_question::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon domain. When malware is already running, it may send requests to an\n+uncommon DNS domain the malware uses for command-and-control communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of DNS activity.\n * Detects DNS activity that is rare compared to other DNS activities (using the \n   {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n++\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.name`\n+* `dns.question.type`\n+* `event.dataset`\n+* `agent.type`\n \n packetbeat_rare_server_domain::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon HTTP or TLS server. When malware is already running, it may send\n+requests to an uncommon DNS domain the malware uses for command-and-control\n+communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models HTTP or TLS domain activity.\n-* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+* Detects HTTP or TLS domain activity that is rare compared to other \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP or TLS destination domain activity that could indicate \n-execution, persistence, command-and-control or data exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `host.name`\n-* `source.ip`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `source.ip` (influencer)\n+* `host.name` (influencer)\n+* `server.domain`\n+* `agent.type`\n \n packetbeat_rare_urls::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual URLs that indicate unusual \n+web browsing activity. This can be due to initial access, persistence,\n+command-and-control, or exfiltration activity.\n++\n+For example, in a strategic web compromise or watering hole attack, when a\n+trusted website is compromised to target a particular sector or organization,\n+targeted users may receive emails with uncommon URLs for trusted websites. These\n+URLs can be used to download and run a payload. When malware is already running,\n+it may send requests to uncommon URLs on trusted websites the malware uses for\n+command-and-control communication. When rare URLs are observed being requested\n+for a local web server by a remote source, these can be due to web scanning,\n+enumeration or attack traffic, or they can be due to bots and web scrapers which\n+are part of common Internet background traffic.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of web browsing URL activity.\n * Detects URL activity that rarely occurs compared to other URL activities \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual web browsing URL activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `destination.ip`\n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `url.full`\n+* `agent.type`\n \n packetbeat_rare_user_agent::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual user agents that indicate web browsing activity\n+by an unusual process other than a web browser. This can be due to persistence,\n+command-and-control, or exfiltration activity. Uncommon user agents coming from\n+remote sources to local destinations are often the result of scanners, bots,\n+and web scrapers, which are part of common internet background traffic.\n++\n+Much of this is noise, but more targeted attacks on websites using tools like\n+Burp or SQLmap can sometimes be discovered by spotting uncommon user agents.\n+Uncommon user agents in traffic from local sources to remote destinations can\n+be any number of things, including harmless programs like weather monitoring or\n+stock-trading programs. However, uncommon user agents from local sources can\n+also be due to malware or scanning activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of HTTP user agent activity.\n * Detects HTTP user agent activity that occurs rarely compared to other HTTP \n   user agent activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP user agent activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name`\n-\n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Packetbeat (Windows and Linux)\n \n-[float]\n-[[ootb-ml-jobs-siem-winlog]]\n-==== SIEM - Winlogbeat\n-\n-windows_anomalous_network_activity_ecs::\n-\n-* For network activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes that cause network activity.\n-* Detects network activity caused by processes that occur rarely compared to \n-  other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-windows_anomalous_process_all_hosts_ecs::\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `event.dataset`\n+* `user_agent.original`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+rare_process_by_host_linux_ecs::\n++\n+rare_process_by_host_windows_ecs::\n \n-Looks for processes that are unusual to all Windows hosts. Such unusual \n-processes may indicate unauthorized services, malware, or persistence \n-mechanisms.\n+Identifies rare processes that do not usually run on individual Windows/Linux\n+hosts, which can indicate execution of unauthorized services, malware, or\n+persistence mechanisms.\n++\n+Processes are considered rare when they only run occasionally as compared with\n+other processes running on the host.\n \n-////\n-Influencers:\n+Job details:::\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Analyzes host activity logs where `agent.type` is `winlogbeat` (Windows) or `auditbeat` (Linux).\n+* Models occurrences of process activities on the host. \n+* Detects unusually rare processes compared to other processes on the host (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-windows_anomalous_user_name_ecs::\n+Required ECS fields:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models user activity.\n-* Detects users that are rarely or unusually active compared to other users \n-  (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+suspicious_login_activity_ecs::\n \n-////\n-Influencers:\n+Identifies an unusually high number of authentication attempts.\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Job details:::\n \n-Bucket span: 15m.\n+* Analyzes host activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts (using the \n+  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Function: `rare`.\n-////\n+Beats required on hosts:::\n \n-rare_process_by_host_windows_ecs::\n+* Auditbeat (Linux)\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Windows (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-////\n-Influencers:\n+* `source.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `user.name` (influencer)\n+* `event.category`\n+* `agent.type`\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+windows_anomalous_path_activity_ecs::\n \n-Function: `rare`.\n-////\n+Identifies processes started from atypical folders in the file system, which\n+might indicate malware execution or persistence mechanisms.\n++\n+In corporate Windows environments, software installation is centrally managed\n+and it is unusual for programs to be executed from user or temporary\n+directories. Processes executed from these locations can denote that a user\n+downloaded software directly from the internet or a malicious script/macro\n+executed malware.\n \n-windows_anomalous_path_activity_ecs::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of processes in paths.\n * Detects activity in unusual paths (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Activities in unusual paths may indicate execution of malware or persistence \n-mechanisms. Windows payloads often execute from user profile paths.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.working_directory`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_process_creation::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies unusual parent/child process relationships that can indicate\n+malware execution or persistence mechanisms.\n++\n+Malicious scripts often call on other applications and processes as part of\n+their exploit payload. For example, when a malicious Office document runs\n+scripts as part of an exploit payload, Excel or Word may start a script\n+interpreter process, which, in turn, runs a script that downloads and executes\n+malware. Another common scenario is Outlook running an unusual process when\n+malware is downloaded in an email.\n++\n+Monitoring and identifying anomalous process relationships is an excellent way\n+of detecting new and emerging malware that is not yet recognized by anti-virus\n+scanners.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of process creation activities (`partition_field_name` is \n   `process.parent.name`).\n * Detects process relationships that are rare compared to other process \n   relationships (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual process relationships which may indicate execution of malware \n-or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.parent.name`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_script::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of powershell script activities.\n-* Detects unusual powershell script execution compared to other powershell \n+Searches for PowerShell scripts with unusual data characteristics, such as\n+obfuscation, that may be a characteristic of malicious PowerShell script text\n+blocks.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of PowerShell script activities.\n+* Detects unusual PowerShell script execution compared to other PowerShell \n   script activities (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual powershell scripts that may indicate execution of malware, or \n-persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `user.name`\n * `winlog.event_data.Path`\n \n-Bucket span: 15m.\n+windows_anomalous_service::\n \n-Function: `high_info_content`.\n-////\n+Searches for unusual Windows services that can indicate execution of\n+unauthorized services, malware, or persistence mechanisms.\n++\n+In corporate Windows environments, hosts do not generally run many rare or\n+unique services. This job helps detect malware and persistence mechanisms that\n+have been installed and run as a service.\n \n-windows_anomalous_service::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of Windows service activities.\n-* Detects Windows service activities that occur rarely compared to other Windows \n-  service activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects Windows service activities that occur rarely compared to other Windows service activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for rare and unusual Windows services which may indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 851}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTYwNzg0OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyOToyNlrOFzv-xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyOToyNlrOFzv-xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNzgxNQ==", "bodyText": "Ditto:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {ml-docs}/ml-influencers.html[Influencers]:::\n          \n          \n            \n            Required ECS fields:::", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389807815", "createdAt": "2020-03-09T16:29:26Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `destination.ip`\n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_service::\n \n-Function: `rare`.\n-////\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n \n-linux_anomalous_network_service::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `process.name`\n * `user.name`\n \n-Bucket span: 15m.\n+linux_anomalous_network_url_activity_ecs::\n \n-Function: `rare`.\n-////\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n \n-linux_anomalous_network_url_activity_ecs::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n \n-* `destination.ip`\n-* `destination.port` \n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `destination.port` (influencer)\n+* `host.name` (influencer)\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple Windows/Linux hosts in an\n+entire fleet or network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n+* Detects processes that occur rarely compared to other processes on all \n   Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.executable` (Windows)\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used \n+usernames only when personnel log in to make authorized or unauthorized \n+changes, or threat actors have acquired credentials and log in for malicious \n+purposes. Unusual usernames can also indicate pivoting, where compromised \n+credentials are used to try and move laterally from one host to another.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or\n+`winlogbeat` (Windows).\n * Models user activity.\n * Detects users that are rarely or unusually active compared to other users \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n-\n-rare_process_by_host_linux_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Linux (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-suspicious_login_activity_ecs::\n-\n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of authentication attempts (`partition_field_name` is \n-  `host.name`).\n-* Detects unusually high number of authentication attempts (using the \n-  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n-\n-////\n-Influencers:\n-\n-* `host.name` \n-* `source.ip`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `high_non_zero_count`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n+packetbeat_dns_tunneling::\n \n-[float]\n-[[ootb-ml-jobs-siem-packet]]\n-==== SIEM - Packetbeat\n+Searches for unusually large numbers of DNS queries\n+for a single top-level DNS domain, which is often used for DNS tunneling.\n++\n+DNS tunneling can be used for command-and-control, persistence, or data\n+exfiltration activity. For example, `dnscat` tends to generate many DNS\n+questions for a top-level domain as it uses the DNS protocol to tunnel data.\n \n-packetbeat_dns_tunneling::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n-* Models occurrances of DNS activity.\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n * Detects unusual DNS activity (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control or data \n-exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `dns.question.etld_plus_one`\n-* `host.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.registered_domain` (if manually mapping ECS fields, use this\n+  field as an influencer)\n+* `host.name` (influencer)\n+* `dns.question.name`\n+* `event.dataset`\n+* `agent.type`\n \n-Function: `high_info_content`.\n-////\n++\n+NOTE: This {ml} job uses the Packetbeat\n+{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n+which is not defined in ECS. Instead, map your network data to the\n+{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS field. The\n+`dns.question.etld_plus_one` is a {ml} job influencer.\n \n packetbeat_rare_dns_question::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon domain. When malware is already running, it may send requests to an\n+uncommon DNS domain the malware uses for command-and-control communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of DNS activity.\n * Detects DNS activity that is rare compared to other DNS activities (using the \n   {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual DNS activity that could indicate command-and-control activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n++\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `dns.question.name`\n+* `dns.question.type`\n+* `event.dataset`\n+* `agent.type`\n \n packetbeat_rare_server_domain::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon HTTP or TLS server. When malware is already running, it may send\n+requests to an uncommon DNS domain the malware uses for command-and-control\n+communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models HTTP or TLS domain activity.\n-* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+* Detects HTTP or TLS domain activity that is rare compared to other \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP or TLS destination domain activity that could indicate \n-execution, persistence, command-and-control or data exfiltration activity.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Packetbeat (Windows and Linux)\n \n-* `destination.ip`\n-* `host.name`\n-* `source.ip`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `source.ip` (influencer)\n+* `host.name` (influencer)\n+* `server.domain`\n+* `agent.type`\n \n packetbeat_rare_urls::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual URLs that indicate unusual \n+web browsing activity. This can be due to initial access, persistence,\n+command-and-control, or exfiltration activity.\n++\n+For example, in a strategic web compromise or watering hole attack, when a\n+trusted website is compromised to target a particular sector or organization,\n+targeted users may receive emails with uncommon URLs for trusted websites. These\n+URLs can be used to download and run a payload. When malware is already running,\n+it may send requests to uncommon URLs on trusted websites the malware uses for\n+command-and-control communication. When rare URLs are observed being requested\n+for a local web server by a remote source, these can be due to web scanning,\n+enumeration or attack traffic, or they can be due to bots and web scrapers which\n+are part of common Internet background traffic.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of web browsing URL activity.\n * Detects URL activity that rarely occurs compared to other URL activities \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual web browsing URL activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `destination.ip`\n-* `host.name`\n+* Packetbeat (Windows and Linux)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `url.full`\n+* `agent.type`\n \n packetbeat_rare_user_agent::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual user agents that indicate web browsing activity\n+by an unusual process other than a web browser. This can be due to persistence,\n+command-and-control, or exfiltration activity. Uncommon user agents coming from\n+remote sources to local destinations are often the result of scanners, bots,\n+and web scrapers, which are part of common internet background traffic.\n++\n+Much of this is noise, but more targeted attacks on websites using tools like\n+Burp or SQLmap can sometimes be discovered by spotting uncommon user agents.\n+Uncommon user agents in traffic from local sources to remote destinations can\n+be any number of things, including harmless programs like weather monitoring or\n+stock-trading programs. However, uncommon user agents from local sources can\n+also be due to malware or scanning activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of HTTP user agent activity.\n * Detects HTTP user agent activity that occurs rarely compared to other HTTP \n   user agent activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual HTTP user agent activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name`\n-\n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Packetbeat (Windows and Linux)\n \n-[float]\n-[[ootb-ml-jobs-siem-winlog]]\n-==== SIEM - Winlogbeat\n-\n-windows_anomalous_network_activity_ecs::\n-\n-* For network activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes that cause network activity.\n-* Detects network activity caused by processes that occur rarely compared to \n-  other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n-\n-////\n-Influencers:\n-\n-* `destination.ip`\n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n-\n-windows_anomalous_process_all_hosts_ecs::\n+* `destination.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `event.dataset`\n+* `user_agent.original`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+rare_process_by_host_linux_ecs::\n++\n+rare_process_by_host_windows_ecs::\n \n-Looks for processes that are unusual to all Windows hosts. Such unusual \n-processes may indicate unauthorized services, malware, or persistence \n-mechanisms.\n+Identifies rare processes that do not usually run on individual Windows/Linux\n+hosts, which can indicate execution of unauthorized services, malware, or\n+persistence mechanisms.\n++\n+Processes are considered rare when they only run occasionally as compared with\n+other processes running on the host.\n \n-////\n-Influencers:\n+Job details:::\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Analyzes host activity logs where `agent.type` is `winlogbeat` (Windows) or `auditbeat` (Linux).\n+* Models occurrences of process activities on the host. \n+* Detects unusually rare processes compared to other processes on the host (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Bucket span: 15m.\n+Beats required on hosts:::\n \n-Function: `rare`.\n-////\n+* Auditbeat (Linux)\n+* Winlogbeat (Windows)\n \n-windows_anomalous_user_name_ecs::\n+Required ECS fields:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models user activity.\n-* Detects users that are rarely or unusually active compared to other users \n-  (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `event.action`\n+* `agent.type`\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+suspicious_login_activity_ecs::\n \n-////\n-Influencers:\n+Identifies an unusually high number of authentication attempts.\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Job details:::\n \n-Bucket span: 15m.\n+* Analyzes host activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts (using the \n+  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Function: `rare`.\n-////\n+Beats required on hosts:::\n \n-rare_process_by_host_windows_ecs::\n+* Auditbeat (Linux)\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Windows (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields:::\n \n-////\n-Influencers:\n+* `source.ip` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `user.name` (influencer)\n+* `event.category`\n+* `agent.type`\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n-\n-Bucket span: 15m.\n+windows_anomalous_path_activity_ecs::\n \n-Function: `rare`.\n-////\n+Identifies processes started from atypical folders in the file system, which\n+might indicate malware execution or persistence mechanisms.\n++\n+In corporate Windows environments, software installation is centrally managed\n+and it is unusual for programs to be executed from user or temporary\n+directories. Processes executed from these locations can denote that a user\n+downloaded software directly from the internet or a malicious script/macro\n+executed malware.\n \n-windows_anomalous_path_activity_ecs::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of processes in paths.\n * Detects activity in unusual paths (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Activities in unusual paths may indicate execution of malware or persistence \n-mechanisms. Windows payloads often execute from user profile paths.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n-\n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.working_directory`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_process_creation::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies unusual parent/child process relationships that can indicate\n+malware execution or persistence mechanisms.\n++\n+Malicious scripts often call on other applications and processes as part of\n+their exploit payload. For example, when a malicious Office document runs\n+scripts as part of an exploit payload, Excel or Word may start a script\n+interpreter process, which, in turn, runs a script that downloads and executes\n+malware. Another common scenario is Outlook running an unusual process when\n+malware is downloaded in an email.\n++\n+Monitoring and identifying anomalous process relationships is an excellent way\n+of detecting new and emerging malware that is not yet recognized by anti-virus\n+scanners.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of process creation activities (`partition_field_name` is \n   `process.parent.name`).\n * Detects process relationships that are rare compared to other process \n   relationships (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual process relationships which may indicate execution of malware \n-or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+Required ECS fields:::\n \n-Bucket span: 15m.\n-\n-Function: `rare`.\n-////\n+* `host.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `process.name` (influencer)\n+* `user.name` (influencer)\n+* `process.parent.name`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_script::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of powershell script activities.\n-* Detects unusual powershell script execution compared to other powershell \n+Searches for PowerShell scripts with unusual data characteristics, such as\n+obfuscation, that may be a characteristic of malicious PowerShell script text\n+blocks.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of PowerShell script activities.\n+* Detects unusual PowerShell script execution compared to other PowerShell \n   script activities (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual powershell scripts that may indicate execution of malware, or \n-persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `user.name`\n * `winlog.event_data.Path`\n \n-Bucket span: 15m.\n+windows_anomalous_service::\n \n-Function: `high_info_content`.\n-////\n+Searches for unusual Windows services that can indicate execution of\n+unauthorized services, malware, or persistence mechanisms.\n++\n+In corporate Windows environments, hosts do not generally run many rare or\n+unique services. This job helps detect malware and persistence mechanisms that\n+have been installed and run as a service.\n \n-windows_anomalous_service::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of Windows service activities.\n-* Detects Windows service activities that occur rarely compared to other Windows \n-  service activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects Windows service activities that occur rarely compared to other Windows service activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for rare and unusual Windows services which may indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::\n \n * `host.name` \n * `winlog.event_data.ServiceName`\n \n-Bucket span: 15m.\n+windows_rare_user_runas_event::\n \n-Function: `rare`.\n-////\n+Searches for unusual user context switches using the `runas` command or similar\n+techniques, which can indicate account takeover or privilege escalation using\n+compromised accounts. Privilege elevation using tools like `runas` is more\n+common for domain and network administrators than professionals who are not\n+members of the technology department.\n \n-windows_rare_user_runas_event::\n+Job details:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of user context switches.\n-* Detects user context switches that occur rarely compared to other user context \n-  switches (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects user context switches that occur rarely compared to other user context switches (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Unusual user context switches can be due to privilege escalation.\n-\n-////\n-Influencers:\n+Beats required on hosts:::\n \n-* `host.name` \n-* `process.name`\n-* `user.name`\n+* Winlogbeat (Windows)\n \n-Bucket span: 15m.\n+Required ECS fields:::\n \n-Function: `rare`.\n-////\n+* `process.name` ({ml-docs}/ml-influencers.html[influencer])\n+* `host.name` (influencer)\n+* `user.name` (influencer)\n+* `event.code`\n+* `agent.type`\n \n windows_rare_user_type10_remote_login::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Searches for unusual remote desktop protocol (RDP) logins, which can indicate\n+account takeover or credentialed persistence using compromised accounts. RDP\n+attacks, such as BlueKeep, also tend to use unusual usernames.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of user remote login activities.\n * Detects user remote login activities that occur rarely compared to other \n   user remote login activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.\n \n-Looks for unusual user remote logins. Unusual RDP (remote desktop protocol) \n-user logins can indicate account takeover or credentialed access.\n+Beats required on hosts:::\n \n-////\n-Influencers:\n+* Winlogbeat (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.\n+\n+{ml-docs}/ml-influencers.html[Influencers]:::", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 926}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTYyMjI1OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMjozMVrOFzwHWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxODowNzo0N1rOF0a9kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDAwOQ==", "bodyText": "In my opinion, these repeated links to info about bucket spans and influencers are distracting.  I'd suggest having them appear once at the top of the page.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389810009", "createdAt": "2020-03-09T16:32:31Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyMTM3NQ==", "bodyText": "I agree with this. Maybe before the first job have a short description of what each of the terms mean  (single sentence summary) with the existing hyperlink for more detailed info. And maybe have a single list of the jobs at the top of the page with links to the job itself. I'm thinking like the Logstash mutate filter", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389821375", "createdAt": "2020-03-09T16:50:49Z", "author": {"login": "dcode"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDAwOQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNDA0NA==", "bodyText": "I think a lot of people will be using ctrl/cmd f on this page, searching for a specific job.\nI don't mind though.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389824044", "createdAt": "2020-03-09T16:55:04Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDAwOQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MDczNw==", "bodyText": "@benskelker Per our chat, I think the bucket span and influencer details can be omitted from this list (and therefore the links to bucket span and influencer definitions too). One thing we might consider adding to all these pages, however, is a link to where the modules are defined: https://github.com/elastic/kibana/tree/master/x-pack/plugins/ml/server/models/data_recognizer/modules\nThen folks can dig into the exact job and datafeed definitions if they so desire.  For example, the SIEM auditbeat ones can be found here: https://github.com/elastic/kibana/tree/master/x-pack/plugins/ml/server/models/data_recognizer/modules/siem_auditbeat/ml", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389860737", "createdAt": "2020-03-09T17:53:10Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDAwOQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUxMjAxOQ==", "bodyText": "I've merged that change in #933. If you want help with the merge conflict, please just let me know!", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r390512019", "createdAt": "2020-03-10T18:07:47Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {ml-docs}/ml-buckets.html[Bucket span]: 15 minutes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMDAwOQ=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTczMzE3OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMDoxOVrOFzxLdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzoxNzoxNVrOFzx1KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNzQ0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Identifies Windows/Linux processes that do not usually use the network but have\n          \n          \n            \n            Identifies processes that do not usually use the network but have\n          \n      \n    \n    \n  \n\nThis is maybe more style, but I think this makes the sentence easier to read. The OS specifiers in the names and in the required query I think clearly identify what OS the process is running on.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389827446", "createdAt": "2020-03-09T17:00:19Z", "author": {"login": "dcode"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzODEyMA==", "bodyText": "Sure, but we'll wait for @randomuserid as the descriptions are basically his.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r389838120", "createdAt": "2020-03-09T17:17:15Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -519,522 +519,613 @@ Function: `non_zero_count`.\n \n These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list \n-below contains the jobs organized by `agent.type` (Auditbeat, Packetbeat, and \n-Winlogbeat).\n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - Auditbeat\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies Windows/Linux processes that do not usually use the network but have", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNzQ0Ng=="}, "originalCommit": {"oid": "da3cc61eb385605ccb6be1df6d41f1055c0e6f91"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjE1NjEwOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOToyMzo0OFrOF0u3Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToyOTo0MVrOF1jmLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzODA1MQ==", "bodyText": "@szabosteve @lcawl\nDon't know if you want to add some info here as to why the ECS fields are listed for each job?", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r390838051", "createdAt": "2020-03-11T09:23:48Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c81758dcc2ae8b990c0f129cc615e74b0b25f59f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNTQyNg==", "bodyText": "@benskelker @lcawl\nSure, I'll add in a separate PR that when you are not using Beats, you need to map your data to the respective ECS fields.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r390935426", "createdAt": "2020-03-11T12:28:07Z", "author": {"login": "szabosteve"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzODA1MQ=="}, "originalCommit": {"oid": "c81758dcc2ae8b990c0f129cc615e74b0b25f59f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY2NzczOA==", "bodyText": "@benskelker @lcawl\nI added a sentence about the listed ECS fields as a single comment to avoid conflicts. Please let me know if you would modify or rather omit it.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r391667738", "createdAt": "2020-03-12T14:40:23Z", "author": {"login": "szabosteve"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzODA1MQ=="}, "originalCommit": {"oid": "c81758dcc2ae8b990c0f129cc615e74b0b25f59f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcwMjA2MQ==", "bodyText": "Thanks @szabosteve", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r391702061", "createdAt": "2020-03-12T15:29:41Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgzODA1MQ=="}, "originalCommit": {"oid": "c81758dcc2ae8b990c0f129cc615e74b0b25f59f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzM3Nzc0OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDozODoyMVrOF1hagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDozODoyMVrOF1hagw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY2NjMwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            automatically detect file system and network anomalies on your hosts.\n          \n          \n            \n            automatically detect file system and network anomalies on your hosts. However,\n          \n          \n            \n            if you don't use Beats, you need to map your data to the ECS fields that are \n          \n          \n            \n            listed for every job.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r391666307", "createdAt": "2020-03-12T14:38:21Z", "author": {"login": "szabosteve"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c81758dcc2ae8b990c0f129cc615e74b0b25f59f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzUwOTk5OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0MzowMFrOF3BXBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo0MzowMFrOF3BXBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzODI3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Additionally, automated Linux fleets tent to see activity from rarely used \n          \n          \n            \n            Additionally, automated Linux fleets tend to see activity from rarely used", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393238276", "createdAt": "2020-03-16T18:43:00Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n For more details, see the\n {dfeed} and job definitions in the `siem_*` folders in\n https://github.com/elastic/kibana/tree/{branch}/x-pack/plugins/ml/server/models/data_recognizer/modules[GitHub].\n \n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - {auditbeat}\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies OS processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n+\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_service::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_url_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `destination.port`\n+* `host.name`\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple hosts in an entire fleet or\n+network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects processes that occur rarely compared to other processes on all \n+  hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.executable`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 197}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzU0Mjk5OnYy", "diffSide": "RIGHT", "path": "docs/en/siem/machine-learning.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo1Mjo0MVrOF3BrWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNjozNTo1MlrOF3Pc5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0MzQ4Mw==", "bodyText": "With other ML modules, you don't even see the job suggestions unless you have the appropriate data. If that's true here as well, it might help to do something like this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            hosts. To run jobs when you are not using {beats}, you must map your data to\n          \n          \n            \n            hosts. If you are not using {beats}, you must map your data to", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393243483", "createdAt": "2020-03-16T18:52:41Z", "author": {"login": "lcawl"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -66,404 +69,10 @@ Management -> Advanced Settings -> `siem:defaultAnomalyScore`.\n === Prebuilt job reference\n \n Prebuilt jobs automatically detect file system and network anomalies on your \n-hosts. If you use Beats to ship your data, the ECS fields are populated and you \n-do not need to manually map the fields.\n-\n-The following prebuilt jobs are available:\n-\n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n+hosts. To run jobs when you are not using {beats}, you must map your data to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 437}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ2OTE1Nw==", "bodyText": "In SIEM, you can always see the jobs. They are marked as unavailable. Changing to:\nTo enable jobs when you are not using {beats},...", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393469157", "createdAt": "2020-03-17T06:35:52Z", "author": {"login": "benskelker"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -66,404 +69,10 @@ Management -> Advanced Settings -> `siem:defaultAnomalyScore`.\n === Prebuilt job reference\n \n Prebuilt jobs automatically detect file system and network anomalies on your \n-hosts. If you use Beats to ship your data, the ECS fields are populated and you \n-do not need to manually map the fields.\n-\n-The following prebuilt jobs are available:\n-\n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n+hosts. To run jobs when you are not using {beats}, you must map your data to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0MzQ4Mw=="}, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 437}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzU0NjY0OnYy", "diffSide": "RIGHT", "path": "docs/en/siem/machine-learning.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo1Mzo1NlrOF3Bt7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo1Mzo1NlrOF3Bt7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0NDE0Mg==", "bodyText": "Continuation of previous suggestion...\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            the ECS fields listed in each job description.\n          \n          \n            \n            ECS fields in order to see these job recommendations.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393244142", "createdAt": "2020-03-16T18:53:56Z", "author": {"login": "lcawl"}, "path": "docs/en/siem/machine-learning.asciidoc", "diffHunk": "@@ -66,404 +69,10 @@ Management -> Advanced Settings -> `siem:defaultAnomalyScore`.\n === Prebuilt job reference\n \n Prebuilt jobs automatically detect file system and network anomalies on your \n-hosts. If you use Beats to ship your data, the ECS fields are populated and you \n-do not need to manually map the fields.\n-\n-The following prebuilt jobs are available:\n-\n-//[horizontal]\n-linux_anomalous_network_port_activity_ecs:: Identifies unusual destination port\n-activity that could indicate command-and-control, persistence mechanism, or data\n-exfiltration activity.\n-+\n-Rarely used destination port activity is generally unusual in Linux fleets and \n-can indicate unauthorized access or threat actor activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_service:: Searches for unusual listening ports that\n-could indicate execution of unauthorized services, backdoors, or persistence mechanisms.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-NOTE: You can only run this job when Auditbeat is used to ship data.\n-\n-linux_anomalous_network_url_activity_ecs:: Searches for unusual web URL requests\n-from hosts, which could indicate malware delivery and execution.\n-+\n-Wget and cURL are commonly used by Linux programs to download code and data. \n-Most of the time, their usage is entirely normal. Generally, because they use a \n-list of URLs, they repeatedly download from the same locations. However, Wget \n-and cURL are sometimes used to deliver Linux exploit payloads, and threat \n-actors use these tools to download additional software and code. For these \n-reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* destination.port\n-* host.name\n-* process.name\n-* process.title\n-* agent.type\n-\n-packetbeat_dns_tunneling:: Searches for unusually large numbers of DNS queries\n-for a single top-level DNS domain, which is often used for DNS tunneling.\n-+\n-DNS tunneling can be used for command-and-control, persistence, or data \n-exfiltration activity. For example, dnscat tends to generate many DNS questions \n-for a top-level domain (TLD) as it uses the DNS protocol to tunnel data.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* dns.question.registered_domain\n-* dns.question.name\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-NOTE: This {ml} job uses the Packetbeat\n-{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n-which is not defined in ECS. Instead, map your network data to the\n-{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS \n-field.\n-\n-packetbeat_rare_dns_question:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon domain to download and \n-run a payload. When malware is already running, it may send requests to an\n-uncommon DNS domain the malware uses for command-and-control communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* dns.question.name\n-* dns.question.type\n-* host.name\n-* event.dataset\n-* agent.type\n-\n-packetbeat_rare_server_domain:: Searches for rare and unusual DNS queries that\n-indicate network activity with unusual domains is about to occur. This can be \n-due to initial access, persistence, command-and-control, or exfiltration \n-activity.\n-+\n-For example, when a user clicks on a link in a phishing email or opens a \n-malicious document, a request may be sent to an uncommon HTTP or TLS server to \n-download and run a payload. When malware is already running, it may send \n-requests to an uncommon DNS domain the malware uses for command-and-control \n-communication.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* source.ip\n-* server.domain\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_urls:: Searches for rare and unusual URLs that indicate unusual \n-web browsing activity. This can be due to initial access, persistence,\n-command-and-control, or exfiltration activity.\n-+\n-For example, in a strategic web compromise or watering hole attack, when a\n-trusted website is compromised to target a particular sector or organization,\n-targeted users may receive emails with uncommon URLs for trusted websites. These\n-URLs can be used to download and run a payload. When malware is already running,\n-it may send requests to uncommon URLs on trusted websites the malware uses for\n-command-and-control communication. When rare URLs are observed being requested\n-for a local web server by a remote source, these can be due to web scanning,\n-enumeration or attack traffic, or they can be due to bots and web scrapers which\n-are part of common Internet background traffic.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* url.full\n-* host.name\n-* agent.type\n-\n-packetbeat_rare_user_agent:: Searches for rare and unusual user agents that\n-indicate web browsing activity by an unusual process other than a web browser.\n-This can be due to persistence, command-and-control, or exfiltration activity.\n-Uncommon user agents coming from remote sources to local destinations are often\n-the result of scanners, bots, and web scrapers which are part of common Internet\n-background traffic.\n-+\n-Much of this is noise, but more targeted attacks on websites\n-using tools like Burp or SQLmap can sometimes be discovered by spotting uncommon\n-user agents. Uncommon user agents in traffic from local sources to remote\n-destinations can be any number of things, including harmless programs like\n-weather monitoring or stock-trading programs. However, uncommon user agents from\n-local sources can also be due to malware or scanning activity.\n-+\n-Beats required on hosts:\n-\n-* Packetbeat (Windows and Linux)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* event.dataset\n-* user_agent.original\n-* agent.type\n-\n-rare_process_by_host_windows_ecs::\n-+\n-rare_process_by_host_linux_ecs:: Identifies rare processes that do not usually \n-run on individual Windows/Linux hosts, which can indicate execution of \n-unauthorized services, malware, or persistence mechanisms.\n-+\n-Processes are considered rare when they only run occasionally as compared with\n-other processes running on the host.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-suspicious_login_activity_ecs:: Identifies an unusually high number of \n-authentication attempts.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-\n-+\n-Required ECS fields:\n-\n-* source.ip\n-* host.name\n-* user.name\n-* event.category\n-* agent.type\n-\n-windows_anomalous_network_activity_ecs::\n-+\n-linux_anomalous_network_activity_ecs:: Identifies Windows/Linux processes that do\n-not usually use the network but have unexpected network activity, which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration activity.\n-+\n-A process with unusual network activity can denote process exploitation or injection,\n-where the process is used to run persistence mechanisms that allow a malicious actor\n-remote access or control of the host, data exfiltration, and execution of unauthorized\n-network applications.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* destination.ip\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_path_activity_ecs:: Identifies processes started from atypical\n-folders in the file system, which might indicate malware execution or persistence\n-mechanisms.\n-+\n-In corporate Windows environments, software installation is centrally managed and\n-it is unusual for programs to be executed from user or temporary directories.\n-Processes executed from these locations can denote that a user downloaded software\n-directly from the internet or a malicious script/macro executed malware.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.working_directory\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_all_hosts_ecs::\n-+\n-linux_anomalous_process_all_hosts_ecs:: Searches for rare processes running on\n-multiple Windows/Linux hosts in an entire fleet or network.\n-+\n-This reduces the detection of false positives since automated maintenance processes\n-often only occasionally run on a single machine but are common to all or many hosts\n-in a fleet.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.executable (Windows)\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_process_creation:: Identifies unusual parent/child process\n-relationships that could indicate malware execution or persistence mechanisms.\n-+\n-Malicious scripts often call on other applications and processes as part of their\n-exploit payload. For example, when a malicious Office document runs scripts as\n-part of an exploit payload, Excel or Word may start a script interpreter process,\n-which, in turn, runs a script that downloads and executes malware. Another common\n-scenario is Outlook running an unusual process when malware is downloaded in an email.\n-+\n-Monitoring and identifying anomalous process relationships is an excellent way of detecting\n-new and emerging malware that is not yet recognized by anti-virus scanners.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* process.parent.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_anomalous_script:: Searches for PowerShell scripts with unusual data\n-characteristics, such as obfuscation, that may be a characteristic of malicious\n-PowerShell script text blocks.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_service:: Searches for unusual Windows services that could \n-indicate execution of unauthorized services, malware, or persistence mechanisms.\n-+\n-In corporate Windows environments, hosts do not generally run many rare or \n-unique services. This job helps detect malware and persistence mechanisms that \n-have been installed and run as a service.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-NOTE: You can only run this job when Winlogbeat is used to ship data.\n-\n-windows_anomalous_user_name_ecs::\n-+\n-linux_anomalous_user_name_ecs:: Searches for activity from users who are not \n-normally active, which could indicate unauthorized changes, activity by \n-unauthorized users, lateral movement, and compromised credentials.\n-+\n-In organizations, new usernames are not often created apart from specific types \n-of system activities, such as creating new accounts for new employees. These \n-user accounts quickly become active and routine.\n-+\n-Events from rarely used usernames can point to suspicious activity. \n-Additionally, automated Linux fleets tent to see activity from rarely used \n-usernames only when personnel log in to make authorized or unauthorized \n-changes, or threat actors have acquired credentials and log in for malicious \n-purposes. Unusual usernames can also indicate pivoting, where compromised \n-credentials are used to try and move laterally from one host to another.\n-+\n-Beats required on hosts:\n-\n-* Auditbeat (Linux)\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* host.name\n-* process.name\n-* user.name\n-* event.action\n-* agent.type\n-\n-windows_rare_user_runas_event:: Searches for unusual user context switches \n-using the `runas` command or similar techniques, which could indicate account \n-takeover or privilege escalation using compromised accounts. Privilege \n-elevation using tools like `runas` is more common for domain and network \n-administrators than professionals who are not members of the technology \n-department.\n-+\n-Beats required on hosts:\n-\n-* Winlogbeat (Windows)\n-\n-+\n-Required ECS fields:\n-\n-* process.name\n-* host.name\n-* user.name\n-* event.code\n-* agent.type \n-\n-windows_rare_user_type10_remote_login:: Searches for unusual remote desktop \n-protocol (RDP) logins, which could indicate account takeover or credentialed \n-persistence using compromised accounts. RDP attacks such as BlueKeep also tend \n-to use unusual usernames.\n-+\n-Beats required on hosts:\n+hosts. To run jobs when you are not using {beats}, you must map your data to\n+the ECS fields listed in each job description.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 438}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzU1NzQ3OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODo1Njo1NVrOF3B02g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNjozNzoyOFrOF3Pezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0NTkxNA==", "bodyText": "Attempting to clarify whether there is a failure to run (i.e. job is visible but fails) or whether you never see this job:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: You can only run this job when Winlogbeat is used to ship data.\n          \n          \n            \n            NOTE: This job is available only when you use {winlogbeat} to ship data.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393245914", "createdAt": "2020-03-16T18:56:55Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n For more details, see the\n {dfeed} and job definitions in the `siem_*` folders in\n https://github.com/elastic/kibana/tree/{branch}/x-pack/plugins/ml/server/models/data_recognizer/modules[GitHub].\n \n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - {auditbeat}\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies OS processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n+\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_service::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_url_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `destination.port`\n+* `host.name`\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple hosts in an entire fleet or\n+network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects processes that occur rarely compared to other processes on all \n+  hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.executable`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used \n+usernames only when personnel log in to make authorized or unauthorized \n+changes, or threat actors have acquired credentials and log in for malicious \n+purposes. Unusual usernames can also indicate pivoting, where compromised \n+credentials are used to try and move laterally from one host to another.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or\n+`winlogbeat` (Windows).\n * Models user activity.\n * Detects users that are rarely or unusually active compared to other users \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Required {beats}:::\n \n-rare_process_by_host_linux_ecs::\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Linux (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields when not using {beats}:::\n \n-suspicious_login_activity_ecs::\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of authentication attempts (`partition_field_name` is \n-  `host.name`).\n-* Detects unusually high number of authentication attempts (using the \n-  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+packetbeat_dns_tunneling::\n \n-[float]\n-[[ootb-ml-jobs-siem-packet]]\n-==== SIEM - {packetbeat}\n+Searches for unusually large numbers of DNS queries\n+for a single top-level DNS domain, which is often used for DNS tunneling.\n++\n+DNS tunneling can be used for command-and-control, persistence, or data\n+exfiltration activity. For example, `dnscat` tends to generate many DNS\n+questions for a top-level domain as it uses the DNS protocol to tunnel data.\n \n-packetbeat_dns_tunneling::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n-* Models occurrances of DNS activity.\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n * Detects unusual DNS activity (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n \n-Looks for unusual DNS activity that could indicate command-and-control or data \n-exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `dns.question.registered_domain` \n+* `host.name`\n+* `dns.question.name`\n+* `event.dataset`\n+* `agent.type`\n+\n++\n+NOTE: This job uses the Packetbeat\n+{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n+which is not defined in ECS. Instead, map your network data to the\n+{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS field.\n \n packetbeat_rare_dns_question::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon domain. When malware is already running, it may send requests to an\n+uncommon DNS domain the malware uses for command-and-control communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of DNS activity.\n * Detects DNS activity that is rare compared to other DNS activities (using the \n   {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual DNS activity that could indicate command-and-control activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n++\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `dns.question.name`\n+* `dns.question.type`\n+* `event.dataset`\n+* `agent.type`\n \n packetbeat_rare_server_domain::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon HTTP or TLS server. When malware is already running, it may send\n+requests to an uncommon DNS domain the malware uses for command-and-control\n+communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models HTTP or TLS domain activity.\n-* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+* Detects HTTP or TLS domain activity that is rare compared to other \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual HTTP or TLS destination domain activity that could indicate \n-execution, persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `source.ip`\n+* `host.name`\n+* `server.domain`\n+* `agent.type`\n \n packetbeat_rare_urls::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual URLs that indicate unusual \n+web browsing activity. This can be due to initial access, persistence,\n+command-and-control, or exfiltration activity.\n++\n+For example, in a strategic web compromise or watering hole attack, when a\n+trusted website is compromised to target a particular sector or organization,\n+targeted users may receive emails with uncommon URLs for trusted websites. These\n+URLs can be used to download and run a payload. When malware is already running,\n+it may send requests to uncommon URLs on trusted websites the malware uses for\n+command-and-control communication. When rare URLs are observed being requested\n+for a local web server by a remote source, these can be due to web scanning,\n+enumeration or attack traffic, or they can be due to bots and web scrapers which\n+are part of common Internet background traffic.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of web browsing URL activity.\n * Detects URL activity that rarely occurs compared to other URL activities \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual web browsing URL activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `host.name`\n+* `url.full`\n+* `agent.type`\n \n packetbeat_rare_user_agent::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual user agents that indicate web browsing activity\n+by an unusual process other than a web browser. This can be due to persistence,\n+command-and-control, or exfiltration activity. Uncommon user agents coming from\n+remote sources to local destinations are often the result of scanners, bots,\n+and web scrapers, which are part of common internet background traffic.\n++\n+Much of this is noise, but more targeted attacks on websites using tools like\n+Burp or SQLmap can sometimes be discovered by spotting uncommon user agents.\n+Uncommon user agents in traffic from local sources to remote destinations can\n+be any number of things, including harmless programs like weather monitoring or\n+stock-trading programs. However, uncommon user agents from local sources can\n+also be due to malware or scanning activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of HTTP user agent activity.\n * Detects HTTP user agent activity that occurs rarely compared to other HTTP \n   user agent activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual HTTP user agent activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n \n-[float]\n-[[ootb-ml-jobs-siem-winlog]]\n-==== SIEM - {winlogbeat}\n+* {packetbeat} (Windows and Linux)\n \n-windows_anomalous_network_activity_ecs::\n+Required ECS fields when not using {beats}:::\n \n-* For network activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes that cause network activity.\n-* Detects network activity caused by processes that occur rarely compared to \n-  other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* `destination.ip`\n+* `host.name`\n+* `event.dataset`\n+* `user_agent.original`\n+* `agent.type`\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+rare_process_by_host_linux_ecs::\n++\n+rare_process_by_host_windows_ecs::\n \n-windows_anomalous_process_all_hosts_ecs::\n+Identifies rare processes that do not usually run on individual hosts, which\n+can indicate execution of unauthorized services, malware, or persistence\n+mechanisms.\n++\n+Processes are considered rare when they only run occasionally as compared with\n+other processes running on the host.\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Job details:::\n \n-Looks for processes that are unusual to all Windows hosts. Such unusual \n-processes may indicate unauthorized services, malware, or persistence \n-mechanisms.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat` (Windows) or `auditbeat` (Linux).\n+* Models occurrences of process activities on the host. \n+* Detects unusually rare processes compared to other processes on the host (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-windows_anomalous_user_name_ecs::\n+Required {beats}:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models user activity.\n-* Detects users that are rarely or unusually active compared to other users \n-  (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Required ECS fields when not using {beats}:::\n \n-rare_process_by_host_windows_ecs::\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Windows (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+suspicious_login_activity_ecs::\n+\n+Identifies an unusually high number of authentication attempts.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts (using the \n+  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `source.ip`\n+* `host.name`\n+* `user.name`\n+* `event.category`\n+* `agent.type`\n \n windows_anomalous_path_activity_ecs::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies processes started from atypical folders in the file system, which\n+might indicate malware execution or persistence mechanisms.\n++\n+In corporate Windows environments, software installation is centrally managed\n+and it is unusual for programs to be executed from user or temporary\n+directories. Processes executed from these locations can denote that a user\n+downloaded software directly from the internet or a malicious script/macro\n+executed malware.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of processes in paths.\n * Detects activity in unusual paths (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Activities in unusual paths may indicate execution of malware or persistence \n-mechanisms. Windows payloads often execute from user profile paths.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.working_directory`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_process_creation::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies unusual parent-child process relationships that can indicate\n+malware execution or persistence mechanisms.\n++\n+Malicious scripts often call on other applications and processes as part of\n+their exploit payload. For example, when a malicious Office document runs\n+scripts as part of an exploit payload, Excel or Word may start a script\n+interpreter process, which, in turn, runs a script that downloads and executes\n+malware. Another common scenario is Outlook running an unusual process when\n+malware is downloaded in an email.\n++\n+Monitoring and identifying anomalous process relationships is an excellent way\n+of detecting new and emerging malware that is not yet recognized by anti-virus\n+scanners.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of process creation activities (`partition_field_name` is \n   `process.parent.name`).\n * Detects process relationships that are rare compared to other process \n   relationships (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual process relationships which may indicate execution of malware \n-or persistence mechanisms.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.parent.name`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_script::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of powershell script activities.\n-* Detects unusual powershell script execution compared to other powershell \n+Searches for PowerShell scripts with unusual data characteristics, such as\n+obfuscation, that may be a characteristic of malicious PowerShell script text\n+blocks.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of PowerShell script activities.\n+* Detects unusual PowerShell script execution compared to other PowerShell \n   script activities (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n \n-Looks for unusual powershell scripts that may indicate execution of malware, or \n-persistence mechanisms.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 606}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ2OTY0Nw==", "bodyText": "Yep - will update all the relevant notes. You can see the job, but it is marked as unavailable.", "url": "https://github.com/elastic/stack-docs/pull/932#discussion_r393469647", "createdAt": "2020-03-17T06:37:28Z", "author": {"login": "benskelker"}, "path": "docs/en/stack/ml/anomaly-detection/ootb-ml-jobs.asciidoc", "diffHunk": "@@ -286,254 +286,568 @@ visitor_rate_ecs::\n [[ootb-ml-jobs-siem]]\n === SIEM\n \n-These {anomaly-jobs} appear by default in the Anomaly Detection interface of the \n-{siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n-automatically detect file system and network anomalies on your hosts. The list\n-below contains the jobs organized by `agent.type` ({auditbeat}, {packetbeat},\n-and {winlogbeat}).\n+These {anomaly-jobs} appear by default in the Anomaly Detection interface of\n+the {siem-guide}/machine-learning.html[SIEM app] in {kib}. They help you \n+automatically detect file system and network anomalies on your hosts.\n \n // tag::siem-jobs[]\n For more details, see the\n {dfeed} and job definitions in the `siem_*` folders in\n https://github.com/elastic/kibana/tree/{branch}/x-pack/plugins/ml/server/models/data_recognizer/modules[GitHub].\n \n-[float]\n-[[ootb-ml-jobs-siem-audit]]\n-==== SIEM - {auditbeat}\n-\n linux_anomalous_network_activity_ecs::\n++\n+windows_anomalous_network_activity_ecs::\n+\n+Identifies OS processes that do not usually use the network but have\n+unexpected network activity, which can indicate command-and-control, lateral\n+movement, persistence, or data exfiltration activity.\n++\n+A process with unusual network activity can denote process exploitation or\n+injection, where the process is used to run persistence mechanisms that allow a\n+malicious actor remote access or control of the host, data exfiltration, and\n+execution of unauthorized network applications.\n+\n+Job details:::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+* Analyzes network activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes that cause network activity.\n * Detects network activity caused by processes that occur rarely compared to \n   other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_network_port_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Identifies unusual destination port activity that can indicate\n+command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Rarely used destination port activity is generally unusual in Linux fleets, and \n+can indicate unauthorized access or threat actor activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models destination port activity.\n * Detects destination port activity that occurs rarely compared to other port \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual destination port activity that could indicate \n-command-and-control, persistence mechanism, or data exfiltration activity.\n++\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_service::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual listening ports that can indicate execution of\n+unauthorized services, backdoors, or persistence mechanisms.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models listening port activity.\n-* Detects unusual listening port activity that occurs rarely compared to \n+* Detects listening port activity that occurs rarely compared to \n   other port activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual listening ports that could indicate execution of unauthorized \n-services, backdoors, or persistence mechanisms.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n++\n+NOTE: You can only run this job when Auditbeat is used to ship data.\n \n linux_anomalous_network_url_activity_ecs::\n \n-* For network activity logs where `agent.type` is `auditbeat`.\n+Searches for unusual web URL requests from hosts, which can indicate malware\n+delivery and execution.\n++\n+Wget and cURL are commonly used by Linux programs to download code and data. \n+Most of the time, their usage is entirely normal. Generally, because they use a \n+list of URLs, they repeatedly download from the same locations. However, Wget \n+and cURL are sometimes used to deliver Linux exploit payloads, and threat \n+actors use these tools to download additional software and code. For these \n+reasons, unusual URLs can indicate unauthorized downloads or threat activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `auditbeat`.\n * Models the occurrences of URL requests.\n-* Detects unusual web URL request that is rare compared to other web URL \n+* Detects a web URL request that is rare compared to other web URL \n   requests (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for an unusual web URL request from a Linux instance. Curl and wget web \n-request activity is very common but unusual web requests from a Linux server can \n-sometimes be malware delivery or execution.\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `destination.port`\n+* `host.name`\n+* `process.name`\n+* `process.title`\n+* `agent.type`\n \n linux_anomalous_process_all_hosts_ecs::\n++\n+windows_anomalous_process_all_hosts_ecs::\n+\n+Searches for rare processes running on multiple hosts in an entire fleet or\n+network.\n++\n+This reduces the detection of false positives since automated maintenance\n+processes usually only run occasionally on a single machine but are common to\n+all or many hosts in a fleet.\n+\n+Job details:::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or `winlogbeat` (Windows).\n * Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* Detects processes that occur rarely compared to other processes on all \n+  hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n \n-Looks for processes that are unusual to all Linux hosts. Such unusual processes \n-may indicate unauthorized services, malware, or persistence mechanisms.\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.executable`\n+* `event.action`\n+* `agent.type`\n \n linux_anomalous_user_name_ecs::\n++\n+windows_anomalous_user_name_ecs::\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n+Searches for activity from users who are not normally active, which can\n+indicate unauthorized changes, activity by unauthorized users, lateral\n+movement, and compromised credentials.\n++\n+In organizations, new usernames are not often created apart from specific types \n+of system activities, such as creating new accounts for new employees. These \n+user accounts quickly become active and routine.\n++\n+Events from rarely used usernames can point to suspicious activity. \n+Additionally, automated Linux fleets tent to see activity from rarely used \n+usernames only when personnel log in to make authorized or unauthorized \n+changes, or threat actors have acquired credentials and log in for malicious \n+purposes. Unusual usernames can also indicate pivoting, where compromised \n+credentials are used to try and move laterally from one host to another.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat` (Linux) or\n+`winlogbeat` (Windows).\n * Models user activity.\n * Detects users that are rarely or unusually active compared to other users \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Required {beats}:::\n \n-rare_process_by_host_linux_ecs::\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Linux (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Required ECS fields when not using {beats}:::\n \n-suspicious_login_activity_ecs::\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `auditbeat`.\n-* Models occurrences of authentication attempts (`partition_field_name` is \n-  `host.name`).\n-* Detects unusually high number of authentication attempts (using the \n-  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+packetbeat_dns_tunneling::\n \n-[float]\n-[[ootb-ml-jobs-siem-packet]]\n-==== SIEM - {packetbeat}\n+Searches for unusually large numbers of DNS queries\n+for a single top-level DNS domain, which is often used for DNS tunneling.\n++\n+DNS tunneling can be used for command-and-control, persistence, or data\n+exfiltration activity. For example, `dnscat` tends to generate many DNS\n+questions for a top-level domain as it uses the DNS protocol to tunnel data.\n \n-packetbeat_dns_tunneling::\n+Job details:::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n-* Models occurrances of DNS activity.\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n+* Models occurrences of DNS activity.\n * Detects unusual DNS activity (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n \n-Looks for unusual DNS activity that could indicate command-and-control or data \n-exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `dns.question.registered_domain` \n+* `host.name`\n+* `dns.question.name`\n+* `event.dataset`\n+* `agent.type`\n+\n++\n+NOTE: This job uses the Packetbeat\n+{packetbeat-ref}/exported-fields-dns.html[`dns.question.etld_plus_one`] field, \n+which is not defined in ECS. Instead, map your network data to the\n+{ecs-ref}/ecs-dns.html[`dns.question.registered_domain`] ECS field.\n \n packetbeat_rare_dns_question::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon domain. When malware is already running, it may send requests to an\n+uncommon DNS domain the malware uses for command-and-control communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of DNS activity.\n * Detects DNS activity that is rare compared to other DNS activities (using the \n   {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual DNS activity that could indicate command-and-control activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n++\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `dns.question.name`\n+* `dns.question.type`\n+* `event.dataset`\n+* `agent.type`\n \n packetbeat_rare_server_domain::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual DNS queries that indicate network activity with\n+unusual domains is about to occur. This can be due to initial access,\n+persistence, command-and-control, or exfiltration activity.\n++\n+For example, when a user clicks on a link in a phishing email or opens a \n+malicious document, a request may be sent to download and run a payload from an\n+uncommon HTTP or TLS server. When malware is already running, it may send\n+requests to an uncommon DNS domain the malware uses for command-and-control\n+communication.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models HTTP or TLS domain activity.\n-* Detects HTTP or TLS domain activity that is rarely occurs compared to other \n+* Detects HTTP or TLS domain activity that is rare compared to other \n   activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual HTTP or TLS destination domain activity that could indicate \n-execution, persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `source.ip`\n+* `host.name`\n+* `server.domain`\n+* `agent.type`\n \n packetbeat_rare_urls::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual URLs that indicate unusual \n+web browsing activity. This can be due to initial access, persistence,\n+command-and-control, or exfiltration activity.\n++\n+For example, in a strategic web compromise or watering hole attack, when a\n+trusted website is compromised to target a particular sector or organization,\n+targeted users may receive emails with uncommon URLs for trusted websites. These\n+URLs can be used to download and run a payload. When malware is already running,\n+it may send requests to uncommon URLs on trusted websites the malware uses for\n+command-and-control communication. When rare URLs are observed being requested\n+for a local web server by a remote source, these can be due to web scanning,\n+enumeration or attack traffic, or they can be due to bots and web scrapers which\n+are part of common Internet background traffic.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of web browsing URL activity.\n * Detects URL activity that rarely occurs compared to other URL activities \n   (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual web browsing URL activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n+\n+* {packetbeat} (Windows and Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `destination.ip`\n+* `host.name`\n+* `url.full`\n+* `agent.type`\n \n packetbeat_rare_user_agent::\n \n-* For network activity logs where `agent.type` is `packetbeat`.\n+Searches for rare and unusual user agents that indicate web browsing activity\n+by an unusual process other than a web browser. This can be due to persistence,\n+command-and-control, or exfiltration activity. Uncommon user agents coming from\n+remote sources to local destinations are often the result of scanners, bots,\n+and web scrapers, which are part of common internet background traffic.\n++\n+Much of this is noise, but more targeted attacks on websites using tools like\n+Burp or SQLmap can sometimes be discovered by spotting uncommon user agents.\n+Uncommon user agents in traffic from local sources to remote destinations can\n+be any number of things, including harmless programs like weather monitoring or\n+stock-trading programs. However, uncommon user agents from local sources can\n+also be due to malware or scanning activity.\n+\n+Job details:::\n+\n+* Analyzes network activity logs where `agent.type` is `packetbeat`.\n * Models occurrences of HTTP user agent activity.\n * Detects HTTP user agent activity that occurs rarely compared to other HTTP \n   user agent activities (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual HTTP user agent activity that could indicate execution, \n-persistence, command-and-control or data exfiltration activity.\n+Required {beats}:::\n \n-[float]\n-[[ootb-ml-jobs-siem-winlog]]\n-==== SIEM - {winlogbeat}\n+* {packetbeat} (Windows and Linux)\n \n-windows_anomalous_network_activity_ecs::\n+Required ECS fields when not using {beats}:::\n \n-* For network activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes that cause network activity.\n-* Detects network activity caused by processes that occur rarely compared to \n-  other processes (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* `destination.ip`\n+* `host.name`\n+* `event.dataset`\n+* `user_agent.original`\n+* `agent.type`\n \n-Looks for unusual processes using the network which could indicate\n-command-and-control, lateral movement, persistence, or data exfiltration\n-activity.\n+rare_process_by_host_linux_ecs::\n++\n+rare_process_by_host_windows_ecs::\n \n-windows_anomalous_process_all_hosts_ecs::\n+Identifies rare processes that do not usually run on individual hosts, which\n+can indicate execution of unauthorized services, malware, or persistence\n+mechanisms.\n++\n+Processes are considered rare when they only run occasionally as compared with\n+other processes running on the host.\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models the occurrences of processes on all hosts.\n-* Detects processes that occur rarely compared to other processes to all \n-  Linux/Windows hosts (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+Job details:::\n \n-Looks for processes that are unusual to all Windows hosts. Such unusual \n-processes may indicate unauthorized services, malware, or persistence \n-mechanisms.\n+* Analyzes host activity logs where `agent.type` is `winlogbeat` (Windows) or `auditbeat` (Linux).\n+* Models occurrences of process activities on the host. \n+* Detects unusually rare processes compared to other processes on the host (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-windows_anomalous_user_name_ecs::\n+Required {beats}:::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models user activity.\n-* Detects users that are rarely or unusually active compared to other users \n-  (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+* {auditbeat} (Linux)\n+* {winlogbeat} (Windows)\n \n-Rare and unusual users that are not normally active may indicate unauthorized \n-changes or activity by an unauthorized user which may be credentialed access or \n-lateral movement.\n+Required ECS fields when not using {beats}:::\n \n-rare_process_by_host_windows_ecs::\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `event.action`\n+* `agent.type`\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of process activities on the host. \n-* Detect unusually rare processes compared to other processes on Windows (using \n-  the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n+suspicious_login_activity_ecs::\n+\n+Identifies an unusually high number of authentication attempts.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `auditbeat`.\n+* Models occurrences of authentication attempts (`partition_field_name` is \n+  `host.name`).\n+* Detects unusually high number of authentication attempts (using the \n+  {ml-docs}/ml-count-functions.html#ml-nonzero-count[`high_non_zero_count` function]).\n+\n+Required {beats}:::\n+\n+* {auditbeat} (Linux)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `source.ip`\n+* `host.name`\n+* `user.name`\n+* `event.category`\n+* `agent.type`\n \n windows_anomalous_path_activity_ecs::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies processes started from atypical folders in the file system, which\n+might indicate malware execution or persistence mechanisms.\n++\n+In corporate Windows environments, software installation is centrally managed\n+and it is unusual for programs to be executed from user or temporary\n+directories. Processes executed from these locations can denote that a user\n+downloaded software directly from the internet or a malicious script/macro\n+executed malware.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of processes in paths.\n * Detects activity in unusual paths (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Activities in unusual paths may indicate execution of malware or persistence \n-mechanisms. Windows payloads often execute from user profile paths.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.working_directory`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_process_creation::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n+Identifies unusual parent-child process relationships that can indicate\n+malware execution or persistence mechanisms.\n++\n+Malicious scripts often call on other applications and processes as part of\n+their exploit payload. For example, when a malicious Office document runs\n+scripts as part of an exploit payload, Excel or Word may start a script\n+interpreter process, which, in turn, runs a script that downloads and executes\n+malware. Another common scenario is Outlook running an unusual process when\n+malware is downloaded in an email.\n++\n+Monitoring and identifying anomalous process relationships is an excellent way\n+of detecting new and emerging malware that is not yet recognized by anti-virus\n+scanners.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n * Models occurrences of process creation activities (`partition_field_name` is \n   `process.parent.name`).\n * Detects process relationships that are rare compared to other process \n   relationships (using the {ml-docs}/ml-rare-functions.html#ml-rare[`rare` function]).\n \n-Looks for unusual process relationships which may indicate execution of malware \n-or persistence mechanisms.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n+Required ECS fields when not using {beats}:::\n+\n+* `host.name`\n+* `process.name`\n+* `user.name`\n+* `process.parent.name`\n+* `event.action`\n+* `agent.type`\n \n windows_anomalous_script::\n \n-* For host activity logs where `agent.type` is `winlogbeat`.\n-* Models occurrences of powershell script activities.\n-* Detects unusual powershell script execution compared to other powershell \n+Searches for PowerShell scripts with unusual data characteristics, such as\n+obfuscation, that may be a characteristic of malicious PowerShell script text\n+blocks.\n+\n+Job details:::\n+\n+* Analyzes host activity logs where `agent.type` is `winlogbeat`.\n+* Models occurrences of PowerShell script activities.\n+* Detects unusual PowerShell script execution compared to other PowerShell \n   script activities (using the \n   {ml-docs}/ml-info-functions.html#ml-info-content[`high_info_content` function]).\n \n-Looks for unusual powershell scripts that may indicate execution of malware, or \n-persistence mechanisms.\n+Required {beats}:::\n+\n+* {winlogbeat} (Windows)\n+\n++\n+NOTE: You can only run this job when Winlogbeat is used to ship data.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI0NTkxNA=="}, "originalCommit": {"oid": "3d27ae7924dc744082ca9d9a08e238f830534c46"}, "originalPosition": 606}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1271, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}