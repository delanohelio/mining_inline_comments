{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzcyNDA0", "number": 816, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzoxNzoxOVrODaKlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyNjo1N1rODbEZhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzYyOTM4OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzoxNzoxOVrOFg9usg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzoxNzoxOVrOFg9usg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExMDEzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            model in an {ref}//inference-processor.html[{infer} processor] of an ingest \n          \n          \n            \n            model in an {ref}/inference-processor.html[{infer} processor] of an ingest", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370110130", "createdAt": "2020-01-23T13:17:19Z", "author": {"login": "szabosteve"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}//inference-processor.html[{infer} processor] of an ingest ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18b7dc07d10e8d2267325865aeb071c3c185e894"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODM3ODIzOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozNzo1MlrOFhE8Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozNzo1MlrOFhE8Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODMyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {lang-ident-cap} is an {infer} trained model that you can use to determine on \n          \n          \n            \n            {lang-ident-cap} is an {infer} trained model that you can use to determine in", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370228322", "createdAt": "2020-01-23T16:37:52Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODM4MDQ4OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozODoyN1rOFhE9ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozODoyN1rOFhE9ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODY2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which language a certain text is written. You can reference the {lang-ident} \n          \n          \n            \n            which language text is written. You can reference the {lang-ident}", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370228666", "createdAt": "2020-01-23T16:38:27Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ4NzA1OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDowM1rOFhGAzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDowM1rOFhGAzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NTgzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            pipeline by using its `model_id`. The input filed name is `text` by default. If \n          \n          \n            \n            pipeline by using its `model_id`. The input field name is `text`. If", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370245836", "createdAt": "2020-01-23T17:10:03Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ4NzY4OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDoxOFrOFhGBPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDoxOFrOFhGBPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NTk1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            map your field name to `text` in the ingest processor.\n          \n          \n            \n            map your field name to `text` in the ingest processor settings.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370245950", "createdAt": "2020-01-23T17:10:18Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If \n+you want to run {lang-ident} on an field with a different name, then you have to \n+map your field name to `text` in the ingest processor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ4ODgwOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDo0MVrOFhGB7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMDo0MVrOFhGB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NjEyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            model will be to identify the language. It is fairly accurate on shorter samples \n          \n          \n            \n            model will be identifying the language. It is fairly accurate on shorter samples", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370246127", "createdAt": "2020-01-23T17:10:41Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If \n+you want to run {lang-ident} on an field with a different name, then you have to \n+map your field name to `text` in the ingest processor.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be to identify the language. It is fairly accurate on shorter samples ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ5MTA5OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMToyMFrOFhGDPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMToyMFrOFhGDPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NjQ2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (for example, 50 character-long streams) at certain languages, but languages \n          \n          \n            \n            (for example, 50 character-long streams) in certain languages, but languages", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370246462", "createdAt": "2020-01-23T17:11:20Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If \n+you want to run {lang-ident} on an field with a different name, then you have to \n+map your field name to `text` in the ingest processor.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be to identify the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) at certain languages, but languages ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ5MjUzOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMTo0M1rOFhGEBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMTo0M1rOFhGEBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NjY2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that are very similar to each other are hard to identify based on a very short \n          \n          \n            \n            that are similar to each other are harder to identify based on a short", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370246663", "createdAt": "2020-01-23T17:11:43Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If \n+you want to run {lang-ident} on an field with a different name, then you have to \n+map your field name to `text` in the ingest processor.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be to identify the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) at certain languages, but languages \n+that are very similar to each other are hard to identify based on a very short ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODQ5NzE1OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMzoxM1rOFhGG3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxMzoxM1rOFhGG3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NzM4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In the following example, we feed the {lang-ident} trained model with a short \n          \n          \n            \n            In the following example, we feed the {lang-ident} trained model a short", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r370247389", "createdAt": "2020-01-23T17:13:13Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine on \n+which language a certain text is written. You can reference the {lang-ident} \n+model in an {ref}/inference-processor.html[{infer} processor] of an ingest \n+pipeline by using its `model_id`. The input filed name is `text` by default. If \n+you want to run {lang-ident} on an field with a different name, then you have to \n+map your field name to `text` in the ingest processor.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be to identify the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) at certain languages, but languages \n+that are very similar to each other are hard to identify based on a very short \n+character stream.\n+\n+{lang-ident-cap} takes into account Unicode boundaries when the feature set is \n+built. If the text has diacritical marks then the model uses that information \n+for identifying the language of the text.  In certain cases, the model can \n+detect the source language even if it is not written in the script that the \n+language traditionally uses. These languages are marked in the supported \n+languages table (see below) with the `Latn` subtag. {lang-ident-cap} supports \n+Unicode input.\n+\n+\n+[[ml-lang-ident-supported-languages]]\n+==== Supported languages\n+\n+The table below contains the ISO codes and the English names of the languages \n+that {lang-ident} supports. If a language has a 2-letter `ISO 639-1` code, the \n+table contains that identifier. Otherwise, the 3-letter `ISO 639-2` code is \n+used. The \u2018Latn\u2019 subtag indicates that the language is transliterated into Latin \n+script.\n+\n+[cols=\"<,<,<,<,<,<\"]\n+|===\n+| Code    | Language           | Code    | Language       | Code    | Language\n+\n+| af      | Afrikaans          | hr      | Croatian       | pa      | Punjabi        \n+| am      | Amharic            | ht      | Haitian        | pl      | Polish        \n+| ar      | Arabic             | hu      | Hungarian      | ps      | Pashto        \n+| az      | Azerbaijani        | hy      | Armenian       | pt      | Portuguese\n+| be      | Belarusian         | id      | Indonesian     | ro      | Romanian\n+| bg      | Bulgarian          | ig      | Igbo           | ru      | Russian\n+| bg-Latn | Bulgarian          | is      | Icelandic      | ru-Latn | Russian\n+| bn      | Bengali            | it      | Italian        | sd      | Sindhi\n+| bs      | Bosnian            | iw      | Hebrew         | si      | Sinhala\n+| ca      | Catalan            | ja      | Japanese       | sk      | Slovak\n+| ceb     | Cebuano            | ja-Latn | Japanese       | sl      | Slovenian\n+| co      | Corsican           | jv      | Javanese       | sm      | Samoan\n+| cs      | Czech              | ka      | Georgian       | sn      | Shona\n+| cy      | Welsh              | kk      | Kazakh         | so      | Somali\n+| da      | Danish             | km      | Central Khmer  | sq      | Albanian\n+| de      | German             | kn      | Kannada        | sr      | Serbian\n+| el      | Greek, modern      | ko      | Korean         | st      | Southern Sotho\n+| el-Latn | Greek, modern      | ku      | Kurdish        | su      | Sundanese\n+| en      | English            | ky      | Kirghiz        | sv      | Swedish\n+| eo      | Esperanto          | la      | Latin          | sw      | Swahili\n+| es      | Spanish, Castilian | lb      | Luxembourgish  | ta      | Tamil\n+| et      | Estonian           | lo      | Lao            | te      | Telugu\n+| eu      | Basque             | lt      | Lithuanian     | tg      | Tajik\n+| fa      | Persian            | lv      | Latvian        | th      | Thai\n+| fi      | Finnish            | mg      | Malagasy       | tr      | Turkish\n+| fil     | Filipino           | mi      | Maori          | uk      | Ukrainian\n+| fr      | French             | mk      | Macedonian     | ur      | Urdu\n+| fy      | Western Frisian    | ml      | Malayalam      | uz      | Uzbek\n+| ga      | Irish              | mn      | Mongolian      | vi      | Vietnamese\n+| gd      | Gaelic             | mr      | Marathi        | xh      | Xhosa\n+| gl      | Galician           | ms      | Malay          | yi      | Yiddish\n+| gu      | Gujarati           | mt      | Maltese        | yo      | Yoruba\n+| ha      | Hausa              | my      | Burmese        | zh      | Chinese\n+| haw     | Hawaiian           | ne      | Nepali         | zh-Latn | Chinese\n+| hi      | Hindi              | nl      | Dutch, Flemish | zu      | Zulu\n+| hi-Latn | Hindi              | no      | Norwegian      |         |   \n+| hmn     | Hmong              | ny      | Chichewa       |         |   \n+|===\n+\n+\n+[[ml-lang-ident-example]]\n+==== Example of {lang-ident}\n+\n+In the following example, we feed the {lang-ident} trained model with a short ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbc59a89e48726a536e425202638c3fc5b50a8d"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTE1ODkzOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzo1MjoyMVrOFiDT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzo1MjoyMVrOFiDT7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1MDE1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            built. If the text has diacritical marks then the model uses that information \n          \n          \n            \n            built. If the text has diacritical marks, then the model uses that information", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371250156", "createdAt": "2020-01-27T13:52:21Z", "author": {"login": "benwtrent"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be identifying the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) in certain languages, but languages \n+that are similar to each other are harder to identify based on a short \n+character stream.\n+\n+{lang-ident-cap} takes into account Unicode boundaries when the feature set is \n+built. If the text has diacritical marks then the model uses that information ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30297a31a45bc7a101e4db53ebbfa54e7e3c62fb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA0MjkzOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1Mjo0MFrOFiVcLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1Mjo0MFrOFiVcLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0NzE4Mg==", "bodyText": "Language identification model_id: lang_ident_model_1\n\nThere is no context for this, so it seems like a strange first line.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371547182", "createdAt": "2020-01-27T23:52:40Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA1Nzc1OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMDo0OFrOFiVlKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMDo0OFrOFiVlKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0OTQ4Mw==", "bodyText": "If the model ID is required, perhaps it can be moved here?:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {lang-ident-cap} is an {infer} trained model that you can use to determine in \n          \n          \n            \n            {lang-ident-cap} is an {infer} trained model (`lang_ident_model_1`) that you can use to determine the language of text.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371549483", "createdAt": "2020-01-28T00:00:48Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA2MzMwOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzo1NFrOFiVohw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzo1NFrOFiVohw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDM0Mw==", "bodyText": "Alternatively, maybe the info from the first line can be moved here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n          \n          \n            \n            its model ID (`lang_ident_model_1`). The input field name is `text`. If you want to run {lang-ident}", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371550343", "createdAt": "2020-01-28T00:03:54Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA2NTkyOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowNTowOFrOFiVqBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowNTowOFrOFiVqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDcyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            on an field with a different name, then you have to map your field name to \n          \n          \n            \n            on a field with a different name, you must map your field name to", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371550725", "createdAt": "2020-01-28T00:05:08Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA3NzYyOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxMTo0M1rOFiVxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwNzo0MTo0MlrOFibcug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MjUxMw==", "bodyText": "IMO this doesn't really feel like a description of a concept, since it gets into implementation details and examples quite quickly.  My inclination would be to have maybe a paragraph of introduction to this concept of language identification at the end of the inference page (http://stack-docs_816.docs-preview.app.elstc.co/guide/en/machine-learning/master/ml-inference.html) and then have all the details (ideally covering the whole pipeline setup, for example) in this section: http://stack-docs_816.docs-preview.app.elstc.co/guide/en/machine-learning/master/dfanalytics-examples.html or maybe even a new section called something like \"Trained models\" or something along those lines.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371552513", "createdAt": "2020-01-28T00:11:43Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY0NTYyNg==", "bodyText": "@lcawl\nThe aim is to open a \"Trained models\" section when we'll have more than one trained models. For this reason, I wouldn't split the content between the Inference conceptual docs and the Examples because it would make harder to merge them together when we'll have the next trained model.\nI'll add a short paragraph to the inference conceptual docs about lang identification with a link that points to this piece, so there will be continuity between the two texts.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371645626", "createdAt": "2020-01-28T07:41:42Z", "author": {"login": "szabosteve"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MjUxMw=="}, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA3ODkxOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxMjozNVrOFiVx0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxMjozNVrOFiVx0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MjcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The longer the text passed into the {lang-ident} model, the more accurate the \n          \n          \n            \n            The longer the text passed into the {lang-ident} model, the more accurately the", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371552723", "createdAt": "2020-01-28T00:12:35Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA3OTcxOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxMzowNVrOFiVyVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxMzowNVrOFiVyVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1Mjg1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            model will be identifying the language. It is fairly accurate on shorter samples \n          \n          \n            \n            model can identify the language. It is fairly accurate on short samples", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371552854", "createdAt": "2020-01-28T00:13:05Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be identifying the language. It is fairly accurate on shorter samples ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA4NzcyOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxODoxM1rOFiV3Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxODoxM1rOFiV3Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDEyMw==", "bodyText": "IMO you don't need the \"yet\" here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Hungarian text that contains diacritics and a couple of English words. Yet, the \n          \n          \n            \n            Hungarian text that contains diacritics and a couple of English words. The", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371554123", "createdAt": "2020-01-28T00:18:13Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be identifying the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) in certain languages, but languages \n+that are similar to each other are harder to identify based on a short \n+character stream.\n+\n+{lang-ident-cap} takes into account Unicode boundaries when the feature set is \n+built. If the text has diacritical marks, then the model uses that information \n+for identifying the language of the text.  In certain cases, the model can \n+detect the source language even if it is not written in the script that the \n+language traditionally uses. These languages are marked in the supported \n+languages table (see below) with the `Latn` subtag. {lang-ident-cap} supports \n+Unicode input.\n+\n+\n+[[ml-lang-ident-supported-languages]]\n+==== Supported languages\n+\n+The table below contains the ISO codes and the English names of the languages \n+that {lang-ident} supports. If a language has a 2-letter `ISO 639-1` code, the \n+table contains that identifier. Otherwise, the 3-letter `ISO 639-2` code is \n+used. The \u2018Latn\u2019 subtag indicates that the language is transliterated into Latin \n+script.\n+\n+[cols=\"<,<,<,<,<,<\"]\n+|===\n+| Code    | Language           | Code    | Language       | Code    | Language\n+\n+| af      | Afrikaans          | hr      | Croatian       | pa      | Punjabi        \n+| am      | Amharic            | ht      | Haitian        | pl      | Polish        \n+| ar      | Arabic             | hu      | Hungarian      | ps      | Pashto        \n+| az      | Azerbaijani        | hy      | Armenian       | pt      | Portuguese\n+| be      | Belarusian         | id      | Indonesian     | ro      | Romanian\n+| bg      | Bulgarian          | ig      | Igbo           | ru      | Russian\n+| bg-Latn | Bulgarian          | is      | Icelandic      | ru-Latn | Russian\n+| bn      | Bengali            | it      | Italian        | sd      | Sindhi\n+| bs      | Bosnian            | iw      | Hebrew         | si      | Sinhala\n+| ca      | Catalan            | ja      | Japanese       | sk      | Slovak\n+| ceb     | Cebuano            | ja-Latn | Japanese       | sl      | Slovenian\n+| co      | Corsican           | jv      | Javanese       | sm      | Samoan\n+| cs      | Czech              | ka      | Georgian       | sn      | Shona\n+| cy      | Welsh              | kk      | Kazakh         | so      | Somali\n+| da      | Danish             | km      | Central Khmer  | sq      | Albanian\n+| de      | German             | kn      | Kannada        | sr      | Serbian\n+| el      | Greek, modern      | ko      | Korean         | st      | Southern Sotho\n+| el-Latn | Greek, modern      | ku      | Kurdish        | su      | Sundanese\n+| en      | English            | ky      | Kirghiz        | sv      | Swedish\n+| eo      | Esperanto          | la      | Latin          | sw      | Swahili\n+| es      | Spanish, Castilian | lb      | Luxembourgish  | ta      | Tamil\n+| et      | Estonian           | lo      | Lao            | te      | Telugu\n+| eu      | Basque             | lt      | Lithuanian     | tg      | Tajik\n+| fa      | Persian            | lv      | Latvian        | th      | Thai\n+| fi      | Finnish            | mg      | Malagasy       | tr      | Turkish\n+| fil     | Filipino           | mi      | Maori          | uk      | Ukrainian\n+| fr      | French             | mk      | Macedonian     | ur      | Urdu\n+| fy      | Western Frisian    | ml      | Malayalam      | uz      | Uzbek\n+| ga      | Irish              | mn      | Mongolian      | vi      | Vietnamese\n+| gd      | Gaelic             | mr      | Marathi        | xh      | Xhosa\n+| gl      | Galician           | ms      | Malay          | yi      | Yiddish\n+| gu      | Gujarati           | mt      | Maltese        | yo      | Yoruba\n+| ha      | Hausa              | my      | Burmese        | zh      | Chinese\n+| haw     | Hawaiian           | ne      | Nepali         | zh-Latn | Chinese\n+| hi      | Hindi              | nl      | Dutch, Flemish | zu      | Zulu\n+| hi-Latn | Hindi              | no      | Norwegian      |         |   \n+| hmn     | Hmong              | ny      | Chichewa       |         |   \n+|===\n+\n+\n+[[ml-lang-ident-example]]\n+==== Example of {lang-ident}\n+\n+In the following example, we feed the {lang-ident} trained model a short \n+Hungarian text that contains diacritics and a couple of English words. Yet, the ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA5Mzg0OnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMTo0MlrOFiV7Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMTo0MlrOFiV7Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NTA5OQ==", "bodyText": "I think you can shorten this, for example:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <2> It defines the number of categories for which the predicted probabilities \n          \n          \n            \n            <2> Indicates that only the top five languages (that is to say, the ones with the highest probability) are returned.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371555099", "createdAt": "2020-01-28T00:21:42Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be identifying the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) in certain languages, but languages \n+that are similar to each other are harder to identify based on a short \n+character stream.\n+\n+{lang-ident-cap} takes into account Unicode boundaries when the feature set is \n+built. If the text has diacritical marks, then the model uses that information \n+for identifying the language of the text.  In certain cases, the model can \n+detect the source language even if it is not written in the script that the \n+language traditionally uses. These languages are marked in the supported \n+languages table (see below) with the `Latn` subtag. {lang-ident-cap} supports \n+Unicode input.\n+\n+\n+[[ml-lang-ident-supported-languages]]\n+==== Supported languages\n+\n+The table below contains the ISO codes and the English names of the languages \n+that {lang-ident} supports. If a language has a 2-letter `ISO 639-1` code, the \n+table contains that identifier. Otherwise, the 3-letter `ISO 639-2` code is \n+used. The \u2018Latn\u2019 subtag indicates that the language is transliterated into Latin \n+script.\n+\n+[cols=\"<,<,<,<,<,<\"]\n+|===\n+| Code    | Language           | Code    | Language       | Code    | Language\n+\n+| af      | Afrikaans          | hr      | Croatian       | pa      | Punjabi        \n+| am      | Amharic            | ht      | Haitian        | pl      | Polish        \n+| ar      | Arabic             | hu      | Hungarian      | ps      | Pashto        \n+| az      | Azerbaijani        | hy      | Armenian       | pt      | Portuguese\n+| be      | Belarusian         | id      | Indonesian     | ro      | Romanian\n+| bg      | Bulgarian          | ig      | Igbo           | ru      | Russian\n+| bg-Latn | Bulgarian          | is      | Icelandic      | ru-Latn | Russian\n+| bn      | Bengali            | it      | Italian        | sd      | Sindhi\n+| bs      | Bosnian            | iw      | Hebrew         | si      | Sinhala\n+| ca      | Catalan            | ja      | Japanese       | sk      | Slovak\n+| ceb     | Cebuano            | ja-Latn | Japanese       | sl      | Slovenian\n+| co      | Corsican           | jv      | Javanese       | sm      | Samoan\n+| cs      | Czech              | ka      | Georgian       | sn      | Shona\n+| cy      | Welsh              | kk      | Kazakh         | so      | Somali\n+| da      | Danish             | km      | Central Khmer  | sq      | Albanian\n+| de      | German             | kn      | Kannada        | sr      | Serbian\n+| el      | Greek, modern      | ko      | Korean         | st      | Southern Sotho\n+| el-Latn | Greek, modern      | ku      | Kurdish        | su      | Sundanese\n+| en      | English            | ky      | Kirghiz        | sv      | Swedish\n+| eo      | Esperanto          | la      | Latin          | sw      | Swahili\n+| es      | Spanish, Castilian | lb      | Luxembourgish  | ta      | Tamil\n+| et      | Estonian           | lo      | Lao            | te      | Telugu\n+| eu      | Basque             | lt      | Lithuanian     | tg      | Tajik\n+| fa      | Persian            | lv      | Latvian        | th      | Thai\n+| fi      | Finnish            | mg      | Malagasy       | tr      | Turkish\n+| fil     | Filipino           | mi      | Maori          | uk      | Ukrainian\n+| fr      | French             | mk      | Macedonian     | ur      | Urdu\n+| fy      | Western Frisian    | ml      | Malayalam      | uz      | Uzbek\n+| ga      | Irish              | mn      | Mongolian      | vi      | Vietnamese\n+| gd      | Gaelic             | mr      | Marathi        | xh      | Xhosa\n+| gl      | Galician           | ms      | Malay          | yi      | Yiddish\n+| gu      | Gujarati           | mt      | Maltese        | yo      | Yoruba\n+| ha      | Hausa              | my      | Burmese        | zh      | Chinese\n+| haw     | Hawaiian           | ne      | Nepali         | zh-Latn | Chinese\n+| hi      | Hindi              | nl      | Dutch, Flemish | zu      | Zulu\n+| hi-Latn | Hindi              | no      | Norwegian      |         |   \n+| hmn     | Hmong              | ny      | Chichewa       |         |   \n+|===\n+\n+\n+[[ml-lang-ident-example]]\n+==== Example of {lang-ident}\n+\n+In the following example, we feed the {lang-ident} trained model a short \n+Hungarian text that contains diacritics and a couple of English words. Yet, the \n+model identifies the text correctly as Hungarian with high probability.\n+\n+[source,js]\n+----------------------------------\n+POST _ingest/pipeline/_simulate\n+{\n+   \"pipeline\":{\n+      \"processors\":[\n+         {\n+            \"inference\":{\n+               \"model_id\":\"lang_ident_model_1\", <1>\n+               \"inference_config\":{\n+                  \"classification\":{\n+                     \"num_top_classes\":5 <2>\n+                  }\n+               },\n+               \"field_mappings\":{\n+\n+               }\n+            }\n+         }\n+      ]\n+   },\n+   \"docs\":[\n+      {\n+         \"_source\":{ <3>\n+            \"text\":\"Sziasztok! Ez egy r\u00f6vid magyar sz\u00f6veg. N\u00e9zz\u00fck, vajon siker\u00fcl-e azonos\u00edtania a language identification funkci\u00f3nak? Annak ellen\u00e9re is siker\u00fclni fog, hogy a sz\u00f6veg k\u00e9t angol sz\u00f3t is tartalmaz.\"\n+         }\n+      }\n+   ]\n+}\n+----------------------------------\n+//NOTCONSOLE\n+\n+<1> The ID of the {lang-ident} trained model.\n+<2> It defines the number of categories for which the predicted probabilities ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzEwMjEzOnYy", "diffSide": "RIGHT", "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyNjo1N1rOFiWARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyNjo1N1rOFiWARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NjQyMg==", "bodyText": "You might be able to shorten this, for example:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <1> An array of values specifying the probability of the prediction for the most \n          \n          \n            \n            <1> Contains probability scores for the top (most probable) inferred languages.\n          \n      \n    \n    \n  \n\nSince you already covered num_top_classes earlier, I don't think it's necessary to repeat it.", "url": "https://github.com/elastic/stack-docs/pull/816#discussion_r371556422", "createdAt": "2020-01-28T00:26:57Z", "author": {"login": "lcawl"}, "path": "docs/en/stack/ml/df-analytics/ml-lang-ident.asciidoc", "diffHunk": "@@ -0,0 +1,191 @@\n+[role=\"xpack\"]\n+[[ml-lang-ident]]\n+=== {lang-ident-cap}\n+\n+experimental[]\n+\n+{lang-ident-cap} `model_id`: `lang_ident_model_1`\n+\n+{lang-ident-cap} is an {infer} trained model that you can use to determine in \n+which language text is written. You can reference the {lang-ident} model in an \n+{ref}/inference-processor.html[{infer} processor] of an ingest pipeline by using \n+its `model_id`. The input field name is `text`. If you want to run {lang-ident} \n+on an field with a different name, then you have to map your field name to \n+`text` in the ingest processor settings.\n+\n+The longer the text passed into the {lang-ident} model, the more accurate the \n+model will be identifying the language. It is fairly accurate on shorter samples \n+(for example, 50 character-long streams) in certain languages, but languages \n+that are similar to each other are harder to identify based on a short \n+character stream.\n+\n+{lang-ident-cap} takes into account Unicode boundaries when the feature set is \n+built. If the text has diacritical marks, then the model uses that information \n+for identifying the language of the text.  In certain cases, the model can \n+detect the source language even if it is not written in the script that the \n+language traditionally uses. These languages are marked in the supported \n+languages table (see below) with the `Latn` subtag. {lang-ident-cap} supports \n+Unicode input.\n+\n+\n+[[ml-lang-ident-supported-languages]]\n+==== Supported languages\n+\n+The table below contains the ISO codes and the English names of the languages \n+that {lang-ident} supports. If a language has a 2-letter `ISO 639-1` code, the \n+table contains that identifier. Otherwise, the 3-letter `ISO 639-2` code is \n+used. The \u2018Latn\u2019 subtag indicates that the language is transliterated into Latin \n+script.\n+\n+[cols=\"<,<,<,<,<,<\"]\n+|===\n+| Code    | Language           | Code    | Language       | Code    | Language\n+\n+| af      | Afrikaans          | hr      | Croatian       | pa      | Punjabi        \n+| am      | Amharic            | ht      | Haitian        | pl      | Polish        \n+| ar      | Arabic             | hu      | Hungarian      | ps      | Pashto        \n+| az      | Azerbaijani        | hy      | Armenian       | pt      | Portuguese\n+| be      | Belarusian         | id      | Indonesian     | ro      | Romanian\n+| bg      | Bulgarian          | ig      | Igbo           | ru      | Russian\n+| bg-Latn | Bulgarian          | is      | Icelandic      | ru-Latn | Russian\n+| bn      | Bengali            | it      | Italian        | sd      | Sindhi\n+| bs      | Bosnian            | iw      | Hebrew         | si      | Sinhala\n+| ca      | Catalan            | ja      | Japanese       | sk      | Slovak\n+| ceb     | Cebuano            | ja-Latn | Japanese       | sl      | Slovenian\n+| co      | Corsican           | jv      | Javanese       | sm      | Samoan\n+| cs      | Czech              | ka      | Georgian       | sn      | Shona\n+| cy      | Welsh              | kk      | Kazakh         | so      | Somali\n+| da      | Danish             | km      | Central Khmer  | sq      | Albanian\n+| de      | German             | kn      | Kannada        | sr      | Serbian\n+| el      | Greek, modern      | ko      | Korean         | st      | Southern Sotho\n+| el-Latn | Greek, modern      | ku      | Kurdish        | su      | Sundanese\n+| en      | English            | ky      | Kirghiz        | sv      | Swedish\n+| eo      | Esperanto          | la      | Latin          | sw      | Swahili\n+| es      | Spanish, Castilian | lb      | Luxembourgish  | ta      | Tamil\n+| et      | Estonian           | lo      | Lao            | te      | Telugu\n+| eu      | Basque             | lt      | Lithuanian     | tg      | Tajik\n+| fa      | Persian            | lv      | Latvian        | th      | Thai\n+| fi      | Finnish            | mg      | Malagasy       | tr      | Turkish\n+| fil     | Filipino           | mi      | Maori          | uk      | Ukrainian\n+| fr      | French             | mk      | Macedonian     | ur      | Urdu\n+| fy      | Western Frisian    | ml      | Malayalam      | uz      | Uzbek\n+| ga      | Irish              | mn      | Mongolian      | vi      | Vietnamese\n+| gd      | Gaelic             | mr      | Marathi        | xh      | Xhosa\n+| gl      | Galician           | ms      | Malay          | yi      | Yiddish\n+| gu      | Gujarati           | mt      | Maltese        | yo      | Yoruba\n+| ha      | Hausa              | my      | Burmese        | zh      | Chinese\n+| haw     | Hawaiian           | ne      | Nepali         | zh-Latn | Chinese\n+| hi      | Hindi              | nl      | Dutch, Flemish | zu      | Zulu\n+| hi-Latn | Hindi              | no      | Norwegian      |         |   \n+| hmn     | Hmong              | ny      | Chichewa       |         |   \n+|===\n+\n+\n+[[ml-lang-ident-example]]\n+==== Example of {lang-ident}\n+\n+In the following example, we feed the {lang-ident} trained model a short \n+Hungarian text that contains diacritics and a couple of English words. Yet, the \n+model identifies the text correctly as Hungarian with high probability.\n+\n+[source,js]\n+----------------------------------\n+POST _ingest/pipeline/_simulate\n+{\n+   \"pipeline\":{\n+      \"processors\":[\n+         {\n+            \"inference\":{\n+               \"model_id\":\"lang_ident_model_1\", <1>\n+               \"inference_config\":{\n+                  \"classification\":{\n+                     \"num_top_classes\":5 <2>\n+                  }\n+               },\n+               \"field_mappings\":{\n+\n+               }\n+            }\n+         }\n+      ]\n+   },\n+   \"docs\":[\n+      {\n+         \"_source\":{ <3>\n+            \"text\":\"Sziasztok! Ez egy r\u00f6vid magyar sz\u00f6veg. N\u00e9zz\u00fck, vajon siker\u00fcl-e azonos\u00edtania a language identification funkci\u00f3nak? Annak ellen\u00e9re is siker\u00fclni fog, hogy a sz\u00f6veg k\u00e9t angol sz\u00f3t is tartalmaz.\"\n+         }\n+      }\n+   ]\n+}\n+----------------------------------\n+//NOTCONSOLE\n+\n+<1> The ID of the {lang-ident} trained model.\n+<2> It defines the number of categories for which the predicted probabilities \n+are reported. In this example, 5 classes (in this case, languages) with the \n+highest probability will be reported.\n+<3> The source object that contains the text to identify.\n+\n+\n+The request returns the following response:\n+\n+[source,js]\n+----------------------------------\n+{\n+  \"docs\" : [\n+    {\n+      \"doc\" : {\n+        \"_index\" : \"_index\",\n+        \"_type\" : \"_doc\",\n+        \"_id\" : \"_id\",\n+        \"_source\" : {\n+          \"text\" : \"Sziasztok! Ez egy r\u00f6vid magyar sz\u00f6veg. N\u00e9zz\u00fck, vajon siker\u00fcl-e azonos\u00edtania a language identification funkci\u00f3nak? Annak ellen\u00e9re is siker\u00fclni fog, hogy a sz\u00f6veg k\u00e9t angol sz\u00f3t is tartalmaz.\",\n+          \"ml\" : {\n+            \"inference\" : {\n+              \"top_classes\" : [ <1>\n+                {\n+                  \"class_name\" : \"hu\",\n+                  \"class_probability\" : 0.9999936063740517,\n+                  \"class_score\" : 0.9999936063740517\n+                },\n+                {\n+                  \"class_name\" : \"lv\",\n+                  \"class_probability\" : 2.5020248433413966E-6,\n+                  \"class_score\" : 2.5020248433413966E-6\n+                },\n+                {\n+                  \"class_name\" : \"is\",\n+                  \"class_probability\" : 1.0150420723037688E-6,\n+                  \"class_score\" : 1.0150420723037688E-6\n+                },\n+                {\n+                  \"class_name\" : \"ga\",\n+                  \"class_probability\" : 6.67935962773335E-7,\n+                  \"class_score\" : 6.67935962773335E-7\n+                },\n+                {\n+                  \"class_name\" : \"tr\",\n+                  \"class_probability\" : 5.591166324774555E-7,\n+                  \"class_score\" : 5.591166324774555E-7\n+                }\n+              ],\n+              \"predicted_value\" : \"hu\", <2>\n+              \"model_id\" : \"lang_ident_model_1\"\n+            }\n+          }\n+        },\n+        \"_ingest\" : {\n+          \"timestamp\" : \"2020-01-22T14:25:14.644912Z\"\n+        }\n+      }\n+    }\n+  ]\n+}\n+----------------------------------\n+//NOTCONSOLE\n+\n+<1> An array of values specifying the probability of the prediction for the most ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d089d2f558cb208a7ae718ac81813e310e2684"}, "originalPosition": 187}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1299, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}