{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDg5Njc3", "number": 1102, "title": "Add support to empty prefix value in XML messages", "bodyText": "", "createdAt": "2020-11-07T05:22:01Z", "url": "https://github.com/minio/minio-java/pull/1102", "merged": true, "mergeCommit": {"oid": "3136c71057015b144258baaf14310faf722c13ac"}, "closed": true, "closedAt": "2020-11-24T16:55:23Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaEjkMAH2gAyNTE3MDg5Njc3OjQyZTY3MDdiN2NjNjZkN2FiZTUzOTZhNGYxOWZlYjFkZDYzMmExYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfsBFtAFqTUzNzY3MDgwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42e6707b7cc66d7abe5396a4f19feb1dd632a1a5", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/42e6707b7cc66d7abe5396a4f19feb1dd632a1a5", "committedDate": "2020-11-07T05:17:44Z", "message": "Add support to empty prefix value in XML messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDA5Mzk5", "url": "https://github.com/minio/minio-java/pull/1102#pullrequestreview-537409399", "createdAt": "2020-11-24T11:43:39Z", "commit": {"oid": "42e6707b7cc66d7abe5396a4f19feb1dd632a1a5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0MzozOVrOH49EhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0OTo1NVrOH49SZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4Mjg4NA==", "bodyText": "Since the logic is not very specific to prefix as such and can be useful wherever such a functionality is required (de-serialize empty tag to empty string), maybe the name of this class can be something more generic? Say StringConverter ?", "url": "https://github.com/minio/minio-java/pull/1102#discussion_r529482884", "createdAt": "2020-11-24T11:43:39Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/PrefixConverter.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.convert.Converter;\n+import org.simpleframework.xml.stream.InputNode;\n+import org.simpleframework.xml.stream.OutputNode;\n+\n+/**\n+ * XML converter class for prefix due to SimpleXML limitation in converting empty tag\n+ * <Prefix></Prefix> to empty string.\n+ */\n+public class PrefixConverter implements Converter<String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42e6707b7cc66d7abe5396a4f19feb1dd632a1a5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4NjQzOQ==", "bodyText": "Since the exact same code is being used at multiple places to create this lifecycle rule, maybe it can be defined as a method or a static final class level variable?", "url": "https://github.com/minio/minio-java/pull/1102#discussion_r529486439", "createdAt": "2020-11-24T11:49:55Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2799,7 +2789,17 @@ public static void setBucketLifecycle() throws Exception {\n     try {\n       client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n       try {\n-        testSetBucketLifecycle(bucketName);\n+        testSetBucketLifecycle(\n+            bucketName,\n+            new LifecycleRule(\n+                Status.ENABLED,\n+                null,\n+                new Expiration((ZonedDateTime) null, 365, null),\n+                new RuleFilter(\"logs/\"),\n+                \"rule2\",\n+                null,\n+                null,\n+                null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42e6707b7cc66d7abe5396a4f19feb1dd632a1a5"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NjcwODAw", "url": "https://github.com/minio/minio-java/pull/1102#pullrequestreview-537670800", "createdAt": "2020-11-24T16:05:54Z", "commit": {"oid": "42e6707b7cc66d7abe5396a4f19feb1dd632a1a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1812, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}