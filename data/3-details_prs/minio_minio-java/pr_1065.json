{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1OTUwMjk5", "number": 1065, "title": "Add object representation of LifecycleConfiguration with API rename.", "bodyText": "", "createdAt": "2020-10-01T04:52:54Z", "url": "https://github.com/minio/minio-java/pull/1065", "merged": true, "mergeCommit": {"oid": "083a427df0882e423fdeccb146213ca36797ba29"}, "closed": true, "closedAt": "2020-11-04T15:21:03Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOKHXKABqjM4Mjc0OTA2MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZO-IygFqTUyMzQzNTM5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afa869bd6447d7b1b269e811126ac4b1e32c1b52", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/afa869bd6447d7b1b269e811126ac4b1e32c1b52", "committedDate": "2020-10-01T04:51:25Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "c00cfe98cd82abf1029381c97295e061c0c27113", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c00cfe98cd82abf1029381c97295e061c0c27113", "committedDate": "2020-10-01T04:58:56Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c00cfe98cd82abf1029381c97295e061c0c27113", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c00cfe98cd82abf1029381c97295e061c0c27113", "committedDate": "2020-10-01T04:58:56Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "15c2557366ddb4a5f95402cf788e61fab7e648e1", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/15c2557366ddb4a5f95402cf788e61fab7e648e1", "committedDate": "2020-10-12T07:53:54Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15c2557366ddb4a5f95402cf788e61fab7e648e1", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/15c2557366ddb4a5f95402cf788e61fab7e648e1", "committedDate": "2020-10-12T07:53:54Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "f575f614244ba10f27c04ef612d6c99088bdd73a", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/f575f614244ba10f27c04ef612d6c99088bdd73a", "committedDate": "2020-10-12T09:19:18Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f575f614244ba10f27c04ef612d6c99088bdd73a", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/f575f614244ba10f27c04ef612d6c99088bdd73a", "committedDate": "2020-10-12T09:19:18Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "39905e44756f6aaab60b59297a7ff27276f86a45", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/39905e44756f6aaab60b59297a7ff27276f86a45", "committedDate": "2020-10-19T14:34:55Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39905e44756f6aaab60b59297a7ff27276f86a45", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/39905e44756f6aaab60b59297a7ff27276f86a45", "committedDate": "2020-10-19T14:34:55Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "d36ca99e16dee5136d9df7daaa7209b664d16c8d", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d36ca99e16dee5136d9df7daaa7209b664d16c8d", "committedDate": "2020-10-19T14:40:50Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjMxOTYx", "url": "https://github.com/minio/minio-java/pull/1065#pullrequestreview-511631961", "createdAt": "2020-10-19T10:42:47Z", "commit": {"oid": "f575f614244ba10f27c04ef612d6c99088bdd73a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0Mjo0N1rOHkIWiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyMDo0OVrOHk1QUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY0NzYyNA==", "bodyText": "This sentence still doesn't make much sense. Does the \"and\" need to be removed?", "url": "https://github.com/minio/minio-java/pull/1065#discussion_r507647624", "createdAt": "2020-10-19T10:42:47Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/AndOperator.java", "diffHunk": "@@ -23,7 +23,7 @@\n import org.simpleframework.xml.ElementMap;\n import org.simpleframework.xml.Root;\n \n-/** Helper class to and operator information for {@link ReplicationRuleFilter}. */\n+/** Helper class to denote and operator information for {@link RuleFilter}. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f575f614244ba10f27c04ef612d6c99088bdd73a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTUzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /** Helper class to {@link Transition} and {@link Expiration}. */\n          \n          \n            \n            /** Base class for {@link Transition} and {@link Expiration}. */", "url": "https://github.com/minio/minio-java/pull/1065#discussion_r507655533", "createdAt": "2020-10-19T10:57:04Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/DateDays.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import java.time.ZonedDateTime;\n+import org.simpleframework.xml.Element;\n+\n+/** Helper class to {@link Transition} and {@link Expiration}. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f575f614244ba10f27c04ef612d6c99088bdd73a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MDUzMg==", "bodyText": "Instead of a constructor like this, it might be better to introduce a builder-like mechanism to build the rule. e.g. instead of\nnew LifecycleRule(\n  Status.ENABLED,\n  null,\n  new Expiration((ZonedDateTime) null, 365, null),\n  new RuleFilter(\"logs/\"),\n  \"rule2\",\n  null,\n  null,\n  null));\n\nSomething like this:\nLifecycleRule.builder().\n  id(\"rule2\").\n  status(Status.ENABLED).\n  ruleFilter(\"logs/\").\n  expiration(new Expiration((ZonedDateTime) null, 365, null)).\n  build()", "url": "https://github.com/minio/minio-java/pull/1065#discussion_r508380532", "createdAt": "2020-10-20T10:16:00Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/LifecycleRule.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import java.util.Objects;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Root;\n+\n+/** Helper class to denote Rule information for {@link LifecycleConfiguration}. */\n+@Root(name = \"Rule\")\n+public class LifecycleRule {\n+  @Element(name = \"AbortIncompleteMultipartUpload\", required = false)\n+  private AbortIncompleteMultipartUpload abortIncompleteMultipartUpload;\n+\n+  @Element(name = \"Expiration\", required = false)\n+  private Expiration expiration;\n+\n+  @Element(name = \"Filter\", required = false)\n+  private RuleFilter filter;\n+\n+  @Element(name = \"ID\", required = false)\n+  private String id;\n+\n+  @Element(name = \"NoncurrentVersionExpiration\", required = false)\n+  private NoncurrentVersionExpiration noncurrentVersionExpiration;\n+\n+  @Element(name = \"NoncurrentVersionTransition\", required = false)\n+  private NoncurrentVersionTransition noncurrentVersionTransition;\n+\n+  @Element(name = \"Status\")\n+  private Status status;\n+\n+  @Element(name = \"Transition\", required = false)\n+  private Transition transition;\n+\n+  /** Constructs new server-side encryption configuration rule. */\n+  public LifecycleRule(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36ca99e16dee5136d9df7daaa7209b664d16c8d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MzMxNQ==", "bodyText": "Maybe we should call getBucketLifecycle also and verify that what was set is same as config passed in setBucketLifecycle", "url": "https://github.com/minio/minio-java/pull/1065#discussion_r508383315", "createdAt": "2020-10-20T10:20:49Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2742,17 +2745,25 @@ public static void deleteBucketPolicy() throws Exception {\n     }\n   }\n \n-  public static void testSetBucketLifeCycle(String bucketName) throws Exception {\n-    String lifeCycle =\n-        \"<LifecycleConfiguration><Rule><ID>expire-bucket</ID><Prefix></Prefix>\"\n-            + \"<Status>Enabled</Status><Expiration><Days>365</Days></Expiration>\"\n-            + \"</Rule></LifecycleConfiguration>\";\n-    client.setBucketLifeCycle(\n-        SetBucketLifeCycleArgs.builder().bucket(bucketName).config(lifeCycle).build());\n+  public static void testSetBucketLifecycle(String bucketName) throws Exception {\n+    List<LifecycleRule> rules = new LinkedList<>();\n+    rules.add(\n+        new LifecycleRule(\n+            Status.ENABLED,\n+            null,\n+            new Expiration((ZonedDateTime) null, 365, null),\n+            new RuleFilter(\"logs/\"),\n+            \"rule2\",\n+            null,\n+            null,\n+            null));\n+    LifecycleConfiguration config = new LifecycleConfiguration(rules);\n+    client.setBucketLifecycle(\n+        SetBucketLifecycleArgs.builder().bucket(bucketName).config(config).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36ca99e16dee5136d9df7daaa7209b664d16c8d"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe93b7f76164e29bec5a82dd4d34f9f2b329c32", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/bfe93b7f76164e29bec5a82dd4d34f9f2b329c32", "committedDate": "2020-10-20T10:26:06Z", "message": "Add object representation of LifecycleConfiguration with API rename."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/579a13251d3e340c6877fa5a001645f1dfd5105e", "committedDate": "2020-10-20T14:28:18Z", "message": "address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d36ca99e16dee5136d9df7daaa7209b664d16c8d", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d36ca99e16dee5136d9df7daaa7209b664d16c8d", "committedDate": "2020-10-19T14:40:50Z", "message": "Add object representation of LifecycleConfiguration with API rename."}, "afterCommit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/579a13251d3e340c6877fa5a001645f1dfd5105e", "committedDate": "2020-10-20T14:28:18Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNzQ3ODY5", "url": "https://github.com/minio/minio-java/pull/1065#pullrequestreview-513747869", "createdAt": "2020-10-21T14:25:33Z", "commit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Nzg4NDM2", "url": "https://github.com/minio/minio-java/pull/1065#pullrequestreview-514788436", "createdAt": "2020-10-22T14:26:58Z", "commit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDoyNjo1OFrOHmkjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNDoyNjo1OFrOHmkjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIwNjc3OQ==", "bodyText": "It might be better to introduce an equals method on the LifecycleConfiguration class and use that to confirm that the config that is received on getting the lifecycle is equal to the config that was passed when setting it.", "url": "https://github.com/minio/minio-java/pull/1065#discussion_r510206779", "createdAt": "2020-10-22T14:26:58Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2846,9 +2846,43 @@ public static void getBucketLifecycle() throws Exception {\n     try {\n       client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n       try {\n-        client.getBucketLifecycle(GetBucketLifecycleArgs.builder().bucket(bucketName).build());\n+        LifecycleConfiguration config =\n+            client.getBucketLifecycle(GetBucketLifecycleArgs.builder().bucket(bucketName).build());\n+        if (config != null) {\n+          throw new Exception(\"config: expected: <null>, got: <non-null>\");\n+        }\n         testSetBucketLifecycle(bucketName);\n-        client.getBucketLifecycle(GetBucketLifecycleArgs.builder().bucket(bucketName).build());\n+        config =\n+            client.getBucketLifecycle(GetBucketLifecycleArgs.builder().bucket(bucketName).build());\n+        if (config == null) {\n+          throw new Exception(\"config: expected: <non-null>, got: <null>\");\n+        }\n+        List<LifecycleRule> rules = config.rules();\n+        if (config.rules().size() != 1) {\n+          throw new Exception(\"config.rules().size(): expected: 1, got: \" + config.rules().size());\n+        }\n+        LifecycleRule rule = rules.get(0);\n+        if (rule.status() != Status.ENABLED) {\n+          throw new Exception(\n+              \"rule.status(): expected: \" + Status.ENABLED + \", got: \" + rule.status());\n+        }\n+        if (rule.expiration() == null) {\n+          throw new Exception(\"rule.expiration(): expected: <non-null>, got: <null>\");\n+        }\n+        if (rule.expiration().days() != 365) {\n+          throw new Exception(\n+              \"rule.expiration().days(): expected: 365, got: \" + rule.expiration().days());\n+        }\n+        if (rule.filter() == null) {\n+          throw new Exception(\"rule.filter(): expected: <non-null>, got: <null>\");\n+        }\n+        if (!\"logs/\".equals(rule.filter().prefix())) {\n+          throw new Exception(\n+              \"rule.filter().prefix(): expected: logs/, got: \" + rule.filter().prefix());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDM1Mzk5", "url": "https://github.com/minio/minio-java/pull/1065#pullrequestreview-523435399", "createdAt": "2020-11-04T14:51:53Z", "commit": {"oid": "579a13251d3e340c6877fa5a001645f1dfd5105e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1802, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}