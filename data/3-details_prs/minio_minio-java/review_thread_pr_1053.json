{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzE3NDE5", "number": 1053, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTo0NVrOEj6PWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMTo1OFrOEj6nHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDg5ODE3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/SetBucketVersioningArgs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTo0NVrOHSiT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODozNjo0OFrOHSmPlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODU5MA==", "bodyText": "Should we also have a validate() method inside VersioningConfiguration and call it from here? The status field validation can be done in it.", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489198590", "createdAt": "2020-09-16T06:41:45Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/SetBucketVersioningArgs.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.messages.VersioningConfiguration;\n+\n+/** Argument class of MinioClient.setBucketVersioning(). */\n+public class SetBucketVersioningArgs extends BucketArgs {\n+  private VersioningConfiguration config;\n+\n+  public VersioningConfiguration config() {\n+    return config;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link SetBucketVersioningArgs}. */\n+  public static final class Builder extends BucketArgs.Builder<Builder, SetBucketVersioningArgs> {\n+    private void validateConfig(VersioningConfiguration config) {\n+      validateNotNull(config, \"versioning configuration\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2Mjk5Ng==", "bodyText": "VersioningConfiguration has the check in the constructor. I do not think we need to validate status field here because of it.", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489262996", "createdAt": "2020-09-16T08:36:48Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/SetBucketVersioningArgs.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.messages.VersioningConfiguration;\n+\n+/** Argument class of MinioClient.setBucketVersioning(). */\n+public class SetBucketVersioningArgs extends BucketArgs {\n+  private VersioningConfiguration config;\n+\n+  public VersioningConfiguration config() {\n+    return config;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link SetBucketVersioningArgs}. */\n+  public static final class Builder extends BucketArgs.Builder<Builder, SetBucketVersioningArgs> {\n+    private void validateConfig(VersioningConfiguration config) {\n+      validateNotNull(config, \"versioning configuration\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODU5MA=="}, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDkxOTU5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0OToxMVrOHSihRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODozOTo1NVrOHSmZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTk5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n          \n          \n            \n                return flag;\n          \n          \n            \n                return Boolean.valueOf(\"Enabled\".equals(mfaDelete));", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489201990", "createdAt": "2020-09-16T06:49:11Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -33,19 +36,58 @@\n   @Element(name = \"Status\", required = false)\n   private String status;\n \n+  @Element(name = \"MFADelete\", required = false)\n+  private String mfaDelete;\n+\n   public VersioningConfiguration() {}\n \n   /** Constructs a new VersioningConfiguration object with given status. */\n-  public VersioningConfiguration(boolean status) {\n-    if (status) {\n-      this.status = \"Enabled\";\n-    } else {\n-      this.status = \"Suspended\";\n+  public VersioningConfiguration(@Nonnull Status status, @Nullable Boolean mfaDelete) {\n+    Objects.requireNonNull(status, \"Status must not be null\");\n+    if (status == Status.OFF) {\n+      throw new IllegalArgumentException(\"Status must be ENABLED or SUSPENDED\");\n+    }\n+    this.status = status.toString();\n+\n+    if (mfaDelete != null) {\n+      this.mfaDelete = mfaDelete ? \"Enabled\" : \"Disabled\";\n     }\n   }\n \n-  /** Indicates whether the bucket is version enabled or not. */\n-  public boolean status() {\n-    return (\"Enabled\").equals(status);\n+  public Status status() {\n+    return Status.fromString(status);\n+  }\n+\n+  public Boolean isMfaDeleteEnabled() {\n+    Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n+    return flag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2NTU3NA==", "bodyText": "No. We need to return three possible values. None, Boolean.FALSE or Boolean.TRUE.", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489265574", "createdAt": "2020-09-16T08:39:55Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -33,19 +36,58 @@\n   @Element(name = \"Status\", required = false)\n   private String status;\n \n+  @Element(name = \"MFADelete\", required = false)\n+  private String mfaDelete;\n+\n   public VersioningConfiguration() {}\n \n   /** Constructs a new VersioningConfiguration object with given status. */\n-  public VersioningConfiguration(boolean status) {\n-    if (status) {\n-      this.status = \"Enabled\";\n-    } else {\n-      this.status = \"Suspended\";\n+  public VersioningConfiguration(@Nonnull Status status, @Nullable Boolean mfaDelete) {\n+    Objects.requireNonNull(status, \"Status must not be null\");\n+    if (status == Status.OFF) {\n+      throw new IllegalArgumentException(\"Status must be ENABLED or SUSPENDED\");\n+    }\n+    this.status = status.toString();\n+\n+    if (mfaDelete != null) {\n+      this.mfaDelete = mfaDelete ? \"Enabled\" : \"Disabled\";\n     }\n   }\n \n-  /** Indicates whether the bucket is version enabled or not. */\n-  public boolean status() {\n-    return (\"Enabled\").equals(status);\n+  public Status status() {\n+    return Status.fromString(status);\n+  }\n+\n+  public Boolean isMfaDeleteEnabled() {\n+    Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n+    return flag;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTk5MA=="}, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDk1OTAwOnYy", "diffSide": "RIGHT", "path": "examples/GetBucketVersioning.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMTo1OFrOHSi5HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo0NTo1NFrOHSmo-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODA5Mw==", "bodyText": "Can we use switch statement here?\nOr maybe we can just use the toString() method and make this a single statement.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (config.status() == VersioningConfiguration.Status.OFF) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n          \n          \n            \n                  }\n          \n          \n            \n                 String statusStr = config.status().toString();\n          \n          \n            \n                 System.out.println(\"Versioning on bucket 'my-bucketname' is \" + statusStr.isEmpty ? \"Off\" : statusStr);", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489208093", "createdAt": "2020-09-16T07:01:58Z", "author": {"login": "anjalshireesh"}, "path": "examples/GetBucketVersioning.java", "diffHunk": "@@ -40,12 +41,16 @@ public static void main(String[] args)\n       //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n       //         .build();\n \n-      // Disable versioning on 'my-bucketname'.\n-      minioClient.disableVersioning(\n-          DisableVersioningArgs.builder().bucket(\"my-bucketname\").build());\n-\n-      System.out.println(\"Bucket versioning is disabled successfully\");\n-\n+      VersioningConfiguration config =\n+          minioClient.getBucketVersioning(\n+              GetBucketVersioningArgs.builder().bucket(\"my-bucketname\").build());\n+      if (config.status() == VersioningConfiguration.Status.OFF) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2OTQ5OQ==", "bodyText": "Simplified to just print the status.", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489269499", "createdAt": "2020-09-16T08:45:54Z", "author": {"login": "balamurugana"}, "path": "examples/GetBucketVersioning.java", "diffHunk": "@@ -40,12 +41,16 @@ public static void main(String[] args)\n       //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n       //         .build();\n \n-      // Disable versioning on 'my-bucketname'.\n-      minioClient.disableVersioning(\n-          DisableVersioningArgs.builder().bucket(\"my-bucketname\").build());\n-\n-      System.out.println(\"Bucket versioning is disabled successfully\");\n-\n+      VersioningConfiguration config =\n+          minioClient.getBucketVersioning(\n+              GetBucketVersioningArgs.builder().bucket(\"my-bucketname\").build());\n+      if (config.status() == VersioningConfiguration.Status.OFF) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODA5Mw=="}, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}