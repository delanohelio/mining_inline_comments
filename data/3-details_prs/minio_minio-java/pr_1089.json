{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzM1MDI4", "number": 1089, "title": "Refactor MinioProperties class and fix os name in user-agent", "bodyText": "Take the os name from system properties\nTry to find the correct MANIFEST and load the version info (when the jar is used with multiple libraries)", "createdAt": "2020-10-28T07:11:36Z", "url": "https://github.com/minio/minio-java/pull/1089", "merged": true, "mergeCommit": {"oid": "727fb782a864a8236ef65d61e355d17eb79826c4"}, "closed": true, "closedAt": "2020-11-04T05:42:20Z", "author": {"login": "vinu"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW4HSogH2gAyNTExMzM1MDI4OmZjYmM0MmY4YTQ4ODQ0YzQ1ZjE1MDNjNTg2ZTg0ODZlNDI2N2UyZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZHGw-AFqTUyMzA1NjUxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fcbc42f8a48844c45f1503c586e8486e4267e2d2", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/fcbc42f8a48844c45f1503c586e8486e4267e2d2", "committedDate": "2020-10-28T07:06:13Z", "message": "Use os name system property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdce56bd059f0d60f4176f6153f683d41c7e90d8", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/cdce56bd059f0d60f4176f6153f683d41c7e90d8", "committedDate": "2020-10-28T07:06:26Z", "message": "Try to find the correct manifest and load the version info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "658af0b3e59e7d2c12879e126e5d2394f298ee4a", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/658af0b3e59e7d2c12879e126e5d2394f298ee4a", "committedDate": "2020-10-28T07:20:06Z", "message": "Fix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Mzk0MDMx", "url": "https://github.com/minio/minio-java/pull/1089#pullrequestreview-518394031", "createdAt": "2020-10-28T07:50:28Z", "commit": {"oid": "658af0b3e59e7d2c12879e126e5d2394f298ee4a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzo1MDoyOFrOHpdjDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzo1NDo1N1rOHpdr0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIzNzc3NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513237774", "createdAt": "2020-10-28T07:50:28Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -194,7 +194,7 @@\n   private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n   private static final String DEFAULT_USER_AGENT =\n       \"MinIO (\"\n-          + System.getProperty(\"os.arch\")\n+          + System.getProperty(\"os.name\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "658af0b3e59e7d2c12879e126e5d2394f298ee4a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0MDAxNw==", "bodyText": "Why do we need this? or what exactly the problem in current approach?", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513240017", "createdAt": "2020-10-28T07:54:57Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -62,14 +70,27 @@ private void setDevelopmentVersion() {\n   private void setMinioClientJavaVersion(ClassLoader classLoader) throws IOException {\n     if (classLoader != null) {\n       Enumeration<URL> resources = classLoader.getResources(\"META-INF/MANIFEST.MF\");\n+      boolean minioManifestFound = false;\n+      boolean minioVersionFound = false;\n       while (resources.hasMoreElements()) {\n-        Manifest manifest = new Manifest(resources.nextElement().openStream());\n-        for (Object k : manifest.getMainAttributes().keySet()) {\n-          String versionString = \"Implementation-Version\";\n-          if (k.toString().equals(versionString)) {\n-            version.set(manifest.getMainAttributes().getValue((Attributes.Name) k));\n+        try (InputStream is = resources.nextElement().openStream()) {\n+          Manifest manifest = new Manifest(is);\n+          for (Map.Entry<Object, Object> entry : manifest.getMainAttributes().entrySet()) {\n+            if (entry.getKey().toString().equals(META_INF_ATTRIB_IMPLEMENTATION_TITLE)\n+                && entry.getValue().toString().equals(META_INF_ATTRIB_IMPLEMENTATION_TITLE_VALUE)) {\n+              minioManifestFound = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "658af0b3e59e7d2c12879e126e5d2394f298ee4a"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/620252cf5fac24f8422fe2634860e786394f613d", "committedDate": "2020-10-28T09:28:34Z", "message": "Clean the code a bit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NDc2MzA1", "url": "https://github.com/minio/minio-java/pull/1089#pullrequestreview-518476305", "createdAt": "2020-10-28T09:39:30Z", "commit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTozOTozMVrOHphdpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOTo0NToxNlrOHphsvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwMTkyNg==", "bodyText": "Use these values directly than having constants.", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513301926", "createdAt": "2020-10-28T09:39:31Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -31,46 +32,57 @@\n \n   private static final Logger LOGGER = Logger.getLogger(MinioProperties.class.getName());\n \n+  // These attributes are checked from the manifests in classpath.\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE = \"Implementation-Title\";\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_VERSION = \"Implementation-Version\";\n+\n+  // this is set from gradle\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE_VALUE = \"minio\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwMjk1MQ==", "bodyText": "Do no-op if version is already set in another thread.\nif (version.get() != null) {\n   return;\n}", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513302951", "createdAt": "2020-10-28T09:41:00Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -31,46 +32,57 @@\n \n   private static final Logger LOGGER = Logger.getLogger(MinioProperties.class.getName());\n \n+  // These attributes are checked from the manifests in classpath.\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE = \"Implementation-Title\";\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_VERSION = \"Implementation-Version\";\n+\n+  // this is set from gradle\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE_VALUE = \"minio\";\n+\n   private final AtomicReference<String> version = new AtomicReference<>(null);\n \n   public String getVersion() {\n     String result = version.get();\n-    if (result == null) {\n-      synchronized (INSTANCE) {\n-        if (version.get() == null) {\n-          try {\n-            ClassLoader classLoader = getClass().getClassLoader();\n-            setMinioClientJavaVersion(classLoader);\n-            setDevelopmentVersion();\n-          } catch (IOException e) {\n-            LOGGER.log(Level.SEVERE, \"IOException occured\", e);\n-            version.set(\"unknown\");\n-          }\n-          result = version.get();\n-        }\n-      }\n+    if (result != null) {\n+      return result;\n     }\n-    return result;\n+    setVersion();\n+    return version.get();\n   }\n \n-  private void setDevelopmentVersion() {\n-    if (version.get() == null) {\n+  private synchronized void setVersion() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwMzc4Mg==", "bodyText": "Set dev as default value i.e. move above this line and remove setting it later.", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513303782", "createdAt": "2020-10-28T09:42:13Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -31,46 +32,57 @@\n \n   private static final Logger LOGGER = Logger.getLogger(MinioProperties.class.getName());\n \n+  // These attributes are checked from the manifests in classpath.\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE = \"Implementation-Title\";\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_VERSION = \"Implementation-Version\";\n+\n+  // this is set from gradle\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE_VALUE = \"minio\";\n+\n   private final AtomicReference<String> version = new AtomicReference<>(null);\n \n   public String getVersion() {\n     String result = version.get();\n-    if (result == null) {\n-      synchronized (INSTANCE) {\n-        if (version.get() == null) {\n-          try {\n-            ClassLoader classLoader = getClass().getClassLoader();\n-            setMinioClientJavaVersion(classLoader);\n-            setDevelopmentVersion();\n-          } catch (IOException e) {\n-            LOGGER.log(Level.SEVERE, \"IOException occured\", e);\n-            version.set(\"unknown\");\n-          }\n-          result = version.get();\n-        }\n-      }\n+    if (result != null) {\n+      return result;\n     }\n-    return result;\n+    setVersion();\n+    return version.get();\n   }\n \n-  private void setDevelopmentVersion() {\n-    if (version.get() == null) {\n+  private synchronized void setVersion() {\n+    ClassLoader classLoader = getClass().getClassLoader();\n+    if (classLoader == null) {\n       version.set(\"dev\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMwNTc5MA==", "bodyText": "This is not going to work. You are resetting the value on every iteration.", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513305790", "createdAt": "2020-10-28T09:45:16Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -31,46 +32,57 @@\n \n   private static final Logger LOGGER = Logger.getLogger(MinioProperties.class.getName());\n \n+  // These attributes are checked from the manifests in classpath.\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE = \"Implementation-Title\";\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_VERSION = \"Implementation-Version\";\n+\n+  // this is set from gradle\n+  private static final String META_INF_ATTRIB_IMPLEMENTATION_TITLE_VALUE = \"minio\";\n+\n   private final AtomicReference<String> version = new AtomicReference<>(null);\n \n   public String getVersion() {\n     String result = version.get();\n-    if (result == null) {\n-      synchronized (INSTANCE) {\n-        if (version.get() == null) {\n-          try {\n-            ClassLoader classLoader = getClass().getClassLoader();\n-            setMinioClientJavaVersion(classLoader);\n-            setDevelopmentVersion();\n-          } catch (IOException e) {\n-            LOGGER.log(Level.SEVERE, \"IOException occured\", e);\n-            version.set(\"unknown\");\n-          }\n-          result = version.get();\n-        }\n-      }\n+    if (result != null) {\n+      return result;\n     }\n-    return result;\n+    setVersion();\n+    return version.get();\n   }\n \n-  private void setDevelopmentVersion() {\n-    if (version.get() == null) {\n+  private synchronized void setVersion() {\n+    ClassLoader classLoader = getClass().getClassLoader();\n+    if (classLoader == null) {\n       version.set(\"dev\");\n+      return;\n     }\n-  }\n \n-  private void setMinioClientJavaVersion(ClassLoader classLoader) throws IOException {\n-    if (classLoader != null) {\n+    try {\n       Enumeration<URL> resources = classLoader.getResources(\"META-INF/MANIFEST.MF\");\n       while (resources.hasMoreElements()) {\n-        Manifest manifest = new Manifest(resources.nextElement().openStream());\n-        for (Object k : manifest.getMainAttributes().keySet()) {\n-          String versionString = \"Implementation-Version\";\n-          if (k.toString().equals(versionString)) {\n-            version.set(manifest.getMainAttributes().getValue((Attributes.Name) k));\n+        try (InputStream is = resources.nextElement().openStream()) {\n+          Manifest manifest = new Manifest(is);\n+          boolean minioManifestFound;\n+          for (Map.Entry<Object, Object> entry : manifest.getMainAttributes().entrySet()) {\n+            String key = entry.getKey().toString();\n+            String value = entry.getValue().toString();\n+            minioManifestFound =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620252cf5fac24f8422fe2634860e786394f613d"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2dbee575259a35b5c56c5064394c6c06c280400", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/d2dbee575259a35b5c56c5064394c6c06c280400", "committedDate": "2020-10-28T10:03:25Z", "message": "Clean a bit more"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTUzOTE4", "url": "https://github.com/minio/minio-java/pull/1089#pullrequestreview-518553918", "createdAt": "2020-10-28T11:15:46Z", "commit": {"oid": "d2dbee575259a35b5c56c5064394c6c06c280400"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToxNTo0NlrOHplIog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToxNTo0NlrOHplIog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2MjA4Mg==", "bodyText": "Just reduce to if (\"minio\".equals(manifest.getMainAttributes().getValue(\"Implementation-Title\")))", "url": "https://github.com/minio/minio-java/pull/1089#discussion_r513362082", "createdAt": "2020-10-28T11:15:46Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioProperties.java", "diffHunk": "@@ -35,42 +35,39 @@\n \n   public String getVersion() {\n     String result = version.get();\n-    if (result == null) {\n-      synchronized (INSTANCE) {\n-        if (version.get() == null) {\n-          try {\n-            ClassLoader classLoader = getClass().getClassLoader();\n-            setMinioClientJavaVersion(classLoader);\n-            setDevelopmentVersion();\n-          } catch (IOException e) {\n-            LOGGER.log(Level.SEVERE, \"IOException occured\", e);\n-            version.set(\"unknown\");\n-          }\n-          result = version.get();\n-        }\n-      }\n+    if (result != null) {\n+      return result;\n     }\n-    return result;\n+    setVersion();\n+    return version.get();\n   }\n \n-  private void setDevelopmentVersion() {\n-    if (version.get() == null) {\n-      version.set(\"dev\");\n+  private synchronized void setVersion() {\n+    if (version.get() != null) {\n+      return;\n+    }\n+    version.set(\"dev\");\n+    ClassLoader classLoader = getClass().getClassLoader();\n+    if (classLoader == null) {\n+      return;\n     }\n-  }\n \n-  private void setMinioClientJavaVersion(ClassLoader classLoader) throws IOException {\n-    if (classLoader != null) {\n+    try {\n       Enumeration<URL> resources = classLoader.getResources(\"META-INF/MANIFEST.MF\");\n       while (resources.hasMoreElements()) {\n-        Manifest manifest = new Manifest(resources.nextElement().openStream());\n-        for (Object k : manifest.getMainAttributes().keySet()) {\n-          String versionString = \"Implementation-Version\";\n-          if (k.toString().equals(versionString)) {\n-            version.set(manifest.getMainAttributes().getValue((Attributes.Name) k));\n+        try (InputStream is = resources.nextElement().openStream()) {\n+          Manifest manifest = new Manifest(is);\n+          String implementationTitleValue =\n+              manifest.getMainAttributes().getValue(\"Implementation-Title\");\n+          if (implementationTitleValue != null && implementationTitleValue.equals(\"minio\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2dbee575259a35b5c56c5064394c6c06c280400"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "431f5dd4f684958f21197e59bf79767bfbfa1793", "author": {"user": {"login": "vinu", "name": "Vinu Varghese"}}, "url": "https://github.com/minio/minio-java/commit/431f5dd4f684958f21197e59bf79767bfbfa1793", "committedDate": "2020-10-28T12:13:53Z", "message": "Code clean - remove redundant variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NjA0MjU2", "url": "https://github.com/minio/minio-java/pull/1089#pullrequestreview-518604256", "createdAt": "2020-10-28T12:25:19Z", "commit": {"oid": "431f5dd4f684958f21197e59bf79767bfbfa1793"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDU2NTE1", "url": "https://github.com/minio/minio-java/pull/1089#pullrequestreview-523056515", "createdAt": "2020-11-04T05:42:04Z", "commit": {"oid": "431f5dd4f684958f21197e59bf79767bfbfa1793"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1805, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}