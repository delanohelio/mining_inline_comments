{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzE3NDE5", "number": 1053, "title": "add {set,get}BucketVersioning APIs", "bodyText": "Fixes #1050", "createdAt": "2020-09-07T11:44:27Z", "url": "https://github.com/minio/minio-java/pull/1053", "merged": true, "mergeCommit": {"oid": "7963fe70904e0e8dd7ad2e72c75a80978e131c48"}, "closed": true, "closedAt": "2020-09-21T15:16:47Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJCjrYAFqTQ4ODM5NDE1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLEwdOgFqTQ5MjcwOTk1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Mzk0MTU1", "url": "https://github.com/minio/minio-java/pull/1053#pullrequestreview-488394155", "createdAt": "2020-09-15T07:21:20Z", "commit": {"oid": "1c5b12ab8fc4b02a4c51e66914c4ae7cb8fa89db"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c5b12ab8fc4b02a4c51e66914c4ae7cb8fa89db", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/1c5b12ab8fc4b02a4c51e66914c4ae7cb8fa89db", "committedDate": "2020-09-07T11:42:48Z", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050"}, "afterCommit": {"oid": "468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "committedDate": "2020-09-15T15:25:01Z", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/ed389872317612dc9d54aa72b53be9db91af3a70", "committedDate": "2020-09-15T17:14:24Z", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/468e9d6d9634801e24a131fa6ef17e6ebbcafb2c", "committedDate": "2020-09-15T15:25:01Z", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050"}, "afterCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/ed389872317612dc9d54aa72b53be9db91af3a70", "committedDate": "2020-09-15T17:14:24Z", "message": "add {set,get}BucketVersioning APIs\n\nFixes #1050"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODk3MDE1", "url": "https://github.com/minio/minio-java/pull/1053#pullrequestreview-488897015", "createdAt": "2020-09-15T17:15:54Z", "commit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzE3MjI5", "url": "https://github.com/minio/minio-java/pull/1053#pullrequestreview-489317229", "createdAt": "2020-09-16T06:41:45Z", "commit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNjo0MTo0NVrOHSiT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzowMTo1OFrOHSi5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE5ODU5MA==", "bodyText": "Should we also have a validate() method inside VersioningConfiguration and call it from here? The status field validation can be done in it.", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489198590", "createdAt": "2020-09-16T06:41:45Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/SetBucketVersioningArgs.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.messages.VersioningConfiguration;\n+\n+/** Argument class of MinioClient.setBucketVersioning(). */\n+public class SetBucketVersioningArgs extends BucketArgs {\n+  private VersioningConfiguration config;\n+\n+  public VersioningConfiguration config() {\n+    return config;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link SetBucketVersioningArgs}. */\n+  public static final class Builder extends BucketArgs.Builder<Builder, SetBucketVersioningArgs> {\n+    private void validateConfig(VersioningConfiguration config) {\n+      validateNotNull(config, \"versioning configuration\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwMTk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n          \n          \n            \n                return flag;\n          \n          \n            \n                return Boolean.valueOf(\"Enabled\".equals(mfaDelete));", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489201990", "createdAt": "2020-09-16T06:49:11Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -33,19 +36,58 @@\n   @Element(name = \"Status\", required = false)\n   private String status;\n \n+  @Element(name = \"MFADelete\", required = false)\n+  private String mfaDelete;\n+\n   public VersioningConfiguration() {}\n \n   /** Constructs a new VersioningConfiguration object with given status. */\n-  public VersioningConfiguration(boolean status) {\n-    if (status) {\n-      this.status = \"Enabled\";\n-    } else {\n-      this.status = \"Suspended\";\n+  public VersioningConfiguration(@Nonnull Status status, @Nullable Boolean mfaDelete) {\n+    Objects.requireNonNull(status, \"Status must not be null\");\n+    if (status == Status.OFF) {\n+      throw new IllegalArgumentException(\"Status must be ENABLED or SUSPENDED\");\n+    }\n+    this.status = status.toString();\n+\n+    if (mfaDelete != null) {\n+      this.mfaDelete = mfaDelete ? \"Enabled\" : \"Disabled\";\n     }\n   }\n \n-  /** Indicates whether the bucket is version enabled or not. */\n-  public boolean status() {\n-    return (\"Enabled\").equals(status);\n+  public Status status() {\n+    return Status.fromString(status);\n+  }\n+\n+  public Boolean isMfaDeleteEnabled() {\n+    Boolean flag = (mfaDelete != null) ? Boolean.valueOf(\"Enabled\".equals(mfaDelete)) : null;\n+    return flag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIwODA5Mw==", "bodyText": "Can we use switch statement here?\nOr maybe we can just use the toString() method and make this a single statement.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (config.status() == VersioningConfiguration.Status.OFF) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n          \n          \n            \n                  } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n          \n          \n            \n                    System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n          \n          \n            \n                  }\n          \n          \n            \n                 String statusStr = config.status().toString();\n          \n          \n            \n                 System.out.println(\"Versioning on bucket 'my-bucketname' is \" + statusStr.isEmpty ? \"Off\" : statusStr);", "url": "https://github.com/minio/minio-java/pull/1053#discussion_r489208093", "createdAt": "2020-09-16T07:01:58Z", "author": {"login": "anjalshireesh"}, "path": "examples/GetBucketVersioning.java", "diffHunk": "@@ -40,12 +41,16 @@ public static void main(String[] args)\n       //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n       //         .build();\n \n-      // Disable versioning on 'my-bucketname'.\n-      minioClient.disableVersioning(\n-          DisableVersioningArgs.builder().bucket(\"my-bucketname\").build());\n-\n-      System.out.println(\"Bucket versioning is disabled successfully\");\n-\n+      VersioningConfiguration config =\n+          minioClient.getBucketVersioning(\n+              GetBucketVersioningArgs.builder().bucket(\"my-bucketname\").build());\n+      if (config.status() == VersioningConfiguration.Status.OFF) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is not enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.ENABLED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is enabled\");\n+      } else if (config.status() == VersioningConfiguration.Status.SUSPENDED) {\n+        System.out.println(\"Versioning on bucket 'my-bucketname' is suspended\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed389872317612dc9d54aa72b53be9db91af3a70"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca2f4911453d6974ffbbc5fc2f13709a70ee6d15", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/ca2f4911453d6974ffbbc5fc2f13709a70ee6d15", "committedDate": "2020-09-16T08:46:26Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODA3NTE1", "url": "https://github.com/minio/minio-java/pull/1053#pullrequestreview-490807515", "createdAt": "2020-09-17T16:59:21Z", "commit": {"oid": "ca2f4911453d6974ffbbc5fc2f13709a70ee6d15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNzA5OTUx", "url": "https://github.com/minio/minio-java/pull/1053#pullrequestreview-492709951", "createdAt": "2020-09-21T15:02:57Z", "commit": {"oid": "ca2f4911453d6974ffbbc5fc2f13709a70ee6d15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1795, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}