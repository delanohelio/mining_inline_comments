{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTc5MTU3", "number": 998, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjo1NTozMFrOEK-9Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDo0ODo0OVrOELNe3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTUyNjU0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetObjectResponse.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjo1NTozMFrOGsV9RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDo0NjozNFrOGssYBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MDI3Nw==", "bodyText": "Why not extend from GenericResponse and have just one instance variable for InputStream body ?", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449150277", "createdAt": "2020-07-02T16:55:30Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0ODg5Mg==", "bodyText": "InputStream body by public InputStream body() is already there.\nWe want GetObjectResponse needs to be an InputStream and have functionality of GenericResponse. As GenericResponse and InputStream are abstract classes, I cannot inherit both the classes, but inherit one class (InputStream) and have instance of another class (GenericResponse); if we do other way around; InputStream capability is lost.", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449348892", "createdAt": "2020-07-03T02:41:36Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MDI3Nw=="}, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQzMjU1Ng==", "bodyText": "@balamurugana the InputStream capability won't be lost. We can get the InputStream by calling body() from the instance of GetObjectResponse to get the input stream.", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449432556", "createdAt": "2020-07-03T07:51:24Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MDI3Nw=="}, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2OTM0Nw==", "bodyText": "The idea here is to GetObjectResponse be an InputStream which is most common usage and it doesn't break backward compatibility.", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449469347", "createdAt": "2020-07-03T09:05:01Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MDI3Nw=="}, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxNzU3Mw==", "bodyText": "Backward compatibility with the previous return type of the method - understood \ud83d\udc4d\nIn that case, may I suggest to remove all the wrapper methods that call the same method on the response object, and expect the client to call response() method to get the object of BaseResponse and then use it to get further details? We can also consider making the GenericResponse non-abstract and using it directly.", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449517573", "createdAt": "2020-07-03T10:46:34Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MDI3Nw=="}, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTkwNjg1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetObjectResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDo0ODo0OVrOGssb2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzozMzozM1rOGswknw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxODU1NA==", "bodyText": "GetObjectResponse can extend from BufferedInputStream and then call super(body) here inside the constructor.\nWith this, The class would authentically become an InputStream and would not need to store the body variable and write wrapper methods for it.", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449518554", "createdAt": "2020-07-03T10:48:49Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {\n+  private BaseResponse response;\n+  private InputStream body;\n+\n+  public GetObjectResponse(\n+      Headers headers, String bucket, String region, String object, InputStream body) {\n+    this.response = new BaseResponse(headers, bucket, region, object);\n+    this.body = body;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4NjMzNQ==", "bodyText": "We would need to keep proxying methods in GenericResponse here to comply with other Response classes; else GetObjectResponse looks different. The idea is GetObjectResponse is same as GenericResponse but also an InputStream.\n\n\nYes. Making GenericResponse as non-abstract class.\n\n\nI am going to use FilterInputStream which is more appropriate than BufferedInputStream", "url": "https://github.com/minio/minio-java/pull/998#discussion_r449586335", "createdAt": "2020-07-03T13:33:33Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetObjectResponse.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import okhttp3.Headers;\n+\n+public class GetObjectResponse extends InputStream {\n+  private BaseResponse response;\n+  private InputStream body;\n+\n+  public GetObjectResponse(\n+      Headers headers, String bucket, String region, String object, InputStream body) {\n+    this.response = new BaseResponse(headers, bucket, region, object);\n+    this.body = body;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUxODU1NA=="}, "originalCommit": {"oid": "d6a3aeefdb1f833c8fdb3642604a636330b74e76"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 753, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}