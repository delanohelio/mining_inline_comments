{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjA3NTU5", "number": 970, "title": "add arg builder support to copyObject API", "bodyText": "", "createdAt": "2020-06-05T04:03:03Z", "url": "https://github.com/minio/minio-java/pull/970", "merged": true, "mergeCommit": {"oid": "928cfef317cd5e2e43de4dce4454c1676f2c43de"}, "closed": true, "closedAt": "2020-06-10T09:04:20Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoPAeigBqjM0MTA0MTk0MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpzOPAgFqTQyNzczMTQ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c3f98c74f0fdad4ff878260362852bff04c9da3", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/6c3f98c74f0fdad4ff878260362852bff04c9da3", "committedDate": "2020-06-05T04:02:06Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "8ca47d49b471929d6e0c028120fd4cfcd63dd53b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/8ca47d49b471929d6e0c028120fd4cfcd63dd53b", "committedDate": "2020-06-05T09:11:54Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ca47d49b471929d6e0c028120fd4cfcd63dd53b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/8ca47d49b471929d6e0c028120fd4cfcd63dd53b", "committedDate": "2020-06-05T09:11:54Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "ced722acb1313e91512f0a4bf4d2a3dc3e76f349", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/ced722acb1313e91512f0a4bf4d2a3dc3e76f349", "committedDate": "2020-06-05T10:13:17Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ced722acb1313e91512f0a4bf4d2a3dc3e76f349", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/ced722acb1313e91512f0a4bf4d2a3dc3e76f349", "committedDate": "2020-06-05T10:13:17Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "7da0c76f5bc800e781e68c918867510721804838", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/7da0c76f5bc800e781e68c918867510721804838", "committedDate": "2020-06-05T12:57:04Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7da0c76f5bc800e781e68c918867510721804838", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/7da0c76f5bc800e781e68c918867510721804838", "committedDate": "2020-06-05T12:57:04Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "0ccfcdb5f2e5eb3c65ab0069aacefd4b09c0518d", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/0ccfcdb5f2e5eb3c65ab0069aacefd4b09c0518d", "committedDate": "2020-06-05T16:27:24Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ccfcdb5f2e5eb3c65ab0069aacefd4b09c0518d", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/0ccfcdb5f2e5eb3c65ab0069aacefd4b09c0518d", "committedDate": "2020-06-05T16:27:24Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "c894892ce4dd531f7608e27ce64a570863de2123", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c894892ce4dd531f7608e27ce64a570863de2123", "committedDate": "2020-06-05T18:15:50Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c894892ce4dd531f7608e27ce64a570863de2123", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c894892ce4dd531f7608e27ce64a570863de2123", "committedDate": "2020-06-05T18:15:50Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "863479ec18df268cd1997e4acf40863924ed2ead", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/863479ec18df268cd1997e4acf40863924ed2ead", "committedDate": "2020-06-06T03:16:34Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "863479ec18df268cd1997e4acf40863924ed2ead", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/863479ec18df268cd1997e4acf40863924ed2ead", "committedDate": "2020-06-06T03:16:34Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "c296d1af5bf5ba3f74ba5ccb54c2894ecc621494", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c296d1af5bf5ba3f74ba5ccb54c2894ecc621494", "committedDate": "2020-06-06T11:05:10Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c296d1af5bf5ba3f74ba5ccb54c2894ecc621494", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c296d1af5bf5ba3f74ba5ccb54c2894ecc621494", "committedDate": "2020-06-06T11:05:10Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "4543874bfdaf1dd1b658ea88e28f2062a3fc2ab4", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/4543874bfdaf1dd1b658ea88e28f2062a3fc2ab4", "committedDate": "2020-06-06T11:49:35Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4543874bfdaf1dd1b658ea88e28f2062a3fc2ab4", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/4543874bfdaf1dd1b658ea88e28f2062a3fc2ab4", "committedDate": "2020-06-06T11:49:35Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "030788ec234ba98f61bfeb620e8547279e4fc4fe", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/030788ec234ba98f61bfeb620e8547279e4fc4fe", "committedDate": "2020-06-06T14:56:38Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "030788ec234ba98f61bfeb620e8547279e4fc4fe", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/030788ec234ba98f61bfeb620e8547279e4fc4fe", "committedDate": "2020-06-06T14:56:38Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "466aded95e43f484bb29bfc165a54dbc8a70850f", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/466aded95e43f484bb29bfc165a54dbc8a70850f", "committedDate": "2020-06-07T03:02:48Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "466aded95e43f484bb29bfc165a54dbc8a70850f", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/466aded95e43f484bb29bfc165a54dbc8a70850f", "committedDate": "2020-06-07T03:02:48Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "3a9281d2896a3c810eb3f023c3c1a5feddce58fa", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/3a9281d2896a3c810eb3f023c3c1a5feddce58fa", "committedDate": "2020-06-07T03:39:01Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a9281d2896a3c810eb3f023c3c1a5feddce58fa", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/3a9281d2896a3c810eb3f023c3c1a5feddce58fa", "committedDate": "2020-06-07T03:39:01Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "69e9f8887434752e973f30b7b03cd5b1a0711e95", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/69e9f8887434752e973f30b7b03cd5b1a0711e95", "committedDate": "2020-06-07T12:55:37Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69e9f8887434752e973f30b7b03cd5b1a0711e95", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/69e9f8887434752e973f30b7b03cd5b1a0711e95", "committedDate": "2020-06-07T12:55:37Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "a99429e7da0691bca9759c00d1883d67881a1fa5", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/a99429e7da0691bca9759c00d1883d67881a1fa5", "committedDate": "2020-06-07T13:22:12Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a99429e7da0691bca9759c00d1883d67881a1fa5", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/a99429e7da0691bca9759c00d1883d67881a1fa5", "committedDate": "2020-06-07T13:22:12Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "82d45dc2e9e745da61ec8c963479909654d0a112", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/82d45dc2e9e745da61ec8c963479909654d0a112", "committedDate": "2020-06-08T09:44:38Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f", "committedDate": "2020-06-09T02:14:41Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82d45dc2e9e745da61ec8c963479909654d0a112", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/82d45dc2e9e745da61ec8c963479909654d0a112", "committedDate": "2020-06-08T09:44:38Z", "message": "add arg builder support to copyObject API"}, "afterCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f", "committedDate": "2020-06-09T02:14:41Z", "message": "add arg builder support to copyObject API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODM3NjUy", "url": "https://github.com/minio/minio-java/pull/970#pullrequestreview-426837652", "createdAt": "2020-06-09T06:55:26Z", "commit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MDQ1NTY3", "url": "https://github.com/minio/minio-java/pull/970#pullrequestreview-427045567", "createdAt": "2020-06-09T11:30:06Z", "commit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTozMDowNlrOGhE9JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjozNDo1MVrOGhHYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzNzM4MQ==", "bodyText": "Might be a good idea to add this as a method in the Tags class. Something like Tag#getTagging()", "url": "https://github.com/minio/minio-java/pull/970#discussion_r437337381", "createdAt": "2020-06-09T11:30:06Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/ObjectWriteArgs.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import com.google.common.collect.HashMultimap;\n+import com.google.common.collect.Multimap;\n+import com.google.common.collect.Multimaps;\n+import io.minio.messages.Retention;\n+import io.minio.messages.Tags;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import okhttp3.HttpUrl;\n+\n+public abstract class ObjectWriteArgs extends ObjectArgs {\n+  protected Multimap<String, String> headers =\n+      Multimaps.unmodifiableMultimap(HashMultimap.create());\n+  protected Multimap<String, String> userMetadata =\n+      Multimaps.unmodifiableMultimap(HashMultimap.create());\n+  protected ServerSideEncryption sse;\n+  protected Tags tags = new Tags();\n+  protected Retention retention;\n+  protected boolean legalHold;\n+\n+  public Multimap<String, String> headers() {\n+    return headers;\n+  }\n+\n+  public Multimap<String, String> userMetadata() {\n+    return userMetadata;\n+  }\n+\n+  public ServerSideEncryption sse() {\n+    return sse;\n+  }\n+\n+  public Tags tags() {\n+    return tags;\n+  }\n+\n+  public Retention retention() {\n+    return retention;\n+  }\n+\n+  public boolean legalHold() {\n+    return legalHold;\n+  }\n+\n+  public Multimap<String, String> genHeaders() {\n+    Multimap<String, String> headers = HashMultimap.create();\n+\n+    headers.putAll(this.headers);\n+    headers.putAll(userMetadata);\n+\n+    if (sse != null) {\n+      headers.putAll(Multimaps.forMap(sse.headers()));\n+    }\n+\n+    String tagging =\n+        tags.get().entrySet().stream()\n+            .map(e -> S3Escaper.encode(e.getKey()) + \"=\" + S3Escaper.encode(e.getValue()))\n+            .collect(Collectors.joining(\"&\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0MTcxNQ==", "bodyText": "It might be better to add this annotation to the Builder class itself instead of one each and every setter method.", "url": "https://github.com/minio/minio-java/pull/970#discussion_r437341715", "createdAt": "2020-06-09T11:38:40Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/ObjectWriteArgs.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import com.google.common.collect.HashMultimap;\n+import com.google.common.collect.Multimap;\n+import com.google.common.collect.Multimaps;\n+import io.minio.messages.Retention;\n+import io.minio.messages.Tags;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import okhttp3.HttpUrl;\n+\n+public abstract class ObjectWriteArgs extends ObjectArgs {\n+  protected Multimap<String, String> headers =\n+      Multimaps.unmodifiableMultimap(HashMultimap.create());\n+  protected Multimap<String, String> userMetadata =\n+      Multimaps.unmodifiableMultimap(HashMultimap.create());\n+  protected ServerSideEncryption sse;\n+  protected Tags tags = new Tags();\n+  protected Retention retention;\n+  protected boolean legalHold;\n+\n+  public Multimap<String, String> headers() {\n+    return headers;\n+  }\n+\n+  public Multimap<String, String> userMetadata() {\n+    return userMetadata;\n+  }\n+\n+  public ServerSideEncryption sse() {\n+    return sse;\n+  }\n+\n+  public Tags tags() {\n+    return tags;\n+  }\n+\n+  public Retention retention() {\n+    return retention;\n+  }\n+\n+  public boolean legalHold() {\n+    return legalHold;\n+  }\n+\n+  public Multimap<String, String> genHeaders() {\n+    Multimap<String, String> headers = HashMultimap.create();\n+\n+    headers.putAll(this.headers);\n+    headers.putAll(userMetadata);\n+\n+    if (sse != null) {\n+      headers.putAll(Multimaps.forMap(sse.headers()));\n+    }\n+\n+    String tagging =\n+        tags.get().entrySet().stream()\n+            .map(e -> S3Escaper.encode(e.getKey()) + \"=\" + S3Escaper.encode(e.getValue()))\n+            .collect(Collectors.joining(\"&\"));\n+    if (!tagging.isEmpty()) {\n+      headers.put(\"x-amz-tagging\", tagging);\n+    }\n+\n+    if (retention != null && retention.mode() != null) {\n+      headers.put(\"x-amz-object-lock-mode\", retention.mode().name());\n+      headers.put(\n+          \"x-amz-object-lock-retain-until-date\",\n+          retention.retainUntilDate().format(Time.HTTP_HEADER_DATE_FORMAT));\n+    }\n+\n+    if (legalHold) {\n+      headers.put(\"x-amz-object-lock-legal-hold\", \"ON\");\n+    }\n+\n+    return headers;\n+  }\n+\n+  protected void validateSse(HttpUrl url) {\n+    checkSse(sse, url);\n+  }\n+\n+  public abstract static class Builder<B extends Builder<B, A>, A extends ObjectWriteArgs>\n+      extends ObjectArgs.Builder<B, A> {\n+    @SuppressWarnings(\"unchecked\") // Its safe to type cast to B as B is inherited by this class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1ODc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    builder.metadataDirective(Directive.REPLACE);\n          \n          \n            \n                    builder.metadataDirective(value);", "url": "https://github.com/minio/minio-java/pull/970#discussion_r437358793", "createdAt": "2020-06-09T12:11:10Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2321,48 +2323,184 @@ public void copyObject(\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n-    if ((bucketName == null) || (bucketName.isEmpty())) {\n-      throw new IllegalArgumentException(\"bucket name cannot be empty\");\n+    ServerSideEncryptionCustomerKey srcSsec = null;\n+    if (srcSse instanceof ServerSideEncryptionCustomerKey) {\n+      srcSsec = (ServerSideEncryptionCustomerKey) srcSse;\n     }\n+    checkReadRequestSse(srcSse);\n \n-    checkObjectName(objectName);\n+    CopyObjectArgs.Builder builder =\n+        CopyObjectArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .headers(headerMap)\n+            .sse(sse)\n+            .srcBucket(srcBucketName)\n+            .srcObject(srcObjectName)\n+            .srcSsec(srcSsec);\n \n-    checkWriteRequestSse(sse);\n+    if (copyConditions != null) {\n+      Map<String, String> map = copyConditions.getConditions();\n+      String value;\n+\n+      builder.srcMatchETag(map.get(\"x-amz-copy-source-if-match\"));\n+      builder.srcNotMatchETag(map.get(\"x-amz-copy-source-if-none-match\"));\n \n-    if ((srcBucketName == null) || (srcBucketName.isEmpty())) {\n-      throw new IllegalArgumentException(\"Source bucket name cannot be empty\");\n+      value = map.get(\"x-amz-copy-source-if-modified-since\");\n+      if (value != null) {\n+        builder.srcModifiedSince(ZonedDateTime.parse(value, Time.HTTP_HEADER_DATE_FORMAT));\n+      }\n+\n+      value = map.get(\"x-amz-copy-source-if-unmodified-since\");\n+      if (value != null) {\n+        builder.srcUnmodifiedSince(ZonedDateTime.parse(value, Time.HTTP_HEADER_DATE_FORMAT));\n+      }\n+\n+      value = map.get(\"x-amz-metadata-directive\");\n+      if (value != null) {\n+        builder.metadataDirective(Directive.REPLACE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3MTIyNA==", "bodyText": "Can be simplified using the Optional class as follows:\nString srcObject = Optional.ofNullable(args.srcObject()).orElse(args.object());", "url": "https://github.com/minio/minio-java/pull/970#discussion_r437371224", "createdAt": "2020-06-09T12:27:57Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2321,48 +2323,184 @@ public void copyObject(\n           InternalException, InvalidBucketNameException, InvalidKeyException,\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n-    if ((bucketName == null) || (bucketName.isEmpty())) {\n-      throw new IllegalArgumentException(\"bucket name cannot be empty\");\n+    ServerSideEncryptionCustomerKey srcSsec = null;\n+    if (srcSse instanceof ServerSideEncryptionCustomerKey) {\n+      srcSsec = (ServerSideEncryptionCustomerKey) srcSse;\n     }\n+    checkReadRequestSse(srcSse);\n \n-    checkObjectName(objectName);\n+    CopyObjectArgs.Builder builder =\n+        CopyObjectArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .headers(headerMap)\n+            .sse(sse)\n+            .srcBucket(srcBucketName)\n+            .srcObject(srcObjectName)\n+            .srcSsec(srcSsec);\n \n-    checkWriteRequestSse(sse);\n+    if (copyConditions != null) {\n+      Map<String, String> map = copyConditions.getConditions();\n+      String value;\n+\n+      builder.srcMatchETag(map.get(\"x-amz-copy-source-if-match\"));\n+      builder.srcNotMatchETag(map.get(\"x-amz-copy-source-if-none-match\"));\n \n-    if ((srcBucketName == null) || (srcBucketName.isEmpty())) {\n-      throw new IllegalArgumentException(\"Source bucket name cannot be empty\");\n+      value = map.get(\"x-amz-copy-source-if-modified-since\");\n+      if (value != null) {\n+        builder.srcModifiedSince(ZonedDateTime.parse(value, Time.HTTP_HEADER_DATE_FORMAT));\n+      }\n+\n+      value = map.get(\"x-amz-copy-source-if-unmodified-since\");\n+      if (value != null) {\n+        builder.srcUnmodifiedSince(ZonedDateTime.parse(value, Time.HTTP_HEADER_DATE_FORMAT));\n+      }\n+\n+      value = map.get(\"x-amz-metadata-directive\");\n+      if (value != null) {\n+        builder.metadataDirective(Directive.REPLACE);\n+      }\n     }\n \n+    copyObject(builder.build());\n+  }\n+\n+  /**\n+   * Creates an object by server-side copying data from another object.\n+   *\n+   * <pre>Example:{@code\n+   * // Create object \"my-objectname\" in bucket \"my-bucketname\" by copying from object\n+   * // \"my-objectname\" in bucket \"my-source-bucketname\".\n+   * minioClient.copyObject(\n+   *     CopyObjectArgs.builder()\n+   *         .bucket(\"my-bucketname\")\n+   *         .object(\"my-objectname\")\n+   *         .srcBucket(\"my-source-bucketname\")\n+   *         .build());\n+   *\n+   * // Create object \"my-objectname\" in bucket \"my-bucketname\" by copying from object\n+   * // \"my-source-objectname\" in bucket \"my-source-bucketname\".\n+   * minioClient.copyObject(\n+   *     CopyObjectArgs.builder()\n+   *         .bucket(\"my-bucketname\")\n+   *         .object(\"my-objectname\")\n+   *         .srcBucket(\"my-source-bucketname\")\n+   *         .srcObject(\"my-source-objectname\")\n+   *         .build());\n+   *\n+   * // Create object \"my-objectname\" in bucket \"my-bucketname\" with server-side encryption by\n+   * // copying from object \"my-objectname\" in bucket \"my-source-bucketname\".\n+   * minioClient.copyObject(\n+   *     CopyObjectArgs.builder()\n+   *         .bucket(\"my-bucketname\")\n+   *         .object(\"my-objectname\")\n+   *         .srcBucket(\"my-source-bucketname\")\n+   *         .sse(sse)\n+   *         .build());\n+   *\n+   * // Create object \"my-objectname\" in bucket \"my-bucketname\" by copying from SSE-C encrypted\n+   * // object \"my-source-objectname\" in bucket \"my-source-bucketname\".\n+   * minioClient.copyObject(\n+   *     CopyObjectArgs.builder()\n+   *         .bucket(\"my-bucketname\")\n+   *         .object(\"my-objectname\")\n+   *         .srcBucket(\"my-source-bucketname\")\n+   *         .srcObject(\"my-source-objectname\")\n+   *         .srcSsec(ssec)\n+   *         .build());\n+   *\n+   * // Create object \"my-objectname\" in bucket \"my-bucketname\" with custom headers by copying from\n+   * // object \"my-objectname\" in bucket \"my-source-bucketname\" using conditions.\n+   * minioClient.copyObject(\n+   *     CopyObjectArgs.builder()\n+   *         .bucket(\"my-bucketname\")\n+   *         .object(\"my-objectname\")\n+   *         .srcBucket(\"my-source-bucketname\")\n+   *         .headers(headers)\n+   *         .srcMatchETag(etag)\n+   *         .build());\n+   * }</pre>\n+   *\n+   * @param args {@link CopyObjectArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public void copyObject(CopyObjectArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidKeyException,\n+          InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n+          XmlParserException {\n+    checkArgs(args);\n+    args.validateSse(this.baseUrl);\n+\n+    Multimap<String, String> headers = args.genHeaders();\n+\n     // Source object name is optional, if empty default to object name.\n-    if (srcObjectName == null) {\n-      srcObjectName = objectName;\n+    String srcObject = args.object();\n+    if (args.srcObject() != null) {\n+      srcObject = args.srcObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3NzEzNA==", "bodyText": "Can be simplified using Optional class as follows:\nString srcObject = Optional.ofNullable(args.srcObject()).orElse(args.object());", "url": "https://github.com/minio/minio-java/pull/970#discussion_r437377134", "createdAt": "2020-06-09T12:34:51Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2299,660 +2307,368 @@ public static void threadedPutObject() throws Exception {\n     }\n   }\n \n-  /** Test: copyObject(String bucketName, String objectName, String destBucketName). */\n-  public static void copyObject_test1() throws Exception {\n-    String methodName = \"copyObject(String bucketName, String objectName, String destBucketName)\";\n+  public static void testCopyObject(\n+      String testTags, ServerSideEncryption sse, CopyObjectArgs args, boolean negativeCase)\n+      throws Exception {\n+    String methodName = \"copyObject()\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: \" + methodName);\n-    }\n-\n-    long startTime = System.currentTimeMillis();\n-    try {\n-      String objectName = getRandomName();\n-      try (final InputStream is = new ContentInputStream(1 * KB)) {\n-        client.putObject(bucketName, objectName, is, new PutObjectOptions(1 * KB, -1));\n-      }\n-\n-      String destBucketName = getRandomName();\n-      client.makeBucket(MakeBucketArgs.builder().bucket(destBucketName).build());\n-      client.copyObject(destBucketName, objectName, null, null, bucketName, null, null, null);\n-      client\n-          .getObject(GetObjectArgs.builder().bucket(bucketName).object(objectName).build())\n-          .close();\n-\n-      client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      client.removeObject(\n-          RemoveObjectArgs.builder().bucket(destBucketName).object(objectName).build());\n-      client.removeBucket(RemoveBucketArgs.builder().bucket(destBucketName).build());\n-      mintSuccessLog(methodName, null, startTime);\n-    } catch (Exception e) {\n-      handleException(methodName, null, startTime, e);\n+      System.out.println(\"Test: \" + methodName + \" \" + testTags);\n     }\n-  }\n \n-  /**\n-   * Test: copyObject(String bucketName, String objectName, String destBucketName, CopyConditions\n-   * copyConditions) with ETag to match.\n-   */\n-  public static void copyObject_test2() throws Exception {\n-    if (!mintEnv) {\n-      System.out.println(\n-          \"Test: copyObject(String bucketName, String objectName, String destBucketName,\"\n-              + \"CopyConditions copyConditions) with Matching ETag (Negative Case)\");\n+    String srcObject = args.object();\n+    if (args.srcObject() != null) {\n+      srcObject = args.srcObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288dcbb2d0940d3b54ac4da784d6cb35dcfa19f"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ccd41e74b329a0ca0136af682b2112d72f957d", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d4ccd41e74b329a0ca0136af682b2112d72f957d", "committedDate": "2020-06-09T14:43:43Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd11fea7244b2f2ef7893e6d1a901f1e3b1a483", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/3fd11fea7244b2f2ef7893e6d1a901f1e3b1a483", "committedDate": "2020-06-09T16:07:32Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzI1MjM5", "url": "https://github.com/minio/minio-java/pull/970#pullrequestreview-427325239", "createdAt": "2020-06-09T16:12:48Z", "commit": {"oid": "3fd11fea7244b2f2ef7893e6d1a901f1e3b1a483"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzMxNDY1", "url": "https://github.com/minio/minio-java/pull/970#pullrequestreview-427731465", "createdAt": "2020-06-10T05:57:41Z", "commit": {"oid": "3fd11fea7244b2f2ef7893e6d1a901f1e3b1a483"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1922, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}