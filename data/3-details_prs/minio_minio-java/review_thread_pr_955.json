{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzOTI4OTgz", "number": 955, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMToyOFrOEAlgzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzozNDoxNFrOEA5EIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUwMDYyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMToyOFrOGb9WPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTozODoxMVrOGcPYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2OTg1Mw==", "bodyText": "Its better to pass a boolean rather a string.", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431969853", "createdAt": "2020-05-28T16:31:28Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3648,9 +3649,8 @@ public void enableVersioning(EnableVersioningArgs args)\n \n     Map<String, String> queryParamMap = new HashMap<>();\n     queryParamMap.put(\"versioning\", \"\");\n-    String config =\n-        \"<VersioningConfiguration xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\"\n-            + \"<Status>Enabled</Status></VersioningConfiguration>\";\n+    VersioningConfiguration config = new VersioningConfiguration(\"Enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2NTQwNg==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432265406", "createdAt": "2020-05-29T05:38:11Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3648,9 +3649,8 @@ public void enableVersioning(EnableVersioningArgs args)\n \n     Map<String, String> queryParamMap = new HashMap<>();\n     queryParamMap.put(\"versioning\", \"\");\n-    String config =\n-        \"<VersioningConfiguration xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\"\n-            + \"<Status>Enabled</Status></VersioningConfiguration>\";\n+    VersioningConfiguration config = new VersioningConfiguration(\"Enabled\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2OTg1Mw=="}, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUxNDE3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozNDo1OVrOGb9enw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTozODowMVrOGcPYlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MTk5OQ==", "bodyText": "When do we get this error?", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431971999", "createdAt": "2020-05-28T16:34:59Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3712,13 +3712,58 @@ public void disableVersioning(DisableVersioningArgs args)\n \n     Map<String, String> queryParamMap = new HashMap<>();\n     queryParamMap.put(\"versioning\", \"\");\n-    String config =\n-        \"<VersioningConfiguration xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\"\n-            + \"<Status>Suspended</Status></VersioningConfiguration>\";\n+    VersioningConfiguration config = new VersioningConfiguration(\"Suspended\");\n     Response response = executePut(args.bucket(), null, null, queryParamMap, config, 0);\n     response.body().close();\n   }\n \n+  /**\n+   * Returns true if versioning is enabled on the bucket.\n+   *\n+   * <pre>Example:{@code\n+   * boolean isVersioningEnabled =\n+   *  minioClient.isVersioningEnabled(\n+   *       IsVersioningEnabledArgs.builder().bucket(\"my-bucketname\").build());\n+   * if (isVersioningEnabled) {\n+   *   System.out.println(\"Bucket versioning is enabled\");\n+   * } else {\n+   *   System.out.println(\"Bucket versioning is disabled\");\n+   * }\n+   * }</pre>\n+   *\n+   * @param args {@link IsVersioningEnabledArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public boolean isVersioningEnabled(IsVersioningEnabledArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidKeyException,\n+          InvalidResponseException, IOException, NoSuchAlgorithmException, XmlParserException {\n+    checkArgs(args);\n+\n+    Map<String, String> queryParamMap = new HashMap<>();\n+    queryParamMap.put(\"versioning\", \"\");\n+    try (Response response = executeGet(args.bucket(), null, null, queryParamMap)) {\n+      VersioningConfiguration result =\n+          Xml.unmarshal(VersioningConfiguration.class, response.body().charStream());\n+      return result.status();\n+    } catch (ErrorResponseException e) {\n+      if (e.errorResponse().errorCode() != ErrorCode.ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2NTM2Nw==", "bodyText": "Removed", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432265367", "createdAt": "2020-05-29T05:38:01Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3712,13 +3712,58 @@ public void disableVersioning(DisableVersioningArgs args)\n \n     Map<String, String> queryParamMap = new HashMap<>();\n     queryParamMap.put(\"versioning\", \"\");\n-    String config =\n-        \"<VersioningConfiguration xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\"\n-            + \"<Status>Suspended</Status></VersioningConfiguration>\";\n+    VersioningConfiguration config = new VersioningConfiguration(\"Suspended\");\n     Response response = executePut(args.bucket(), null, null, queryParamMap, config, 0);\n     response.body().close();\n   }\n \n+  /**\n+   * Returns true if versioning is enabled on the bucket.\n+   *\n+   * <pre>Example:{@code\n+   * boolean isVersioningEnabled =\n+   *  minioClient.isVersioningEnabled(\n+   *       IsVersioningEnabledArgs.builder().bucket(\"my-bucketname\").build());\n+   * if (isVersioningEnabled) {\n+   *   System.out.println(\"Bucket versioning is enabled\");\n+   * } else {\n+   *   System.out.println(\"Bucket versioning is disabled\");\n+   * }\n+   * }</pre>\n+   *\n+   * @param args {@link IsVersioningEnabledArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public boolean isVersioningEnabled(IsVersioningEnabledArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidKeyException,\n+          InvalidResponseException, IOException, NoSuchAlgorithmException, XmlParserException {\n+    checkArgs(args);\n+\n+    Map<String, String> queryParamMap = new HashMap<>();\n+    queryParamMap.put(\"versioning\", \"\");\n+    try (Response response = executeGet(args.bucket(), null, null, queryParamMap)) {\n+      VersioningConfiguration result =\n+          Xml.unmarshal(VersioningConfiguration.class, response.body().charStream());\n+      return result.status();\n+    } catch (ErrorResponseException e) {\n+      if (e.errorResponse().errorCode() != ErrorCode.ILLEGAL_VERSIONING_CONFIGURATION_EXCEPTION) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MTk5OQ=="}, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUxOTA2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozNjoxOVrOGb9huQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjoyMjoyOFrOGcQK0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Mjc5Mw==", "bodyText": "I don't think the link going to work. Have you checked it?", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431972793", "createdAt": "2020-05-28T16:36:19Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Object representation of request XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2NTE5Ng==", "bodyText": "It works.", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432265196", "createdAt": "2020-05-29T05:37:28Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Object representation of request XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Mjc5Mw=="}, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI3ODIyNg==", "bodyText": "The illusion I saw was, href string was broken into next line.", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432278226", "createdAt": "2020-05-29T06:22:28Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Object representation of request XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Mjc5Mw=="}, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUyMjM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozNzoxN1rOGb9j5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozNzoxN1rOGb9j5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MzM0OQ==", "bodyText": "Accept boolean and construct status string accordingly", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431973349", "createdAt": "2020-05-28T16:37:17Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Object representation of request XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning\n+ * API</a> and response XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\">GetBucketVersioning\n+ * API</a>.\n+ */\n+@Root(name = \"VersioningConfiguration\", strict = false)\n+@Namespace(reference = \"http://s3.amazonaws.com/doc/2006-03-01/\")\n+public class VersioningConfiguration {\n+  @Element(name = \"Status\", required = false)\n+  private String status;\n+\n+  public VersioningConfiguration() {}\n+\n+  /** Constructs a new VersioningConfiguration object with given status. */\n+  public VersioningConfiguration(String status) {\n+    this.status = status;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUyNTQ0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozODowOFrOGb9l0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozODowOFrOGb9l0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Mzg0Mw==", "bodyText": "return \"Enabled\".equals(status) would work", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431973843", "createdAt": "2020-05-28T16:38:08Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/messages/VersioningConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.messages;\n+\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Object representation of request XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning\n+ * API</a> and response XML of <a\n+ * href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\">GetBucketVersioning\n+ * API</a>.\n+ */\n+@Root(name = \"VersioningConfiguration\", strict = false)\n+@Namespace(reference = \"http://s3.amazonaws.com/doc/2006-03-01/\")\n+public class VersioningConfiguration {\n+  @Element(name = \"Status\", required = false)\n+  private String status;\n+\n+  public VersioningConfiguration() {}\n+\n+  /** Constructs a new VersioningConfiguration object with given status. */\n+  public VersioningConfiguration(String status) {\n+    this.status = status;\n+  }\n+\n+  /** Indicates whether the bucket is version enabled or not. */\n+  public boolean status() {\n+    return status != null && status.equals(\"Enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUyODMzOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozODo1N1rOGb9ntA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozODo1N1rOGb9ntA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3NDMyNA==", "bodyText": "Keep the list in columns sorted.", "url": "https://github.com/minio/minio-java/pull/955#discussion_r431974324", "createdAt": "2020-05-28T16:38:57Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -23,23 +23,24 @@ MinioClient s3Client = new MinioClient(\"https://s3.amazonaws.com\",\n | [`deleteBucketLifeCycle`](#deleteBucketLifeCycle)             | [`deleteObjectTags`](#deleteObjectTags)                 |\n | [`deleteBucketTags`](#deleteBucketTags)                       | [`disableObjectLegalHold`](#disableObjectLegalHold)     |\n | [`disableVersioning`](#disableVersioning)                     | [`enableObjectLegalHold`](#enableObjectLegalHold)       |\n-| [`enableVersioning`](#enableVersioning)                       | [`getObject`](#getObject)                               |\n-| [`getBucketEncryption`](#getBucketEncryption)                 | [`getObjectRetention`](#getObjectRetention)             |\n-| [`getBucketLifeCycle`](#getBucketLifeCycle)                   | [`getObjectTags`](#getObjectTags)                       |\n-| [`getBucketNotification`](#getBucketNotification)             | [`getObjectUrl`](#getObjectUrl)                         |\n-| [`getBucketPolicy`](#getBucketPolicy)                         | [`getPresignedObjectUrl`](#getPresignedObjectUrl)       |\n-| [`getBucketTags`](#getBucketTags)                             | [`isObjectLegalHoldEnabled`](#isObjectLegalHoldEnabled) |\n-| [`getDefaultRetention`](#getDefaultRetention)                 | [`listObjects`](#listObjects)                           |\n-| [`listBuckets`](#listBuckets)                                 | [`presignedGetObject`](#presignedGetObject)             |\n-| [`listenBucketNotification`](#listenBucketNotification)       | [`presignedPostPolicy`](#presignedPostPolicy)           |\n-| [`listIncompleteUploads`](#listIncompleteUploads)             | [`presignedPutObject`](#presignedPutObject)             |\n-| [`makeBucket`](#makeBucket)                                   | [`putObject`](#putObject)                               |\n-| [`removeAllBucketNotification`](#removeAllBucketNotification) | [`removeObject`](#removeObject)                         |\n-| [`removeBucket`](#removeBucket)                               | [`removeObjects`](#removeObjects)                       |\n-| [`removeIncompleteUpload`](#removeIncompleteUpload)           | [`selectObjectContent`](#selectObjectContent)           |\n-| [`setBucketEncryption`](#setBucketEncryption)                 | [`setObjectRetention`](#setObjectRetention)             |\n-| [`setBucketLifeCycle`](#setBucketLifeCycle)                   | [`setObjectTags`](#setObjectTags)                       |\n-| [`setBucketNotification`](#setBucketNotification)             | [`statObject`](#statObject)                             |\n+| [`isVersioningEnabled`](#isVersioningEnabled)                 | [`getObject`](#getObject)                               |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e484e1a73d2f88877f2768f99fcdc15c58b9621e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzU3NjQ0OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo1ODozMFrOGcbj2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo1ODozMFrOGcbj2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2NDg1Nw==", "bodyText": "This empty line can be removed", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432464857", "createdAt": "2020-05-29T12:58:30Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -4880,6 +4860,7 @@ public static void runQuickTests() throws Exception {\n   public static boolean downloadMinio() throws IOException {\n     String url = \"https://dl.min.io/server/minio/release/\";\n     if (OS.contains(\"linux\")) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8df66a9af4bce085e070e5908a787c7563d0fc2"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzcwNDAzOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzozNDoxNFrOGcc0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzozNDoxNFrOGcc0yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ4NTU3Ng==", "bodyText": "This new line is not required.", "url": "https://github.com/minio/minio-java/pull/955#discussion_r432485576", "createdAt": "2020-05-29T13:34:14Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -31,20 +31,22 @@ MinioClient s3Client = new MinioClient(\"https://s3.amazonaws.com\",\n | [`getBucketPolicy`](#getBucketPolicy)                         | [`getPresignedObjectUrl`](#getPresignedObjectUrl)       |\n | [`getBucketTags`](#getBucketTags)                             | [`isObjectLegalHoldEnabled`](#isObjectLegalHoldEnabled) |\n | [`getDefaultRetention`](#getDefaultRetention)                 | [`listObjects`](#listObjects)                           |\n-| [`listBuckets`](#listBuckets)                                 | [`presignedGetObject`](#presignedGetObject)             |\n-| [`listenBucketNotification`](#listenBucketNotification)       | [`presignedPostPolicy`](#presignedPostPolicy)           |\n-| [`listIncompleteUploads`](#listIncompleteUploads)             | [`presignedPutObject`](#presignedPutObject)             |\n-| [`makeBucket`](#makeBucket)                                   | [`putObject`](#putObject)                               |\n-| [`removeAllBucketNotification`](#removeAllBucketNotification) | [`removeObject`](#removeObject)                         |\n-| [`removeBucket`](#removeBucket)                               | [`removeObjects`](#removeObjects)                       |\n-| [`removeIncompleteUpload`](#removeIncompleteUpload)           | [`selectObjectContent`](#selectObjectContent)           |\n-| [`setBucketEncryption`](#setBucketEncryption)                 | [`setObjectRetention`](#setObjectRetention)             |\n-| [`setBucketLifeCycle`](#setBucketLifeCycle)                   | [`setObjectTags`](#setObjectTags)                       |\n-| [`setBucketNotification`](#setBucketNotification)             | [`statObject`](#statObject)                             |\n+| [`isVersioningEnabled`](#isVersioningEnabled)                 | [`presignedGetObject`](#presignedGetObject)             |\n+| [`listBuckets`](#listBuckets)                                 | [`presignedPostPolicy`](#presignedPostPolicy)           |\n+| [`listenBucketNotification`](#listenBucketNotification)       | [`presignedPutObject`](#presignedPutObject)             |\n+| [`listIncompleteUploads`](#listIncompleteUploads)             | [`putObject`](#putObject)                               |\n+| [`makeBucket`](#makeBucket)                                   | [`removeObject`](#removeObject)                         |\n+| [`removeAllBucketNotification`](#removeAllBucketNotification) | [`removeObjects`](#removeObjects)                       |\n+| [`removeBucket`](#removeBucket)                               | [`selectObjectContent`](#selectObjectContent)           |\n+| [`removeIncompleteUpload`](#removeIncompleteUpload)           | [`setObjectRetention`](#setObjectRetention)             |\n+| [`setBucketEncryption`](#setBucketEncryption)                 | [`setObjectTags`](#setObjectTags)                       |\n+| [`setBucketLifeCycle`](#setBucketLifeCycle)                   | [`statObject`](#statObject)                             |\n+| [`setBucketNotification`](#setBucketNotification)             |                                                         |\n | [`setBucketPolicy`](#setBucketPolicy)                         |                                                         |\n | [`setBucketTags`](#setBucketTags)                             |                                                         |\n | [`setDefaultRetention`](#setDefaultRetention)                 |                                                         |\n \n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6639ef2c94d4b9867689c37bb9d5eff0ab0b14a3"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 723, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}