{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODIwNjgx", "number": 844, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjowOTo1NVrODg8y1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTowNzoxMFrODoIqzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODc3MDc2OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjowOTo1NVrOFrcHBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1Mjo0MlrOFsWZmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5MzYzNg==", "bodyText": "can we have few tests with partSize set to specific numbers  e.g. here with new PutObjectOptions(9 * MB, 3)", "url": "https://github.com/minio/minio-java/pull/844#discussion_r381093636", "createdAt": "2020-02-19T06:09:55Z", "author": {"login": "nitisht"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1623,7 +1656,7 @@ public static void listIncompleteUploads_test1() throws Exception {\n     try {\n       String objectName = getRandomName();\n       try (final InputStream is = new ContentInputStream(6 * MB)) {\n-        client.putObject(bucketName, objectName, is, Long.valueOf( 9 * MB), null, null, nullContentType);\n+        client.putObject(bucketName, objectName, is, new PutObjectOptions(9 * MB, -1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564766d44baee332b6456ed190e830c14854f05a"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEwNzM3OA==", "bodyText": "listIncompleteUploads_test1() requires to have an incomplete (partial uploads). What do you mean by PutObjectOptions(9 * MB, 3)? Have you checked how those parameters mean to PutObjectOptions()?", "url": "https://github.com/minio/minio-java/pull/844#discussion_r381107378", "createdAt": "2020-02-19T07:01:20Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1623,7 +1656,7 @@ public static void listIncompleteUploads_test1() throws Exception {\n     try {\n       String objectName = getRandomName();\n       try (final InputStream is = new ContentInputStream(6 * MB)) {\n-        client.putObject(bucketName, objectName, is, Long.valueOf( 9 * MB), null, null, nullContentType);\n+        client.putObject(bucketName, objectName, is, new PutObjectOptions(9 * MB, -1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5MzYzNg=="}, "originalCommit": {"oid": "564766d44baee332b6456ed190e830c14854f05a"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5NTUzNA==", "bodyText": "Have you checked how those parameters mean to PutObjectOptions()?\n\nI have checked. What I mean to say is I don't see a test case with partSize set to anything other than -1. We should have few tests where we pass partSize value to confirm if uploads work fine", "url": "https://github.com/minio/minio-java/pull/844#discussion_r381995534", "createdAt": "2020-02-20T13:25:46Z", "author": {"login": "nitisht"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1623,7 +1656,7 @@ public static void listIncompleteUploads_test1() throws Exception {\n     try {\n       String objectName = getRandomName();\n       try (final InputStream is = new ContentInputStream(6 * MB)) {\n-        client.putObject(bucketName, objectName, is, Long.valueOf( 9 * MB), null, null, nullContentType);\n+        client.putObject(bucketName, objectName, is, new PutObjectOptions(9 * MB, -1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5MzYzNg=="}, "originalCommit": {"oid": "564766d44baee332b6456ed190e830c14854f05a"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyMjg0NQ==", "bodyText": "I am going to change few PutObjectOptions() with valid partSize on existing tests.", "url": "https://github.com/minio/minio-java/pull/844#discussion_r382022845", "createdAt": "2020-02-20T14:12:40Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1623,7 +1656,7 @@ public static void listIncompleteUploads_test1() throws Exception {\n     try {\n       String objectName = getRandomName();\n       try (final InputStream is = new ContentInputStream(6 * MB)) {\n-        client.putObject(bucketName, objectName, is, Long.valueOf( 9 * MB), null, null, nullContentType);\n+        client.putObject(bucketName, objectName, is, new PutObjectOptions(9 * MB, -1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5MzYzNg=="}, "originalCommit": {"oid": "564766d44baee332b6456ed190e830c14854f05a"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0ODY2NQ==", "bodyText": "thanks", "url": "https://github.com/minio/minio-java/pull/844#discussion_r382048665", "createdAt": "2020-02-20T14:52:42Z", "author": {"login": "nitisht"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1623,7 +1656,7 @@ public static void listIncompleteUploads_test1() throws Exception {\n     try {\n       String objectName = getRandomName();\n       try (final InputStream is = new ContentInputStream(6 * MB)) {\n-        client.putObject(bucketName, objectName, is, Long.valueOf( 9 * MB), null, null, nullContentType);\n+        client.putObject(bucketName, objectName, is, new PutObjectOptions(9 * MB, -1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5MzYzNg=="}, "originalCommit": {"oid": "564766d44baee332b6456ed190e830c14854f05a"}, "originalPosition": 337}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDExNjYxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTowNzoxMFrOF2gqvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMDo1OTozNlrOF2iqbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjY1Mg==", "bodyText": "Content-Type is passed as part of options' header will be overwritten by this. Is this the expected behavior?", "url": "https://github.com/minio/minio-java/pull/844#discussion_r392702652", "createdAt": "2020-03-15T19:07:10Z", "author": {"login": "kannappanr"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4163,9 +4163,7 @@ private void putObject(\n       headerMap.putAll(options.sse().headers());\n     }\n \n-    if (headerMap.get(\"Content-Type\") == null) {\n-      headerMap.put(\"Content-Type\", options.contentType());\n-    }\n+    headerMap.put(\"Content-Type\", options.contentType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa188b2a4bd610573ed2f5b953f418d79a68e393"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczNTM0Mw==", "bodyText": "Please check PutObjectOptions.contentType() method for precedence.", "url": "https://github.com/minio/minio-java/pull/844#discussion_r392735343", "createdAt": "2020-03-16T00:59:36Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4163,9 +4163,7 @@ private void putObject(\n       headerMap.putAll(options.sse().headers());\n     }\n \n-    if (headerMap.get(\"Content-Type\") == null) {\n-      headerMap.put(\"Content-Type\", options.contentType());\n-    }\n+    headerMap.put(\"Content-Type\", options.contentType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMjY1Mg=="}, "originalCommit": {"oid": "fa188b2a4bd610573ed2f5b953f418d79a68e393"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 767, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}