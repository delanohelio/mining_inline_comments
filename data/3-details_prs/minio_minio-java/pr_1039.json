{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjU5MjUx", "number": 1039, "title": "add ldap identity credential provider", "bodyText": "", "createdAt": "2020-08-15T04:35:48Z", "url": "https://github.com/minio/minio-java/pull/1039", "merged": true, "mergeCommit": {"oid": "0a9d90a5f41a1757319f294e7677cb5adaf5c0d5"}, "closed": true, "closedAt": "2020-09-17T11:39:10Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_1A52ABqjM2NjI2NTc4Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJpliqAFqTQ5MDI0MDUyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "160a709d06180a4a12633a3aee7ddba16cd6cdb7", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/160a709d06180a4a12633a3aee7ddba16cd6cdb7", "committedDate": "2020-08-15T04:34:59Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "d2fe83416a3caa870736dea1b0ff356c3cf703f1", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d2fe83416a3caa870736dea1b0ff356c3cf703f1", "committedDate": "2020-08-17T16:29:01Z", "message": "add ldap identity credential provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2fe83416a3caa870736dea1b0ff356c3cf703f1", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d2fe83416a3caa870736dea1b0ff356c3cf703f1", "committedDate": "2020-08-17T16:29:01Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "957c3c823cbc1eca098508cd53d6496f89a28000", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/957c3c823cbc1eca098508cd53d6496f89a28000", "committedDate": "2020-08-21T11:24:09Z", "message": "add ldap identity credential provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "957c3c823cbc1eca098508cd53d6496f89a28000", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/957c3c823cbc1eca098508cd53d6496f89a28000", "committedDate": "2020-08-21T11:24:09Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "152d313175b259eef0ae65a664c278a5c68c6b0b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/152d313175b259eef0ae65a664c278a5c68c6b0b", "committedDate": "2020-09-01T08:24:35Z", "message": "add ldap identity credential provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "152d313175b259eef0ae65a664c278a5c68c6b0b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/152d313175b259eef0ae65a664c278a5c68c6b0b", "committedDate": "2020-09-01T08:24:35Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "cdb10297a03429eb9c1e414b3fe4852b6bf109d4", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/cdb10297a03429eb9c1e414b3fe4852b6bf109d4", "committedDate": "2020-09-03T12:06:52Z", "message": "add ldap identity credential provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdb10297a03429eb9c1e414b3fe4852b6bf109d4", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/cdb10297a03429eb9c1e414b3fe4852b6bf109d4", "committedDate": "2020-09-03T12:06:52Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "d6035748ed30055c51eab80fabf3c46eba67688b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d6035748ed30055c51eab80fabf3c46eba67688b", "committedDate": "2020-09-03T12:57:19Z", "message": "add ldap identity credential provider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6035748ed30055c51eab80fabf3c46eba67688b", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/d6035748ed30055c51eab80fabf3c46eba67688b", "committedDate": "2020-09-03T12:57:19Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "76581999b527583e520465699f1714d6c8f591cf", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/76581999b527583e520465699f1714d6c8f591cf", "committedDate": "2020-09-14T05:28:45Z", "message": "add ldap identity credential provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MzM0MTYz", "url": "https://github.com/minio/minio-java/pull/1039#pullrequestreview-488334163", "createdAt": "2020-09-15T05:25:54Z", "commit": {"oid": "76581999b527583e520465699f1714d6c8f591cf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNToyNTo1NVrOHRxLXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjowMzo1MlrOHRx-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM5MzU2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Objects.requireNonNull(ldapUsername, \"LDAP username must not be null\");\n          \n          \n            \n                if (ldapUsername.isEmpty()) {\n          \n          \n            \n                  throw new IllegalArgumentException(\"LDAP username must not be empty\");\n          \n          \n            \n                }\n          \n          \n            \n                if (ldapUsername == null || ldapUsername.isEmpty()) {\n          \n          \n            \n                  throw new IllegalArgumentException(\"LDAP username must be provided\");\n          \n          \n            \n                }", "url": "https://github.com/minio/minio-java/pull/1039#discussion_r488393564", "createdAt": "2020-09-15T05:25:55Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/LdapIdentityProvider.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import io.minio.Xml;\n+import io.minio.errors.XmlParserException;\n+import java.io.IOException;\n+import java.util.Objects;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import okhttp3.HttpUrl;\n+import okhttp3.MediaType;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+import okhttp3.Response;\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Path;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Credential provider using <a\n+ * href=\"https://github.com/minio/minio/blob/master/docs/sts/ldap.md\">AssumeRoleWithLDAPIdentity\n+ * API</a>.\n+ */\n+public class LdapIdentityProvider extends AssumeRoleBaseProvider {\n+  private static final RequestBody EMPTY_BODY =\n+      RequestBody.create(new byte[] {}, MediaType.parse(\"application/octet-stream\"));\n+  private final Request request;\n+\n+  public LdapIdentityProvider(\n+      @Nonnull String stsEndpoint,\n+      @Nonnull String ldapUsername,\n+      @Nonnull String ldapPassword,\n+      @Nullable OkHttpClient customHttpClient) {\n+    super(customHttpClient);\n+    stsEndpoint = Objects.requireNonNull(stsEndpoint, \"STS endpoint cannot be empty\");\n+    HttpUrl url = Objects.requireNonNull(HttpUrl.parse(stsEndpoint), \"Invalid STS endpoint\");\n+    Objects.requireNonNull(ldapUsername, \"LDAP username must not be null\");\n+    if (ldapUsername.isEmpty()) {\n+      throw new IllegalArgumentException(\"LDAP username must not be empty\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76581999b527583e520465699f1714d6c8f591cf"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQwNjYyOA==", "bodyText": "Looking at how this code of parsing response and returning credentials is almost same in three other providers, here's an idea:\n\n\nIntroduce an interface called HasCredentials that has a method called credentials() and make all these response classes (AssumeRoleResponse, ClientGrantsResponse, WebIdentityResponse and AssumeRoleWithLdapIdentityResponse) implement it\n\n\nAdd an abstract method in AssumeRoleBaseProvider called getResponseClass() that just returns the response class and implement it in all its concrete subclasses. In case of this class (LdapIdentityProvider), it will return AssumeRoleWithLdapIdentityResponse.class\n\n\nMake AssumeRoleBaseProvider#parseResponse concrete and implement it as follows:\n\n\nprotected Credentials parseResponse(Response response) throws XmlParserException, IOException {\n    HasCredentials result =\n        Xml.unmarshal(getResponseClass(), response.body().charStream());\n    return result.credentials();\n  }\n\n\nRemove all the overridden versions of parseResponse from the subclasses.", "url": "https://github.com/minio/minio-java/pull/1039#discussion_r488406628", "createdAt": "2020-09-15T06:03:52Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/LdapIdentityProvider.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import io.minio.Xml;\n+import io.minio.errors.XmlParserException;\n+import java.io.IOException;\n+import java.util.Objects;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import okhttp3.HttpUrl;\n+import okhttp3.MediaType;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+import okhttp3.Response;\n+import org.simpleframework.xml.Element;\n+import org.simpleframework.xml.Namespace;\n+import org.simpleframework.xml.Path;\n+import org.simpleframework.xml.Root;\n+\n+/**\n+ * Credential provider using <a\n+ * href=\"https://github.com/minio/minio/blob/master/docs/sts/ldap.md\">AssumeRoleWithLDAPIdentity\n+ * API</a>.\n+ */\n+public class LdapIdentityProvider extends AssumeRoleBaseProvider {\n+  private static final RequestBody EMPTY_BODY =\n+      RequestBody.create(new byte[] {}, MediaType.parse(\"application/octet-stream\"));\n+  private final Request request;\n+\n+  public LdapIdentityProvider(\n+      @Nonnull String stsEndpoint,\n+      @Nonnull String ldapUsername,\n+      @Nonnull String ldapPassword,\n+      @Nullable OkHttpClient customHttpClient) {\n+    super(customHttpClient);\n+    stsEndpoint = Objects.requireNonNull(stsEndpoint, \"STS endpoint cannot be empty\");\n+    HttpUrl url = Objects.requireNonNull(HttpUrl.parse(stsEndpoint), \"Invalid STS endpoint\");\n+    Objects.requireNonNull(ldapUsername, \"LDAP username must not be null\");\n+    if (ldapUsername.isEmpty()) {\n+      throw new IllegalArgumentException(\"LDAP username must not be empty\");\n+    }\n+    Objects.requireNonNull(ldapPassword, \"LDAP password must not be null\");\n+\n+    HttpUrl.Builder urlBuilder =\n+        newUrlBuilder(url, \"AssumeRoleWithLDAPIdentity\", 0, null, null, null);\n+    url =\n+        urlBuilder\n+            .addQueryParameter(\"LDAPUsername\", ldapUsername)\n+            .addQueryParameter(\"LDAPPassword\", ldapPassword)\n+            .build();\n+    this.request = new Request.Builder().url(url).method(\"POST\", EMPTY_BODY).build();\n+  }\n+\n+  @Override\n+  protected Request getRequest() {\n+    return this.request;\n+  }\n+\n+  @Override\n+  protected Credentials parseResponse(Response response) throws XmlParserException, IOException {\n+    AssumeRoleWithLdapIdentityResponse result =\n+        Xml.unmarshal(AssumeRoleWithLdapIdentityResponse.class, response.body().charStream());\n+    return result.credentials();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76581999b527583e520465699f1714d6c8f591cf"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "967d88e58b4150dc379274bec6dbf48bb811ab70", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/967d88e58b4150dc379274bec6dbf48bb811ab70", "committedDate": "2020-09-15T17:13:08Z", "message": "add ldap identity credential provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3b0008fd07594f776ad6b9b3231a2b638e1c5e3", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c3b0008fd07594f776ad6b9b3231a2b638e1c5e3", "committedDate": "2020-09-15T17:13:08Z", "message": "address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76581999b527583e520465699f1714d6c8f591cf", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/76581999b527583e520465699f1714d6c8f591cf", "committedDate": "2020-09-14T05:28:45Z", "message": "add ldap identity credential provider"}, "afterCommit": {"oid": "c3b0008fd07594f776ad6b9b3231a2b638e1c5e3", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/c3b0008fd07594f776ad6b9b3231a2b638e1c5e3", "committedDate": "2020-09-15T17:13:08Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5Mjg4MTUw", "url": "https://github.com/minio/minio-java/pull/1039#pullrequestreview-489288150", "createdAt": "2020-09-16T05:38:05Z", "commit": {"oid": "c3b0008fd07594f776ad6b9b3231a2b638e1c5e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjQwNTI5", "url": "https://github.com/minio/minio-java/pull/1039#pullrequestreview-490240529", "createdAt": "2020-09-17T04:49:40Z", "commit": {"oid": "c3b0008fd07594f776ad6b9b3231a2b638e1c5e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1785, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}