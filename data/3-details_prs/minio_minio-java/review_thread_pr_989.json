{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTg4MDcw", "number": 989, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDozMDo0NlrOEIZGpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxNjo0OVrOEIx-Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjM1MzY0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/StatObjectArgs.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDozMDo0NlrOGoU09g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDozMDo0NlrOGoU09g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzNzQ2Mg==", "bodyText": "As the name suggest  StatObjectArgs is an builder type then why is the constructor used. IMO it should be renamed to StatObject similar to ComposeObject.", "url": "https://github.com/minio/minio-java/pull/989#discussion_r444937462", "createdAt": "2020-06-24T14:30:46Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/StatObjectArgs.java", "diffHunk": "@@ -17,11 +17,28 @@\n package io.minio;\n \n /** Argument class of MinioClient.statObject(). */\n-public class StatObjectArgs extends ObjectReadArgs {\n+public class StatObjectArgs extends ObjectConditionalReadArgs {\n+  protected StatObjectArgs() {}\n+\n+  public StatObjectArgs(ObjectConditionalReadArgs args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "756da23c85242fcbe47e38e0aed9b8f0fe560319"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQyMzQwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/ComposeSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxNTo1N1rOGo8xwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0MDoxNlrOGo943g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5MjAwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"buildHeaders(long objectSize, String etag) must be called prior this method invocation\");\n          \n          \n            \n                      \"buildHeaders(long objectSize, String etag) must be called prior to the invocation of this method\");", "url": "https://github.com/minio/minio-java/pull/989#discussion_r445592001", "createdAt": "2020-06-25T14:15:57Z", "author": {"login": "kannappanr"}, "path": "api/src/main/java/io/minio/ComposeSource.java", "diffHunk": "@@ -115,90 +109,36 @@ public void buildHeaders(long objectSize, String etag) throws IllegalArgumentExc\n           unmodifiedSince.format(Time.HTTP_HEADER_DATE_FORMAT));\n     }\n \n-    this.objectSize = objectSize;\n-    this.headers = headers;\n-  }\n-\n-  private void validateSize(long objectSize) throws IllegalArgumentException {\n-    if (offset != null && offset >= objectSize) {\n-      throw new IllegalArgumentException(\n-          \"source \"\n-              + bucketName\n-              + \"/\"\n-              + objectName\n-              + \": offset \"\n-              + offset\n-              + \" is beyond object size \"\n-              + objectSize);\n+    if (ssec != null) {\n+      headers.putAll(Multimaps.forMap(ssec.copySourceHeaders()));\n     }\n \n-    if (length != null) {\n-      if (length > objectSize) {\n-        throw new IllegalArgumentException(\n-            \"source \"\n-                + bucketName\n-                + \"/\"\n-                + objectName\n-                + \": length \"\n-                + length\n-                + \" is beyond object size \"\n-                + objectSize);\n-      }\n-\n-      if (offset + length > objectSize) {\n-        throw new IllegalArgumentException(\n-            \"source \"\n-                + bucketName\n-                + \"/\"\n-                + objectName\n-                + \": compose size \"\n-                + (offset + length)\n-                + \" is beyond object size \"\n-                + objectSize);\n-      }\n-    }\n+    this.headers = Multimaps.unmodifiableMultimap(headers);\n   }\n \n-  /** Argument builder of {@link ComposeSource}. */\n-  public static final class Builder extends ObjectVersionArgs.Builder<Builder, ComposeSource> {\n-\n-    public Builder offset(long offset) {\n-      validateNullOrPositive(offset, \"offset\");\n-      operations.add(args -> args.offset = offset);\n-      return this;\n-    }\n-\n-    public Builder length(long length) {\n-      validateNullOrPositive(length, \"length\");\n-      operations.add(args -> args.length = length);\n-      return this;\n+  public long objectSize() throws InternalException {\n+    if (this.objectSize == null) {\n+      throw new InternalException(\n+          \"buildHeaders(long objectSize, String etag) must be called prior this method invocation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "756da23c85242fcbe47e38e0aed9b8f0fe560319"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMDIwNg==", "bodyText": "added to", "url": "https://github.com/minio/minio-java/pull/989#discussion_r445610206", "createdAt": "2020-06-25T14:40:16Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/ComposeSource.java", "diffHunk": "@@ -115,90 +109,36 @@ public void buildHeaders(long objectSize, String etag) throws IllegalArgumentExc\n           unmodifiedSince.format(Time.HTTP_HEADER_DATE_FORMAT));\n     }\n \n-    this.objectSize = objectSize;\n-    this.headers = headers;\n-  }\n-\n-  private void validateSize(long objectSize) throws IllegalArgumentException {\n-    if (offset != null && offset >= objectSize) {\n-      throw new IllegalArgumentException(\n-          \"source \"\n-              + bucketName\n-              + \"/\"\n-              + objectName\n-              + \": offset \"\n-              + offset\n-              + \" is beyond object size \"\n-              + objectSize);\n+    if (ssec != null) {\n+      headers.putAll(Multimaps.forMap(ssec.copySourceHeaders()));\n     }\n \n-    if (length != null) {\n-      if (length > objectSize) {\n-        throw new IllegalArgumentException(\n-            \"source \"\n-                + bucketName\n-                + \"/\"\n-                + objectName\n-                + \": length \"\n-                + length\n-                + \" is beyond object size \"\n-                + objectSize);\n-      }\n-\n-      if (offset + length > objectSize) {\n-        throw new IllegalArgumentException(\n-            \"source \"\n-                + bucketName\n-                + \"/\"\n-                + objectName\n-                + \": compose size \"\n-                + (offset + length)\n-                + \" is beyond object size \"\n-                + objectSize);\n-      }\n-    }\n+    this.headers = Multimaps.unmodifiableMultimap(headers);\n   }\n \n-  /** Argument builder of {@link ComposeSource}. */\n-  public static final class Builder extends ObjectVersionArgs.Builder<Builder, ComposeSource> {\n-\n-    public Builder offset(long offset) {\n-      validateNullOrPositive(offset, \"offset\");\n-      operations.add(args -> args.offset = offset);\n-      return this;\n-    }\n-\n-    public Builder length(long length) {\n-      validateNullOrPositive(length, \"length\");\n-      operations.add(args -> args.length = length);\n-      return this;\n+  public long objectSize() throws InternalException {\n+    if (this.objectSize == null) {\n+      throw new InternalException(\n+          \"buildHeaders(long objectSize, String etag) must be called prior this method invocation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5MjAwMQ=="}, "originalCommit": {"oid": "756da23c85242fcbe47e38e0aed9b8f0fe560319"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQyNzcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/ObjectConditionalReadArgs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoxNjo0OVrOGo80Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0MjoyOFrOGo9_EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5MjY2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * (C) 2019 MinIO, Inc.\n          \n          \n            \n             * (C) 2020 MinIO, Inc.", "url": "https://github.com/minio/minio-java/pull/989#discussion_r445592666", "createdAt": "2020-06-25T14:16:49Z", "author": {"login": "kannappanr"}, "path": "api/src/main/java/io/minio/ObjectConditionalReadArgs.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage,\n+ * (C) 2019 MinIO, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "756da23c85242fcbe47e38e0aed9b8f0fe560319"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMTc5Mw==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/989#discussion_r445611793", "createdAt": "2020-06-25T14:42:28Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/ObjectConditionalReadArgs.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage,\n+ * (C) 2019 MinIO, Inc.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5MjY2Ng=="}, "originalCommit": {"oid": "756da23c85242fcbe47e38e0aed9b8f0fe560319"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 748, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}