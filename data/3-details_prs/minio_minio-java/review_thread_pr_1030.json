{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NDA3MTky", "number": 1030, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNTo1MVrOEVLyvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzo1NzoxOFrOEWThHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjQ4NzY0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNTo1MVrOG7zHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjowNTo1MVrOG7zHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1NjY2Nw==", "bodyText": "in the case of MinIO Role is not required - just the Replication Arn. Might want to highlight use with MinIO rather than with Aws here.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465356667", "createdAt": "2020-08-04T22:05:51Z", "author": {"login": "poornas"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5725,6 +5725,132 @@ public void deleteBucketNotification(DeleteBucketNotificationArgs args)\n     response.close();\n   }\n \n+  /**\n+   * Gets bucket replication configuration of a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * String config =\n+   *     minioClient.getBucketReplication(\n+   *         GetBucketReplicationArgs.builder().bucket(\"my-bucketname\").build());\n+   * }</pre>\n+   *\n+   * @param args {@link GetBucketReplicationArgs} object.\n+   * @return String - Bucket replication configuration as JSON string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getBucketReplication(GetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    try (Response response = executeGet(args, null, newMultimap(\"replication\", \"\"))) {\n+      return response.body().string();\n+    }\n+  }\n+\n+  /**\n+   * Sets bucket replication configuration to a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * // Lets consider variable 'config' contains below XML String;\n+   * // <ReplicationConfiguration>\n+   * //   <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjcyMTc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzo1MDoyMVrOG71R8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzo1MDoyMVrOG71R8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MjExNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Deletes bucket replication configuration to a bucket.\n          \n          \n            \n               * Deletes bucket replication configuration from a bucket.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465392115", "createdAt": "2020-08-04T23:50:21Z", "author": {"login": "poornas"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5725,6 +5725,132 @@ public void deleteBucketNotification(DeleteBucketNotificationArgs args)\n     response.close();\n   }\n \n+  /**\n+   * Gets bucket replication configuration of a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * String config =\n+   *     minioClient.getBucketReplication(\n+   *         GetBucketReplicationArgs.builder().bucket(\"my-bucketname\").build());\n+   * }</pre>\n+   *\n+   * @param args {@link GetBucketReplicationArgs} object.\n+   * @return String - Bucket replication configuration as JSON string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getBucketReplication(GetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    try (Response response = executeGet(args, null, newMultimap(\"replication\", \"\"))) {\n+      return response.body().string();\n+    }\n+  }\n+\n+  /**\n+   * Sets bucket replication configuration to a bucket.\n+   *\n+   * <pre>Example:{@code\n+   * // Lets consider variable 'config' contains below XML String;\n+   * // <ReplicationConfiguration>\n+   * //   <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\n+   * //   <Rule>\n+   * //     <ID>rule1</ID>\n+   * //     <Status>Enabled</Status>\n+   * //     <Priority>1</Priority>\n+   * //     <DeleteMarkerReplication>\n+   * //        <Status>Disabled</Status>\n+   * //     </DeleteMarkerReplication>\n+   * //     <Filter>\n+   * //        <And>\n+   * //            <Prefix>TaxDocs</Prefix>\n+   * //            <Tag>\n+   * //              <Key>key1</Key>\n+   * //              <Value>value1</Value>\n+   * //            </Tag>\n+   * //            <Tag>\n+   * //              <Key>key1</Key>\n+   * //              <Value>value1</Value>\n+   * //            </Tag>\n+   * //        </And>\n+   * //     </Filter>\n+   * //     <Destination>\n+   * //       <Bucket>arn:aws:s3:::exampletargetbucket</Bucket>\n+   * //     </Destination>\n+   * //   </Rule>\n+   * // </ReplicationConfiguration>\n+   *\n+   * minioClient.setBucketReplication(\n+   *     SetBucketReplicationArgs.builder().bucket(\"my-bucketname\").config(config).build());\n+   * }</pre>\n+   *\n+   * @param args {@link SetBucketReplicationArgs} object.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public void setBucketReplication(SetBucketReplicationArgs args)\n+      throws ErrorResponseException, InsufficientDataException, InternalException,\n+          InvalidBucketNameException, InvalidKeyException, InvalidResponseException, IOException,\n+          NoSuchAlgorithmException, ServerException, XmlParserException {\n+    checkArgs(args);\n+    Response response =\n+        executePut(\n+            args,\n+            (args.objectLockToken() != null)\n+                ? newMultimap(\"x-amz-bucket-object-lock-token\", args.objectLockToken())\n+                : null,\n+            newMultimap(\"replication\", \"\"),\n+            args.config(),\n+            0);\n+    response.close();\n+  }\n+\n+  /**\n+   * Deletes bucket replication configuration to a bucket.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgxMjQ4OnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDozNzo0NFrOG72GNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDozNzo0NFrOG72GNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | ``args``  | _[DeleteBucketReplicationArgs]_ | Argumnets.  |\n          \n          \n            \n            | ``args``  | _[DeleteBucketReplicationArgs]_ | Arguments.  |", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465405493", "createdAt": "2020-08-05T00:37:44Z", "author": {"login": "poornas"}, "path": "docs/API.md", "diffHunk": "@@ -319,6 +322,23 @@ __Example__\n minioClient.deleteBucketPolicy(DeleteBucketPolicyArgs.builder().bucket(\"my-bucketname\").build());\n ```\n \n+<a name=\"deleteBucketReplication\"></a>\n+### deleteBucketReplication(DeleteBucketReplicationArgs args)\n+`private void deleteBucketReplication(DeleteBucketReplicationArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#deleteBucketReplication-io.minio.DeleteBucketReplicationArgs-)_\n+\n+Deletes bucket replication configuration of a bucket.\n+\n+__Parameters__\n+| Parameter | Type                            | Description |\n+|:----------|:--------------------------------|:------------|\n+| ``args``  | _[DeleteBucketReplicationArgs]_ | Argumnets.  |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgyMjIyOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0MzozOFrOG72L0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0MzozOFrOG72L0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNjkzMA==", "bodyText": "document ReplicationArn here instead of Role based Arn. See previous comment", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465406930", "createdAt": "2020-08-05T00:43:38Z", "author": {"login": "poornas"}, "path": "docs/API.md", "diffHunk": "@@ -935,6 +978,53 @@ minioClient.setBucketPolicy(\n     SetBucketPolicyArgs.builder().bucket(\"my-bucketname\").config(policyJson).build());\n ```\n \n+<a name=\"setBucketReplication\"></a>\n+### setBucketReplication(SetBucketReplicationArgs args)\n+`public void setBucketReplication(SetBucketReplicationArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#setBucketReplication-io.minio.SetBucketReplicationArgs-)_\n+\n+Sets bucket replication configuration to a bucket.\n+\n+__Parameters__\n+\n+| Parameter | Type                         | Description |\n+|:----------|:-----------------------------|:------------|\n+| ``args``  | _[SetBucketReplicationArgs]_ | Arguments.  |\n+\n+__Example__\n+```java\n+// Lets consider variable 'config' contains below XML String;\n+// <ReplicationConfiguration>\n+//   <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgyMjk2OnYy", "diffSide": "RIGHT", "path": "examples/DeleteBucketReplication.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NDowOFrOG72MSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NDowOFrOG72MSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407051", "createdAt": "2020-08-05T00:44:08Z", "author": {"login": "poornas"}, "path": "examples/DeleteBucketReplication.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgyNDU1OnYy", "diffSide": "RIGHT", "path": "examples/GetBucketReplication.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NDo0OVrOG72NMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NDo0OVrOG72NMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzI4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407282", "createdAt": "2020-08-05T00:44:49Z", "author": {"login": "poornas"}, "path": "examples/GetBucketReplication.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgyNTA2OnYy", "diffSide": "RIGHT", "path": "examples/SetBucketReplication.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NTowNFrOG72Ndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NTowNFrOG72Ndg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzM1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n          \n          \n            \n             * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407350", "createdAt": "2020-08-05T00:45:04Z", "author": {"login": "poornas"}, "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjgyODM3OnYy", "diffSide": "RIGHT", "path": "examples/SetBucketReplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDo0NzowOFrOG72Pcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDo0Mzo0OFrOG9MSDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzg1OQ==", "bodyText": "Use ReplicationArn instead of Role - arn:minio:replica::28285312-2dec-4982-b14d-c24e99d472e6:exampletargetbucket", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r465407859", "createdAt": "2020-08-05T00:47:08Z", "author": {"login": "poornas"}, "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      String config =\n+          \"<ReplicationConfiguration>\"\n+              + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNzU1MQ==", "bodyText": "Not necessarily be minio server specific string. Role value needs to be known before using the API. Any valid string works here.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466817551", "createdAt": "2020-08-07T04:43:48Z", "author": {"login": "balamurugana"}, "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2019 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      String config =\n+          \"<ReplicationConfiguration>\"\n+              + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNzg1OQ=="}, "originalCommit": {"oid": "544c3ee84bcce1856894a1cb36e02c2f57d853d8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTU0MzIxOnYy", "diffSide": "RIGHT", "path": "examples/SetBucketReplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMTo0MDowMVrOG9JnZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNDozNjo1MVrOG9MLww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3Mzg2Mw==", "bodyText": "ReplicationArn was renamed to Role, so what you originally had is good - you can remove any references to ReplicationArn", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466773863", "createdAt": "2020-08-07T01:40:01Z", "author": {"login": "poornas"}, "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      /* Amazon S3 specific configuration. */\n+      // String config =\n+      //     \"<ReplicationConfiguration>\"\n+      //         + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"\n+      //         + \"  <Rule>\"\n+      //         + \"    <ID>rule1</ID>\"\n+      //         + \"    <Status>Enabled</Status>\"\n+      //         + \"    <Priority>1</Priority>\"\n+      //         + \"    <DeleteMarkerReplication>\"\n+      //         + \"       <Status>Disabled</Status>\"\n+      //         + \"    </DeleteMarkerReplication>\"\n+      //         + \"    <Filter>\"\n+      //         + \"       <And>\"\n+      //         + \"           <Prefix>TaxDocs</Prefix>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"       </And>\"\n+      //         + \"    </Filter>\"\n+      //         + \"    <Destination>\"\n+      //         + \"      <Bucket>arn:aws:s3:::exampletargetbucket</Bucket>\"\n+      //         + \"    </Destination>\"\n+      //         + \"  </Rule>\"\n+      //         + \"</ReplicationConfiguration>\";\n+\n+      /* MinIO server specific configuration. */\n+      String config =\n+          \"{\"\n+              + \"  \\\"ReplicationArn\\\" :\\\"arn:minio:replica::c5be6b16-769d-432a-9ef1-4567081f3566:destbucket\\\",\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8f0ac9dbc95427bfd6015f10db1d6d6857c40cd"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNTkzOQ==", "bodyText": "No problem. Removed all minio server specific references.", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r466815939", "createdAt": "2020-08-07T04:36:51Z", "author": {"login": "balamurugana"}, "path": "examples/SetBucketReplication.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.minio.MinioClient;\n+import io.minio.SetBucketReplicationArgs;\n+import io.minio.errors.MinioException;\n+import java.io.IOException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class SetBucketReplication {\n+  /** MinioClient.setBucketReplication() example. */\n+  public static void main(String[] args)\n+      throws IOException, NoSuchAlgorithmException, InvalidKeyException {\n+    try {\n+      /* play.min.io for test and development. */\n+      MinioClient minioClient =\n+          MinioClient.builder()\n+              .endpoint(\"https://play.min.io\")\n+              .credentials(\"Q3AM3UQ867SPQQA43P2F\", \"zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG\")\n+              .build();\n+\n+      /* Amazon S3: */\n+      // MinioClient minioClient =\n+      //     MinioClient.builder()\n+      //         .endpoint(\"https://s3.amazonaws.com\")\n+      //         .credentials(\"YOUR-ACCESSKEY\", \"YOUR-SECRETACCESSKEY\")\n+      //         .build();\n+\n+      /* Amazon S3 specific configuration. */\n+      // String config =\n+      //     \"<ReplicationConfiguration>\"\n+      //         + \"  <Role>arn:aws:iam::35667example:role/CrossRegionReplicationRoleForS3</Role>\"\n+      //         + \"  <Rule>\"\n+      //         + \"    <ID>rule1</ID>\"\n+      //         + \"    <Status>Enabled</Status>\"\n+      //         + \"    <Priority>1</Priority>\"\n+      //         + \"    <DeleteMarkerReplication>\"\n+      //         + \"       <Status>Disabled</Status>\"\n+      //         + \"    </DeleteMarkerReplication>\"\n+      //         + \"    <Filter>\"\n+      //         + \"       <And>\"\n+      //         + \"           <Prefix>TaxDocs</Prefix>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"           <Tag>\"\n+      //         + \"             <Key>key1</Key>\"\n+      //         + \"             <Value>value1</Value>\"\n+      //         + \"           </Tag>\"\n+      //         + \"       </And>\"\n+      //         + \"    </Filter>\"\n+      //         + \"    <Destination>\"\n+      //         + \"      <Bucket>arn:aws:s3:::exampletargetbucket</Bucket>\"\n+      //         + \"    </Destination>\"\n+      //         + \"  </Rule>\"\n+      //         + \"</ReplicationConfiguration>\";\n+\n+      /* MinIO server specific configuration. */\n+      String config =\n+          \"{\"\n+              + \"  \\\"ReplicationArn\\\" :\\\"arn:minio:replica::c5be6b16-769d-432a-9ef1-4567081f3566:destbucket\\\",\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3Mzg2Mw=="}, "originalCommit": {"oid": "f8f0ac9dbc95427bfd6015f10db1d6d6857c40cd"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODE3MDU3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNTo0MVrOG9iQOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzozNTo0MVrOG9iQOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE3NzUyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!config.isEmpty()) {\n          \n          \n            \n                    if (config.isEmpty()) {", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r467177528", "createdAt": "2020-08-07T17:35:41Z", "author": {"login": "poornas"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -3371,6 +3376,211 @@ public static void deleteObjectTags() throws Exception {\n     }\n   }\n \n+  public static void setBucketReplication() throws Exception {\n+    String methodName = \"setBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        mintSuccessLog(methodName, null, startTime);\n+      } finally {\n+        client.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());\n+      }\n+    } catch (Exception e) {\n+      handleException(methodName, null, startTime, e);\n+    }\n+  }\n+\n+  public static void getBucketReplication() throws Exception {\n+    String methodName = \"getBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!\"\".equals(config)) {\n+          throw new Exception(\"config: expected: <empty>, got: \" + config);\n+        }\n+\n+        config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!config.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e894ca00d0cb1041de38c616903d90a16bc438a0"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODIzOTAyOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzo1NzoxOFrOG9i5mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNzo1NzoxOFrOG9i5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4ODEyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      throw new Exception(\"config: non-empty string\");\n          \n          \n            \n                      throw new Exception(\"config: expected non-empty string\");", "url": "https://github.com/minio/minio-java/pull/1030#discussion_r467188121", "createdAt": "2020-08-07T17:57:18Z", "author": {"login": "poornas"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -3371,6 +3376,211 @@ public static void deleteObjectTags() throws Exception {\n     }\n   }\n \n+  public static void setBucketReplication() throws Exception {\n+    String methodName = \"setBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        mintSuccessLog(methodName, null, startTime);\n+      } finally {\n+        client.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());\n+      }\n+    } catch (Exception e) {\n+      handleException(methodName, null, startTime, e);\n+    }\n+  }\n+\n+  public static void getBucketReplication() throws Exception {\n+    String methodName = \"getBucketReplication()\";\n+    if (!mintEnv) {\n+      System.out.println(methodName);\n+    }\n+\n+    if (replicationRole == null || replicationBucketArn == null) {\n+      mintIgnoredLog(methodName, \"\", System.currentTimeMillis());\n+      return;\n+    }\n+\n+    long startTime = System.currentTimeMillis();\n+    String bucketName = getRandomName();\n+    try {\n+      client.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());\n+      client.enableVersioning(EnableVersioningArgs.builder().bucket(bucketName).build());\n+      try {\n+        String config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!\"\".equals(config)) {\n+          throw new Exception(\"config: expected: <empty>, got: \" + config);\n+        }\n+\n+        config =\n+            \"<ReplicationConfiguration>\"\n+                + \"  <Role>\"\n+                + replicationRole\n+                + \"</Role>\"\n+                + \"  <Rule>\"\n+                + \"    <ID>rule1</ID>\"\n+                + \"    <Status>Enabled</Status>\"\n+                + \"    <Priority>1</Priority>\"\n+                + \"    <DeleteMarkerReplication>\"\n+                + \"      <Status>Disabled</Status>\"\n+                + \"    </DeleteMarkerReplication>\"\n+                + \"    <Filter>\"\n+                + \"      <And>\"\n+                + \"        <Prefix>TaxDocs</Prefix>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key1</Key>\"\n+                + \"          <Value>value1</Value>\"\n+                + \"        </Tag>\"\n+                + \"        <Tag>\"\n+                + \"          <Key>key2</Key>\"\n+                + \"          <Value>value2</Value>\"\n+                + \"        </Tag>\"\n+                + \"      </And>\"\n+                + \"    </Filter>\"\n+                + \"    <Destination>\"\n+                + \"      <Bucket>\"\n+                + replicationBucketArn\n+                + \"</Bucket>\"\n+                + \"    </Destination>\"\n+                + \"  </Rule>\"\n+                + \"</ReplicationConfiguration>\";\n+        client.setBucketReplication(\n+            SetBucketReplicationArgs.builder().bucket(bucketName).config(config).build());\n+        config =\n+            client.getBucketReplication(\n+                GetBucketReplicationArgs.builder().bucket(bucketName).build());\n+        if (!config.isEmpty()) {\n+          throw new Exception(\"config: non-empty string\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e894ca00d0cb1041de38c616903d90a16bc438a0"}, "originalPosition": 159}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 597, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}