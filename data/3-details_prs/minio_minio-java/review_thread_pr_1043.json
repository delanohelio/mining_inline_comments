{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4OTUzOTYw", "number": 1043, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNToxMzowOVrOEZySzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNToyNTo0N1rOEZylVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDczODY5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNToxMzowOVrOHCzmiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDozNzoxMlrOHDpO-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcwNDY1MQ==", "bodyText": "ChainedProvider might sound better", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r472704651", "createdAt": "2020-08-19T05:13:09Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4MzM1NA==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r473583354", "createdAt": "2020-08-20T04:37:12Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcwNDY1MQ=="}, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDc4MDU0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNToyNDozMVrOHC0Cew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNjoxMzo0NFrOHEJB_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxMTgwMw==", "bodyText": "Not sure if synchronizing this block helps. Making the fetch method itself synchronized might be better.", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r472711803", "createdAt": "2020-08-19T05:24:31Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {\n+  private final List<Provider> providers;\n+  private Provider currentProvider;\n+  private Credentials credentials;\n+\n+  public ChainProvider(@Nonnull Provider... providers) {\n+    this.providers = Arrays.asList(providers);\n+  }\n+\n+  @Override\n+  public Credentials fetch() {\n+    if (this.credentials != null && !this.credentials.isExpired()) {\n+      return this.credentials;\n+    }\n+\n+    Credentials credentials = null;\n+\n+    if (currentProvider != null) {\n+      try {\n+        credentials = currentProvider.fetch();\n+      } catch (IllegalStateException e) {\n+        // Ignore and fallback to iteration.\n+      }\n+    }\n+\n+    if (credentials != null) {\n+      synchronized (this) {\n+        this.credentials = credentials;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NDk2OQ==", "bodyText": "If entire method is locked in execution, fetch() becomes sequential execution, that leads to API execution sequential.", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r473584969", "createdAt": "2020-08-20T04:43:17Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {\n+  private final List<Provider> providers;\n+  private Provider currentProvider;\n+  private Credentials credentials;\n+\n+  public ChainProvider(@Nonnull Provider... providers) {\n+    this.providers = Arrays.asList(providers);\n+  }\n+\n+  @Override\n+  public Credentials fetch() {\n+    if (this.credentials != null && !this.credentials.isExpired()) {\n+      return this.credentials;\n+    }\n+\n+    Credentials credentials = null;\n+\n+    if (currentProvider != null) {\n+      try {\n+        credentials = currentProvider.fetch();\n+      } catch (IllegalStateException e) {\n+        // Ignore and fallback to iteration.\n+      }\n+    }\n+\n+    if (credentials != null) {\n+      synchronized (this) {\n+        this.credentials = credentials;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxMTgwMw=="}, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEwNDMxNg==", "bodyText": "Can you please help me understand how the current synchronization helps? Maybe with an example use case of concurrent requests.", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r474104316", "createdAt": "2020-08-20T16:13:44Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {\n+  private final List<Provider> providers;\n+  private Provider currentProvider;\n+  private Credentials credentials;\n+\n+  public ChainProvider(@Nonnull Provider... providers) {\n+    this.providers = Arrays.asList(providers);\n+  }\n+\n+  @Override\n+  public Credentials fetch() {\n+    if (this.credentials != null && !this.credentials.isExpired()) {\n+      return this.credentials;\n+    }\n+\n+    Credentials credentials = null;\n+\n+    if (currentProvider != null) {\n+      try {\n+        credentials = currentProvider.fetch();\n+      } catch (IllegalStateException e) {\n+        // Ignore and fallback to iteration.\n+      }\n+    }\n+\n+    if (credentials != null) {\n+      synchronized (this) {\n+        this.credentials = credentials;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxMTgwMw=="}, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDc4NjE0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNToyNTo0OFrOHC0GFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDo0NDowNlrOHDpWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxMjcyNg==", "bodyText": "Might want to skip doing this for currentProvider as that has already happened in previous lines.", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r472712726", "createdAt": "2020-08-19T05:25:48Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {\n+  private final List<Provider> providers;\n+  private Provider currentProvider;\n+  private Credentials credentials;\n+\n+  public ChainProvider(@Nonnull Provider... providers) {\n+    this.providers = Arrays.asList(providers);\n+  }\n+\n+  @Override\n+  public Credentials fetch() {\n+    if (this.credentials != null && !this.credentials.isExpired()) {\n+      return this.credentials;\n+    }\n+\n+    Credentials credentials = null;\n+\n+    if (currentProvider != null) {\n+      try {\n+        credentials = currentProvider.fetch();\n+      } catch (IllegalStateException e) {\n+        // Ignore and fallback to iteration.\n+      }\n+    }\n+\n+    if (credentials != null) {\n+      synchronized (this) {\n+        this.credentials = credentials;\n+      }\n+\n+      return this.credentials;\n+    }\n+\n+    for (Provider provider : providers) {\n+      try {\n+        credentials = provider.fetch();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NTE5Mw==", "bodyText": "Its OK to try one more time in a loop.", "url": "https://github.com/minio/minio-java/pull/1043#discussion_r473585193", "createdAt": "2020-08-20T04:44:06Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/credentials/ChainProvider.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio.credentials;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.annotation.Nonnull;\n+\n+/** Chained credential provider work with list of credential providers. */\n+public class ChainProvider implements Provider {\n+  private final List<Provider> providers;\n+  private Provider currentProvider;\n+  private Credentials credentials;\n+\n+  public ChainProvider(@Nonnull Provider... providers) {\n+    this.providers = Arrays.asList(providers);\n+  }\n+\n+  @Override\n+  public Credentials fetch() {\n+    if (this.credentials != null && !this.credentials.isExpired()) {\n+      return this.credentials;\n+    }\n+\n+    Credentials credentials = null;\n+\n+    if (currentProvider != null) {\n+      try {\n+        credentials = currentProvider.fetch();\n+      } catch (IllegalStateException e) {\n+        // Ignore and fallback to iteration.\n+      }\n+    }\n+\n+    if (credentials != null) {\n+      synchronized (this) {\n+        this.credentials = credentials;\n+      }\n+\n+      return this.credentials;\n+    }\n+\n+    for (Provider provider : providers) {\n+      try {\n+        credentials = provider.fetch();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjcxMjcyNg=="}, "originalCommit": {"oid": "64d52ce3350fb523d781c282cfec8ccfee73d5b3"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 615, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}