{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDMwNzkz", "number": 834, "title": "Add overloaded Listen Bucket Notification method", "bodyText": "There was an infine while loop in listenBucketNotification which kept on reading for any event on the  server.\nWith this PR, For the functional  test listenBucketNotification_test1 once the event is received the infinite loop is stopped by calling the method client.turnOffListening() .", "createdAt": "2020-01-06T07:44:17Z", "url": "https://github.com/minio/minio-java/pull/834", "merged": true, "mergeCommit": {"oid": "69e26d82ae8a074ab364f510bd0439c8f6fe5eef"}, "closed": true, "closedAt": "2020-01-19T06:20:32Z", "author": {"login": "sinhaashish"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb324BtAFqTMzODk5NTQ2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7x1ViAFqTM0NDk3OTY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTk1NDY1", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-338995465", "createdAt": "2020-01-07T01:56:49Z", "commit": {"oid": "3f4146b1d1727af0f73a71183b0e0a227cdd6d30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMTo1Njo0OVrOFauHsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMTo1Njo0OVrOFauHsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU2MjkyOQ==", "bodyText": "My suggestion is to deprecate this style of API and introduce lazy eval'ed style like\npublic Iterable<Result<NotificationInfo>> listenBucketNotification(String bucketName, String prefix, String suffix, String[] events)\nIf we stick with current style, the fix is just while (continueListening || scanner.hasNext())", "url": "https://github.com/minio/minio-java/pull/834#discussion_r363562929", "createdAt": "2020-01-07T01:56:49Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5741,12 +5743,16 @@ public void listenBucketNotification(String bucketName, String prefix, String su\n       scanner = new Scanner(response.body().charStream());\n       scanner.useDelimiter(\"\\n\");\n       while (scanner.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4146b1d1727af0f73a71183b0e0a227cdd6d30"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f4146b1d1727af0f73a71183b0e0a227cdd6d30", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/3f4146b1d1727af0f73a71183b0e0a227cdd6d30", "committedDate": "2020-01-06T07:40:58Z", "message": "Stop listening after the event is received"}, "afterCommit": {"oid": "d56034ae65e5693f62944d8b2e98fa48cbd8eb0f", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/d56034ae65e5693f62944d8b2e98fa48cbd8eb0f", "committedDate": "2020-01-11T20:18:55Z", "message": "Modify Listen Bucket Notification signature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQwNTM2", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-341540536", "createdAt": "2020-01-11T20:47:05Z", "commit": {"oid": "d56034ae65e5693f62944d8b2e98fa48cbd8eb0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQyMDo0NzowNVrOFcm3uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQyMDo0NzowNVrOFcm3uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU0MTMwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *  client.listenBucketNotification(\"sinha1\", \"\", \"\", events).iterator();\n          \n          \n            \n               *  client.listenBucketNotification(\"bucketname\", \"\", \"\", events).iterator();", "url": "https://github.com/minio/minio-java/pull/834#discussion_r365541305", "createdAt": "2020-01-11T20:47:05Z", "author": {"login": "kannappanr"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5692,77 +5693,110 @@ public void removeIncompleteUpload(String bucketName, String objectName)\n     }\n   }\n \n+\n   /**\n-   * Listen to bucket notifications.\n+   * Listen to bucket notifications. As bucket notification are lazily executed, its required\n+   * to iterate the returned Iterable.\n+   *\n+   * </p><b>Example:</b><br>\n+\n+   * <pre>{@code\n+   * Iterator<Result<NotificationInfo>> it =\n+   *  client.listenBucketNotification(\"sinha1\", \"\", \"\", events).iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d56034ae65e5693f62944d8b2e98fa48cbd8eb0f"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d56034ae65e5693f62944d8b2e98fa48cbd8eb0f", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/d56034ae65e5693f62944d8b2e98fa48cbd8eb0f", "committedDate": "2020-01-11T20:18:55Z", "message": "Modify Listen Bucket Notification signature"}, "afterCommit": {"oid": "fbc3c874e0051fbfe4d87b00a2e4cfd2464fe21a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/fbc3c874e0051fbfe4d87b00a2e4cfd2464fe21a", "committedDate": "2020-01-11T20:47:46Z", "message": "Modify Listen Bucket Notification signature"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbc3c874e0051fbfe4d87b00a2e4cfd2464fe21a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/fbc3c874e0051fbfe4d87b00a2e4cfd2464fe21a", "committedDate": "2020-01-11T20:47:46Z", "message": "Modify Listen Bucket Notification signature"}, "afterCommit": {"oid": "60846c612d4a20d493acbb0d13691ccdcc071cd4", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/60846c612d4a20d493acbb0d13691ccdcc071cd4", "committedDate": "2020-01-11T20:55:44Z", "message": "Modify Listen Bucket Notification signature"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60846c612d4a20d493acbb0d13691ccdcc071cd4", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/60846c612d4a20d493acbb0d13691ccdcc071cd4", "committedDate": "2020-01-11T20:55:44Z", "message": "Modify Listen Bucket Notification signature"}, "afterCommit": {"oid": "cd86d9d10141632371b21ab4f4ea1c183c6d9d4c", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/cd86d9d10141632371b21ab4f4ea1c183c6d9d4c", "committedDate": "2020-01-11T20:58:28Z", "message": "Modify Listen Bucket Notification signature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQxNTk1", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-341541595", "createdAt": "2020-01-11T21:16:45Z", "commit": {"oid": "cd86d9d10141632371b21ab4f4ea1c183c6d9d4c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjM3ODk1", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-341637895", "createdAt": "2020-01-13T04:43:51Z", "commit": {"oid": "cd86d9d10141632371b21ab4f4ea1c183c6d9d4c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDo0Mzo1MVrOFctQow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDo0Mzo1MVrOFctQow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NTk4Nw==", "bodyText": "major version change should remove all deprecated methods. you need to do in separate PR. current listenBucketNotification() should be retained and deprecated.", "url": "https://github.com/minio/minio-java/pull/834#discussion_r365645987", "createdAt": "2020-01-13T04:43:51Z", "author": {"login": "balamurugana"}, "path": "build.gradle", "diffHunk": "@@ -35,7 +35,7 @@ apply plugin: 'io.codearte.nexus-staging'\n \n allprojects {\n     group = 'io.minio'\n-    version = '6.0.12'\n+    version = '7.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd86d9d10141632371b21ab4f4ea1c183c6d9d4c"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd86d9d10141632371b21ab4f4ea1c183c6d9d4c", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/cd86d9d10141632371b21ab4f4ea1c183c6d9d4c", "committedDate": "2020-01-11T20:58:28Z", "message": "Modify Listen Bucket Notification signature"}, "afterCommit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ba39dca2d167a3dc3685ce62e6e09fe97ebc63af", "committedDate": "2020-01-13T13:12:42Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDgxMjYw", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-342081260", "createdAt": "2020-01-13T19:24:58Z", "commit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOToyNDo1OFrOFdB37A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOToyNDo1OFrOFdB37A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk4MzcyNA==", "bodyText": "This is not required if you are not having a breaking change", "url": "https://github.com/minio/minio-java/pull/834#discussion_r365983724", "createdAt": "2020-01-13T19:24:58Z", "author": {"login": "kannappanr"}, "path": "build.gradle", "diffHunk": "@@ -35,7 +35,7 @@ apply plugin: 'io.codearte.nexus-staging'\n \n allprojects {\n     group = 'io.minio'\n-    version = '6.0.12'\n+    version = '6.0.13'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDgxNTEx", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-342081511", "createdAt": "2020-01-13T19:25:20Z", "commit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOToyNToyMFrOFdB4rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOToyNToyMFrOFdB4rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk4MzkxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                version = '6.0.13'\n          \n          \n            \n                version = '6.0.12'", "url": "https://github.com/minio/minio-java/pull/834#discussion_r365983917", "createdAt": "2020-01-13T19:25:20Z", "author": {"login": "kannappanr"}, "path": "build.gradle", "diffHunk": "@@ -35,7 +35,7 @@ apply plugin: 'io.codearte.nexus-staging'\n \n allprojects {\n     group = 'io.minio'\n-    version = '6.0.12'\n+    version = '6.0.13'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba39dca2d167a3dc3685ce62e6e09fe97ebc63af", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ba39dca2d167a3dc3685ce62e6e09fe97ebc63af", "committedDate": "2020-01-13T13:12:42Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "793e1e0ae30f4e7ae9109dc0d54d1334cf740321", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/793e1e0ae30f4e7ae9109dc0d54d1334cf740321", "committedDate": "2020-01-14T03:59:17Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjg5NzI2", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-342289726", "createdAt": "2020-01-14T04:47:38Z", "commit": {"oid": "793e1e0ae30f4e7ae9109dc0d54d1334cf740321"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "793e1e0ae30f4e7ae9109dc0d54d1334cf740321", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/793e1e0ae30f4e7ae9109dc0d54d1334cf740321", "committedDate": "2020-01-14T03:59:17Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/e12e64cae1fcff6ce166078dba24d7d6f7cf03ea", "committedDate": "2020-01-15T12:52:53Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjUzNjEx", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343253611", "createdAt": "2020-01-15T14:24:37Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNDozN1rOFd58Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNDozN1rOFd58Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwMjI4Ng==", "bodyText": "do not make changes in deprecated methods instead you remove them in separate PR", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366902286", "createdAt": "2020-01-15T14:24:37Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5717,6 +5719,7 @@ public void removeIncompleteUpload(String bucketName, String objectName)\n    *\n    */\n \n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjU0NTU0", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343254554", "createdAt": "2020-01-15T14:25:53Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNTo1M1rOFd5-8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNTo1M1rOFd5-8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwMzAyNQ==", "bodyText": "this is wrong message. you would need to print the event", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366903025", "createdAt": "2020-01-15T14:25:53Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5763,6 +5770,56 @@ public void listenBucketNotification(String bucketName, String prefix, String su\n   }\n \n \n+\n+\n+  /**\n+   * Listen to bucket notifications. As bucket notification are lazily executed, its required\n+   * to iterate.\n+   *\n+   * </p><b>Example:</b><br>\n+   * <pre>{@code\n+   * String[] events = {\"s3:ObjectCreated:*\", \"s3:ObjectAccessed:*\"};\n+   *   try (CloseableIterator<Result<NotificationInfo>> ci = client\n+   *     .listenBucketNotification(\"bucket-name\", \"\", \"\", events).getMyCloseableIterator()) {\n+   *      while (ci.hasNext()) {\n+   *        NotificationInfo info = ci.next().get();\n+   *        if ( info != null) {\n+   *\n+   *      System.out.println(info.records[0].s3.bucket.name + \"/\"\n+   *          + info.records[0].s3.object.key + \" has been created\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjU1MjAz", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343255203", "createdAt": "2020-01-15T14:26:43Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNjo0M1rOFd6A1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyNjo0M1rOFd6A1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwMzUxMQ==", "bodyText": "you could use executeGet()", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366903511", "createdAt": "2020-01-15T14:26:43Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5763,6 +5770,56 @@ public void listenBucketNotification(String bucketName, String prefix, String su\n   }\n \n \n+\n+\n+  /**\n+   * Listen to bucket notifications. As bucket notification are lazily executed, its required\n+   * to iterate.\n+   *\n+   * </p><b>Example:</b><br>\n+   * <pre>{@code\n+   * String[] events = {\"s3:ObjectCreated:*\", \"s3:ObjectAccessed:*\"};\n+   *   try (CloseableIterator<Result<NotificationInfo>> ci = client\n+   *     .listenBucketNotification(\"bucket-name\", \"\", \"\", events).getMyCloseableIterator()) {\n+   *      while (ci.hasNext()) {\n+   *        NotificationInfo info = ci.next().get();\n+   *        if ( info != null) {\n+   *\n+   *      System.out.println(info.records[0].s3.bucket.name + \"/\"\n+   *          + info.records[0].s3.object.key + \" has been created\");\n+   *       break;\n+   *      }\n+   *    }\n+   *  }\n+   *  }</pre>\n+   *\n+   * @param bucketName Bucket name.\n+   * @param prefix Prefix of concerned objects events.\n+   * @param suffix Suffix of concerned objects events.\n+   * @param events List of events to watch.\n+   *\n+   * @return NotificationListener\n+   */\n+  public NotificationListener listenBucketNotification(String bucketName, String prefix,\n+      String suffix, String[] events)\n+    throws IOException, InvalidKeyException, NoSuchAlgorithmException, InsufficientDataException,\n+    InvalidResponseException, InternalException, NoResponseException, InvalidBucketNameException,\n+    XmlPullParserException, ErrorResponseException {\n+\n+    Multimap<String, String> queryParamMap = HashMultimap.create();\n+    queryParamMap.put(\"prefix\", prefix);\n+    queryParamMap.put(\"suffix\", suffix);\n+    for (String event : events) {\n+      queryParamMap.put(\"events\", event);\n+    }\n+    HttpResponse response = executeReq(Method.GET, getRegion(bucketName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjU2NzAz", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343256703", "createdAt": "2020-01-15T14:28:38Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyODozOVrOFd6FCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDoyODozOVrOFd6FCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNDU4NQ==", "bodyText": "cleanup all spacing and styling", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366904585", "createdAt": "2020-01-15T14:28:39Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjU4MDU5", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343258059", "createdAt": "2020-01-15T14:30:27Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMDoyN1rOFd6I_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMDoyN1rOFd6I_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNTU5Nw==", "bodyText": "this is incorrect. this class supposes to have implemented ClosableIterable", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366905597", "createdAt": "2020-01-15T14:30:27Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */\n+\n+  public  CloseableIterator<Result<NotificationInfo>> getMyCloseableIterator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjU5ODU1", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343259855", "createdAt": "2020-01-15T14:32:50Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMjo1MVrOFd6OOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMjo1MVrOFd6OOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNjkzNw==", "bodyText": "its not good to print exceptions", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366906937", "createdAt": "2020-01-15T14:32:51Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */\n+\n+  public  CloseableIterator<Result<NotificationInfo>> getMyCloseableIterator() {\n+    return new CloseableIterator<Result<NotificationInfo>>() {\n+\n+      @Override\n+      public boolean hasNext() {\n+        if (isClosed) {\n+          return false;\n+        }\n+        if (!NotificationListener.this.sc.hasNext()) {\n+          try {\n+            close();\n+          } catch (IOException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjYwMzQw", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343260340", "createdAt": "2020-01-15T14:33:33Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMzozM1rOFd6Pwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozMzozM1rOFd6Pwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNzMzMA==", "bodyText": "you would need to also check for empty events and ignore them here", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366907330", "createdAt": "2020-01-15T14:33:33Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */\n+\n+  public  CloseableIterator<Result<NotificationInfo>> getMyCloseableIterator() {\n+    return new CloseableIterator<Result<NotificationInfo>>() {\n+\n+      @Override\n+      public boolean hasNext() {\n+        if (isClosed) {\n+          return false;\n+        }\n+        if (!NotificationListener.this.sc.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjYxMDM1", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343261035", "createdAt": "2020-01-15T14:34:29Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozNDozMFrOFd6Rvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDozNDozMFrOFd6Rvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNzgzOQ==", "bodyText": "this while should be in hasNext()", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366907839", "createdAt": "2020-01-15T14:34:30Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */\n+\n+  public  CloseableIterator<Result<NotificationInfo>> getMyCloseableIterator() {\n+    return new CloseableIterator<Result<NotificationInfo>>() {\n+\n+      @Override\n+      public boolean hasNext() {\n+        if (isClosed) {\n+          return false;\n+        }\n+        if (!NotificationListener.this.sc.hasNext()) {\n+          try {\n+            close();\n+          } catch (IOException e) {\n+            e.printStackTrace();\n+          }\n+          return false;\n+        }\n+        return true;\n+      }\n+\n+      @Override\n+      public Result<NotificationInfo> next() {\n+        try {\n+          while (sc.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjY1NjU5", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343265659", "createdAt": "2020-01-15T14:40:32Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0MDozMlrOFd6fVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0MDozMlrOFd6fVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMTMxOA==", "bodyText": "below logic is crisp and clear\nif (!isClosed) {\n    try {\n        reader.close();\n        scanner.close();\n    } finally {\n        reader = null;\n        scanner = null;\n        isClosed = true;\n    }\n}", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366911318", "createdAt": "2020-01-15T14:40:32Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();\n+\n+  NotificationListener( Reader reader) {\n+    this.inputReader = reader;\n+\n+    this.sc = new Scanner(inputReader);\n+    this.sc.useDelimiter(\"\\n\");\n+  }\n+  /**\n+   * Return a closeable iterator.\n+   */\n+\n+  public  CloseableIterator<Result<NotificationInfo>> getMyCloseableIterator() {\n+    return new CloseableIterator<Result<NotificationInfo>>() {\n+\n+      @Override\n+      public boolean hasNext() {\n+        if (isClosed) {\n+          return false;\n+        }\n+        if (!NotificationListener.this.sc.hasNext()) {\n+          try {\n+            close();\n+          } catch (IOException e) {\n+            e.printStackTrace();\n+          }\n+          return false;\n+        }\n+        return true;\n+      }\n+\n+      @Override\n+      public Result<NotificationInfo> next() {\n+        try {\n+          while (sc.hasNext()) {\n+            notificationString = NotificationListener.this.sc.next().trim();\n+            if (!notificationString.equals(\"\")) {\n+              ni = mapper.readValue(notificationString, NotificationInfo.class);\n+              break;\n+            } else {\n+              continue;\n+            }\n+          }\n+        } catch (IOException e) {\n+          return new Result<>(null, e);\n+        }\n+        return new Result<>(ni, null);\n+      }\n+\n+      @Override\n+      public void close() throws IOException {\n+        if (!isClosed) {\n+          if (NotificationListener.this.inputReader != null) {\n+            inputReader.close();\n+          }\n+\n+          if (NotificationListener.this.sc != null) {\n+            sc.close();\n+          }\n+          isClosed = true;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjY4Nzc2", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-343268776", "createdAt": "2020-01-15T14:44:40Z", "commit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NDo0MVrOFd6oDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NDo0MVrOFd6oDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzU1MQ==", "bodyText": "use reader, scanner, notificationInfo instead of inputReader, sc, ni\ngroup relevant fields together reader, scanner and mapper, notificationInfo, then isClosed", "url": "https://github.com/minio/minio-java/pull/834#discussion_r366913551", "createdAt": "2020-01-15T14:44:41Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/NotificationListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package io.minio;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.minio.notification.NotificationInfo;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.util.Scanner;\n+\n+/**\n+ * NotificationListener is used for listening notification.\n+ */\n+public class NotificationListener  {\n+\n+  Scanner sc = null;\n+  String notificationString = \"\";\n+  NotificationInfo ni = null;\n+  Reader inputReader;\n+  boolean isClosed = false;\n+  ObjectMapper mapper = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e12e64cae1fcff6ce166078dba24d7d6f7cf03ea", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/e12e64cae1fcff6ce166078dba24d7d6f7cf03ea", "committedDate": "2020-01-15T12:52:53Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "1c9eb15a60bb13dae8633204aa0454142c77595d", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/1c9eb15a60bb13dae8633204aa0454142c77595d", "committedDate": "2020-01-16T17:38:53Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c9eb15a60bb13dae8633204aa0454142c77595d", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/1c9eb15a60bb13dae8633204aa0454142c77595d", "committedDate": "2020-01-16T17:38:53Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "6e67dec2dd531235e95a6e60255fb8395e0a55b7", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/6e67dec2dd531235e95a6e60255fb8395e0a55b7", "committedDate": "2020-01-16T17:55:36Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MTY1NTEy", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-344165512", "createdAt": "2020-01-16T19:37:33Z", "commit": {"oid": "6e67dec2dd531235e95a6e60255fb8395e0a55b7"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e67dec2dd531235e95a6e60255fb8395e0a55b7", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/6e67dec2dd531235e95a6e60255fb8395e0a55b7", "committedDate": "2020-01-16T17:55:36Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "1b0708aabb8ea8907728cf3211baab80feef694c", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/1b0708aabb8ea8907728cf3211baab80feef694c", "committedDate": "2020-01-17T13:06:14Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b0708aabb8ea8907728cf3211baab80feef694c", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/1b0708aabb8ea8907728cf3211baab80feef694c", "committedDate": "2020-01-17T13:06:14Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "16a6c73553dca1d21adca461ddc0be043cdfe54e", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/16a6c73553dca1d21adca461ddc0be043cdfe54e", "committedDate": "2020-01-17T13:13:39Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16a6c73553dca1d21adca461ddc0be043cdfe54e", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/16a6c73553dca1d21adca461ddc0be043cdfe54e", "committedDate": "2020-01-17T13:13:39Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "5a1a10c232f9d14480d67b7357591f1e9735428a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/5a1a10c232f9d14480d67b7357591f1e9735428a", "committedDate": "2020-01-17T13:21:57Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a1a10c232f9d14480d67b7357591f1e9735428a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/5a1a10c232f9d14480d67b7357591f1e9735428a", "committedDate": "2020-01-17T13:21:57Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "74f7d1d459d4cd80d57284652a21e753f6d2d91a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/74f7d1d459d4cd80d57284652a21e753f6d2d91a", "committedDate": "2020-01-17T13:25:11Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74f7d1d459d4cd80d57284652a21e753f6d2d91a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/74f7d1d459d4cd80d57284652a21e753f6d2d91a", "committedDate": "2020-01-17T13:25:11Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "ea11fffda3a67f8882d827d1d92767a516df57ad", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ea11fffda3a67f8882d827d1d92767a516df57ad", "committedDate": "2020-01-17T13:40:10Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea11fffda3a67f8882d827d1d92767a516df57ad", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ea11fffda3a67f8882d827d1d92767a516df57ad", "committedDate": "2020-01-17T13:40:10Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "59bfd360f872267b7133bc340cd36f52a30f20d7", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/59bfd360f872267b7133bc340cd36f52a30f20d7", "committedDate": "2020-01-17T14:08:28Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59bfd360f872267b7133bc340cd36f52a30f20d7", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/59bfd360f872267b7133bc340cd36f52a30f20d7", "committedDate": "2020-01-17T14:08:28Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "66f7e1ed6448cca8e8f47b149afb2449b6e385c0", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/66f7e1ed6448cca8e8f47b149afb2449b6e385c0", "committedDate": "2020-01-17T14:40:27Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66f7e1ed6448cca8e8f47b149afb2449b6e385c0", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/66f7e1ed6448cca8e8f47b149afb2449b6e385c0", "committedDate": "2020-01-17T14:40:27Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "999324ed8f714a1bddda036499e106437f3a0559", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/999324ed8f714a1bddda036499e106437f3a0559", "committedDate": "2020-01-17T14:44:29Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "999324ed8f714a1bddda036499e106437f3a0559", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/999324ed8f714a1bddda036499e106437f3a0559", "committedDate": "2020-01-17T14:44:29Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "ee77575f5769c8ff339006cdb94ac5e5e72f222a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ee77575f5769c8ff339006cdb94ac5e5e72f222a", "committedDate": "2020-01-17T14:51:30Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee77575f5769c8ff339006cdb94ac5e5e72f222a", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/ee77575f5769c8ff339006cdb94ac5e5e72f222a", "committedDate": "2020-01-17T14:51:30Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "2f3fea7439d10c6dbcb4ee2197680df5248b21fa", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/2f3fea7439d10c6dbcb4ee2197680df5248b21fa", "committedDate": "2020-01-17T14:55:48Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f3fea7439d10c6dbcb4ee2197680df5248b21fa", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/2f3fea7439d10c6dbcb4ee2197680df5248b21fa", "committedDate": "2020-01-17T14:55:48Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "2be0d8c210ddb62fd9e4a8b768608a5b41b27c1f", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/2be0d8c210ddb62fd9e4a8b768608a5b41b27c1f", "committedDate": "2020-01-17T14:59:35Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2be0d8c210ddb62fd9e4a8b768608a5b41b27c1f", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/2be0d8c210ddb62fd9e4a8b768608a5b41b27c1f", "committedDate": "2020-01-17T14:59:35Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/5851e2c49e0edcd38ac64d99082da3cbe0a0fa06", "committedDate": "2020-01-17T15:07:55Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzU0OTk0", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-344754994", "createdAt": "2020-01-17T18:15:52Z", "commit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODoxNTo1MlrOFfBMuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODoxNTo1MlrOFfBMuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA2OTgxOQ==", "bodyText": "you could remove this if block i.e. let it run indefinitely in the example.", "url": "https://github.com/minio/minio-java/pull/834#discussion_r368069819", "createdAt": "2020-01-17T18:15:52Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5762,6 +5763,131 @@ public void listenBucketNotification(String bucketName, String prefix, String su\n     }\n   }\n \n+  /**\n+   * Listen to bucket notifications. As bucket notification are lazily executed,\n+   * its required to iterate. The returned closeable iterator must be used with\n+   * try with resource or else the stream will not be closed.\n+   *\n+   * </p><b>Example:</b><br>\n+   * <pre>{@code\n+   *  try (CloseableIterator<Result<NotificationInfo>> ci = client\n+   * .listenBucketNotification(\"my-bucket\", \"\", \"\", events)) {\n+   *  while (ci.hasNext()) {\n+   *    NotificationInfo info = ci.next().get();\n+   *    System.out.println(info.toString());\n+   *    if (info != null) {\n+   *      break;\n+   *      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzgyNzE0", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-344782714", "createdAt": "2020-01-17T19:08:04Z", "commit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTowODowNFrOFfCfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTowODowNFrOFfCfHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5MDkwOA==", "bodyText": "below code is correct.\n} catch (JsonParseException | JsonMappingException | IOException e) {\n    return new Result(null, e);\n}\nIn Result.java, you need to have get() like below (Note: I modified if block better)\n  public T get()\n    throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException, IOException,\n           InvalidKeyException, NoResponseException, XmlPullParserException, ErrorResponseException,\n           JsonParseException, JsonMappingException, InternalException {\n    if (ex == null) {\n      return type;\n    }\n\n    if (ex instanceof InvalidBucketNameException) {\n      throw (InvalidBucketNameException) ex;\n    }\n\n    if (ex instanceof NoSuchAlgorithmException) {\n      throw (NoSuchAlgorithmException) ex;\n    }\n\n    if (ex instanceof InsufficientDataException) {\n      throw (InsufficientDataException) ex;\n    }\n\n    if (ex instanceof IOException) {\n      throw (IOException) ex;\n    }\n\n    if (ex instanceof InvalidKeyException) {\n      throw (InvalidKeyException) ex;\n    }\n\n    if (ex instanceof NoResponseException) {\n      throw (NoResponseException) ex;\n    }\n\n    if (ex instanceof XmlPullParserException) {\n      throw (XmlPullParserException) ex;\n    }\n\n    if (ex instanceof ErrorResponseException) {\n      throw (ErrorResponseException) ex;\n    }\n\n    if (ex instanceof JsonParseException) {\n      throw (JsonParseException) ex;\n    }\n\n    if (ex instanceof JsonMappingException) {\n      throw (JsonMappingException) ex;\n    }\n\n    throw (InternalException) ex;\n  }\n}", "url": "https://github.com/minio/minio-java/pull/834#discussion_r368090908", "createdAt": "2020-01-17T19:08:04Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -5762,6 +5763,131 @@ public void listenBucketNotification(String bucketName, String prefix, String su\n     }\n   }\n \n+  /**\n+   * Listen to bucket notifications. As bucket notification are lazily executed,\n+   * its required to iterate. The returned closeable iterator must be used with\n+   * try with resource or else the stream will not be closed.\n+   *\n+   * </p><b>Example:</b><br>\n+   * <pre>{@code\n+   *  try (CloseableIterator<Result<NotificationInfo>> ci = client\n+   * .listenBucketNotification(\"my-bucket\", \"\", \"\", events)) {\n+   *  while (ci.hasNext()) {\n+   *    NotificationInfo info = ci.next().get();\n+   *    System.out.println(info.toString());\n+   *    if (info != null) {\n+   *      break;\n+   *      }\n+   *   }\n+   *  } catch (IOException e) {\n+   *    System.out.println(\"Error occurred: \" + e);\n+   *  }\n+   * }\n+   * </pre>\n+   *\n+   * @param bucketName Bucket name.\n+   * @param prefix Prefix of concerned objects events.\n+   * @param suffix Suffix of concerned objects events.\n+   * @param events List of events to watch.\n+   *\n+   * @return (lazy) CloseableIterator of the Result NotificationInfo.\n+   *\n+   */\n+  public CloseableIterator<Result<NotificationInfo>> listenBucketNotification(String bucketName, String prefix,\n+      String suffix, String[] events)\n+    throws IOException, InvalidKeyException, NoSuchAlgorithmException, InsufficientDataException,\n+    InvalidResponseException, InternalException, NoResponseException, InvalidBucketNameException,\n+    XmlPullParserException, ErrorResponseException {\n+\n+    Multimap<String, String> queryParamMap = HashMultimap.create();\n+    queryParamMap.put(\"prefix\", prefix);\n+    queryParamMap.put(\"suffix\", suffix);\n+    for (String event : events) {\n+      queryParamMap.put(\"events\", event);\n+    }\n+\n+    HttpResponse response = executeReq(Method.GET, getRegion(bucketName),\n+        bucketName, \"\", null, queryParamMap, null, 0);\n+\n+    return new CloseableIterator<Result<NotificationInfo>>() {\n+      Scanner scanner  = new Scanner(response.body().charStream()).useDelimiter(\"\\n\");\n+\n+      String notificationString = null;\n+      ObjectMapper mapper = new ObjectMapper();\n+      NotificationInfo notificationInfo = null;\n+      boolean isClosed = false;\n+\n+      @Override\n+      public void close() throws IOException {\n+        if (!isClosed) {\n+          try {\n+            response.body().close();\n+            scanner.close();\n+          } finally {\n+            isClosed = true;\n+          }\n+        }\n+      }\n+\n+      public boolean populate()  {\n+        if (isClosed) {\n+          return false;\n+        }\n+\n+        if (notificationString != null) {\n+          return true;\n+        }\n+\n+        while (scanner.hasNext()) {\n+          notificationString = scanner.next().trim();\n+          if ( !notificationString.equals(\"\")) {\n+            break;\n+          }\n+        }\n+\n+        if (notificationString  == null || notificationString.equals(\"\")) {\n+          try {\n+            close();\n+          } catch (IOException e) {\n+            isClosed = true;\n+          }\n+          return false;\n+        }\n+        return true;\n+      }\n+\n+      @Override\n+      public boolean hasNext() {\n+        return populate();\n+      }\n+\n+      @Override\n+      public Result<NotificationInfo> next() {\n+        if (isClosed) {\n+          throw new NoSuchElementException();\n+        }\n+        if ((notificationString  == null || notificationString.equals(\"\")) &&  !populate() ) {\n+              throw  new NoSuchElementException();\n+        }\n+\n+        try {\n+              notificationInfo = mapper.readValue(notificationString, NotificationInfo.class);\n+              return new Result<>(notificationInfo, null);\n+            } catch ( IOException ex ) {\n+              if ( ex instanceof JsonParseException) {\n+                return new Result<>(null, (JsonParseException)ex);\n+              } else if ( ex instanceof  JsonMappingException) {\n+                return new Result<>(null, (JsonMappingException)ex);\n+              } else {\n+                return new Result<>(null, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06"}, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0dc6639d9a290a1d7f64dece4c5bf262023346e", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/b0dc6639d9a290a1d7f64dece4c5bf262023346e", "committedDate": "2020-01-18T00:52:45Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5851e2c49e0edcd38ac64d99082da3cbe0a0fa06", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/5851e2c49e0edcd38ac64d99082da3cbe0a0fa06", "committedDate": "2020-01-17T15:07:55Z", "message": "Add overloaded listen bucket notification method"}, "afterCommit": {"oid": "b0dc6639d9a290a1d7f64dece4c5bf262023346e", "author": {"user": {"login": "sinhaashish", "name": "Ashish Kumar Sinha"}}, "url": "https://github.com/minio/minio-java/commit/b0dc6639d9a290a1d7f64dece4c5bf262023346e", "committedDate": "2020-01-18T00:52:45Z", "message": "Add overloaded listen bucket notification method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTc5NjQ5", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-344979649", "createdAt": "2020-01-19T06:18:57Z", "commit": {"oid": "b0dc6639d9a290a1d7f64dece4c5bf262023346e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTc5NjY5", "url": "https://github.com/minio/minio-java/pull/834#pullrequestreview-344979669", "createdAt": "2020-01-19T06:20:04Z", "commit": {"oid": "b0dc6639d9a290a1d7f64dece4c5bf262023346e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1954, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}