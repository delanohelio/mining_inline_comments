{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTc1NTQ4", "number": 948, "reviewThreads": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0Njo1MVrOD-I-tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNTo0M1rOEC3FUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg1NDMwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0Njo1MVrOGYDyjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo1MTozN1rOGZ1Xlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTEwMg==", "bodyText": "Guess this should be \"Supported params\"  ?", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427881102", "createdAt": "2020-05-20T09:46:51Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {\n+      operations.add(args -> args.expires = expires);\n+      return this;\n+    }\n+\n+    /*Request parameters to override. Supported headers are response-expires,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MTk3NA==", "bodyText": "Replaced to     /* Supported params are response-expires, response-content-type, * response-cache-control and response-content-disposition. */", "url": "https://github.com/minio/minio-java/pull/948#discussion_r429741974", "createdAt": "2020-05-25T05:51:37Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {\n+      operations.add(args -> args.expires = expires);\n+      return this;\n+    }\n+\n+    /*Request parameters to override. Supported headers are response-expires,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTEwMg=="}, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg4ODUyOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1NjowMFrOGYEIaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1NjowMFrOGYEIaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NjY5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .object(my - objectname)\n          \n          \n            \n                        .object(\"my-objectname\")", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427886699", "createdAt": "2020-05-20T09:56:00Z", "author": {"login": "anjalshireesh"}, "path": "docs/API.md", "diffHunk": "@@ -1078,50 +1078,60 @@ System.out.println(\"mode: \" + retention.mode() + \"until: \" + retention.retainUnt\n ```\n \n  <a name=\"getObjectUrl\"></a>\n-### getObjectUrl(String bucketName, String objectName)\n-`public String getObjectUrl(String bucketName, String objectName)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getObjectUrl-java.lang.String-java.lang.String-)_\n+### getObjectUrl(GetObjectUrlArgs args)\n+`public String getObjectUrl(GetObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getObjectUrl-io.minio.GetObjectUrlArgs-)_\n \n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n | Parameter      | Type     | Description                |\n |:---------------|:---------|:---------------------------|\n-| ``bucketName`` | _String_ | Name of the bucket.        |\n-| ``objectName`` | _String_ | Object name in the bucket. |\n+| ``args``       | _[GetObjectUrlArgs]_ | Argument.        |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\n+        GetObjectUrlArgs.builder().bucket(\"my-bucketname\").object(\"my-objectname\").build());\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getPresignedObjectUrl(Method.DELETE, \"my-bucketname\", \"my-objectname\", 24 * 60 * 60,\n-    reqParams);\n+// Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+String url =\n+    minioClient.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .method(Method.DELETE)\n+            .bucket(\"my-bucketname\")\n+            .object(my - objectname)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg5MjQxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1NzowNFrOGYEKzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo1NzowNFrOGYEKzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NzMwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *             .object(my - objectname)\n          \n          \n            \n               *             .object(\"my-objectname\")", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427887308", "createdAt": "2020-05-20T09:57:04Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2415,32 +2454,148 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           XmlParserException {\n+\n+    return this.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .params(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(my - objectname)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDkxMzA0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowMjowM1rOGYEXRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowMjowM1rOGYEXRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDUwMw==", "bodyText": "This validation (on expires) can be done inside the builder", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427890503", "createdAt": "2020-05-20T10:02:03Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2415,32 +2454,148 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           XmlParserException {\n+\n+    return this.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .params(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(my - objectname)\n+   *             .expires(24 * 60 * 60)\n+   *             .params(reqParams)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException {\n+    if (args == null) {\n+      throw new IllegalArgumentException(\"null arguments\");\n+    }\n+\n     // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+    if (args.expires() < 1 || args.expires() > DEFAULT_EXPIRY_TIME) {\n       throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+          args.expires(), \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1MjI1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/PresignedGetObjectArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMzoxOFrOGYEwEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMzoxOFrOGYEwEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Njg1MA==", "bodyText": "Guess this should be Supported params ?", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427896850", "createdAt": "2020-05-20T10:13:18Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/PresignedGetObjectArgs.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.presignedGetObject(). */\n+public class PresignedGetObjectArgs extends ObjectArgs {\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link PresignedGetObjectArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, PresignedGetObjectArgs> {\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {\n+      operations.add(args -> args.expires = expires);\n+      return this;\n+    }\n+\n+    /*Request parameters to override. Supported headers are response-expires,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk4ODI1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/PresignedPutObjectArgs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyNDozMlrOGYFHYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo1MDoyNVrOGZ1WgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjgxOA==", "bodyText": "presignedPutObject and presignedGetObject seem to be just wrappers over a single method/API getPresignedObjectUrl\nIf this understanding is correct, I don't think we need three different Args classes. A single args class GetPresignedObjectUrlArgs should suffice.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427902818", "createdAt": "2020-05-20T10:24:32Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/PresignedPutObjectArgs.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Argument class of MinioClient.presignedPutObject(). */\n+public class PresignedPutObjectArgs extends ObjectArgs {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MTY5Ng==", "bodyText": "@anjalshireesh  You point is valid but Argument class is always in sync with method name so i have used different argument class. @balamurugana  need your input on this", "url": "https://github.com/minio/minio-java/pull/948#discussion_r429741696", "createdAt": "2020-05-25T05:50:25Z", "author": {"login": "sinhaashish"}, "path": "api/src/main/java/io/minio/PresignedPutObjectArgs.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Argument class of MinioClient.presignedPutObject(). */\n+public class PresignedPutObjectArgs extends ObjectArgs {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjgxOA=="}, "originalCommit": {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYxMTExOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo0OTowMVrOGaH8Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo0OTowMVrOGaH8Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NjIzMQ==", "bodyText": "I believe we're standardizing on throwing IllegalArgumentException in case of argument validation failures.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r430046231", "createdAt": "2020-05-25T18:49:01Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.errors.InvalidExpiresRangeException;\n+import io.minio.http.Method;\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) throws InvalidExpiresRangeException {\n+      if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+        throw new InvalidExpiresRangeException(\n+            expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9120b60b6573aeecee9164fc4dce43ffa36300af"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTUzNzQ1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDoxMzoxMlrOGbMKWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDoxMzoxMlrOGbMKWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE2Mzk5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Integer expires = 7 * 24 * 3600;\n          \n          \n            \n              private Integer expires = DEFAULT_EXPIRY_TIME;", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431163993", "createdAt": "2020-05-27T14:13:12Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n \n package io.minio;\n \n-import io.minio.errors.InvalidExpiresRangeException;\n import io.minio.http.Method;\n-import java.util.Map;\n \n /** Argument class of MinioClient.getPresignedObjectUrl(). */\n public class GetPresignedObjectUrlArgs extends ObjectArgs {\n   private Method method;\n-  private Integer expires;\n-  private Map<String, String> reqParams;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = 7 * 24 * 3600;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTcxMjkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0NDozNFrOGbN7YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0NDozNFrOGbN7YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MjkyOQ==", "bodyText": "We can potentially add a method like this in BaseArgs.Builder and use it for all the null arg checks\n    protected void validateArgNotNull(Object arg, String name, String context) {\n      if (arg == null) {\n        throw new IllegalArgumentException(\"null \" + name + \" for \" + context);\n      }\n    }\n\nAnother option in this particular case is to add a single validation method that checks if either of them is null and raises a generic error message like \"Arguments 'method' and 'expires' are mandatory for presigned url\"", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431192929", "createdAt": "2020-05-27T14:44:34Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -36,37 +34,45 @@ public Integer expires() {\n     return expires;\n   }\n \n-  public Map<String, String> params() {\n-    return reqParams;\n-  }\n-\n   public static Builder builder() {\n     return new Builder();\n   }\n \n   /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n   public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateConfig(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateConfig(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTczNjA4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0OTozMlrOGbOKFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0OTozMlrOGbOKFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5NjY5Mg==", "bodyText": "This won't create the error message correctly. e.g. if expires is passed as 0, the message will be:\n\"0expires must be in range of 1 to 604800\"", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431196692", "createdAt": "2020-05-27T14:49:32Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -36,37 +34,45 @@ public Integer expires() {\n     return expires;\n   }\n \n-  public Map<String, String> params() {\n-    return reqParams;\n-  }\n-\n   public static Builder builder() {\n     return new Builder();\n   }\n \n   /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n   public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateConfig(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateConfig(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+    }\n+\n+    protected void validate(GetPresignedObjectUrlArgs args) {\n+      super.validate(args);\n+      validateConfig(args.method);\n+      validateConfig(args.expires);\n+    }\n+\n     /* method HTTP {@link Method} to generate presigned URL. */\n     public Builder method(Method method) {\n+      validateConfig(method);\n       operations.add(args -> args.method = method);\n       return this;\n     }\n \n     /*expires Expiry in seconds; defaults to 7 days. */\n-    public Builder expires(Integer expires) throws InvalidExpiresRangeException {\n+    public Builder expires(Integer expires) {\n       if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-        throw new InvalidExpiresRangeException(\n-            expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+        throw new IllegalArgumentException(\n+            expires + \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTgzODIzOnYy", "diffSide": "RIGHT", "path": "examples/PresignedGetObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTowNTo1OVrOGbPMXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNTowNTo1OVrOGbPMXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMzY2Mg==", "bodyText": "Shall the two files PresignedGetObject.java and PresignedPutObject.java be merged into a single example file called GetPresignedObjectUrl.java ?", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431213662", "createdAt": "2020-05-27T15:05:59Z", "author": {"login": "anjalshireesh"}, "path": "examples/PresignedGetObject.java", "diffHunk": "@@ -40,8 +41,9 @@ public static void main(String[] args)\n       // Get presigned URL string to download 'my-objectname' in 'my-bucketname' and its life time\n       // is one day.\n       String url =\n-          minioClient.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          minioClient.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg1NjgwOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxMDoxNlrOGbPYpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxMDoxNlrOGbPYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNjgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"Test: presigned get object: \" + methodName);\n          \n          \n            \n                  System.out.println(\"Test: \" + methodName);", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431216805", "createdAt": "2020-05-27T15:10:16Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2174,10 +2174,11 @@ public static void removeIncompleteUploads_test() throws Exception {\n     }\n   }\n \n-  /** public String presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test1() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedGetObject(PresignedGetObjectArgs args)\");\n+      System.out.println(\"Test: presigned get object: \" + methodName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg3MDIzOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxMzowOFrOGbPg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxMzowOFrOGbPg2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxODkwNg==", "bodyText": "The second argument is supposed to be the arguments passed to the method. So either pass null or actual values from the args.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431218906", "createdAt": "2020-05-27T15:13:08Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg3OTIxOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNDo1NVrOGbPmjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNDo1NVrOGbPmjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMDM2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n          \n          \n            \n                String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n          \n          \n            \n                String args = \"expiry: 3600 sec\";", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431220366", "createdAt": "2020-05-27T15:14:55Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test2() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg4MzY3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNTo1MlrOGbPpUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNTo1MlrOGbPpUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTA3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"Test: presigned get object with expiry: \" + methodName);\n          \n          \n            \n                  System.out.println(\"Test: \" + methodName + \" with \" + args);", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221073", "createdAt": "2020-05-27T15:15:52Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test2() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: with expiry: presignedGetObject(PresignedGetObjectArgs args)\");\n+      System.out.println(\"Test: presigned get object with expiry: \" + methodName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg4NTQ3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNjoxOVrOGbPqjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNjoxOVrOGbPqjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTM4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n          \n          \n            \n                  mintSuccessLog(methodName, args, startTime);", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221389", "createdAt": "2020-05-27T15:16:19Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg4NjUyOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNjozNVrOGbPrTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNjozNVrOGbPrTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTU4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);\n          \n          \n            \n                  handleException(methodName, args, startTime, e);", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221581", "createdAt": "2020-05-27T15:16:35Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec\",\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg5MjgzOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNzo1NVrOGbPvQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxNzo1NVrOGbPvQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMjU5NQ==", "bodyText": "Please add an args variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431222595", "createdAt": "2020-05-27T15:17:55Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec\",\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);\n     }\n   }\n \n-  /** public String presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test3() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test3() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg5NzE3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxODo1OVrOGbPyHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxODo1OVrOGbPyHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMzMyNg==", "bodyText": "The second argument value doesn't make sense for args", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431223326", "createdAt": "2020-05-27T15:18:59Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2280,89 +2274,84 @@ public static void presignedGetObject_test3() throws Exception {\n       reqParams.put(\"response-content-type\", \"application/json\");\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n                   .bucket(bucketName)\n                   .object(objectName)\n                   .expires(3600)\n-                  .params(reqParams)\n+                  .extraQueryParams(reqParams)\n                   .build());\n+\n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n       mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+      handleException(\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+          e);\n     }\n   }\n \n-  /** public String presignedPutObject(PresignedPutObjectArgs). */\n-  public static void presignedPutObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test4() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedPutObject(PresignedPutObjectArgs args)\");\n+      System.out.println(\"Test: presigned put object: \" + methodName);\n     }\n \n     long startTime = System.currentTimeMillis();\n     try {\n       String objectName = getRandomName();\n       String urlString =\n-          client.presignedPutObject(\n-              PresignedPutObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.PUT)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n       byte[] data = \"hello, world\".getBytes(StandardCharsets.UTF_8);\n       writeObject(urlString, data);\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedPutObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned put object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedPutObject(PresignedPutObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned put object\", startTime, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 224}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTg5OTI3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxOTozM1rOGbPzlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNToxOTozM1rOGbPzlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMzcwMg==", "bodyText": "Please add an args variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431223702", "createdAt": "2020-05-27T15:19:33Z", "author": {"login": "anjalshireesh"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2280,89 +2274,84 @@ public static void presignedGetObject_test3() throws Exception {\n       reqParams.put(\"response-content-type\", \"application/json\");\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n                   .bucket(bucketName)\n                   .object(objectName)\n                   .expires(3600)\n-                  .params(reqParams)\n+                  .extraQueryParams(reqParams)\n                   .build());\n+\n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n       mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+      handleException(\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+          e);\n     }\n   }\n \n-  /** public String presignedPutObject(PresignedPutObjectArgs). */\n-  public static void presignedPutObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test4() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedPutObject(PresignedPutObjectArgs args)\");\n+      System.out.println(\"Test: presigned put object: \" + methodName);\n     }\n \n     long startTime = System.currentTimeMillis();\n     try {\n       String objectName = getRandomName();\n       String urlString =\n-          client.presignedPutObject(\n-              PresignedPutObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.PUT)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n       byte[] data = \"hello, world\".getBytes(StandardCharsets.UTF_8);\n       writeObject(urlString, data);\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedPutObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned put object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedPutObject(PresignedPutObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned put object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedPutObject(PresignedPutObjectArgs args)). */\n-  public static void presignedPutObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test5() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa"}, "originalPosition": 232}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE0NDAyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxNToyMlrOGed7FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxNToyMlrOGed7FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMDcyNA==", "bodyText": "Please change expires to expiry everywhere\nYou could use int itself.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434600724", "createdAt": "2020-06-03T14:15:22Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE1OTI5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxODozMFrOGeeEkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxODozMFrOGeeEkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzE1NQ==", "bodyText": "Use BaseArgs.validateNotNull()", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434603155", "createdAt": "2020-06-03T14:18:30Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE2MjQyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxOToxNFrOGeeGqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoxOToxNFrOGeeGqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzY4OA==", "bodyText": "null is a valid value which means use default expiry time.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434603688", "createdAt": "2020-06-03T14:19:14Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateExpiry(Integer expires) {\n+      if (expires == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE3NjYwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyMjoxNFrOGeePjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyMjoxNFrOGeePjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNTk2NQ==", "bodyText": "You could use int and error if out of range.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434605965", "createdAt": "2020-06-03T14:22:14Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateExpiry(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+      if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }\n+    }\n+\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      validateMethod(method);\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE4MzYzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyMzozNVrOGeeT0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyMzozNVrOGeeT0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNzA1Nw==", "bodyText": "Make this constant public so that it is accessible to everyone and keep it as first definition.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434607057", "createdAt": "2020-06-03T14:23:35Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzE5MTI0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyNToxNVrOGeeYug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyNToxNVrOGeeYug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwODMxNA==", "bodyText": "Use EMPTY_BODY", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434608314", "createdAt": "2020-06-03T14:25:15Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2651,29 +2653,73 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           ServerException, XmlParserException {\n-    // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-      throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n-    }\n+\n+    return getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .extraQueryParams(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(\"my-objectname\")\n+   *             .expires(24 * 60 * 60)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   * @throws ServerException\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException, ServerException {\n+    checkArgs(args);\n \n     byte[] body = null;\n-    if (method == Method.PUT || method == Method.POST) {\n+    if (args.method() == Method.PUT || args.method() == Method.POST) {\n       body = new byte[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzIwMjM2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyNzozNlrOGeef1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDoyNzozNlrOGeef1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxMDEzMg==", "bodyText": "You could use extraQueryParams directly than taking a copy.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434610132", "createdAt": "2020-06-03T14:27:36Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2651,29 +2653,73 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           ServerException, XmlParserException {\n-    // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-      throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n-    }\n+\n+    return getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .extraQueryParams(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(\"my-objectname\")\n+   *             .expires(24 * 60 * 60)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   * @throws ServerException\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException, ServerException {\n+    checkArgs(args);\n \n     byte[] body = null;\n-    if (method == Method.PUT || method == Method.POST) {\n+    if (args.method() == Method.PUT || args.method() == Method.POST) {\n       body = new byte[0];\n     }\n \n     Multimap<String, String> queryParamMap = null;\n-    if (reqParams != null) {\n+    if (args.extraQueryParams() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzIxNDMzOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDozMDowNFrOGeenXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDozMDowNFrOGeenXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxMjA2Mw==", "bodyText": "remove extra new lines.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434612063", "createdAt": "2020-06-03T14:30:04Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1277,44 +1277,58 @@ Tags tags = minioClient.getObjectTags(\n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n+\n | Parameter      | Type     | Description                |\n |:---------------|:---------|:---------------------------|\n | ``bucketName`` | _String_ | Name of the bucket.        |\n | ``objectName`` | _String_ | Object name in the bucket. |\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzIzMzY3OnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDozNDoxNVrOGeezWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDozNDoxNVrOGeezWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxNTEzMQ==", "bodyText": "We need examples for GET/PUT to cover deprecated methods and DELETEto this method.\nHave this examples sync in MinioClient.java, exampels and here.\nExtra headers/query params should be Multimap", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434615131", "createdAt": "2020-06-03T14:34:15Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1277,44 +1277,58 @@ Tags tags = minioClient.getObjectTags(\n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n+\n | Parameter      | Type     | Description                |\n |:---------------|:---------|:---------------------------|\n | ``bucketName`` | _String_ | Name of the bucket.        |\n | ``objectName`` | _String_ | Object name in the bucket. |\n \n+\n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getPresignedObjectUrl(Method.DELETE, \"my-bucketname\", \"my-objectname\", 24 * 60 * 60,\n-    reqParams);\n+// Get presigned URL of an object for HTTP method, expiry time and custom request parameters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzI0NzM5OnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDozNzowNFrOGee8Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozMjo1MlrOGfYy_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxNzM3NQ==", "bodyText": "I think we can have one more version of this method to accept (int duration, TimeUnit unit). I don't know TimeUnit supports days. We could find whichever class supports wider range.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434617375", "createdAt": "2020-06-03T14:37:04Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1277,44 +1277,58 @@ Tags tags = minioClient.getObjectTags(\n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n+\n | Parameter      | Type     | Description                |\n |:---------------|:---------|:---------------------------|\n | ``bucketName`` | _String_ | Name of the bucket.        |\n | ``objectName`` | _String_ | Object name in the bucket. |\n \n+\n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getPresignedObjectUrl(Method.DELETE, \"my-bucketname\", \"my-objectname\", 24 * 60 * 60,\n-    reqParams);\n+// Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+Map<String, String> reqParams = new HashMap<>();\n+      reqParams.put(\"response-content-type\", \"application/json\");\n+      \n+String url =\n+    minioClient.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .method(Method.DELETE)\n+            .bucket(\"my-bucketname\")\n+            .object(\"my-objectname\")\n+            .expires(24 * 60 * 60)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2NTMwOA==", "bodyText": "TimeUnit supports Days. Incorporated the change", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435565308", "createdAt": "2020-06-04T21:32:52Z", "author": {"login": "sinhaashish"}, "path": "docs/API.md", "diffHunk": "@@ -1277,44 +1277,58 @@ Tags tags = minioClient.getObjectTags(\n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n+\n | Parameter      | Type     | Description                |\n |:---------------|:---------|:---------------------------|\n | ``bucketName`` | _String_ | Name of the bucket.        |\n | ``objectName`` | _String_ | Object name in the bucket. |\n \n+\n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n  ```java\n-String url = minioClient.getPresignedObjectUrl(Method.DELETE, \"my-bucketname\", \"my-objectname\", 24 * 60 * 60,\n-    reqParams);\n+// Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+Map<String, String> reqParams = new HashMap<>();\n+      reqParams.put(\"response-content-type\", \"application/json\");\n+      \n+String url =\n+    minioClient.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .method(Method.DELETE)\n+            .bucket(\"my-bucketname\")\n+            .object(\"my-objectname\")\n+            .expires(24 * 60 * 60)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxNzM3NQ=="}, "originalCommit": {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc1MTcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMToyOFrOGffAcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMToyOFrOGffAcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzA1Nw==", "bodyText": "Remove above new line and add new line here to differentiate the constant.\nPlease use TimeUnit.DAYS.toSeconds(7) for readability.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667057", "createdAt": "2020-06-05T03:11:28Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc1NDMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMzoyMFrOGffCIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMzoyMFrOGffCIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzQ5MA==", "bodyText": "Please add validate(GetPresignedObjectUrl args), otherwise GetPresignedObjectUrl.builder().build() would succeed with null method.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667490", "createdAt": "2020-06-05T03:13:20Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc1NTE3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMzo1MVrOGffCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMzo1MVrOGffCsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzYzNA==", "bodyText": "Replace expires to expiry\nWe could have more meaningful message like \"expiry must be minimum 1 second to maximum \" + TimeUnit.SECONDS.toDays(DEFAULT_EXPIRY_TIME) + \" days\"", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667634", "createdAt": "2020-06-05T03:13:51Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      validateNotNull(method, \"method\");\n+    }\n+\n+    private void validateExpiry(int expiry) {\n+      if (expiry < 1 || expiry > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc1OTE1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxNjoxOFrOGffFAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxNjoxOFrOGffFAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2ODIyNw==", "bodyText": "You could do return expiry((int) unit.toSeconds(duration));", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435668227", "createdAt": "2020-06-05T03:16:18Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      validateNotNull(method, \"method\");\n+    }\n+\n+    private void validateExpiry(int expiry) {\n+      if (expiry < 1 || expiry > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }\n+    }\n+\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      validateMethod(method);\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expiry(int expiry) {\n+      validateExpiry(expiry);\n+      operations.add(args -> args.expiry = expiry);\n+      return this;\n+    }\n+\n+    public Builder expiry(int duration, TimeUnit unit) {\n+      int expiry = (int) TimeUnit.SECONDS.convert(duration, unit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc5NDY0OnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MTo1MlrOGffaLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MTo1MlrOGffaLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3MzY0NA==", "bodyText": "Please remove this extra new line.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435673644", "createdAt": "2020-06-05T03:41:52Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1280,6 +1280,7 @@ Tags tags = minioClient.getObjectTags(\n Gets URL of an object useful when this object has public read access.\n \n  __Parameters__\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc5NTUxOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MjozN1rOGffavA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MjozN1rOGffavA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3Mzc4OA==", "bodyText": "I think you don't need edit this line.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435673788", "createdAt": "2020-06-05T03:42:37Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1291,33 +1292,70 @@ Gets URL of an object useful when this object has public read access.\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc5NjE2OnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MzowMVrOGffbHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MzowMVrOGffbHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3Mzg4NA==", "bodyText": "Please remove this extra new line", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435673884", "createdAt": "2020-06-05T03:43:01Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1291,33 +1292,70 @@ Gets URL of an object useful when this object has public read access.\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+// Get URL of an object useful when this object has public read access.\n+String url =\n+    minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n  __Example__\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzc5NjUxOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MzoyN1rOGffbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0MzoyN1rOGffbXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3Mzk0OA==", "bodyText": "Please remove this extra new line", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435673948", "createdAt": "2020-06-05T03:43:27Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1354,82 +1392,14 @@ else {\n }\n ```\n \n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName)\n-`public String presignedGetObject(String bucketName, String objectName)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-)_\n-\n-Gets presigned URL of an object to download its data for 7 days.\n-\n-__Parameters__\n-| Parameter      | Type     | Description                |\n-|:---------------|:---------|:---------------------------|\n-| ``bucketName`` | _String_ | Name of the bucket.        |\n-| ``objectName`` | _String_ | Object name in the bucket. |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\");\n-```\n-\n-\n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName, Integer expires)\n-`public String presignedGetObject(String bucketName, String objectName, Integer expires)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-java.lang.Integer-)_\n-\n-Gets presigned URL of an object to download its data for expiry time.\n-\n-__Parameters__\n-| Parameter      | Type      | Description                                         |\n-|:---------------|:----------|:----------------------------------------------------|\n-| ``bucketName`` | _String_  | Name of the bucket.                                 |\n-| ``objectName`` | _String_  | Object name in the bucket.                          |\n-| ``expires``    | _Integer_ | Expiry in seconds. Default expiry is set to 7 days. |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-// Get presigned URL to download my-objectname data with one day expiry.\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\", 24 * 60 * 60);\n-```\n-\n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String presignedGetObject(String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n-\n-Gets presigned URL of an object to download its data for expiry time and request parameters.\n-\n-__Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-// Get presigned URL to download my-objectname data with one day expiry and request parameters.\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\", 24 * 60 * 60, reqParams);\n-```\n-\n <a name=\"presignedPostPolicy\"></a>\n ### presignedPostPolicy(PostPolicy policy)\n `public Map<String,String> presignedPostPolicy(PostPolicy policy)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedPostPolicy-io.minio.PostPolicy-)_\n \n Gets form-data of [PostPolicy] of an object to upload its data using POST method.\n \n __Parameters__\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDMzNTc2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxMDo0M1rOGfkooQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxMDo0M1rOGfkooQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1OTI2NQ==", "bodyText": "validateExpiry() is not needed here because args.expiry has default value and no way to set invalid value to this.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435759265", "createdAt": "2020-06-05T08:10:43Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -68,10 +70,14 @@ public Builder expiry(int expiry) {\n     }\n \n     public Builder expiry(int duration, TimeUnit unit) {\n-      int expiry = (int) TimeUnit.SECONDS.convert(duration, unit);\n-      validateExpiry(expiry);\n-      operations.add(args -> args.expiry = expiry);\n-      return this;\n+      return expiry((int) unit.toSeconds(duration));\n+    }\n+\n+    @Override\n+    protected void validate(GetPresignedObjectUrlArgs args) {\n+      super.validate(args);\n+      validateMethod(args.method);\n+      validateExpiry(args.expiry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDMzNzU4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxMToxNlrOGfkpsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxMToxNlrOGfkpsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1OTUzOQ==", "bodyText": "Now this comment can be removed.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435759539", "createdAt": "2020-06-05T08:11:16Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -21,9 +21,9 @@\n \n /** Argument class of MinioClient.getPresignedObjectUrl(). */\n public class GetPresignedObjectUrlArgs extends ObjectArgs {\n-\n   // default expiration for a presigned URL is 7 days in seconds\n-  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  public static final int DEFAULT_EXPIRY_TIME = (int) TimeUnit.DAYS.toSeconds(7);\n+\n   private Method method;\n   // set default expiry as 7 days if not specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDM0NjAzOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNDowN1rOGfkvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNDowN1rOGfkvKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2MDkzNg==", "bodyText": "You have extra trailing white space.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435760936", "createdAt": "2020-06-05T08:14:07Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1291,33 +1291,67 @@ Gets URL of an object useful when this object has public read access.\n \n  __Example__\n  ```java\n-String url = minioClient.getObjectUrl(\"my-bucketname\", \"my-objectname\");\n+String url = minioClient.getObjectUrl(\"my-bucketname\",\"my-objectname\");\n System.out.println(\"my-bucketname/my-objectname can be downloaded by \" + url);\n ```\n \n  <a name=\"getPresignedObjectUrl\"></a>\n-### getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String getPresignedObjectUrl(Method method, String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.http.Method-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n+### getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+`public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#getPresignedObjectUrl-io.minio.GetPresignedObjectUrlArgs-)_\n \n Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n \n  __Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``method``     | _[Method]_           | HTTP method to generate presigned URL. |\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n+ \n+| Parameter   | Type                           | Description  |\n+|:------------|:-------------------------------|:-------------|\n+| ``args``    | _[GetPresignedObjectUrlArgs]_  | Arguments.   |\n+\n \n | Returns                |\n |:-----------------------|\n | _String_ - URL string. |\n \n- __Example__\n+ __Example__ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDM1MDkxOnYy", "diffSide": "RIGHT", "path": "docs/API.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNTo0M1rOGfkyQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODoxNTo0M1rOGfkyQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc2MTcyOQ==", "bodyText": "You still have this extra new line.", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435761729", "createdAt": "2020-06-05T08:15:43Z", "author": {"login": "balamurugana"}, "path": "docs/API.md", "diffHunk": "@@ -1354,87 +1388,18 @@ else {\n }\n ```\n \n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName)\n-`public String presignedGetObject(String bucketName, String objectName)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-)_\n-\n-Gets presigned URL of an object to download its data for 7 days.\n-\n-__Parameters__\n-| Parameter      | Type     | Description                |\n-|:---------------|:---------|:---------------------------|\n-| ``bucketName`` | _String_ | Name of the bucket.        |\n-| ``objectName`` | _String_ | Object name in the bucket. |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\");\n-```\n-\n-\n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName, Integer expires)\n-`public String presignedGetObject(String bucketName, String objectName, Integer expires)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-java.lang.Integer-)_\n-\n-Gets presigned URL of an object to download its data for expiry time.\n-\n-__Parameters__\n-| Parameter      | Type      | Description                                         |\n-|:---------------|:----------|:----------------------------------------------------|\n-| ``bucketName`` | _String_  | Name of the bucket.                                 |\n-| ``objectName`` | _String_  | Object name in the bucket.                          |\n-| ``expires``    | _Integer_ | Expiry in seconds. Default expiry is set to 7 days. |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-// Get presigned URL to download my-objectname data with one day expiry.\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\", 24 * 60 * 60);\n-```\n-\n-<a name=\"presignedGetObject\"></a>\n-### presignedGetObject(String bucketName, String objectName, Integer expires, Map<String,String> reqParams)\n-`public String presignedGetObject(String bucketName, String objectName, Integer expires, Map<String,String> reqParams)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedGetObject-java.lang.String-java.lang.String-java.lang.Integer-java.util.Map-)_\n-\n-Gets presigned URL of an object to download its data for expiry time and request parameters.\n-\n-__Parameters__\n-| Parameter      | Type                 | Description                            |\n-|:---------------|:---------------------|:---------------------------------------|\n-| ``bucketName`` | _String_             | Name of the bucket.                    |\n-| ``objectName`` | _String_             | Object name in the bucket.             |\n-| ``expires``    | _Integer_            | Expiry in seconds; defaults to 7 days. |\n-| ``reqParams``  | _Map<String,String>_ | Request parameters to override.        |\n-\n-| Returns                                       |\n-|:----------------------------------------------|\n-| _String_ - URL string to download the object. |\n-\n-__Example__\n-```java\n-// Get presigned URL to download my-objectname data with one day expiry and request parameters.\n-String url = minioClient.presignedGetObject(\"my-bucketname\", \"my-objectname\", 24 * 60 * 60, reqParams);\n-```\n-\n <a name=\"presignedPostPolicy\"></a>\n ### presignedPostPolicy(PostPolicy policy)\n `public Map<String,String> presignedPostPolicy(PostPolicy policy)` _[[Javadoc]](http://minio.github.io/minio-java/io/minio/MinioClient.html#presignedPostPolicy-io.minio.PostPolicy-)_\n \n Gets form-data of [PostPolicy] of an object to upload its data using POST method.\n \n __Parameters__\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0"}, "originalPosition": 188}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 713, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}