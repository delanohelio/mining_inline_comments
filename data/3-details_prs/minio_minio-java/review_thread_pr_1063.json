{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMzUyMDQ5", "number": 1063, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMToxMzozMlrOEm_dmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowOTo1NFrOEnF30Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzIxMTE0OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMToxMzozMlrOHXVZjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMToxMzozMlrOHXVZjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyOTkwMA==", "bodyText": "You would need to add this to putObject() test", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494229900", "createdAt": "2020-09-24T11:13:32Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2514,6 +2514,24 @@ public static void setObjectRetention() throws Exception {\n                 .config(new Retention())\n                 .bypassGovernanceMode(true)\n                 .build());\n+\n+        objectInfo =\n+            client.putObject(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "889c2bbc8ad4268b6526b4f718ece07d09dd7538"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI0ODYyOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNzowNlrOHXfgxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNzowNlrOHXfgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NTU5MQ==", "bodyText": "Move ObjectWriteResponse objectInfo = null; here.", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494395591", "createdAt": "2020-09-24T15:07:06Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -749,16 +749,31 @@ public static void testPutObject(String testTags, PutObjectArgs args, String err\n       throws Exception {\n     String methodName = \"putObject()\";\n     long startTime = System.currentTimeMillis();\n+    ObjectWriteResponse objectInfo = null;\n     try {\n       try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI1MTMzOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNzo0MVrOHXfibQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNzo0MVrOHXfibQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NjAxMw==", "bodyText": "Use if (args.retention() != null)", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494396013", "createdAt": "2020-09-24T15:07:41Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -749,16 +749,31 @@ public static void testPutObject(String testTags, PutObjectArgs args, String err\n       throws Exception {\n     String methodName = \"putObject()\";\n     long startTime = System.currentTimeMillis();\n+    ObjectWriteResponse objectInfo = null;\n     try {\n       try {\n-        client.putObject(args);\n+        objectInfo = client.putObject(args);\n       } catch (ErrorResponseException e) {\n         if (errorCode == null || !e.errorResponse().code().equals(errorCode)) {\n           throw e;\n         }\n       }\n+      if (testTags.equals(\"[With Retention]\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI1NDcyOnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowODoyNFrOHXfkjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyMzoxNVrOHXgPhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NjU1Nw==", "bodyText": "Just use .versionId(objectInfo.versionId())", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494396557", "createdAt": "2020-09-24T15:08:24Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -749,16 +749,31 @@ public static void testPutObject(String testTags, PutObjectArgs args, String err\n       throws Exception {\n     String methodName = \"putObject()\";\n     long startTime = System.currentTimeMillis();\n+    ObjectWriteResponse objectInfo = null;\n     try {\n       try {\n-        client.putObject(args);\n+        objectInfo = client.putObject(args);\n       } catch (ErrorResponseException e) {\n         if (errorCode == null || !e.errorResponse().code().equals(errorCode)) {\n           throw e;\n         }\n       }\n+      if (testTags.equals(\"[With Retention]\")) {\n+        client.setObjectRetention(\n+            SetObjectRetentionArgs.builder()\n+                .bucket(args.bucket())\n+                .object(args.object())\n+                .config(new Retention())\n+                .bypassGovernanceMode(true)\n+                .build());\n+      }\n       client.removeObject(\n-          RemoveObjectArgs.builder().bucket(args.bucket()).object(args.object()).build());\n+          RemoveObjectArgs.builder()\n+              .bucket(args.bucket())\n+              .object(args.object())\n+              .versionId(objectInfo != null ? objectInfo.versionId() : null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwNzU1OQ==", "bodyText": "It wont work as below test doesn't populate objectInfo\n testPutObject(\n        \"[storage-class=INVALID negative case]\",\n        PutObjectArgs.builder().bucket(bucketName).object(getRandomName()).stream(\n                new ContentInputStream(1 * KB), 1 * KB, -1)\n            .headers(headers)\n            .build(),\n        \"InvalidStorageClass\");", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494407559", "createdAt": "2020-09-24T15:23:15Z", "author": {"login": "sinhaashish"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -749,16 +749,31 @@ public static void testPutObject(String testTags, PutObjectArgs args, String err\n       throws Exception {\n     String methodName = \"putObject()\";\n     long startTime = System.currentTimeMillis();\n+    ObjectWriteResponse objectInfo = null;\n     try {\n       try {\n-        client.putObject(args);\n+        objectInfo = client.putObject(args);\n       } catch (ErrorResponseException e) {\n         if (errorCode == null || !e.errorResponse().code().equals(errorCode)) {\n           throw e;\n         }\n       }\n+      if (testTags.equals(\"[With Retention]\")) {\n+        client.setObjectRetention(\n+            SetObjectRetentionArgs.builder()\n+                .bucket(args.bucket())\n+                .object(args.object())\n+                .config(new Retention())\n+                .bypassGovernanceMode(true)\n+                .build());\n+      }\n       client.removeObject(\n-          RemoveObjectArgs.builder().bucket(args.bucket()).object(args.object()).build());\n+          RemoveObjectArgs.builder()\n+              .bucket(args.bucket())\n+              .object(args.object())\n+              .versionId(objectInfo != null ? objectInfo.versionId() : null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NjU1Nw=="}, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI1Nzk3OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowOToxM1rOHXfmsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowOToxM1rOHXfmsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NzEwNA==", "bodyText": "No need to declare a variable; instead use getRandomName() directly.", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494397104", "createdAt": "2020-09-24T15:09:13Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -909,6 +924,16 @@ public static void putObject() throws Exception {\n             .build(),\n         null);\n \n+    String retainedObjectName = getRandomName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI2MTI5OnYy", "diffSide": "RIGHT", "path": "functional/FunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowOTo1NVrOHXfoyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowOTo1NVrOHXfoyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NzY0Mw==", "bodyText": "Keep tag lower cased.", "url": "https://github.com/minio/minio-java/pull/1063#discussion_r494397643", "createdAt": "2020-09-24T15:09:55Z", "author": {"login": "balamurugana"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -909,6 +924,16 @@ public static void putObject() throws Exception {\n             .build(),\n         null);\n \n+    String retainedObjectName = getRandomName();\n+    testPutObject(\n+        \"[With Retention]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c2fd0a7f474a5c9b9bc13b8c729c88accc778a"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 622, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}