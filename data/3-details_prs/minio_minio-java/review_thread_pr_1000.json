{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTc3ODgz", "number": 1000, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1ODoxN1rOELPiMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo1MjoxN1rOELQdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjI0MzA3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1ODoxN1rOGsvndw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxNDoxMlrOGszM_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDY3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Multimap<String, String> multimap = HashMultimap.create();\n          \n          \n            \n                if (map != null) multimap.putAll(map);\n          \n          \n            \n                return multimap;\n          \n          \n            \n                return (map != null) ? HashMultimap.create(map) : HashMultimap.create();", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449570679", "createdAt": "2020-07-03T12:58:17Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -721,15 +721,37 @@ private void checkReadRequestSse(ServerSideEncryption sse) throws IllegalArgumen\n \n   private Multimap<String, String> merge(Multimap<String, String> m1, Multimap<String, String> m2) {\n     Multimap<String, String> map = HashMultimap.create();\n-    if (m1 != null) {\n-      map.putAll(m1);\n+    if (m1 != null) map.putAll(m1);\n+    if (m2 != null) map.putAll(m2);\n+    return map;\n+  }\n+\n+  /** Create new HashMultimap by alternating keys and values. */\n+  private Multimap<String, String> newMultimap(String... keysAndValues) {\n+    if (keysAndValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\"Expected alternating keys and values\");\n     }\n-    if (m2 != null) {\n-      map.putAll(m2);\n+\n+    Multimap<String, String> map = HashMultimap.create();\n+    for (int i = 0; i < keysAndValues.length; i += 2) {\n+      map.put(keysAndValues[i], keysAndValues[i + 1]);\n     }\n+\n     return map;\n   }\n \n+  /** Create new HashMultimap with copy of Map. */\n+  private Multimap<String, String> newMultimap(Map<String, String> map) {\n+    return (map != null) ? Multimaps.forMap(map) : HashMultimap.create();\n+  }\n+\n+  /** Create new HashMultimap with copy of Multimap. */\n+  private Multimap<String, String> newMultimap(Multimap<String, String> map) {\n+    Multimap<String, String> multimap = HashMultimap.create();\n+    if (map != null) multimap.putAll(map);\n+    return multimap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYyOTQzNg==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449629436", "createdAt": "2020-07-03T15:14:12Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -721,15 +721,37 @@ private void checkReadRequestSse(ServerSideEncryption sse) throws IllegalArgumen\n \n   private Multimap<String, String> merge(Multimap<String, String> m1, Multimap<String, String> m2) {\n     Multimap<String, String> map = HashMultimap.create();\n-    if (m1 != null) {\n-      map.putAll(m1);\n+    if (m1 != null) map.putAll(m1);\n+    if (m2 != null) map.putAll(m2);\n+    return map;\n+  }\n+\n+  /** Create new HashMultimap by alternating keys and values. */\n+  private Multimap<String, String> newMultimap(String... keysAndValues) {\n+    if (keysAndValues.length % 2 != 0) {\n+      throw new IllegalArgumentException(\"Expected alternating keys and values\");\n     }\n-    if (m2 != null) {\n-      map.putAll(m2);\n+\n+    Multimap<String, String> map = HashMultimap.create();\n+    for (int i = 0; i < keysAndValues.length; i += 2) {\n+      map.put(keysAndValues[i], keysAndValues[i + 1]);\n     }\n+\n     return map;\n   }\n \n+  /** Create new HashMultimap with copy of Map. */\n+  private Multimap<String, String> newMultimap(Map<String, String> map) {\n+    return (map != null) ? Multimaps.forMap(map) : HashMultimap.create();\n+  }\n+\n+  /** Create new HashMultimap with copy of Multimap. */\n+  private Multimap<String, String> newMultimap(Multimap<String, String> map) {\n+    Multimap<String, String> multimap = HashMultimap.create();\n+    if (map != null) multimap.putAll(map);\n+    return multimap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDY3OQ=="}, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjMzOTU0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzozMjoyNlrOGswibQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxNjowMFrOGszP5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4NTc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String range =\n          \n          \n            \n                    (offset != null)\n          \n          \n            \n                        ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n          \n          \n            \n                        : null;\n          \n          \n            \n                String range = null;\n          \n          \n            \n                if(offset != null) {\n          \n          \n            \n                  range = \"bytes=\" + offset + \"-\";\n          \n          \n            \n                  if(length != null) {\n          \n          \n            \n                    range = range + (offset + length - 1);\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nCouple of more lines, but I think this is more readable.", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449585773", "createdAt": "2020-07-03T13:32:26Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -1692,16 +1707,14 @@ public InputStream getObject(GetObjectArgs args)\n       offset = 0L;\n     }\n \n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (length != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\" + (offset + length - 1));\n-    } else if (offset != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\");\n-    }\n+    String range =\n+        (offset != null)\n+            ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n+            : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDE4Mg==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449630182", "createdAt": "2020-07-03T15:16:00Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -1692,16 +1707,14 @@ public InputStream getObject(GetObjectArgs args)\n       offset = 0L;\n     }\n \n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (length != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\" + (offset + length - 1));\n-    } else if (offset != null) {\n-      headers.put(\"Range\", \"bytes=\" + offset + \"-\");\n-    }\n+    String range =\n+        (offset != null)\n+            ? (\"bytes=\" + offset + \"-\" + (length != null ? offset + length - 1 : \"\"))\n+            : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4NTc3Mw=="}, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjM2MDQ1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzozOTo1MFrOGswvQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxNzoxN1rOGszRxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4OTA1Nw==", "bodyText": "Earlier, when the condition was false (bypassGovernanceMode() / args.versionId() != null), an empty multimap was being passed. Now null is being passed. Is this fine?", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449589057", "createdAt": "2020-07-03T13:39:50Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2876,14 +2889,12 @@ public void removeObject(RemoveObjectArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"true\");\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    executeDelete(args, headers, queryParams);\n+    executeDelete(\n+        args,\n+        args.bypassGovernanceMode()\n+            ? newMultimap(\"x-amz-bypass-governance-retention\", \"true\")\n+            : null,\n+        (args.versionId() != null) ? newMultimap(\"versionId\", args.versionId()) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMDY2Mw==", "bodyText": "No problem. execute() takes care null values properly.", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449630663", "createdAt": "2020-07-03T15:17:17Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2876,14 +2889,12 @@ public void removeObject(RemoveObjectArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"true\");\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    executeDelete(args, headers, queryParams);\n+    executeDelete(\n+        args,\n+        args.bypassGovernanceMode()\n+            ? newMultimap(\"x-amz-bypass-governance-retention\", \"true\")\n+            : null,\n+        (args.versionId() != null) ? newMultimap(\"versionId\", args.versionId()) : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU4OTA1Nw=="}, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 189}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjM3NzE1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo0NTo1OVrOGsw5eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxOTowOVrOGszUYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5MTY3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,\n          \n          \n            \n                        region.equals(US_EAST_1) ? null : new CreateBucketConfiguration(region),\n          \n      \n    \n    \n  \n\nThis would be simpler", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449591674", "createdAt": "2020-07-03T13:45:59Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3803,7 +3806,7 @@ public void makeBucket(MakeBucketArgs args)\n             region,\n             merge(args.extraHeaders(), headers),\n             args.extraQueryParams(),\n-            config,\n+            (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMTMyOA==", "bodyText": "done", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449631328", "createdAt": "2020-07-03T15:19:09Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -3803,7 +3806,7 @@ public void makeBucket(MakeBucketArgs args)\n             region,\n             merge(args.extraHeaders(), headers),\n             args.extraQueryParams(),\n-            config,\n+            (!region.equals(US_EAST_1)) ? new CreateBucketConfiguration(region) : null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5MTY3NA=="}, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjM5NTEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/io/minio/MinioClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo1MjoxN1rOGsxEQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNToxOTozM1rOGszU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NDQzMw==", "bodyText": "Earlier, when the condition was false (bypassGovernanceMode()), an empty multimap was being passed. Now null is being passed. Is this fine?", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449594433", "createdAt": "2020-07-03T13:52:17Z", "author": {"login": "anjalshireesh"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4249,15 +4232,17 @@ public void setObjectRetention(SetObjectRetentionArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    queryParams.put(\"retention\", \"\");\n+    Multimap<String, String> queryParams = newMultimap(\"retention\", \"\");\n     if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"True\");\n-\n-    Response response = executePut(args, headers, queryParams, args.config(), 0);\n+    Response response =\n+        executePut(\n+            args,\n+            args.bypassGovernanceMode()\n+                ? newMultimap(\"x-amz-bypass-governance-retention\", \"True\")\n+                : null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 322}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzMTQ2Mg==", "bodyText": "No problem.", "url": "https://github.com/minio/minio-java/pull/1000#discussion_r449631462", "createdAt": "2020-07-03T15:19:33Z", "author": {"login": "balamurugana"}, "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -4249,15 +4232,17 @@ public void setObjectRetention(SetObjectRetentionArgs args)\n           InvalidResponseException, IOException, NoSuchAlgorithmException, ServerException,\n           XmlParserException {\n     checkArgs(args);\n-\n-    Multimap<String, String> queryParams = HashMultimap.create();\n-    queryParams.put(\"retention\", \"\");\n+    Multimap<String, String> queryParams = newMultimap(\"retention\", \"\");\n     if (args.versionId() != null) queryParams.put(\"versionId\", args.versionId());\n-\n-    Multimap<String, String> headers = HashMultimap.create();\n-    if (args.bypassGovernanceMode()) headers.put(\"x-amz-bypass-governance-retention\", \"True\");\n-\n-    Response response = executePut(args, headers, queryParams, args.config(), 0);\n+    Response response =\n+        executePut(\n+            args,\n+            args.bypassGovernanceMode()\n+                ? newMultimap(\"x-amz-bypass-governance-retention\", \"True\")\n+                : null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5NDQzMw=="}, "originalCommit": {"oid": "2f80e4dcfa7f4656b03ed53ca176b367fdfc7b7d"}, "originalPosition": 322}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 755, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}