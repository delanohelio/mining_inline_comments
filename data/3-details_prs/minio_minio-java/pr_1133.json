{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTE5Mzc0", "number": 1133, "title": "Use junit in functional tests", "bodyText": "", "createdAt": "2020-12-04T12:59:20Z", "url": "https://github.com/minio/minio-java/pull/1133", "merged": true, "mergeCommit": {"oid": "3d95b5c4f85abe3abbc9a159ed876ab62d6f811d"}, "closed": true, "closedAt": "2020-12-22T20:45:57Z", "author": {"login": "balamurugana"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnPRBZgH2gAyNTMyNTE5Mzc0OmIyZTQ3MmY4ZjlhZTNkNjFlN2ExOGZlMDZjZDMxZjFjMDI1YzFmOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdowzNZgFqTU1NzM1NjcxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e", "committedDate": "2020-12-18T03:07:27Z", "message": "Use junit in functional tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26cab59095de5a7d70f73b8b746afbe650a27a00", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/26cab59095de5a7d70f73b8b746afbe650a27a00", "committedDate": "2020-12-04T12:58:27Z", "message": "Use junit in functional tests"}, "afterCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e", "author": {"user": {"login": "balamurugana", "name": "Bala FA"}}, "url": "https://github.com/minio/minio-java/commit/b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e", "committedDate": "2020-12-18T03:07:27Z", "message": "Use junit in functional tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTkwNDc2", "url": "https://github.com/minio/minio-java/pull/1133#pullrequestreview-555190476", "createdAt": "2020-12-18T06:00:35Z", "commit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNjowMDozNVrOIIUMyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNjoyNjozN1rOIIUrLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MDQ3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(\n          \n          \n            \n                    Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545590473", "createdAt": "2020-12-18T06:00:35Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1002,43 +999,40 @@ public static void testStatObject(\n                     .ssec(ssec)\n                     .build());\n \n-        if (!expectedStat.bucket().equals(stat.bucket())) {\n-          throw new Exception(\n-              \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket());\n-        }\n-\n-        if (!expectedStat.object().equals(stat.object())) {\n-          throw new Exception(\n-              \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object());\n-        }\n-\n-        if (expectedStat.size() != stat.size()) {\n-          throw new Exception(\n-              \"length: expected = \" + expectedStat.size() + \", got = \" + stat.size());\n-        }\n-\n-        if (!expectedStat.contentType().equals(stat.contentType())) {\n-          throw new Exception(\n-              \"content-type: expected = \"\n-                  + expectedStat.contentType()\n-                  + \", got = \"\n-                  + stat.contentType());\n-        }\n+        Assert.assertEquals(\n+            \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket(),\n+            expectedStat.bucket(),\n+            stat.bucket());\n+\n+        Assert.assertEquals(\n+            \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object(),\n+            expectedStat.object(),\n+            stat.object());\n+\n+        Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MTQ2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      Assert.assertTrue(\"metadata \" + key + \" not found\", stat.userMetadata().containsKey(key));\n          \n          \n            \n                      Assert.assertFalse(\"metadata \" + key + \" not found\", stat.userMetadata().containsKey(key));", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545591469", "createdAt": "2020-12-18T06:04:02Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1002,43 +999,40 @@ public static void testStatObject(\n                     .ssec(ssec)\n                     .build());\n \n-        if (!expectedStat.bucket().equals(stat.bucket())) {\n-          throw new Exception(\n-              \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket());\n-        }\n-\n-        if (!expectedStat.object().equals(stat.object())) {\n-          throw new Exception(\n-              \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object());\n-        }\n-\n-        if (expectedStat.size() != stat.size()) {\n-          throw new Exception(\n-              \"length: expected = \" + expectedStat.size() + \", got = \" + stat.size());\n-        }\n-\n-        if (!expectedStat.contentType().equals(stat.contentType())) {\n-          throw new Exception(\n-              \"content-type: expected = \"\n-                  + expectedStat.contentType()\n-                  + \", got = \"\n-                  + stat.contentType());\n-        }\n+        Assert.assertEquals(\n+            \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket(),\n+            expectedStat.bucket(),\n+            stat.bucket());\n+\n+        Assert.assertEquals(\n+            \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object(),\n+            expectedStat.object(),\n+            stat.object());\n+\n+        Assert.assertEquals(\n+            \"length: expected = \" + expectedStat.size() + \", got = \" + stat.size(),\n+            expectedStat.size(),\n+            stat.size());\n+\n+        Assert.assertEquals(\n+            \"content-type: expected = \"\n+                + expectedStat.contentType()\n+                + \", got = \"\n+                + stat.contentType(),\n+            expectedStat.contentType(),\n+            stat.contentType());\n \n         for (String key : expectedStat.userMetadata().keySet()) {\n-          if (!stat.userMetadata().containsKey(key)) {\n-            throw new Exception(\"metadata \" + key + \" not found\");\n-          }\n-\n-          if (!expectedStat.userMetadata().get(key).equals(stat.userMetadata().get(key))) {\n-            throw new Exception(\n-                \"metadata \"\n-                    + key\n-                    + \" value: expected: \"\n-                    + expectedStat.userMetadata().get(key)\n-                    + \", got: \"\n-                    + stat.userMetadata().get(key));\n-          }\n+          Assert.assertTrue(\"metadata \" + key + \" not found\", stat.userMetadata().containsKey(key));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MTkzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      Assert.assertEquals(\n          \n          \n            \n                      Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545591930", "createdAt": "2020-12-18T06:05:38Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1002,43 +999,40 @@ public static void testStatObject(\n                     .ssec(ssec)\n                     .build());\n \n-        if (!expectedStat.bucket().equals(stat.bucket())) {\n-          throw new Exception(\n-              \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket());\n-        }\n-\n-        if (!expectedStat.object().equals(stat.object())) {\n-          throw new Exception(\n-              \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object());\n-        }\n-\n-        if (expectedStat.size() != stat.size()) {\n-          throw new Exception(\n-              \"length: expected = \" + expectedStat.size() + \", got = \" + stat.size());\n-        }\n-\n-        if (!expectedStat.contentType().equals(stat.contentType())) {\n-          throw new Exception(\n-              \"content-type: expected = \"\n-                  + expectedStat.contentType()\n-                  + \", got = \"\n-                  + stat.contentType());\n-        }\n+        Assert.assertEquals(\n+            \"bucket name: expected = \" + expectedStat.bucket() + \", got = \" + stat.bucket(),\n+            expectedStat.bucket(),\n+            stat.bucket());\n+\n+        Assert.assertEquals(\n+            \"object name: expected = \" + expectedStat.object() + \", got = \" + stat.object(),\n+            expectedStat.object(),\n+            stat.object());\n+\n+        Assert.assertEquals(\n+            \"length: expected = \" + expectedStat.size() + \", got = \" + stat.size(),\n+            expectedStat.size(),\n+            stat.size());\n+\n+        Assert.assertEquals(\n+            \"content-type: expected = \"\n+                + expectedStat.contentType()\n+                + \", got = \"\n+                + stat.contentType(),\n+            expectedStat.contentType(),\n+            stat.contentType());\n \n         for (String key : expectedStat.userMetadata().keySet()) {\n-          if (!stat.userMetadata().containsKey(key)) {\n-            throw new Exception(\"metadata \" + key + \" not found\");\n-          }\n-\n-          if (!expectedStat.userMetadata().get(key).equals(stat.userMetadata().get(key))) {\n-            throw new Exception(\n-                \"metadata \"\n-                    + key\n-                    + \" value: expected: \"\n-                    + expectedStat.userMetadata().get(key)\n-                    + \", got: \"\n-                    + stat.userMetadata().get(key));\n-          }\n+          Assert.assertTrue(\"metadata \" + key + \" not found\", stat.userMetadata().containsKey(key));\n+          Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MjM1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(\n          \n          \n            \n                    Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545592350", "createdAt": "2020-12-18T06:07:00Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1137,9 +1131,10 @@ public static void testGetObject(\n \n       try (InputStream is = client.getObject(args)) {\n         String checksum = getSha256Sum(is, length);\n-        if (!checksum.equals(sha256sum)) {\n-          throw new Exception(\"checksum mismatch. expected: \" + sha256sum + \", got: \" + checksum);\n-        }\n+        Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5Mjg2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(\"object count; expected=\" + objCount + \", got=\" + i, i, objCount);\n          \n          \n            \n                    Assert.assertNotSame(\"object count; expected=\" + objCount + \", got=\" + i, i, objCount);", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545592862", "createdAt": "2020-12-18T06:08:37Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1404,10 +1399,7 @@ public static void testListObjects(\n           objCount *= versions;\n         }\n \n-        if (i != objCount) {\n-          throw new Exception(\"object count; expected=\" + objCount + \", got=\" + i);\n-        }\n-\n+        Assert.assertEquals(\"object count; expected=\" + objCount + \", got=\" + i, i, objCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MzA0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Assert.assertEquals(\n          \n          \n            \n                Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545593041", "createdAt": "2020-12-18T06:09:09Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1586,10 +1578,10 @@ public static void testGetPresignedUrl(GetPresignedObjectUrlArgs args, String ex\n     String urlString = client.getPresignedObjectUrl(args);\n     byte[] data = readObject(urlString);\n     String checksum = getSha256Sum(new ByteArrayInputStream(data), data.length);\n-    if (!expectedChecksum.equals(checksum)) {\n-      throw new Exception(\n-          \"content checksum differs; expected = \" + expectedChecksum + \", got = \" + checksum);\n-    }\n+    Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5MzIyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(\n          \n          \n            \n                    Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545593220", "createdAt": "2020-12-18T06:09:51Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1661,10 +1653,10 @@ public static void testPutPresignedUrl(\n                 GetObjectArgs.builder().bucket(args.bucket()).object(args.object()).build());\n         data = readAllBytes(is);\n         String checksum = getSha256Sum(new ByteArrayInputStream(data), data.length);\n-        if (!expectedChecksum.equals(checksum)) {\n-          throw new Exception(\n-              \"content checksum differs; expected = \" + expectedChecksum + \", got = \" + checksum);\n-        }\n+        Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 251}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5Mzg0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertFalse(\n          \n          \n            \n                    Assert.assertTrue(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545593846", "createdAt": "2020-12-18T06:11:59Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -1960,10 +1946,9 @@ public static void testCopyObjectEmptyMetadataReplace() throws Exception {\n                     .bucket(bucketName)\n                     .object(srcObjectName + \"-copy\")\n                     .build());\n-        if (stat.userMetadata().containsKey(\"My-Project\")) {\n-          throw new Exception(\"expected user metadata to be removed in new object\");\n-        }\n-\n+        Assert.assertFalse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 296}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NDA1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Assert.assertEquals(\n          \n          \n            \n                Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545594054", "createdAt": "2020-12-18T06:12:40Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2316,9 +2301,8 @@ public static void checkObjectLegalHold(String bucketName, String objectName, bo\n     boolean result =\n         client.isObjectLegalHoldEnabled(\n             IsObjectLegalHoldEnabledArgs.builder().bucket(bucketName).object(objectName).build());\n-    if (result != enableCheck) {\n-      throw new Exception(\"object legal hold: expected: \" + enableCheck + \", got: \" + result);\n-    }\n+    Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 309}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NDMzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertFalse(\"object legal hold: expected: false, got: \" + result, result);\n          \n          \n            \n                    Assert.assertTrue(\"object legal hold: expected: false, got: \" + result, result);", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545594339", "createdAt": "2020-12-18T06:13:54Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2427,9 +2411,7 @@ public static void isObjectLegalHoldEnabled() throws Exception {\n                     .bucket(bucketNameWithLock)\n                     .object(objectName)\n                     .build());\n-        if (result != false) {\n-          throw new Exception(\"object legal hold: expected: false, got: \" + result);\n-        }\n+        Assert.assertFalse(\"object legal hold: expected: false, got: \" + result, result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 321}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NDU2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Assert.assertEquals(\n          \n          \n            \n                Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545594565", "createdAt": "2020-12-18T06:14:47Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2482,17 +2464,14 @@ public static void testGetObjectLockConfiguration(\n     ObjectLockConfiguration config =\n         client.getObjectLockConfiguration(\n             GetObjectLockConfigurationArgs.builder().bucket(bucketName).build());\n-\n-    if (config.mode() != expectedConfig.mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + expectedConfig.mode() + \", got: \" + config.mode());\n-    }\n-\n-    if (config.duration().unit() != expectedConfig.duration().unit()\n-        || config.duration().duration() != expectedConfig.duration().duration()) {\n-      throw new Exception(\n-          \"retention duration: \" + expectedConfig.duration() + \", got: \" + config.duration());\n-    }\n+    Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 340}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NTEyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Assert.assertFalse(\n          \n          \n            \n                Assert.assertTrue(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545595123", "createdAt": "2020-12-18T06:16:33Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2482,17 +2464,14 @@ public static void testGetObjectLockConfiguration(\n     ObjectLockConfiguration config =\n         client.getObjectLockConfiguration(\n             GetObjectLockConfigurationArgs.builder().bucket(bucketName).build());\n-\n-    if (config.mode() != expectedConfig.mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + expectedConfig.mode() + \", got: \" + config.mode());\n-    }\n-\n-    if (config.duration().unit() != expectedConfig.duration().unit()\n-        || config.duration().duration() != expectedConfig.duration().duration()) {\n-      throw new Exception(\n-          \"retention duration: \" + expectedConfig.duration() + \", got: \" + config.duration());\n-    }\n+    Assert.assertEquals(\n+        \"retention mode: expected: \" + expectedConfig.mode() + \", got: \" + config.mode(),\n+        config.mode(),\n+        expectedConfig.mode());\n+    Assert.assertFalse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 344}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NzA0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Assert.assertFalse(\n          \n          \n            \n                  Assert.assertTrue(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545597042", "createdAt": "2020-12-18T06:22:53Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2606,27 +2585,29 @@ public static void testGetObjectRetention(SetObjectRetentionArgs args) throws Ex\n             GetObjectRetentionArgs.builder().bucket(args.bucket()).object(args.object()).build());\n \n     if (args.config().mode() == null) {\n-      if (config != null && config.mode() != null) {\n-        throw new Exception(\"retention mode: expected: <null>, got: \" + config.mode());\n-      }\n-    } else if (config.mode() != args.config().mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode());\n+      Assert.assertFalse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 361}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NzIwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Assert.assertEquals(\n          \n          \n            \n                  Assert.assertNotSame(", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545597208", "createdAt": "2020-12-18T06:23:25Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2606,27 +2585,29 @@ public static void testGetObjectRetention(SetObjectRetentionArgs args) throws Ex\n             GetObjectRetentionArgs.builder().bucket(args.bucket()).object(args.object()).build());\n \n     if (args.config().mode() == null) {\n-      if (config != null && config.mode() != null) {\n-        throw new Exception(\"retention mode: expected: <null>, got: \" + config.mode());\n-      }\n-    } else if (config.mode() != args.config().mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode());\n+      Assert.assertFalse(\n+          \"retention mode: expected: <null>, got: \" + config.mode(),\n+          config != null && config.mode() != null);\n+    } else {\n+      Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 365}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5NzYwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Assert.assertNull(\"retention retain-until-date: expected: <null>, got: \" + date, date);\n          \n          \n            \n                  Assert.assertNotNull(\"retention retain-until-date: expected: <null>, got: \" + date, date);", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545597602", "createdAt": "2020-12-18T06:24:41Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2606,27 +2585,29 @@ public static void testGetObjectRetention(SetObjectRetentionArgs args) throws Ex\n             GetObjectRetentionArgs.builder().bucket(args.bucket()).object(args.object()).build());\n \n     if (args.config().mode() == null) {\n-      if (config != null && config.mode() != null) {\n-        throw new Exception(\"retention mode: expected: <null>, got: \" + config.mode());\n-      }\n-    } else if (config.mode() != args.config().mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode());\n+      Assert.assertFalse(\n+          \"retention mode: expected: <null>, got: \" + config.mode(),\n+          config != null && config.mode() != null);\n+    } else {\n+      Assert.assertEquals(\n+          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode(),\n+          args.config().mode(),\n+          config.mode());\n     }\n \n     ZonedDateTime expectedDate = args.config().retainUntilDate();\n     ZonedDateTime date = (config == null) ? null : config.retainUntilDate();\n \n     if (expectedDate == null) {\n-      if (date != null) {\n-        throw new Exception(\"retention retain-until-date: expected: <null>, got: \" + date);\n-      }\n-    } else if (!date.withNano(0).equals(expectedDate.withNano(0))) {\n-      throw new Exception(\n+      Assert.assertNull(\"retention retain-until-date: expected: <null>, got: \" + date, date);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 380}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU5ODI1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Assert.assertEquals(\n          \n          \n            \n                  Assert.assertNotSame(\n          \n      \n    \n    \n  \n\nI'll stop here and ask you to please check all the negated conditions and make sure the correct assert method is used. It looks like probably all of them needs to be reverted.\nHow did this pass CI testing?\nAm I doing something wrong?", "url": "https://github.com/minio/minio-java/pull/1133#discussion_r545598253", "createdAt": "2020-12-18T06:26:37Z", "author": {"login": "ebozduman"}, "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2606,27 +2585,29 @@ public static void testGetObjectRetention(SetObjectRetentionArgs args) throws Ex\n             GetObjectRetentionArgs.builder().bucket(args.bucket()).object(args.object()).build());\n \n     if (args.config().mode() == null) {\n-      if (config != null && config.mode() != null) {\n-        throw new Exception(\"retention mode: expected: <null>, got: \" + config.mode());\n-      }\n-    } else if (config.mode() != args.config().mode()) {\n-      throw new Exception(\n-          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode());\n+      Assert.assertFalse(\n+          \"retention mode: expected: <null>, got: \" + config.mode(),\n+          config != null && config.mode() != null);\n+    } else {\n+      Assert.assertEquals(\n+          \"retention mode: expected: \" + args.config().mode() + \", got: \" + config.mode(),\n+          args.config().mode(),\n+          config.mode());\n     }\n \n     ZonedDateTime expectedDate = args.config().retainUntilDate();\n     ZonedDateTime date = (config == null) ? null : config.retainUntilDate();\n \n     if (expectedDate == null) {\n-      if (date != null) {\n-        throw new Exception(\"retention retain-until-date: expected: <null>, got: \" + date);\n-      }\n-    } else if (!date.withNano(0).equals(expectedDate.withNano(0))) {\n-      throw new Exception(\n+      Assert.assertNull(\"retention retain-until-date: expected: <null>, got: \" + date, date);\n+    } else {\n+      Assert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "originalPosition": 382}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjkyNjE3", "url": "https://github.com/minio/minio-java/pull/1133#pullrequestreview-555292617", "createdAt": "2020-12-18T08:33:44Z", "commit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MzU2NzE4", "url": "https://github.com/minio/minio-java/pull/1133#pullrequestreview-557356718", "createdAt": "2020-12-22T20:45:35Z", "commit": {"oid": "b2e472f8f9ae3d61e7a18fe06cd31f1c025c1f8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1824, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}