{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMjM0NTIy", "number": 6455, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoxNzo1N1rODv4jmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoxNzo1N1rODv4jmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTM2MjgwOnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODoxNzo1OFrOGCkFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODozMjoxM1rOGCknVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0MTQ3NA==", "bodyText": "given the method name, i think we should use\nde.metas.util.collections.CollectionUtils.singleElement(Collection<T>)\nor, we should call the method getFirstRecord, if there can be >1", "url": "https://github.com/metasfresh/metasfresh/pull/6455#discussion_r405341474", "createdAt": "2020-04-08T08:17:58Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "diffHunk": "@@ -827,58 +857,15 @@ public String toString()\n \t\t\treturn MoreObjects.toStringHelper(this)\n \t\t\t\t\t.omitNullValues()\n \t\t\t\t\t.add(\"records\", records)\n-\t\t\t\t\t.add(\"adWindowId\", adWindowIdStr)\n+\t\t\t\t\t.add(\"adWindowId\", windowIdString)\n \t\t\t\t\t.add(\"target\", target)\n+\t\t\t\t\t.add(\"automaticallySetReferencingDocumentPaths\", automaticallySetReferencingDocumentPaths)\n \t\t\t\t\t.toString();\n \t\t}\n \n-\t\t@Override\n-\t\tpublic int hashCode()\n-\t\t{\n-\t\t\treturn Objects.hash(records, adWindowIdStr, target);\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean equals(final Object obj)\n-\t\t{\n-\t\t\tif (this == obj)\n-\t\t\t{\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\tif (obj instanceof RecordsToOpen)\n-\t\t\t{\n-\t\t\t\tfinal RecordsToOpen other = (RecordsToOpen)obj;\n-\t\t\t\treturn Objects.equals(records, other.records)\n-\t\t\t\t\t\t&& Objects.equals(adWindowIdStr, other.adWindowIdStr)\n-\t\t\t\t\t\t&& Objects.equals(target, other.target);\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n-\n-\t\t/**\n-\t\t * @return records to open; never null or empty\n-\t\t */\n-\t\tpublic List<TableRecordReference> getRecords()\n-\t\t{\n-\t\t\treturn records;\n-\t\t}\n-\n \t\tpublic TableRecordReference getSingleRecord()\n \t\t{\n-\t\t\treturn records.get(0);\n-\t\t}\n-\n-\t\tpublic String getWindowIdString()\n-\t\t{\n-\t\t\treturn adWindowIdStr;\n-\t\t}\n-\n-\t\tpublic OpenTarget getTarget()\n-\t\t{\n-\t\t\treturn target;\n+\t\t\treturn getRecords().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879da8dd1bfec33f1ca40ff128e4ff5d0b1ee9dc"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM1MDIzMA==", "bodyText": "as talked: there is always at least one record", "url": "https://github.com/metasfresh/metasfresh/pull/6455#discussion_r405350230", "createdAt": "2020-04-08T08:32:13Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "diffHunk": "@@ -827,58 +857,15 @@ public String toString()\n \t\t\treturn MoreObjects.toStringHelper(this)\n \t\t\t\t\t.omitNullValues()\n \t\t\t\t\t.add(\"records\", records)\n-\t\t\t\t\t.add(\"adWindowId\", adWindowIdStr)\n+\t\t\t\t\t.add(\"adWindowId\", windowIdString)\n \t\t\t\t\t.add(\"target\", target)\n+\t\t\t\t\t.add(\"automaticallySetReferencingDocumentPaths\", automaticallySetReferencingDocumentPaths)\n \t\t\t\t\t.toString();\n \t\t}\n \n-\t\t@Override\n-\t\tpublic int hashCode()\n-\t\t{\n-\t\t\treturn Objects.hash(records, adWindowIdStr, target);\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean equals(final Object obj)\n-\t\t{\n-\t\t\tif (this == obj)\n-\t\t\t{\n-\t\t\t\treturn true;\n-\t\t\t}\n-\t\t\tif (obj instanceof RecordsToOpen)\n-\t\t\t{\n-\t\t\t\tfinal RecordsToOpen other = (RecordsToOpen)obj;\n-\t\t\t\treturn Objects.equals(records, other.records)\n-\t\t\t\t\t\t&& Objects.equals(adWindowIdStr, other.adWindowIdStr)\n-\t\t\t\t\t\t&& Objects.equals(target, other.target);\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n-\n-\t\t/**\n-\t\t * @return records to open; never null or empty\n-\t\t */\n-\t\tpublic List<TableRecordReference> getRecords()\n-\t\t{\n-\t\t\treturn records;\n-\t\t}\n-\n \t\tpublic TableRecordReference getSingleRecord()\n \t\t{\n-\t\t\treturn records.get(0);\n-\t\t}\n-\n-\t\tpublic String getWindowIdString()\n-\t\t{\n-\t\t\treturn adWindowIdStr;\n-\t\t}\n-\n-\t\tpublic OpenTarget getTarget()\n-\t\t{\n-\t\t\treturn target;\n+\t\t\treturn getRecords().get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM0MTQ3NA=="}, "originalCommit": {"oid": "879da8dd1bfec33f1ca40ff128e4ff5d0b1ee9dc"}, "originalPosition": 282}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1572, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}