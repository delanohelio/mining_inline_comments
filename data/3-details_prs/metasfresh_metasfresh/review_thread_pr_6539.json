{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTAzOTA2", "number": 6539, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDoyMDo0NVrOD3N_5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyNjo0MVrOD38YFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjI3NjIyOnYy", "diffSide": "RIGHT", "path": "de.metas.issue.tracking.github/src/main/java/de/metas/issue/tracking/github/api/v3/service/GithubClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDoyMDo0NVrOGNWfYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1NzowNFrOGNgNsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw==", "bodyText": "what are we doing here?", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416653153", "createdAt": "2020-04-28T14:20:45Z", "author": {"login": "metas-ts"}, "path": "de.metas.issue.tracking.github/src/main/java/de/metas/issue/tracking/github/api/v3/service/GithubClient.java", "diffHunk": "@@ -86,7 +86,9 @@ public GithubClient(final RestService restService)\n \n \t\tissueList = ImmutableList.copyOf(restService.performGet(getRequest, Issue[].class).getBody());\n \n-\t\treturn issueList;\n+\t\treturn issueList.stream()\n+\t\t\t\t.filter(issue -> issue.getPullRequest() == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY2OTk5NA==", "bodyText": "filterring out PRs as GitHub will send those too via the issue endpoints.", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416669994", "createdAt": "2020-04-28T14:41:25Z", "author": {"login": "pvpurcarcosmin"}, "path": "de.metas.issue.tracking.github/src/main/java/de/metas/issue/tracking/github/api/v3/service/GithubClient.java", "diffHunk": "@@ -86,7 +86,9 @@ public GithubClient(final RestService restService)\n \n \t\tissueList = ImmutableList.copyOf(restService.performGet(getRequest, Issue[].class).getBody());\n \n-\t\treturn issueList;\n+\t\treturn issueList.stream()\n+\t\t\t\t.filter(issue -> issue.getPullRequest() == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw=="}, "originalCommit": {"oid": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxMjQ2NA==", "bodyText": "allright, pls make it clearer in the code. E.g. add this as comment to the code, or (better) e.g. add issue.isPullRequest and filter by that", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416812464", "createdAt": "2020-04-28T17:57:04Z", "author": {"login": "metas-ts"}, "path": "de.metas.issue.tracking.github/src/main/java/de/metas/issue/tracking/github/api/v3/service/GithubClient.java", "diffHunk": "@@ -86,7 +86,9 @@ public GithubClient(final RestService restService)\n \n \t\tissueList = ImmutableList.copyOf(restService.performGet(getRequest, Issue[].class).getBody());\n \n-\t\treturn issueList;\n+\t\treturn issueList.stream()\n+\t\t\t\t.filter(issue -> issue.getPullRequest() == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MzE1Mw=="}, "originalCommit": {"oid": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjI5OTUxOnYy", "diffSide": "RIGHT", "path": "de.metas.serviceprovider/src/main/java/de/metas/serviceprovider/external/project/ExternalProjectRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDoyNToxNVrOGNWtrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDoyNToxNVrOGNWtrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1NjgxNQ==", "bodyText": "don't forget to add .addOnlyActiveRecordsFilter(), as a general rule of thumb.", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r416656815", "createdAt": "2020-04-28T14:25:15Z", "author": {"login": "metas-ts"}, "path": "de.metas.serviceprovider/src/main/java/de/metas/serviceprovider/external/project/ExternalProjectRepository.java", "diffHunk": "@@ -39,21 +38,41 @@\n @Repository\n public class ExternalProjectRepository\n {\n-\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\tprivate final IQueryBL queryBL;\n+\n+\tpublic ExternalProjectRepository(final IQueryBL queryBL)\n+\t{\n+\t\tthis.queryBL = queryBL;\n+\t}\n \n \t@NonNull\n \tpublic ImmutableList<ExternalProjectReference> getByExternalSystem(@NonNull final ExternalSystem externalSystem)\n \t{\n \t\treturn queryBL.createQueryBuilder(I_S_ExternalProjectReference.class)\n \t\t\t\t.addOnlyActiveRecordsFilter()\n \t\t\t\t.addEqualsFilter(I_S_ExternalProjectReference.COLUMN_ExternalSystem, externalSystem.getValue())\n+\t\t\t\t.orderBy(I_S_ExternalProjectReference.COLUMNNAME_SeqNo)\n \t\t\t\t.create()\n \t\t\t\t.list()\n \t\t\t\t.stream()\n \t\t\t\t.map(this::buildExternalProjectReference)\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \t}\n \n+\t@NonNull\n+\tpublic Optional<ExternalProjectReference> getByRequestOptional(@NonNull final GetExternalProjectRequest getExternalProjectRequest)\n+\t{\n+\t\treturn queryBL.createQueryBuilder(I_S_ExternalProjectReference.class)\n+\t\t\t\t.addEqualsFilter(I_S_ExternalProjectReference.COLUMN_ExternalSystem, getExternalProjectRequest.getExternalSystem().getValue())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6cdf7462af28fc789ee9bd4e1e0c08dee60394"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTg2OTE5OnYy", "diffSide": "RIGHT", "path": "de.metas.serviceprovider/src/main/sql/postgresql/system/45-de.metas.serviceprovider/5558160_sys_gh5816-app_update_unique_indexes_to_consider_isActive.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyNToxNVrOGOe-EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyNToxNVrOGOe-EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0MDY1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            UPDATE AD_Index_Table SET WhereClause='S_Issue.IssueURL IS NOT NULL and S_Issue.IsActive=''Y''',Updated=TO_TIMESTAMP('2020-04-28 18:19:02','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=100 WHERE AD_Index_Table_ID=540527\n          \n          \n            \n            UPDATE AD_Index_Table SET WhereClause='S_Issue.IsActive=''Y''',Updated=TO_TIMESTAMP('2020-04-28 18:19:02','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=100 WHERE AD_Index_Table_ID=540527\n          \n      \n    \n    \n  \n\nS_Issue.IssueURL IS NOT NULL does not break things, but also doesn't help and is therefore useless\nBackground In the postgresql world, NULL means \"unknown\", and\n\nNULL != NULL\ntherefore two different S_Issues can have their IssueURL being NULL without violating the unique contraint\n(sidenote: in fact, if you needed to prevent this, you would need to have the unique-index on something like `COALESCE(IssueURL,'') )", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r417840657", "createdAt": "2020-04-30T08:25:15Z", "author": {"login": "metas-ts"}, "path": "de.metas.serviceprovider/src/main/sql/postgresql/system/45-de.metas.serviceprovider/5558160_sys_gh5816-app_update_unique_indexes_to_consider_isActive.sql", "diffHunk": "@@ -0,0 +1,70 @@\n+-- 2020-04-28T15:19:02.739Z\n+-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator\n+UPDATE AD_Index_Table SET WhereClause='S_Issue.IssueURL IS NOT NULL and S_Issue.IsActive=''Y''',Updated=TO_TIMESTAMP('2020-04-28 18:19:02','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=100 WHERE AD_Index_Table_ID=540527", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29461c2bfedf1b4810ed2d0be6bbee41c79319cc"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTg3NDc4OnYy", "diffSide": "RIGHT", "path": "de.metas.serviceprovider/src/main/sql/postgresql/system/45-de.metas.serviceprovider/5558160_sys_gh5816-app_update_unique_indexes_to_consider_isActive.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyNjo0MVrOGOfBWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyNjo0MVrOGOfBWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0MTQ5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            CREATE UNIQUE INDEX IDX_S_Issue_ExternalURL ON S_Issue (IssueURL) WHERE S_Issue.IssueURL IS NOT NULL and S_Issue.IsActive='Y'\n          \n          \n            \n            CREATE UNIQUE INDEX IDX_S_Issue_ExternalURL ON S_Issue (IssueURL) WHERE S_Issue.IsActive='Y'", "url": "https://github.com/metasfresh/metasfresh/pull/6539#discussion_r417841496", "createdAt": "2020-04-30T08:26:41Z", "author": {"login": "metas-ts"}, "path": "de.metas.serviceprovider/src/main/sql/postgresql/system/45-de.metas.serviceprovider/5558160_sys_gh5816-app_update_unique_indexes_to_consider_isActive.sql", "diffHunk": "@@ -0,0 +1,70 @@\n+-- 2020-04-28T15:19:02.739Z\n+-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator\n+UPDATE AD_Index_Table SET WhereClause='S_Issue.IssueURL IS NOT NULL and S_Issue.IsActive=''Y''',Updated=TO_TIMESTAMP('2020-04-28 18:19:02','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=100 WHERE AD_Index_Table_ID=540527\n+;\n+\n+-- 2020-04-28T15:19:15.974Z\n+-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator\n+DROP INDEX IF EXISTS idx_s_issue_externalurl\n+;\n+\n+-- 2020-04-28T15:19:15.982Z\n+-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator\n+CREATE UNIQUE INDEX IDX_S_Issue_ExternalURL ON S_Issue (IssueURL) WHERE S_Issue.IssueURL IS NOT NULL and S_Issue.IsActive='Y'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29461c2bfedf1b4810ed2d0be6bbee41c79319cc"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}