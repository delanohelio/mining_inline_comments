{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Mjc3OTY3", "number": 10080, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjowOToxMVrOErlSZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoxMzozMlrOErlZlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTM1MTQzOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5569920_sys_gh10079ModifyRV_Missing_Counter_Documents.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjowOToxMVrOHebbew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjowOToxMVrOHebbew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY2ODczMQ==", "bodyText": "no urls of private repos pls", "url": "https://github.com/metasfresh/metasfresh/pull/10080#discussion_r501668731", "createdAt": "2020-10-08T12:09:11Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5569920_sys_gh10079ModifyRV_Missing_Counter_Documents.sql", "diffHunk": "@@ -0,0 +1,133 @@\n+\n+\n+DROP VIEW IF EXISTS RV_Missing_Counter_Documents;\n+\n+\n+-- This view is made for C_Order entries and their counter-documents\n+-- If we start supporting other kind of counter documents in the fututre, this view will have to be updated with the logic on those tables, using unions\n+\n+CREATE VIEW RV_Missing_Counter_Documents\n+AS\n+\n+\n+SELECT\n+    -- In the future, if we will add support for other documents (i.e: invoices), we will have to update the id column's logic using a case when logic.\n+    -- https://github.com/metasfresh/mf15/issues/318", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e16b54fdcf99556ed65d93a70c3bb5b25dd70f2b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTM2OTgyOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5569920_sys_gh10079ModifyRV_Missing_Counter_Documents.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoxMzozMlrOHebmDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoxOTo0MlrOHeb0eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3MTQzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WHEN doc.Record_ID IS NOT NULL THEN (doc.Record_ID * 10) + 1\n          \n          \n            \n                    WHEN doc.C_OrderLine_ID IS NOT NULL THEN (doc.Record_ID * 10) + 1\n          \n      \n    \n    \n  \n\ni wrote\n\nexplicitly return the C_OrderLine_ID which has the missing counter doc from the doc subselect, together with the Record_ID\n\nexactly for the purpose of using it in RV_Missing_Counter_Document_ID\nif we later add e.g. C_Invoice_Lines with missing-counter-docs then it will also be aliased to Record_ID, so using doc.Record_ID does not make sense", "url": "https://github.com/metasfresh/metasfresh/pull/10080#discussion_r501671439", "createdAt": "2020-10-08T12:13:32Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5569920_sys_gh10079ModifyRV_Missing_Counter_Documents.sql", "diffHunk": "@@ -0,0 +1,133 @@\n+\n+\n+DROP VIEW IF EXISTS RV_Missing_Counter_Documents;\n+\n+\n+-- This view is made for C_Order entries and their counter-documents\n+-- If we start supporting other kind of counter documents in the fututre, this view will have to be updated with the logic on those tables, using unions\n+\n+CREATE VIEW RV_Missing_Counter_Documents\n+AS\n+\n+\n+SELECT\n+    -- In the future, if we will add support for other documents (i.e: invoices), we will have to update the id column's logic using a case when logic.\n+    -- https://github.com/metasfresh/mf15/issues/318\n+    CASE\n+        WHEN doc.Record_ID IS NOT NULL THEN (doc.Record_ID * 10) + 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e16b54fdcf99556ed65d93a70c3bb5b25dd70f2b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3NTEzMA==", "bodyText": "I thought the invoicelines would be handled in a different left join after looking at the sql and the doc one would only remain for orderlines., but I see now that we could also expand the view by joining with the invoice and invoiceline tables on the 'doc' select. Implemented the changes! \ud83d\ude13", "url": "https://github.com/metasfresh/metasfresh/pull/10080#discussion_r501675130", "createdAt": "2020-10-08T12:19:42Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5569920_sys_gh10079ModifyRV_Missing_Counter_Documents.sql", "diffHunk": "@@ -0,0 +1,133 @@\n+\n+\n+DROP VIEW IF EXISTS RV_Missing_Counter_Documents;\n+\n+\n+-- This view is made for C_Order entries and their counter-documents\n+-- If we start supporting other kind of counter documents in the fututre, this view will have to be updated with the logic on those tables, using unions\n+\n+CREATE VIEW RV_Missing_Counter_Documents\n+AS\n+\n+\n+SELECT\n+    -- In the future, if we will add support for other documents (i.e: invoices), we will have to update the id column's logic using a case when logic.\n+    -- https://github.com/metasfresh/mf15/issues/318\n+    CASE\n+        WHEN doc.Record_ID IS NOT NULL THEN (doc.Record_ID * 10) + 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3MTQzOQ=="}, "originalCommit": {"oid": "e16b54fdcf99556ed65d93a70c3bb5b25dd70f2b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1216, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}