{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjE1ODYy", "number": 6512, "title": "Add Swing \"Chat\" Feature to WebUI", "bodyText": "#6504", "createdAt": "2020-04-22T11:04:20Z", "url": "https://github.com/metasfresh/metasfresh/pull/6512", "merged": true, "mergeCommit": {"oid": "90c7b372580632133fdcdf73c21433feb44cdbe1"}, "closed": true, "closedAt": "2020-04-30T09:14:48Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaG40IABqjMyNjAyMDgwMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccpYPmgFqTQwMzMzNzc3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06ba3cd61984447941c742f1c025b84b90df65b3", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/06ba3cd61984447941c742f1c025b84b90df65b3", "committedDate": "2020-04-22T11:44:58Z", "message": "Update references to TableRecordReference; fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}, "afterCommit": {"oid": "09f7936e990134f8ca3acb909aaa048e05682a20", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/09f7936e990134f8ca3acb909aaa048e05682a20", "committedDate": "2020-04-22T11:47:44Z", "message": "Update references to TableRecordReference; fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dbd856657f4c6bd2579e78a2c009ca4b54cd8cc", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1dbd856657f4c6bd2579e78a2c009ca4b54cd8cc", "committedDate": "2020-04-23T05:52:07Z", "message": "Cleanup + Regenerate `CM_Chat*` records\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aecb402eb04d32f5cdc9acb2189b526723b60466", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/aecb402eb04d32f5cdc9acb2189b526723b60466", "committedDate": "2020-04-23T05:52:07Z", "message": "Mark `ITableRecordReference.getModel` as Deprecated\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eeaba5057f2f4052be424a4153a7a8b66a93059", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0eeaba5057f2f4052be424a4153a7a8b66a93059", "committedDate": "2020-04-23T05:52:08Z", "message": "Mark nullability, fix javadoc\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63e4afe322906606f1c738fbde045ff96ac4fbb2", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/63e4afe322906606f1c738fbde045ff96ac4fbb2", "committedDate": "2020-04-23T05:52:08Z", "message": "Add NotesRepository along with Chat RepoIdAwares\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "005c4b0eea16d32c1c1d0b5cac94fec8b3b20b96", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/005c4b0eea16d32c1c1d0b5cac94fec8b3b20b96", "committedDate": "2020-04-23T05:52:08Z", "message": "Add limit to the number of Notes retrieved for a record\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a560344fb1241fc2f25dbc2d85b7d9efc2e053", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f2a560344fb1241fc2f25dbc2d85b7d9efc2e053", "committedDate": "2020-04-23T05:52:08Z", "message": "Update references to TableRecordReference; fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/66faf4423f2aa11c1ef3e4fdd9f675f4499eda31", "committedDate": "2020-04-23T05:52:08Z", "message": "Update references to TableRecordReference; fix warnings (2)\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "070e8c6795d8792b565e65b6a533b2a14301632a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/070e8c6795d8792b565e65b6a533b2a14301632a", "committedDate": "2020-04-22T11:59:40Z", "message": "Update references to TableRecordReference; fix warnings (2)\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}, "afterCommit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/66faf4423f2aa11c1ef3e4fdd9f675f4499eda31", "committedDate": "2020-04-23T05:52:08Z", "message": "Update references to TableRecordReference; fix warnings (2)\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODMzMjg4", "url": "https://github.com/metasfresh/metasfresh/pull/6512#pullrequestreview-398833288", "createdAt": "2020-04-23T07:35:48Z", "commit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNTo0OFrOGKa_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNTo0OFrOGKa_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTE3Mw==", "bodyText": "pls introduce a POJO to be returned instead of I_CM_ChatEntry", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r413581173", "createdAt": "2020-04-23T07:35:48Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/notes/NotesRepository.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.notes;\n+\n+import com.google.common.collect.ImmutableList;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.table.api.AdTableId;\n+import org.adempiere.ad.table.api.IADTableDAO;\n+import org.adempiere.model.InterfaceWrapperHelper;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.model.I_CM_Chat;\n+import org.compiere.model.I_CM_ChatEntry;\n+import org.compiere.model.X_CM_Chat;\n+import org.compiere.model.X_CM_ChatEntry;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+/**\n+ * A Note is made of an {@link I_CM_Chat} as the parent storing the table and record IDs,\n+ * and an {@link I_CM_ChatEntry} as the children storing the text data of the note.\n+ * <p>\n+ * There can be multiple notes for a record.\n+ */\n+@Repository\n+public class NotesRepository\n+{\n+\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\tprivate final IADTableDAO tableDAO = Services.get(IADTableDAO.class);\n+\n+\tpublic void createNote(final @NonNull String characterData, @NonNull final TableRecordReference tableRecordReference)\n+\t{\n+\t\tfinal I_CM_Chat chat = getOrCreateChat(tableRecordReference);\n+\n+\t\tfinal I_CM_ChatEntry chatEntry = InterfaceWrapperHelper.newInstance(I_CM_ChatEntry.class);\n+\t\tchatEntry.setCM_Chat_ID(chat.getCM_Chat_ID());\n+\t\tchatEntry.setConfidentialType(X_CM_ChatEntry.CONFIDENTIALTYPE_PublicInformation);\n+\t\tchatEntry.setCharacterData(characterData);\n+\t\tchatEntry.setChatEntryType(X_CM_ChatEntry.CHATENTRYTYPE_NoteFlat);\n+\t\tInterfaceWrapperHelper.save(chatEntry);\n+\t}\n+\n+\t@NonNull\n+\tpublic List<I_CM_ChatEntry> retrieveNotes(@NonNull final TableRecordReference tableRecordReference, final int maxNumberOfRecords)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODMzNDEz", "url": "https://github.com/metasfresh/metasfresh/pull/6512#pullrequestreview-398833413", "createdAt": "2020-04-23T07:35:58Z", "commit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNTo1OFrOGKa_4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzozNTo1OFrOGKa_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTI4MQ==", "bodyText": "pls introduce a POJO to be returned instead of I_CM_Chat", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r413581281", "createdAt": "2020-04-23T07:35:58Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/notes/NotesRepository.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.notes;\n+\n+import com.google.common.collect.ImmutableList;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.table.api.AdTableId;\n+import org.adempiere.ad.table.api.IADTableDAO;\n+import org.adempiere.model.InterfaceWrapperHelper;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.model.I_CM_Chat;\n+import org.compiere.model.I_CM_ChatEntry;\n+import org.compiere.model.X_CM_Chat;\n+import org.compiere.model.X_CM_ChatEntry;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+/**\n+ * A Note is made of an {@link I_CM_Chat} as the parent storing the table and record IDs,\n+ * and an {@link I_CM_ChatEntry} as the children storing the text data of the note.\n+ * <p>\n+ * There can be multiple notes for a record.\n+ */\n+@Repository\n+public class NotesRepository\n+{\n+\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\tprivate final IADTableDAO tableDAO = Services.get(IADTableDAO.class);\n+\n+\tpublic void createNote(final @NonNull String characterData, @NonNull final TableRecordReference tableRecordReference)\n+\t{\n+\t\tfinal I_CM_Chat chat = getOrCreateChat(tableRecordReference);\n+\n+\t\tfinal I_CM_ChatEntry chatEntry = InterfaceWrapperHelper.newInstance(I_CM_ChatEntry.class);\n+\t\tchatEntry.setCM_Chat_ID(chat.getCM_Chat_ID());\n+\t\tchatEntry.setConfidentialType(X_CM_ChatEntry.CONFIDENTIALTYPE_PublicInformation);\n+\t\tchatEntry.setCharacterData(characterData);\n+\t\tchatEntry.setChatEntryType(X_CM_ChatEntry.CHATENTRYTYPE_NoteFlat);\n+\t\tInterfaceWrapperHelper.save(chatEntry);\n+\t}\n+\n+\t@NonNull\n+\tpublic List<I_CM_ChatEntry> retrieveNotes(@NonNull final TableRecordReference tableRecordReference, final int maxNumberOfRecords)\n+\t{\n+\t\tfinal ChatId chatId = getChatIdOrNull(tableRecordReference);\n+\n+\t\tif (chatId == null)\n+\t\t{\n+\t\t\treturn ImmutableList.of();\n+\t\t}\n+\n+\t\treturn queryBL.createQueryBuilder(I_CM_ChatEntry.class)\n+\t\t\t\t.addEqualsFilter(I_CM_ChatEntry.COLUMNNAME_CM_Chat_ID, chatId)\n+\t\t\t\t.orderByDescending(I_CM_ChatEntry.COLUMNNAME_Created)\n+\t\t\t\t.setLimit(maxNumberOfRecords)\n+\t\t\t\t.create()\n+\t\t\t\t.listImmutable(I_CM_ChatEntry.class);\n+\t}\n+\n+\t@NonNull\n+\tprivate I_CM_Chat getOrCreateChat(final @NonNull TableRecordReference tableRecordReference)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODQyNDQ0", "url": "https://github.com/metasfresh/metasfresh/pull/6512#pullrequestreview-398842444", "createdAt": "2020-04-23T07:48:22Z", "commit": {"oid": "66faf4423f2aa11c1ef3e4fdd9f675f4499eda31"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a63bf7cbaf96fd89dffe59f9e0b5bdc7c4c97dfc", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a63bf7cbaf96fd89dffe59f9e0b5bdc7c4c97dfc", "committedDate": "2020-04-23T08:46:57Z", "message": "Rename method\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1da921041b65f5ced43d5bd914b8d57ba835cb4", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b1da921041b65f5ced43d5bd914b8d57ba835cb4", "committedDate": "2020-04-23T08:49:08Z", "message": "Add trl for \"Notes\"\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9c7a34cd295e40e45168a9d4e25591479333459", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c9c7a34cd295e40e45168a9d4e25591479333459", "committedDate": "2020-04-23T09:42:43Z", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a120ba21513cfe74c7be3d9bd976f6d72f0ab38", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/8a120ba21513cfe74c7be3d9bd976f6d72f0ab38", "committedDate": "2020-04-23T09:43:49Z", "message": "NotesRepository: return Pojo instead of PO\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98776a589eeb891e277b93376613db6f660e35b8", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/98776a589eeb891e277b93376613db6f660e35b8", "committedDate": "2020-04-23T09:47:03Z", "message": "Rename to `UserRecordNote` from `RecordNote`\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/75103708810d7bc23c31bf2e7fcb0810a2bdc4d1", "committedDate": "2020-04-23T11:49:18Z", "message": "Rename feature to `Comments` from `Notes`\n\nhttps://github.com/metasfresh/metasfresh/issues/6302"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjI2MDU4", "url": "https://github.com/metasfresh/metasfresh/pull/6512#pullrequestreview-399626058", "createdAt": "2020-04-24T04:07:31Z", "commit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNDowNzozMVrOGLFeSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNDoxNzo1M1rOGLFq_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3NzE5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@Override\n          \n          \n            \n            \t/**\n          \n          \n            \n            \t * @return first ID or -1 if not found\n          \n          \n            \n            \t */\n          \n          \n            \n            \t@Override\n          \n      \n    \n    \n  \n\ni think the behavior if nt found (0? Integer.MIN_VALUE? throws exception?)is a useful information", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r414277193", "createdAt": "2020-04-24T04:07:31Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java-legacy/org/adempiere/ad/dao/impl/TypedSqlQuery.java", "diffHunk": "@@ -515,12 +515,6 @@ else if (postQueryFilter.accept(model))\n \t\treturn model;\n \t}\n \n-\t/**\n-\t * Return first ID\n-\t *\n-\t * @return first ID or -1 if not found\n-\t * @throws DBException\n-\t */\n \t@Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3OTEzMw==", "bodyText": "I guess that this should be similar to e.g. BPartnerLocationId in containing also the ChatId.\nIf there are parts of the code where this is a problem, we shall take a look at them, probable a problem can be solved there.", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r414279133", "createdAt": "2020-04-24T04:13:37Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/comments/ChatEntryId.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.comments;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import de.metas.util.Check;\n+import de.metas.util.lang.RepoIdAware;\n+import lombok.Value;\n+\n+@Value\n+public class ChatEntryId implements RepoIdAware\n+{\n+\tint repoId;\n+\n+\t@JsonCreator\n+\tpublic static ChatEntryId ofRepoId(final int repoId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI4MDMyNg==", "bodyText": "For the record, i like such information. Ofc we want to avoid a code-dependency to I_CM_Chat, but still imho it's useful for a dev to know that under the hood we use them, (e.g. when she needs to do stuff in the application dictionary)", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r414280326", "createdAt": "2020-04-24T04:17:24Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/comments/CommentsRepository.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.comments;\n+\n+import com.google.common.collect.ImmutableList;\n+import de.metas.user.UserId;\n+import de.metas.util.GuavaCollectors;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.table.api.AdTableId;\n+import org.adempiere.ad.table.api.IADTableDAO;\n+import org.adempiere.model.InterfaceWrapperHelper;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.model.I_CM_Chat;\n+import org.compiere.model.I_CM_ChatEntry;\n+import org.compiere.model.X_CM_Chat;\n+import org.compiere.model.X_CM_ChatEntry;\n+import org.compiere.util.TimeUtil;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.Nullable;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+\n+/**\n+ * A Comment is made of an {@link I_CM_Chat} as the parent storing the table and record IDs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI4MDQ0NQ==", "bodyText": "allright, let's rename this to CommentId / CommentLineId then", "url": "https://github.com/metasfresh/metasfresh/pull/6512#discussion_r414280445", "createdAt": "2020-04-24T04:17:53Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/comments/CommentsRepository.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.comments;\n+\n+import com.google.common.collect.ImmutableList;\n+import de.metas.user.UserId;\n+import de.metas.util.GuavaCollectors;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.table.api.AdTableId;\n+import org.adempiere.ad.table.api.IADTableDAO;\n+import org.adempiere.model.InterfaceWrapperHelper;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.model.I_CM_Chat;\n+import org.compiere.model.I_CM_ChatEntry;\n+import org.compiere.model.X_CM_Chat;\n+import org.compiere.model.X_CM_ChatEntry;\n+import org.compiere.util.TimeUtil;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.Nullable;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+\n+/**\n+ * A Comment is made of an {@link I_CM_Chat} as the parent storing the table and record IDs,\n+ * and an {@link I_CM_ChatEntry} as the children storing the text data of the Comment.\n+ * <p>\n+ * There can be multiple Comments for a record.\n+ */\n+@Repository\n+public class CommentsRepository\n+{\n+\tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n+\tprivate final IADTableDAO tableDAO = Services.get(IADTableDAO.class);\n+\n+\tpublic void createComment(final @NonNull String characterData, @NonNull final TableRecordReference tableRecordReference)\n+\t{\n+\t\tfinal ChatId chatId = getOrCreateChat(tableRecordReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75103708810d7bc23c31bf2e7fcb0810a2bdc4d1"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f25ed4780a5aea084f070312a7e11c7d375657d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/7f25ed4780a5aea084f070312a7e11c7d375657d", "committedDate": "2020-04-24T05:56:55Z", "message": "Improve javadoc even more\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47c966fa57b6cf73c2c42eae5016f225007b0927", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/47c966fa57b6cf73c2c42eae5016f225007b0927", "committedDate": "2020-04-24T06:40:19Z", "message": "Rename classes to `Comment` and `CommentEntry` respectively\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c2810e45fc903cbb1030b7e9d8070e36075140b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4c2810e45fc903cbb1030b7e9d8070e36075140b", "committedDate": "2020-04-24T08:19:46Z", "message": "Better error message in case repoId is <= 0\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce5e4d6081f4bc4976237ca900ae1dbbbe264f4a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ce5e4d6081f4bc4976237ca900ae1dbbbe264f4a", "committedDate": "2020-04-24T08:25:25Z", "message": "Use OrderBy when asking for the first row\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c99c1c7933cea5c9e797e6c05d54c2d2a002bdab", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c99c1c7933cea5c9e797e6c05d54c2d2a002bdab", "committedDate": "2020-04-24T08:26:00Z", "message": "Rename CommentEntryRepository\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb1a5175f35855154ef0d9aa1e6ddd20253bf99", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1bb1a5175f35855154ef0d9aa1e6ddd20253bf99", "committedDate": "2020-04-24T08:30:38Z", "message": "Make CommentId public again\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3868d7bce123a69364eb4322c61356d980ef5aa0", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/3868d7bce123a69364eb4322c61356d980ef5aa0", "committedDate": "2020-04-24T08:34:53Z", "message": "Add note of different converters to use when returning a time (ie. ZonedDateTime) in JSON\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b00abcf91a158399658b1a3d69a285df03fbaca", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1b00abcf91a158399658b1a3d69a285df03fbaca", "committedDate": "2020-04-24T10:15:11Z", "message": "Add Builder to CommentEntry instead of `of`\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bd7c5778ff16736ab5e8600d67e76a12bc5c3f0", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4bd7c5778ff16736ab5e8600d67e76a12bc5c3f0", "committedDate": "2020-04-24T10:29:39Z", "message": "Improve distinction between `CommentEntryParentId` and `CommentEntryId`\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "226a6ba2ea2abba7510fc07cac6b49befb058b72", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/226a6ba2ea2abba7510fc07cac6b49befb058b72", "committedDate": "2020-04-29T09:05:43Z", "message": "Update Comments Modal trl\n\nhttps://github.com/metasfresh/metasfresh/issues/6504"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e1691c2a27174fd71c78fbdfe10d1b359aff91", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/59e1691c2a27174fd71c78fbdfe10d1b359aff91", "committedDate": "2020-04-29T09:06:02Z", "message": "Merge remote-tracking branch 'origin/gh6504-chat' into gh6504-chat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzM3Nzcz", "url": "https://github.com/metasfresh/metasfresh/pull/6512#pullrequestreview-403337773", "createdAt": "2020-04-30T09:08:33Z", "commit": {"oid": "59e1691c2a27174fd71c78fbdfe10d1b359aff91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3479, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}