{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MjA2NjY0", "number": 6614, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMTo1MVrOD6odmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyOToyMFrOD6qSWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA2OTM4OnYy", "diffSide": "RIGHT", "path": "frontend/src/components/table/TableContextMenu.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMTo1MVrOGSkvWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzowMTo1MVrOGSkvWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyOTQ5OA==", "bodyText": "This should be a separate component like ReferenceItem", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422129498", "createdAt": "2020-05-08T13:01:51Z", "author": {"login": "petrican"}, "path": "frontend/src/components/table/TableContextMenu.js", "diffHunk": "@@ -183,23 +204,36 @@ class TableContextMenu extends Component {\n           </div>\n         )}\n \n-        {references && <hr className=\"context-menu-separator\" />}\n-\n-        {references &&\n-          references.map((item, index) => (\n-            <div\n-              className=\"context-menu-item\"\n-              key={index}\n-              onClick={() => {\n-                this.handleReferenceClick(item.documentType, item.filter);\n-              }}\n-            >\n-              <i className=\"meta-icon-share\" /> {item.caption}\n-            </div>\n-          ))}\n+        {this.renderReferences()}\n       </div>\n     );\n   }\n+\n+  renderReferences() {\n+    const { loadingReferences, references } = this.state;\n+\n+    if (!references && !loadingReferences) {\n+      return;\n+    }\n+\n+    return (\n+      <Fragment>\n+        <hr className=\"context-menu-separator\" />\n+        {references.map((item, index) => (\n+          <div", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODA5OTc5OnYy", "diffSide": "RIGHT", "path": "frontend/src/utils/documentReferencesHelper.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzoxMjowMFrOGSlBzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzoxMjowMFrOGSlBzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEzNDIyMQ==", "bodyText": "Maybe a simpler solution could be used either using reduce https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce. or  with some lodash utils. Looks big. Not mandatory to do that just a thought", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422134221", "createdAt": "2020-05-08T13:12:00Z", "author": {"login": "petrican"}, "path": "frontend/src/utils/documentReferencesHelper.js", "diffHunk": "@@ -0,0 +1,90 @@\n+export function mergePartialGroupToGroupsArray(groups, partialGroup) {\n+  if (!partialGroup) {\n+    return groups;\n+  }\n+\n+  let result = [];\n+  let partialGroupMerged = false;\n+\n+  for (const group of groups) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODI4OTYyOnYy", "diffSide": "RIGHT", "path": "frontend/src/actions/GenericActions.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDowODowNlrOGSm14w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDowODowNlrOGSm14w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2MzkzOQ==", "bodyText": "const url =\n  `${config.API_URL}/window/${windowId}/${documentId}/${rowId ? `/${tabId}/${rowId}` :  '/references/sse'}`;", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422163939", "createdAt": "2020-05-08T14:08:06Z", "author": {"login": "siemiatj"}, "path": "frontend/src/actions/GenericActions.js", "diffHunk": "@@ -210,19 +210,35 @@ export function rowActionsRequest({ windowId, documentId, tabId, rowId }) {\n   );\n }\n \n-export function referencesRequest(entity, type, docId, tabId, rowId) {\n-  return axios.get(\n-    config.API_URL +\n-      '/' +\n-      entity +\n-      '/' +\n-      type +\n-      '/' +\n-      docId +\n-      (tabId ? '/' + tabId : '') +\n-      (rowId ? '/' + rowId : '') +\n-      '/references'\n-  );\n+export function referencesEventSource({\n+  windowId,\n+  documentId,\n+  tabId,\n+  rowId,\n+  onPartialResult,\n+  onComplete,\n+}) {\n+  var url = `${config.API_URL}/window/${windowId}/${documentId}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODI5MTIzOnYy", "diffSide": "RIGHT", "path": "frontend/src/actions/GenericActions.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDowODoyOVrOGSm2ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDowODoyOVrOGSm2ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2NDE2Mw==", "bodyText": "please use const instead of var", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422164163", "createdAt": "2020-05-08T14:08:29Z", "author": {"login": "siemiatj"}, "path": "frontend/src/actions/GenericActions.js", "diffHunk": "@@ -210,19 +210,35 @@ export function rowActionsRequest({ windowId, documentId, tabId, rowId }) {\n   );\n }\n \n-export function referencesRequest(entity, type, docId, tabId, rowId) {\n-  return axios.get(\n-    config.API_URL +\n-      '/' +\n-      entity +\n-      '/' +\n-      type +\n-      '/' +\n-      docId +\n-      (tabId ? '/' + tabId : '') +\n-      (rowId ? '/' + rowId : '') +\n-      '/references'\n-  );\n+export function referencesEventSource({\n+  windowId,\n+  documentId,\n+  tabId,\n+  rowId,\n+  onPartialResult,\n+  onComplete,\n+}) {\n+  var url = `${config.API_URL}/window/${windowId}/${documentId}`;\n+  if (rowId) {\n+    url = url + `/${tabId}/${rowId}`;\n+  }\n+  url = url + '/references/sse';\n+\n+  var eventSource = new EventSource(url, { withCredentials: true });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMwMTk5OnYy", "diffSide": "RIGHT", "path": "frontend/src/components/header/Referenced.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxMToyOFrOGSm9IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxMToyOFrOGSm9IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2NTc5Mg==", "bodyText": "key has to be unique (for performance reasons), so we can instead do:\n      return data.map((item, idx) => {\n        return [\n          <div\n            key=`${caption_idx}`", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422165792", "createdAt": "2020-05-08T14:11:28Z", "author": {"login": "siemiatj"}, "path": "frontend/src/components/header/Referenced.js", "diffHunk": "@@ -76,10 +96,10 @@ class Referenced extends Component {\n   };\n \n   renderData = () => {\n-    const { data } = this.state;\n+    const { loading, data } = this.state;\n \n-    return data && data.length ? (\n-      data.map((item) => {\n+    if (data && data.length) {\n+      return data.map((item) => {\n         return [\n           <div\n             key=\"caption\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM2NDY5OnYy", "diffSide": "RIGHT", "path": "frontend/src/utils/documentReferencesHelper.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyODoyOVrOGSni1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyODoyOVrOGSni1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NTQ0Ng==", "bodyText": "I'd use reduce instead of the for of", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422175446", "createdAt": "2020-05-08T14:28:29Z", "author": {"login": "siemiatj"}, "path": "frontend/src/utils/documentReferencesHelper.js", "diffHunk": "@@ -0,0 +1,90 @@\n+export function mergePartialGroupToGroupsArray(groups, partialGroup) {\n+  if (!partialGroup) {\n+    return groups;\n+  }\n+\n+  let result = [];\n+  let partialGroupMerged = false;\n+\n+  for (const group of groups) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM2ODI3OnYy", "diffSide": "RIGHT", "path": "frontend/src/utils/documentReferencesHelper.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyOToyMFrOGSnlAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyOToyMFrOGSnlAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NjAwMA==", "bodyText": "Again reduce or map.", "url": "https://github.com/metasfresh/metasfresh/pull/6614#discussion_r422176000", "createdAt": "2020-05-08T14:29:20Z", "author": {"login": "siemiatj"}, "path": "frontend/src/utils/documentReferencesHelper.js", "diffHunk": "@@ -0,0 +1,90 @@\n+export function mergePartialGroupToGroupsArray(groups, partialGroup) {\n+  if (!partialGroup) {\n+    return groups;\n+  }\n+\n+  let result = [];\n+  let partialGroupMerged = false;\n+\n+  for (const group of groups) {\n+    if (!partialGroupMerged && group.caption === partialGroup.caption) {\n+      const changedGroup = mergeReferencesToGroup(\n+        group,\n+        partialGroup.references\n+      );\n+\n+      result.push(changedGroup);\n+      partialGroupMerged = true;\n+    } else {\n+      result.push(group);\n+    }\n+  }\n+\n+  if (!partialGroupMerged) {\n+    result.push(partialGroup);\n+    partialGroupMerged = true;\n+  }\n+\n+  //\n+  // Sort groups by caption alphabetically, keep miscGroup last.\n+  result = result.sort((group1, group2) => {\n+    if (group1.miscGroup == group2.miscGroup) {\n+      return group1.caption.localeCompare(group2.caption);\n+    } else if (group1.miscGroup) {\n+      return +1; // keep misc group last\n+    } else {\n+      return -1;\n+    }\n+  });\n+\n+  return result;\n+}\n+\n+function mergeReferencesToGroup(group, referencesToAdd) {\n+  if (!referencesToAdd || !referencesToAdd.length) {\n+    return group;\n+  }\n+\n+  return {\n+    ...group,\n+    references: mergeReferencesToReferences(group.references, referencesToAdd),\n+  };\n+}\n+\n+export function mergeReferencesToReferences(\n+  existingReferences,\n+  referencesToAdd\n+) {\n+  if (!referencesToAdd) {\n+    return existingReferences;\n+  }\n+\n+  const referencesToAddById = {};\n+  referencesToAdd.forEach((reference) => {\n+    referencesToAddById[reference.id] = reference;\n+  });\n+\n+  let references = [];\n+\n+  for (const existingReference of existingReferences) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352108ef4902145e12fd12c081110f7704984621"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1505, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}