{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjA4NzI4", "number": 6037, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTowNDozMVrODX4Q7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTowNDozMVrODX4Q7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzY1Njc5OnYy", "diffSide": "RIGHT", "path": "de.metas.business/src/main/java/de/metas/phonecall/service/PhonecallSchemaRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTowNDozMVrOFdapdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTowNDozMVrOFdapdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4OTYyMg==", "bodyText": "doesn't this method return all lines?", "url": "https://github.com/metasfresh/metasfresh/pull/6037#discussion_r366389622", "createdAt": "2020-01-14T15:04:31Z", "author": {"login": "metas-ts"}, "path": "de.metas.business/src/main/java/de/metas/phonecall/service/PhonecallSchemaRepository.java", "diffHunk": "@@ -290,4 +293,38 @@ else if (schemaVersionRecord.isMovePhonecallDay())\n \t\t\treturn null;\n \t\t}\n \t}\n+\n+\tpublic void updateLinesOnSchemaChanged(final PhonecallSchemaVersionId phonecallSchemaVersionId)\n+\t{\n+\t\tfinal int phonecallSchemaTableId = getTableId(I_C_Phonecall_Schema.class);\n+\n+\t\tfinal PhonecallSchemaId phonecallSchemaId = phonecallSchemaVersionId.getPhonecallSchemaId();\n+\t\tfinal List<I_C_Phonecall_Schema_Version_Line> linesWithDifferentSchema = retrieveLinesWithDifferentSchemas(phonecallSchemaVersionId);\n+\n+\t\tfinal ImmutableSet<Integer> schemasToInvalidate = linesWithDifferentSchema.stream()\n+\t\t\t\t.map(line -> line.getC_Phonecall_Schema_ID())\n+\t\t\t\t.collect(ImmutableSet.toImmutableSet());\n+\n+\t\tfor (final I_C_Phonecall_Schema_Version_Line line : linesWithDifferentSchema)\n+\t\t{\n+\t\t\tline.setC_Phonecall_Schema_ID(phonecallSchemaId.getRepoId());\n+\t\t\tsaveRecord(line);\n+\t\t}\n+\n+\t\tschemasToInvalidate.stream()\n+\t\t\t\t.forEach(schemaId -> schemas.resetForRecordId(TableRecordReference.of(phonecallSchemaTableId, schemaId)));\n+\n+\t\tschemas.resetForRecordId(TableRecordReference.of(phonecallSchemaTableId, phonecallSchemaId.getRepoId()));\n+\n+\t}\n+\n+\tprivate List<I_C_Phonecall_Schema_Version_Line> retrieveLinesWithDifferentSchemas(PhonecallSchemaVersionId phonecallSchemaVersionId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2518a2de8c80d55d9895264aaa7b915e39cc6720"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1542, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}