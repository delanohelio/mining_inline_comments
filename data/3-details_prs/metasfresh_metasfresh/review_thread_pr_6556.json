{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzgyMzQ3", "number": 6556, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyNjo1NFrOD45QCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyOTo1OVrOD45T6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTg0ODQzOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.business/src/main/java/de/metas/order/impl/OrderLineBL.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyNjo1NFrOGP25kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMToxNzoxMVrOGP7_eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4MTI5OQ==", "bodyText": "as said earlier: returning a BigDecimal as a price without any context is dangerous. instead, return ProductPrice", "url": "https://github.com/metasfresh/metasfresh/pull/6556#discussion_r419281299", "createdAt": "2020-05-04T08:26:54Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.business/src/main/java/de/metas/order/impl/OrderLineBL.java", "diffHunk": "@@ -773,6 +773,12 @@ public ProductPrice getCostPrice(final org.compiere.model.I_C_OrderLine orderLin\n \t\t\t\t.build();\n \t}\n \n+\t@Override\n+\tpublic BigDecimal getPriceActual(final org.compiere.model.I_C_OrderLine orderline)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bce15c84d3e8389a893477ae662fc8adcf21fa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2NDcyOQ==", "bodyText": "removed that completely, using getcostprice() which returns a Productprice with price actual and uomID", "url": "https://github.com/metasfresh/metasfresh/pull/6556#discussion_r419364729", "createdAt": "2020-05-04T11:17:11Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.business/src/main/java/de/metas/order/impl/OrderLineBL.java", "diffHunk": "@@ -773,6 +773,12 @@ public ProductPrice getCostPrice(final org.compiere.model.I_C_OrderLine orderLin\n \t\t\t\t.build();\n \t}\n \n+\t@Override\n+\tpublic BigDecimal getPriceActual(final org.compiere.model.I_C_OrderLine orderline)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4MTI5OQ=="}, "originalCommit": {"oid": "92bce15c84d3e8389a893477ae662fc8adcf21fa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTg1MjAwOnYy", "diffSide": "LEFT", "path": "backend/de.metas.device.scales/src/test/java/de/metas/device/scales/endpoint/TcpConnectionEndPointTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyODowMlrOGP27wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyODowMlrOGP27wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4MTg1Nw==", "bodyText": "unrelated change that got in here in the context of #6205 .. need to check this myself", "url": "https://github.com/metasfresh/metasfresh/pull/6556#discussion_r419281857", "createdAt": "2020-05-04T08:28:02Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.device.scales/src/test/java/de/metas/device/scales/endpoint/TcpConnectionEndPointTest.java", "diffHunk": "@@ -129,8 +129,6 @@ public void run()\n \t\t\t\t\t\t\t\tfinal String anotherWrongServerReturnString = MockedEndpoint.createWeightString(new BigDecimal(weight + 10)) + ISiscCmd.SICS_CMD_TERMINATOR;\n \t\t\t\t\t\t\t\tout.write(anotherWrongServerReturnString.getBytes(ICmd.SICS_CMD_CHARSET));\n \t\t\t\t\t\t\t\tSystem.out.println(\"TcpConnectionEndPointTest\" + \": server-socked-thread replied with anotherWrongServerReturnString=\" + anotherWrongServerReturnString);\n-\n-\t\t\t\t\t\t\t\tout.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bce15c84d3e8389a893477ae662fc8adcf21fa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTg1ODMyOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inout/invoicecandidate/M_InOutLine_Handler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODoyOTo1OVrOGP2_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMToxNjo0OVrOGP7-tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4Mjg4NA==", "bodyText": "we can'T combine a number from a C_OrderLine with an UOM from the prcing engine. there is no guarantee that they fit together", "url": "https://github.com/metasfresh/metasfresh/pull/6556#discussion_r419282884", "createdAt": "2020-05-04T08:29:59Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inout/invoicecandidate/M_InOutLine_Handler.java", "diffHunk": "@@ -823,7 +822,7 @@ public static PriceAndTax calculatePriceAndTax(\n \t\t\t\t.taxCategoryId(pricingResult.getTaxCategoryId())\n \t\t\t\t//\n \t\t\t\t.priceEntered(pricingResult.getPriceStd())\n-\t\t\t\t.priceActual(pricingResult.getPriceStd())\n+\t\t\t\t.priceActual(inoutLine.getC_OrderLine_ID() != 0 ? Services.get(IOrderLineBL.class).getPriceActual(inoutLine.getC_OrderLine()) : pricingResult.getPriceStd())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bce15c84d3e8389a893477ae662fc8adcf21fa"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2NDUzNA==", "bodyText": "removed old logic, using the existing getcostprice() method from orderlineBL", "url": "https://github.com/metasfresh/metasfresh/pull/6556#discussion_r419364534", "createdAt": "2020-05-04T11:16:49Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inout/invoicecandidate/M_InOutLine_Handler.java", "diffHunk": "@@ -823,7 +822,7 @@ public static PriceAndTax calculatePriceAndTax(\n \t\t\t\t.taxCategoryId(pricingResult.getTaxCategoryId())\n \t\t\t\t//\n \t\t\t\t.priceEntered(pricingResult.getPriceStd())\n-\t\t\t\t.priceActual(pricingResult.getPriceStd())\n+\t\t\t\t.priceActual(inoutLine.getC_OrderLine_ID() != 0 ? Services.get(IOrderLineBL.class).getPriceActual(inoutLine.getC_OrderLine()) : pricingResult.getPriceStd())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4Mjg4NA=="}, "originalCommit": {"oid": "92bce15c84d3e8389a893477ae662fc8adcf21fa"}, "originalPosition": 161}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1607, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}