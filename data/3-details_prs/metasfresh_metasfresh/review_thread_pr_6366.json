{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDM1MjYx", "number": 6366, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo0OTowMlrODqqVLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoxNzoxMFrODqqstA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDYwMzMyOnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo0OTowMlrOF6i0bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjoyOToxMVrOF64uew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMjIwNA==", "bodyText": "Please remove this comment", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396932204", "createdAt": "2020-03-24T06:49:02Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "diffHunk": "@@ -504,6 +504,7 @@ public void setReportData(@NonNull final ReportResultData reportResult)\n \t\treportFilename = reportResult.getReportFilename();\n \t\treportContentType = reportResult.getReportContentType();\n \t}\n+    //aici", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI5MTEzMQ==", "bodyText": "was done", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r397291131", "createdAt": "2020-03-24T16:29:11Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/process/ProcessExecutionResult.java", "diffHunk": "@@ -504,6 +504,7 @@ public void setReportData(@NonNull final ReportResultData reportResult)\n \t\treportFilename = reportResult.getReportFilename();\n \t\treportContentType = reportResult.getReportContentType();\n \t}\n+    //aici", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMjIwNA=="}, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDYwNTc5OnYy", "diffSide": "RIGHT", "path": "de.metas.report/report-service/src/main/java/de/metas/report/rest/ReportRestController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1MDoxOVrOF6i2BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1MDoxOVrOF6i2BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMjYxMw==", "bodyText": "reportContentType is never used, sais codacy. Please check if it should be used, or remove it.", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396932613", "createdAt": "2020-03-24T06:50:19Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.report/report-service/src/main/java/de/metas/report/rest/ReportRestController.java", "diffHunk": "@@ -56,19 +56,19 @@\n \t\t\t\tfinal MDCCloseable c3 = MDC.putCloseable(\"output\", String.valueOf(outputStr)))\n \t\t{\n \t\t\tfinal OutputType outputType = outputStr == null ? IReportServer.DEFAULT_OutputType : OutputType.valueOf(outputStr);\n-\t\t\tfinal String reportContentType = outputType.getContentType();\n-\t\t\tfinal String reportFilename = \"report.\" + outputType.getFileExtension();\n \n-\t\t\tfinal byte[] reportData = server.report(processId, pinstanceId, adLanguage, outputType);\n+\t\t\tfinal ReportResult report = server.report(processId, pinstanceId, adLanguage, outputType);\n+\t\t\tfinal String reportContentType = report.getOutputType().getContentType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDYxMjAzOnYy", "diffSide": "RIGHT", "path": "de.metas.report/report-service/src/test/java/de/metas/report/xls/engine/JXlsExporterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1MzoxMlrOF6i5zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1MzoxMlrOF6i5zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzMzU4MA==", "bodyText": "I believe this class should start with Capital", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396933580", "createdAt": "2020-03-24T06:53:12Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.report/report-service/src/test/java/de/metas/report/xls/engine/JXlsExporterTest.java", "diffHunk": "@@ -33,80 +39,105 @@\n \n public class JXlsExporterTest\n {\n+\tprivate static final String RESOURCENAME_TestBPartners_xls = \"/jxls/TestBPartners.xls\";\n+\tprivate static final String RESOURCENAME_TestBPartners_xlsx = \"/jxls/TestBPartners.xlsx\";\n+\n+\tprivate ObjectXlsDataSource createBPartnersDataSource(final int count)\n+\t{\n+\t\treturn ObjectXlsDataSource.builder()\n+\t\t\t\t.rows(createTestBPartners(count))\n+\t\t\t\t.build();\n+\t}\n+\n+\tprivate List<TestBPartner> createTestBPartners(final int count)\n+\t{\n+\t\tfinal List<TestBPartner> list = new ArrayList<>();\n+\t\tfor (int i = 1; i <= count; i++)\n+\t\t{\n+\t\t\tlist.add(TestBPartner.builder()\n+\t\t\t\t\t.value(\"BP\" + count)\n+\t\t\t\t\t.name(\"BPartner \" + count)\n+\t\t\t\t\t.build());\n+\t\t}\n+\t\treturn list;\n+\t}\n+\n+\t@Builder\n+\t@Value\n+\tpublic static class TestBPartner\n+\t{\n+\t\tprivate String value;\n+\t\tprivate String name;\n+\t}\n+\n \t/**\n \t * Simple test to make sure {@link JXlsExporter} can process a simple template and does not have errors.\n-\t * \n-\t * @throws Exception\n \t */\n \t@Test\n-\tpublic void testProcessSimpleReport_XLS() throws Exception\n+\tpublic void testProcessSimpleReport_XLS()\n \t{\n-\t\tfinal InputStream jxlsTemplate = JXlsExporterTest.class.getResourceAsStream(\"/jxls/TestBPartners.xls\");\n-\t\tfinal IXlsDataSource dataSource = createBPartnersDataSource(10);\n-\n-\t\tfinal OutputStream output = new ByteArrayOutputStream();\n-\t\t// final OutputStream output = new FileOutputStream(\"c:\\\\tmp\\\\TestBPartners_out.xls\");\n+\t\tfinal InputStream jxlsTemplate = JXlsExporterTest.class.getResourceAsStream(RESOURCENAME_TestBPartners_xls);\n+\t\tfinal ObjectXlsDataSource dataSource = createBPartnersDataSource(10);\n \n \t\tJXlsExporter.newInstance()\n \t\t\t\t.setContext(new Properties())\n \t\t\t\t.setTemplate(jxlsTemplate)\n \t\t\t\t.setDataSource(dataSource)\n-\t\t\t\t.setOutput(output)\n \t\t\t\t.export();\n \t}\n \n \t@Test\n-\tpublic void testProcessSimpleReport_XLSX() throws Exception\n+\tpublic void testProcessSimpleReport_XLSX()\n \t{\n-\t\tfinal InputStream jxlsTemplate = JXlsExporterTest.class.getResourceAsStream(\"/jxls/TestBPartners.xlsx\");\n-\t\tfinal IXlsDataSource dataSource = createBPartnersDataSource(10);\n-\n-\t\tfinal OutputStream output = new ByteArrayOutputStream();\n-\t\t// final OutputStream output = new FileOutputStream(\"c:\\\\tmp\\\\TestBPartners_out.xlsx\");\n+\t\tfinal InputStream jxlsTemplate = JXlsExporterTest.class.getResourceAsStream(RESOURCENAME_TestBPartners_xlsx);\n+\t\tfinal ObjectXlsDataSource dataSource = createBPartnersDataSource(10);\n \n \t\tJXlsExporter.newInstance()\n \t\t\t\t.setContext(new Properties())\n \t\t\t\t.setTemplate(jxlsTemplate)\n \t\t\t\t.setDataSource(dataSource)\n-\t\t\t\t.setOutput(output)\n \t\t\t\t.export();\n \t}\n \n-\tprivate IXlsDataSource createBPartnersDataSource(final int count)\n+\t@Nested\n+\tpublic class getSuggestedFilename", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDYxNjM1OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/report/ExecuteReportStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1NToyMlrOF6i8eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjo1NToyMlrOF6i8eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzNDI2Ng==", "bodyText": "Could this work maybe ?\nthis(null, outputType, reportData);\nAnd annotate filename with @Nullable in the other constructor?", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396934266", "createdAt": "2020-03-24T06:55:22Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/report/ExecuteReportStrategy.java", "diffHunk": "@@ -48,6 +50,23 @@\n \t@ToString(exclude = \"reportData\")\n \tpublic class ExecuteReportResult\n \t{\n+\t\tpublic ExecuteReportResult(OutputType outputType, byte[] reportData)\n+\t\t{\n+\t\t\tthis.filename = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDYzNDk5OnYy", "diffSide": "RIGHT", "path": "de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/functions/fresh_PriceList_Details_Template_Report.sql", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowMzo1M1rOF6jIGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowMzo1M1rOF6jIGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzNzI0MA==", "bodyText": "Maybe i'm missing something, but cant the whole case be replaced with\ncoalesce(hupiv.description, hupip.name, plc.uomsymbol)  as itemproductname,\n?", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396937240", "createdAt": "2020-03-24T07:03:53Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/functions/fresh_PriceList_Details_Template_Report.sql", "diffHunk": "@@ -11,37 +11,55 @@ CREATE OR REPLACE FUNCTION report.fresh_pricelist_details_template_report(IN p_c\n                 itemproductname         text,\n                 qty                     numeric,\n                 uomsymbol               text,\n-                pricestd                numeric,\n+                pricestd                text,\n                 m_productprice_id       integer,\n                 c_bpartner_id           numeric,\n                 m_hu_pi_item_product_id integer,\n                 uom_x12de355            text,\n                 c_bpartner_location_id  numeric,\n                 qtycuspertu             numeric,\n-                m_product_id            integer\n+                bp_value                text,\n+                bp_name                 text,\n+                validfrom               timestamp without time zone,\n+                reportfilename          text\n             )\n+\n AS\n $BODY$\n --\n-SELECT plc.value                                                                 AS prodvalue,\n-       plc.customerproductnumber                                                 as customerproductnumber,\n-       plc.productcategory                                                       as productcategory,\n-       plc.productname                                                           as productname,\n-       plc.attributes                                                            as attributes,\n-       plc.itemproductname                                                       as itemproductname,\n+\n+SELECT plc.value                                                                                                              AS prodvalue,\n+       plc.customerproductnumber                                                                                              as customerproductnumber,\n+       plc.productcategory                                                                                                    as productcategory,\n+       plc.productname                                                                                                        as productname,\n+       plc.attributes                                                                                                         as attributes,\n+       case\n+           when coalesce(hupiv.description, hupip.name) is null then plc.uomsymbol\n+           else\n+               coalesce(hupiv.description, hupip.name) end                                                                    as itemproductname,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY0MzIwOnYy", "diffSide": "RIGHT", "path": "de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/functions/fresh_PriceList_Details_Template_Report.sql", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowNzozOFrOF6jNQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowNzozOFrOF6jNQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzODU2Mg==", "bodyText": "not sure i like as decimal(19, 2) : since this is a price, shouldn't we round in jasper the number to the currency's standard rounding precision instead of a hardcoded value? what happens if the customer changes that precision at some point?", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396938562", "createdAt": "2020-03-24T07:07:38Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/functions/fresh_PriceList_Details_Template_Report.sql", "diffHunk": "@@ -11,37 +11,55 @@ CREATE OR REPLACE FUNCTION report.fresh_pricelist_details_template_report(IN p_c\n                 itemproductname         text,\n                 qty                     numeric,\n                 uomsymbol               text,\n-                pricestd                numeric,\n+                pricestd                text,\n                 m_productprice_id       integer,\n                 c_bpartner_id           numeric,\n                 m_hu_pi_item_product_id integer,\n                 uom_x12de355            text,\n                 c_bpartner_location_id  numeric,\n                 qtycuspertu             numeric,\n-                m_product_id            integer\n+                bp_value                text,\n+                bp_name                 text,\n+                validfrom               timestamp without time zone,\n+                reportfilename          text\n             )\n+\n AS\n $BODY$\n --\n-SELECT plc.value                                                                 AS prodvalue,\n-       plc.customerproductnumber                                                 as customerproductnumber,\n-       plc.productcategory                                                       as productcategory,\n-       plc.productname                                                           as productname,\n-       plc.attributes                                                            as attributes,\n-       plc.itemproductname                                                       as itemproductname,\n+\n+SELECT plc.value                                                                                                              AS prodvalue,\n+       plc.customerproductnumber                                                                                              as customerproductnumber,\n+       plc.productcategory                                                                                                    as productcategory,\n+       plc.productname                                                                                                        as productname,\n+       plc.attributes                                                                                                         as attributes,\n+       case\n+           when coalesce(hupiv.description, hupip.name) is null then plc.uomsymbol\n+           else\n+               coalesce(hupiv.description, hupip.name) end                                                                    as itemproductname,\n        -- if packing instructions exist, we will display the qty one as it refers to one TU (Transportation Unit).\n-       CASE WHEN plc.itemproductname IS NOT NULL THEN 1 ELSE plc.qtycuspertu END AS qty,\n-       plc.uomsymbol                                                             as uomsymbol,\n-       plc.pricestd                                                              as pricestd,\n-       plc.M_ProductPrice_ID                                                     as m_productprice_id,\n-       p_c_bpartner_id                                                           as c_bpartner_id,\n-       plc.M_HU_PI_Item_Product_ID                                               as m_hu_pi_item_product_id,\n-       plc.UOM_X12DE355                                                          as uom_x12de355,\n-       p_c_bpartner_location_id                                                  as c_bpartner_location_id,\n-       plc.qtycuspertu                                                           as qtycuspertu,\n-       plc.M_Product_ID                                                          as m_product_id\n+--        CASE WHEN plc.itemproductname IS NOT NULL THEN 1 ELSE plc.qtycuspertu END AS qty,\n+       NULL::numeric                                                                                                          as qty,\n+       plc.uomsymbol                                                                                                          as uomsymbol,\n+       cast(plc.pricestd as decimal(19, 2))::text                                                                             as pricestd,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY2MzU2OnYy", "diffSide": "RIGHT", "path": "de.metas.report/report-service/src/main/java/de/metas/report/rest/ReportRestController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoxNzoxMFrOF6jaQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzoxNzoxMFrOF6jaQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk0MTg5MA==", "bodyText": "Please use Check.isNotBlank", "url": "https://github.com/metasfresh/metasfresh/pull/6366#discussion_r396941890", "createdAt": "2020-03-24T07:17:10Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.report/report-service/src/main/java/de/metas/report/rest/ReportRestController.java", "diffHunk": "@@ -81,6 +81,19 @@\n \t\t}\n \t}\n \n+\tprivate String extractReportFilename(final ReportResult report)\n+\t{\n+\t\tif (!Check.isBlank(report.getReportFilename()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da016a5a77dfac627dbdd7931616bd1a3ee34060"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1437, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}