{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjIxMjEy", "number": 6478, "title": "User Query filters errors", "bodyText": "#6476", "createdAt": "2020-04-13T12:23:22Z", "url": "https://github.com/metasfresh/metasfresh/pull/6478", "merged": true, "mergeCommit": {"oid": "c420b82d18e86d8500bdc1e8dd5f38069e119526"}, "closed": true, "closedAt": "2020-04-15T07:21:33Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXgOfmAH2gAyNDAyNjIxMjEyOjIyYTIzN2RkNmY3YmFkMTY1ZGU1MTdhYWFmZjMwNWE2MTQ2NWE5NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXyP2DAFqTM5MzQ5MTk2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22a237dd6f7bad165de517aaaff305a61465a971", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/22a237dd6f7bad165de517aaaff305a61465a971", "committedDate": "2020-04-14T09:39:08Z", "message": "Add testcase where a quantity/number is returned as string\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c4d20d75963a904a0bcd0eb826d51df23cc468d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/2c4d20d75963a904a0bcd0eb826d51df23cc468d", "committedDate": "2020-04-14T09:39:08Z", "message": "Extract `convertValueToFieldType` to own helper function, to be used in multiple places\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "456c88be50e37bdceedc7a9c7956a02ee1d415e7", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/456c88be50e37bdceedc7a9c7956a02ee1d415e7", "committedDate": "2020-04-14T09:39:08Z", "message": "Use `UserQueryFieldHelper.parseValueObjectByColumnDisplayType` instead of `searchField.convertValueToFieldType`\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abfd0637d208e16b5d2c2bfcb88736e2f7946ac4", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/abfd0637d208e16b5d2c2bfcb88736e2f7946ac4", "committedDate": "2020-04-14T09:39:08Z", "message": "Use ColumnDisplayTypeProvider when calculating the object value.\n\nThis interface was introduced to ease testing\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcdd6993e4d78e843841643e584f2b67666104b3", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/dcdd6993e4d78e843841643e584f2b67666104b3", "committedDate": "2020-04-14T09:37:46Z", "message": "Use ColumnDisplayTypeProvider when calculating the object value.\n\nThis interface was introduced to ease testing\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}, "afterCommit": {"oid": "abfd0637d208e16b5d2c2bfcb88736e2f7946ac4", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/abfd0637d208e16b5d2c2bfcb88736e2f7946ac4", "committedDate": "2020-04-14T09:39:08Z", "message": "Use ColumnDisplayTypeProvider when calculating the object value.\n\nThis interface was introduced to ease testing\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTU2ODQ2", "url": "https://github.com/metasfresh/metasfresh/pull/6478#pullrequestreview-392956846", "createdAt": "2020-04-14T14:01:41Z", "commit": {"oid": "abfd0637d208e16b5d2c2bfcb88736e2f7946ac4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDowMTo0MVrOGFQHwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoxMjoxOFrOGFQnVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2MDE5Mw==", "bodyText": "i suggest you flag this as @FunctionalInterface, so we can inject lambdas", "url": "https://github.com/metasfresh/metasfresh/pull/6478#discussion_r408160193", "createdAt": "2020-04-14T14:01:41Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java-legacy/org/compiere/model/ColumnDisplayTypeProvider.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package org.compiere.model;\n+\n+public interface ColumnDisplayTypeProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abfd0637d208e16b5d2c2bfcb88736e2f7946ac4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2ODI3OQ==", "bodyText": "i think here you lost the part from the legacy code where the error is logger. pls add some logging; (Level.WARN)", "url": "https://github.com/metasfresh/metasfresh/pull/6478#discussion_r408168279", "createdAt": "2020-04-14T14:12:18Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/org/compiere/apps/search/UserQueryFieldHelper.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package org.compiere.apps.search;\n+\n+import lombok.NonNull;\n+import org.compiere.util.DisplayType;\n+import org.compiere.util.TimeUtil;\n+\n+import javax.annotation.Nullable;\n+import java.math.BigDecimal;\n+import java.sql.Timestamp;\n+import java.text.DecimalFormat;\n+\n+public class UserQueryFieldHelper\n+{\n+\t@Nullable\n+\tpublic static Object parseValueObjectByColumnDisplayType(@Nullable final Object valueObj, final int displayType, @NonNull final String columnName)\n+\t{\n+\t\tif (valueObj == null)\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\t\ttry\n+\t\t{\n+\t\t\t// Return Integer\n+\t\t\tif (displayType == DisplayType.Integer || DisplayType.isID(displayType) && columnName.endsWith(\"_ID\"))\n+\t\t\t{\n+\t\t\t\tif (valueObj instanceof Integer)\n+\t\t\t\t{\n+\t\t\t\t\treturn valueObj;\n+\t\t\t\t}\n+\t\t\t\tfinal int i = Integer.parseInt(valueObj.toString());\n+\t\t\t\treturn i;\n+\t\t\t}\n+\t\t\t// Return BigDecimal\n+\t\t\telse if (DisplayType.isNumeric(displayType))\n+\t\t\t{\n+\t\t\t\tif (valueObj instanceof BigDecimal)\n+\t\t\t\t{\n+\t\t\t\t\treturn valueObj;\n+\t\t\t\t}\n+\t\t\t\tfinal DecimalFormat numberFormat = DisplayType.getNumberFormat(displayType);\n+\t\t\t\tnumberFormat.setParseBigDecimal(true);\n+\t\t\t\treturn numberFormat.parse(valueObj.toString());\n+\t\t\t}\n+\t\t\t// Return Timestamp\n+\t\t\telse if (DisplayType.isDate(displayType))\n+\t\t\t{\n+\t\t\t\tif (valueObj instanceof java.util.Date)\n+\t\t\t\t{\n+\t\t\t\t\treturn TimeUtil.asTimestamp((java.util.Date)valueObj);\n+\t\t\t\t}\n+\t\t\t\tlong time;\n+\t\t\t\ttry\n+\t\t\t\t{\n+\t\t\t\t\ttime = DisplayType.getDateFormat_JDBC().parse(valueObj.toString()).getTime();\n+\t\t\t\t\treturn new Timestamp(time);\n+\t\t\t\t}\n+\t\t\t\tcatch (final Exception e)\n+\t\t\t\t{\n+\t\t\t\t\ttime = DisplayType.getDateFormat(displayType).parse(valueObj.toString()).getTime();\n+\t\t\t\t}\n+\t\t\t\treturn new Timestamp(time);\n+\t\t\t}\n+\t\t\t// Return Y/N for Boolean\n+\t\t\telse if (valueObj instanceof Boolean)\n+\t\t\t{\n+\t\t\t\treturn DisplayType.toBooleanString((Boolean)valueObj);\n+\t\t\t}\n+\t\t}\n+\t\tcatch (final Exception ex)\n+\t\t{\n+\t\t\tString error = ex.getLocalizedMessage();\n+\t\t\tif (error == null || error.isEmpty())\n+\t\t\t{\n+\t\t\t\terror = ex.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abfd0637d208e16b5d2c2bfcb88736e2f7946ac4"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d80d43045d96aa48123657532f33e1b11d0483c5", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/d80d43045d96aa48123657532f33e1b11d0483c5", "committedDate": "2020-04-15T06:25:44Z", "message": "Add logging to `UserQueryFieldHelper`; Mark `ColumnDisplayTypeProvider` as `@FunctionalInterface`\n\nhttps://github.com/metasfresh/metasfresh/issues/6476"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDkxOTY3", "url": "https://github.com/metasfresh/metasfresh/pull/6478#pullrequestreview-393491967", "createdAt": "2020-04-15T06:38:54Z", "commit": {"oid": "d80d43045d96aa48123657532f33e1b11d0483c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3465, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}