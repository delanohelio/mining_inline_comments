{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MTU0Mzgw", "number": 10315, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTo1ODozNVrOE97mBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoyMzo1MVrOE_s1Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc0OTgwOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/user/api/impl/UserDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTo1ODozNVrOH63_oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTo1ODozNVrOH63_oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5Njg2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.create()\n          \n          \n            \n            \t\t\t\t.listDistinct(I_AD_User.COLUMNNAME_IsSystemUser, Boolean.class)\n          \n          \n            \n            \t\t\t\t.stream()\n          \n          \n            \n            \t\t\t\t.findFirst()\n          \n          \n            \n            \t\t\t\t.orElse(false);\n          \n          \n            \n            \t\t\t\t.addEqualsFilter(I_AD_User.COLUMNNAME_IsSystemUser, true)\n          \n          \n            \n            \t\t\t\t.create()\n          \n          \n            \n            \t\t\t\t.anyMatch()", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531496865", "createdAt": "2020-11-27T09:58:35Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/user/api/impl/UserDAO.java", "diffHunk": "@@ -260,6 +258,20 @@ private static final String extractEMailAddressOrNull(final String email)\n \t\t\t\t.listIds(UserId::ofRepoId);\n \t}\n \n+\t@Override\n+\tpublic boolean isSystemUser(@NonNull final UserId userId)\n+\t{\n+\t\treturn Services.get(IQueryBL.class)\n+\t\t\t\t.createQueryBuilder(I_AD_User.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.addEqualsFilter(I_AD_User.COLUMNNAME_AD_User_ID, userId)\n+\t\t\t\t.create()\n+\t\t\t\t.listDistinct(I_AD_User.COLUMNNAME_IsSystemUser, Boolean.class)\n+\t\t\t\t.stream()\n+\t\t\t\t.findFirst()\n+\t\t\t\t.orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc1ODk5OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMDo1MlrOH64FDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMDo1MlrOH64FDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODI1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);\n          \n          \n            \n            \t\tfinal I_AD_User user = calloutRecord.getModel(I_AD_User.class);", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531498254", "createdAt": "2020-11-27T10:00:52Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * marketing-base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.marketing.base.callout;\n+\n+import de.metas.i18n.AdMessageKey;\n+import de.metas.marketing.base.api.IMKTGChannelDao;\n+import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n+import de.metas.util.Services;\n+import org.adempiere.ad.callout.api.ICalloutRecord;\n+import org.adempiere.ad.ui.spi.TabCalloutAdapter;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n+import org.compiere.model.I_AD_User;\n+import org.compiere.util.Env;\n+\n+public class AD_User_TabCallout extends TabCalloutAdapter\n+{\n+\tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n+\n+\tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n+\n+\t@Override\n+\tpublic void onSave(final ICalloutRecord calloutRecord)\n+\t{\n+\t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc2MjYyOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMTo1NlrOH64HTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMTo1NlrOH64HTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODgyOQ==", "bodyText": "please check this with the client-id and org-id of the I_AD_User in question.", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531498829", "createdAt": "2020-11-27T10:01:56Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/callout/AD_User_TabCallout.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * #%L\n+ * marketing-base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.marketing.base.callout;\n+\n+import de.metas.i18n.AdMessageKey;\n+import de.metas.marketing.base.api.IMKTGChannelDao;\n+import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n+import de.metas.util.Services;\n+import org.adempiere.ad.callout.api.ICalloutRecord;\n+import org.adempiere.ad.ui.spi.TabCalloutAdapter;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n+import org.compiere.model.I_AD_User;\n+import org.compiere.util.Env;\n+\n+public class AD_User_TabCallout extends TabCalloutAdapter\n+{\n+\tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n+\n+\tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n+\n+\t@Override\n+\tpublic void onSave(final ICalloutRecord calloutRecord)\n+\t{\n+\t\tI_AD_User user = calloutRecord.getModel(I_AD_User.class);\n+\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (userDAO.isSystemUser(UserId.ofRepoId(user.getAD_User_ID())))\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tboolean canBeSaved = true;\n+\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(user.getAD_User_ID())) <= 0)\n+\t\t{\n+\t\t\tcanBeSaved = false;\n+\t\t}\n+\n+\t\tif (!canBeSaved)\n+\t\t{\n+\t\t\tthrow new AdempiereException(MSG_CAN_NOT_REMOVE_CHANNEL).markAsUserValidationError();\n+\t\t}\n+\t}\n+\n+\tprivate boolean isMarketingChannelsUseEnforced()\n+\t{\n+\t\treturn sysConfigBL.getBooleanValue(SYS_CONFIG_MARKETING_CHANNELS_ENFORCED, false, Env.getAD_Client_ID(Env.getCtx()), Env.getAD_Org_ID(Env.getCtx()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc2OTc1OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5573480_sys_gh10279AddEnforceMarketingChannelsSysConfig.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNDowMVrOH64Lrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNDowMVrOH64Lrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5OTk1MQ==", "bodyText": "please add a description that explains that this applies\n\nonly to not-system users\nonly whn added in the user-window", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531499951", "createdAt": "2020-11-27T10:04:01Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/system/10-de.metas.adempiere/5573480_sys_gh10279AddEnforceMarketingChannelsSysConfig.sql", "diffHunk": "@@ -0,0 +1,5 @@\n+-- 2020-11-27T06:12:31.788Z\n+-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator\n+INSERT INTO AD_SysConfig (AD_Client_ID,AD_Org_ID,AD_SysConfig_ID,ConfigurationLevel,Created,CreatedBy,EntityType,IsActive,Name,Updated,UpdatedBy,Value) VALUES (0,0,541346,'O',TO_TIMESTAMP('2020-11-27 08:12:31','YYYY-MM-DD HH24:MI:SS'),100,'de.metas.marketing.base','Y','de.metas.marketing.EnforceUserHasMarketingChannels',TO_TIMESTAMP('2020-11-27 08:12:31','YYYY-MM-DD HH24:MI:SS'),100,'N')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc3NDkyOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/AD_User_MKTG_Channels.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNToyNlrOH64Oyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNToyNlrOH64Oyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMDc0Ng==", "bodyText": "please check this with the client-id and org-id of the I_AD_User in question. (same as in the tab-callout)", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531500746", "createdAt": "2020-11-27T10:05:26Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/AD_User_MKTG_Channels.java", "diffHunk": "@@ -26,36 +26,55 @@\n import de.metas.marketing.base.api.IMKTGChannelDao;\n import de.metas.marketing.base.model.I_AD_User_MKTG_Channels;\n import de.metas.user.UserId;\n+import de.metas.user.api.IUserDAO;\n import de.metas.util.Services;\n import lombok.NonNull;\n-import org.adempiere.ad.callout.annotations.Callout;\n import org.adempiere.ad.modelvalidator.annotations.Interceptor;\n import org.adempiere.ad.modelvalidator.annotations.ModelChange;\n import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.service.ISysConfigBL;\n import org.compiere.model.ModelValidator;\n+import org.compiere.util.Env;\n \n-@Callout(I_AD_User_MKTG_Channels.class)\n @Interceptor(I_AD_User_MKTG_Channels.class)\n public class AD_User_MKTG_Channels\n {\n \tpublic static final AD_User_MKTG_Channels INSTANCE = new AD_User_MKTG_Channels();\n \n \tprivate final IMKTGChannelDao mktgChannelDao = Services.get(IMKTGChannelDao.class);\n+\tprivate final IUserDAO userDAO = Services.get(IUserDAO.class);\n+\tprivate final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);\n \n \tprivate static final AdMessageKey MSG_CAN_NOT_REMOVE_CHANNEL = AdMessageKey.of(\"de.metas.marketing.base.userMarketingChannelRemovalError\");\n+\tprivate static final String SYS_CONFIG_MARKETING_CHANNELS_ENFORCED = \"de.metas.marketing.EnforceUserHasMarketingChannels\";\n \n \tprivate AD_User_MKTG_Channels()\n \t{\n \t}\n \n \t@ModelChange(\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n-\tpublic void checkIfCanBeDeleted(@NonNull final I_AD_User_MKTG_Channels userMktgChannel)\n+\tpublic void checkIfCanBeDeleted(@NonNull final I_AD_User_MKTG_Channels userMktgChannels)\n \t{\n-\t\tfinal int count = mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(userMktgChannel.getAD_User_ID()));\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (userDAO.isSystemUser(UserId.ofRepoId(userMktgChannels.getAD_User_ID())))\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal int count = mktgChannelDao.retrieveMarketingChannelsCountForUser(UserId.ofRepoId(userMktgChannels.getAD_User_ID()));\n \t\tif (count == 1)\n \t\t{\n \t\t\tthrow new AdempiereException(MSG_CAN_NOT_REMOVE_CHANNEL).markAsUserValidationError();\n \t\t}\n \t}\n+\n+\tprivate boolean isMarketingChannelsUseEnforced()\n+\t{\n+\t\treturn sysConfigBL.getBooleanValue(SYS_CONFIG_MARKETING_CHANNELS_ENFORCED, false, Env.getAD_Client_ID(Env.getCtx()), Env.getAD_Org_ID(Env.getCtx()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc3OTQ4OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNjo0MVrOH64Rmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowNjo0MVrOH64Rmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMTQ2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfor (UserId userId : usersSet)\n          \n          \n            \n            \t\tfor (final UserId userId : usersSet)", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531501466", "createdAt": "2020-11-27T10:06:41Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())\n+\t\t{\n+\t\t\treturn;\n+\t\t}\n+\n \t\tboolean canBeDeleted = true;\n \t\tSet<UserId> usersSet = mktgChannelDao.retrieveUsersHavingChannel(mktgChannel.getMKTG_Channel_ID());\n \t\tfor (UserId userId : usersSet)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc5MzQ3OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxMDo0M1rOH64aRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0MToyNFrOH9hHUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ==", "bodyText": "But can we generally delete a marketingchannel just like that? wont there be a DB exception in case the channel is still referenced by AD_User_MKTG_Channel records?\nSo i think you probably don't need to change this method at all..", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531503685", "createdAt": "2020-11-27T10:10:43Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYyMzUwNQ==", "bodyText": "@metas-ts clarified with @metas-mk It's ok to not be able to delete a marketing channel if a there is still a reference on the mktg_channel_id from the AD_User_MKTG_Channels table. This means we could completely delete this interceptor and the de.metas.marketing.base.api.IMKTGChannelDao#retrieveUsersHavingChannel method. However, AFAIU the possibility to only not be able to remove a channel if a user would remain with 0 will be implemented in another task, so I propose to comment out the line (+a comment with this task and explanation) that registers this interceptor and expand this in the future (A IMktgChannelBL class with a method that does necessary operation on the ad_user_mktg_channels table. WDYT?", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531623505", "createdAt": "2020-11-27T14:10:27Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzOTI3Ng==", "bodyText": "@dragospodariu96\n\nIt's ok to not be able to delete a marketing channel if a there is still a reference on the mktg_channel_id from the AD_User_MKTG_Channels table.\n\nOK\n\nThis means we could completely delete this interceptor\n\nno, because we still want a user-friendly error message when they try to delete a MKTG_Channel that is still linked to users.\nthat's why i proposed to \"revert\" it.\n\nwill be implemented in another task[...](+a comment with this task and explanation)\n\nif you think it will help in future, feel free to add a comment or something, so a future dev doesn't have to start at zero", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531639276", "createdAt": "2020-11-27T14:41:42Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI2NzczMQ==", "bodyText": "@metas-ts\nUpdated the interceptor's method. User friendly error message now shown when trying to delete a marketing channel that is still assigned to at least one user, regardless of the value from the 'enforce marketing channels use' sys config.\nOBS: Because regardless of that config, if we tried to delete a channel still assigned to a user, we would get an error due to the mktg_channel_id foreign key constraint on the ad_user_mktg_channels table", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534267731", "createdAt": "2020-12-02T15:41:24Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -54,20 +58,30 @@ private MKTG_Channel()\n \t\t\ttimings = { ModelValidator.TYPE_BEFORE_DELETE })\n \tpublic void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n+\t\tif (!isMarketingChannelsUseEnforced())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwMzY4NQ=="}, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc5NzMyOnYy", "diffSide": "LEFT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/Document.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxMTo1NFrOH64c0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0Mjo0MFrOH65khA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDMzNw==", "bodyText": "what is the background of this change?", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531504337", "createdAt": "2020-11-27T10:11:54Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/Document.java", "diffHunk": "@@ -2164,7 +2164,7 @@ public Document build()\n \n \t\t\tfinal DocumentEntityDescriptor entityDescriptor = getEntityDescriptor();\n \t\t\tfinal ITabCallout documentCallout = entityDescriptor.createAndInitializeDocumentCallout(document.asCalloutRecord());\n-\t\t\tdocument.documentCallout = ExceptionHandledTabCallout.wrapIfNeeded(documentCallout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMjY5Mg==", "bodyText": "The user was still saved because the exception wasn't handled properly", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r531522692", "createdAt": "2020-11-27T10:42:40Z", "author": {"login": "dragospodariu96"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/Document.java", "diffHunk": "@@ -2164,7 +2164,7 @@ public Document build()\n \n \t\t\tfinal DocumentEntityDescriptor entityDescriptor = getEntityDescriptor();\n \t\t\tfinal ITabCallout documentCallout = entityDescriptor.createAndInitializeDocumentCallout(document.asCalloutRecord());\n-\t\t\tdocument.documentCallout = ExceptionHandledTabCallout.wrapIfNeeded(documentCallout);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDMzNw=="}, "originalCommit": {"oid": "d249c4709ef2954a2ea072934e7353eb6f2f8596"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjMwMjMxOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoyMzo1MVrOH9jL1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjoyNjoxOFrOH9jTnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMTY1NQ==", "bodyText": "Even for system-users, you won't be able to delete the channel, simply because of the foreign-key-constraint we talked about.\nRemember, you tried it when we had the screen-session..", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534301655", "createdAt": "2020-12-02T16:23:51Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -56,18 +56,18 @@ public void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n \t\tboolean canBeDeleted = true;\n \t\tSet<UserId> usersSet = mktgChannelDao.retrieveUsersHavingChannel(mktgChannel.getMKTG_Channel_ID());\n-\t\tfor (UserId userId : usersSet)\n+\t\tfor (final UserId userId : usersSet)\n \t\t{\n-\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) == 1)\n+\n+\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) > 0 && !userDAO.isSystemUser(userId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcffb5244a77d78f994e9e895120805291480d69"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMzY0NA==", "bodyText": "Yeah, forgot about that \ud83d\ude13 Removed the condition.", "url": "https://github.com/metasfresh/metasfresh/pull/10315#discussion_r534303644", "createdAt": "2020-12-02T16:26:18Z", "author": {"login": "dragospodariu96"}, "path": "backend/de.metas.marketing/base/src/main/java/de/metas/marketing/base/interceptor/MKTG_Channel.java", "diffHunk": "@@ -56,18 +56,18 @@ public void checkIfCanBeDeleted(@NonNull final I_MKTG_Channel mktgChannel)\n \t{\n \t\tboolean canBeDeleted = true;\n \t\tSet<UserId> usersSet = mktgChannelDao.retrieveUsersHavingChannel(mktgChannel.getMKTG_Channel_ID());\n-\t\tfor (UserId userId : usersSet)\n+\t\tfor (final UserId userId : usersSet)\n \t\t{\n-\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) == 1)\n+\n+\t\t\tif (mktgChannelDao.retrieveMarketingChannelsCountForUser(userId) > 0 && !userDAO.isSystemUser(userId))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMwMTY1NQ=="}, "originalCommit": {"oid": "fcffb5244a77d78f994e9e895120805291480d69"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}