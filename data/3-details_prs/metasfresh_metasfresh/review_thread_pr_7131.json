{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjQ4MzAw", "number": 7131, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxNDo0OVrOEYLTfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyMDo1OVrOEYVwnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg2NDk1OnYy", "diffSide": "RIGHT", "path": "misc/services/camel/de-metas-camel-edi/src/test/java/de/metas/edi/esb/invoicexport/ecosio/EcosioInvoicRouteTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxNDo0OVrOHAX4hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxNDo0OVrOHAX4hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MzM1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"<EDI_Invoice_Feedback AD_Client_Value=\\\"ADClientValueAttr\\\" ReplicationEvent=\\\"5\\\" ReplicationMode=\\\"0\\\" ReplicationType=\\\"M\\\" Version=\\\"*\\\">\\n\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"    <C_Invoice_ID>1001</C_Invoice_ID>\\n\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"    <EDI_ExportStatus>S</EDI_ExportStatus>\\n\"\n          \n          \n            \n            \t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"<EDI_Invoice_Feedback AD_Client_Value=\\\"ADClientValueAttr\\\" ReplicationEvent=\\\"5\\\" ReplicationMode=\\\"0\\\" ReplicationType=\\\"M\\\" Version=\\\"*\\\">\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"    <C_Invoice_ID>1001</C_Invoice_ID>\"\n          \n          \n            \n            \t\t\t\t\t\t+ \"    <EDI_ExportStatus>S</EDI_ExportStatus>\"", "url": "https://github.com/metasfresh/metasfresh/pull/7131#discussion_r470153350", "createdAt": "2020-08-13T18:14:49Z", "author": {"login": "metas-ts"}, "path": "misc/services/camel/de-metas-camel-edi/src/test/java/de/metas/edi/esb/invoicexport/ecosio/EcosioInvoicRouteTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * #%L\n+ * de-metas-camel-edi\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.edi.esb.invoicexport.ecosio;\n+\n+import de.metas.edi.esb.commons.Constants;\n+import de.metas.edi.esb.commons.processor.feedback.helper.EDIXmlFeedbackHelper;\n+import de.metas.edi.esb.jaxb.metasfresh.ObjectFactory;\n+import org.apache.camel.EndpointInject;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.apache.camel.component.mock.MockEndpoint;\n+import org.apache.camel.test.junit5.CamelTestSupport;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.IOException;\n+import java.math.BigInteger;\n+import java.util.Properties;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class EcosioInvoicRouteTest extends CamelTestSupport\n+{\n+\t@EndpointInject(\"mock:fileOutputEndpoint\")\n+\tprivate MockEndpoint fileOutputEndpoint;\n+\n+\t@EndpointInject(\"mock:ep.rabbitmq.to.mf\")\n+\tprivate MockEndpoint feedbackOutputEndpoint;\n+\n+\t@Override\n+\tprotected RouteBuilder createRouteBuilder()\n+\t{\n+\t\treturn new EcosioInvoicRoute();\n+\t}\n+\n+\t@Override\n+\tprotected Properties useOverridePropertiesWithPropertiesComponent()\n+\t{\n+\t\tfinal var properties = new Properties();\n+\t\ttry\n+\t\t{\n+\t\t\tproperties.load(EcosioInvoicRouteTest.class.getClassLoader().getResourceAsStream(\"application.properties\"));\n+\t\t\tproperties.setProperty(EcosioInvoicRoute.OUTPUT_INVOIC_LOCAL, \"mock:fileOutputEndpoint\");\n+\t\t\tproperties.setProperty(Constants.EP_AMQP_TO_MF, \"mock:ep.rabbitmq.to.mf\");\n+\t\t\treturn properties;\n+\t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tvoid empty_invoic() throws Exception\n+\t{\n+\t\tfinal var ediExpInvoicType = new ObjectFactory().createEDICctopInvoicVType();\n+\t\tediExpInvoicType.setCInvoiceID(new BigInteger(\"1001\"));\n+\t\tediExpInvoicType.setADClientValueAttr(\"ADClientValueAttr\");\n+\n+\t\ttemplate.sendBodyAndHeader(\n+\t\t\t\tEcosioInvoicRoute.EP_EDI_METASFRESH_XML_INVOIC_CONSUMER /*endpoint-URI*/,\n+\t\t\t\tediExpInvoicType /*actual invoicBody*/,\n+\n+\t\t\t\tEDIXmlFeedbackHelper.HEADER_OriginalXMLBody, ediExpInvoicType // this header is otherwise set by the preceeding generic route\n+\t\t);\n+\n+\t\tfileOutputEndpoint.expectedMessageCount(1);\n+\t\tfileOutputEndpoint.assertIsSatisfied(1000);\n+\t\tfinal var invoicBody = fileOutputEndpoint.getExchanges().get(0).getIn().getBody(String.class);\n+\t\tassertThat(invoicBody).isEqualToIgnoringWhitespace(\n+\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n\"\n+\t\t\t\t\t\t+ \"<EDI_cctop_invoic_v AD_Client_Value=\\\"ADClientValueAttr\\\">\\n\"\n+\t\t\t\t\t\t+ \"    <C_Invoice_ID>1001</C_Invoice_ID>\\n\"\n+\t\t\t\t\t\t+ \"</EDI_cctop_invoic_v>\");\n+\n+\t\tfeedbackOutputEndpoint.expectedMessageCount(1);\n+\t\tfeedbackOutputEndpoint.assertIsSatisfied(1000);\n+\t\tfinal var feedBackBody = feedbackOutputEndpoint.getExchanges().get(0).getIn().getBody(String.class);\n+\t\tassertThat(feedBackBody).isEqualToIgnoringWhitespace(\n+\t\t\t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n\"\n+\t\t\t\t\t\t+ \"<EDI_Invoice_Feedback AD_Client_Value=\\\"ADClientValueAttr\\\" ReplicationEvent=\\\"5\\\" ReplicationMode=\\\"0\\\" ReplicationType=\\\"M\\\" Version=\\\"*\\\">\\n\"\n+\t\t\t\t\t\t+ \"    <C_Invoice_ID>1001</C_Invoice_ID>\\n\"\n+\t\t\t\t\t\t+ \"    <EDI_ExportStatus>S</EDI_ExportStatus>\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a99b0c01bded6e08a4be8aba0efc8db1988df32"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTU3NzkxOnYy", "diffSide": "RIGHT", "path": "misc/parent-pom/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyMDo1OVrOHAn5Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToyMDo1OVrOHAn5Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNTY5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <!--                                        <ignoreClass>javax.persistence.*</ignoreClass>-->\n          \n          \n            \n            <!--                                        <ignoreClass>javassist</ignoreClass>-->", "url": "https://github.com/metasfresh/metasfresh/pull/7131#discussion_r470415691", "createdAt": "2020-08-14T05:20:59Z", "author": {"login": "metas-ts"}, "path": "misc/parent-pom/pom.xml", "diffHunk": "@@ -645,6 +645,10 @@ Failure to find de.metas:de.metas.parent:pom:(1.0.0,3) in (URL ...) was cached i\n                                         <!-- Found in: org.apache.tomcat.embed:tomcat-embed-core:jar:8.0.30:compile\n                                             javax.servlet:javax.servlet-api:jar:3.1.0:provided -->\n                                         <ignoreClass>javax.servlet.*</ignoreClass>\n+<!--                                        <ignoreClass>javax.persistence.*</ignoreClass>-->\n+<!--                                        <ignoreClass>javassist</ignoreClass>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baf795b06623eb7b240ce78816492c6489fea98"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1368, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}