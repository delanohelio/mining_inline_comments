{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTM1Nzgw", "number": 6839, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1Mzo1OVrOEJ7hbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMjo0Mjo1M1rOEMeHVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODQ3ODU0OnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1Mzo1OVrOGqrppg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1Mzo1OVrOGqrppg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwODU1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// final DocumentPath documentPath = parentDocument\n          \n          \n            \n            \t\t\t// .getDocumentPath()\n          \n          \n            \n            \t\t\t// .createChildPath(entityDescriptor.getDetailId(), documentId);\n          \n          \n            \n            \t\t\t// throw new DocumentNotFoundException(documentPath);", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r447408550", "createdAt": "2020-06-30T04:53:59Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadonlyIncludedDocumentsCollection.java", "diffHunk": "@@ -121,21 +121,22 @@ else if (documentIds.isEmpty())\n \t}\n \n \t@Override\n-\tpublic Document getDocumentById(final DocumentId documentId)\n+\tpublic Optional<Document> getDocumentById(final DocumentId documentId)\n \t{\n \t\tfinal Document document = DocumentQuery.builder(entityDescriptor)\n \t\t\t\t.setParentDocument(parentDocument)\n \t\t\t\t.setRecordId(documentId)\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (document == null)\n \t\t{\n-\t\t\tfinal DocumentPath documentPath = parentDocument\n-\t\t\t\t\t.getDocumentPath()\n-\t\t\t\t\t.createChildPath(entityDescriptor.getDetailId(), documentId);\n-\t\t\tthrow new DocumentNotFoundException(documentPath);\n+\t\t\t// final DocumentPath documentPath = parentDocument\n+\t\t\t// .getDocumentPath()\n+\t\t\t// .createChildPath(entityDescriptor.getDetailId(), documentId);\n+\t\t\t// throw new DocumentNotFoundException(documentPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98a28ba9fc91d046587c2711e3be4ab9abd8af98"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODQ4MzAzOnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1NjoyMFrOGqrsVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1NjoyMFrOGqrsVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwOTIzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// final DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n          \n          \n            \n            \t\t\t// throw new DocumentNotFoundException(documentPath);", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r447409236", "createdAt": "2020-06-30T04:56:20Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/window/model/HighVolumeReadWriteIncludedDocumentsCollection.java", "diffHunk": "@@ -261,11 +262,12 @@ public Document getDocumentById(@NonNull final DocumentId documentId)\n \t\t\t\t.retriveDocumentOrNull();\n \t\tif (documentRetrieved == null)\n \t\t{\n-\t\t\tfinal DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n-\t\t\tthrow new DocumentNotFoundException(documentPath);\n+\t\t\t// final DocumentPath documentPath = parentDocumentPath.createChildPath(detailId, documentId);\n+\t\t\t// throw new DocumentNotFoundException(documentPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98a28ba9fc91d046587c2711e3be4ab9abd8af98"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTExNzY3OnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMjo0Mjo1M1rOGumQcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMjo0Mjo1M1rOGumQcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUxNDQ4Mw==", "bodyText": "shoulnd't we have a test with some data in the document list as well?", "url": "https://github.com/metasfresh/metasfresh/pull/6839#discussion_r451514483", "createdAt": "2020-07-08T12:42:53Z", "author": {"login": "TheBestPessimist"}, "path": "backend/metasfresh-webui-api/src/test/java/de/metas/ui/web/window/datatypes/json/JSONDocumentListTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package de.metas.ui.web.window.datatypes.json;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.adempiere.exceptions.AdempiereException;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import de.metas.JsonObjectMapperHolder;\n+\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ * \n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ * \n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+public class JSONDocumentListTest\n+{\n+\tprivate ObjectMapper jsonObjectMapper;\n+\n+\t@BeforeEach\n+\tpublic void init()\n+\t{\n+\t\tjsonObjectMapper = JsonObjectMapperHolder.newJsonObjectMapper();\n+\t}\n+\n+\t@Test\n+\tpublic void testSerialize()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439d399be66813622cd50f6390786ea55056cd0a"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1484, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}