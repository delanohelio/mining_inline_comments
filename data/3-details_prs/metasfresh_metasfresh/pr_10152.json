{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzgxOTI1", "number": 10152, "title": "Status changes for DESADV", "bodyText": "#10143", "createdAt": "2020-10-23T07:39:36Z", "url": "https://github.com/metasfresh/metasfresh/pull/10152", "merged": true, "mergeCommit": {"oid": "2c76c0d1c3e16431602ac2edba4870656b2f8e9c"}, "closed": true, "closedAt": "2020-10-26T11:31:00Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVRUCXgH2gAyNTA4NzgxOTI1OmYwMTE4MmUyZDQwMDcyNjEwZWI3OTFmMDQxNTNiNzE2OWVhMDEwMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWSlMQgFqTUxNjY4MTA0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f01182e2d40072610eb791f04153b7169ea0102b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f01182e2d40072610eb791f04153b7169ea0102b", "committedDate": "2020-10-23T07:19:55Z", "message": "Add nullability info\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6999bd1e5ec3c87a25160b69737ad189653ae91e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6999bd1e5ec3c87a25160b69737ad189653ae91e", "committedDate": "2020-10-23T07:20:33Z", "message": "Add business objects\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "555f22e625a5fdeb66b6a621ae0ec06bb36d6a09", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/555f22e625a5fdeb66b6a621ae0ec06bb36d6a09", "committedDate": "2020-10-23T07:20:57Z", "message": "Add helper functions\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e54f958b6f2207ca9d5911f626fc0b973f4e90", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/78e54f958b6f2207ca9d5911f626fc0b973f4e90", "committedDate": "2020-10-23T07:24:12Z", "message": "Add processes for EDI_Desadv table\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5610ae809ce8f2752366e56e6f8351b3e66b2d49", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5610ae809ce8f2752366e56e6f8351b3e66b2d49", "committedDate": "2020-10-23T07:26:14Z", "message": "Remove test code\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4df8a833bdfb6a95a79a51883e1c6099aafe9d29", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4df8a833bdfb6a95a79a51883e1c6099aafe9d29", "committedDate": "2020-10-23T07:37:04Z", "message": "Refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9a68f578efeac031b4f2514814b9246c7028c48", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e9a68f578efeac031b4f2514814b9246c7028c48", "committedDate": "2020-10-23T07:38:11Z", "message": "Add migration 1\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a599b6b3d257a819e65ef09be2a27eb855b0a6f", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6a599b6b3d257a819e65ef09be2a27eb855b0a6f", "committedDate": "2020-10-23T08:44:59Z", "message": "Extract more code to helper class\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c376ffc2b30341785a5ad5708f28931367837f", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f8c376ffc2b30341785a5ad5708f28931367837f", "committedDate": "2020-10-23T09:12:21Z", "message": "Add processes for C_Invoice table\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cac233f25f572fbb499cf1df7339a0268735f6f", "author": {"user": {"login": "metas-ts", "name": "Tobias Sch\u00f6neberg"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6cac233f25f572fbb499cf1df7339a0268735f6f", "committedDate": "2020-10-23T09:15:57Z", "message": "support Postgrest process with CSV-Response (#10086)\n\n* support Postgrest process with CSV-Response\n\n* Happy flower uat product rest (#7175)\n\n* minor Process-API improvements\n\n* jsonpath can not be as big as it gets\n* jsonpath is URL-encoded on the fly\n* instead of giving an empty parameters list, you can simply POST without a request body\n\n* fix for minor Process-API improvements\n\ndon't try to URL-encode the JSON-path instead, just remove line breaks\n\n(cherry picked from commit ebabb7a5352eb9bdd36873f34c22aada3ff79742)\n\n* postgrest process returns the correct content type (json or csv)\n\n* add SQL for postgrest response type CSV\n\n#9966\n\n* make setting the string response clearer\n\n#9966\n\n(cherry picked from commit 120c8c6e7cd64bbb0d95815ca113779ae5a559b8)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbc73426c3d3694a13b545b79ed025f0b145ccfa", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/dbc73426c3d3694a13b545b79ed025f0b145ccfa", "committedDate": "2020-10-23T11:02:41Z", "message": "Fixes for null\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f9b292a943fef4cfc379219564cec5fed1a58d7", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/7f9b292a943fef4cfc379219564cec5fed1a58d7", "committedDate": "2020-10-23T11:14:33Z", "message": "Add process for C_Doc_Outbound_Log\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b354128c885bdc675daa7c9421815c637eedc93", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0b354128c885bdc675daa7c9421815c637eedc93", "committedDate": "2020-10-23T11:15:26Z", "message": "Add migration 2\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b558f78bb0293bb24d457ed8dad3f8e5454d0f3c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b558f78bb0293bb24d457ed8dad3f8e5454d0f3c", "committedDate": "2020-10-23T11:24:11Z", "message": "Fixes\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "952ae03a98eefdb2f889c730f0bf44fe51875382", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/952ae03a98eefdb2f889c730f0bf44fe51875382", "committedDate": "2020-10-24T08:39:24Z", "message": "Fixe desadv interceptor breaking \"isProcessed\"\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0586de372adbe2f2645c90e691df154c5a8271dd", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0586de372adbe2f2645c90e691df154c5a8271dd", "committedDate": "2020-10-24T09:05:52Z", "message": "Fixe retrieveById bug\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6da78fc1a23058bbea813099ea7a2c5e66b1f8d0", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6da78fc1a23058bbea813099ea7a2c5e66b1f8d0", "committedDate": "2020-10-24T12:45:00Z", "message": "Update process TRLs\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f090456a8e833e085110404633c757f5a7e132c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0f090456a8e833e085110404633c757f5a7e132c", "committedDate": "2020-10-24T13:21:02Z", "message": "Final cleanup before review\n\nhttps://github.com/metasfresh/metasfresh/issues/10143"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDc4MDcx", "url": "https://github.com/metasfresh/metasfresh/pull/10152#pullrequestreview-516478071", "createdAt": "2020-10-26T05:36:27Z", "commit": {"oid": "0f090456a8e833e085110404633c757f5a7e132c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNTozNjoyN1rOHoBZDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNTozODoyN1rOHoBavg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcyNzg4Ng==", "bodyText": "ArchiveId shall not be used for C_Doc_OutBound_Log_ID.\n(note that we have a dedicated AD_Archive table that is also referenced by C_Doc_Outbound_Log_Line)", "url": "https://github.com/metasfresh/metasfresh/pull/10152#discussion_r511727886", "createdAt": "2020-10-26T05:36:27Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/edi_desadv/ChangeEDI_ExportStatus_C_Doc_Outbound_Log_GridView.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.edi_desadv;\n+\n+import com.google.common.collect.ImmutableSet;\n+import de.metas.edi.api.EDIDocOutBoundLogService;\n+import de.metas.edi.api.EDIExportStatus;\n+import de.metas.edi.model.I_C_Doc_Outbound_Log;\n+import de.metas.esb.edi.model.I_EDI_Desadv;\n+import de.metas.process.IProcessDefaultParameter;\n+import de.metas.process.IProcessDefaultParametersProvider;\n+import de.metas.process.IProcessPrecondition;\n+import de.metas.process.Param;\n+import de.metas.process.ProcessPreconditionsResolution;\n+import de.metas.ui.web.process.adprocess.ViewBasedProcessTemplate;\n+import de.metas.ui.web.process.descriptor.ProcessParamLookupValuesProvider;\n+import de.metas.ui.web.window.datatypes.DocumentIdsSelection;\n+import de.metas.ui.web.window.datatypes.LookupValuesList;\n+import de.metas.ui.web.window.descriptor.DocumentLayoutElementFieldDescriptor.LookupSource;\n+import de.metas.ui.web.window.model.lookup.LookupDataSourceContext;\n+import org.adempiere.archive.ArchiveId;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+\n+public class ChangeEDI_ExportStatus_C_Doc_Outbound_Log_GridView\n+\t\textends ViewBasedProcessTemplate\n+\t\timplements IProcessPrecondition, IProcessDefaultParametersProvider\n+{\n+\tprivate final EDIDocOutBoundLogService ediDocOutBoundLogService = SpringContextHolder.instance.getBean(EDIDocOutBoundLogService.class);\n+\n+\tprotected static final String PARAM_TargetExportStatus = I_EDI_Desadv.COLUMNNAME_EDI_ExportStatus;\n+\t@Param(parameterName = PARAM_TargetExportStatus)\n+\tprivate String p_TargetExportStatus;\n+\n+\t@Override\n+\tpublic ProcessPreconditionsResolution checkPreconditionsApplicable()\n+\t{\n+\t\tfinal ImmutableSet<ArchiveId> docOutboundLogIds = getSelectedDocOutboundLogIds();\n+\t\tif (docOutboundLogIds.isEmpty())\n+\t\t{\n+\t\t\treturn ProcessPreconditionsResolution.rejectBecauseNoSelection();\n+\t\t}\n+\n+\t\t// technical detail: all records must have the same Export Status\n+\t\tEDIExportStatus sameExportStatus = null;\n+\n+\t\tfor (final ArchiveId logId : docOutboundLogIds)\n+\t\t{\n+\t\t\tfinal I_C_Doc_Outbound_Log docOutboundLog = ediDocOutBoundLogService.retreiveById(logId);\n+\n+\t\t\tif (!ChangeEDI_ExportStatusHelper.checkIsInvoiceAndEDI(docOutboundLog))\n+\t\t\t{\n+\t\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"Selected record is not an EDI Invoice: \" + docOutboundLog);\n+\t\t\t}\n+\t\t\tfinal EDIExportStatus fromExportStatus = EDIExportStatus.ofNullableCode(docOutboundLog.getEDI_ExportStatus());\n+\t\t\tif (fromExportStatus == null)\n+\t\t\t{\n+\t\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"Selected record is not an EDI Invoice: \" + docOutboundLog);\n+\t\t\t}\n+\n+\t\t\tif (ChangeEDI_ExportStatusHelper.getAvailableTargetExportStatuses(fromExportStatus).isEmpty())\n+\t\t\t{\n+\t\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"Cannot change ExportStatus from the current one: \" + fromExportStatus);\n+\t\t\t}\n+\n+\t\t\tif (sameExportStatus == null)\n+\t\t\t{\n+\t\t\t\tsameExportStatus = fromExportStatus;\n+\t\t\t}\n+\n+\t\t\tif (!sameExportStatus.equals(fromExportStatus))\n+\t\t\t{\n+\t\t\t\treturn ProcessPreconditionsResolution.rejectWithInternalReason(\"All records must have the same EDI ExportStatus\");\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn ProcessPreconditionsResolution.accept();\n+\t}\n+\n+\t@ProcessParamLookupValuesProvider(parameterName = PARAM_TargetExportStatus, numericKey = false, lookupSource = LookupSource.list)\n+\tprivate LookupValuesList getTargetExportStatusLookupValues(final LookupDataSourceContext context)\n+\t{\n+\t\tfinal I_C_Doc_Outbound_Log docOutboundLog = ediDocOutBoundLogService.retreiveById(getSelectedDocOutboundLogIds().iterator().next());\n+\n+\t\tfinal EDIExportStatus fromExportStatus = EDIExportStatus.ofCode(docOutboundLog.getEDI_ExportStatus());\n+\n+\t\treturn ChangeEDI_ExportStatusHelper.computeTargetExportStatusLookupValues(fromExportStatus);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Object getParameterDefaultValue(final IProcessDefaultParameter parameter)\n+\t{\n+\t\tfinal I_C_Doc_Outbound_Log docOutboundLog = ediDocOutBoundLogService.retreiveById(getSelectedDocOutboundLogIds().iterator().next());\n+\n+\t\tfinal EDIExportStatus fromExportStatus = EDIExportStatus.ofCode(docOutboundLog.getEDI_ExportStatus());\n+\n+\t\treturn ChangeEDI_ExportStatusHelper.computeParameterDefaultValue(fromExportStatus);\n+\t}\n+\n+\t@Override\n+\tprotected String doIt() throws Exception\n+\t{\n+\t\tfinal EDIExportStatus targetExportStatus = EDIExportStatus.ofCode(p_TargetExportStatus);\n+\n+\t\tfor (final ArchiveId logId : getSelectedDocOutboundLogIds())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f090456a8e833e085110404633c757f5a7e132c"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcyODMxOA==", "bodyText": "in theory you could check for C_Invoice.IsEdiEnabled..but that's an extra load..\nor you could check for edi-export-status to be not null..but you already do that in the process anyways..", "url": "https://github.com/metasfresh/metasfresh/pull/10152#discussion_r511728318", "createdAt": "2020-10-26T05:38:27Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/edi_desadv/ChangeEDI_ExportStatusHelper.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.edi_desadv;\n+\n+import com.google.common.collect.ImmutableList;\n+import de.metas.edi.api.EDIDesadvId;\n+import de.metas.edi.api.EDIDocOutBoundLogService;\n+import de.metas.edi.api.EDIExportStatus;\n+import de.metas.edi.api.IDesadvDAO;\n+import de.metas.edi.model.I_C_Doc_Outbound_Log;\n+import de.metas.edi.model.I_C_Invoice;\n+import de.metas.esb.edi.model.I_EDI_Desadv;\n+import de.metas.invoice.InvoiceId;\n+import de.metas.invoice.service.IInvoiceDAO;\n+import de.metas.process.IProcessDefaultParametersProvider;\n+import de.metas.ui.web.window.datatypes.LookupValue;\n+import de.metas.ui.web.window.datatypes.LookupValuesList;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import lombok.experimental.UtilityClass;\n+import org.adempiere.ad.service.IADReferenceDAO;\n+import org.adempiere.archive.ArchiveId;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.util.lang.impl.TableRecordReference;\n+import org.compiere.SpringContextHolder;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+@UtilityClass\n+public class ChangeEDI_ExportStatusHelper\n+{\n+\tprivate final IDesadvDAO desadvDAO = Services.get(IDesadvDAO.class);\n+\tprivate final IADReferenceDAO adReferenceDAO = Services.get(IADReferenceDAO.class);\n+\tprivate final IInvoiceDAO invoiceDAO = Services.get(IInvoiceDAO.class);\n+\tprivate final EDIDocOutBoundLogService ediDocOutBoundLogService = SpringContextHolder.instance.getBean(EDIDocOutBoundLogService.class);\n+\n+\t@NonNull\n+\tpublic List<EDIExportStatus> getAvailableTargetExportStatuses(@NonNull final EDIExportStatus fromStatus)\n+\t{\n+\t\tswitch (fromStatus)\n+\t\t{\n+\t\t\tcase DontSend:\n+\t\t\t\treturn ImmutableList.of(EDIExportStatus.Pending);\n+\t\t\tcase Pending:\n+\t\t\t\treturn ImmutableList.of(EDIExportStatus.DontSend);\n+\t\t\tcase Sent:\n+\t\t\t\treturn ImmutableList.of(EDIExportStatus.Pending, EDIExportStatus.DontSend);\n+\t\t\tdefault:\n+\t\t\t\treturn ImmutableList.of();\n+\t\t}\n+\t}\n+\n+\tpublic boolean computeIsProcessedByTargetExportStatus(@NonNull final EDIExportStatus targetExportStatus)\n+\t{\n+\t\tswitch (targetExportStatus)\n+\t\t{\n+\t\t\tcase DontSend:\n+\t\t\t\treturn true;\n+\t\t\tcase Pending:\n+\t\t\t\treturn false;\n+\t\t\tdefault:\n+\t\t\t\tthrow new AdempiereException(\"Cannot change Export Status to: \" + targetExportStatus);\n+\t\t}\n+\t}\n+\n+\tpublic void EDI_DesadvDoIt(@NonNull final EDIDesadvId desadvId, @NonNull final EDIExportStatus targetExportStatus, final boolean isProcessed)\n+\t{\n+\t\tfinal I_EDI_Desadv edi = desadvDAO.retrieveById(desadvId);\n+\t\tedi.setEDI_ExportStatus(targetExportStatus.getCode());\n+\t\tedi.setProcessed(isProcessed);\n+\t\tdesadvDAO.save(edi);\n+\t}\n+\n+\tpublic void C_DocOutbound_LogDoIt(final EDIExportStatus targetExportStatus, final ArchiveId logId)\n+\t{\n+\t\t// technical detail: the I_C_Doc_Outbound_Log is updated when we update the C_Invoice, via interceptor: de.metas.edi.model.validator.C_Invoice.updateDocOutBoundLog\n+\t\tfinal de.metas.edi.model.I_C_Doc_Outbound_Log docOutboundLog = ediDocOutBoundLogService.retreiveById(logId);\n+\n+\t\tfinal TableRecordReference invoiceRecordReference = TableRecordReference.ofReferenced(docOutboundLog);\n+\n+\t\tfinal InvoiceId invoiceId = InvoiceId.ofRepoId(invoiceRecordReference.getRecord_ID());\n+\n+\t\tChangeEDI_ExportStatusHelper.C_InvoiceDoIt(invoiceId, targetExportStatus);\n+\n+\t\tdocOutboundLog.setEDI_ExportStatus(targetExportStatus.getCode());\n+\t\tediDocOutBoundLogService.save(docOutboundLog);\n+\t}\n+\n+\tpublic void C_InvoiceDoIt(final InvoiceId invoiceId, final EDIExportStatus targetExportStatus)\n+\t{\n+\t\tfinal de.metas.edi.model.I_C_Invoice invoice = ediDocOutBoundLogService.retreiveById(invoiceId);\n+\t\tinvoice.setEDI_ExportStatus(targetExportStatus.getCode());\n+\t\tinvoiceDAO.save(invoice);\n+\t}\n+\n+\t@NonNull\n+\tpublic LookupValuesList computeTargetExportStatusLookupValues(final EDIExportStatus fromExportStatus)\n+\t{\n+\t\tfinal List<EDIExportStatus> availableTargetStatuses = ChangeEDI_ExportStatusHelper.getAvailableTargetExportStatuses(fromExportStatus);\n+\n+\t\treturn availableTargetStatuses.stream()\n+\t\t\t\t.map(s -> LookupValue.StringLookupValue.of(s.getCode(), adReferenceDAO.retrieveListNameTranslatableString(EDIExportStatus.AD_Reference_ID, s.getCode())))\n+\t\t\t\t.collect(LookupValuesList.collect());\n+\t}\n+\n+\t@Nullable\n+\tpublic Object computeParameterDefaultValue(final EDIExportStatus fromExportStatus)\n+\t{\n+\t\tfinal List<EDIExportStatus> availableTargetStatuses = ChangeEDI_ExportStatusHelper.getAvailableTargetExportStatuses(fromExportStatus);\n+\t\tif (!availableTargetStatuses.isEmpty())\n+\t\t{\n+\t\t\tfinal String code = availableTargetStatuses.get(0).getCode();\n+\t\t\treturn LookupValue.StringLookupValue.of(code, adReferenceDAO.retrieveListNameTranslatableString(EDIExportStatus.AD_Reference_ID, code));\n+\t\t}\n+\t\treturn IProcessDefaultParametersProvider.DEFAULT_VALUE_NOTAVAILABLE;\n+\t}\n+\n+\t/**\n+\t * TODO tbp: how to check if this docOutboundLog is for edi or not?\n+\t * docOutboundLog.isEdiEnabled() is a virtual column!\n+\t * in swing this is checked by \"\"\"(select bp.IsEdiInvoicRecipient from C_BPartner bp where bp.C_BPartner_ID=C_Doc_Outbound_Log.C_BPartner_ID)\"\"\"\n+\t * do i need to check for if the AD_Table is C_Invoice as well?\n+\t * help maybe?\n+\t */\n+\tpublic boolean checkIsInvoiceAndEDI(final I_C_Doc_Outbound_Log docOutboundLog)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f090456a8e833e085110404633c757f5a7e132c"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93e6277040d650d51ee195aa0aa624159b47e7d3", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/93e6277040d650d51ee195aa0aa624159b47e7d3", "committedDate": "2020-10-26T06:51:17Z", "message": "Update the checks if `C_Doc_Outbound_Log` is for C_Invoice\n\nhttps://github.com/metasfresh/metasfresh/issues/10143\nSigned-off-by: TheBestPessimist <cristian@tbp.land>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b68f46d1608033b34a25081f90c518181e51f697", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b68f46d1608033b34a25081f90c518181e51f697", "committedDate": "2020-10-26T06:56:48Z", "message": "Add class `DocOutboundLogId`\n\nhttps://github.com/metasfresh/metasfresh/issues/10143\nSigned-off-by: TheBestPessimist <cristian@tbp.land>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b6aa714adfbc6beee3e11f595026e63cbf793c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/20b6aa714adfbc6beee3e11f595026e63cbf793c", "committedDate": "2020-10-26T07:18:21Z", "message": "Maybe bugfix?\n\nhttps://github.com/metasfresh/metasfresh/issues/10143\nSigned-off-by: TheBestPessimist <cristian@tbp.land>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NjgxMDQ3", "url": "https://github.com/metasfresh/metasfresh/pull/10152#pullrequestreview-516681047", "createdAt": "2020-10-26T11:22:29Z", "commit": {"oid": "20b6aa714adfbc6beee3e11f595026e63cbf793c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3117, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}