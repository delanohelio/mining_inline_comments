{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMzI0NjYz", "number": 6943, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzoyNzoxOFrOEKxyEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzoyNzoxOFrOEKxyEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzM2ODUxOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/views/RV_fresh_PriceList_Comparison.sql", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzoyNzoxOFrOGsAqdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzoyNzoxOFrOGsAqdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgwMTM5Nw==", "bodyText": "why not use '#,##0.000000000000' instead?", "url": "https://github.com/metasfresh/metasfresh/pull/6943#discussion_r448801397", "createdAt": "2020-07-02T07:27:18Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.fresh/de.metas.fresh.base/src/main/sql/postgresql/ddl/views/RV_fresh_PriceList_Comparison.sql", "diffHunk": "@@ -14,35 +14,43 @@ SELECT pp.AD_Org_ID,\n        pp.IsActive,\n \n        -- Displayed pricelist data\n-       pc.Name                                                                    AS ProductCategory,\n-       pc.value                                                                   AS ProductCategoryValue,\n+       pc.Name                                                                          AS ProductCategory,\n+       pc.value                                                                         AS ProductCategoryValue,\n        p.M_Product_ID,\n        p.Value,\n-       p.Name                                                                     AS ProductName,\n+       p.Name                                                                           AS ProductName,\n        pp.IsSeasonFixedPrice,\n-       hupip.Name                                                                 AS ItemProductName,\n-       pm.Name                                                                    AS PackingMaterialName,\n-       ROUND(COALESCE(ppa.PriceStd, pp.PriceStd), coalesce(pl.priceprecision, 2)) AS PriceStd,\n-       ROUND(pp2.PriceStd, coalesce(pl2.priceprecision, 2))                       AS AltPriceStd,\n-       CASE WHEN pp2.PriceStd IS NULL THEN 0 ELSE 1 END                           AS hasaltprice,\n+       hupip.Name                                                                       AS ItemProductName,\n+       pm.Name                                                                          AS PackingMaterialName,\n+       COALESCE(ppa.PriceStd, pp.PriceStd)                                              AS PriceStd,\n+       CASE\n+           WHEN pl.priceprecision = 0\n+               THEN '#,##0'\n+           ELSE Substring('#,##0.000' FROM 0 FOR 7 + pl.priceprecision :: integer) END  AS PricePattern1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "825aced06999043e9a1cfa258401656676af392b"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1406, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}