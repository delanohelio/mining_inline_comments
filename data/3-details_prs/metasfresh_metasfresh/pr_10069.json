{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTY3NTAz", "number": 10069, "title": "attribute matching fix", "bodyText": "refs: #10068", "createdAt": "2020-10-06T13:57:44Z", "url": "https://github.com/metasfresh/metasfresh/pull/10069", "merged": true, "mergeCommit": {"oid": "3f3a1a2221e494f5a2c44c29c3af6afa21af8823"}, "closed": true, "closedAt": "2020-10-07T07:11:49Z", "author": {"login": "pvpurcarcosmin"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP4yDJgH2gAyNDk4NTY3NTAzOjhkYTBmYzIzOGZhOTYzNGUzMmZhMTUyZTk0Y2U4ZjFlODYyNjFkOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP6Bk_gH2gAyNDk4NTY3NTAzOjAzYjI1ZGY0NTQxOTMwNDE3ZTNhMWZkYTU1MmE1ZWY5ZWJhODA0NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8da0fc238fa9634e32fa152e94ce8f1e86261d96", "author": {"user": {"login": "pvpurcarcosmin", "name": null}}, "url": "https://github.com/metasfresh/metasfresh/commit/8da0fc238fa9634e32fa152e94ce8f1e86261d96", "committedDate": "2020-10-06T13:55:27Z", "message": "attribute matching fix\nrefs: https://github.com/metasfresh/metasfresh/issues/10068"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDg0MzQ4", "url": "https://github.com/metasfresh/metasfresh/pull/10069#pullrequestreview-503084348", "createdAt": "2020-10-06T15:21:23Z", "commit": {"oid": "8da0fc238fa9634e32fa152e94ce8f1e86261d96"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNToyMToyM1rOHdM_ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNToyMToyM1rOHdM_ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM4MzYxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));\n          \n          \n            \n            \t\t// note that we might select more quantities than we actually wanted (bc of the way we match attributes in the query using LIKE)\n          \n          \n            \n            \t\t// for that reason, we need to be lenient in case not all quantities can be added to a bucked\n          \n          \n            \n            \t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));", "url": "https://github.com/metasfresh/metasfresh/pull/10069#discussion_r500383611", "createdAt": "2020-10-06T15:21:23Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.material/dispo-commons/src/main/java/de/metas/material/dispo/commons/repository/atp/AvailableToPromiseResultBuilder.java", "diffHunk": "@@ -105,24 +103,7 @@ public AvailableToPromiseResult build()\n \n \tpublic void addQtyToAllMatchingGroups(@NonNull final AddToResultGroupRequest request)\n \t{\n-\t\tboolean addedToAtLeastOneGroup = false;\n-\t\tfor (final AvailableToPromiseResultBucket bucket : buckets)\n-\t\t{\n-\t\t\tif (bucket.addQtyToAllMatchingGroups(request))\n-\t\t\t{\n-\t\t\t\taddedToAtLeastOneGroup = true;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (!addedToAtLeastOneGroup)\n-\t\t{\n-\t\t\tthrow new AdempiereException(\"No matching group found for AddToResultGroupRequest\")\n-\t\t\t\t\t.appendParametersToMessage()\n-\t\t\t\t\t.setParameter(\"request\", request)\n-\t\t\t\t\t.setParameter(\"buckets\", buckets)\n-\t\t\t\t\t.setParameter(\"this\", this);\n-\t\t}\n-\n+\t\tbuckets.forEach(bucket -> bucket.addQtyToAllMatchingGroups(request));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da0fc238fa9634e32fa152e94ce8f1e86261d96"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03b25df4541930417e3a1fda552a5ef9eba80443", "author": {"user": {"login": "metas-ts", "name": "Tobias Sch\u00f6neberg"}}, "url": "https://github.com/metasfresh/metasfresh/commit/03b25df4541930417e3a1fda552a5ef9eba80443", "committedDate": "2020-10-06T15:22:19Z", "message": "Update backend/de.metas.material/dispo-commons/src/main/java/de/metas/material/dispo/commons/repository/atp/AvailableToPromiseResultBuilder.java\r\n\r\n#10068"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3094, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}