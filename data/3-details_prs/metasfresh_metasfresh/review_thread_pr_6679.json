{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzcxNTMy", "number": 6679, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1OToyMFrOD9U0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxNToxMFrOD9drkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjMwOTIxOnYy", "diffSide": "RIGHT", "path": "frontend/src/actions/TableActions.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1OToyMFrOGWwHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjoxMDowNFrOGW0Rqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMDE5Nw==", "bodyText": "So the idea behind the action creators for tables was that they will just accept an ID and we won't have to deal with that in the reducer. So please align this with the already existing ACs.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426510197", "createdAt": "2020-05-18T09:59:20Z", "author": {"login": "siemiatj"}, "path": "frontend/src/actions/TableActions.js", "diffHunk": "@@ -192,3 +192,13 @@ export function updateTabTable(tableId, tableResponse) {\n     }\n   };\n }\n+\n+/**\n+ * Update table selection - select items\n+ */\n+export function updateTableSelection({ windowId, viewId, ids }) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU3ODM0Nw==", "bodyText": "Ok set tableId only", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426578347", "createdAt": "2020-05-18T12:10:04Z", "author": {"login": "petrican"}, "path": "frontend/src/actions/TableActions.js", "diffHunk": "@@ -192,3 +192,13 @@ export function updateTabTable(tableId, tableResponse) {\n     }\n   };\n }\n+\n+/**\n+ * Update table selection - select items\n+ */\n+export function updateTableSelection({ windowId, viewId, ids }) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMDE5Nw=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjMxNDk1OnYy", "diffSide": "RIGHT", "path": "frontend/src/components/app/QuickActions.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMDo1M1rOGWwK-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxMDoxOVrOGW7k5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMTA5OA==", "bodyText": "Maybe we sholud just set parentView to null if it doesn't exist ? We won't have to make those computation-heavy checks here.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426511098", "createdAt": "2020-05-18T10:00:53Z", "author": {"login": "siemiatj"}, "path": "frontend/src/components/app/QuickActions.js", "diffHunk": "@@ -249,7 +249,11 @@ export class QuickActions extends Component {\n             const relatedActions =\n               resp && resp.data ? respRel.data.actions : null;\n \n-            if ((parentView.viewId || childView.viewId) && relatedActions) {\n+            if (\n+              (parentView.viewId || childView.viewId) &&\n+              relatedActions &&\n+              !_.isEmpty(parentView)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4OTQ5Nw==", "bodyText": "agree", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426689497", "createdAt": "2020-05-18T14:58:41Z", "author": {"login": "teosarca"}, "path": "frontend/src/components/app/QuickActions.js", "diffHunk": "@@ -249,7 +249,11 @@ export class QuickActions extends Component {\n             const relatedActions =\n               resp && resp.data ? respRel.data.actions : null;\n \n-            if ((parentView.viewId || childView.viewId) && relatedActions) {\n+            if (\n+              (parentView.viewId || childView.viewId) &&\n+              relatedActions &&\n+              !_.isEmpty(parentView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMTA5OA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5Nzk1OQ==", "bodyText": "Already explained to @siemiatj why that check is needed. Along with the <Table component refactoring which follows to be done this is most probably going to be gone.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426697959", "createdAt": "2020-05-18T15:10:19Z", "author": {"login": "petrican"}, "path": "frontend/src/components/app/QuickActions.js", "diffHunk": "@@ -249,7 +249,11 @@ export class QuickActions extends Component {\n             const relatedActions =\n               resp && resp.data ? respRel.data.actions : null;\n \n-            if ((parentView.viewId || childView.viewId) && relatedActions) {\n+            if (\n+              (parentView.viewId || childView.viewId) &&\n+              relatedActions &&\n+              !_.isEmpty(parentView)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMTA5OA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjMyMTI3OnYy", "diffSide": "RIGHT", "path": "frontend/src/components/table/Table.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMjozNVrOGWwPAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTowMDozNlrOGW7JfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMjEyOA==", "bodyText": "if rows is an array (and same for selected) why can't we just check the length property ?", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426512128", "createdAt": "2020-05-18T10:02:35Z", "author": {"login": "siemiatj"}, "path": "frontend/src/components/table/Table.js", "diffHunk": "@@ -90,6 +92,25 @@ class Table extends Component {\n       page,\n     } = this.props;\n     const { selected, rows } = this.state;\n+\n+    /**\n+     * Selection by default of first row if nothing selected\n+     */\n+    if (\n+      (_.isEmpty(defaultSelected) || _.isEmpty(selected)) &&\n+      !_.isEmpty(rows)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5MDk0MQ==", "bodyText": "agree. data shall be correct and valid from the beginning.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426690941", "createdAt": "2020-05-18T15:00:36Z", "author": {"login": "teosarca"}, "path": "frontend/src/components/table/Table.js", "diffHunk": "@@ -90,6 +92,25 @@ class Table extends Component {\n       page,\n     } = this.props;\n     const { selected, rows } = this.state;\n+\n+    /**\n+     * Selection by default of first row if nothing selected\n+     */\n+    if (\n+      (_.isEmpty(defaultSelected) || _.isEmpty(selected)) &&\n+      !_.isEmpty(rows)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMjEyOA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjMyNDk2OnYy", "diffSide": "RIGHT", "path": "frontend/src/constants/ActionTypes.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowMzozNFrOGWwRWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTo0NzoxMVrOGWzjbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMjczMA==", "bodyText": "I think this can be moved to TableTypes", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426512730", "createdAt": "2020-05-18T10:03:34Z", "author": {"login": "siemiatj"}, "path": "frontend/src/constants/ActionTypes.js", "diffHunk": "@@ -616,3 +616,9 @@ export const UPDATE_TAB_ROWS_DATA = 'UPDATE_TAB_ROWS_DATA';\n  * @type {string} set languages in the app handler\n  */\n export const SET_LANGUAGES = 'SET_LANGUAGES';\n+\n+/**\n+ * @constant\n+ * @type {string} update table selection\n+ */\n+export const UPDATE_TABLE_SELECTION = 'UPDATE_TABLE_SELECTION';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU2NjUxMQ==", "bodyText": "Ok. Will move it", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426566511", "createdAt": "2020-05-18T11:47:11Z", "author": {"login": "petrican"}, "path": "frontend/src/constants/ActionTypes.js", "diffHunk": "@@ -616,3 +616,9 @@ export const UPDATE_TAB_ROWS_DATA = 'UPDATE_TAB_ROWS_DATA';\n  * @type {string} set languages in the app handler\n  */\n export const SET_LANGUAGES = 'SET_LANGUAGES';\n+\n+/**\n+ * @constant\n+ * @type {string} update table selection\n+ */\n+export const UPDATE_TABLE_SELECTION = 'UPDATE_TABLE_SELECTION';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxMjczMA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjMzNjYyOnYy", "diffSide": "RIGHT", "path": "frontend/src/reducers/tables.js", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDowNjo1NVrOGWwYsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDo1ODowNVrOGXP3gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNDYwOA==", "bodyText": "draftState is already a copy of the object so it's easier to just set the selected property (like for activeState) , since we're not merging anything but setting it fresh.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426514608", "createdAt": "2020-05-18T10:06:55Z", "author": {"login": "siemiatj"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -107,6 +107,17 @@ const reducer = produce((draftState, action) => {\n       return;\n     }\n \n+    case types.UPDATE_TABLE_SELECTION: {\n+      const { windowId, viewId, selection } = action.payload;\n+      const tableId = getTableId({ windowType: windowId, viewId });\n+      draftState[tableId] = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5MTMxNw==", "bodyText": "You mean like draftState[tableId].selected = selection;\nbut that doesn't work. I get undefined for the draftState[tableId]", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426591317", "createdAt": "2020-05-18T12:33:49Z", "author": {"login": "petrican"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -107,6 +107,17 @@ const reducer = produce((draftState, action) => {\n       return;\n     }\n \n+    case types.UPDATE_TABLE_SELECTION: {\n+      const { windowId, viewId, selection } = action.payload;\n+      const tableId = getTableId({ windowType: windowId, viewId });\n+      draftState[tableId] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNDYwOA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5NjM1NA==", "bodyText": "agree", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426696354", "createdAt": "2020-05-18T15:08:02Z", "author": {"login": "teosarca"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -107,6 +107,17 @@ const reducer = produce((draftState, action) => {\n       return;\n     }\n \n+    case types.UPDATE_TABLE_SELECTION: {\n+      const { windowId, viewId, selection } = action.payload;\n+      const tableId = getTableId({ windowType: windowId, viewId });\n+      draftState[tableId] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNDYwOA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NTkxMA==", "bodyText": "@petrican  any idea why?", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426755910", "createdAt": "2020-05-18T16:36:30Z", "author": {"login": "teosarca"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -107,6 +107,17 @@ const reducer = produce((draftState, action) => {\n       return;\n     }\n \n+    case types.UPDATE_TABLE_SELECTION: {\n+      const { windowId, viewId, selection } = action.payload;\n+      const tableId = getTableId({ windowType: windowId, viewId });\n+      draftState[tableId] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNDYwOA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMDQwMA==", "bodyText": "Yes. Setting the selection before the creation of the table data. This happens in the Table component. This I'm sure will be fixed along with the refactoring but as a precaution I will add a TODO in here also.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r427030400", "createdAt": "2020-05-19T04:58:05Z", "author": {"login": "petrican"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -107,6 +107,17 @@ const reducer = produce((draftState, action) => {\n       return;\n     }\n \n+    case types.UPDATE_TABLE_SELECTION: {\n+      const { windowId, viewId, selection } = action.payload;\n+      const tableId = getTableId({ windowType: windowId, viewId });\n+      draftState[tableId] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNDYwOA=="}, "originalCommit": {"oid": "3154ba5ed31494326ea4c4551f91ee85a12a137a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzY1ODgzOnYy", "diffSide": "RIGHT", "path": "frontend/src/components/table/TableItem.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTo1MTo1MFrOGW9Veg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDo0MjowM1rOGXPnhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyNjc3OA==", "bodyText": "this should be fixed when we refactor TableItem.\nWe cannot allow having a prop which is sometimes bool and sometimes string.\nPlease add a FIXME/TODO marker to be handled later and not forget.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426726778", "createdAt": "2020-05-18T15:51:50Z", "author": {"login": "teosarca"}, "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -715,7 +715,7 @@ TableItem.propTypes = {\n   tabIndex: PropTypes.number,\n   entity: PropTypes.string,\n   getSizeClass: PropTypes.func,\n-  colspan: PropTypes.string,\n+  colspan: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyNjMwOA==", "bodyText": "ok. thanks", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r427026308", "createdAt": "2020-05-19T04:42:03Z", "author": {"login": "petrican"}, "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -715,7 +715,7 @@ TableItem.propTypes = {\n   tabIndex: PropTypes.number,\n   entity: PropTypes.string,\n   getSizeClass: PropTypes.func,\n-  colspan: PropTypes.string,\n+  colspan: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyNjc3OA=="}, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzc1MzIwOnYy", "diffSide": "RIGHT", "path": "frontend/src/reducers/tables.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxMzoyNlrOGW-P9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDozOTo0M1rOGXPlZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MTc1MA==", "bodyText": "@siemiatj  @petrican  IMHO this shall be called initialTableState", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426741750", "createdAt": "2020-05-18T16:13:26Z", "author": {"login": "teosarca"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -3,6 +3,7 @@ import { get } from 'lodash';\n import { createSelector } from 'reselect';\n \n import * as types from '../constants/ActionTypes';\n+import { UPDATE_TABLE_SELECTION } from '../constants/actions/TableTypes';\n \n export const tableState = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyNTc2Nw==", "bodyText": "Ok. Renaming it.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r427025767", "createdAt": "2020-05-19T04:39:43Z", "author": {"login": "petrican"}, "path": "frontend/src/reducers/tables.js", "diffHunk": "@@ -3,6 +3,7 @@ import { get } from 'lodash';\n import { createSelector } from 'reselect';\n \n import * as types from '../constants/ActionTypes';\n+import { UPDATE_TABLE_SELECTION } from '../constants/actions/TableTypes';\n \n export const tableState = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MTc1MA=="}, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzc2MDE2OnYy", "diffSide": "RIGHT", "path": "frontend/src/components/table/Table.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoxNToxMFrOGW-UfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoyODowNFrOGXTQbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjkwOQ==", "bodyText": "why do we have selectTableItems along with updateTableSelection?", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426742909", "createdAt": "2020-05-18T16:15:10Z", "author": {"login": "teosarca"}, "path": "frontend/src/components/table/Table.js", "diffHunk": "@@ -375,6 +409,12 @@ class Table extends Component {\n       const { selected } = this.state;\n \n       if (tabInfo) {\n+        dispatch(\n+          updateTableSelection({\n+            tableId: getTableId({ windowType: windowId, viewId }),\n+            ids: selected,\n+          })\n+        );\n         dispatch(\n           selectTableItems({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNjA1Ng==", "bodyText": "We're adding the new way of handling selections to work alongside the previous solution. This way we don't introduce breaking changes and can potentially roll it out anytime, and the old code will be removed completely with metasfresh/me03#4539", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r426936056", "createdAt": "2020-05-18T22:56:47Z", "author": {"login": "siemiatj"}, "path": "frontend/src/components/table/Table.js", "diffHunk": "@@ -375,6 +409,12 @@ class Table extends Component {\n       const { selected } = this.state;\n \n       if (tabInfo) {\n+        dispatch(\n+          updateTableSelection({\n+            tableId: getTableId({ windowType: windowId, viewId }),\n+            ids: selected,\n+          })\n+        );\n         dispatch(\n           selectTableItems({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjkwOQ=="}, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4NTkzNA==", "bodyText": "@siemiatj  @petrican  Ok, then I would suggest adding a TODO/FIXME which mentions that will be deleted on .\nIn this way we make sure we won't forget about it and it's also transparent for reviewer what's the intention.", "url": "https://github.com/metasfresh/metasfresh/pull/6679#discussion_r427085934", "createdAt": "2020-05-19T07:28:04Z", "author": {"login": "teosarca"}, "path": "frontend/src/components/table/Table.js", "diffHunk": "@@ -375,6 +409,12 @@ class Table extends Component {\n       const { selected } = this.state;\n \n       if (tabInfo) {\n+        dispatch(\n+          updateTableSelection({\n+            tableId: getTableId({ windowType: windowId, viewId }),\n+            ids: selected,\n+          })\n+        );\n         dispatch(\n           selectTableItems({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjkwOQ=="}, "originalCommit": {"oid": "62af334b703ffbc3b7cfb13e42322b272eae004c"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}