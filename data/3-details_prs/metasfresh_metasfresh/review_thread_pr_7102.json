{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMjkyNTI1", "number": 7102, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoxNDozNVrOEVYv_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMDoxN1rOEVY3fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODYxMDU1OnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoxNDozNVrOG8G_5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyNToxOFrOG8HV3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MjQwNw==", "bodyText": "why not moving this class to PickingSlotViewFactory and make it private?", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465682407", "createdAt": "2020-08-05T12:14:35Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java", "diffHunk": "@@ -71,4 +75,18 @@ private PickingSlotRepoQuery(\n \t\tthis.onlyNotClosedOrNotRackSystem = onlyNotClosedOrNotRackSystem != null ? onlyNotClosedOrNotRackSystem : true;\n \t\tthis.pickingSlotBarcode = pickingSlotBarcode;\n \t}\n+\n+\t@Value\n+\t@Builder\n+\tpublic static class CreatePickingSlotRepoQueryReq", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d7a35dcdda278ed34f422b625a3e556127452eb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4ODAzMQ==", "bodyText": "yeah, sure, why not", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465688031", "createdAt": "2020-08-05T12:25:18Z", "author": {"login": "pvpurcarcosmin"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotRepoQuery.java", "diffHunk": "@@ -71,4 +75,18 @@ private PickingSlotRepoQuery(\n \t\tthis.onlyNotClosedOrNotRackSystem = onlyNotClosedOrNotRackSystem != null ? onlyNotClosedOrNotRackSystem : true;\n \t\tthis.pickingSlotBarcode = pickingSlotBarcode;\n \t}\n+\n+\t@Value\n+\t@Builder\n+\tpublic static class CreatePickingSlotRepoQueryReq", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MjQwNw=="}, "originalCommit": {"oid": "1d7a35dcdda278ed34f422b625a3e556127452eb"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODYxNzU2OnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoxNjozOVrOG8HEGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoxNjozOVrOG8HEGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4MzQ4MA==", "bodyText": "pls document why we need to invalidate its parent view too (packageable view)?", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465683480", "createdAt": "2020-08-05T12:16:39Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/PickingSlotViewsIndexStorage.java", "diffHunk": "@@ -175,14 +172,21 @@ public void closeById(@NonNull final ViewId pickingSlotViewId, @NonNull final Vi\n \t}\n \n \t@Override\n-\tpublic void invalidateView(ViewId pickingSlotViewId)\n+\tpublic void invalidateView(final ViewId pickingSlotViewId)\n \t{\n \t\tfinal PickingSlotView pickingSlotView = getOrCreatePickingSlotView(pickingSlotViewId, false/* create */);\n \t\tif (pickingSlotView == null)\n \t\t{\n \t\t\treturn;\n \t\t}\n \n+\t\tfinal PackageableView packageableView = getPackageableViewByPickingSlotViewId(pickingSlotViewId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d7a35dcdda278ed34f422b625a3e556127452eb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODYyOTcyOnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/process/WEBUI_Picking_PickQtyToExistingHU.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMDoxN1rOG8HLbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMjoyMDoxN1rOG8HLbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY4NTM1Ng==", "bodyText": "i think this error message applies only for productIds.size() != 1.\nFor the other part of the OR we need a different error message.", "url": "https://github.com/metasfresh/metasfresh/pull/7102#discussion_r465685356", "createdAt": "2020-08-05T12:20:17Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/picking/pickingslot/process/WEBUI_Picking_PickQtyToExistingHU.java", "diffHunk": "@@ -134,20 +130,24 @@ public Object getParameterDefaultValue(@NonNull final IProcessDefaultParameter p\n \tprotected void validatePickingToHU()\n \t{\n \t\tfinal PickingSlotRow pickingSlotRow = getSingleSelectedRow();\n-\n \t\tfinal I_M_HU hu = handlingUnitsBL.getById(pickingSlotRow.getHuId());\n \n-\t\tif (handlingUnitsBL.isVirtual(hu))\n+\t\tif (!handlingUnitsBL.isVirtual(hu))\n \t\t{\n-\t\t\tthrow new AdempiereException(msgBL.getTranslatableMsgText(MSG_WEBUI_PICKING_TO_EXISTING_CUS_NOT_ALLOWED));\n+\t\t\treturn;\n \t\t}\n \n-\t\tfinal OrderId orderIdOfThePickedHU = extractCorrespondingOrderId(pickingSlotRow.getHuId());\n-\t\tfinal OrderId orderIdOfTheCurrentSchedule = OrderId.ofRepoIdOrNull(getCurrentShipmentSchedule().getC_Order_ID());\n+\t\tfinal ImmutableSet<ProductId> productIds = handlingUnitsBL.getStorageFactory().streamHUProductStorages(ImmutableList.of(hu))\n+\t\t\t\t.map(IProductStorage::getProductId)\n+\t\t\t\t.collect(ImmutableSet.toImmutableSet());\n+\n+\t\tfinal I_M_ShipmentSchedule selectedShipmentSchedule = getCurrentShipmentSchedule();\n \n-\t\tif (!orderIdOfThePickedHU.equals(orderIdOfTheCurrentSchedule))\n+\t\tif (productIds.size() != 1 || !productIds.contains(ProductId.ofRepoId(selectedShipmentSchedule.getM_Product_ID())))\n \t\t{\n-\t\t\tthrow new AdempiereException(msgBL.getTranslatableMsgText(MSG_WEBUI_PICKING_TO_THE_SAME_HU_FOR_MULTIPLE_ORDERS_NOT_ALLOWED));\n+\t\t\tthrow new AdempiereException(\"VHUs cannot have multiple product storages!\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d7a35dcdda278ed34f422b625a3e556127452eb"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1356, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}