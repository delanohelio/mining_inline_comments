{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODc2NDAx", "number": 6639, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMDowNlrOD76Taw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMDoyM1rOD76Tow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTQ3ODE5OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMDowNlrOGUhocA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyNToxMVrOGUkraA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTcyOA==", "bodyText": "now i'm wondering, what about e.g. in-progress terms. i think you need to filter only for completed and closed ones", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175728", "createdAt": "2020-05-13T05:10:06Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n+\t{\n+\t\tIQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t\tfinal IQuery<I_C_Flatrate_Term> contractsFilter = queryBL.createQueryBuilder(I_C_Flatrate_Term.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNTY0MA==", "bodyText": "Right. Done.", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424225640", "createdAt": "2020-05-13T07:25:11Z", "author": {"login": "metas-rc"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n+\t{\n+\t\tIQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t\tfinal IQuery<I_C_Flatrate_Term> contractsFilter = queryBL.createQueryBuilder(I_C_Flatrate_Term.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTcyOA=="}, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTQ3ODc1OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMDoyM1rOGUhovg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzozMTowMVrOGUk4Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n          \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveIdsOfPartnerWithContracts()\n          \n      \n    \n    \n  \n\n\ninclude the \"Ids\" in the name\nin other mf places, \"All\" implies also inactive, which is not the case here", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175806", "createdAt": "2020-05-13T05:10:23Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NjY5Nw==", "bodyText": "There might be 500k bpartners; please return an iterator\n(not sure if i approved the set in a previous PR, but i think it's wrong and we have IQuery.iterateIds(...))", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424176697", "createdAt": "2020-05-13T05:13:46Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg=="}, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyODg4Nw==", "bodyText": "Agree. Making it an iterator.", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424228887", "createdAt": "2020-05-13T07:31:01Z", "author": {"login": "metas-rc"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg=="}, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1514, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}