{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTg5MTg4", "number": 6756, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozNjo1MFrOEA0utg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozNjo1MFrOEA0utg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Mjk5MzgyOnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/request/process/WEBUI_CreateRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozNjo1MFrOGcVzUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTozNjo1MFrOGcVzUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM3MDUxMg==", "bodyText": "don't blindly assume that requestWindowId is present.\nSuggestion: implement IProcessPrecondition, then check that in checkPreconditionsApplicable if the window is not available, then log a message and and use rocessPreconditionsResolution.rejectWithInternalReason(..)", "url": "https://github.com/metasfresh/metasfresh/pull/6756#discussion_r432370512", "createdAt": "2020-05-29T09:36:50Z", "author": {"login": "metas-ts"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/request/process/WEBUI_CreateRequest.java", "diffHunk": "@@ -63,76 +63,76 @@ public WEBUI_CreateRequest()\n \tprotected String doIt() throws Exception\n \t{\n \t\tfinal String tableName = getTableName();\n+\t\tfinal I_R_Request request;\n \t\tif (I_C_BPartner.Table_Name.equals(tableName))\n \t\t{\n \t\t\tfinal I_C_BPartner bPartner = bPartnerDAO.getById(getProcessInfo().getRecord_ID());\n-\t\t\tcreateRequestFromBPartner(bPartner);\n+\t\t\trequest = createRequestFromBPartner(bPartner);\n \t\t}\n \t\telse if (I_M_InOut.Table_Name.equals(tableName))\n \t\t{\n \t\t\tfinal I_M_InOut shipment = inOutDAO.getById(InOutId.ofRepoId(getProcessInfo().getRecord_ID()));\n-\t\t\tcreateRequestFromShipment(shipment);\n+\t\t\trequest = createRequestFromShipment(shipment);\n+\t\t}\n+\t\telse if (I_AD_User.Table_Name.equals(tableName))\n+\t\t{\n+\t\t\tfinal I_AD_User user = userDAO.getById(UserId.ofRepoId(getProcessInfo().getRecord_ID()));\n+\t\t\trequest = createRequestFromUser(user);\n \t\t}\n \t\telse\n \t\t{\n \t\t\tthrow new IllegalStateException(\"Not supported: \" + tableName);\n \t\t}\n+\t\tsave(request);\n+\t\tgetResult().setRecordToOpen(TableRecordReference.of(request), requestWindowId.get().getRepoId(), OpenTarget.SingleDocumentModal);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e32c61549eb68ac00e7cea9a5579bb009d09f8f1"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1448, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}