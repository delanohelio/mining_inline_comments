{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODc2NDAx", "number": 6639, "title": "#6566 refactoring and improvements", "bodyText": "#6566", "createdAt": "2020-05-12T17:48:52Z", "url": "https://github.com/metasfresh/metasfresh/pull/6639", "merged": true, "mergeCommit": {"oid": "e67d655ff94d6ba9b1073af844d6e7dd941c8605"}, "closed": true, "closedAt": "2020-05-13T08:20:39Z", "author": {"login": "metas-rc"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgnvgpgH2gAyNDE2ODc2NDAxOjQ0MDRjYmNmNjA1NTcxMzYyNzEzNDNhZmRlZDkyOWY2M2UwYTY1Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg0etgAFqTQxMDY5NDI5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4404cbcf60557136271343afded929f63e0a65cd", "committedDate": "2020-05-12T17:29:51Z", "message": "#6566 refactoring and improvements\n\nhttps://github.com/metasfresh/metasfresh/issues/6566"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTkxMTQx", "url": "https://github.com/metasfresh/metasfresh/pull/6639#pullrequestreview-410591141", "createdAt": "2020-05-13T05:10:06Z", "commit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMDowNlrOGUhocA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMzo0NlrOGUhsOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTcyOA==", "bodyText": "now i'm wondering, what about e.g. in-progress terms. i think you need to filter only for completed and closed ones", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175728", "createdAt": "2020-05-13T05:10:06Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n+\t{\n+\t\tIQueryBL queryBL = Services.get(IQueryBL.class);\n+\n+\t\tfinal IQuery<I_C_Flatrate_Term> contractsFilter = queryBL.createQueryBuilder(I_C_Flatrate_Term.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()\n          \n          \n            \n            \tpublic ImmutableSet<BPartnerId> retrieveIdsOfPartnerWithContracts()\n          \n      \n    \n    \n  \n\n\ninclude the \"Ids\" in the name\nin other mf places, \"All\" implies also inactive, which is not the case here", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424175806", "createdAt": "2020-05-13T05:10:23Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NjY5Nw==", "bodyText": "There might be 500k bpartners; please return an iterator\n(not sure if i approved the set in a previous PR, but i think it's wrong and we have IQuery.iterateIds(...))", "url": "https://github.com/metasfresh/metasfresh/pull/6639#discussion_r424176697", "createdAt": "2020-05-13T05:13:46Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.contracts/src/main/java/de/metas/contracts/bpartner/ContractPartnerRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.metas.contracts.bpartner;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.compiere.model.IQuery;\n+import org.compiere.model.I_C_BPartner;\n+import org.springframework.stereotype.Repository;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import de.metas.bpartner.BPartnerId;\n+import de.metas.contracts.model.I_C_Flatrate_Term;\n+import de.metas.util.Services;\n+\n+@Repository\n+public class ContractPartnerRepository\n+{\n+\tpublic ImmutableSet<BPartnerId> retrieveAllPartnersWithContracts()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTgwNg=="}, "originalCommit": {"oid": "4404cbcf60557136271343afded929f63e0a65cd"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86541a62c6b94d109b660342b6e282bacf2947e", "author": {"user": {"login": "metas-ts", "name": "Tobias Sch\u00f6neberg"}}, "url": "https://github.com/metasfresh/metasfresh/commit/d86541a62c6b94d109b660342b6e282bacf2947e", "committedDate": "2020-05-13T06:55:50Z", "message": "Merge branch 'yeast_overgrowth' into gh6566_6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01e99316f96a4cb0d22c8f8bad269472958882d8", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/01e99316f96a4cb0d22c8f8bad269472958882d8", "committedDate": "2020-05-13T07:43:30Z", "message": "#6566 improvements\n\n* use iterator when retrieving partners;\n* only retrieve completed or closed contracts\nhttps://github.com/metasfresh/metasfresh/issues/6566"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac61f73b25c8e7b7ac82d9ae630fb2991a29fc3b", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ac61f73b25c8e7b7ac82d9ae630fb2991a29fc3b", "committedDate": "2020-05-13T07:43:36Z", "message": "Merge branch 'gh6566_6' of https://github.com/metasfresh/metasfresh into gh6566_6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjk0Mjk3", "url": "https://github.com/metasfresh/metasfresh/pull/6639#pullrequestreview-410694297", "createdAt": "2020-05-13T08:20:16Z", "commit": {"oid": "ac61f73b25c8e7b7ac82d9ae630fb2991a29fc3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3408, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}