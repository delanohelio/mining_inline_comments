{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTMwOTE0", "number": 7041, "title": "#6714 esr reconciliation + refactoring", "bodyText": "#6714", "createdAt": "2020-07-22T07:20:03Z", "url": "https://github.com/metasfresh/metasfresh/pull/7041", "merged": true, "mergeCommit": {"oid": "74bd4801668ece7bb81c93ad1b28e9c416e8f361"}, "closed": true, "closedAt": "2020-07-23T11:19:16Z", "author": {"login": "metas-rc"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3IQ4oAH2gAyNDU0OTMwOTE0OjYxZmUzYzIyYjYxYzdiYjdmNzQ0NjM4ZGNjZmJmYzQ5OGVkOTQyY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3tP-xAFqTQ1NDAyMzM2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61fe3c22b61c7bb7f744638dccfbfc498ed942cc", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/61fe3c22b61c7bb7f744638dccfbfc498ed942cc", "committedDate": "2020-07-21T15:49:36Z", "message": "#6714 esr reconciliation + refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/6714"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0a07d72f3705589396618a7688933a96be8dbb0", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e0a07d72f3705589396618a7688933a96be8dbb0", "committedDate": "2020-07-22T07:26:21Z", "message": "#6714 update script ids\n\nhttps://github.com/metasfresh/metasfresh/issues/6714"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDA1NjU2", "url": "https://github.com/metasfresh/metasfresh/pull/7041#pullrequestreview-453405656", "createdAt": "2020-07-22T15:00:51Z", "commit": {"oid": "e0a07d72f3705589396618a7688933a96be8dbb0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTowMDo1MVrOG1mkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTowMzoyNlrOG1mr1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1OTYxOA==", "bodyText": "could we run into multiple esrImportLines having the same C_Payment_ID? or are we ruling this out, e.g. with aunique contraint?\n(or maybe the answer is in the code above?)", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r458859618", "createdAt": "2020-07-22T15:00:51Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java", "diffHunk": "@@ -1282,8 +1316,10 @@ public void linkBankStatementLinesByPaymentIds(@NonNull final Map<PaymentId, Ban\n \n \t\tfinal Set<PaymentId> paymentIds = bankStatementLineRefIdIndexByPaymentId.keySet();\n \n+\t\tfinal List<I_ESR_ImportLine> esrImportLines = esrImportDAO.retrieveLines(paymentIds);\n+\n \t\tfinal ImmutableMap<PaymentId, I_ESR_ImportLine> paySelectionLinesByPaymentId = Maps.uniqueIndex(\n-\t\t\t\tesrImportDAO.retrieveLines(paymentIds),\n+\t\t\t\tesrImportLines,\n \t\t\t\tesrImportLine -> PaymentId.ofRepoId(esrImportLine.getC_Payment_ID()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a07d72f3705589396618a7688933a96be8dbb0"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2MTUyNg==", "bodyText": "i think it's cleaner if you move this method into esrImportDAO..", "url": "https://github.com/metasfresh/metasfresh/pull/7041#discussion_r458861526", "createdAt": "2020-07-22T15:03:26Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.payment.esr/src/main/java/de/metas/payment/esr/api/impl/ESRImportBL.java", "diffHunk": "@@ -1294,6 +1330,46 @@ public void linkBankStatementLinesByPaymentIds(@NonNull final Map<PaymentId, Ban\n \n \t\t\tlinkESRImportLineToBankStatement(esrImportLine, bankStatementLineRefId);\n \t\t}\n+\n+\t\tfinal ImmutableSet<ESRImportId> esrImportIds = extractESRImportIds(esrImportLines);\n+\t\tupdateESRImportReconciledStatus(esrImportIds);\n+\t}\n+\n+\tprivate static ImmutableSet<ESRImportId> extractESRImportIds(@NonNull final List<I_ESR_ImportLine> esrImportLines)\n+\t{\n+\t\treturn esrImportLines.stream()\n+\t\t\t\t.map(esrImportLine -> ESRImportId.ofRepoId(esrImportLine.getESR_Import_ID()))\n+\t\t\t\t.collect(ImmutableSet.toImmutableSet());\n+\t}\n+\n+\t@VisibleForTesting\n+\tvoid updateESRImportReconciledStatus(@NonNull final Set<ESRImportId> esrImportIds)\n+\t{\n+\t\tif (esrImportIds.isEmpty())\n+\t\t{\n+\t\t\t// shall NOT happen\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tfinal ImmutableSet<ESRImportId> notReconciledESRImportIds = Services.get(IQueryBL.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a07d72f3705589396618a7688933a96be8dbb0"}, "originalPosition": 207}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8fed5d2bb664407a06610535460132ba76c37b7", "author": {"user": {"login": "metas-rc", "name": "Ruxandra Craciunescu"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e8fed5d2bb664407a06610535460132ba76c37b7", "committedDate": "2020-07-23T10:49:44Z", "message": "#6714 refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/6714"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDIzMzYz", "url": "https://github.com/metasfresh/metasfresh/pull/7041#pullrequestreview-454023363", "createdAt": "2020-07-23T10:55:07Z", "commit": {"oid": "e8fed5d2bb664407a06610535460132ba76c37b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3208, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}