{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDk0MDcx", "number": 9968, "title": "Fix wrong Org for ProductPlanning when created from ProductPlanningSchema", "bodyText": "#9958", "createdAt": "2020-09-18T05:57:14Z", "url": "https://github.com/metasfresh/metasfresh/pull/9968", "merged": true, "mergeCommit": {"oid": "4a47df0a7a4d041fb4df29326213d00d554d751e"}, "closed": true, "closedAt": "2020-09-22T04:55:18Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ_GtVAH2gAyNDg5MDk0MDcxOmI1NWJiY2Y4NjVjMTdkYTM5ZTcxZjBhNWMxMWVjNjIwNTIwZDY1ZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLBQbVgH2gAyNDg5MDk0MDcxOmMzYzI2NWYxNTM5YWE0M2Y0NTVlYTE1NmIzOGI0OTU3N2QwYTcwM2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b55bbcf865c17da39e71f0a5c11ec620520d65da", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b55bbcf865c17da39e71f0a5c11ec620520d65da", "committedDate": "2020-09-18T05:53:54Z", "message": "Fix wrong Org for ProductPlanning when created from ProductPlanningSchema\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "163afedbb41d01d8b1f5251803bca2ae46bd39f5", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/163afedbb41d01d8b1f5251803bca2ae46bd39f5", "committedDate": "2020-09-18T06:13:01Z", "message": "Deduplicate ProductPlanningSchemas faster\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea0dc6b364d1c45bfdc41837136ecbd9d50a037", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/eea0dc6b364d1c45bfdc41837136ecbd9d50a037", "committedDate": "2020-09-18T10:43:57Z", "message": "Update TRL\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a3f7f1987eaf6b846d940827120cc798dd958b7e", "committedDate": "2020-09-18T11:08:52Z", "message": "Add explanation for junit\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzQ3MzMy", "url": "https://github.com/metasfresh/metasfresh/pull/9968#pullrequestreview-491347332", "createdAt": "2020-09-18T10:38:22Z", "commit": {"oid": "163afedbb41d01d8b1f5251803bca2ae46bd39f5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozODoyMlrOHUHnLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozODoyMlrOHUHnLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1ODI4NA==", "bodyText": "it's not a great deal, just asking; do you know if we can't teach intellij to put the annotations before the final?", "url": "https://github.com/metasfresh/metasfresh/pull/9968#discussion_r490858284", "createdAt": "2020-09-18T10:38:22Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.business/src/main/java/de/metas/product/impl/ProductPlanningSchemaBL.java", "diffHunk": "@@ -61,28 +65,30 @@\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \t}\n \n-\tprivate List<I_PP_Product_Planning> createOrUpdateProductPlanningsForProductSelector(final I_M_Product product)\n+\tprivate List<I_PP_Product_Planning> createOrUpdateProductPlanningsForProductSelector(@NonNull final I_M_Product product)\n \t{\n \t\tfinal ProductId productId = ProductId.ofRepoId(product.getM_Product_ID());\n+\t\tfinal OrgId orgId = OrgId.ofRepoId(product.getAD_Org_ID());\n \t\tfinal ProductPlanningSchemaSelector selector = ProductPlanningSchemaSelector.ofNullableCode(product.getM_ProductPlanningSchema_Selector());\n \t\tif (selector == null)\n \t\t{\n \t\t\treturn ImmutableList.of();\n \t\t}\n \n-\t\treturn createOrUpdateProductPlanningsForSelector(productId, selector);\n+\t\treturn createOrUpdateProductPlanningsForSelector(productId, orgId, selector);\n \t}\n \n \t@Override\n \tpublic List<I_PP_Product_Planning> createOrUpdateProductPlanningsForSelector(\n-\t\t\t@NonNull final ProductId productId,\n-\t\t\t@NonNull final ProductPlanningSchemaSelector selector)\n+\t\t\tfinal @NonNull ProductId productId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "163afedbb41d01d8b1f5251803bca2ae46bd39f5"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzcwODU4", "url": "https://github.com/metasfresh/metasfresh/pull/9968#pullrequestreview-491370858", "createdAt": "2020-09-18T11:15:39Z", "commit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToxNTo0MFrOHUIv_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToxNTo0MFrOHUIv_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3NjkyNQ==", "bodyText": "i would suggest to extract that code in an model interceptor.\nAs a side benefit we will not wire\"private final IProductPlanningSchemaBL productPlanningSchemaBL\"  service each time a product is loaded.", "url": "https://github.com/metasfresh/metasfresh/pull/9968#discussion_r490876925", "createdAt": "2020-09-18T11:15:40Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java-legacy/org/compiere/model/MProduct.java", "diffHunk": "@@ -335,9 +342,9 @@ private void createOrUpdateProductPlanningsForSelector()\n \t\t}\n \t\t\n \t\tfinal ProductId productId = ProductId.ofRepoId(getM_Product_ID());\n+\t\tfinal OrgId orgId = OrgId.ofRepoId(getAD_Org_ID());\n \n-\t\tfinal IProductPlanningSchemaBL productPlanningSchemaBL = Services.get(IProductPlanningSchemaBL.class);\n-\t\tproductPlanningSchemaBL.createOrUpdateProductPlanningsForSelector(productId, productPlanningSchemaSelector);\n+\t\tproductPlanningSchemaBL.createOrUpdateProductPlanningsForSelector(productId, orgId, productPlanningSchemaSelector);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzc5ODA5", "url": "https://github.com/metasfresh/metasfresh/pull/9968#pullrequestreview-491379809", "createdAt": "2020-09-18T11:25:52Z", "commit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToyNTo1MlrOHUJEBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToyNTo1MlrOHUJEBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4MjA1Mw==", "bodyText": "this is too fragile IMHO", "url": "https://github.com/metasfresh/metasfresh/pull/9968#discussion_r490882053", "createdAt": "2020-09-18T11:25:52Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/product/impl/ProductPlanningSchemaDAO.java", "diffHunk": "@@ -70,23 +80,82 @@ public static ProductPlanningSchema getById(@NonNull final ProductPlanningSchema\n \t}\n \n \t/**\n-\t * @return All the active Product Planning Schema entries with the given Product Planning Schema Selector\n+\t * Returns the Product Planning Schema entries with the given Product Planning Schema Selector and Org. If the org does not match, fallback to org *.\n+\t * If there are 2 identical Product Planning Schemas, one for orgParam and one for *, we shall return only the one for orgParam.\n \t */\n-\tpublic static List<ProductPlanningSchema> retrieveSchemasForSelector(\n-\t\t\t@NonNull final ProductPlanningSchemaSelector productPlanningSchemaSelector)\n+\t@NonNull\n+\tpublic static ImmutableSet<ProductPlanningSchema> retrieveSchemasForSelectorAndOrg(\n+\t\t\t@NonNull final ProductPlanningSchemaSelector productPlanningSchemaSelector,\n+\t\t\t@NonNull final OrgId orgId)\n \t{\n-\t\treturn Services.get(IQueryBL.class)\n+\t\tfinal ImmutableMap<ProductPlanningSchemaId, ProductPlanningSchema> schemasWithDuplicateOrgs = Services.get(IQueryBL.class)\n \t\t\t\t.createQueryBuilder(I_M_Product_PlanningSchema.class)\n \t\t\t\t.addOnlyActiveRecordsFilter()\n \t\t\t\t.addOnlyContextClient()\n \t\t\t\t.addEqualsFilter(I_M_Product_PlanningSchema.COLUMNNAME_M_ProductPlanningSchema_Selector, productPlanningSchemaSelector)\n+\t\t\t\t.addInArrayFilter(I_M_Product_PlanningSchema.COLUMNNAME_AD_Org_ID, orgId, OrgId.ANY)\n \t\t\t\t.create()\n+\t\t\t\t.list()\n \t\t\t\t.stream()\n-\t\t\t\t.map(record -> toProductPlanningSchema(record))\n-\t\t\t\t.collect(ImmutableList.toImmutableList());\n+\t\t\t\t.map(ProductPlanningSchemaDAO::toProductPlanningSchema)\n+\t\t\t\t.collect(ImmutableMap.toImmutableMap(ProductPlanningSchema::getId, Function.identity()));\n+\n+\t\t// remove duplicates where everything is the same, except the org, and repoId\n+\t\t// Technical: I am using the set.add property that if an object already exists in a set, the duplicate will not be inserted but skipped.\n+\t\tfinal Set<ProductPlanningSchemaIgnoringOrgAndId> schemasNoDuplicateOrgs = schemasWithDuplicateOrgs.values().stream()\n+\t\t\t\t.sorted(Comparator.comparing(ProductPlanningSchema::getOrgId).reversed()) // * org remains last\n+\t\t\t\t.map(ProductPlanningSchemaIgnoringOrgAndId::new)\n+\t\t\t\t.collect(GuavaCollectors.toImmutableSet());\n+\n+\t\tfinal ImmutableSet.Builder<ProductPlanningSchema> result = ImmutableSet.builder();\n+\t\tfor (final ProductPlanningSchemaIgnoringOrgAndId s : schemasNoDuplicateOrgs)\n+\t\t{\n+\t\t\tresult.add(schemasWithDuplicateOrgs.get(s.getSchema().getId()));\n+\t\t}\n+\n+\t\treturn result.build();\n \t}\n \n-\tprivate static ProductPlanningSchema toProductPlanningSchema(final I_M_Product_PlanningSchema record)\n+\t/**\n+\t * Used as a delegate to ProductPlanningSchema, to calculate if 2 schemas are equals, ignoring only their ID and Org\n+\t */\n+\n+\t@Value\n+\tprivate static class ProductPlanningSchemaIgnoringOrgAndId\n+\t{\n+\t\tProductPlanningSchema schema;\n+\n+\t\t@Override\n+\t\tpublic boolean equals(final Object o)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNDEzMDY2", "url": "https://github.com/metasfresh/metasfresh/pull/9968#pullrequestreview-491413066", "createdAt": "2020-09-18T12:19:40Z", "commit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjoxOTo0MVrOHUKxvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjoxOTo0MVrOHUKxvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxMDE0Mg==", "bodyText": "consider moving this method to ProductDAO", "url": "https://github.com/metasfresh/metasfresh/pull/9968#discussion_r490910142", "createdAt": "2020-09-18T12:19:41Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/product/impl/ProductPlanningSchemaDAO.java", "diffHunk": "@@ -154,7 +223,7 @@ public static void save(@NonNull final ProductPlanningSchema schema)\n \t/**\n \t * @return All the active products with the given product planning schema selector\n \t */\n-\tpublic static Set<ProductId> retrieveProductIdsForSchemaSelector(\n+\tpublic static Set<ImmutablePair<ProductId, OrgId>> retrieveProductIdsForSchemaSelector(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f7f1987eaf6b846d940827120cc798dd958b7e"}, "originalPosition": 184}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b3cefd25578442f968f3a6402ac0daf9357c8bb", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4b3cefd25578442f968f3a6402ac0daf9357c8bb", "committedDate": "2020-09-21T08:48:04Z", "message": "Refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9077ab87fd898dfb3a66dad16c68196edd1c233", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b9077ab87fd898dfb3a66dad16c68196edd1c233", "committedDate": "2020-09-21T10:04:11Z", "message": "Refactoring: extract method to own interceptor\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66b9c24865a45bd7b2382e8a3d4f73af29c69912", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/66b9c24865a45bd7b2382e8a3d4f73af29c69912", "committedDate": "2020-09-21T10:07:50Z", "message": "Create Product Plans for the current org only.\n\nProductPlanningSchema for org * is removed.\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a61c49515d42fbed83512a164e12562ebf8677cd", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a61c49515d42fbed83512a164e12562ebf8677cd", "committedDate": "2020-09-21T10:13:54Z", "message": "Extract OrgId to field\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a096cf99438e711a14b1a5f6efc626b95ca4360b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a096cf99438e711a14b1a5f6efc626b95ca4360b", "committedDate": "2020-09-21T10:36:19Z", "message": "Update Junit test\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "807b32983e4c86d7cbfd9e3f497d53da4c7d3062", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/807b32983e4c86d7cbfd9e3f497d53da4c7d3062", "committedDate": "2020-09-21T10:42:46Z", "message": "Change the org of the ProductPlanningSchema - no longer use *\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c265f1539aa43f455ea156b38b49577d0a703d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c3c265f1539aa43f455ea156b38b49577d0a703d", "committedDate": "2020-09-21T10:58:15Z", "message": "This sql looks better\n\nhttps://github.com/metasfresh/metasfresh/issues/9958"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3185, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}