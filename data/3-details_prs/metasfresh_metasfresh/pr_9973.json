{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MjA2MDM2", "number": 9973, "title": "Create a WidgetWrapper component for fetching data", "bodyText": "Related to #9914 . Tests coming", "createdAt": "2020-09-18T09:51:20Z", "url": "https://github.com/metasfresh/metasfresh/pull/9973", "merged": true, "mergeCommit": {"oid": "58ee80b1b4e1e6c0a77304376aed7a4e25850c32"}, "closed": true, "closedAt": "2020-09-21T23:29:49Z", "author": {"login": "siemiatj"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdK8rnGgFqTQ5MjI3Nzk1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLGts2gBqjM3ODk3NTkwMjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjc3OTUz", "url": "https://github.com/metasfresh/metasfresh/pull/9973#pullrequestreview-492277953", "createdAt": "2020-09-21T04:51:46Z", "commit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNDo1MTo0N1rOHVAomw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNTozNToxM1rOHVBKNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MjUzOQ==", "bodyText": "can be put under Constants and imported above together with INITIALLY_CLOSED", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491792539", "createdAt": "2020-09-21T04:51:47Z", "author": {"login": "petrican"}, "path": "frontend/src/components/Window.js", "diffHunk": "@@ -12,6 +12,7 @@ import Section from './window/Section';\n import Dropzone from './Dropzone';\n import { INITIALLY_CLOSED } from '../constants/Constants';\n \n+const EMPTY_OBJECT = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MzI4MQ==", "bodyText": "Might worth adding some safety checks in here, also a default fallback for the timeZone.", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491793281", "createdAt": "2020-09-21T04:55:34Z", "author": {"login": "petrican"}, "path": "frontend/src/components/app/OverlayField.js", "diffHunk": "@@ -195,6 +221,15 @@ class OverlayField extends Component {\n   }\n }\n \n+const mapStateToProps = (state) => {\n+  const { appHandler, windowHandler } = state;\n+\n+  return {\n+    modalVisible: windowHandler.modal.visible,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5NjAxMg==", "bodyText": "Pls rename the file to match the component name -> TableRow . Also this implies updates in all the files that do import that.", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491796012", "createdAt": "2020-09-21T05:10:12Z", "author": {"login": "petrican"}, "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -9,18 +8,22 @@ import {\n   prepareWidgetData,\n   isEditableOnDemand,\n   isCellEditable,\n+  tableRowPropTypes,\n   getCellWidgetData,\n+  getDescription,\n+  getTdValue,\n+  nestedSelect,\n } from '../../utils/tableHelpers';\n \n import TableCell from './TableCell';\n import WithMobileDoubleTap from '../WithMobileDoubleTap';\n \n /**\n  * @file Class based component.\n- * @module TableItem\n+ * @module TableRow\n  * @extends PureComponent\n  */\n-class TableItem extends PureComponent {\n+class TableRow extends PureComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5NzEyMw==", "bodyText": "logic from here can be put in a separate function that returns the needed data", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491797123", "createdAt": "2020-09-21T05:15:47Z", "author": {"login": "petrican"}, "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -463,11 +448,35 @@ class TableItem extends PureComponent {\n             const isEditable = isCellEditable(item, cells);\n             const isEdited = edited === property;\n             const extendLongText = multilineText ? multilineTextLines : 0;\n-            const widgetData = this.getWidgetData(\n+            const widgetData = getCellWidgetData(\n+              cells,\n               item,\n               isEditable,\n               supportFieldEdit\n             );\n+            const isReadonly = widgetData[0].readonly;\n+            const isMandatory = widgetData[0].mandatory;\n+            const tdValue = getTdValue({\n+              widgetData,\n+              item,\n+              isEdited,\n+              isGerman,\n+            });\n+            const description = getDescription({ widgetData, tdValue });\n+            let tooltipData = null;\n+            let tooltipWidget =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5OTA1Nw==", "bodyText": "I believe you could write here some docs explaining briefly how this is functioning since that would be the central logic component. Thanks", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491799057", "createdAt": "2020-09-21T05:25:21Z", "author": {"login": "petrican"}, "path": "frontend/src/containers/WidgetWrapper.js", "diffHunk": "@@ -0,0 +1,137 @@\n+import React, { PureComponent } from 'react';\n+import PropTypes from 'prop-types';\n+import { connect } from 'react-redux';\n+\n+import {\n+  openModal,\n+  patch,\n+  updatePropertyValue,\n+  allowShortcut,\n+  disableShortcut,\n+} from '../actions/WindowActions';\n+import { getCellWidgetData } from '../utils/tableHelpers';\n+import { getTable } from '../reducers/tables';\n+import {\n+  getMasterData,\n+  getMasterWidgetData,\n+  getMasterWidgetFields,\n+  getMasterDocStatus,\n+} from '../reducers/windowHandler';\n+\n+import MasterWidget from '../components/widget/MasterWidget';\n+import RawWidget from '../components/widget/RawWidget';\n+\n+/**\n+ * @file Class based component.\n+ * @module WidgetWrapper\n+ * @extends PureComponent\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMTA0NQ==", "bodyText": "Document here pls", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491801045", "createdAt": "2020-09-21T05:34:52Z", "author": {"login": "petrican"}, "path": "frontend/src/reducers/windowHandler.js", "diffHunk": "@@ -139,6 +140,69 @@ export const getQuickactions = createSelector(\n   (actions) => actions\n );\n \n+export const getMasterData = (state) => state.windowHandler.master.data;\n+const getMasterLayout = (state, layoutPath) => {\n+  const layout = state.windowHandler.master.layout;\n+  const [\n+    sectionIdx,\n+    columnIdx,\n+    elGroupIdx,\n+    elLineIdx,\n+    elIdx,\n+  ] = layoutPath.split('_');\n+\n+  return layout.sections[sectionIdx].columns[columnIdx].elementGroups[\n+    elGroupIdx\n+  ].elementsLine[elLineIdx].elements[elIdx];\n+};\n+\n+const selectWidgetData = (data, layout) => {\n+  let widgetData = null;\n+\n+  widgetData = layout.fields.reduce((result, item) => {\n+    data[item.field] && result.push(data[item.field]);\n+\n+    return result;\n+  }, []);\n+\n+  if (!widgetData.length) {\n+    widgetData = [{}];\n+  }\n+\n+  return widgetData;\n+};\n+\n+/**\n+ * @method getMasterWidgetData\n+ * @summary cached selector for picking widget data for a desired element\n+ *\n+ * @param {object} state - redux state\n+ * @param {string} layoutPath - indexes of element in the layout structure\n+ */\n+export const getMasterWidgetData = createCachedSelector(\n+  getMasterData,\n+  getMasterLayout,\n+  (data, layout) => selectWidgetData(data, layout)\n+)((_state_, layoutPath) => layoutPath);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMTE0MQ==", "bodyText": "Also Document this as well", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491801141", "createdAt": "2020-09-21T05:35:13Z", "author": {"login": "petrican"}, "path": "frontend/src/reducers/windowHandler.js", "diffHunk": "@@ -139,6 +140,69 @@ export const getQuickactions = createSelector(\n   (actions) => actions\n );\n \n+export const getMasterData = (state) => state.windowHandler.master.data;\n+const getMasterLayout = (state, layoutPath) => {\n+  const layout = state.windowHandler.master.layout;\n+  const [\n+    sectionIdx,\n+    columnIdx,\n+    elGroupIdx,\n+    elLineIdx,\n+    elIdx,\n+  ] = layoutPath.split('_');\n+\n+  return layout.sections[sectionIdx].columns[columnIdx].elementGroups[\n+    elGroupIdx\n+  ].elementsLine[elLineIdx].elements[elIdx];\n+};\n+\n+const selectWidgetData = (data, layout) => {\n+  let widgetData = null;\n+\n+  widgetData = layout.fields.reduce((result, item) => {\n+    data[item.field] && result.push(data[item.field]);\n+\n+    return result;\n+  }, []);\n+\n+  if (!widgetData.length) {\n+    widgetData = [{}];\n+  }\n+\n+  return widgetData;\n+};\n+\n+/**\n+ * @method getMasterWidgetData\n+ * @summary cached selector for picking widget data for a desired element\n+ *\n+ * @param {object} state - redux state\n+ * @param {string} layoutPath - indexes of element in the layout structure\n+ */\n+export const getMasterWidgetData = createCachedSelector(\n+  getMasterData,\n+  getMasterLayout,\n+  (data, layout) => selectWidgetData(data, layout)\n+)((_state_, layoutPath) => layoutPath);\n+\n+export const getMasterWidgetFields = createCachedSelector(\n+  getMasterLayout,\n+  (layout) => layout.fields\n+)((_state, layoutPath) => layoutPath);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392924ce7f288d65116b93ffed7b739513e05895"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a25bd369632fad98bee0d86ac521e41bb9b200", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/40a25bd369632fad98bee0d86ac521e41bb9b200", "committedDate": "2020-09-21T17:19:16Z", "message": "#9914 basic widgetwrapper container"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aea11530f9c0ae6d2fa28bff541909e82c05046b", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/aea11530f9c0ae6d2fa28bff541909e82c05046b", "committedDate": "2020-09-21T17:19:17Z", "message": "#9914 cleanup window components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0392223aac0b58012a620a4c8ad4a02a158f1e", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/9c0392223aac0b58012a620a4c8ad4a02a158f1e", "committedDate": "2020-09-21T17:19:17Z", "message": "#9914 switch to using WidgetWrapper in Header/Element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c853dc6ba35a09f5101cc6a9601b990ce9997764", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c853dc6ba35a09f5101cc6a9601b990ce9997764", "committedDate": "2020-09-21T17:19:18Z", "message": "#9914 move some helper functions to utils\n- remove unused code from Lookup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bacfc72a4e5866256bba1401fcbc1c0f51be5046", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bacfc72a4e5866256bba1401fcbc1c0f51be5046", "committedDate": "2020-09-21T17:19:18Z", "message": "#9914 support getting widget data for tables by WidgetWrapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "806d8584c46468dd8c2adf7c97695baf12db353b", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/806d8584c46468dd8c2adf7c97695baf12db353b", "committedDate": "2020-09-21T17:19:19Z", "message": "#9914 small refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69c0ceb9de50b0b37a05abe6b215369d1f806494", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/69c0ceb9de50b0b37a05abe6b215369d1f806494", "committedDate": "2020-09-21T17:19:19Z", "message": "#9914 support WidgetWrapper in tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ca6bba49c3f49b983a5270cfb13c016c44343d", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a9ca6bba49c3f49b983a5270cfb13c016c44343d", "committedDate": "2020-09-21T17:19:20Z", "message": "#9914 optimize rendering and pass props to query data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11907bd9d9eff40c9ba1ed30c0bf470e8fcd5ca9", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/11907bd9d9eff40c9ba1ed30c0bf470e8fcd5ca9", "committedDate": "2020-09-21T17:19:20Z", "message": "#9914 selectors for data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079396b25294dec0fc1c0fe64c252cbf79c7f4be", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/079396b25294dec0fc1c0fe64c252cbf79c7f4be", "committedDate": "2020-09-21T17:19:21Z", "message": "#9914 cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c69287bb5ebf07551656d2f4a9326397b81564cb", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c69287bb5ebf07551656d2f4a9326397b81564cb", "committedDate": "2020-09-21T17:19:22Z", "message": "#9914 create selector for document status widget data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf51deeff3eb421c3eb6cd1d627f30ce276a1960", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/cf51deeff3eb421c3eb6cd1d627f30ce276a1960", "committedDate": "2020-09-21T17:19:22Z", "message": "#9914 cleanup and removing unnecessary props"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43504debe8bd650c265107292b17ed4cd0f2ce2d", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/43504debe8bd650c265107292b17ed4cd0f2ce2d", "committedDate": "2020-09-21T17:19:23Z", "message": "#9914 load fields directly from the store\n- cleaning up MasterWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ec506522a7fa50eacdfc6f0403f6224e71fa2a", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/03ec506522a7fa50eacdfc6f0403f6224e71fa2a", "committedDate": "2020-09-21T17:19:23Z", "message": "#9914 pass missing props to Master/RawWidget where WidgetWrapper is not used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4926610a1b4f311156e465ac5de6d6d14ab24e85", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/4926610a1b4f311156e465ac5de6d6d14ab24e85", "committedDate": "2020-09-21T17:19:23Z", "message": "#9914 temporarily revert RawWidget changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e1ddd8df84b682643e358627af729f3b8f03df4", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5e1ddd8df84b682643e358627af729f3b8f03df4", "committedDate": "2020-09-21T17:19:24Z", "message": "#9914 fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad00a35886900c2dc9a3cf58d8a0b847516dd4a", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/8ad00a35886900c2dc9a3cf58d8a0b847516dd4a", "committedDate": "2020-09-21T17:19:25Z", "message": "#9914 fix quickinput tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3353287ba6a917651984ed8c2f5a9cc28c625a73", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/3353287ba6a917651984ed8c2f5a9cc28c625a73", "committedDate": "2020-09-21T17:19:26Z", "message": "#9914 rename `TableItem` to `TableRow` everywhere and fix tests\n- change all occurences of `item` related to table to `row`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fba0ae2b85212ce4c408469e7905573bae32d754", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fba0ae2b85212ce4c408469e7905573bae32d754", "committedDate": "2020-09-21T17:19:26Z", "message": "#9914 add docs and move some functionality to utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0e36742e3d74ac2110140e6e7de349c10998c6", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/3f0e36742e3d74ac2110140e6e7de349c10998c6", "committedDate": "2020-09-21T17:19:26Z", "message": "#9914 add `re-reselect` package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108e12a644006d076756ed3d2a30f00937900895", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/108e12a644006d076756ed3d2a30f00937900895", "committedDate": "2020-09-21T17:19:27Z", "message": "#9914 fix linter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3ecd4b2739593ba3ad19e1fc25969686d9332de", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a3ecd4b2739593ba3ad19e1fc25969686d9332de", "committedDate": "2020-09-21T17:19:27Z", "message": "#9914 fix getting data for ActionButton in the document status widget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cae50c4b184acc60525f79f4061a913f52d17d8", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/8cae50c4b184acc60525f79f4061a913f52d17d8", "committedDate": "2020-09-21T17:19:28Z", "message": "#9914 WidgetWrapper tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d2c860806f322285446f2ebdb8b2c1eb512b29a", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1d2c860806f322285446f2ebdb8b2c1eb512b29a", "committedDate": "2020-09-21T17:19:28Z", "message": "#9914 more tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dc35f77a2a72ca8988372b0df00cffa0c306e87", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5dc35f77a2a72ca8988372b0df00cffa0c306e87", "committedDate": "2020-09-21T17:06:46Z", "message": "#9914 more tests"}, "afterCommit": {"oid": "1d2c860806f322285446f2ebdb8b2c1eb512b29a", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1d2c860806f322285446f2ebdb8b2c1eb512b29a", "committedDate": "2020-09-21T17:19:28Z", "message": "#9914 more tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3192, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}