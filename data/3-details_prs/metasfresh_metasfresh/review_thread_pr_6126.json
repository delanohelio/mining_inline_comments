{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODk3MTk1", "number": 6126, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToyMDoxM1rODdS_Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjozNDowNVrODdUMMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDQ2MzY3OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/AD_Document_Action_Access.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToyMDoxM1rOFl0SQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToyMDoxM1rOFl0SQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5ODI3NQ==", "bodyText": "what is the ModelCacheInvalidationTiming about? why NEW?", "url": "https://github.com/metasfresh/metasfresh/pull/6126#discussion_r375198275", "createdAt": "2020-02-05T11:20:13Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/AD_Document_Action_Access.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2019 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.security.model.interceptor;\n+\n+import de.metas.cache.model.CacheInvalidateMultiRequest;\n+import de.metas.cache.model.IModelCacheInvalidationService;\n+import de.metas.cache.model.ModelCacheInvalidationTiming;\n+import de.metas.util.Services;\n+import org.adempiere.ad.modelvalidator.annotations.Interceptor;\n+import org.adempiere.ad.modelvalidator.annotations.ModelChange;\n+import org.compiere.model.I_AD_Document_Action_Access;\n+import org.compiere.model.I_AD_Ref_List;\n+import org.compiere.model.ModelValidator;\n+\n+@Interceptor(I_AD_Document_Action_Access.class)\n+public class AD_Document_Action_Access\n+{\n+\tpublic static final transient AD_Document_Action_Access instance = new AD_Document_Action_Access();\n+\n+\t@ModelChange(timings = { ModelValidator.TYPE_AFTER_NEW, ModelValidator.TYPE_AFTER_CHANGE, ModelValidator.TYPE_AFTER_DELETE })\n+\tpublic void afterNewChangedOrDeleted(final I_AD_Document_Action_Access documentActionAccess)\n+\t{\n+\t\tfinal IModelCacheInvalidationService modelCacheInvalidationService = Services.get(IModelCacheInvalidationService.class);\n+\t\tmodelCacheInvalidationService.invalidate(\n+\t\t\t\tCacheInvalidateMultiRequest.allRecordsForTable(I_AD_Ref_List.Table_Name), ModelCacheInvalidationTiming.NEW);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96d0cbf92cd3368b803c9103d95daca1f2bbd343"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDY2MDk3OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/SecurityMainInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjozNDowNVrOFl2K3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjozNDowNVrOFl2K3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyOTE0OA==", "bodyText": "FYI, you can also annotate the  model interceptor with @Component, then spring will do the magic on startup", "url": "https://github.com/metasfresh/metasfresh/pull/6126#discussion_r375229148", "createdAt": "2020-02-05T12:34:05Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/security/model/interceptor/SecurityMainInterceptor.java", "diffHunk": "@@ -59,6 +59,7 @@ protected void registerInterceptors(final IModelValidationEngine engine, final I\n \t\t// Role and included roles\n \t\tengine.addModelValidator(de.metas.security.model.interceptor.AD_Role.instance, client);\n \t\tengine.addModelValidator(de.metas.security.model.interceptor.AD_Role_Included.instance, client);\n+\t\tengine.addModelValidator(AD_Document_Action_Access.instance, client);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63fc1925dd77725ea49d010af384555547cd5708"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1469, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}