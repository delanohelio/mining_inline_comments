{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTYwMTUz", "number": 6200, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxOTowOVrODgZ-bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyMToyMlrODgaBUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzA2NjA3OnYy", "diffSide": "RIGHT", "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/SummaryAndBalanceListReport.sql", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoxOTowOVrOFqmBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjoxNDoyMFrOFq2HKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwNzUwOQ==", "bodyText": "activity filtering shall be applied on Fact_Acct, Fact_Acct_Summary.\nIf we don't have the Fact_Acct_Summary.C_Activity_ID then pls:\n\nskip it\ninform Mark\ncreate a follow-up to introduce it", "url": "https://github.com/metasfresh/metasfresh/pull/6200#discussion_r380207509", "createdAt": "2020-02-17T14:19:09Z", "author": {"login": "teosarca"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/SummaryAndBalanceListReport.sql", "diffHunk": "@@ -0,0 +1,66 @@\n+--- backup for erpit\n+CREATE INDEX fas_dateacct\n+    ON fact_acct_summary (dateacct);\n+DROP INDEX fas_dateacct;\n+-- todo @ teo observation: it seems the query runs faster without the index fas_dateacct. (27 sec avg -> 22 sec avg => >10% perf change)\n+-- todo extract the index drop to own migration script\n+--------------------------------------\n+\n+\n+CREATE OR REPLACE FUNCTION SummaryAndBalanceListReport(p_dateFrom date,\n+                                                       p_dateTo date,\n+                                                       p_c_acctschema_id NUMERIC,\n+                                                       p_ad_org_id numeric,\n+                                                       p_account_id NUMERIC=NULL,\n+                                                       p_c_activity_id numeric=NULL)\n+    RETURNS table\n+            (\n+                AccountValue     text,\n+                AccountName      text,\n+                beginningBalance numeric,\n+                debit            numeric,\n+                credit           numeric,\n+                endingBalancw    numeric\n+            )\n+AS\n+$$\n+WITH filteredElementValues AS\n+         (\n+             SELECT ev.c_elementvalue_id,\n+                    ev.name  AccountName,\n+                    ev.value AccountValue\n+             FROM c_elementvalue ev\n+             WHERE TRUE\n+               AND (p_account_id IS NULL OR ev.c_elementvalue_id = p_account_id)\n+               AND (p_c_activity_id IS NULL OR ev.c_activity_id = p_c_activity_id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55370ad0d1bba3c685cfa587c7139292af007456"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ2MjUzNg==", "bodyText": "create a follow-up to introduce it\n\ndiscussed with @teosarca - there's no need to introduce it\n\nskip it\n\nWill do", "url": "https://github.com/metasfresh/metasfresh/pull/6200#discussion_r380462536", "createdAt": "2020-02-18T05:35:13Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/SummaryAndBalanceListReport.sql", "diffHunk": "@@ -0,0 +1,66 @@\n+--- backup for erpit\n+CREATE INDEX fas_dateacct\n+    ON fact_acct_summary (dateacct);\n+DROP INDEX fas_dateacct;\n+-- todo @ teo observation: it seems the query runs faster without the index fas_dateacct. (27 sec avg -> 22 sec avg => >10% perf change)\n+-- todo extract the index drop to own migration script\n+--------------------------------------\n+\n+\n+CREATE OR REPLACE FUNCTION SummaryAndBalanceListReport(p_dateFrom date,\n+                                                       p_dateTo date,\n+                                                       p_c_acctschema_id NUMERIC,\n+                                                       p_ad_org_id numeric,\n+                                                       p_account_id NUMERIC=NULL,\n+                                                       p_c_activity_id numeric=NULL)\n+    RETURNS table\n+            (\n+                AccountValue     text,\n+                AccountName      text,\n+                beginningBalance numeric,\n+                debit            numeric,\n+                credit           numeric,\n+                endingBalancw    numeric\n+            )\n+AS\n+$$\n+WITH filteredElementValues AS\n+         (\n+             SELECT ev.c_elementvalue_id,\n+                    ev.name  AccountName,\n+                    ev.value AccountValue\n+             FROM c_elementvalue ev\n+             WHERE TRUE\n+               AND (p_account_id IS NULL OR ev.c_elementvalue_id = p_account_id)\n+               AND (p_c_activity_id IS NULL OR ev.c_activity_id = p_c_activity_id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwNzUwOQ=="}, "originalCommit": {"oid": "55370ad0d1bba3c685cfa587c7139292af007456"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ3MTA4MA==", "bodyText": "no longer filtering by activity_id.", "url": "https://github.com/metasfresh/metasfresh/pull/6200#discussion_r380471080", "createdAt": "2020-02-18T06:14:20Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/SummaryAndBalanceListReport.sql", "diffHunk": "@@ -0,0 +1,66 @@\n+--- backup for erpit\n+CREATE INDEX fas_dateacct\n+    ON fact_acct_summary (dateacct);\n+DROP INDEX fas_dateacct;\n+-- todo @ teo observation: it seems the query runs faster without the index fas_dateacct. (27 sec avg -> 22 sec avg => >10% perf change)\n+-- todo extract the index drop to own migration script\n+--------------------------------------\n+\n+\n+CREATE OR REPLACE FUNCTION SummaryAndBalanceListReport(p_dateFrom date,\n+                                                       p_dateTo date,\n+                                                       p_c_acctschema_id NUMERIC,\n+                                                       p_ad_org_id numeric,\n+                                                       p_account_id NUMERIC=NULL,\n+                                                       p_c_activity_id numeric=NULL)\n+    RETURNS table\n+            (\n+                AccountValue     text,\n+                AccountName      text,\n+                beginningBalance numeric,\n+                debit            numeric,\n+                credit           numeric,\n+                endingBalancw    numeric\n+            )\n+AS\n+$$\n+WITH filteredElementValues AS\n+         (\n+             SELECT ev.c_elementvalue_id,\n+                    ev.name  AccountName,\n+                    ev.value AccountValue\n+             FROM c_elementvalue ev\n+             WHERE TRUE\n+               AND (p_account_id IS NULL OR ev.c_elementvalue_id = p_account_id)\n+               AND (p_c_activity_id IS NULL OR ev.c_activity_id = p_c_activity_id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwNzUwOQ=="}, "originalCommit": {"oid": "55370ad0d1bba3c685cfa587c7139292af007456"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzA3MzQ1OnYy", "diffSide": "RIGHT", "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/acctBalanceToDate.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDoyMToyMlrOFqmGBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjoxNjoxNVrOFq2I8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwODY0Ng==", "bodyText": "cannot follow what's changed here. u will have to tell me....", "url": "https://github.com/metasfresh/metasfresh/pull/6200#discussion_r380208646", "createdAt": "2020-02-17T14:21:22Z", "author": {"login": "teosarca"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/acctBalanceToDate.sql", "diffHunk": "@@ -15,89 +15,93 @@ CREATE TYPE de_metas_acct.BalanceAmt AS\n );\n \n  */\n-create or replace function de_metas_acct.acctBalanceToDate(p_Account_ID numeric, p_C_AcctSchema_ID numeric, p_DateAcct date, p_AD_Org_ID numeric(10,0),  p_IncludePostingTypeStatistical char(1) = 'N',  p_ExcludePostingTypeYearEnd char(1) = 'N')\n-RETURNS de_metas_acct.BalanceAmt AS\n+CREATE OR REPLACE FUNCTION de_metas_acct.acctBalanceToDate_test(p_Account_ID numeric,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55370ad0d1bba3c685cfa587c7139292af007456"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ3MTUzOA==", "bodyText": "I have refactored the create or replace line, so that each param is shown on different lines. This will help with future diffing.\nI have also extracted all the joins in the 3 subqueries into a CTE, which brings a speedup of about 30%.\nwe can skype about this for more details.", "url": "https://github.com/metasfresh/metasfresh/pull/6200#discussion_r380471538", "createdAt": "2020-02-18T06:16:15Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/acctBalanceToDate.sql", "diffHunk": "@@ -15,89 +15,93 @@ CREATE TYPE de_metas_acct.BalanceAmt AS\n );\n \n  */\n-create or replace function de_metas_acct.acctBalanceToDate(p_Account_ID numeric, p_C_AcctSchema_ID numeric, p_DateAcct date, p_AD_Org_ID numeric(10,0),  p_IncludePostingTypeStatistical char(1) = 'N',  p_ExcludePostingTypeYearEnd char(1) = 'N')\n-RETURNS de_metas_acct.BalanceAmt AS\n+CREATE OR REPLACE FUNCTION de_metas_acct.acctBalanceToDate_test(p_Account_ID numeric,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwODY0Ng=="}, "originalCommit": {"oid": "55370ad0d1bba3c685cfa587c7139292af007456"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1493, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}