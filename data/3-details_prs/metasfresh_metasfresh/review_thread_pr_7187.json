{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNjA2MDk3", "number": 7187, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0NjowNVrOEb979Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1NzoxNVrOEcgN9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzYxNzgxOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0NjowNVrOHGN-0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0NjowNVrOHGN-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MjU3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476282577", "createdAt": "2020-08-25T08:46:05Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d220358407ea6de20f0effe496dc212ec34e3610"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzYyMzg5OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0NzozOFrOHGOCmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozMDo0MVrOHGR4iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MzU0NQ==", "bodyText": "from this javadoc, i guess NONE should rather be named CURRENT_DATE or TODAY, wdyt?", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476283545", "createdAt": "2020-08-25T08:47:38Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n+\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param createReceiptWithDatePromised if <code>false</code> (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}. Otherwise it is created with\n-\t *            the DatePromised value of the receipt schedule's C_Order. To be used e.g. when doing migration work.\n-\t */\n-\tprotected InOutProducer(@NonNull final InOutGenerateResult result, final boolean complete, final boolean createReceiptWithDatePromised)\n+\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d220358407ea6de20f0effe496dc212ec34e3610"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0NjUwNQ==", "bodyText": "good point \ud83d\ude04", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476346505", "createdAt": "2020-08-25T10:30:41Z", "author": {"login": "pvpurcarcosmin"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n+\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param createReceiptWithDatePromised if <code>false</code> (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}. Otherwise it is created with\n-\t *            the DatePromised value of the receipt schedule's C_Order. To be used e.g. when doing migration work.\n-\t */\n-\tprotected InOutProducer(@NonNull final InOutGenerateResult result, final boolean complete, final boolean createReceiptWithDatePromised)\n+\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MzU0NQ=="}, "originalCommit": {"oid": "d220358407ea6de20f0effe496dc212ec34e3610"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzYyOTQ5OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0OTowM1rOHGOGJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0OTowM1rOHGOGJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4NDQ1NQ==", "bodyText": "here you could use (CoalesceUtils.)coalesce(externalInfoByReceiptScheduleId, ImmutableMap.of()), in my mind that's more readable", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r476284455", "createdAt": "2020-08-25T08:49:03Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +111,37 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete\n \t */\n \tpublic InOutProducer(final InOutGenerateResult result, final boolean complete)\n \t{\n-\t\tthis(result, complete, false); // createReceiptWithDatePromised = false\n+\t\t// Map<ReceiptScheduleId, ReceiptScheduleExternalInfo> externalInfoByScheduleId = null;\n+\t\tthis(result, complete, ReceiptMovementDateRule.NONE, null);\n \t}\n \n \t/**\n \t *\n \t * @param result\n \t * @param complete\n-\t * @param createReceiptWithDatePromised if <code>false</code> (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}. Otherwise it is created with\n-\t *            the DatePromised value of the receipt schedule's C_Order. To be used e.g. when doing migration work.\n-\t */\n-\tprotected InOutProducer(@NonNull final InOutGenerateResult result, final boolean complete, final boolean createReceiptWithDatePromised)\n+\t * @param movementDateRule if {@code NONE} (the default), then a new InOut is created with the current date from {@link Env#getDate(Properties)}.\n+\t *                         else if {@code ReceiptMovementDateRule#EXTERNAL_DATE_IF_AVAIL} then the MovementDate will be taken from {@code externalInfoByReceiptScheduleId} if available\n+\t *                         else if {@code ReceiptMovementDateRule#ORDER_DATE_PROMISED} then the date will be the DatePromised value of the receipt schedule's C_Order.\n+     */\n+\tprotected InOutProducer(@NonNull final InOutGenerateResult result,\n+\t\t\tfinal boolean complete,\n+\t\t\t@NonNull final ReceiptMovementDateRule movementDateRule,\n+\t\t\t@Nullable final Map<ReceiptScheduleId,ReceiptScheduleExternalInfo> externalInfoByReceiptScheduleId)\n \t{\n \t\tthis.result = result;\n \t\tthis.complete = complete;\n-\t\tthis.createReceiptWithDatePromised = createReceiptWithDatePromised;\n+\t\tthis.movementDateRule = movementDateRule;\n+\n+\t\tthis.externalInfoByReceiptScheduleId = externalInfoByReceiptScheduleId != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d220358407ea6de20f0effe496dc212ec34e3610"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIxNTE2OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1MTo1MVrOHHEtsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1MTo1MVrOHHEtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3OTMxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n          \n          \n            \n            \t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.CURRENT_DATE && externalInfoByScheduleId = null</code>.", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477179313", "createdAt": "2020-08-26T09:51:51Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +112,34 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIxNjA0OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1MjowMlrOHHEuJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1MjowMlrOHHEuJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE3OTQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param result\n          \n          \n            \n            \t * @param complete", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477179429", "createdAt": "2020-08-26T09:52:02Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.swat/de.metas.swat.base/src/main/java/de/metas/inoutcandidate/api/impl/InOutProducer.java", "diffHunk": "@@ -108,28 +112,34 @@\n \tprivate final Set<Integer> _currentOrderIds = new HashSet<>();\n \n \t/**\n-\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, boolean)} with <code>createReceiptWithDatePromised == false</code>.\n+\t * Calls {@link #InOutProducer(InOutGenerateResult, boolean, ReceiptMovementDateRule, Map)} with <code> ReceiptMovementDateRule.NONE && externalInfoByScheduleId = null</code>.\n \t *\n \t * @param result\n \t * @param complete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIyMzcxOnYy", "diffSide": "RIGHT", "path": "misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1NDoxMFrOHHEy5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDo1NDowOVrOHHGsCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MDY0Nw==", "bodyText": "hm, i think i wasn't aware of this \ud83e\udd14 i'll try to keep it in mind", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477180647", "createdAt": "2020-08-26T09:54:10Z", "author": {"login": "metas-ts"}, "path": "misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java", "diffHunk": "@@ -36,7 +37,7 @@\n \t\t\t\t.to(LOCAL_STORAGE_URL)\n \t\t\t\t.streamCaching()\n \t\t\t\t.unmarshal(jacksonXMLDataFormat)\n-\t\t\t\t.process(new ShipmentXmlToJsonProcessor())\n+\t\t\t\t.process(new ShipmentXmlToJsonProcessor()).id(SHIPMENT_XML_TO_JSON_PROCESSOR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIxMTY1OQ==", "bodyText": "used it for testing, basically to be able to add a mock node right after it that facilitates checking what the processor did", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477211659", "createdAt": "2020-08-26T10:54:09Z", "author": {"login": "pvpurcarcosmin"}, "path": "misc/services/camel/de-metas-camel-shipping/src/main/java/de/metas/camel/shipping/shipment/ShipmentXmlToJsonRouteBuilder.java", "diffHunk": "@@ -36,7 +37,7 @@\n \t\t\t\t.to(LOCAL_STORAGE_URL)\n \t\t\t\t.streamCaching()\n \t\t\t\t.unmarshal(jacksonXMLDataFormat)\n-\t\t\t\t.process(new ShipmentXmlToJsonProcessor())\n+\t\t\t\t.process(new ShipmentXmlToJsonProcessor()).id(SHIPMENT_XML_TO_JSON_PROCESSOR)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MDY0Nw=="}, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIzMDY1OnYy", "diffSide": "RIGHT", "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/shipment/SiroCreateShipment.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1NjowNlrOHHE3Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1NjowNlrOHHE3Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MTc1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          NAME=\"bodymed_aussendungen.fmp12\"\n          \n          \n            \n                          NAME=\"test_aussendungen.fmp12\"", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477181759", "createdAt": "2020-08-26T09:56:06Z", "author": {"login": "metas-ts"}, "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/shipment/SiroCreateShipment.xml", "diffHunk": "@@ -0,0 +1,208 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<FMPXMLRESULT xmlns=\"http://www.filemaker.com/fmpxmlresult\">\n+    <ERRORCODE>0</ERRORCODE>\n+    <PRODUCT BUILD=\"04-29-2019\"\n+             NAME=\"FileMaker\"\n+             VERSION=\"ProAdvanced 18.0.1\"/>\n+    <DATABASE DATEFORMAT=\"D.m.yyyy\"\n+              LAYOUT=\"xml\"\n+              NAME=\"bodymed_aussendungen.fmp12\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIzMjYzOnYy", "diffSide": "RIGHT", "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/shipment/SiroCreateShipment_empty.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1Njo0MVrOHHE4hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1Njo0MVrOHHE4hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MjA4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          NAME=\"bodymed_aussendungen.fmp12\"\n          \n          \n            \n                          NAME=\"test_aussendungen.fmp12\"", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477182087", "createdAt": "2020-08-26T09:56:41Z", "author": {"login": "metas-ts"}, "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/shipment/SiroCreateShipment_empty.xml", "diffHunk": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<FMPXMLRESULT xmlns=\"http://www.filemaker.com/fmpxmlresult\">\n+    <ERRORCODE>0</ERRORCODE>\n+    <PRODUCT BUILD=\"04-29-2019\"\n+             NAME=\"FileMaker\"\n+             VERSION=\"ProAdvanced 18.0.1\"/>\n+    <DATABASE DATEFORMAT=\"D.m.yyyy\"\n+              LAYOUT=\"xml\"\n+              NAME=\"bodymed_aussendungen.fmp12\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzIzNDQ3OnYy", "diffSide": "RIGHT", "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/receipt/SiroCreateReceipts_Empty.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTo1NzoxNVrOHHE5vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDo1NDo1NFrOHHGtSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MjM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          NAME=\"bodymed_wareneingang.fmp12\"\n          \n          \n            \n                          NAME=\"test_wareneingang.fmp12\"", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477182398", "createdAt": "2020-08-26T09:57:15Z", "author": {"login": "metas-ts"}, "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/receipt/SiroCreateReceipts_Empty.xml", "diffHunk": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<FMPXMLRESULT xmlns=\"http://www.filemaker.com/fmpxmlresult\">\n+    <ERRORCODE>0</ERRORCODE>\n+    <PRODUCT BUILD=\"04-29-2019\"\n+             NAME=\"FileMaker\"\n+             VERSION=\"ProAdvanced 18.0.1\"/>\n+    <DATABASE DATEFORMAT=\"D.m.yyyy\"\n+              LAYOUT=\"\"\n+              NAME=\"bodymed_wareneingang.fmp12\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIxMTk3OA==", "bodyText": "yep, thanks for fixing!", "url": "https://github.com/metasfresh/metasfresh/pull/7187#discussion_r477211978", "createdAt": "2020-08-26T10:54:54Z", "author": {"login": "pvpurcarcosmin"}, "path": "misc/services/camel/de-metas-camel-shipping/src/test/resources/de/metas/camel/shipping/receipt/SiroCreateReceipts_Empty.xml", "diffHunk": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<FMPXMLRESULT xmlns=\"http://www.filemaker.com/fmpxmlresult\">\n+    <ERRORCODE>0</ERRORCODE>\n+    <PRODUCT BUILD=\"04-29-2019\"\n+             NAME=\"FileMaker\"\n+             VERSION=\"ProAdvanced 18.0.1\"/>\n+    <DATABASE DATEFORMAT=\"D.m.yyyy\"\n+              LAYOUT=\"\"\n+              NAME=\"bodymed_wareneingang.fmp12\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE4MjM5OA=="}, "originalCommit": {"oid": "78c6864280c2ea2e664c36454d247f75b41e9419"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1239, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}