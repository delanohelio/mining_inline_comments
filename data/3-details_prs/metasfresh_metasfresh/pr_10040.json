{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDkxMTUw", "number": 10040, "title": "Automatically set `HU.BestBeforeDate` and `HU.LotNr` attributes during Manfacturing", "bodyText": "#10022", "createdAt": "2020-09-30T12:58:49Z", "url": "https://github.com/metasfresh/metasfresh/pull/10040", "merged": true, "mergeCommit": {"oid": "f32f3fadbea6485ea35c4a8acc49bea0e614fddc"}, "closed": true, "closedAt": "2020-10-01T12:46:51Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOLajYAFqTUwMDA0MDc5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOMYr8AH2gAyNDk1NDkxMTUwOmIzODg4M2I4NTMzYTM2ZWY4ZGE3NDg4MmM0ZGFkNjE0NzkwN2NjMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQwNzk2", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500040796", "createdAt": "2020-10-01T06:30:08Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMDowOFrOHa8J0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMDowOFrOHa8J0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMDU3Ng==", "bodyText": "introduce IHUAttributesBL.isAutomaticallySetLotNumber() and isAutomaticallySetBestBeforeDate().\navoid having public sysconfig names.", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498010576", "createdAt": "2020-10-01T06:30:08Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/attribute/HUAttributeConstants.java", "diffHunk": "@@ -87,4 +77,7 @@ public static String sqlBestBeforeDate(final String huIdColumnName)\n \t\tCheck.assumeNotEmpty(huIdColumnName, \"huIdColumnName is not empty\");\n \t\treturn \"\\\"de.metas.handlingunits\\\".huBestBeforeDate(\" + huIdColumnName + \")\";\n \t}\n+\n+\tpublic static final String SYSCONFIG_AutomaticallySetLotNumber = \"de.metas.handlingunits.attributes.AutomaticallySetLotNumber\";\n+\tpublic static final String SYSCONFIG_AutomaticallySetBestBeforeDate = \"de.metas.handlingunits.attributes.AutomaticallySetBestBeforeDate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQxODYw", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500041860", "createdAt": "2020-10-01T06:32:18Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMjoxOFrOHa8M-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMjoxOFrOHa8M-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTM4NA==", "bodyText": "introduce a new method, e.g. updateAttributes(hu...) which calls both methods.", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498011384", "createdAt": "2020-10-01T06:32:18Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -334,17 +338,8 @@ private void updateReceivedHUs(\n \t\t\t{\n \t\t\t\tfinal IAttributeStorage huAttributes = huAttributeStorageFactory.getAttributeStorage(hu);\n \n-\t\t\t\tif (lotNumber != null\n-\t\t\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))\n-\t\t\t\t{\n-\t\t\t\t\thuAttributes.setValue(AttributeConstants.ATTR_LotNumber, lotNumber);\n-\t\t\t\t}\n-\n-\t\t\t\tif (bestBeforeDate != null\n-\t\t\t\t\t\t&& huAttributes.hasAttribute(AttributeConstants.ATTR_BestBeforeDate))\n-\t\t\t\t{\n-\t\t\t\t\thuAttributes.setValue(AttributeConstants.ATTR_BestBeforeDate, bestBeforeDate);\n-\t\t\t\t}\n+\t\t\t\tsetLotNumberAttribute(hu, huAttributes);\n+\t\t\t\tsetBestBeforeDateAttribute(huAttributes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQxOTc2", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500041976", "createdAt": "2020-10-01T06:32:34Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMjozNFrOHa8NUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozMjozNFrOHa8NUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMTQ3NA==", "bodyText": "use IHUAttributesBL.isAuto....", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498011474", "createdAt": "2020-10-01T06:32:34Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -355,6 +350,33 @@ private void updateReceivedHUs(\n \t\tsetAssignedHUs(hus);\n \t}\n \n+\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n+\t{\n+\t\tfinal String lotNumberToSet;\n+\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQyODE5", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500042819", "createdAt": "2020-10-01T06:34:26Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozNDoyNlrOHa8Pvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozNDoyNlrOHa8Pvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMjA5NQ==", "bodyText": "minor: move this as first check", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498012095", "createdAt": "2020-10-01T06:34:26Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/pporder/api/impl/AbstractPPOrderReceiptHUProducer.java", "diffHunk": "@@ -355,6 +350,33 @@ private void updateReceivedHUs(\n \t\tsetAssignedHUs(hus);\n \t}\n \n+\tprivate void setLotNumberAttribute(final I_M_HU hu, final IAttributeStorage huAttributes)\n+\t{\n+\t\tfinal String lotNumberToSet;\n+\t\tif (Services.get(ISysConfigBL.class).getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetLotNumber, false))\n+\t\t{\n+\t\t\tlotNumberToSet = CoalesceUtil.coalesce(lotNumber, hu.getValue());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tlotNumberToSet = lotNumber;\n+\t\t}\n+\n+\t\tif (huAttributes.hasAttribute(AttributeConstants.ATTR_LotNumber))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQ0NTM4", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500044538", "createdAt": "2020-10-01T06:37:54Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozNzo1NFrOHa8VGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozNzo1NFrOHa8VGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzQ2Nw==", "bodyText": "introduce only one method which calls both", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013467", "createdAt": "2020-10-01T06:37:54Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveCUs.java", "diffHunk": "@@ -206,6 +205,10 @@ private I_M_HU createPlanningVHU(final I_M_ReceiptSchedule receiptSchedule)\n \t\t\tthrow new HUException(\"One and only one VHU was expected but we got: \" + hus);\n \t\t}\n \t\tfinal I_M_HU vhu = hus.get(0);\n+\n+\t\tsetAttributeBBD(vhu, receiptSchedule);\n+\t\tsetAttributeLotNumber(vhu);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQ0NzM4", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500044738", "createdAt": "2020-10-01T06:38:19Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozODoyMFrOHa8VqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozODoyMFrOHa8VqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzYwOQ==", "bodyText": "introduce one method which calls both", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013609", "createdAt": "2020-10-01T06:38:20Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/handlingunits/process/WEBUI_M_ReceiptSchedule_ReceiveHUs_Base.java", "diffHunk": "@@ -148,6 +149,11 @@ protected final String doIt() throws Exception\n \t\t//\n \t\t// Generate the HUs\n \t\tfinal List<I_M_HU> hus = huGenerator.generateWithinOwnTransaction();\n+\n+\t\thus.forEach(hu -> {\n+\t\t\tsetAttributeBBD(hu, receiptSchedule);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQ1MTI2", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500045126", "createdAt": "2020-10-01T06:39:06Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozOTowNlrOHa8W0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozOTowNlrOHa8W0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzkwNw==", "bodyText": "use IHUAttributeBL.isAuto...", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498013907", "createdAt": "2020-10-01T06:39:06Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java", "diffHunk": "@@ -228,7 +232,32 @@ protected void postProcess(boolean success)\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\t@Nullable\n+\tLocalDate computeBestBeforeDate()\n+\t{\n+\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMDQ1Njkz", "url": "https://github.com/metasfresh/metasfresh/pull/10040#pullrequestreview-500045693", "createdAt": "2020-10-01T06:40:14Z", "commit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0MDoxNFrOHa8YpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjo0MDoxNFrOHa8YpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxNDM3Mg==", "bodyText": "eager make this check", "url": "https://github.com/metasfresh/metasfresh/pull/10040#discussion_r498014372", "createdAt": "2020-10-01T06:40:14Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_Receipt.java", "diffHunk": "@@ -228,7 +232,32 @@ protected void postProcess(boolean success)\n \t\tgetViewsRepo().notifyRecordChanged(I_PP_Order.Table_Name, ppOrderLinesView.getPpOrderId().getRepoId());\n \t}\n \n-\tprivate final IPPOrderReceiptHUProducer newReceiptCandidatesProducer()\n+\t@Nullable\n+\tLocalDate computeBestBeforeDate()\n+\t{\n+\t\tif (sysConfigBL.getBooleanValue(HUAttributeConstants.SYSCONFIG_AutomaticallySetBestBeforeDate, false))\n+\t\t{\n+\t\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n+\t\t\tfinal I_PP_Order ppOrderPO = huPPOrderBL.getById(row.getOrderId());\n+\t\t\tfinal LocalDate datePromised = TimeUtil.asLocalDate(ppOrderPO.getDatePromised());\n+\n+\t\t\tfinal ProductId productId = row.getProductId();\n+\t\t\tfinal int guaranteeDaysMin = productDAO.getProductGuaranteeDaysMinFallbackProductCategory(productId);\n+\n+\t\t\tif (guaranteeDaysMin <= 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c"}, "originalPosition": 164}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c92d7f4eaaa36964ab9f252097c197d1e633dc1c", "committedDate": "2020-09-30T12:55:24Z", "message": "Add sysconfigs\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}, "afterCommit": {"oid": "30b45641323925a0a24d6e4bf87bf4e070255ed6", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/30b45641323925a0a24d6e4bf87bf4e070255ed6", "committedDate": "2020-10-01T06:49:31Z", "message": "Add sysconfigs\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5073962ec1781d66469463fc533553b4907ac7", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/7a5073962ec1781d66469463fc533553b4907ac7", "committedDate": "2020-10-01T07:09:39Z", "message": "Add `IProductDAO.getProductGuaranteeDaysMinFallbackProductCategory`\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa4ef525bd48e791052b36a5858c363b501de62f", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fa4ef525bd48e791052b36a5858c363b501de62f", "committedDate": "2020-10-01T07:09:39Z", "message": "Refactoring + cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd38df733fb062d8cb5fbb1716c0b29eb0d94ee", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/7fd38df733fb062d8cb5fbb1716c0b29eb0d94ee", "committedDate": "2020-10-01T07:09:39Z", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab14c96d43882f0bdc4c5b9b5dacf17241cf9870", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ab14c96d43882f0bdc4c5b9b5dacf17241cf9870", "committedDate": "2020-10-01T07:09:39Z", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb9c9b4e2b3310fb5deac836cd0ff5c1edb580c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fcb9c9b4e2b3310fb5deac836cd0ff5c1edb580c", "committedDate": "2020-10-01T07:09:39Z", "message": "Set BBD to HU\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aec31c901e1e80cc16f4005d9d1808a94ace95e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/9aec31c901e1e80cc16f4005d9d1808a94ace95e", "committedDate": "2020-10-01T07:09:39Z", "message": "Set LotNr attribute to HU\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "100e6d8dd0e849d770bf8b396c347edf39e713da", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/100e6d8dd0e849d770bf8b396c347edf39e713da", "committedDate": "2020-10-01T07:09:39Z", "message": "Indentation\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beb64c781bf46e4c340ff4be2520c8a297175dfa", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/beb64c781bf46e4c340ff4be2520c8a297175dfa", "committedDate": "2020-10-01T07:09:40Z", "message": "Add 2 sysconfigs for automatically setting BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a2cfc2a57a66fbf19676f50fc824239a042b715", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6a2cfc2a57a66fbf19676f50fc824239a042b715", "committedDate": "2020-10-01T07:09:40Z", "message": "Receiving flow: add functions for automatically setting BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "982e961bab1a147ab357cd8ca2fffb5b6a754a9b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/982e961bab1a147ab357cd8ca2fffb5b6a754a9b", "committedDate": "2020-10-01T07:09:40Z", "message": "Receiving flow: set BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2490193ac9d5d4a9639f05e142f7744de49d53e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e2490193ac9d5d4a9639f05e142f7744de49d53e", "committedDate": "2020-10-01T07:09:40Z", "message": "Manufacturing flow: set BBD and LotNumber\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42d22b2497187e913c4156bf77526fdd1c84e414", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/42d22b2497187e913c4156bf77526fdd1c84e414", "committedDate": "2020-10-01T07:09:40Z", "message": "Bugfix\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e47cf87d024503305144b8a1f53ea90a6e130769", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e47cf87d024503305144b8a1f53ea90a6e130769", "committedDate": "2020-10-01T07:09:40Z", "message": "Add sysconfigs\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "committedDate": "2020-10-01T07:09:40Z", "message": "Fixes after \ud83c\udf52 / copy\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de6e483bf7e46e099998cb60d74675f3f48a95ce", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/de6e483bf7e46e099998cb60d74675f3f48a95ce", "committedDate": "2020-10-01T07:07:47Z", "message": "Fixes after \ud83c\udf52 / copy\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}, "afterCommit": {"oid": "ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ed65329e604b5e1c18f898dfdaadf89f4dbdbd9d", "committedDate": "2020-10-01T07:09:40Z", "message": "Fixes after \ud83c\udf52 / copy\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b38883b8533a36ef8da74882c4dad6147907cc21", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b38883b8533a36ef8da74882c4dad6147907cc21", "committedDate": "2020-10-01T07:38:00Z", "message": "Cleanup and refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/10022"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3084, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}