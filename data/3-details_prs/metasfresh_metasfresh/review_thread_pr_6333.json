{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjQ4NTYw", "number": 6333, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNjo0OVrODmxgtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1NTo0MFrODmytFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTgzNjY4OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/location/impl/AddressBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzowNjo0OVrOF0Yh0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzoxMToxM1rOF0Ytew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MjE0Nw==", "bodyText": "BP's language is not mandatory....", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390472147", "createdAt": "2020-03-10T17:06:49Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/location/impl/AddressBuilder.java", "diffHunk": "@@ -648,15 +655,19 @@ else if (\"CR\".equals(token))\n \t * @param trxName\n \t * @return\n \t */\n-\tprivate String buildUserBlock(final Properties ctx, final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final boolean isPartnerCompany, final String trxName)\n+\tprivate String buildUserBlock(@NonNull final org.compiere.model.I_C_BPartner bPartner,  final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final String trxName)\n \t{\n-\t\tString userGreeting = \"\";\n+\t\tfinal Properties ctx = InterfaceWrapperHelper.getCtx(bPartner);\n+\t\tfinal boolean isPartnerCompany = bPartner.isCompany();\n+\t\tfinal Language language = Language.asLanguage(bPartner.getAD_Language());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "540eb9fdaf5404481e55673bcc1bb6696a44b540"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MzkxMg==", "bodyText": "Yes! good point!", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390473912", "createdAt": "2020-03-10T17:09:22Z", "author": {"login": "cristinamghita"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/location/impl/AddressBuilder.java", "diffHunk": "@@ -648,15 +655,19 @@ else if (\"CR\".equals(token))\n \t * @param trxName\n \t * @return\n \t */\n-\tprivate String buildUserBlock(final Properties ctx, final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final boolean isPartnerCompany, final String trxName)\n+\tprivate String buildUserBlock(@NonNull final org.compiere.model.I_C_BPartner bPartner,  final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final String trxName)\n \t{\n-\t\tString userGreeting = \"\";\n+\t\tfinal Properties ctx = InterfaceWrapperHelper.getCtx(bPartner);\n+\t\tfinal boolean isPartnerCompany = bPartner.isCompany();\n+\t\tfinal Language language = Language.asLanguage(bPartner.getAD_Language());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MjE0Nw=="}, "originalCommit": {"oid": "540eb9fdaf5404481e55673bcc1bb6696a44b540"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3NTEzMQ==", "bodyText": "@teosarca actually no; is fine because  de.metas.i18n.Language.asLanguage(String) returns null if language is null; Just remembered that I checked that.", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390475131", "createdAt": "2020-03-10T17:11:13Z", "author": {"login": "cristinamghita"}, "path": "de.metas.adempiere.adempiere/base/src/main/java/de/metas/location/impl/AddressBuilder.java", "diffHunk": "@@ -648,15 +655,19 @@ else if (\"CR\".equals(token))\n \t * @param trxName\n \t * @return\n \t */\n-\tprivate String buildUserBlock(final Properties ctx, final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final boolean isPartnerCompany, final String trxName)\n+\tprivate String buildUserBlock(@NonNull final org.compiere.model.I_C_BPartner bPartner,  final boolean isLocal, final I_AD_User user, final String bPartnerBlock, final String trxName)\n \t{\n-\t\tString userGreeting = \"\";\n+\t\tfinal Properties ctx = InterfaceWrapperHelper.getCtx(bPartner);\n+\t\tfinal boolean isPartnerCompany = bPartner.isCompany();\n+\t\tfinal Language language = Language.asLanguage(bPartner.getAD_Language());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ3MjE0Nw=="}, "originalCommit": {"oid": "540eb9fdaf5404481e55673bcc1bb6696a44b540"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDAyMzM4OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1MzozN1rOF0aZYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwOTo0MTo1NlrOF0vfjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwMjc1NQ==", "bodyText": "Don't use SpringRunner. Just use org.compiere.SpringContextHolder.registerJUnitBean(T) to register ur bean (in ur case, register the GreetingRepository).\nMore, when touching a junit4 test, pls convert it to junit5.", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390502755", "createdAt": "2020-03-10T17:53:37Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "diffHunk": "@@ -14,14 +14,23 @@\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.junit4.SpringRunner;\n \n+import de.metas.ShutdownListener;\n+import de.metas.StartupListener;\n import de.metas.adempiere.model.I_AD_User;\n import de.metas.bpartner.service.IBPartnerBL;\n import de.metas.bpartner.service.impl.BPartnerBL;\n+import de.metas.greeting.GreetingRepository;\n import de.metas.interfaces.I_C_BPartner;\n import de.metas.organization.OrgId;\n import de.metas.user.UserRepository;\n+import lombok.Builder;\n \n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = { StartupListener.class, ShutdownListener.class, GreetingRepository.class })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgwNDU1NA==", "bodyText": "@teosarca then, can we change the message from here?\norg.compiere.SpringContextHolder.throwExceptionIfNull(ApplicationContext)\nIt is not obsolete? I did changes reading that message.", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390804554", "createdAt": "2020-03-11T08:19:46Z", "author": {"login": "cristinamghita"}, "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "diffHunk": "@@ -14,14 +14,23 @@\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.junit4.SpringRunner;\n \n+import de.metas.ShutdownListener;\n+import de.metas.StartupListener;\n import de.metas.adempiere.model.I_AD_User;\n import de.metas.bpartner.service.IBPartnerBL;\n import de.metas.bpartner.service.impl.BPartnerBL;\n+import de.metas.greeting.GreetingRepository;\n import de.metas.interfaces.I_C_BPartner;\n import de.metas.organization.OrgId;\n import de.metas.user.UserRepository;\n+import lombok.Builder;\n \n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = { StartupListener.class, ShutdownListener.class, GreetingRepository.class })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwMjc1NQ=="}, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg0ODM5OA==", "bodyText": "yes, he have to change the message. it's totally obsolete.", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390848398", "createdAt": "2020-03-11T09:41:56Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "diffHunk": "@@ -14,14 +14,23 @@\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.junit4.SpringRunner;\n \n+import de.metas.ShutdownListener;\n+import de.metas.StartupListener;\n import de.metas.adempiere.model.I_AD_User;\n import de.metas.bpartner.service.IBPartnerBL;\n import de.metas.bpartner.service.impl.BPartnerBL;\n+import de.metas.greeting.GreetingRepository;\n import de.metas.interfaces.I_C_BPartner;\n import de.metas.organization.OrgId;\n import de.metas.user.UserRepository;\n+import lombok.Builder;\n \n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = { StartupListener.class, ShutdownListener.class, GreetingRepository.class })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwMjc1NQ=="}, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDAyNDg3OnYy", "diffSide": "RIGHT", "path": "de.metas.business.rest-api-impl/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1Mzo1NlrOF0aaRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1Mzo1NlrOF0aaRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwMjk4MQ==", "bodyText": "remove it", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390502981", "createdAt": "2020-03-10T17:53:56Z", "author": {"login": "teosarca"}, "path": "de.metas.business.rest-api-impl/pom.xml", "diffHunk": "@@ -98,5 +98,10 @@\n             <scope>test</scope>\n         </dependency>\n \n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDAyODA1OnYy", "diffSide": "RIGHT", "path": "de.metas.business.rest-api-impl/src/test/java/de/metas/rest_api/bpartner/impl/BpartnerRestControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1NDozMVrOF0acJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1NDozMVrOF0acJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwMzQ2MQ==", "bodyText": "same, avoid SpringRunner and SpringBootTest.", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390503461", "createdAt": "2020-03-10T17:54:31Z", "author": {"login": "teosarca"}, "path": "de.metas.business.rest-api-impl/src/test/java/de/metas/rest_api/bpartner/impl/BpartnerRestControllerTest.java", "diffHunk": "@@ -121,6 +126,8 @@\n  * #L%\n  */\n \n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = { StartupListener.class, ShutdownListener.class, GreetingRepository.class })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDAzMjIzOnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1NTo0MFrOF0ae7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzo1NTo0MFrOF0ae7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwNDE3Mw==", "bodyText": "in this case, it's highly advisable to set builderClassName=\"BPartnerBuilder\".", "url": "https://github.com/metasfresh/metasfresh/pull/6333#discussion_r390504173", "createdAt": "2020-03-10T17:55:40Z", "author": {"login": "teosarca"}, "path": "de.metas.adempiere.adempiere/base/src/test/java/de/metas/location/impl/AddressBuilderTest.java", "diffHunk": "@@ -732,13 +793,15 @@ private I_C_BPartner_Location prepareBPLocation(final I_C_Location location)\n \t\treturn bpLoc;\n \t}\n \n-\tprivate I_C_BPartner prepareBPartner(final String name, final String name2, final boolean isCompany)\n+\t@Builder(builderMethodName = \"builderBPartner\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5f28d6858cbebe3030fd596197f361e1d6ee2"}, "originalPosition": 187}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1427, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}