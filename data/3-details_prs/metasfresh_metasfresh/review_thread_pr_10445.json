{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMjkxMzc1", "number": 10445, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNTowNVrOFFoADw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNTowNVrOFFoADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDQyNTc1OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.material/dispo-service/src/main/java/de/metas/material/dispo/service/event/handler/TransactionEventHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNTowNVrOIGOb7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDozNTowNVrOIGOb7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5ODg5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t// private List<Candidate> prepareCandidateForInventory(@NonNull final AbstractTransactionEvent event)\n          \n          \n            \n            \t// {\n          \n          \n            \n            \t// \tfinal List<Candidate> candidates;\n          \n          \n            \n            \t// \tfinal TransactionDetail transactionDetailOfEvent = createTransactionDetail(event);\n          \n          \n            \n            \t//\n          \n          \n            \n            \t// \tfinal CandidatesQuery query = CandidatesQuery.builder()\n          \n          \n            \n            \t// \t\t\t.transactionDetail(TransactionDetail.forQuery(event.getTransactionId()))\n          \n          \n            \n            \t// \t\t\t.build();\n          \n          \n            \n            \t// \tfinal Candidate existingCandidate = candidateRepository.retrieveLatestMatchOrNull(query);\n          \n          \n            \n            \t// \t// TODO continue here\n          \n          \n            \n            \t// \treturn null;\n          \n          \n            \n            \t// }", "url": "https://github.com/metasfresh/metasfresh/pull/10445#discussion_r543398892", "createdAt": "2020-12-15T14:35:05Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.material/dispo-service/src/main/java/de/metas/material/dispo/service/event/handler/TransactionEventHandler.java", "diffHunk": "@@ -501,6 +508,19 @@ else if (event instanceof TransactionDeletedEvent)\n \t\tthrow fail(\"Unexpected subclass of AbstractTransactionEvent; event={}\", event);\n \t}\n \n+\t// private List<Candidate> prepareCandidateForInventory(@NonNull final AbstractTransactionEvent event)\n+\t// {\n+\t// \tfinal List<Candidate> candidates;\n+\t// \tfinal TransactionDetail transactionDetailOfEvent = createTransactionDetail(event);\n+\t//\n+\t// \tfinal CandidatesQuery query = CandidatesQuery.builder()\n+\t// \t\t\t.transactionDetail(TransactionDetail.forQuery(event.getTransactionId()))\n+\t// \t\t\t.build();\n+\t// \tfinal Candidate existingCandidate = candidateRepository.retrieveLatestMatchOrNull(query);\n+\t// \t// TODO continue here\n+\t// \treturn null;\n+\t// }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc86e3ac83cc008ec8e9cb635632f82338ceaf0b"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1113, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}