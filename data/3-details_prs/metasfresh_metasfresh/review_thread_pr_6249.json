{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTg4ODc5", "number": 6249, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo0NDozMlrODilSCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo0NzowOVrODilUNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTg5MDAxOnYy", "diffSide": "RIGHT", "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/BusinessPartnerAccountSheetReport.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo0NDozMlrOFt6Sig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo1MDoxOVrOFt7lcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NTI1OA==", "bodyText": "please add this as a comment to the function; it's more accessible; feel free to add more infos. you can also add the public issue's URL there", "url": "https://github.com/metasfresh/metasfresh/pull/6249#discussion_r383685258", "createdAt": "2020-02-25T06:44:32Z", "author": {"login": "metas-ts"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/BusinessPartnerAccountSheetReport.sql", "diffHunk": "@@ -0,0 +1,250 @@\n+DROP FUNCTION IF EXISTS BusinessPartnerAccountSheetReport(p_c_bpartner_id numeric, p_dateFrom date, p_dateTo date, p_ad_client_id numeric, p_ad_org_id numeric, p_isSoTrx TEXT, p_ad_language text);\n+\n+CREATE OR REPLACE FUNCTION BusinessPartnerAccountSheetReport(p_c_bpartner_id numeric,\n+                                                             p_dateFrom      date,\n+                                                             p_dateTo        date,\n+                                                             p_ad_client_id  numeric,\n+                                                             p_ad_org_id     numeric = NULL,\n+                                                             p_isSoTrx       TEXT = 'Y',\n+                                                             p_ad_language   text = 'en_US')\n+    RETURNS table\n+            (\n+                dateAcct         DATE,\n+                DocumentType     TEXT,\n+                documentno       TEXT,\n+                beginningBalance NUMERIC,\n+                amount           NUMERIC,\n+                endingBalance    NUMERIC,\n+                currencyCode     TEXT,\n+                description      TEXT\n+            )\n+AS\n+$BODY$\n+DECLARE\n+    v_time timestamp;\n+    v_temp numeric;\n+\n+BEGIN\n+    v_time := logDebug('start');\n+\n+    DROP TABLE IF EXISTS temp_BusinessPartnerAccountSheetReport;\n+    CREATE TEMPORARY TABLE temp_BusinessPartnerAccountSheetReport\n+    (\n+        beginningBalance       NUMERIC,\n+        amount                 NUMERIC,\n+        endingBalance          NUMERIC,\n+        dateacct               date,\n+        description            TEXT,\n+        c_doctype_id           NUMERIC,\n+        documentno             TEXT,\n+        created                TIMESTAMP,\n+        c_currency_id_original NUMERIC,\n+        targetCurrencyCode     text,\n+        rowid                  NUMERIC,\n+        ad_org_id              NUMERIC,\n+        doctype                text\n+    );\n+    v_time := logDebug('created empty temporary table', v_time);\n+\n+\n+    --\n+    -- insert working data\n+    WITH invoicesAndPaymentsInPeriod AS\n+             (\n+                 SELECT --\n+                        0                                      beginningBalance,\n+                        i.grandtotal                           amount,\n+                        0                                      endingBalance,\n+                        i.dateacct                             dateacct,\n+                        COALESCE(i.poreference, i.description) description,\n+                        i.c_doctype_id                         c_doctype_id,\n+                        i.documentno                           documentno,\n+                        i.created                              created,\n+                        i.c_currency_id                        c_currency_id,\n+                        i.ad_org_id                            ad_org_id\n+                 FROM c_invoice i\n+                 WHERE TRUE\n+                   AND i.c_bpartner_id = p_c_bpartner_id\n+                   AND i.dateacct >= p_dateFrom\n+                   AND i.dateacct <= p_dateTo\n+                   AND i.issotrx = p_isSoTrx\n+                   AND i.docstatus IN ('CO', 'CL')\n+                   AND (COALESCE(p_ad_org_id, 0) <= 0 OR i.ad_org_id = p_ad_org_id)\n+                 UNION ALL\n+                 SELECT --\n+                        0               beginningBalance,\n+                        p.payamt        amount,\n+                        0               endingBalance,\n+                        p.dateacct      dateacct,\n+                        p.description   description,\n+                        p.c_doctype_id  c_doctype_id,\n+                        p.documentno    documentno,\n+                        p.created       created,\n+                        p.c_currency_id c_currency_id,\n+                        p.ad_org_id     ad_org_id\n+                 FROM c_payment p\n+                 WHERE TRUE\n+                   AND p.c_bpartner_id = p_c_bpartner_id\n+                   AND p.dateacct >= p_dateFrom\n+                   AND p.dateacct <= p_dateTo\n+                   AND p.isreceipt = p_isSoTrx\n+                   AND p.docstatus IN ('CO', 'CL')\n+                   AND (COALESCE(p_ad_org_id, 0) <= 0 OR p.ad_org_id = p_ad_org_id)\n+             )\n+    INSERT\n+    INTO temp_BusinessPartnerAccountSheetReport(beginningBalance,\n+                                                amount,\n+                                                endingBalance,\n+                                                dateacct,\n+                                                description,\n+                                                c_doctype_id,\n+                                                documentno,\n+                                                created,\n+                                                c_currency_id_original,\n+                                                rowid,\n+                                                ad_org_id,\n+                                                targetCurrencyCode,\n+                                                doctype)\n+    SELECT--\n+          i.beginningBalance,\n+          i.amount,\n+          i.endingBalance,\n+          i.dateacct,\n+          i.description,\n+          i.c_doctype_id,\n+          i.documentno,\n+          i.created,\n+          i.c_currency_id,\n+          row_number() OVER (),\n+          i.ad_org_id,\n+          (SELECT iso_code\n+           FROM c_currency c\n+                    INNER JOIN c_acctschema accts ON c.c_currency_id = accts.c_currency_id\n+                    INNER JOIN ad_clientinfo ac ON accts.c_acctschema_id = ac.c_acctschema1_id\n+           LIMIT 1)  targetCurrencyCode,\n+          (SELECT dtt.name\n+           FROM c_doctype dt\n+                    INNER JOIN c_doctype_trl dtt ON dt.c_doctype_id = dtt.c_doctype_id\n+           WHERE dtt.ad_language = p_ad_language\n+             AND i.c_doctype_id = dt.c_doctype_id\n+          )::text AS docType\n+    FROM invoicesAndPaymentsInPeriod i;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('inserted invoices and payments: ' || v_temp || ' records', v_time);\n+\n+\n+    --\n+    -- Update the amount to be in the base currency\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET amount = (SELECT currencybase(t.amount, t.c_currency_id_original, t.dateacct, p_ad_client_id, t.ad_org_id));\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update amount to base currency', v_time);\n+\n+\n+    --\n+    -- Update the amount according to document base type\n+    WITH correctAmounts AS\n+             (\n+                 SELECT --\n+                        t.rowid,\n+                        (CASE\n+                             WHEN dt.docbasetype IN ('ARC', 'APC') THEN -1 * t.amount\n+                                                                   ELSE t.amount\n+                         END) amount\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+                          INNER JOIN c_doctype dt ON t.c_doctype_id = dt.c_doctype_id\n+             )\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET amount = c.amount\n+    FROM correctAmounts c\n+    WHERE c.rowid = t.rowid;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update amount by document type', v_time);\n+\n+\n+    --\n+    -- Update the beginning and end balances with the initial \"Open Invoice Amount to Date\"\n+    UPDATE temp_BusinessPartnerAccountSheetReport\n+    SET beginningBalance = t.OpenInvoiceAmountToDate,\n+        endingBalance    = t.OpenInvoiceAmountToDate\n+    FROM (\n+             SELECT getBPOpenAmtToDate(p_ad_client_id,\n+                                       p_ad_org_id,\n+                                       (p_dateFrom - INTERVAL '1 days')::date,\n+                                       p_c_bpartner_id,\n+                                       (SELECT c.c_currency_id\n+                                        FROM c_currency c\n+                                                 INNER JOIN c_acctschema accts ON c.c_currency_id = accts.c_currency_id\n+                                                 INNER JOIN ad_clientinfo ac ON accts.c_acctschema_id = ac.c_acctschema1_id\n+                                        LIMIT 1),\n+                                       'Y'::text,\n+                                       p_isSoTrx) OpenInvoiceAmountToDate\n+         ) t;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update beginning and end balance with \"BP Open Invoices Amount to Date\"', v_time);\n+\n+\n+    --\n+    -- Compute rolling sum\n+    WITH endingBalanceSum AS\n+             (\n+                 SELECT --\n+                        t.rowid,\n+                        t.endingBalance\n+                            + sum(t.amount) OVER ( ORDER BY t.dateacct, t.created, t.documentno ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) endingBalance,\n+                        t.amount                                                                                                                   currentAmount\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+             ),\n+         finalData AS\n+             (\n+                 SELECT --\n+                        ebs.rowid,\n+                        ebs.endingBalance,\n+                        ebs.endingBalance - ebs.currentAmount beginningBalance\n+                 FROM endingBalanceSum ebs\n+             )\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET endingBalance    = d.endingBalance,\n+        beginningBalance = d.beginningBalance\n+    FROM finalData d\n+    WHERE t.rowid = d.rowid;\n+\n+    v_time := logDebug('finished calculating rolling sum', v_time);\n+\n+\n+    --\n+    -- return the data\n+    RETURN QUERY SELECT --\n+                        t.dateAcct,\n+                        t.doctype,\n+                        t.documentno,\n+                        t.beginningBalance,\n+                        t.amount,\n+                        t.endingBalance,\n+                        t.targetCurrencyCode,\n+                        t.description\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+                 ORDER BY t.dateacct, t.created, t.documentno;\n+END;\n+$BODY$\n+    LANGUAGE plpgsql\n+    VOLATILE;\n+\n+\n+/*\n+How to run:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9535e0796f846bc0a682b3cb7f8cd2d9c9e99ba6"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjQ4Mg==", "bodyText": "done.", "url": "https://github.com/metasfresh/metasfresh/pull/6249#discussion_r383706482", "createdAt": "2020-02-25T07:50:19Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.acct.base/src/main/sql/postgresql/ddl/functions/BusinessPartnerAccountSheetReport.sql", "diffHunk": "@@ -0,0 +1,250 @@\n+DROP FUNCTION IF EXISTS BusinessPartnerAccountSheetReport(p_c_bpartner_id numeric, p_dateFrom date, p_dateTo date, p_ad_client_id numeric, p_ad_org_id numeric, p_isSoTrx TEXT, p_ad_language text);\n+\n+CREATE OR REPLACE FUNCTION BusinessPartnerAccountSheetReport(p_c_bpartner_id numeric,\n+                                                             p_dateFrom      date,\n+                                                             p_dateTo        date,\n+                                                             p_ad_client_id  numeric,\n+                                                             p_ad_org_id     numeric = NULL,\n+                                                             p_isSoTrx       TEXT = 'Y',\n+                                                             p_ad_language   text = 'en_US')\n+    RETURNS table\n+            (\n+                dateAcct         DATE,\n+                DocumentType     TEXT,\n+                documentno       TEXT,\n+                beginningBalance NUMERIC,\n+                amount           NUMERIC,\n+                endingBalance    NUMERIC,\n+                currencyCode     TEXT,\n+                description      TEXT\n+            )\n+AS\n+$BODY$\n+DECLARE\n+    v_time timestamp;\n+    v_temp numeric;\n+\n+BEGIN\n+    v_time := logDebug('start');\n+\n+    DROP TABLE IF EXISTS temp_BusinessPartnerAccountSheetReport;\n+    CREATE TEMPORARY TABLE temp_BusinessPartnerAccountSheetReport\n+    (\n+        beginningBalance       NUMERIC,\n+        amount                 NUMERIC,\n+        endingBalance          NUMERIC,\n+        dateacct               date,\n+        description            TEXT,\n+        c_doctype_id           NUMERIC,\n+        documentno             TEXT,\n+        created                TIMESTAMP,\n+        c_currency_id_original NUMERIC,\n+        targetCurrencyCode     text,\n+        rowid                  NUMERIC,\n+        ad_org_id              NUMERIC,\n+        doctype                text\n+    );\n+    v_time := logDebug('created empty temporary table', v_time);\n+\n+\n+    --\n+    -- insert working data\n+    WITH invoicesAndPaymentsInPeriod AS\n+             (\n+                 SELECT --\n+                        0                                      beginningBalance,\n+                        i.grandtotal                           amount,\n+                        0                                      endingBalance,\n+                        i.dateacct                             dateacct,\n+                        COALESCE(i.poreference, i.description) description,\n+                        i.c_doctype_id                         c_doctype_id,\n+                        i.documentno                           documentno,\n+                        i.created                              created,\n+                        i.c_currency_id                        c_currency_id,\n+                        i.ad_org_id                            ad_org_id\n+                 FROM c_invoice i\n+                 WHERE TRUE\n+                   AND i.c_bpartner_id = p_c_bpartner_id\n+                   AND i.dateacct >= p_dateFrom\n+                   AND i.dateacct <= p_dateTo\n+                   AND i.issotrx = p_isSoTrx\n+                   AND i.docstatus IN ('CO', 'CL')\n+                   AND (COALESCE(p_ad_org_id, 0) <= 0 OR i.ad_org_id = p_ad_org_id)\n+                 UNION ALL\n+                 SELECT --\n+                        0               beginningBalance,\n+                        p.payamt        amount,\n+                        0               endingBalance,\n+                        p.dateacct      dateacct,\n+                        p.description   description,\n+                        p.c_doctype_id  c_doctype_id,\n+                        p.documentno    documentno,\n+                        p.created       created,\n+                        p.c_currency_id c_currency_id,\n+                        p.ad_org_id     ad_org_id\n+                 FROM c_payment p\n+                 WHERE TRUE\n+                   AND p.c_bpartner_id = p_c_bpartner_id\n+                   AND p.dateacct >= p_dateFrom\n+                   AND p.dateacct <= p_dateTo\n+                   AND p.isreceipt = p_isSoTrx\n+                   AND p.docstatus IN ('CO', 'CL')\n+                   AND (COALESCE(p_ad_org_id, 0) <= 0 OR p.ad_org_id = p_ad_org_id)\n+             )\n+    INSERT\n+    INTO temp_BusinessPartnerAccountSheetReport(beginningBalance,\n+                                                amount,\n+                                                endingBalance,\n+                                                dateacct,\n+                                                description,\n+                                                c_doctype_id,\n+                                                documentno,\n+                                                created,\n+                                                c_currency_id_original,\n+                                                rowid,\n+                                                ad_org_id,\n+                                                targetCurrencyCode,\n+                                                doctype)\n+    SELECT--\n+          i.beginningBalance,\n+          i.amount,\n+          i.endingBalance,\n+          i.dateacct,\n+          i.description,\n+          i.c_doctype_id,\n+          i.documentno,\n+          i.created,\n+          i.c_currency_id,\n+          row_number() OVER (),\n+          i.ad_org_id,\n+          (SELECT iso_code\n+           FROM c_currency c\n+                    INNER JOIN c_acctschema accts ON c.c_currency_id = accts.c_currency_id\n+                    INNER JOIN ad_clientinfo ac ON accts.c_acctschema_id = ac.c_acctschema1_id\n+           LIMIT 1)  targetCurrencyCode,\n+          (SELECT dtt.name\n+           FROM c_doctype dt\n+                    INNER JOIN c_doctype_trl dtt ON dt.c_doctype_id = dtt.c_doctype_id\n+           WHERE dtt.ad_language = p_ad_language\n+             AND i.c_doctype_id = dt.c_doctype_id\n+          )::text AS docType\n+    FROM invoicesAndPaymentsInPeriod i;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('inserted invoices and payments: ' || v_temp || ' records', v_time);\n+\n+\n+    --\n+    -- Update the amount to be in the base currency\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET amount = (SELECT currencybase(t.amount, t.c_currency_id_original, t.dateacct, p_ad_client_id, t.ad_org_id));\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update amount to base currency', v_time);\n+\n+\n+    --\n+    -- Update the amount according to document base type\n+    WITH correctAmounts AS\n+             (\n+                 SELECT --\n+                        t.rowid,\n+                        (CASE\n+                             WHEN dt.docbasetype IN ('ARC', 'APC') THEN -1 * t.amount\n+                                                                   ELSE t.amount\n+                         END) amount\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+                          INNER JOIN c_doctype dt ON t.c_doctype_id = dt.c_doctype_id\n+             )\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET amount = c.amount\n+    FROM correctAmounts c\n+    WHERE c.rowid = t.rowid;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update amount by document type', v_time);\n+\n+\n+    --\n+    -- Update the beginning and end balances with the initial \"Open Invoice Amount to Date\"\n+    UPDATE temp_BusinessPartnerAccountSheetReport\n+    SET beginningBalance = t.OpenInvoiceAmountToDate,\n+        endingBalance    = t.OpenInvoiceAmountToDate\n+    FROM (\n+             SELECT getBPOpenAmtToDate(p_ad_client_id,\n+                                       p_ad_org_id,\n+                                       (p_dateFrom - INTERVAL '1 days')::date,\n+                                       p_c_bpartner_id,\n+                                       (SELECT c.c_currency_id\n+                                        FROM c_currency c\n+                                                 INNER JOIN c_acctschema accts ON c.c_currency_id = accts.c_currency_id\n+                                                 INNER JOIN ad_clientinfo ac ON accts.c_acctschema_id = ac.c_acctschema1_id\n+                                        LIMIT 1),\n+                                       'Y'::text,\n+                                       p_isSoTrx) OpenInvoiceAmountToDate\n+         ) t;\n+\n+    GET DIAGNOSTICS v_temp = ROW_COUNT;\n+    v_time := logDebug('Update beginning and end balance with \"BP Open Invoices Amount to Date\"', v_time);\n+\n+\n+    --\n+    -- Compute rolling sum\n+    WITH endingBalanceSum AS\n+             (\n+                 SELECT --\n+                        t.rowid,\n+                        t.endingBalance\n+                            + sum(t.amount) OVER ( ORDER BY t.dateacct, t.created, t.documentno ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) endingBalance,\n+                        t.amount                                                                                                                   currentAmount\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+             ),\n+         finalData AS\n+             (\n+                 SELECT --\n+                        ebs.rowid,\n+                        ebs.endingBalance,\n+                        ebs.endingBalance - ebs.currentAmount beginningBalance\n+                 FROM endingBalanceSum ebs\n+             )\n+    UPDATE temp_BusinessPartnerAccountSheetReport t\n+    SET endingBalance    = d.endingBalance,\n+        beginningBalance = d.beginningBalance\n+    FROM finalData d\n+    WHERE t.rowid = d.rowid;\n+\n+    v_time := logDebug('finished calculating rolling sum', v_time);\n+\n+\n+    --\n+    -- return the data\n+    RETURN QUERY SELECT --\n+                        t.dateAcct,\n+                        t.doctype,\n+                        t.documentno,\n+                        t.beginningBalance,\n+                        t.amount,\n+                        t.endingBalance,\n+                        t.targetCurrencyCode,\n+                        t.description\n+                 FROM temp_BusinessPartnerAccountSheetReport t\n+                 ORDER BY t.dateacct, t.created, t.documentno;\n+END;\n+$BODY$\n+    LANGUAGE plpgsql\n+    VOLATILE;\n+\n+\n+/*\n+How to run:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NTI1OA=="}, "originalCommit": {"oid": "9535e0796f846bc0a682b3cb7f8cd2d9c9e99ba6"}, "originalPosition": 239}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTg5NTU5OnYy", "diffSide": "RIGHT", "path": "de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/ddl/functions/getBPOpenAmtToDate.sql", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjo0NzowOVrOFt6Vzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo1MTo1NFrOFt7nxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NjA5NA==", "bodyText": "does invoiceOpenToDate() properly deal with credit memos?", "url": "https://github.com/metasfresh/metasfresh/pull/6249#discussion_r383686094", "createdAt": "2020-02-25T06:47:09Z", "author": {"login": "metas-ts"}, "path": "de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/ddl/functions/getBPOpenAmtToDate.sql", "diffHunk": "@@ -22,7 +22,7 @@ BEGIN\n                                        p_DateType := (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9535e0796f846bc0a682b3cb7f8cd2d9c9e99ba6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNzA3OA==", "bodyText": "If you refer to negating the amount in case the docbasetype is of credit memo, then no, it does not.\nI don't think we should fix that function in this issue, i think we should make a new issue for the fix. We should also create a real example and set what we expect and what should and shouldn't happen.\nYes it does.\nIt selects from the view C_Invoice_v.sql which handles that.", "url": "https://github.com/metasfresh/metasfresh/pull/6249#discussion_r383707078", "createdAt": "2020-02-25T07:51:54Z", "author": {"login": "TheBestPessimist"}, "path": "de.metas.adempiere.adempiere/migration/src/main/sql/postgresql/ddl/functions/getBPOpenAmtToDate.sql", "diffHunk": "@@ -22,7 +22,7 @@ BEGIN\n                                        p_DateType := (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4NjA5NA=="}, "originalCommit": {"oid": "9535e0796f846bc0a682b3cb7f8cd2d9c9e99ba6"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1508, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}