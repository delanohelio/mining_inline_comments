{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzE5MzUx", "number": 9876, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMTowNVrOEfZ8Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMzoxMFrOEfZ-mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY2Mjk4OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMTowNVrOHLqOcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMTowNVrOHLqOcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4ODIwOQ==", "bodyText": "why do we have to call testAndMarkAsPaid again? we are already calling it at line 92....\nI think we shall try calling it only once.", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481988209", "createdAt": "2020-09-02T11:11:05Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -86,24 +86,26 @@ public C_Invoice(@NonNull final PaymentReservationService paymentReservationServ\n \t\tthis.paymentReservationService = paymentReservationService;\n \t}\n \n-\t@DocValidate(timings = { ModelValidator.TIMING_BEFORE_COMPLETE })\n-\tpublic void onBeforeComplete(final I_C_Invoice invoice)\n-\t{\n-\t\tallocateInvoiceAgainstCreditMemo(invoice);\n-\t\tlinkInvoiceToPaymentIfNeeded(invoice);\n-\t}\n-\n \t@DocValidate(timings = { ModelValidator.TIMING_AFTER_COMPLETE })\n \tpublic void onAfterComplete(final I_C_Invoice invoice)\n \t{\n-\t\tmarkAsPaid(invoice);\n+\t\ttestAndMarkAsPaid(invoice);\n+\t\tallocateInvoiceAgainstCreditMemo(invoice);\n+\t\tlinkInvoiceToPaymentIfNeeded(invoice);\n \t\tallocateInvoiceAgainstPaymentIfNeeded(invoice);\n+\t\tautoAllocateAvailablePayments(invoice);\n \t\tcaptureMoneyIfNeeded(invoice);\n \t\tensureUOMsAreNotNull(invoice);\n \n \t\tC_Invoice_CreateExportData.scheduleOnTrxCommit(invoice);\n \t}\n \n+\tprivate void autoAllocateAvailablePayments(final I_C_Invoice invoice)\n+\t{\n+\t\tallocationBL.autoAllocateAvailablePayments(invoice);\n+\t\ttestAndMarkAsPaid(invoice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c5cf3f6f44083a422a82ec088938ad82a92e2a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY2NTQxOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMTo0NVrOHLqPyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMTo0NVrOHLqPyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4ODU1Mw==", "bodyText": "ahh, and here again", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481988553", "createdAt": "2020-09-02T11:11:45Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -236,6 +238,7 @@ private void allocateInvoiceAgainstCreditMemo(final I_C_Invoice creditMemo)\n \t\t\t// Allocate the minimum between parent invoice open amt and what is left of the creditMemo's grand Total\n \t\t\tinvoiceBL.allocateCreditMemo(parentInvoice, creditMemo, amtToAllocate);\n \t\t}\n+\t\ttestAndMarkAsPaid(creditMemo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c5cf3f6f44083a422a82ec088938ad82a92e2a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY2ODgxOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMjo1NlrOHLqR6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMjo1NlrOHLqR6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTA5Nw==", "bodyText": "and again", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481989097", "createdAt": "2020-09-02T11:12:56Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -293,20 +296,22 @@ private void linkInvoiceToPaymentIfNeeded(final I_C_Invoice invoice)\n \t\t\tpaymentDAO.save(payment);\n \n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);\n \t\t}\n \t}\n \n-\tprivate void allocateInvoiceAgainstPaymentIfNeeded(final I_C_Invoice invoice)\n+\tprivate void allocateInvoiceAgainstPaymentIfNeeded(@NonNull final I_C_Invoice invoice)\n \t{\n \t\tfinal I_C_Order order = invoice.getC_Order();\n \t\tif (paymentBL.canAllocateOrderPaymentToInvoice(order))\n \t\t{\n \t\t\tfinal I_C_Payment payment = order.getC_Payment();\n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c5cf3f6f44083a422a82ec088938ad82a92e2a"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzY2OTM3OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMzoxMFrOHLqSQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToxMzoxMFrOHLqSQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTE4NQ==", "bodyText": "and again", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481989185", "createdAt": "2020-09-02T11:13:10Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -293,20 +296,22 @@ private void linkInvoiceToPaymentIfNeeded(final I_C_Invoice invoice)\n \t\t\tpaymentDAO.save(payment);\n \n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c5cf3f6f44083a422a82ec088938ad82a92e2a"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1267, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}