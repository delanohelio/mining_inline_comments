{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTE0ODM4", "number": 6689, "title": "Accounting Transactions adjustments", "bodyText": "#6682", "createdAt": "2020-05-19T13:20:08Z", "url": "https://github.com/metasfresh/metasfresh/pull/6689", "merged": true, "mergeCommit": {"oid": "36c152efe5fef1522e3728f2432a110500e3131b"}, "closed": true, "closedAt": "2020-05-22T12:43:24Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciwO0OAH2gAyNDIwMTE0ODM4OmQyM2Q2ZjNlZDlmNTFlYmM4OGUxMTk2ZjFhMTMzNTFiMDQ2NWMwMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjq31lAH2gAyNDIwMTE0ODM4OjFlNzhjMTY5NDkxNTBkMGUxMDJkMDViM2JlYmFhODBkZDdkZTAxNTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d23d6f3ed9f51ebc88e1196f1a13351b0465c026", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/d23d6f3ed9f51ebc88e1196f1a13351b0465c026", "committedDate": "2020-05-19T08:31:08Z", "message": "Add `Accounting Transactions.DocStatus` to grid view and filters\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b2f33bc7a2c4cf554cd3fd38b24a5218dd0f277", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/8b2f33bc7a2c4cf554cd3fd38b24a5218dd0f277", "committedDate": "2020-05-19T12:05:56Z", "message": "Update copyright\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f909ebd42ec310e67280cca05474f620a225c93", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5f909ebd42ec310e67280cca05474f620a225c93", "committedDate": "2020-05-19T12:08:26Z", "message": "Move ElementValueId to make it more accessible\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f59dd08df4fd1f51a11b4e6c5aa206c91b0561e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1f59dd08df4fd1f51a11b4e6c5aa206c91b0561e", "committedDate": "2020-05-19T12:08:38Z", "message": "Fix warning\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "558819e934fd7197de300cae3f9f7885ace7259c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/558819e934fd7197de300cae3f9f7885ace7259c", "committedDate": "2020-05-19T12:10:37Z", "message": "Add Fact Acct Filter\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e691f9d09be3352bd890a955e71b13783447ae6a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e691f9d09be3352bd890a955e71b13783447ae6a", "committedDate": "2020-05-19T13:04:20Z", "message": "Fix warnings/add nullability for `IQueryFilterModifier`s\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53416445961b270bf9688bd53d69a21a4fb082e4", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/53416445961b270bf9688bd53d69a21a4fb082e4", "committedDate": "2020-05-19T13:04:54Z", "message": "Bugfix\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "197dbc35c8a5a56b0b37eeb4d8cc8160995d54a6", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/197dbc35c8a5a56b0b37eeb4d8cc8160995d54a6", "committedDate": "2020-05-19T13:05:30Z", "message": "Add RPad Query Filter Modifier\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fedf8771669e6dcff60c2f203fb6168c7d6a4f6", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5fedf8771669e6dcff60c2f203fb6168c7d6a4f6", "committedDate": "2020-05-19T13:06:31Z", "message": "Add IElementValueDAO.getElementValueIdsBetween\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa3bb6fbb4cae9afd5a1b1528da2639c1a228917", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/aa3bb6fbb4cae9afd5a1b1528da2639c1a228917", "committedDate": "2020-05-19T13:17:17Z", "message": "Allow empty string padding\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcec8caf09e95903b0b29a99be49a857e8eea6c2", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fcec8caf09e95903b0b29a99be49a857e8eea6c2", "committedDate": "2020-05-20T09:05:58Z", "message": "Update trls\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bfee651cf80b43d21bee99c42a512fd1113613a1", "committedDate": "2020-05-20T09:25:05Z", "message": "Update trls\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b555573662dab77b9548a237ee8f55769d9f94a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1b555573662dab77b9548a237ee8f55769d9f94a", "committedDate": "2020-05-20T09:50:59Z", "message": "Bugfix\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTY3NzQy", "url": "https://github.com/metasfresh/metasfresh/pull/6689#pullrequestreview-415167742", "createdAt": "2020-05-20T09:45:45Z", "commit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0NTo0NVrOGYDv8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowNjoyMlrOGYEhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MDQzMw==", "bodyText": "pls clarify this before asking for a final review", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427880433", "createdAt": "2020-05-20T09:45:45Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/acct/api/impl/ElementValueDAO.java", "diffHunk": "@@ -45,4 +48,19 @@ public I_C_ElementValue retrieveById(@CacheCtx final Properties ctx, final int e\n \t\t}\n \t\treturn InterfaceWrapperHelper.create(ctx, elementValueId, I_C_ElementValue.class, ITrx.TRXNAME_None);\n \t}\n+\n+\t@Override\n+\tpublic @NonNull ImmutableSet<ElementValueId> getElementValueIdsBetween(@NonNull final String valueFrom, @NonNull final String valueTo)\n+\t{\n+\t\t// TODO @tbp @teo: this query needs to be refined and its test updated after a discussion with mark", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MDY0NA==", "bodyText": "declare queryBL as a class field", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427880644", "createdAt": "2020-05-20T09:46:05Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/acct/api/impl/ElementValueDAO.java", "diffHunk": "@@ -45,4 +48,19 @@ public I_C_ElementValue retrieveById(@CacheCtx final Properties ctx, final int e\n \t\t}\n \t\treturn InterfaceWrapperHelper.create(ctx, elementValueId, I_C_ElementValue.class, ITrx.TRXNAME_None);\n \t}\n+\n+\t@Override\n+\tpublic @NonNull ImmutableSet<ElementValueId> getElementValueIdsBetween(@NonNull final String valueFrom, @NonNull final String valueTo)\n+\t{\n+\t\t// TODO @tbp @teo: this query needs to be refined and its test updated after a discussion with mark\n+\n+\t\tfinal RPadQueryFilterModifier lpadModifier = new RPadQueryFilterModifier(20, \" \");\n+\n+\t\tfinal IQueryBL queryBL = Services.get(IQueryBL.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTc1Ng==", "bodyText": "what's the reason for this change?", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427881756", "createdAt": "2020-05-20T09:47:55Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/org/adempiere/ad/dao/impl/LpadQueryFilterModifier.java", "diffHunk": "@@ -42,7 +45,7 @@ public LpadQueryFilterModifier(final int size, final String padStr)\n \t\tCheck.assume(size > 0, \"size > 0\");\n \t\tthis.size = size;\n \n-\t\tCheck.assumeNotEmpty(padStr, \"padStr not empty\");\n+\t\tCheck.errorUnless(!padStr.isEmpty(), \"padStr not empty\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MjIzMA==", "bodyText": "I think this is some dev testing garbage.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427882230", "createdAt": "2020-05-20T09:48:43Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/org/adempiere/ad/dao/impl/LpadQueryFilterModifier.java", "diffHunk": "@@ -91,6 +95,6 @@ public Object convertValue(final String columnName, final Object value, final Ob\n \n \t\tfinal String str = (String)value;\n \n-\t\treturn StringUtils.leftPad(str.trim(), size, padStr);\n+\t\treturn StringUtils.leftPad(str.trim(), size, padStr).subSequence(0,10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MzMyMQ==", "bodyText": "why .subSequence(0, 10); ?", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427883321", "createdAt": "2020-05-20T09:50:24Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/org/adempiere/ad/dao/impl/RPadQueryFilterModifier.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package org.adempiere.ad.dao.impl;\n+\n+import de.metas.util.Check;\n+import lombok.EqualsAndHashCode;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryFilterModifier;\n+import org.apache.commons.lang3.StringUtils;\n+import org.compiere.util.DB;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+@EqualsAndHashCode\n+public class RPadQueryFilterModifier implements IQueryFilterModifier\n+{\n+\tprivate final int size;\n+\tprivate final String padStr;\n+\n+\tpublic RPadQueryFilterModifier(final int size, @NonNull final String padStr)\n+\t{\n+\t\tCheck.assume(size > 0, \"size > 0\");\n+\t\tthis.size = size;\n+\n+\t\tCheck.errorUnless(!padStr.isEmpty(), \"padStr not empty\");\n+\t\tthis.padStr = padStr;\n+\t}\n+\n+\t@Override\n+\tpublic @NonNull String getColumnSql(final @NonNull String columnName)\n+\t{\n+\t\treturn buildSql(columnName);\n+\t}\n+\n+\t@Override\n+\tpublic String getValueSql(final Object value, final List<Object> params)\n+\t{\n+\t\tfinal String valueSql;\n+\t\tif (value instanceof ModelColumnNameValue<?>)\n+\t\t{\n+\t\t\tfinal ModelColumnNameValue<?> modelValue = (ModelColumnNameValue<?>)value;\n+\t\t\tvalueSql = modelValue.getColumnName();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tvalueSql = \"?\";\n+\t\t\tparams.add(value);\n+\t\t}\n+\n+\t\treturn buildSql(valueSql);\n+\t}\n+\n+\t@Nullable\n+\t@Override\n+\tpublic Object convertValue(@Nullable final String columnName, @Nullable final Object value, final @Nullable Object model)\n+\t{\n+\t\tif (value == null)\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal String str = (String)value;\n+\n+\t\treturn StringUtils.rightPad(str.trim(), size, padStr).subSequence(0, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NDc5Ng==", "bodyText": "no tests provided\nin case you have unit tests, pls rename this class to ElementValueDAOTest and move it to impl package. Basically, u are testing the implementation and not the interface.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427884796", "createdAt": "2020-05-20T09:52:51Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/test/java/de/metas/acct/api/IElementValueDAOTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.acct.api;\n+\n+import de.metas.util.Services;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class IElementValueDAOTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NzIwNg==", "bodyText": "rename it to FactAcctFilterDescriptorsProviderFactory\nmove it to de.metas.ui.web.accounting.filters", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427887206", "createdAt": "2020-05-20T09:56:53Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctDocumentService.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctDocumentService implements DocumentFilterDescriptorsProviderFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4Nzg1NQ==", "bodyText": "move it to de.metas.ui.web.accounting.filters", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427887855", "createdAt": "2020-05-20T09:57:56Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4ODIyMw==", "bodyText": "IMHO, u can hook it to Fact_Acct table too", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427888223", "createdAt": "2020-05-20T09:58:32Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctDocumentService.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctDocumentService implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctDocumentService()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (!FACT_ACCT_TRANSACTIONS_VIEW.equals(tableName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4OTU2Nw==", "bodyText": "also,\n\ncheck if fields collection contains a field with \"Account_ID\" field name.\ndefine \"Account_ID\" as a class constant. Use it in converter too, instead of I_Fact_Acct.COLUMNNAME_Account_ID", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427889567", "createdAt": "2020-05-20T10:00:39Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctDocumentService.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctDocumentService implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctDocumentService()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (!FACT_ACCT_TRANSACTIONS_VIEW.equals(tableName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4ODIyMw=="}, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDI0OQ==", "bodyText": "pls handle the case when ids is empty.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427890249", "createdAt": "2020-05-20T10:01:37Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter\n+{\n+\tpublic static final transient FactAcctFilterConverter instance = new FactAcctFilterConverter();\n+\n+\tstatic final String FILTER_ID = \"fact-acct\";\n+\n+\tpublic static final String PARAM_ACCOUNT_VALUE_FROM = \"AccountValueFrom\";\n+\tpublic static final String PARAM_ACCOUNT_VALUE_TO = \"AccountValueTo\";\n+\n+\tprivate FactAcctFilterConverter()\n+\t{\n+\t}\n+\n+\t@Override\n+\tpublic boolean canConvert(final String filterId)\n+\t{\n+\t\treturn Objects.equals(filterId, FILTER_ID);\n+\t}\n+\n+\t@Override\n+\tpublic String getSql(\n+\t\t\t@NonNull final SqlParamsCollector ignored_sqlParamsOut,\n+\t\t\t@NonNull final DocumentFilter filter,\n+\t\t\t@NonNull final SqlOptions sqlOpts,\n+\t\t\tfinal SqlDocumentFilterConverterContext ignored)\n+\t{\n+\t\tfinal String accountValueFrom = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_FROM, \"-1\");\n+\t\tfinal String accountValueTo = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_TO, \"-1\");\n+\n+\t\tfinal IElementValueDAO elementValueDAO = Services.get(IElementValueDAO.class);\n+\t\tfinal ImmutableSet<ElementValueId> ids = elementValueDAO.getElementValueIdsBetween(accountValueFrom, accountValueTo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDU2MA==", "bodyText": "not sure, but i guess u shall use null as default value instead of \"-1\".", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427890560", "createdAt": "2020-05-20T10:02:09Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter\n+{\n+\tpublic static final transient FactAcctFilterConverter instance = new FactAcctFilterConverter();\n+\n+\tstatic final String FILTER_ID = \"fact-acct\";\n+\n+\tpublic static final String PARAM_ACCOUNT_VALUE_FROM = \"AccountValueFrom\";\n+\tpublic static final String PARAM_ACCOUNT_VALUE_TO = \"AccountValueTo\";\n+\n+\tprivate FactAcctFilterConverter()\n+\t{\n+\t}\n+\n+\t@Override\n+\tpublic boolean canConvert(final String filterId)\n+\t{\n+\t\treturn Objects.equals(filterId, FILTER_ID);\n+\t}\n+\n+\t@Override\n+\tpublic String getSql(\n+\t\t\t@NonNull final SqlParamsCollector ignored_sqlParamsOut,\n+\t\t\t@NonNull final DocumentFilter filter,\n+\t\t\t@NonNull final SqlOptions sqlOpts,\n+\t\t\tfinal SqlDocumentFilterConverterContext ignored)\n+\t{\n+\t\tfinal String accountValueFrom = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_FROM, \"-1\");\n+\t\tfinal String accountValueTo = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_TO, \"-1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MTMzNA==", "bodyText": "also, make sure you are handling the null case or elementValueDAO.getElementValueIdsBetween is handling it.\ne.g. accountValueFrom=null, accountValueTo=2000 means all accounts until 2000", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427891334", "createdAt": "2020-05-20T10:03:26Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter\n+{\n+\tpublic static final transient FactAcctFilterConverter instance = new FactAcctFilterConverter();\n+\n+\tstatic final String FILTER_ID = \"fact-acct\";\n+\n+\tpublic static final String PARAM_ACCOUNT_VALUE_FROM = \"AccountValueFrom\";\n+\tpublic static final String PARAM_ACCOUNT_VALUE_TO = \"AccountValueTo\";\n+\n+\tprivate FactAcctFilterConverter()\n+\t{\n+\t}\n+\n+\t@Override\n+\tpublic boolean canConvert(final String filterId)\n+\t{\n+\t\treturn Objects.equals(filterId, FILTER_ID);\n+\t}\n+\n+\t@Override\n+\tpublic String getSql(\n+\t\t\t@NonNull final SqlParamsCollector ignored_sqlParamsOut,\n+\t\t\t@NonNull final DocumentFilter filter,\n+\t\t\t@NonNull final SqlOptions sqlOpts,\n+\t\t\tfinal SqlDocumentFilterConverterContext ignored)\n+\t{\n+\t\tfinal String accountValueFrom = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_FROM, \"-1\");\n+\t\tfinal String accountValueTo = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_TO, \"-1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDU2MA=="}, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MTYyMg==", "bodyText": "e.g. accountValueFrom=2000, accountValueTo=null means all accounts from 2000 until the last one.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427891622", "createdAt": "2020-05-20T10:03:54Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/document/filter/provider/fact_acct/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.document.filter.provider.fact_acct;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter\n+{\n+\tpublic static final transient FactAcctFilterConverter instance = new FactAcctFilterConverter();\n+\n+\tstatic final String FILTER_ID = \"fact-acct\";\n+\n+\tpublic static final String PARAM_ACCOUNT_VALUE_FROM = \"AccountValueFrom\";\n+\tpublic static final String PARAM_ACCOUNT_VALUE_TO = \"AccountValueTo\";\n+\n+\tprivate FactAcctFilterConverter()\n+\t{\n+\t}\n+\n+\t@Override\n+\tpublic boolean canConvert(final String filterId)\n+\t{\n+\t\treturn Objects.equals(filterId, FILTER_ID);\n+\t}\n+\n+\t@Override\n+\tpublic String getSql(\n+\t\t\t@NonNull final SqlParamsCollector ignored_sqlParamsOut,\n+\t\t\t@NonNull final DocumentFilter filter,\n+\t\t\t@NonNull final SqlOptions sqlOpts,\n+\t\t\tfinal SqlDocumentFilterConverterContext ignored)\n+\t{\n+\t\tfinal String accountValueFrom = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_FROM, \"-1\");\n+\t\tfinal String accountValueTo = filter.getParameterValueAsString(PARAM_ACCOUNT_VALUE_TO, \"-1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDU2MA=="}, "originalCommit": {"oid": "bfee651cf80b43d21bee99c42a512fd1113613a1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MjY4Mw==", "bodyText": "pls document that we do subSequence because we want to have the same behaviour like Postgresql's LPAD.\nsame for the RPAD.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427892683", "createdAt": "2020-05-20T10:05:45Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/org/adempiere/ad/dao/impl/LpadQueryFilterModifier.java", "diffHunk": "@@ -91,6 +95,6 @@ public Object convertValue(final String columnName, final Object value, final Ob\n \n \t\tfinal String str = (String)value;\n \n-\t\treturn StringUtils.leftPad(str.trim(), size, padStr);\n+\t\treturn StringUtils.leftPad(str.trim(), size, padStr).subSequence(0,size);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b555573662dab77b9548a237ee8f55769d9f94a"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MzA1NA==", "bodyText": "pls document that we  do subSequence because we want to have the same behaviour like PG.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r427893054", "createdAt": "2020-05-20T10:06:22Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/org/adempiere/ad/dao/impl/RPadQueryFilterModifier.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * #%L\n+ * de.metas.adempiere.adempiere.base\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package org.adempiere.ad.dao.impl;\n+\n+import de.metas.util.Check;\n+import lombok.EqualsAndHashCode;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryFilterModifier;\n+import org.apache.commons.lang3.StringUtils;\n+import org.compiere.util.DB;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+@EqualsAndHashCode\n+public class RPadQueryFilterModifier implements IQueryFilterModifier\n+{\n+\tprivate final int size;\n+\tprivate final String padStr;\n+\n+\tpublic RPadQueryFilterModifier(final int size, @NonNull final String padStr)\n+\t{\n+\t\tCheck.assume(size > 0, \"size > 0\");\n+\t\tthis.size = size;\n+\n+\t\tCheck.errorUnless(!padStr.isEmpty(), \"padStr not empty\");\n+\t\tthis.padStr = padStr;\n+\t}\n+\n+\t@Override\n+\tpublic @NonNull String getColumnSql(final @NonNull String columnName)\n+\t{\n+\t\treturn buildSql(columnName);\n+\t}\n+\n+\t@Override\n+\tpublic String getValueSql(final Object value, final List<Object> params)\n+\t{\n+\t\tfinal String valueSql;\n+\t\tif (value instanceof ModelColumnNameValue<?>)\n+\t\t{\n+\t\t\tfinal ModelColumnNameValue<?> modelValue = (ModelColumnNameValue<?>)value;\n+\t\t\tvalueSql = modelValue.getColumnName();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tvalueSql = \"?\";\n+\t\t\tparams.add(value);\n+\t\t}\n+\n+\t\treturn buildSql(valueSql);\n+\t}\n+\n+\t@Nullable\n+\t@Override\n+\tpublic Object convertValue(@Nullable final String columnName, @Nullable final Object value, final @Nullable Object model)\n+\t{\n+\t\tif (value == null)\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal String str = (String)value;\n+\n+\t\treturn StringUtils.rightPad(str.trim(), size, padStr).subSequence(0, size);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b555573662dab77b9548a237ee8f55769d9f94a"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25813905c4a1cc8a810b80f055fce10fc95a5c60", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/25813905c4a1cc8a810b80f055fce10fc95a5c60", "committedDate": "2020-05-20T10:14:09Z", "message": "Document the use of `.subsequence` on RPAD and LPAD: to match Postgres implementatoin\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dad75cf360105a3c8496d82bc48f45a6e322aac", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6dad75cf360105a3c8496d82bc48f45a6e322aac", "committedDate": "2020-05-20T11:02:59Z", "message": "Document the use of `Check.errorIf` on RPAD and LPAD: we want to allow padding with space\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8bcf2150e180f924056bcd43169bd5d4476571b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f8bcf2150e180f924056bcd43169bd5d4476571b", "committedDate": "2020-05-20T11:03:12Z", "message": "Small refactor\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b8868bd769cfc44769e3810952bf201187345c1", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5b8868bd769cfc44769e3810952bf201187345c1", "committedDate": "2020-05-20T11:11:30Z", "message": "Refactor: Move filter to different package\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc304120c30146987b7ad2de8cdb2b28b6b1bc06", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fc304120c30146987b7ad2de8cdb2b28b6b1bc06", "committedDate": "2020-05-20T11:12:54Z", "message": "FactAcctFilterDescriptor: `Fact_Acct` table is also valid\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba34b67d6e7e961cbda0a0dce3dc36966d3c8ed9", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ba34b67d6e7e961cbda0a0dce3dc36966d3c8ed9", "committedDate": "2020-05-20T11:43:07Z", "message": "Handle missing params or no ElementValueIds found\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a9b418066e5aa5dad62c5ff966707728a1f659", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/96a9b418066e5aa5dad62c5ff966707728a1f659", "committedDate": "2020-05-20T11:43:20Z", "message": "Add nullability info\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c303314cce31525a14966ee03ea63628f2b668c", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/9c303314cce31525a14966ee03ea63628f2b668c", "committedDate": "2020-05-20T12:44:31Z", "message": "Mark FilterDescriptor as Frequently used, so that it appears outside of the default filters button\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158496c73ce5c97f8fb3fa51780c4ce40e5ebbe7", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/158496c73ce5c97f8fb3fa51780c4ce40e5ebbe7", "committedDate": "2020-05-21T10:32:18Z", "message": "More trl\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840b4e57a18e49e9b78aba37681d3b4e749bf9da", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/840b4e57a18e49e9b78aba37681d3b4e749bf9da", "committedDate": "2020-05-21T11:07:19Z", "message": "Update `ElementValueDAO.getElementValueIdsBetween`\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/2084b879ff0459b1406190634da8ba4c46cafcad", "committedDate": "2020-05-21T11:08:37Z", "message": "Warnings cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTMxMjA0", "url": "https://github.com/metasfresh/metasfresh/pull/6689#pullrequestreview-416131204", "createdAt": "2020-05-21T13:11:08Z", "commit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxMTowOFrOGYyMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoyODoyMFrOGYywBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MTMzMQ==", "bodyText": "IMHO the whole comment intoduces more noise and FUD than helps. pls remove it", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428641331", "createdAt": "2020-05-21T13:11:08Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/acct/api/impl/ElementValueDAO.java", "diffHunk": "@@ -45,4 +51,76 @@ public I_C_ElementValue retrieveById(@CacheCtx final Properties ctx, final int e\n \t\t}\n \t\treturn InterfaceWrapperHelper.create(ctx, elementValueId, I_C_ElementValue.class, ITrx.TRXNAME_None);\n \t}\n+\n+\t@Override\n+\tpublic @NonNull ImmutableSet<ElementValueId> getElementValueIdsBetween(@NonNull final String valueFrom, @NonNull final String valueTo)\n+\t{\n+\t\t/*\n+Implementation detail: Similar to: org.compiere.apps.search.Info.Worker.loadData, which is called from org.compiere.acct.AcctViewer.actionButton, when searching from an account.\n+\n+ValueFrom sql:\n+SELECT ev.c_elementvalue_id, ev.value, ev.name\n+FROM c_elementvalue ev\n+WHERE TRUE\n+  AND IsActive = 'Y'\n+  AND (IsSummary = 'N' OR IsSummary IS NULL)\n+  AND C_Element_ID = 1000000\n+  AND Value LIKE '10%'\n+ORDER BY value Asc\n+LIMIT 1\n+;\n+\n+\n+ValueTo sql:\n+SELECT ev.c_elementvalue_id, ev.value, ev.name\n+FROM c_elementvalue ev\n+WHERE TRUE\n+  AND IsActive = 'Y'\n+  AND (IsSummary = 'N' OR IsSummary IS NULL)\n+  AND C_Element_ID = 1000000\n+  AND Value LIKE '11%'\n+ORDER BY value DESC\n+LIMIT 1\n+;\n+\n+\n+Query similar to org.compiere.acct.AcctViewerData.appendAccountWhereClause:\n+SELECT ce.c_elementvalue_id\n+FROM c_elementvalue ce\n+WHERE (\n+          LPAD(trim(ce.Value), 20, '0')\n+              BETWEEN\n+             \t (SELECT LPAD(trim(ev.Value), 20, '0') FROM C_ElementValue ev WHERE ev.C_ElementValue_ID = $idFrom)\n+              AND\n+             \t (SELECT LPAD(trim(ev.Value), 20, '0') FROM C_ElementValue ev WHERE ev.C_ElementValue_ID = $idTo)\n+          )\n+;\n+\n+Observation, even if the original query uses LPAD, RPAD gives better results from my testing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MzU0Ng==", "bodyText": "private", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428643546", "createdAt": "2020-05-21T13:15:25Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/base/src/main/java/de/metas/acct/api/impl/ElementValueDAO.java", "diffHunk": "@@ -1,40 +1,46 @@\n-package de.metas.acct.api.impl;\n-\n /*\n  * #%L\n  * de.metas.adempiere.adempiere.base\n  * %%\n- * Copyright (C) 2015 metas GmbH\n+ * Copyright (C) 2020 metas GmbH\n  * %%\n  * This program is free software: you can redistribute it and/or modify\n  * it under the terms of the GNU General Public License as\n  * published by the Free Software Foundation, either version 2 of the\n  * License, or (at your option) any later version.\n- * \n+ *\n  * This program is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  * GNU General Public License for more details.\n- * \n+ *\n  * You should have received a copy of the GNU General Public\n- * License along with this program.  If not, see\n+ * License along with this program. If not, see\n  * <http://www.gnu.org/licenses/gpl-2.0.html>.\n  * #L%\n  */\n \n+package de.metas.acct.api.impl;\n \n-import java.util.Properties;\n-\n+import com.google.common.collect.ImmutableSet;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.cache.annotation.CacheCtx;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.dao.impl.CompareQueryFilter;\n+import org.adempiere.ad.dao.impl.RPadQueryFilterModifier;\n import org.adempiere.ad.trx.api.ITrx;\n import org.adempiere.model.InterfaceWrapperHelper;\n import org.adempiere.util.proxy.Cached;\n import org.compiere.model.I_C_ElementValue;\n \n-import de.metas.acct.api.IElementValueDAO;\n-import de.metas.cache.annotation.CacheCtx;\n+import java.util.Properties;\n \n public class ElementValueDAO implements IElementValueDAO\n {\n+\tfinal IQueryBL queryBL = Services.get(IQueryBL.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0NzcxMA==", "bodyText": "i would use accountId instead of  fact-acct.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428647710", "createdAt": "2020-05-21T13:23:06Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterConverter.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import com.google.common.collect.ImmutableSet;\n+import com.jgoodies.common.base.Objects;\n+import de.metas.acct.api.IElementValueDAO;\n+import de.metas.acct.api.impl.ElementValueId;\n+import de.metas.ui.web.document.filter.DocumentFilter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverter;\n+import de.metas.ui.web.document.filter.sql.SqlDocumentFilterConverterContext;\n+import de.metas.ui.web.document.filter.sql.SqlParamsCollector;\n+import de.metas.ui.web.window.model.sql.SqlOptions;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.exceptions.FillMandatoryException;\n+import org.compiere.model.I_Fact_Acct;\n+import org.compiere.util.DB;\n+\n+public class FactAcctFilterConverter implements SqlDocumentFilterConverter\n+{\n+\tpublic static final transient FactAcctFilterConverter instance = new FactAcctFilterConverter();\n+\n+\tstatic final String FILTER_ID = \"fact-acct\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0ODUxMw==", "bodyText": "pls avoid \"reverse\"  logic.", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428648513", "createdAt": "2020-05-21T13:24:38Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterDescriptorsProviderFactory.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.compiere.model.I_Fact_Acct;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctFilterDescriptorsProviderFactory implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tpublic static final String FACT_ACCT_TABLE = I_Fact_Acct.Table_Name;\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctFilterDescriptorsProviderFactory()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (isWrongTable(tableName))\n+\t\t{\n+\t\t\treturn NullDocumentFilterDescriptorsProvider.instance;\n+\t\t}\n+\n+\t\treturn ImmutableDocumentFilterDescriptorsProvider.of(\n+\t\t\t\tDocumentFilterDescriptor.builder()\n+\t\t\t\t\t\t.setFilterId(FactAcctFilterConverter.FILTER_ID)\n+\t\t\t\t\t\t.setSortNo(DocumentFilterDescriptorsConstants.SORT_NO_FACT_ACCT)\n+\t\t\t\t\t\t.setFrequentUsed(true)\n+\t\t\t\t\t\t.setDisplayName(msgBL.translatable(\"AccountNumber\"))\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.build()\n+\t\t);\n+\t}\n+\n+\tprivate boolean isWrongTable(@Nullable final String tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0OTU1NQ==", "bodyText": "i saw that u are throwing FillMandatoryException in case the field is not set.\nWhy not calling setMandatory(true) here then?", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428649555", "createdAt": "2020-05-21T13:26:34Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterDescriptorsProviderFactory.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.compiere.model.I_Fact_Acct;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctFilterDescriptorsProviderFactory implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tpublic static final String FACT_ACCT_TABLE = I_Fact_Acct.Table_Name;\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctFilterDescriptorsProviderFactory()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (isWrongTable(tableName))\n+\t\t{\n+\t\t\treturn NullDocumentFilterDescriptorsProvider.instance;\n+\t\t}\n+\n+\t\treturn ImmutableDocumentFilterDescriptorsProvider.of(\n+\t\t\t\tDocumentFilterDescriptor.builder()\n+\t\t\t\t\t\t.setFilterId(FactAcctFilterConverter.FILTER_ID)\n+\t\t\t\t\t\t.setSortNo(DocumentFilterDescriptorsConstants.SORT_NO_FACT_ACCT)\n+\t\t\t\t\t\t.setFrequentUsed(true)\n+\t\t\t\t\t\t.setDisplayName(msgBL.translatable(\"AccountNumber\"))\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0OTY3Ng==", "bodyText": "i saw that u are throwing FillMandatoryException in case the field is not set.\nWhy not calling setMandatory(true) here then?", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428649676", "createdAt": "2020-05-21T13:26:46Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterDescriptorsProviderFactory.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.compiere.model.I_Fact_Acct;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctFilterDescriptorsProviderFactory implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tpublic static final String FACT_ACCT_TABLE = I_Fact_Acct.Table_Name;\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctFilterDescriptorsProviderFactory()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (isWrongTable(tableName))\n+\t\t{\n+\t\t\treturn NullDocumentFilterDescriptorsProvider.instance;\n+\t\t}\n+\n+\t\treturn ImmutableDocumentFilterDescriptorsProvider.of(\n+\t\t\t\tDocumentFilterDescriptor.builder()\n+\t\t\t\t\t\t.setFilterId(FactAcctFilterConverter.FILTER_ID)\n+\t\t\t\t\t\t.setSortNo(DocumentFilterDescriptorsConstants.SORT_NO_FACT_ACCT)\n+\t\t\t\t\t\t.setFrequentUsed(true)\n+\t\t\t\t\t\t.setDisplayName(msgBL.translatable(\"AccountNumber\"))\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1MDA5OA==", "bodyText": "also, i would not refactor this logic since is just checking if a string matches 2 allowed values...", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428650098", "createdAt": "2020-05-21T13:27:37Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterDescriptorsProviderFactory.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.compiere.model.I_Fact_Acct;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctFilterDescriptorsProviderFactory implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tpublic static final String FACT_ACCT_TABLE = I_Fact_Acct.Table_Name;\n+\tprivate final transient IMsgBL msgBL = Services.get(IMsgBL.class);\n+\n+\tpublic FactAcctFilterDescriptorsProviderFactory()\n+\t{\n+\t}\n+\n+\t@Override\n+\t@NonNull\n+\tpublic DocumentFilterDescriptorsProvider createFiltersProvider(\n+\t\t\t@Nullable final AdTabId ignored,\n+\t\t\t@Nullable final String tableName,\n+\t\t\t@Nullable final Collection<DocumentFieldDescriptor> fields)\n+\t{\n+\t\tif (isWrongTable(tableName))\n+\t\t{\n+\t\t\treturn NullDocumentFilterDescriptorsProvider.instance;\n+\t\t}\n+\n+\t\treturn ImmutableDocumentFilterDescriptorsProvider.of(\n+\t\t\t\tDocumentFilterDescriptor.builder()\n+\t\t\t\t\t\t.setFilterId(FactAcctFilterConverter.FILTER_ID)\n+\t\t\t\t\t\t.setSortNo(DocumentFilterDescriptorsConstants.SORT_NO_FACT_ACCT)\n+\t\t\t\t\t\t.setFrequentUsed(true)\n+\t\t\t\t\t\t.setDisplayName(msgBL.translatable(\"AccountNumber\"))\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_FROM))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t.addParameter(DocumentFilterParamDescriptor.builder()\n+\t\t\t\t\t\t\t\t.setFieldName(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO)\n+\t\t\t\t\t\t\t\t.setDisplayName(msgBL.translatable(FactAcctFilterConverter.PARAM_ACCOUNT_VALUE_TO))\n+\t\t\t\t\t\t\t\t.setWidgetType(DocumentFieldWidgetType.Text)\n+\t\t\t\t\t\t)\n+\t\t\t\t\t\t//\n+\t\t\t\t\t\t.build()\n+\t\t);\n+\t}\n+\n+\tprivate boolean isWrongTable(@Nullable final String tableName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0ODUxMw=="}, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1MDUwMA==", "bodyText": "any reason for making those 2 constants public?", "url": "https://github.com/metasfresh/metasfresh/pull/6689#discussion_r428650500", "createdAt": "2020-05-21T13:28:20Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/accounting/filters/FactAcctFilterDescriptorsProviderFactory.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * #%L\n+ * metasfresh-webui-api\n+ * %%\n+ * Copyright (C) 2020 metas GmbH\n+ * %%\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as\n+ * published by the Free Software Foundation, either version 2 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public\n+ * License along with this program. If not, see\n+ * <http://www.gnu.org/licenses/gpl-2.0.html>.\n+ * #L%\n+ */\n+\n+package de.metas.ui.web.accounting.filters;\n+\n+import de.metas.i18n.IMsgBL;\n+import de.metas.ui.web.document.filter.DocumentFilterDescriptor;\n+import de.metas.ui.web.document.filter.DocumentFilterParamDescriptor;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsConstants;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.DocumentFilterDescriptorsProviderFactory;\n+import de.metas.ui.web.document.filter.provider.ImmutableDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.document.filter.provider.NullDocumentFilterDescriptorsProvider;\n+import de.metas.ui.web.window.descriptor.DocumentFieldDescriptor;\n+import de.metas.ui.web.window.descriptor.DocumentFieldWidgetType;\n+import de.metas.util.Services;\n+import lombok.NonNull;\n+import org.adempiere.ad.element.api.AdTabId;\n+import org.compiere.model.I_Fact_Acct;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.Nullable;\n+import java.util.Collection;\n+\n+@Component\n+public class FactAcctFilterDescriptorsProviderFactory implements DocumentFilterDescriptorsProviderFactory\n+{\n+\tpublic static final String FACT_ACCT_TRANSACTIONS_VIEW = \"Fact_Acct_Transactions_View\";\n+\tpublic static final String FACT_ACCT_TABLE = I_Fact_Acct.Table_Name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2084b879ff0459b1406190634da8ba4c46cafcad"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e78c16949150d0e102d05b3bebaa80dd7de0152", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1e78c16949150d0e102d05b3bebaa80dd7de0152", "committedDate": "2020-05-22T04:50:26Z", "message": "Cleanup code\n\nhttps://github.com/metasfresh/metasfresh/issues/6682"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3429, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}