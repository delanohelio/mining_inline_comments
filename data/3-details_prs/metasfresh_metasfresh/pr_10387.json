{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTk1ODgx", "number": 10387, "title": "#10325 Print manufacturing order label ", "bodyText": "allow multiple selection", "createdAt": "2020-12-08T17:09:22Z", "url": "https://github.com/metasfresh/metasfresh/pull/10387", "merged": true, "mergeCommit": {"oid": "a8c34951d5b4f020b867f3ccd8653bd3fc3628b0"}, "closed": true, "closedAt": "2020-12-09T11:17:51Z", "author": {"login": "cristinamghita"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdilA8rgH2gAyNTM0NTk1ODgxOjhjZjNhZjQzNTk5YmUwY2RkM2Q1MTE4OTJiZTNkZjJmODZlZTg2ZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkc3W7gFqTU0ODA4MDI4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8cf3af43599be0cdd3d511892be3df2f86ee86ef", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/8cf3af43599be0cdd3d511892be3df2f86ee86ef", "committedDate": "2020-12-03T15:38:11Z", "message": "#10325 Try to use AD_Pinstance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0279635b24407807fd50557ff3d10f1cfc8212b9", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0279635b24407807fd50557ff3d10f1cfc8212b9", "committedDate": "2020-12-07T11:31:18Z", "message": "Merge branch 'master' into gh10325_1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500a4ab910cdf993d035ba58578212c2624025f5", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/500a4ab910cdf993d035ba58578212c2624025f5", "committedDate": "2020-12-07T18:02:32Z", "message": "#10325 Create T_Selection to use"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1951f011baeac3a66381633379de62d4d2ccbb7", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a1951f011baeac3a66381633379de62d4d2ccbb7", "committedDate": "2020-12-08T16:00:15Z", "message": "#10325 Create proper selection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDU3OTU5", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-547457959", "createdAt": "2020-12-08T17:22:38Z", "commit": {"oid": "a1951f011baeac3a66381633379de62d4d2ccbb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoyMjozOVrOIBrQaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoyMjozOVrOIBrQaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYyODIwMA==", "bodyText": "for sake of readability pls use a classic for.\nabout: PPOrderLineRow::getHuId\n\n\ncheck and consider only those lines which are about HUs, i.e. ppOrderLineRow.getType().isHUOrHUStorage()\n\n\nguard against null for getHuId()\n\n\nadd the huIds directly to a Set, instead of adding them to a list and then converting to a Set.", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r538628200", "createdAt": "2020-12-08T17:22:39Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -73,55 +79,73 @@ protected ProcessPreconditionsResolution checkPreconditionsApplicable()\n \tprotected String doIt()\n \t{\n \n+\t\t// create selection\n+\t\tfinal ImmutableSet<HuId> distinctHuIds = retrieveSelectedHuIds();\n+\t\tDB.createT_Selection(getPinstanceId(), distinctHuIds, ITrx.TRXNAME_None);\n+\n \t\t// print\n-\t\tfinal PPOrderLineRow row = getSingleSelectedRow();\n-\t\tfinal ReportResult label = printLabel(row);\n+\t\tfinal ReportResult label = printLabel();\n \n \t\t// preview\n-\t\tgetResult().setReportData(\n-\t\t\t\tlabel.getReportContent(),\n-\t\t\t\tbuildFilename(row),\n-\t\t\t\tOutputType.PDF.getContentType());\n+\t\tgetResult().setReportData(label.getReportContent(), buildFilename(), OutputType.PDF.getContentType());\n \n \t\treturn MSG_OK;\n \n \t}\n \n-\tprivate ReportResult printLabel(@NonNull final PPOrderLineRow row)\n+\tprivate ImmutableSet<HuId> retrieveSelectedHuIds()\n \t{\n-\t\tfinal PInstanceRequest pinstanceRequest = createPInstanceRequest(row);\n+\t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n+\n+\t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.collect(ImmutableList.toImmutableList());\n+\n+\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\n+\t\tselectedRows.forEach(row -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1951f011baeac3a66381633379de62d4d2ccbb7"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a1b9d3d6c852048c96902f228e128483b3911a20", "committedDate": "2020-12-08T17:33:49Z", "message": "#10325 Minor refacotoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODc1MDc2", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-547875076", "createdAt": "2020-12-09T06:29:56Z", "commit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoyOTo1NlrOICEmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoyOTo1NlrOICEmBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzMzNA==", "bodyText": "pls use HashSet.\nCollections.emptySet() returns an immutable empty set.", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043334", "createdAt": "2020-12-09T06:29:56Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODc1NDk2", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-547875496", "createdAt": "2020-12-09T06:31:02Z", "commit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTowMlrOICEndQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTowMlrOICEndQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzcwMQ==", "bodyText": "if u are filtering here by HU or HUStorage type.... below you won't get any MainProduct row...", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043701", "createdAt": "2020-12-09T06:31:02Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODc1NzA1", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-547875705", "createdAt": "2020-12-09T06:31:35Z", "commit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTozNVrOICEoRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTozNVrOICEoRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MzkxMA==", "bodyText": "this won't be matched anymore because above u filtered out this type", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539043910", "createdAt": "2020-12-09T06:31:35Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();\n \n-\t\tselectedRows.forEach(row -> {\n+\t\tfor (final PPOrderLineRow row : selectedRows)\n+\t\t{\n \t\t\tfinal PPOrderLineType type = row.getType();\n \t\t\tif (type.isMainProduct())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODc1ODM0", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-547875834", "createdAt": "2020-12-09T06:31:52Z", "commit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTo1MlrOICEowQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjozMTo1MlrOICEowQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0NDAzMw==", "bodyText": "why?", "url": "https://github.com/metasfresh/metasfresh/pull/10387#discussion_r539044033", "createdAt": "2020-12-09T06:31:52Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/pporder/process/WEBUI_PP_Order_PrintLabel.java", "diffHunk": "@@ -98,24 +98,30 @@ protected String doIt()\n \t\tfinal DocumentIdsSelection selectedRowIds = getSelectedRowIds();\n \n \t\tfinal ImmutableList<PPOrderLineRow> selectedRows = getView().streamByIds(selectedRowIds)\n+\t\t\t\t.filter(ppOrderLineRow -> ppOrderLineRow.getType().isHUOrHUStorage())\n \t\t\t\t.collect(ImmutableList.toImmutableList());\n \n-\t\tfinal List<HuId> huIds = new ArrayList<HuId>();\n+\t\tfinal Set<HuId> huIds = Collections.emptySet();\n \n-\t\tselectedRows.forEach(row -> {\n+\t\tfor (final PPOrderLineRow row : selectedRows)\n+\t\t{\n \t\t\tfinal PPOrderLineType type = row.getType();\n \t\t\tif (type.isMainProduct())\n \t\t\t{\n \t\t\t\tfinal ImmutableList<PPOrderLineRow> includedRows = row.getIncludedRows();\n-\t\t\t\tincludedRows.stream().map(PPOrderLineRow::getHuId).collect(Collectors.toCollection(() -> huIds));\n+\t\t\t\tincludedRows.stream()\n+\t\t\t\t\t\t.map(PPOrderLineRow::getHuId)\n+\t\t\t\t\t\t.filter(Objects::nonNull)\n+\t\t\t\t\t\t.collect(Collectors.toCollection(() -> huIds));\n \t\t\t}\n-\t\t\telse\n+\t\t\telse if (row.getHuId() != null)\n \t\t\t{\n \t\t\t\thuIds.add(row.getHuId());\n \t\t\t}\n-\t\t});\n+\t\t}\n \n-\t\tfinal ImmutableSet<HuId> distinctHuIds = huIds.stream().filter(Objects::nonNull).distinct()\n+\t\tfinal ImmutableSet<HuId> distinctHuIds = huIds.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1b9d3d6c852048c96902f228e128483b3911a20"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01bdbebe1696d97234d6443e0326594529322a2b", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/01bdbebe1696d97234d6443e0326594529322a2b", "committedDate": "2020-12-09T07:11:40Z", "message": "#10325 Fix selection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c0b4e79a362de4e9751d66b15033b816411459b", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/2c0b4e79a362de4e9751d66b15033b816411459b", "committedDate": "2020-12-09T08:33:01Z", "message": "Merge branch 'master' into gh10325_1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "030e2aae18001be03a7f328cabc733e338bc2a04", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/030e2aae18001be03a7f328cabc733e338bc2a04", "committedDate": "2020-12-09T08:33:41Z", "message": "#10325  Fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDgwMjgx", "url": "https://github.com/metasfresh/metasfresh/pull/10387#pullrequestreview-548080281", "createdAt": "2020-12-09T11:16:19Z", "commit": {"oid": "030e2aae18001be03a7f328cabc733e338bc2a04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2947, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}