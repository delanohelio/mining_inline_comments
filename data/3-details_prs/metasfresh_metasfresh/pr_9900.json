{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NjAwNTM0", "number": 9900, "title": "Support Payment Allocation with different currencies", "bodyText": "#9897", "createdAt": "2020-09-04T11:32:44Z", "url": "https://github.com/metasfresh/metasfresh/pull/9900", "merged": true, "mergeCommit": {"oid": "d31243fa896c34b762f5c0792bf17ffdd8d8ae1e"}, "closed": true, "closedAt": "2020-09-10T05:34:48Z", "author": {"login": "TheBestPessimist"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFhT1HgH2gAyNDc5NjAwNTM0OjE4MTY3MDJkNzEzNzY1NjlhMmFhNTYyMTRjNDA5MjI3Njk4NTQ5ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHZ_66gFqTQ4NTU5MzU1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1816702d71376569a2aa56214c409227698549ea", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1816702d71376569a2aa56214c409227698549ea", "committedDate": "2020-09-04T08:55:23Z", "message": "Nullability\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9ef0bcc6174218216b4a4064599a32f1277a5c0", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b9ef0bcc6174218216b4a4064599a32f1277a5c0", "committedDate": "2020-09-04T11:17:40Z", "message": "Nullability\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d8961231852e602961651da58a8be2215fe57a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f3d8961231852e602961651da58a8be2215fe57a", "committedDate": "2020-09-04T11:17:52Z", "message": "Small refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d4118bb9da32b1bd89a65ae9e2290e3d0a4a36", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/80d4118bb9da32b1bd89a65ae9e2290e3d0a4a36", "committedDate": "2020-09-04T11:18:21Z", "message": "Refactoring MoneyService\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890231ea7cfdc5db6ebefbc418c25e179435dce3", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/890231ea7cfdc5db6ebefbc418c25e179435dce3", "committedDate": "2020-09-04T11:20:16Z", "message": "Add `ClientId`, `Date`, `CurrencyConversionType` to `IPaymentDocument` and children\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96db47c987b6b39b417d6e451227eb3cd657b541", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/96db47c987b6b39b417d6e451227eb3cd657b541", "committedDate": "2020-09-04T11:31:12Z", "message": "`PaymentAllocationBuilder` supports different-currency Allocations\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc4b87bd82152ac87be9e88627e502046fe2e6d1", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/dc4b87bd82152ac87be9e88627e502046fe2e6d1", "committedDate": "2020-09-04T12:37:53Z", "message": "`PaymentDocument` returns DateTrx\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df28424325310ea2a35da5b97c2bed9cdaecd3ef", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/df28424325310ea2a35da5b97c2bed9cdaecd3ef", "committedDate": "2020-09-04T13:01:16Z", "message": "Midwork adding CurrencyConversiontypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc57c4268b0bcf6d15d29acd161225a4b28bb4ef", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bc57c4268b0bcf6d15d29acd161225a4b28bb4ef", "committedDate": "2020-09-07T10:50:29Z", "message": "Pass ClientAndOrgId, Date, CurrencyConversionTypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "962f94ea9be169b43ef2efdfebef2187fba85c57", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/962f94ea9be169b43ef2efdfebef2187fba85c57", "committedDate": "2020-09-07T10:51:48Z", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e3bbef160f5995eeabb92ef2540b03b36ae35e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b0e3bbef160f5995eeabb92ef2540b03b36ae35e", "committedDate": "2020-09-07T10:58:27Z", "message": "Fix test\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "481d8eba4f3059d009951f2fac73a5cbe988d9ae", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/481d8eba4f3059d009951f2fac73a5cbe988d9ae", "committedDate": "2020-09-07T10:59:24Z", "message": "Pass ClientAndOrgId, Date, CurrencyConversionTypeId\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4770c8dc1505bc502670589b0e55eb3b89e42db", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a4770c8dc1505bc502670589b0e55eb3b89e42db", "committedDate": "2020-09-07T12:04:02Z", "message": "Function GetOpenPayments: add C_ConversionType_ID\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aac167ff83afacc6fa410efca8d7136e90008bce", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/aac167ff83afacc6fa410efca8d7136e90008bce", "committedDate": "2020-09-07T12:06:35Z", "message": "Use Invoice currency when creating the allocation\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79eb834670cb2e6d26ad726fbc106f103d7df651", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/79eb834670cb2e6d26ad726fbc106f103d7df651", "committedDate": "2020-09-07T12:19:37Z", "message": "Function GetOpenInvoices: add C_ConversionType_ID\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bed7c003a4319b812a19ed6c7c24d18078e7190a", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bed7c003a4319b812a19ed6c7c24d18078e7190a", "committedDate": "2020-09-07T12:28:01Z", "message": "Fix swing\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d47b7e829f28a1dbbb2b701d5e2d8cb6b689444", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6d47b7e829f28a1dbbb2b701d5e2d8cb6b689444", "committedDate": "2020-09-07T13:48:33Z", "message": "Still not working correctly\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88958e753a467077bc70612d7fe18224ab43b63f", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/88958e753a467077bc70612d7fe18224ab43b63f", "committedDate": "2020-09-08T09:58:38Z", "message": "Add methods for money handling in `CurrencyRate`\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7ca4409c035b0f943a0a6a0ae21f0322598cbc", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/db7ca4409c035b0f943a0a6a0ae21f0322598cbc", "committedDate": "2020-09-08T10:02:45Z", "message": "Simpler calculation of amounts\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a5c243b9f49cd5c50073e18066357a3f8998e6b", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1a5c243b9f49cd5c50073e18066357a3f8998e6b", "committedDate": "2020-09-08T10:05:06Z", "message": "Add JUnit for different currencies\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fb31a7c81a7e6ba382faa991c061d8d33853723", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5fb31a7c81a7e6ba382faa991c061d8d33853723", "committedDate": "2020-09-08T12:13:41Z", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c1a2eb103b13bbaf1e20fe087b716e6db512e9b6", "committedDate": "2020-09-08T14:00:47Z", "message": "Invoice<->CreditMemo Allocation with different currencies works\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjMxOTkw", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-484231990", "createdAt": "2020-09-08T15:01:04Z", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowMTowNFrOHOhfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowMTowNFrOHOhfvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ==", "bodyText": "pls avoid changing files while are not related to the issue.\nmakes reviewing even more harder.", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484990911", "createdAt": "2020-09-08T15:01:04Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjM1ODgy", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-484235882", "createdAt": "2020-09-08T15:05:08Z", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNTowOFrOHOhrKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNTowOFrOHOhrKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MzgzMg==", "bodyText": "pls move those near the other services declared in this class... see line 78", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484993832", "createdAt": "2020-09-08T15:05:08Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/java/de/metas/banking/payment/paymentallocation/service/PaymentAllocationBuilder.java", "diffHunk": "@@ -40,6 +67,9 @@\n \t\tDO_NOTHING, WRITE_OFF, DISCOUNT\n \t}\n \n+\tprivate final MoneyService moneyService = SpringContextHolder.instance.getBean(MoneyService.class);\n+\tprivate final ICurrencyBL currencyBL = Services.get(ICurrencyBL.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjQwMDg1", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-484240085", "createdAt": "2020-09-08T15:09:39Z", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowOTozOVrOHOh2og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowOTozOVrOHOh2og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA==", "bodyText": "avoid avoid hardcoding ClientId", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484996770", "createdAt": "2020-09-08T15:09:39Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjQyMDc4", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-484242078", "createdAt": "2020-09-08T15:11:51Z", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMTo1MVrOHOh8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMTo1MVrOHOh8rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5ODMxOQ==", "bodyText": "why not using Amount.isZero instead of that weird \"equals\" comparation....", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484998319", "createdAt": "2020-09-08T15:11:51Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/payment_allocation/process/PaymentsViewAllocateCommand.java", "diffHunk": "@@ -210,9 +209,17 @@ static PayableDocument toPayableDocument(\n \t\t\t\t\t\t.build()\n \t\t\t\t\t\t.negateIf(soTrx.isPurchase()))\n \t\t\t\t.invoiceProcessingFeeCalculation(invoiceProcessingFeeCalculation)\n+\t\t\t\t.date(row.getDateInvoiced())\n+\t\t\t\t.clientAndOrgId(row.getClientAndOrgId())\n+\t\t\t\t.currencyConversionTypeId(row.getCurrencyConversionTypeId())\n \t\t\t\t.build();\n \t}\n \n+\tprivate static boolean hasServiceFeesToPay(final @NonNull InvoiceRow row, final CurrencyCode currencyCode)\n+\t{\n+\t\treturn row.getServiceFeeAmt() != null && !Amount.zero(currencyCode).equals(row.getServiceFeeAmt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjQzMTY2", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-484243166", "createdAt": "2020-09-08T15:13:01Z", "commit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMzowMlrOHOh_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMzowMlrOHOh_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA==", "bodyText": "avoid avoid hardcoding ClientId.\nClientId.METASFRESH is manly for testing!", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484999108", "createdAt": "2020-09-08T15:13:02Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad13e4fd41856db1c060c301f10819ae477b1be8", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ad13e4fd41856db1c060c301f10819ae477b1be8", "committedDate": "2020-09-09T05:01:41Z", "message": "Small refactoring\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8eb0267ed0daa4318b4933e30b9360982ff30af", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f8eb0267ed0daa4318b4933e30b9360982ff30af", "committedDate": "2020-09-09T05:21:25Z", "message": "Use `Env.getClientId()` instead of hardcoded value\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f10274294e8879a42088a16db4b05dd0f37a773e", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/f10274294e8879a42088a16db4b05dd0f37a773e", "committedDate": "2020-09-09T08:18:18Z", "message": "Add nullability annotations\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "439259612e12110d9e5ae25e49e329c36287043d", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/439259612e12110d9e5ae25e49e329c36287043d", "committedDate": "2020-09-09T08:18:40Z", "message": "Select only active ConversionRates\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/81d8f101a1e7bdb1f82e5f947127c2041860b021", "committedDate": "2020-09-09T11:57:18Z", "message": "Update sql function CurrencyRate\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MzAyMDU5", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-485302059", "createdAt": "2020-09-09T18:48:49Z", "commit": {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo0ODo0OVrOHPVORA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo0ODo0OVrOHPVORA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzODQwNA==", "bodyText": "can proooobably be stable", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485838404", "createdAt": "2020-09-09T18:48:49Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/sql/postgresql/system/5566700_sys_gh9897_UpdateFunction_GetOpenPayments.sql", "diffHunk": "@@ -0,0 +1,94 @@\n+DROP FUNCTION IF EXISTS getopenpayments(\n+    numeric,\n+    numeric,\n+    character varying,\n+    numeric,\n+    timestamp without time zone,\n+    numeric\n+);\n+DROP VIEW IF EXISTS t_getopenpayments;\n+\n+\n+\n+\n+CREATE OR REPLACE VIEW t_getopenpayments AS\n+SELECT\n+    NULL::numeric AS ad_org_id\n+     , NULL::numeric AS ad_client_id\n+     , NULL::numeric AS c_payment_id\n+     , NULL::numeric AS c_bpartner_id\n+     , NULL::character varying AS docno\n+     , NULL::timestamp without time zone AS paymentdate\n+     , NULL::timestamp without time zone AS dateacct  -- task 09643: separate transaction date form accounting date\n+     , NULL::character varying AS doctype\n+     , NULL::character varying AS bpartnername\n+     , NULL::character(3) AS iso_code\n+     , NULL::numeric as ConvertTo_Currency_ID\n+     , NULL::character(3) AS ConvertTo_Currency_ISO_Code\n+     , NULL::numeric AS orig_total\n+     , NULL::numeric AS conv_total\n+     , NULL::numeric AS conv_open\n+     , NULL::numeric AS multiplierap\n+     , NULL::numeric AS C_ConversionType_ID\n+;\n+COMMENT ON VIEW t_getopenpayments IS 'Used as return type in the SQL-function getopenpayments';\n+\n+\n+\n+CREATE OR REPLACE FUNCTION getopenpayments(\n+    c_bpartner_id numeric -- 1\n+                                          , c_currency_id numeric -- 2\n+                                          , ismulticurrency character varying -- 3\n+                                          , ad_org_id numeric -- 4\n+                                          , date timestamp without time zone -- 5\n+                                          , c_payment_id numeric -- 6\n+)\n+    RETURNS SETOF t_getopenpayments AS\n+$BODY$\n+SELECT\n+    p.AD_Org_ID,\n+    p.AD_Client_ID,\n+    p.C_Payment_ID,\n+    p.C_Bpartner_ID,\n+    p.DocumentNo AS DocNo,\n+    p.DateTrx,\n+    p.DateAcct,  -- task 09643: separate transaction date form accounting date\n+    dt.name AS DocType,\n+    bp.name AS BPartnerName,\n+    c.ISO_Code,\n+    COALESCE($2, p.C_Currency_ID) as ConvertTo_Currency_ID,\n+    convertToCurrency.ISO_Code AS ConvertTo_Currency_ISO_Code,\n+    p.PayAmt AS Orig_Total,\n+    currencyConvert(p.PayAmt, p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Total,\n+    currencyConvert(paymentAvailable(p.C_Payment_ID), p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Open,\n+    p.MultiplierAP::numeric,\n+    p.C_ConversionType_ID\n+FROM\n+    C_Payment_v p\n+        INNER JOIN C_Currency c ON (p.C_Currency_ID = c.C_Currency_ID)\n+        INNER JOIN C_Currency convertToCurrency ON (convertToCurrency.C_Currency_ID=COALESCE($2, p.C_Currency_ID))\n+        INNER JOIN C_DocType dt ON (p.C_DocType_ID = dt.C_DocType_ID)\n+        INNER JOIN C_BPartner bp ON (p.C_BPartner_ID = bp.C_BPartner_ID)\n+WHERE\n+    (\n+            ($1 IS NULL AND $6 IS NULL) -- no C_BPartner_ID nor C_Payment_ID is set\n+            OR p.C_BPartner_ID = $1\n+            OR p.C_BPartner_ID IN (SELECT C_BPartnerRelation_ID FROM C_BP_Relation WHERE C_BP_Relation.C_BPartner_ID = $1 AND isPayFrom = 'Y' AND isActive = 'Y')\n+            OR p.C_Payment_ID = $6\n+        )\n+  AND p.IsAllocated='N'\n+  AND p.Processed='Y'\n+  AND p.C_Charge_ID IS NULL\n+  AND ($3 = 'Y' OR p.C_Currency_ID=$2)\n+  AND ($4 IS NULL OR $4=0 or p.AD_Org_ID=$4)\n+ORDER BY\n+    p.DateTrx, p.DocumentNo\n+    ;\n+$BODY$\n+    LANGUAGE sql VOLATILE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d667d5022db185bffea0300c07bdf83577a78042", "author": {"user": {"login": "TheBestPessimist", "name": "TheBestPessimist"}}, "url": "https://github.com/metasfresh/metasfresh/commit/d667d5022db185bffea0300c07bdf83577a78042", "committedDate": "2020-09-10T05:30:09Z", "message": "Sql functions `GetOpenInvoices` and `GetOpenPayments` are stable\n\nhttps://github.com/metasfresh/metasfresh/issues/9897"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTkzNTU0", "url": "https://github.com/metasfresh/metasfresh/pull/9900#pullrequestreview-485593554", "createdAt": "2020-09-10T05:32:09Z", "commit": {"oid": "d667d5022db185bffea0300c07bdf83577a78042"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3163, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}