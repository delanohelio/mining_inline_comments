{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTYyMjEz", "number": 6397, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMToxMVrODrOxWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMTozOVrODtps5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU3MzY4OnYy", "diffSide": "RIGHT", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMToxMVrOF7c6hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMToxMVrOF7c6hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDAzOA==", "bodyText": "use BigDecimal.signum() instead", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397884038", "createdAt": "2020-03-25T14:11:11Z", "author": {"login": "metas-ts"}, "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t}\n+\n+\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n+\t{\n+\t\tList<I_PMM_PurchaseCandidate> filteredList = new ArrayList<I_PMM_PurchaseCandidate>();\n+\t\tfor (I_PMM_PurchaseCandidate candidate : candidates)\n+\t\t{\n+\t\t\tif (candidate.getQtyOrdered().compareTo(BigDecimal.ZERO) > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU3NDMwOnYy", "diffSide": "RIGHT", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMToyMFrOF7c66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMToyMFrOF7c66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NDEzOA==", "bodyText": "explicitly log the IDs of the PMM_PurchaseCandidate which you skip here\n\nuse Loggables.withLogger(logger, Level.DEBUG) for that, to make sure it's in the async-workpackage-log as well as in the actually logback-log", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397884138", "createdAt": "2020-03-25T14:11:20Z", "author": {"login": "metas-ts"}, "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);\n+\t}\n+\n+\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)\n+\t{\n+\t\tList<I_PMM_PurchaseCandidate> filteredList = new ArrayList<I_PMM_PurchaseCandidate>();\n+\t\tfor (I_PMM_PurchaseCandidate candidate : candidates)\n+\t\t{\n+\t\t\tif (candidate.getQtyOrdered().compareTo(BigDecimal.ZERO) > 0)\n+\t\t\t{\n+\t\t\t\tfilteredList.add(candidate);\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU4MTczOnYy", "diffSide": "RIGHT", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMjo1OVrOF7c_eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxMjo1OVrOF7c_eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4NTMwNA==", "bodyText": "Already when enqeuting this, make sure to only add PMM_PurchaseCandidates that have a quantity.\nit's still possible theat they are zero-ed menwhile, but for that, there will be logging, see below", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r397885304", "createdAt": "2020-03-25T14:12:59Z", "author": {"login": "metas-ts"}, "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -66,7 +64,20 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \tprivate List<I_PMM_PurchaseCandidate> retrieveItems()\n \t{\n \t\tfinal I_C_Queue_WorkPackage workpackage = getC_Queue_WorkPackage();\n-\t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n+\t\treturn Services.get(IQueueDAO.class).retrieveAllItems(workpackage, I_PMM_PurchaseCandidate.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0b73dc967100c5000d81e13c6c5fa0cb9f2f1c9"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTk1MjM1OnYy", "diffSide": "LEFT", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMDowNlrOF_M-rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMDowNlrOF_M-rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNzI2Mg==", "bodyText": "alright, good you removed it again; OrderLineAggregation already does that job (i saw it only now \ud83d\ude0a ).", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r401817262", "createdAt": "2020-04-01T18:20:06Z", "author": {"login": "metas-ts"}, "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -68,19 +68,6 @@ public Result processWorkPackage(final I_C_Queue_WorkPackage workPackage, final\n \t\treturn Services.get(IQueueDAO.class).retrieveItemsSkipMissing(workpackage, I_PMM_PurchaseCandidate.class, ITrx.TRXNAME_ThreadInherited);\n \t}\n \n-\tprivate List<I_PMM_PurchaseCandidate> getItemsWithQty(List<I_PMM_PurchaseCandidate> candidates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d53e68708cbce7a09ec3e0b5f2614e1b1afd904"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTk1NzQ4OnYy", "diffSide": "RIGHT", "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMTozOVrOF_NCBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMTozOVrOF_NCBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxODExOQ==", "bodyText": "please quickly clean up the imports; i think at least BigDecimal is not needed anymore", "url": "https://github.com/metasfresh/metasfresh/pull/6397#discussion_r401818119", "createdAt": "2020-04-01T18:21:39Z", "author": {"login": "metas-ts"}, "path": "de.metas.procurement.base/src/main/java/de/metas/procurement/base/order/async/PMM_GenerateOrders.java", "diffHunk": "@@ -1,16 +1,17 @@\n package de.metas.procurement.base.order.async;\n \n-import java.util.List;\n-\n-import org.adempiere.ad.trx.api.ITrx;\n-import org.adempiere.exceptions.AdempiereException;\n-\n import de.metas.async.api.IQueueDAO;\n import de.metas.async.model.I_C_Queue_WorkPackage;\n import de.metas.async.spi.WorkpackageProcessorAdapter;\n import de.metas.procurement.base.model.I_PMM_PurchaseCandidate;\n import de.metas.procurement.base.order.impl.OrdersGenerator;\n import de.metas.util.Services;\n+import org.adempiere.ad.trx.api.ITrx;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13d9127c67358000736ff9096cce17fd22cfd24"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1454, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}