{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NjAwNTM0", "number": 9900, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowMTowNFrOEhSjzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo0ODo0OVrOEhzxZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQyNTQzOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowMTowNFrOHOhfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyNTo1OFrOHO6JSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ==", "bodyText": "pls avoid changing files while are not related to the issue.\nmakes reviewing even more harder.", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484990911", "createdAt": "2020-09-08T15:01:04Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNDkyOQ==", "bodyText": "what about the boyscout rule?", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485334929", "createdAt": "2020-09-09T04:46:32Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzOTgxNw==", "bodyText": "plus: reviewing these side-touched files should be relatively easy, because most of the changes are:\n\nnullability annotations\nremoving parameter names from comments if they dont have javadoc\ncleanup of final/static when lombok already adds that\nfixing typos", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485339817", "createdAt": "2020-09-09T05:03:59Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NDc2Mw==", "bodyText": "boy scout rule says to clear the place near you, not the place in the next forest :)\nhere, to be more precise, I wasn't sure if there were some changes related to this task or just some cleanup.\nthanks for explaining.", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485394763", "createdAt": "2020-09-09T07:25:58Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.adempiere.adempiere/client/src/main/java/org/compiere/apps/search/FindHelper.java", "diffHunk": "@@ -35,16 +34,13 @@\n import de.metas.adempiere.util.Permutation;\n import de.metas.util.Check;\n \n-/**\n- * \n- * @author tsa\n- * \n- */\n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MDkxMQ=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ0MzcwOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.banking/de.metas.banking.base/src/main/java/de/metas/banking/payment/paymentallocation/service/PaymentAllocationBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowNTowOFrOHOhrKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDo0ODo0OFrOHO2iHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MzgzMg==", "bodyText": "pls move those near the other services declared in this class... see line 78", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484993832", "createdAt": "2020-09-08T15:05:08Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/java/de/metas/banking/payment/paymentallocation/service/PaymentAllocationBuilder.java", "diffHunk": "@@ -40,6 +67,9 @@\n \t\tDO_NOTHING, WRITE_OFF, DISCOUNT\n \t}\n \n+\tprivate final MoneyService moneyService = SpringContextHolder.instance.getBean(MoneyService.class);\n+\tprivate final ICurrencyBL currencyBL = Services.get(ICurrencyBL.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNTU4MQ==", "bodyText": "done", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485335581", "createdAt": "2020-09-09T04:48:48Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/java/de/metas/banking/payment/paymentallocation/service/PaymentAllocationBuilder.java", "diffHunk": "@@ -40,6 +67,9 @@\n \t\tDO_NOTHING, WRITE_OFF, DISCOUNT\n \t}\n \n+\tprivate final MoneyService moneyService = SpringContextHolder.instance.getBean(MoneyService.class);\n+\tprivate final ICurrencyBL currencyBL = Services.get(ICurrencyBL.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5MzgzMg=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ2MTgwOnYy", "diffSide": "RIGHT", "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNTowOTozOVrOHOh2og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyNzozN1rOHO6M-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA==", "bodyText": "avoid avoid hardcoding ClientId", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484996770", "createdAt": "2020-09-08T15:09:39Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MTk5MA==", "bodyText": "Problem: i don't have a client id here and i believe org is null as well as it is never set to the builder.\nI guess this never failed because it was never used.\nIs there a point in investing any time in fixing this, since this belongs to swing?\nCan i use Env.getClientId() and Env.getOrgId() to get some generic values?", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485341990", "createdAt": "2020-09-09T05:11:48Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjgyMA==", "bodyText": "agree. don't invest time in swing.", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485392820", "createdAt": "2020-09-09T07:22:25Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NTcwNA==", "bodyText": "fixed", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485395704", "createdAt": "2020-09-09T07:27:37Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/InvoiceRow.java", "diffHunk": "@@ -533,7 +535,7 @@ else if (invoiceRow.getC_Order_ID() > 0)\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(invoiceRow.getCurrencyISOCode()).getId();\n \n \t\treturn PayableDocument.builder()\n-\t\t\t\t.orgId(invoiceRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, invoiceRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5Njc3MA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ3MTM2OnYy", "diffSide": "RIGHT", "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/payment_allocation/process/PaymentsViewAllocateCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMTo1MVrOHOh8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNDo1MToyMFrOHO2lKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5ODMxOQ==", "bodyText": "why not using Amount.isZero instead of that weird \"equals\" comparation....", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484998319", "createdAt": "2020-09-08T15:11:51Z", "author": {"login": "teosarca"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/payment_allocation/process/PaymentsViewAllocateCommand.java", "diffHunk": "@@ -210,9 +209,17 @@ static PayableDocument toPayableDocument(\n \t\t\t\t\t\t.build()\n \t\t\t\t\t\t.negateIf(soTrx.isPurchase()))\n \t\t\t\t.invoiceProcessingFeeCalculation(invoiceProcessingFeeCalculation)\n+\t\t\t\t.date(row.getDateInvoiced())\n+\t\t\t\t.clientAndOrgId(row.getClientAndOrgId())\n+\t\t\t\t.currencyConversionTypeId(row.getCurrencyConversionTypeId())\n \t\t\t\t.build();\n \t}\n \n+\tprivate static boolean hasServiceFeesToPay(final @NonNull InvoiceRow row, final CurrencyCode currencyCode)\n+\t{\n+\t\treturn row.getServiceFeeAmt() != null && !Amount.zero(currencyCode).equals(row.getServiceFeeAmt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTMzNjM2Mg==", "bodyText": "done", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485336362", "createdAt": "2020-09-09T04:51:20Z", "author": {"login": "TheBestPessimist"}, "path": "backend/metasfresh-webui-api/src/main/java/de/metas/ui/web/payment_allocation/process/PaymentsViewAllocateCommand.java", "diffHunk": "@@ -210,9 +209,17 @@ static PayableDocument toPayableDocument(\n \t\t\t\t\t\t.build()\n \t\t\t\t\t\t.negateIf(soTrx.isPurchase()))\n \t\t\t\t.invoiceProcessingFeeCalculation(invoiceProcessingFeeCalculation)\n+\t\t\t\t.date(row.getDateInvoiced())\n+\t\t\t\t.clientAndOrgId(row.getClientAndOrgId())\n+\t\t\t\t.currencyConversionTypeId(row.getCurrencyConversionTypeId())\n \t\t\t\t.build();\n \t}\n \n+\tprivate static boolean hasServiceFeesToPay(final @NonNull InvoiceRow row, final CurrencyCode currencyCode)\n+\t{\n+\t\treturn row.getServiceFeeAmt() != null && !Amount.zero(currencyCode).equals(row.getServiceFeeAmt());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5ODMxOQ=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ3NjA4OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxMzowMlrOHOh_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyNzozMFrOHO6Msg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA==", "bodyText": "avoid avoid hardcoding ClientId.\nClientId.METASFRESH is manly for testing!", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r484999108", "createdAt": "2020-09-08T15:13:02Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjQxMg==", "bodyText": "Problem: i don't have a client id here and i believe org is null as well as it is never set to the builder.\nI guess this never failed because it was never used.\nIs there a point in investing any time in fixing this, since this belongs to swing?\nCan i use Env.getClientId() and Env.getOrgId() to get some generic values?", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485342412", "createdAt": "2020-09-09T05:13:16Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NDg3OA==", "bodyText": "agree. don't invest time in swing.", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485394878", "createdAt": "2020-09-09T07:26:10Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NTYzNA==", "bodyText": "fixed", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485395634", "createdAt": "2020-09-09T07:27:30Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.swingui/src/main/java/de/metas/banking/payment/paymentallocation/model/PaymentRow.java", "diffHunk": "@@ -242,14 +244,15 @@ public IPaymentDocument copyAsPaymentDocument()\n \t\tfinal CurrencyId currencyId = currenciesRepo.getByCurrencyCode(paymentRow.getCurrencyISOCode()).getId();\n \n \t\treturn PaymentDocument.builder()\n-\t\t\t\t.orgId(paymentRow.getOrgId())\n+\t\t\t\t.clientAndOrgId(ClientAndOrgId.ofClientAndOrg(ClientId.METASFRESH, paymentRow.getOrgId()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk5OTEwOA=="}, "originalCommit": {"oid": "c1a2eb103b13bbaf1e20fe087b716e6db512e9b6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODg2Njk1OnYy", "diffSide": "RIGHT", "path": "backend/de.metas.banking/de.metas.banking.base/src/main/sql/postgresql/system/5566700_sys_gh9897_UpdateFunction_GetOpenPayments.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODo0ODo0OVrOHPVORA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTozMDoyNFrOHPjopg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzODQwNA==", "bodyText": "can proooobably be stable", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r485838404", "createdAt": "2020-09-09T18:48:49Z", "author": {"login": "metas-ts"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/sql/postgresql/system/5566700_sys_gh9897_UpdateFunction_GetOpenPayments.sql", "diffHunk": "@@ -0,0 +1,94 @@\n+DROP FUNCTION IF EXISTS getopenpayments(\n+    numeric,\n+    numeric,\n+    character varying,\n+    numeric,\n+    timestamp without time zone,\n+    numeric\n+);\n+DROP VIEW IF EXISTS t_getopenpayments;\n+\n+\n+\n+\n+CREATE OR REPLACE VIEW t_getopenpayments AS\n+SELECT\n+    NULL::numeric AS ad_org_id\n+     , NULL::numeric AS ad_client_id\n+     , NULL::numeric AS c_payment_id\n+     , NULL::numeric AS c_bpartner_id\n+     , NULL::character varying AS docno\n+     , NULL::timestamp without time zone AS paymentdate\n+     , NULL::timestamp without time zone AS dateacct  -- task 09643: separate transaction date form accounting date\n+     , NULL::character varying AS doctype\n+     , NULL::character varying AS bpartnername\n+     , NULL::character(3) AS iso_code\n+     , NULL::numeric as ConvertTo_Currency_ID\n+     , NULL::character(3) AS ConvertTo_Currency_ISO_Code\n+     , NULL::numeric AS orig_total\n+     , NULL::numeric AS conv_total\n+     , NULL::numeric AS conv_open\n+     , NULL::numeric AS multiplierap\n+     , NULL::numeric AS C_ConversionType_ID\n+;\n+COMMENT ON VIEW t_getopenpayments IS 'Used as return type in the SQL-function getopenpayments';\n+\n+\n+\n+CREATE OR REPLACE FUNCTION getopenpayments(\n+    c_bpartner_id numeric -- 1\n+                                          , c_currency_id numeric -- 2\n+                                          , ismulticurrency character varying -- 3\n+                                          , ad_org_id numeric -- 4\n+                                          , date timestamp without time zone -- 5\n+                                          , c_payment_id numeric -- 6\n+)\n+    RETURNS SETOF t_getopenpayments AS\n+$BODY$\n+SELECT\n+    p.AD_Org_ID,\n+    p.AD_Client_ID,\n+    p.C_Payment_ID,\n+    p.C_Bpartner_ID,\n+    p.DocumentNo AS DocNo,\n+    p.DateTrx,\n+    p.DateAcct,  -- task 09643: separate transaction date form accounting date\n+    dt.name AS DocType,\n+    bp.name AS BPartnerName,\n+    c.ISO_Code,\n+    COALESCE($2, p.C_Currency_ID) as ConvertTo_Currency_ID,\n+    convertToCurrency.ISO_Code AS ConvertTo_Currency_ISO_Code,\n+    p.PayAmt AS Orig_Total,\n+    currencyConvert(p.PayAmt, p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Total,\n+    currencyConvert(paymentAvailable(p.C_Payment_ID), p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Open,\n+    p.MultiplierAP::numeric,\n+    p.C_ConversionType_ID\n+FROM\n+    C_Payment_v p\n+        INNER JOIN C_Currency c ON (p.C_Currency_ID = c.C_Currency_ID)\n+        INNER JOIN C_Currency convertToCurrency ON (convertToCurrency.C_Currency_ID=COALESCE($2, p.C_Currency_ID))\n+        INNER JOIN C_DocType dt ON (p.C_DocType_ID = dt.C_DocType_ID)\n+        INNER JOIN C_BPartner bp ON (p.C_BPartner_ID = bp.C_BPartner_ID)\n+WHERE\n+    (\n+            ($1 IS NULL AND $6 IS NULL) -- no C_BPartner_ID nor C_Payment_ID is set\n+            OR p.C_BPartner_ID = $1\n+            OR p.C_BPartner_ID IN (SELECT C_BPartnerRelation_ID FROM C_BP_Relation WHERE C_BP_Relation.C_BPartner_ID = $1 AND isPayFrom = 'Y' AND isActive = 'Y')\n+            OR p.C_Payment_ID = $6\n+        )\n+  AND p.IsAllocated='N'\n+  AND p.Processed='Y'\n+  AND p.C_Charge_ID IS NULL\n+  AND ($3 = 'Y' OR p.C_Currency_ID=$2)\n+  AND ($4 IS NULL OR $4=0 or p.AD_Org_ID=$4)\n+ORDER BY\n+    p.DateTrx, p.DocumentNo\n+    ;\n+$BODY$\n+    LANGUAGE sql VOLATILE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA3NDUzNA==", "bodyText": "done", "url": "https://github.com/metasfresh/metasfresh/pull/9900#discussion_r486074534", "createdAt": "2020-09-10T05:30:24Z", "author": {"login": "TheBestPessimist"}, "path": "backend/de.metas.banking/de.metas.banking.base/src/main/sql/postgresql/system/5566700_sys_gh9897_UpdateFunction_GetOpenPayments.sql", "diffHunk": "@@ -0,0 +1,94 @@\n+DROP FUNCTION IF EXISTS getopenpayments(\n+    numeric,\n+    numeric,\n+    character varying,\n+    numeric,\n+    timestamp without time zone,\n+    numeric\n+);\n+DROP VIEW IF EXISTS t_getopenpayments;\n+\n+\n+\n+\n+CREATE OR REPLACE VIEW t_getopenpayments AS\n+SELECT\n+    NULL::numeric AS ad_org_id\n+     , NULL::numeric AS ad_client_id\n+     , NULL::numeric AS c_payment_id\n+     , NULL::numeric AS c_bpartner_id\n+     , NULL::character varying AS docno\n+     , NULL::timestamp without time zone AS paymentdate\n+     , NULL::timestamp without time zone AS dateacct  -- task 09643: separate transaction date form accounting date\n+     , NULL::character varying AS doctype\n+     , NULL::character varying AS bpartnername\n+     , NULL::character(3) AS iso_code\n+     , NULL::numeric as ConvertTo_Currency_ID\n+     , NULL::character(3) AS ConvertTo_Currency_ISO_Code\n+     , NULL::numeric AS orig_total\n+     , NULL::numeric AS conv_total\n+     , NULL::numeric AS conv_open\n+     , NULL::numeric AS multiplierap\n+     , NULL::numeric AS C_ConversionType_ID\n+;\n+COMMENT ON VIEW t_getopenpayments IS 'Used as return type in the SQL-function getopenpayments';\n+\n+\n+\n+CREATE OR REPLACE FUNCTION getopenpayments(\n+    c_bpartner_id numeric -- 1\n+                                          , c_currency_id numeric -- 2\n+                                          , ismulticurrency character varying -- 3\n+                                          , ad_org_id numeric -- 4\n+                                          , date timestamp without time zone -- 5\n+                                          , c_payment_id numeric -- 6\n+)\n+    RETURNS SETOF t_getopenpayments AS\n+$BODY$\n+SELECT\n+    p.AD_Org_ID,\n+    p.AD_Client_ID,\n+    p.C_Payment_ID,\n+    p.C_Bpartner_ID,\n+    p.DocumentNo AS DocNo,\n+    p.DateTrx,\n+    p.DateAcct,  -- task 09643: separate transaction date form accounting date\n+    dt.name AS DocType,\n+    bp.name AS BPartnerName,\n+    c.ISO_Code,\n+    COALESCE($2, p.C_Currency_ID) as ConvertTo_Currency_ID,\n+    convertToCurrency.ISO_Code AS ConvertTo_Currency_ISO_Code,\n+    p.PayAmt AS Orig_Total,\n+    currencyConvert(p.PayAmt, p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Total,\n+    currencyConvert(paymentAvailable(p.C_Payment_ID), p.C_Currency_ID, COALESCE($2, p.C_Currency_ID), $5, p.C_ConversionType_ID, p.AD_Client_ID, p.AD_Org_ID) AS Conv_Open,\n+    p.MultiplierAP::numeric,\n+    p.C_ConversionType_ID\n+FROM\n+    C_Payment_v p\n+        INNER JOIN C_Currency c ON (p.C_Currency_ID = c.C_Currency_ID)\n+        INNER JOIN C_Currency convertToCurrency ON (convertToCurrency.C_Currency_ID=COALESCE($2, p.C_Currency_ID))\n+        INNER JOIN C_DocType dt ON (p.C_DocType_ID = dt.C_DocType_ID)\n+        INNER JOIN C_BPartner bp ON (p.C_BPartner_ID = bp.C_BPartner_ID)\n+WHERE\n+    (\n+            ($1 IS NULL AND $6 IS NULL) -- no C_BPartner_ID nor C_Payment_ID is set\n+            OR p.C_BPartner_ID = $1\n+            OR p.C_BPartner_ID IN (SELECT C_BPartnerRelation_ID FROM C_BP_Relation WHERE C_BP_Relation.C_BPartner_ID = $1 AND isPayFrom = 'Y' AND isActive = 'Y')\n+            OR p.C_Payment_ID = $6\n+        )\n+  AND p.IsAllocated='N'\n+  AND p.Processed='Y'\n+  AND p.C_Charge_ID IS NULL\n+  AND ($3 = 'Y' OR p.C_Currency_ID=$2)\n+  AND ($4 IS NULL OR $4=0 or p.AD_Org_ID=$4)\n+ORDER BY\n+    p.DateTrx, p.DocumentNo\n+    ;\n+$BODY$\n+    LANGUAGE sql VOLATILE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzODQwNA=="}, "originalCommit": {"oid": "81d8f101a1e7bdb1f82e5f947127c2041860b021"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1274, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}