{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MDYwNDc3", "number": 7086, "title": "#7058 Automatic DD Order Movement ", "bodyText": "#7058 Automatic DD Order Movement", "createdAt": "2020-07-30T10:37:22Z", "url": "https://github.com/metasfresh/metasfresh/pull/7086", "merged": true, "mergeCommit": {"oid": "694564f601b20db869ac36220be583e91a2e5a03"}, "closed": true, "closedAt": "2020-07-30T15:28:28Z", "author": {"login": "cristinamghita"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc588FjAH2gAyNDU5MDYwNDc3OmI1NTAxOWU5OWEyOWJjNzg0NTRiNTA5ZTMxOWIxYjk0MWMzZDcxMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6BF5RAH2gAyNDU5MDYwNDc3Ojk5MGQ1Y2ExZmQyODhlMDY3M2Y2YjgyZWJkNTM0NmJhZGQxYmNmZTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b55019e99a29bc78454b509e319b1b941c3d7120", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b55019e99a29bc78454b509e319b1b941c3d7120", "committedDate": "2020-07-30T10:19:42Z", "message": "#7058 Implement creating movenment - WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bb7158d91b3c9af19d8275ec0ebed0bc420e065", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/0bb7158d91b3c9af19d8275ec0ebed0bc420e065", "committedDate": "2020-07-30T10:20:08Z", "message": "#7058 Format code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7614a363b153d9a3a4e526b42e55d3f131ca9072", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/7614a363b153d9a3a4e526b42e55d3f131ca9072", "committedDate": "2020-07-30T10:20:33Z", "message": "#7058 Implement creating movements when completing DD Order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e1565a16339134cec6cb15db538c54e47bd3b16", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/9e1565a16339134cec6cb15db538c54e47bd3b16", "committedDate": "2020-07-30T10:20:50Z", "message": "#7058 Add sys config for controlling when to create movements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1beb87ee50171ac7b9e22ec715b27c9db8cb23", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5c1beb87ee50171ac7b9e22ec715b27c9db8cb23", "committedDate": "2020-07-30T10:21:11Z", "message": "#7058 Add messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332343f305e4387cee9b742d273a1e06c9ab8557", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/332343f305e4387cee9b742d273a1e06c9ab8557", "committedDate": "2020-07-30T10:21:21Z", "message": "#7058 Void movements if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af32d52add4863cb9165432bd9c980f9d00853de", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/af32d52add4863cb9165432bd9c980f9d00853de", "committedDate": "2020-07-30T10:21:34Z", "message": "#7058 Reverse movement when voiding or reactivating DD Order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdf5f22670c646d7fc1bcc6a9892560a856d1d68", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/fdf5f22670c646d7fc1bcc6a9892560a856d1d68", "committedDate": "2020-07-30T10:22:11Z", "message": "#7058 Code improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f9b5f2933c2278b449c3b4ca5f2c298b2e91856", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/3f9b5f2933c2278b449c3b4ca5f2c298b2e91856", "committedDate": "2020-07-30T10:22:28Z", "message": "#7058 Use repor for retrieving warehouse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d04ac0cdf5a9f58a47b03724e27314aa9afab95", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5d04ac0cdf5a9f58a47b03724e27314aa9afab95", "committedDate": "2020-07-30T10:22:38Z", "message": "#7058 Allo creating movements in the current ttransaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbbade1e6c0d2dc68a5de4b89b482c4bffc07240", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bbbade1e6c0d2dc68a5de4b89b482c4bffc07240", "committedDate": "2020-07-30T10:22:47Z", "message": "#7058 Pimp the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c80550783113656d7be832bfe9df61f8169773cb", "author": {"user": {"login": "pvpurcarcosmin", "name": null}}, "url": "https://github.com/metasfresh/metasfresh/commit/c80550783113656d7be832bfe9df61f8169773cb", "committedDate": "2020-07-30T10:23:01Z", "message": "Gh7075 (#7076)\n\nrefs: https://github.com/metasfresh/metasfresh/issues/7075"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd6ddc39dff13057306fd9b9cdbc5d3379791472", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bd6ddc39dff13057306fd9b9cdbc5d3379791472", "committedDate": "2020-07-30T10:30:17Z", "message": "#7058 Refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faff53d8b53c01f647b0c515d2d4b0aea727e493", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/faff53d8b53c01f647b0c515d2d4b0aea727e493", "committedDate": "2020-07-30T10:30:31Z", "message": "#7058 Implement transforming Hus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bbf18173b5f4f9164e8fb6164f83da0cda12e3a", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/6bbf18173b5f4f9164e8fb6164f83da0cda12e3a", "committedDate": "2020-07-30T10:30:42Z", "message": "#7058 Take out comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a35dd53cdf8a7be170eb773810ca59626cd0fb86", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a35dd53cdf8a7be170eb773810ca59626cd0fb86", "committedDate": "2020-07-30T10:30:53Z", "message": "#7058 Minor refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbff83ddfffe0dde6d34bd56aa85011b2782e4f5", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/cbff83ddfffe0dde6d34bd56aa85011b2782e4f5", "committedDate": "2020-07-30T10:31:01Z", "message": "#7058 Minor improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01bf10b70edcdcc57a538179745d90bcfbbb5bc", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b01bf10b70edcdcc57a538179745d90bcfbbb5bc", "committedDate": "2020-07-30T10:34:34Z", "message": "#7058 Move all services to the top"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3534b4554bb42509de7c39dddf9058ef5eccf78f", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/3534b4554bb42509de7c39dddf9058ef5eccf78f", "committedDate": "2020-07-30T10:36:14Z", "message": "#7058 Improvments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c81c89c5615a87042d572b134ed2bd257db167b", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/5c81c89c5615a87042d572b134ed2bd257db167b", "committedDate": "2020-07-30T11:48:37Z", "message": "#7058 Minor comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzM0NjQz", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458334643", "createdAt": "2020-07-30T12:03:43Z", "commit": {"oid": "5c81c89c5615a87042d572b134ed2bd257db167b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowMzo0M1rOG5gEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowMzo0M1rOG5gEvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NzUxOA==", "bodyText": "makes no sense to have @NonNull on primitive types", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r462947518", "createdAt": "2020-07-30T12:03:43Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.business/src/main/java/org/adempiere/mmovement/api/IMovementDAO.java", "diffHunk": "@@ -59,4 +60,6 @@\n \tvoid save(final I_M_Movement movement);\n \n \tvoid save(final I_M_MovementLine movementLine);\n+\n+\tList<I_M_Movement> retrieveMovementsForDDOrder(@NonNull int ddOrderId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c81c89c5615a87042d572b134ed2bd257db167b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a", "committedDate": "2020-07-30T12:06:02Z", "message": "#7058 Remove pointeles non null check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzM3OTc0", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458337974", "createdAt": "2020-07-30T12:08:51Z", "commit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowODo1MlrOG5gN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowODo1MlrOG5gN7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0OTg3MQ==", "bodyText": "avoid model getter", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r462949871", "createdAt": "2020-07-30T12:08:52Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ddorder/api/impl/HUDDOrderBL.java", "diffHunk": "@@ -209,4 +233,119 @@ private BPartnerAndLocationId extractBPartnerAndLocationId(final HUToDistribute\n \t\tint bpartnerId;\n \t\tint bpartnerLocationId;\n \t}\n+\n+\t@Override\n+\tpublic void processDDOrderLines(@NonNull final I_DD_Order ddOrder)\n+\t{\n+\t\tfinal List<I_DD_OrderLine> ddOrderLines = ddOrderDAO.retrieveLines(ddOrder);\n+\n+\t\tfor (final I_DD_OrderLine ddOrderLine : ddOrderLines)\n+\t\t{\n+\t\t\tfinal List<I_M_HU> hus = retrieveNeededHusToMove(ddOrderLine);\n+\t\t\tif (hus.isEmpty())\n+\t\t\t{\n+\t\t\t\tfinal WarehouseId warehouseId = warehouseDAO.getWarehouseIdByLocatorRepoId(ddOrderLine.getM_Locator_ID());\n+\t\t\t\tfinal LocatorId locatorId = LocatorId.ofRepoId(warehouseId, ddOrderLine.getM_Locator_ID());\n+\n+\t\t\t\tthrow new HUException(MSG_HU_for_product)\n+\t\t\t\t\t\t.appendParametersToMessage()\n+\t\t\t\t\t\t.setParameter(\"Product\", ddOrderLine.getM_Product())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "originalPosition": 166}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzM5MzAw", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458339300", "createdAt": "2020-07-30T12:10:45Z", "commit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxMDo0NVrOG5gR8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxMDo0NVrOG5gR8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MDg5Nw==", "bodyText": "why not using Quantity instead of BigDecimal?", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r462950897", "createdAt": "2020-07-30T12:10:45Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ddorder/api/impl/HUDDOrderBL.java", "diffHunk": "@@ -209,4 +233,119 @@ private BPartnerAndLocationId extractBPartnerAndLocationId(final HUToDistribute\n \t\tint bpartnerId;\n \t\tint bpartnerLocationId;\n \t}\n+\n+\t@Override\n+\tpublic void processDDOrderLines(@NonNull final I_DD_Order ddOrder)\n+\t{\n+\t\tfinal List<I_DD_OrderLine> ddOrderLines = ddOrderDAO.retrieveLines(ddOrder);\n+\n+\t\tfor (final I_DD_OrderLine ddOrderLine : ddOrderLines)\n+\t\t{\n+\t\t\tfinal List<I_M_HU> hus = retrieveNeededHusToMove(ddOrderLine);\n+\t\t\tif (hus.isEmpty())\n+\t\t\t{\n+\t\t\t\tfinal WarehouseId warehouseId = warehouseDAO.getWarehouseIdByLocatorRepoId(ddOrderLine.getM_Locator_ID());\n+\t\t\t\tfinal LocatorId locatorId = LocatorId.ofRepoId(warehouseId, ddOrderLine.getM_Locator_ID());\n+\n+\t\t\t\tthrow new HUException(MSG_HU_for_product)\n+\t\t\t\t\t\t.appendParametersToMessage()\n+\t\t\t\t\t\t.setParameter(\"Product\", ddOrderLine.getM_Product())\n+\t\t\t\t\t\t.setParameter(\"Warehouse\", warehouseId)\n+\t\t\t\t\t\t.setParameter(\"Locator\", locatorId);\n+\t\t\t}\n+\t\t\t\n+\t\t\tprocessDDOrderLine(ddOrderLine, hus);\n+\t\t}\n+\n+\t}\n+\n+\tprivate void processDDOrderLine(@NonNull final I_DD_OrderLine ddOrderLine, @NonNull final List<I_M_HU> hus)\n+\t{\n+\t\tcreateMovements()\n+\t\t\t\t.setDDOrderLine(ddOrderLine)\n+\t\t\t\t.allocateHUs(hus)\n+\t\t\t\t.setSkipCompletingDDOrder(true)\n+\t\t\t\t.process();\n+\t}\n+\t\n+\t@Override\n+\tpublic List<I_M_HU> retrieveAvailableHusToMove(@NonNull final I_DD_OrderLine ddOrderLine, @NonNull final IQueryOrderBy queryOrderBy)\n+\t{\n+\t\tfinal IHUQueryBuilder huQueryBuilder = handlingUnitsDAO.createHUQueryBuilder().setOnlyTopLevelHUs();\n+\n+\t\t\n+\t\tfinal WarehouseId warehouseId = warehouseDAO.getWarehouseIdByLocatorRepoId(ddOrderLine.getM_Locator_ID());\n+\t\tfinal LocatorId locatorId = LocatorId.ofRepoId(warehouseId, ddOrderLine.getM_Locator_ID());\n+\t\tfinal ProductId productId = ProductId.ofRepoId(ddOrderLine.getM_Product_ID());\n+\t\t\n+\t\thuQueryBuilder.addOnlyInWarehouseId(warehouseId);\n+\t\thuQueryBuilder.addOnlyInLocatorId(locatorId.getRepoId());\n+\t\thuQueryBuilder.addOnlyWithProductId(productId);\n+\t\thuQueryBuilder.addHUStatusesToInclude(huStatusBL.getQtyOnHandStatuses());\n+\n+\t\treturn huQueryBuilder.createQuery()\n+\t\t\t\t.setOrderBy(queryOrderBy)\n+\t\t\t\t.list();\n+\t}\n+\t\n+\t/**\n+\t * retrieve the Hus needed to move in order to be able to move the dd orderline qty\n+\t * if the qty needed is less then one from storage, will split the HU\n+\t * @param ddOrderLine\n+\t */\n+\tprivate List<I_M_HU> retrieveNeededHusToMove(@NonNull final I_DD_OrderLine ddOrderLine)\n+\t{\n+\t\t// Order by\n+\t\tfinal IQueryOrderBy queryOrderBy = queryBL.createQueryOrderByBuilder(I_M_HU.class)\n+\t\t\t\t.addColumn(I_M_HU.COLUMNNAME_M_Locator_ID)\n+\t\t\t\t.addColumn(I_M_HU.COLUMN_Created)\n+\t\t\t\t.createQueryOrderBy();\n+\t\t\n+\t\tfinal List<I_M_HU> hus = retrieveAvailableHusToMove(ddOrderLine, queryOrderBy);\n+\t\tfinal I_C_UOM uom = uomDAO.getById(ddOrderLine.getC_UOM_ID());\n+\t\tBigDecimal qtyFromHus = BigDecimal.ZERO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "originalPosition": 220}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzQwNTYx", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458340561", "createdAt": "2020-07-30T12:12:36Z", "commit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxMjozNlrOG5gVgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxMjozNlrOG5gVgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTgwOA==", "bodyText": "IMHO this shall be part of the BL/Service and not HUDDOrderDAO", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r462951808", "createdAt": "2020-07-30T12:12:36Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ddorder/api/impl/HUDDOrderDAO.java", "diffHunk": "@@ -184,11 +184,19 @@ private final void removeFromHUsScheduledToMoveList(final IQueryBuilder<I_DD_Ord\n \t@Override\n \tpublic boolean existsDDOrderLineCandidateForHUId(final int huId)\n \t{\n-\t\tfinal IQueryBL queryBL = Services.get(IQueryBL.class);\n \n \t\treturn queryBL.createQueryBuilder(I_DD_OrderLine_HU_Candidate.class)\n \t\t\t\t.addEqualsFilter(I_DD_OrderLine_HU_Candidate.COLUMN_M_HU_ID, huId)\n \t\t\t\t.create()\n \t\t\t\t.anyMatch();\n \t}\n+\t\n+\t@Override\n+\tpublic boolean isCreateMovementOnComplete()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fffe0d2a244312a5d57d3b1f75ed0c9a86db49a"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45585cd98c760f04c07ca0b449840fb5f3927ce5", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/45585cd98c760f04c07ca0b449840fb5f3927ce5", "committedDate": "2020-07-30T12:26:17Z", "message": "#7058 Use Quantity instead of BigDecimal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6cf136d20fec5be56b1e01e02e60953d5f8e21", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/db6cf136d20fec5be56b1e01e02e60953d5f8e21", "committedDate": "2020-07-30T12:51:45Z", "message": "#7058 Remove unneeded changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ac0b3b488d8bb392a2a92fa5c974bf13efbb8b", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/b6ac0b3b488d8bb392a2a92fa5c974bf13efbb8b", "committedDate": "2020-07-30T12:54:44Z", "message": "#7058 Movem services to the top"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcce76c4a32e975480be57d710d9a60186c7b745", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/bcce76c4a32e975480be57d710d9a60186c7b745", "committedDate": "2020-07-30T13:00:49Z", "message": "#7058 minor comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff4759ac2281f55c3b12757e3473d1efb8ee0f71", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ff4759ac2281f55c3b12757e3473d1efb8ee0f71", "committedDate": "2020-07-30T13:01:02Z", "message": "#7058 old versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea0babbb434342853764e1d31f48b7d75ea376d4", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/ea0babbb434342853764e1d31f48b7d75ea376d4", "committedDate": "2020-07-30T13:07:16Z", "message": "#7058 reverting commit c80550783113656d7be832bfe9df61f8169773cb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43635ad224e2285ad457e2a02f6d3941337c5d0", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/c43635ad224e2285ad457e2a02f6d3941337c5d0", "committedDate": "2020-07-30T13:08:59Z", "message": "#7058 minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1235956c9f542aae813d9c14b5f9b6da466b07e", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/d1235956c9f542aae813d9c14b5f9b6da466b07e", "committedDate": "2020-07-30T13:56:46Z", "message": "#7058 Move the newlly created Hus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd8ae7a412f9bb7a0490bc0d8828cb71e152a973", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/dd8ae7a412f9bb7a0490bc0d8828cb71e152a973", "committedDate": "2020-07-30T14:17:17Z", "message": "#7058 Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDUxODg4", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458451888", "createdAt": "2020-07-30T14:24:20Z", "commit": {"oid": "dd8ae7a412f9bb7a0490bc0d8828cb71e152a973"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNDoyMVrOG5lYtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNDoyMVrOG5lYtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNDU1MQ==", "bodyText": "don't make it static", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r463034551", "createdAt": "2020-07-30T14:24:21Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/ddorder/api/impl/HUDDOrderBL.java", "diffHunk": "@@ -1,54 +1,90 @@\n package de.metas.handlingunits.ddorder.api.impl;\n \n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map.Entry;\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+import org.adempiere.ad.dao.IQueryBL;\n+import org.adempiere.ad.dao.IQueryOrderBy;\n+import org.adempiere.exceptions.AdempiereException;\n+import org.adempiere.model.InterfaceWrapperHelper;\n+import org.adempiere.service.ISysConfigBL;\n+import org.adempiere.warehouse.LocatorId;\n+import org.adempiere.warehouse.WarehouseId;\n+import org.adempiere.warehouse.api.IWarehouseBL;\n+import org.adempiere.warehouse.api.IWarehouseDAO;\n+import org.adempiere.warehouse.api.impl.WarehouseDAO;\n+import org.compiere.model.I_C_UOM;\n+import org.compiere.model.I_M_Locator;\n+import org.compiere.model.I_M_Warehouse;\n+import org.compiere.util.Env;\n+import org.eevolution.api.DDOrderLineId;\n+import org.eevolution.api.IDDOrderDAO;\n+import org.eevolution.model.I_DD_Order;\n+import org.eevolution.model.I_DD_OrderLine;\n+import org.eevolution.model.X_DD_OrderLine;\n+\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableListMultimap;\n import com.google.common.collect.ImmutableSet;\n+\n import de.metas.adempiere.gui.search.IHUPackingAware;\n import de.metas.adempiere.gui.search.IHUPackingAwareBL;\n import de.metas.adempiere.gui.search.impl.DDOrderLineHUPackingAware;\n import de.metas.handlingunits.HUPIItemProductId;\n import de.metas.handlingunits.IHUAssignmentBL;\n+import de.metas.handlingunits.IHUQueryBuilder;\n+import de.metas.handlingunits.IHUStatusBL;\n+import de.metas.handlingunits.IHandlingUnitsBL;\n+import de.metas.handlingunits.IHandlingUnitsDAO;\n+import de.metas.handlingunits.allocation.transfer.HUTransformService;\n import de.metas.handlingunits.ddorder.api.DDOrderLineCreateRequest;\n import de.metas.handlingunits.ddorder.api.IHUDDOrderBL;\n import de.metas.handlingunits.ddorder.api.IHUDDOrderDAO;\n import de.metas.handlingunits.ddorder.api.QuarantineInOutLine;\n import de.metas.handlingunits.ddorder.api.impl.HUs2DDOrderProducer.HUToDistribute;\n+import de.metas.handlingunits.exceptions.HUException;\n import de.metas.handlingunits.inout.IHUInOutDAO;\n import de.metas.handlingunits.model.I_M_HU;\n+import de.metas.handlingunits.storage.IHUStorage;\n+import de.metas.handlingunits.storage.IHUStorageFactory;\n+import de.metas.i18n.AdMessageKey;\n import de.metas.product.IProductBL;\n import de.metas.product.ProductId;\n+import de.metas.quantity.Quantity;\n+import de.metas.uom.IUOMDAO;\n import de.metas.util.Services;\n import lombok.Builder;\n import lombok.NonNull;\n import lombok.Value;\n-import org.adempiere.exceptions.AdempiereException;\n-import org.adempiere.model.InterfaceWrapperHelper;\n-import org.adempiere.warehouse.LocatorId;\n-import org.adempiere.warehouse.WarehouseId;\n-import org.adempiere.warehouse.api.IWarehouseBL;\n-import org.adempiere.warehouse.api.IWarehouseDAO;\n-import org.adempiere.warehouse.api.impl.WarehouseDAO;\n-import org.compiere.model.I_M_Locator;\n-import org.compiere.model.I_M_Warehouse;\n-import org.compiere.util.Env;\n-import org.eevolution.api.DDOrderLineId;\n-import org.eevolution.model.I_DD_Order;\n-import org.eevolution.model.I_DD_OrderLine;\n-import org.eevolution.model.X_DD_OrderLine;\n-\n-import java.math.BigDecimal;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map.Entry;\n-import java.util.Optional;\n-import java.util.function.Function;\n \n public class HUDDOrderBL implements IHUDDOrderBL\n {\n \n+\t\n+\tprivate static final String SYS_Config_DDOrder_isCreateMovementOnComplete = \"DDOrder_isCreateMovementOnComplete\";\n+\tprivate static final AdMessageKey MSG_HU_for_product = AdMessageKey.of(\"de.metas.handlingunits.ddorder.api.impl.HUDDOrderBL.NoHu_For_Product\");\n+\t\n+\tprivate static final ISysConfigBL sysConfigBL = Services.get(ISysConfigBL.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd8ae7a412f9bb7a0490bc0d8828cb71e152a973"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDUzODU4", "url": "https://github.com/metasfresh/metasfresh/pull/7086#pullrequestreview-458453858", "createdAt": "2020-07-30T14:26:15Z", "commit": {"oid": "dd8ae7a412f9bb7a0490bc0d8828cb71e152a973"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjoxNlrOG5leTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjoxNlrOG5leTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNTk4MQ==", "bodyText": "pls avoid it", "url": "https://github.com/metasfresh/metasfresh/pull/7086#discussion_r463035981", "createdAt": "2020-07-30T14:26:16Z", "author": {"login": "teosarca"}, "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/model/validator/DD_Order.java", "diffHunk": "@@ -43,9 +48,17 @@\n @Interceptor(I_DD_Order.class)\n public class DD_Order\n {\n-\n-\tprivate final IDDOrderDAO ddOrderDAO = Services.get(IDDOrderDAO.class);\n-\n+\tpublic static final DD_Order INSTANCE = new DD_Order();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd8ae7a412f9bb7a0490bc0d8828cb71e152a973"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1904c378229625e0c4a3f71967896d80aa7247b4", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/1904c378229625e0c4a3f71967896d80aa7247b4", "committedDate": "2020-07-30T14:31:49Z", "message": "#7058 MInor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990d5ca1fd288e0673f6b82ebd5346badd1bcfe4", "author": {"user": {"login": "cristinamghita", "name": "Cristina Ghita"}}, "url": "https://github.com/metasfresh/metasfresh/commit/990d5ca1fd288e0673f6b82ebd5346badd1bcfe4", "committedDate": "2020-07-30T15:10:02Z", "message": "Update MovementBL.java\n\n#7058 Fix org.adempiere.mmovement.api.impl.MovementBLTest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3239, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}