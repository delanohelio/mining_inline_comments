{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDI1ODcw", "number": 7095, "title": "[frontend] Improving stability of unit tests", "bodyText": "Will have to run it in Jenkins a bunch of times and see if it's any better.", "createdAt": "2020-08-04T21:48:25Z", "url": "https://github.com/metasfresh/metasfresh/pull/7095", "merged": true, "mergeCommit": {"oid": "befe03537f7ef3b7c17e53ff1ba6ccfc034af5ab"}, "closed": true, "closedAt": "2020-08-11T05:31:37Z", "author": {"login": "siemiatj"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7rhJMAH2gAyNDYzMDI1ODcwOjIxMDE1MjVjZjlmODZhZDIxYTZkYjIwYTU5ODQ1OWFmYmYyYzg5NTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9hqnwgH2gAyNDYzMDI1ODcwOjM5N2M1YjhmNzM4OTM2NjZlOTYzMzBjOGU4MjRiNTcyYmQ1OTNkYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2101525cf9f86ad21a6db20a598459afbf2c8955", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/2101525cf9f86ad21a6db20a598459afbf2c8955", "committedDate": "2020-08-04T19:09:44Z", "message": "#7036 this should make the unit tests more stable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46af0c26e9aab2ff33dcc965ba70b31d988f1dd", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/e46af0c26e9aab2ff33dcc965ba70b31d988f1dd", "committedDate": "2020-08-05T09:53:49Z", "message": "#7036 reject Promises instead of resolving them on error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "823d4d30c372af403d7c5d307983a780dee381b6", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/823d4d30c372af403d7c5d307983a780dee381b6", "committedDate": "2020-08-05T15:05:22Z", "message": "- there's no need for the `TableQuickInput` to be connected to the store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "228ce28c9888e57d379de50d4010620f2ffc3491", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/228ce28c9888e57d379de50d4010620f2ffc3491", "committedDate": "2020-08-05T16:40:24Z", "message": "#7036 rewrite TableQuickInput tests and generalw cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a98c21e843080043d99e69db6e7b16b41c52b9f6", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/a98c21e843080043d99e69db6e7b16b41c52b9f6", "committedDate": "2020-08-05T16:55:39Z", "message": "#7036 fix linter error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c", "author": {"user": {"login": "siemiatj", "name": "Kuba Siemi\u0105tkowski"}}, "url": "https://github.com/metasfresh/metasfresh/commit/cb13786fb10927d292e7194080f540e7f1d43d1c", "committedDate": "2020-08-06T08:03:15Z", "message": "#7036 helper for debugging unhandled promises errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTU4NjMx", "url": "https://github.com/metasfresh/metasfresh/pull/7095#pullrequestreview-463958631", "createdAt": "2020-08-10T05:02:57Z", "commit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTowMjo1N1rOG-Bd7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTowNzowOFrOG-Bg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4ODk0MQ==", "bodyText": "I believe L:3 can be removed", "url": "https://github.com/metasfresh/metasfresh/pull/7095#discussion_r467688941", "createdAt": "2020-08-10T05:02:57Z", "author": {"login": "petrican"}, "path": "frontend/src/__tests__/components/table/TableQuickInput.test.js", "diffHunk": "@@ -1,56 +1,52 @@\n import React from 'react';\n-import { mount } from 'enzyme';\n-// import { ShortcutProvider } from '../../../components/keyshortcuts/ShortcutProvider';\n-import { initialState as appHandlerState } from '../../../reducers/appHandler';\n-import { initialState as windowHandlerState } from '../../../reducers/windowHandler';\n-import { Provider } from 'react-redux';\n-import configureStore from 'redux-mock-store';\n-import merge from 'merge';\n-import tableQuickInputProps from '../../../../test_setup/fixtures/table/table_quick_input.json';\n+import { shallow, render } from 'enzyme';\n+import renderer from 'react-test-renderer';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4OTQ2MA==", "bodyText": "const wrapperTableCMenu = shallow(<TableQuickInput {...initialProps} />);  // prettify it", "url": "https://github.com/metasfresh/metasfresh/pull/7095#discussion_r467689460", "createdAt": "2020-08-10T05:05:50Z", "author": {"login": "petrican"}, "path": "frontend/src/__tests__/components/table/TableQuickInput.test.js", "diffHunk": "@@ -1,56 +1,52 @@\n import React from 'react';\n-import { mount } from 'enzyme';\n-// import { ShortcutProvider } from '../../../components/keyshortcuts/ShortcutProvider';\n-import { initialState as appHandlerState } from '../../../reducers/appHandler';\n-import { initialState as windowHandlerState } from '../../../reducers/windowHandler';\n-import { Provider } from 'react-redux';\n-import configureStore from 'redux-mock-store';\n-import merge from 'merge';\n-import tableQuickInputProps from '../../../../test_setup/fixtures/table/table_quick_input.json';\n+import { shallow, render } from 'enzyme';\n+import renderer from 'react-test-renderer';\n+import nock from 'nock';\n+\n+import quickInputData from '../../../../test_setup/fixtures/table/table_quickinput.json';\n import TableQuickInput from '../../../components/table/TableQuickInput';\n-import { getSizeClass } from '../../../utils/tableHelpers'; // imported as it is passed as a prop..\n-\n-const mockStore = configureStore([]);\n-tableQuickInputProps.getSizeClass = getSizeClass;\n-const createStore = function(state = {}) {\n-  const res = merge.recursive(\n-    true,\n-    {\n-      appHandler: {\n-        ...appHandlerState,\n-        me: { timeZone: 'America/Los_Angeles' },\n-      },\n-      windowHandler: { ...windowHandlerState },\n-    },\n-    state\n-  );\n-\n-  return res;\n+\n+const initialProps = {\n+  ...quickInputData.basicProps,\n+  addNotification: jest.fn(),\n };\n-const initialState = createStore({\n-  windowHandler: {\n-    allowShortcut: true,\n-    modal: {\n-      visible: false,\n-    },\n-  },\n-});\n-const store = mockStore(initialState);\n \n-tableQuickInputProps.selected = [];\n+// leaving this so that I won't have to look it up again in case we need it\n+// nock.recorder.rec({\n+//   output_objects: true,\n+// }) \n \n describe('TableQuickInput', () => {\n-  it('renders without errors with the given props', () => {\n-    const wrapperTableCMenu = mount(\n-      <Provider store={store}>\n-        <TableQuickInput {...tableQuickInputProps} />\n-      </Provider>\n-    );\n-    const html = wrapperTableCMenu.html();\n+  beforeEach(() => {\n+    const { docType, docId, tabId } = initialProps;\n+\n+    nock(config.API_URL)\n+      .defaultReplyHeaders({ 'access-control-allow-origin': '*' })\n+      .post(`/window/${docType}/${docId}/${tabId}/quickInput`)\n+      .reply(200, quickInputData.data1);\n \n-    expect(html).toContain(\n-      `<form class=\"row quick-input-container\"><div class=\"col-sm-12 col-md-3 col-lg-2 hint\">(Press 'Enter' to add)</div><button type=\"submit\" class=\"hidden-up\"></button></form>`\n+    nock(config.API_URL)\n+      .defaultReplyHeaders({ 'access-control-allow-origin': '*' })\n+      .get(`/window/${docType}/${docId}/${tabId}/quickInput/layout`)\n+      .reply(200, quickInputData.layout1); \n+  });\n+\n+  it('renders without errors', () => {\n+    const wrapperTableCMenu = shallow(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4OTY4Mw==", "bodyText": "const wrapperTableCMenu = render(<TableQuickInput {...initialProps} />);  // prettify it in one line pls also", "url": "https://github.com/metasfresh/metasfresh/pull/7095#discussion_r467689683", "createdAt": "2020-08-10T05:07:08Z", "author": {"login": "petrican"}, "path": "frontend/src/__tests__/components/table/TableQuickInput.test.js", "diffHunk": "@@ -1,56 +1,52 @@\n import React from 'react';\n-import { mount } from 'enzyme';\n-// import { ShortcutProvider } from '../../../components/keyshortcuts/ShortcutProvider';\n-import { initialState as appHandlerState } from '../../../reducers/appHandler';\n-import { initialState as windowHandlerState } from '../../../reducers/windowHandler';\n-import { Provider } from 'react-redux';\n-import configureStore from 'redux-mock-store';\n-import merge from 'merge';\n-import tableQuickInputProps from '../../../../test_setup/fixtures/table/table_quick_input.json';\n+import { shallow, render } from 'enzyme';\n+import renderer from 'react-test-renderer';\n+import nock from 'nock';\n+\n+import quickInputData from '../../../../test_setup/fixtures/table/table_quickinput.json';\n import TableQuickInput from '../../../components/table/TableQuickInput';\n-import { getSizeClass } from '../../../utils/tableHelpers'; // imported as it is passed as a prop..\n-\n-const mockStore = configureStore([]);\n-tableQuickInputProps.getSizeClass = getSizeClass;\n-const createStore = function(state = {}) {\n-  const res = merge.recursive(\n-    true,\n-    {\n-      appHandler: {\n-        ...appHandlerState,\n-        me: { timeZone: 'America/Los_Angeles' },\n-      },\n-      windowHandler: { ...windowHandlerState },\n-    },\n-    state\n-  );\n-\n-  return res;\n+\n+const initialProps = {\n+  ...quickInputData.basicProps,\n+  addNotification: jest.fn(),\n };\n-const initialState = createStore({\n-  windowHandler: {\n-    allowShortcut: true,\n-    modal: {\n-      visible: false,\n-    },\n-  },\n-});\n-const store = mockStore(initialState);\n \n-tableQuickInputProps.selected = [];\n+// leaving this so that I won't have to look it up again in case we need it\n+// nock.recorder.rec({\n+//   output_objects: true,\n+// }) \n \n describe('TableQuickInput', () => {\n-  it('renders without errors with the given props', () => {\n-    const wrapperTableCMenu = mount(\n-      <Provider store={store}>\n-        <TableQuickInput {...tableQuickInputProps} />\n-      </Provider>\n-    );\n-    const html = wrapperTableCMenu.html();\n+  beforeEach(() => {\n+    const { docType, docId, tabId } = initialProps;\n+\n+    nock(config.API_URL)\n+      .defaultReplyHeaders({ 'access-control-allow-origin': '*' })\n+      .post(`/window/${docType}/${docId}/${tabId}/quickInput`)\n+      .reply(200, quickInputData.data1);\n \n-    expect(html).toContain(\n-      `<form class=\"row quick-input-container\"><div class=\"col-sm-12 col-md-3 col-lg-2 hint\">(Press 'Enter' to add)</div><button type=\"submit\" class=\"hidden-up\"></button></form>`\n+    nock(config.API_URL)\n+      .defaultReplyHeaders({ 'access-control-allow-origin': '*' })\n+      .get(`/window/${docType}/${docId}/${tabId}/quickInput/layout`)\n+      .reply(200, quickInputData.layout1); \n+  });\n+\n+  it('renders without errors', () => {\n+    const wrapperTableCMenu = shallow(\n+      <TableQuickInput {...initialProps} />\n     );\n+    expect(wrapperTableCMenu.find('.quick-input-container').length).toBe(1);\n+\n+    // const nockCalls = nock.recorder.play() // \"play\" the recording into a variable\n+    // console.log(`Nock Captured Calls: \\n${JSON.stringify(nockCalls,null,2)}`) // inspect calls that Nock recorder\n+\n+    // nock.restore();\n   });\n \n+  it('renders without error 22s', () => {\n+    const wrapperTableCMenu = render(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY4NjMy", "url": "https://github.com/metasfresh/metasfresh/pull/7095#pullrequestreview-463968632", "createdAt": "2020-08-10T05:48:08Z", "commit": {"oid": "cb13786fb10927d292e7194080f540e7f1d43d1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad6e5eed3400f3490380f29a8088d8297c348ab", "author": {"user": null}, "url": "https://github.com/metasfresh/metasfresh/commit/5ad6e5eed3400f3490380f29a8088d8297c348ab", "committedDate": "2020-08-10T11:12:00Z", "message": "Merge master into local branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5480fa0d567604ff7c3a3114f5a0b21e31c431b2", "author": {"user": null}, "url": "https://github.com/metasfresh/metasfresh/commit/5480fa0d567604ff7c3a3114f5a0b21e31c431b2", "committedDate": "2020-08-10T11:20:17Z", "message": "Pass hotkeys and keymap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "397c5b8f73893666e96330c8e824b572bd593daf", "author": {"user": null}, "url": "https://github.com/metasfresh/metasfresh/commit/397c5b8f73893666e96330c8e824b572bd593daf", "committedDate": "2020-08-10T12:48:53Z", "message": "Fixed the flaky test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3249, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}