{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Njk5NjUy", "number": 458, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo1MTowMlrOEIEtKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjozNjo1NlrOEI1qGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTAxMTYzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/hubspot/jinjava/lib/filter/FromJsonFilterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo1MTowMlrOGn0N9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo1MTowMlrOGn0N9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMzE4OQ==", "bodyText": "I think a better option for these tests is to render a jinjava template directly. See https://github.com/HubSpot/jinjava/blob/master/src/test/java/com/hubspot/jinjava/lib/filter/MinusTimeFilterTest.java#L37 as an example. That way we can make sure the API from Jinjava perspective is the same: for example: {% set obj = test|fromjson %} {{ obj.property }}", "url": "https://github.com/HubSpot/jinjava/pull/458#discussion_r444403189", "createdAt": "2020-06-23T17:51:02Z", "author": {"login": "mattcoley"}, "path": "src/test/java/com/hubspot/jinjava/lib/filter/FromJsonFilterTest.java", "diffHunk": "@@ -46,21 +48,73 @@ public void itFailsWhenParameterIsNotString() {\n     filter.filter(nestedJson, interpreter);\n   }\n \n+  @Test\n+  public void itReadsEmptyJsonObjectString() {\n+    JsonNode node = (JsonNode) filter.filter(EMPTY_JSON_OBJECT, interpreter);\n+    assertThat(node.elements().hasNext()).isEqualTo(false);\n+  }\n+\n+  @Test\n+  public void itReadsStringAsObject() {\n+    JsonNode node = (JsonNode) filter.filter(NESTED_JSON, interpreter);\n+\n+    checkNestedJson(node);\n+  }\n+\n   @Test\n   public void itReadsSafeStringAsObject() {\n     SafeString nestedJson = new SafeString(NESTED_JSON);\n-    HashMap<String, Object> node = (HashMap<String, Object>) filter.filter(\n-      nestedJson,\n-      interpreter\n-    );\n-    checkedNestJson(node);\n+    JsonNode node = (JsonNode) filter.filter(nestedJson, interpreter);\n+\n+    checkNestedJson(node);\n   }\n \n-  private void checkedNestJson(HashMap<String, Object> node) {\n-    assertThat(node.get(\"first\")).isEqualTo(Arrays.asList(1, 2, 3));\n+  @Test\n+  public void itReadsEmptyJsonArrayString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6157ccac5ecc706739b1d0ce1fb69141bee9013c"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzAzMTk1OnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjozNjo1NlrOGpC1Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjozNjo1NlrOGpC1Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MTE1NA==", "bodyText": "I've been getting build failures because some packages take a while to install.\nhttps://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received", "url": "https://github.com/HubSpot/jinjava/pull/458#discussion_r445691154", "createdAt": "2020-06-25T16:36:56Z", "author": {"login": "AlpriElse"}, "path": ".travis.yml", "diffHunk": "@@ -21,6 +21,6 @@ notifications:\n before_install:\n   - pip install --user codecov\n after_success:\n-  - mvn validate -e\n+  - travis_wait mvn validate -e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a7713018a58e459af8458c47303de9f17fc1323"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1700, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}