{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTk5Mzk4", "number": 558, "title": "Implement EagerPrintTag and EagerDoTag", "bodyText": "Part of #532\nSince the print tag and do tag are nearly identical (print tags include the expression output, while do tags omit the output), both of their eager implementations are included in this PR.\nPrint and Do tags are also similar to Set tags, but they are essentially simpler. Rather than taking the output of one or more expressions and storing it into a key on the context scope map, a single expression is simply evaluated, and in the case of a print tag, it is also output. So see #557 for an overview of the SetTag's logic, as the logic in this PR is a simplified version of it.\nThese are the use cases:\n\n\nIt's a normal print/do tag that doesn't work with or around any deferred values.\nThis can be interpreted as normal. The expression is resolved and the value is output if we're dealing with a print tag.\n\n\nIt's trying to evaluate an expression using a deferred value ({% print deferred + 1%}).\nThe expression will be simplified if possible by using the ChunkResolver. The print/do tag will be reconstructed/re-output and then it will get registered as an EagerToken on the context.\n\n\nIt's trying to modify a value on the context while in protected mode.\nJust like with a set tag, the target value will become deferred, and the print/do tag will be reconstructed and included in the output to get run during a later pass. This reconstructed tag will get registered as an EagerToken on the context.\n*If the execution of the right-hand side of the equation causes any changes in the context, then additional set tags will need to get prepended to the output to preserve the initial context. *This part is true for anything running in \"protected mode\" that causes changes to the values on the context scope map.\n\n\ncc @jboulter @Joeoh let me know if you want to see more detailed examples here", "createdAt": "2020-12-01T21:57:17Z", "url": "https://github.com/HubSpot/jinjava/pull/558", "merged": true, "mergeCommit": {"oid": "d5517d877e5d18eb04cf4642c5388054b898d88e"}, "closed": true, "closedAt": "2020-12-09T22:23:01Z", "author": {"login": "jasmith-hs"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhtGlDgH2gAyNTMwNTk5Mzk4OjQyMWVmNGJhMGMxODlkOGRkMWU3MTJhZmI0N2E5Yjg5OWFhZmE3MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkmVsmAH2gAyNTMwNTk5Mzk4OjE1NjA3YWZjNDdiZTMwZjFjODM4NmJjNWQxYjRlZTk3MjFmZTdkNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "421ef4ba0c189d8dd1e712afb47a9b899aafa722", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/421ef4ba0c189d8dd1e712afb47a9b899aafa722", "committedDate": "2020-11-30T22:29:39Z", "message": "Checkout eager do and print tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "428f6a55b1df4ce9fb4fa6c8a1b4702e88bea12e", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/428f6a55b1df4ce9fb4fa6c8a1b4702e88bea12e", "committedDate": "2020-11-30T22:29:39Z", "message": "Add error if helpers are empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/112f280880ac2c81bd78a422fc0f206e83a7d3a0", "committedDate": "2020-11-30T22:30:21Z", "message": "Enable raw wrap test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTUyOTQ3", "url": "https://github.com/HubSpot/jinjava/pull/558#pullrequestreview-542952947", "createdAt": "2020-12-02T15:28:28Z", "commit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToyODoyOFrOH9gcvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToyODoyOFrOH9gcvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI1NjgyOQ==", "bodyText": "just as a personal preference, if inputs and expected files are short enough, I would just put them right in the code here. It's way easier to read when you don't have to flip back and forth  between files.\nSomeday we'll get text blocks.", "url": "https://github.com/HubSpot/jinjava/pull/558#discussion_r534256829", "createdAt": "2020-12-02T15:28:28Z", "author": {"login": "boulter"}, "path": "src/test/java/com/hubspot/jinjava/lib/tag/eager/EagerDoTagTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.hubspot.jinjava.ExpectedNodeInterpreter;\n+import com.hubspot.jinjava.JinjavaConfig;\n+import com.hubspot.jinjava.interpret.DeferredValue;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.lib.tag.DoTagTest;\n+import com.hubspot.jinjava.lib.tag.Tag;\n+import com.hubspot.jinjava.mode.EagerExecutionMode;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class EagerDoTagTest extends DoTagTest {\n+  private Tag tag;\n+  private ExpectedNodeInterpreter expectedNodeInterpreter;\n+\n+  @Before\n+  public void eagerSetup() {\n+    interpreter =\n+      new JinjavaInterpreter(\n+        jinjava,\n+        context,\n+        JinjavaConfig.newBuilder().withExecutionMode(new EagerExecutionMode()).build()\n+      );\n+\n+    tag = new EagerDoTag();\n+    context.registerTag(tag);\n+    context.put(\"deferred\", DeferredValue.instance());\n+    expectedNodeInterpreter =\n+      new ExpectedNodeInterpreter(interpreter, tag, \"tags/eager/dotag\");\n+    JinjavaInterpreter.pushCurrent(interpreter);\n+  }\n+\n+  @After\n+  public void teardown() {\n+    JinjavaInterpreter.popCurrent();\n+  }\n+\n+  @Test\n+  public void itHandlesDeferredDo() {\n+    context.put(\"foo\", 2);\n+    expectedNodeInterpreter.assertExpectedOutput(\"handles-deferred-do\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDExNjk0", "url": "https://github.com/HubSpot/jinjava/pull/558#pullrequestreview-544011694", "createdAt": "2020-12-03T14:32:21Z", "commit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDozMjoyMVrOH-eoJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDozMjoyMVrOH-eoJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI3NTU1OQ==", "bodyText": "Should be \"do\"", "url": "https://github.com/HubSpot/jinjava/pull/558#discussion_r535275559", "createdAt": "2020-12-03T14:32:21Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerDoTag.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateSyntaxException;\n+import com.hubspot.jinjava.lib.tag.DoTag;\n+import com.hubspot.jinjava.tree.parse.TagToken;\n+import com.hubspot.jinjava.util.ChunkResolver;\n+import java.util.StringJoiner;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class EagerDoTag extends EagerStateChangingTag<DoTag> {\n+\n+  public EagerDoTag() {\n+    super(new DoTag());\n+  }\n+\n+  public EagerDoTag(DoTag doTag) {\n+    super(doTag);\n+  }\n+\n+  @Override\n+  public String getEagerTagImage(TagToken tagToken, JinjavaInterpreter interpreter) {\n+    String expr = tagToken.getHelpers();\n+    if (StringUtils.isBlank(expr)) {\n+      throw new TemplateSyntaxException(\n+        interpreter,\n+        tagToken.getImage(),\n+        \"Tag 'print' expects expression\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDI4OTMy", "url": "https://github.com/HubSpot/jinjava/pull/558#pullrequestreview-544028932", "createdAt": "2020-12-03T14:48:30Z", "commit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0ODozMFrOH-fyFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0ODozMFrOH-fyFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5NDQ4Ng==", "bodyText": "Looks like this logic is the same for both tags, and maybe others? Should we split it out into a function?", "url": "https://github.com/HubSpot/jinjava/pull/558#discussion_r535294486", "createdAt": "2020-12-03T14:48:30Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerDoTag.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateSyntaxException;\n+import com.hubspot.jinjava.lib.tag.DoTag;\n+import com.hubspot.jinjava.tree.parse.TagToken;\n+import com.hubspot.jinjava.util.ChunkResolver;\n+import java.util.StringJoiner;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class EagerDoTag extends EagerStateChangingTag<DoTag> {\n+\n+  public EagerDoTag() {\n+    super(new DoTag());\n+  }\n+\n+  public EagerDoTag(DoTag doTag) {\n+    super(doTag);\n+  }\n+\n+  @Override\n+  public String getEagerTagImage(TagToken tagToken, JinjavaInterpreter interpreter) {\n+    String expr = tagToken.getHelpers();\n+    if (StringUtils.isBlank(expr)) {\n+      throw new TemplateSyntaxException(\n+        interpreter,\n+        tagToken.getImage(),\n+        \"Tag 'print' expects expression\"\n+      );\n+    }\n+    ChunkResolver chunkResolver = new ChunkResolver(expr, tagToken, interpreter);\n+    EagerStringResult resolvedExpression = executeInChildContext(\n+      eagerInterpreter -> chunkResolver.resolveChunks(),\n+      interpreter,\n+      true\n+    );\n+    StringJoiner joiner = new StringJoiner(\" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "112f280880ac2c81bd78a422fc0f206e83a7d3a0"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c006c4386ecbc055b11bbff790115a7b5052a92b", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/c006c4386ecbc055b11bbff790115a7b5052a92b", "committedDate": "2020-12-03T19:31:58Z", "message": "Refactor shared logic into its own function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1bedfdf583923624729b0fcb1a84ce85dc95e4", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/ca1bedfdf583923624729b0fcb1a84ce85dc95e4", "committedDate": "2020-12-03T19:43:18Z", "message": "Merge branch 'eager-set' of github.com:HubSpot/jinjava into eager-print-do"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8fcdfdcd44d14f2f69e21b4c8a17c1d35c9e275", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/c8fcdfdcd44d14f2f69e21b4c8a17c1d35c9e275", "committedDate": "2020-12-03T19:46:13Z", "message": "Merge branch 'eager-set' of github.com:HubSpot/jinjava into eager-print-do"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708ab9e04de1373baabbcd64e51edeccb63194d9", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/708ab9e04de1373baabbcd64e51edeccb63194d9", "committedDate": "2020-12-03T19:46:44Z", "message": "Add length limited string joiner for print/do"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d245323fb41823cb3cd6d3fb79e090f824715086", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/d245323fb41823cb3cd6d3fb79e090f824715086", "committedDate": "2020-12-03T20:10:05Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5310a84f4b888714ca71577ee93569e30a420939", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/5310a84f4b888714ca71577ee93569e30a420939", "committedDate": "2020-12-03T21:52:49Z", "message": "Merge branch 'eager-set' of github.com:HubSpot/jinjava into eager-print-do"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65714a845f32252a2e4361bbd409f0aceb0e0e3", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/f65714a845f32252a2e4361bbd409f0aceb0e0e3", "committedDate": "2020-12-09T22:15:11Z", "message": "Merge branch 'master' of github.com:HubSpot/jinjava into eager-print-do"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15607afc47be30f1c8386bc5d1b4ee9721fe7d46", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/15607afc47be30f1c8386bc5d1b4ee9721fe7d46", "committedDate": "2020-12-09T22:18:36Z", "message": "Fix from merge and inline do tag tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2496, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}