{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDA0Mzc4", "number": 385, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODowNTo1MFrODW8G0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMzoxNVrODaSCTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzgwMDQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/SafeFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODowNTo1MFrOFb-wgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODowNTo1MFrOFb-wgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NDA5OA==", "bodyText": "perhaps the friendlier thing to do here is just to return the passed in object", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r364884098", "createdAt": "2020-01-09T18:05:50Z", "author": {"login": "jboulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/SafeFilter.java", "diffHunk": "@@ -25,9 +25,15 @@ public String getName() {\n   }\n \n   @Override\n-  public Object filter(Object var, JinjavaInterpreter interpreter,\n-      String... args) {\n-    return var;\n-  }\n+  public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n+    if (var == null) {\n+      return null;\n+    }\n+\n+    if (!(var instanceof String)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe49fcb907fa2aa0689b4baf6e37b78924039d9"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTAxMDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/DivideFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTozMTozMlrOFf-SoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjowNDozM1rOFf_kMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MDc1Mg==", "bodyText": "Perhaps you could use a Delegate pattern here and implement SafeStringFilter which takes care of this rather than manually checking for SafeStrings in every filter?\nYou could have the default interface implement filter, then delegate to a safeFilter method in each of these classes, unwrapping and wrapping the SafeString around it.", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r369070752", "createdAt": "2020-01-21T15:31:32Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/DivideFilter.java", "diffHunk": "@@ -87,6 +88,9 @@ public Object filter(Object object, JinjavaInterpreter interpreter, String... ar\n         throw new InvalidInputException(interpreter, this, InvalidReason.NUMBER_FORMAT, object.toString());\n       }\n     }\n+    if (object instanceof SafeString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f074525dbe21723589cb3b8927c6e17c3446b27"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA5MTYzNQ==", "bodyText": "Sounds good, thanks!", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r369091635", "createdAt": "2020-01-21T16:04:33Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/DivideFilter.java", "diffHunk": "@@ -87,6 +88,9 @@ public Object filter(Object object, JinjavaInterpreter interpreter, String... ar\n         throw new InvalidInputException(interpreter, this, InvalidReason.NUMBER_FORMAT, object.toString());\n       }\n     }\n+    if (object instanceof SafeString) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MDc1Mg=="}, "originalCommit": {"oid": "2f074525dbe21723589cb3b8927c6e17c3446b27"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODU1NDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/TrimFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozMTozM1rOFhGqyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzo0NTowMVrOFheDjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1NjU4Nw==", "bodyText": "Should this be return StringUtils.trim(Objects.toString(var)); instead?", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370256587", "createdAt": "2020-01-23T17:31:33Z", "author": {"login": "jkollmann"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/TrimFilter.java", "diffHunk": "@@ -28,7 +26,9 @@ public String getName() {\n \n   @Override\n   public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n-    return StringUtils.trim(Objects.toString(var));\n+    if (var instanceof String) {\n+      return safeFilter(StringUtils.trim(var.toString()), interpreter, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzOTc1OQ==", "bodyText": "Why? If we know its a string, whats the need to wrap it in the call. We know we can cast or do .toString", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370639759", "createdAt": "2020-01-24T13:45:01Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/TrimFilter.java", "diffHunk": "@@ -28,7 +26,9 @@ public String getName() {\n \n   @Override\n   public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n-    return StringUtils.trim(Objects.toString(var));\n+    if (var instanceof String) {\n+      return safeFilter(StringUtils.trim(var.toString()), interpreter, args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1NjU4Nw=="}, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODgzMDQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/EscapeJsFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTowNjoxNVrOFhJXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTowNjoxNVrOFhJXfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMDc5Nw==", "bodyText": "nit: unnecessary variable", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370300797", "createdAt": "2020-01-23T19:06:15Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/EscapeJsFilter.java", "diffHunk": "@@ -36,11 +36,18 @@\n \n   @Override\n   public Object filter(Object objectToFilter, JinjavaInterpreter jinjavaInterpreter, String... strings) {\n-    String input = Objects.toString(objectToFilter, \"\");\n-    LengthLimitingStringBuilder builder = new LengthLimitingStringBuilder(jinjavaInterpreter.getConfig().getMaxOutputSize());\n+    if (objectToFilter instanceof String) {\n+      String input = Objects.toString(objectToFilter, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODgzNzY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/LowerFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTowODo0N1rOFhJb-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo0OTozNlrOFhYeYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTk0NQ==", "bodyText": "in general, it's nice to separate formatting changes like this out into a separate PR so make your PRs clean and easy to understand.", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370301945", "createdAt": "2020-01-23T19:08:47Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/LowerFilter.java", "diffHunk": "@@ -1,17 +1,17 @@\n /**********************************************************************\n-Copyright (c) 2014 HubSpot Inc.\n+ Copyright (c) 2014 HubSpot Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0ODMyMQ==", "bodyText": "100% agree", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370548321", "createdAt": "2020-01-24T09:49:36Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/LowerFilter.java", "diffHunk": "@@ -1,17 +1,17 @@\n /**********************************************************************\n-Copyright (c) 2014 HubSpot Inc.\n+ Copyright (c) 2014 HubSpot Inc.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTk0NQ=="}, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg0NDU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMToxNFrOFhJggw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzozMTo1OVrOFhdtOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzEwNw==", "bodyText": "could you have this extend String? That might simplify all your instanceof checks.", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370303107", "createdAt": "2020-01-23T19:11:14Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzNDA0MQ==", "bodyText": "I wish! Unfortunately String is final so we can't. String with an extra property would have made this a lot more simple. I think if we were designing this from scratch we wouldn't use strings anywhere and instead always pass some sort of StringToken that could be safe/not safe and have some other properties.", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370634041", "createdAt": "2020-01-24T13:31:59Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzEwNw=="}, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg0ODM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/filter/RootFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjoyMlrOFhJixQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjoyMlrOFhJixQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzY4NQ==", "bodyText": "nit: extra space after object", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370303685", "createdAt": "2020-01-23T19:12:22Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/RootFilter.java", "diffHunk": "@@ -64,9 +65,9 @@ public Object filter(Object object, JinjavaInterpreter interpreter, String... ar\n     if (object instanceof BigInteger) {\n       return calculateBigRoot(interpreter, new BigDecimal((BigInteger) object), root);\n     }\n-    if (object instanceof String) {\n+    if (object instanceof String || object  instanceof SafeString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg1MDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMzoxNVrOFhJkXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMToyNjo1MFrOFihoEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg==", "bodyText": "is this method needed?", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r370304092", "createdAt": "2020-01-23T19:13:15Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {\n+\n+  private final String value;\n+\n+  public SafeString(String value) {\n+    this.value = value;\n+  }\n+\n+  public String getValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1MjU1NQ==", "bodyText": "Yes its needed to resolve the token to a string when rendering", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r371152555", "createdAt": "2020-01-27T10:08:52Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {\n+\n+  private final String value;\n+\n+  public SafeString(String value) {\n+    this.value = value;\n+  }\n+\n+  public String getValue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg=="}, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0NjgzMw==", "bodyText": "Never-mind. Its actually not. I got mixed up with tokens.", "url": "https://github.com/HubSpot/jinjava/pull/385#discussion_r371746833", "createdAt": "2020-01-28T11:26:50Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/objects/SafeString.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.hubspot.jinjava.objects;\n+\n+public class SafeString {\n+\n+  private final String value;\n+\n+  public SafeString(String value) {\n+    this.value = value;\n+  }\n+\n+  public String getValue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNDA5Mg=="}, "originalCommit": {"oid": "6b624b91b891f26ba88e8305b5c8c6025a705195"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1748, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}