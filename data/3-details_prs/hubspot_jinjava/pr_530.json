{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4ODE2Njcy", "number": 530, "title": "add size limited pymaps and pylists", "bodyText": "User-provided templates should not be allowed to use unlimited resources. This is a failsafe that adds a limit the maximum size of lists and maps. The default is no (practical) limit.\nThis is similar to #137", "createdAt": "2020-11-10T23:05:06Z", "url": "https://github.com/HubSpot/jinjava/pull/530", "merged": true, "mergeCommit": {"oid": "3892ab90dadbc13f2c79291acece785ca90f678c"}, "closed": true, "closedAt": "2020-11-13T20:15:19Z", "author": {"login": "boulter"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbRlxZAH2gAyNTE4ODE2NjcyOmIxNTA0MTkyNjk4OTNkNjQxOWNkNTI3ZDlmOGVmNzU0MjJjZDQ3N2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcM6yLgFqTUzMDM2OTk3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/b150419269893d6419cd527d9f8ef75422cd477b", "committedDate": "2020-11-10T23:02:50Z", "message": "add size limited pymaps and pylists"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Njg5MTE0", "url": "https://github.com/HubSpot/jinjava/pull/530#pullrequestreview-527689114", "createdAt": "2020-11-10T23:26:39Z", "commit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTg2Njkw", "url": "https://github.com/HubSpot/jinjava/pull/530#pullrequestreview-529186690", "createdAt": "2020-11-12T15:13:05Z", "commit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMzowNVrOHx_akg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxNDowMVrOHx_dHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTI2Ng==", "bodyText": "Integer overflow might be a concern. It should be safer to do size() >= maxSize - elements.size()", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181266", "createdAt": "2020-11-12T15:13:05Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.add(index, element);\n+  }\n+\n+  @Override\n+  public boolean addAll(int index, Collection<?> elements) {\n+    if (size() + elements.size() >= maxSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTkxOA==", "bodyText": "To be consistent with addAll, could check what the size would be after adding the one element", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181918", "createdAt": "2020-11-12T15:14:01Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "committedDate": "2020-11-12T17:50:03Z", "message": "fix size checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9481111cbca7a719290166953b47b139d0f5c4d", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/f9481111cbca7a719290166953b47b139d0f5c4d", "committedDate": "2020-11-13T16:52:25Z", "message": "centralize handling OutputTooBigExceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a677f42909972923162a4c75b55e195085b24527", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/a677f42909972923162a4c75b55e195085b24527", "committedDate": "2020-11-13T16:57:20Z", "message": "throw CollectionTooBigExceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a29a0df04fd5f926d2f2574787d12f79bc0437e2", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/a29a0df04fd5f926d2f2574787d12f79bc0437e2", "committedDate": "2020-11-13T17:22:23Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38bcb1a9d65ae899370ee95b45d0127aef544db1", "author": {"user": {"login": "jboulter", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/38bcb1a9d65ae899370ee95b45d0127aef544db1", "committedDate": "2020-11-13T20:02:46Z", "message": "warn on 90 percent full collections"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMzY5OTc4", "url": "https://github.com/HubSpot/jinjava/pull/530#pullrequestreview-530369978", "createdAt": "2020-11-13T20:06:44Z", "commit": {"oid": "38bcb1a9d65ae899370ee95b45d0127aef544db1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDowNjo0NVrOHy9VZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDowNjo0NVrOHy9VZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5NTc0OA==", "bodyText": "Nice", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r523195748", "createdAt": "2020-11-13T20:06:45Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -1,13 +1,18 @@\n package com.hubspot.jinjava.objects.collections;\n \n import com.hubspot.jinjava.interpret.CollectionTooBigException;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateError;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorReason;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorType;\n import com.hubspot.jinjava.objects.PyWrapper;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n \n public class SizeLimitingPyList extends PyList implements PyWrapper {\n   private int maxSize;\n+  private boolean hasWarned;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38bcb1a9d65ae899370ee95b45d0127aef544db1"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1555, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}