{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTI0Mjk5", "number": 542, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo0MDowMFrOE833Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo0MDowMFrOE833Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjY1MjQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerTagFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo0MDowMFrOH5QSug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo0MDowMFrOH5QSug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5NzgxOA==", "bodyText": "This will get called to register each tag in the EagerExecutionMode.prepareContext() (seen here)\n@boulter This is the basic principle for how I am separating the eager execution code from the default execution code. The tags get wrapped with an EagerTagDecorator in this factory so that they can be registered to override the default tags", "url": "https://github.com/HubSpot/jinjava/pull/542#discussion_r529797818", "createdAt": "2020-11-24T18:40:00Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerTagFactory.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.collect.ImmutableMap;\n+import com.hubspot.jinjava.lib.tag.Tag;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class EagerTagFactory {\n+  public static final Map<Class<? extends Tag>, Class<? extends EagerTagDecorator<? extends Tag>>> EAGER_TAG_OVERRIDES = ImmutableMap\n+    .<Class<? extends Tag>, Class<? extends EagerTagDecorator<?>>>builder()\n+    .build();\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T extends Tag> Optional<EagerTagDecorator<T>> getEagerTagDecorator(\n+    Class<T> clazz\n+  ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e25fd251dbb9030395a54ecf0de8b8b21a85e5"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1655, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}