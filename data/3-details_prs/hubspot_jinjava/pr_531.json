{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5ODc5NDI1", "number": 531, "title": "Filter upgrades to support kw params", "bodyText": "This change includes the following:\n\nUpgrades to filters with >1 params that have 100% code coverage\nThere are some fixes to Jinjavadoc as they didn't match unit tests\n\n@boulter This is following up on the AbstractFilter #523 , these are draft changes so let me know what you think of these changes and whether you'd prefer split PRs too\nJinjavadoc alignment with tests includes:\n\nDateTimeFormatFilter\nJoinFilter\nvarious number => int changes where filter actually required an integer - the conversion is done in AbstractFilter", "createdAt": "2020-11-12T13:18:42Z", "url": "https://github.com/HubSpot/jinjava/pull/531", "merged": true, "mergeCommit": {"oid": "26d72b3fa76c98648ac4543fd32ef543e1b8a965"}, "closed": true, "closedAt": "2020-11-16T20:28:15Z", "author": {"login": "michaelpro1"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbv9wbgH2gAyNTE5ODc5NDI1OmVhYjhjYjQxNzVkNjIwOTBjYzMwZmY5NmFjOTY4ODVkOGY2ODM3Njg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcsbARAH2gAyNTE5ODc5NDI1OjhkZTJmMDk2NWJmMzZkYTIyMjFlNjY4MGM0NGUxYWI2MDRiOTRiMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eab8cb4175d62090cc30ff96ac96885d8f683768", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/eab8cb4175d62090cc30ff96ac96885d8f683768", "committedDate": "2020-11-12T10:26:11Z", "message": "AbstractFilter: handle Number=> Any numeric conversion without string. Null parameter value is treated as missing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "279c03587da25f706ec89c45cf754fa320092849", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/279c03587da25f706ec89c45cf754fa320092849", "committedDate": "2020-11-12T10:32:48Z", "message": "regex_replace, replace, round, truncatehtml, urlize filters migrated to AbstractFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a571c8a631eee97026738842029e055ba61c448d", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/a571c8a631eee97026738842029e055ba61c448d", "committedDate": "2020-11-12T11:22:58Z", "message": "join, slice, sort, split, sum filter migrated to AbstractFilter.\njoin filter: `attr` renamed to `attribute` matching unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce", "committedDate": "2020-11-12T13:09:36Z", "message": "datetimeformat, truncate: upgrade to abstract.\ndatetimeformat: fix function jinjavadoc and param defaults"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NTY2Nzgy", "url": "https://github.com/HubSpot/jinjava/pull/531#pullrequestreview-529566782", "createdAt": "2020-11-12T22:53:12Z", "commit": {"oid": "e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjo1MzoxMlrOHyR7iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzowNjoxOFrOHySXnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4NDYxNg==", "bodyText": "Must all of these be null?", "url": "https://github.com/HubSpot/jinjava/pull/531#discussion_r522484616", "createdAt": "2020-11-12T22:53:12Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/DateTimeFormatFilter.java", "diffHunk": "@@ -40,19 +41,29 @@\n     )\n   }\n )\n-public class DateTimeFormatFilter implements Filter {\n+public class DateTimeFormatFilter extends AbstractFilter implements Filter {\n+  public static final String FORMAT_PARAM = \"format\";\n+  public static final String TIMEZONE_PARAM = \"timezone\";\n+  public static final String LOCALE_PARAM = \"locale\";\n \n   @Override\n   public String getName() {\n     return \"datetimeformat\";\n   }\n \n   @Override\n-  public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n-    if (args.length > 0) {\n-      return Functions.dateTimeFormat(var, args);\n-    } else {\n+  public Object filter(\n+    Object var,\n+    JinjavaInterpreter interpreter,\n+    Map<String, Object> parsedArgs\n+  ) {\n+    String format = (String) parsedArgs.get(FORMAT_PARAM);\n+    String timezone = (String) parsedArgs.get(TIMEZONE_PARAM);\n+    String locale = (String) parsedArgs.get(LOCALE_PARAM);\n+    if (format == null && timezone == null && locale == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ4OTkwNA==", "bodyText": "I really appreciate the static constants!", "url": "https://github.com/HubSpot/jinjava/pull/531#discussion_r522489904", "createdAt": "2020-11-12T23:01:22Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/DateTimeFormatFilter.java", "diffHunk": "@@ -40,19 +41,29 @@\n     )\n   }\n )\n-public class DateTimeFormatFilter implements Filter {\n+public class DateTimeFormatFilter extends AbstractFilter implements Filter {\n+  public static final String FORMAT_PARAM = \"format\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5MTgwNQ==", "bodyText": "wow, this removes a lot of code! Can you ensure that this is still covered in the unit tests?", "url": "https://github.com/HubSpot/jinjava/pull/531#discussion_r522491805", "createdAt": "2020-11-12T23:06:18Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/filter/TruncateHtmlFilter.java", "diffHunk": "@@ -64,87 +57,21 @@ public String getName() {\n   public Object filter(\n     Object var,\n     JinjavaInterpreter interpreter,\n-    Object[] args,\n-    Map<String, Object> kwargs\n+    Map<String, Object> parsedArgs\n   ) {\n-    String length = null;\n-    if (kwargs.containsKey(LENGTH_KEY)) {\n-      length = Objects.toString(kwargs.get(LENGTH_KEY));\n-    }\n-    String end = null;\n-    if (kwargs.containsKey(END_KEY)) {\n-      end = Objects.toString(kwargs.get(END_KEY));\n-    }\n-    String breakword = null;\n-    if (kwargs.containsKey(BREAKWORD_KEY)) {\n-      breakword = Objects.toString(kwargs.get(BREAKWORD_KEY));\n-    }\n-\n-    String[] newArgs = new String[3];\n-    for (int i = 0; i < args.length; i++) {\n-      if (i >= newArgs.length) {\n-        break;\n-      }\n-      newArgs[i] = Objects.toString(args[i]);\n-    }\n-\n-    if (length != null) {\n-      newArgs[0] = length;\n-    }\n-    if (end != null) {\n-      newArgs[1] = end;\n-    }\n-    if (breakword != null) {\n-      newArgs[2] = breakword;\n-    }\n-\n-    if (var instanceof SafeString) {\n-      return filter((SafeString) var, interpreter, newArgs);\n-    }\n-\n-    return filter(var, interpreter, newArgs);\n-  }\n-\n-  @Override\n-  public Object filter(Object var, JinjavaInterpreter interpreter, String... args) {\n-    if (var instanceof String) {\n-      int length = DEFAULT_TRUNCATE_LENGTH;\n-      String ends = DEFAULT_END;\n-\n-      if (args.length > 0) {\n-        try {\n-          length = Integer.parseInt(Objects.toString(args[0]));\n-        } catch (Exception e) {\n-          ENGINE_LOG.warn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5b850bf91634ad6eda9ae9f4b53b9c4069d57ce"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1df1b3355e096a0ee3874b27e3787efdd1bc139", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/f1df1b3355e096a0ee3874b27e3787efdd1bc139", "committedDate": "2020-11-15T08:31:36Z", "message": "AbstractFilter: pre-parse default values. Validate input numbers instead of returning default 0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae931d86995119cc3b017cbbc64b4993163cce3", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/7ae931d86995119cc3b017cbbc64b4993163cce3", "committedDate": "2020-11-15T08:46:26Z", "message": "AbstractFilter: pre-parse default values. Validate input numbers instead of returning default 0. Expose defaultValue for parameter name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de2f0965bf36da2221e6680c44e1ab604b94b12", "author": {"user": {"login": "michaelpro1", "name": null}}, "url": "https://github.com/HubSpot/jinjava/commit/8de2f0965bf36da2221e6680c44e1ab604b94b12", "committedDate": "2020-11-15T08:52:26Z", "message": "truncatehtml: add param defaulting as per review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1557, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}