{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTU4NTA3", "number": 473, "title": "Divide by zero", "bodyText": "Handle division operations within expressions via extended operation operator", "createdAt": "2020-08-13T18:21:06Z", "url": "https://github.com/HubSpot/jinjava/pull/473", "merged": true, "mergeCommit": {"oid": "5915efca0144005aa2ea1b41225e4967d12957b0"}, "closed": true, "closedAt": "2020-08-17T15:42:56Z", "author": {"login": "bszabo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-j_W2AH2gAyNDY3NTU4NTA3OjE1YTk3Yzk1NjAwZDRhZDUyZDA5ZjQ4ZTI3NzU1OGNhZDJhMjM0ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_zqvMgH2gAyNDY3NTU4NTA3OmY5MDA4MDcyMmY2YzIzNWFlNjc5YzkyODM2MDgzNTEzNGNmZGZmZjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15a97c95600d4ad52d09f48e277558cad2a234ea", "author": {"user": null}, "url": "https://github.com/HubSpot/jinjava/commit/15a97c95600d4ad52d09f48e277558cad2a234ea", "committedDate": "2020-08-13T18:05:16Z", "message": "Make regular division an extended operator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397", "author": {"user": null}, "url": "https://github.com/HubSpot/jinjava/commit/d832767a08da98a2078cd4365c0d27a07b0b6397", "committedDate": "2020-08-13T18:11:21Z", "message": "Merge branch 'master' into divide-by-zero"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDcxMjgw", "url": "https://github.com/HubSpot/jinjava/pull/473#pullrequestreview-467071280", "createdAt": "2020-08-13T19:34:27Z", "commit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTozNDoyOFrOHAauAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTozODowN1rOHAa1dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5OTgxMQ==", "bodyText": "TODO: don't forget to delete!", "url": "https://github.com/HubSpot/jinjava/pull/473#discussion_r470199811", "createdAt": "2020-08-13T19:34:28Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/el/ext/RegularDivOperator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.hubspot.jinjava.el.ext;\n+\n+import de.odysseus.el.misc.TypeConverter;\n+import de.odysseus.el.tree.impl.Parser.ExtensionHandler;\n+import de.odysseus.el.tree.impl.Parser.ExtensionPoint;\n+import de.odysseus.el.tree.impl.Scanner;\n+import de.odysseus.el.tree.impl.ast.AstBinary;\n+import de.odysseus.el.tree.impl.ast.AstBinary.SimpleOperator;\n+import de.odysseus.el.tree.impl.ast.AstNode;\n+\n+public class RegularDivOperator extends SimpleOperator {\n+  public static final Scanner.ExtensionToken TOKEN = new Scanner.ExtensionToken(\"/\");\n+  public static final RegularDivOperator OP = new RegularDivOperator();\n+\n+  @Override\n+  protected Object apply(TypeConverter converter, Object a, Object b) {\n+    if (a == null || b == null) {\n+      throw new IllegalArgumentException(\"Division argument may not be null\");\n+    }\n+\n+    // Debugging support only -- Delete me", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwMDczNw==", "bodyText": "we favor rspec-style test names like itDividesLongsWithNonZeroDivisor", "url": "https://github.com/HubSpot/jinjava/pull/473#discussion_r470200737", "createdAt": "2020-08-13T19:36:18Z", "author": {"login": "boulter"}, "path": "src/test/java/com/hubspot/jinjava/el/ext/RegularDivTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.hubspot.jinjava.el.ext;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import com.hubspot.jinjava.Jinjava;\n+import java.util.HashMap;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class RegularDivTest {\n+  private Jinjava jinja;\n+\n+  @Before\n+  public void setUp() {\n+    jinja = new Jinjava();\n+  }\n+\n+  @Test\n+  public void okOnLongDivisionWithNonZeroDivisor() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwMTIzOA==", "bodyText": "Does the normal division operator return division of longs with a decimal point?", "url": "https://github.com/HubSpot/jinjava/pull/473#discussion_r470201238", "createdAt": "2020-08-13T19:37:18Z", "author": {"login": "boulter"}, "path": "src/test/java/com/hubspot/jinjava/el/ext/RegularDivTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.hubspot.jinjava.el.ext;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import com.hubspot.jinjava.Jinjava;\n+import java.util.HashMap;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class RegularDivTest {\n+  private Jinjava jinja;\n+\n+  @Before\n+  public void setUp() {\n+    jinja = new Jinjava();\n+  }\n+\n+  @Test\n+  public void okOnLongDivisionWithNonZeroDivisor() {\n+    assertEquals(jinja.render(\"{% set x = 10 / 2%}{{x}}\", new HashMap<>()), \"5.0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwMTcxOA==", "bodyText": "don't you only need to check the doubleValue?", "url": "https://github.com/HubSpot/jinjava/pull/473#discussion_r470201718", "createdAt": "2020-08-13T19:38:07Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/el/ext/RegularDivOperator.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.hubspot.jinjava.el.ext;\n+\n+import de.odysseus.el.misc.TypeConverter;\n+import de.odysseus.el.tree.impl.Parser.ExtensionHandler;\n+import de.odysseus.el.tree.impl.Parser.ExtensionPoint;\n+import de.odysseus.el.tree.impl.Scanner;\n+import de.odysseus.el.tree.impl.ast.AstBinary;\n+import de.odysseus.el.tree.impl.ast.AstBinary.SimpleOperator;\n+import de.odysseus.el.tree.impl.ast.AstNode;\n+\n+public class RegularDivOperator extends SimpleOperator {\n+  public static final Scanner.ExtensionToken TOKEN = new Scanner.ExtensionToken(\"/\");\n+  public static final RegularDivOperator OP = new RegularDivOperator();\n+\n+  @Override\n+  protected Object apply(TypeConverter converter, Object a, Object b) {\n+    if (a == null || b == null) {\n+      throw new IllegalArgumentException(\"Division argument may not be null\");\n+    }\n+\n+    // Debugging support only -- Delete me\n+    //    Type typeA = a.getClass();\n+    //    String typeNameA = typeA.getTypeName();\n+    //    Type typeB = b.getClass();\n+    //    String typeNameB = typeB.getTypeName();\n+    // End of debugging support\n+\n+    Number numA = (Number) a;\n+    Number numB = (Number) b;\n+    if (numB.longValue() == 0 || numB.doubleValue() == 0.0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d832767a08da98a2078cd4365c0d27a07b0b6397"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91370dd03fc890bf5cb916a4cd09fb023a2d542c", "author": {"user": null}, "url": "https://github.com/HubSpot/jinjava/commit/91370dd03fc890bf5cb916a4cd09fb023a2d542c", "committedDate": "2020-08-14T13:50:01Z", "message": "Test for divide by zero in truncated division extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca835942eae909619a749045d571b43f000c40a", "author": {"user": null}, "url": "https://github.com/HubSpot/jinjava/commit/aca835942eae909619a749045d571b43f000c40a", "committedDate": "2020-08-17T13:55:14Z", "message": "Rename tests to conform with rspec-style naming; minor clean-up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDkwMjAy", "url": "https://github.com/HubSpot/jinjava/pull/473#pullrequestreview-468490202", "createdAt": "2020-08-17T14:01:37Z", "commit": {"oid": "aca835942eae909619a749045d571b43f000c40a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMTozN1rOHBqD5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDowMTozN1rOHBqD5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ5OTc0OA==", "bodyText": "I think this could simply be called DivOperator.\nAlso I think it would be worth a comment on why this was overridden.", "url": "https://github.com/HubSpot/jinjava/pull/473#discussion_r471499748", "createdAt": "2020-08-17T14:01:37Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/el/ext/RegularDivOperator.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.hubspot.jinjava.el.ext;\n+\n+import de.odysseus.el.misc.TypeConverter;\n+import de.odysseus.el.tree.impl.Parser.ExtensionHandler;\n+import de.odysseus.el.tree.impl.Parser.ExtensionPoint;\n+import de.odysseus.el.tree.impl.Scanner;\n+import de.odysseus.el.tree.impl.ast.AstBinary;\n+import de.odysseus.el.tree.impl.ast.AstBinary.SimpleOperator;\n+import de.odysseus.el.tree.impl.ast.AstNode;\n+\n+public class RegularDivOperator extends SimpleOperator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aca835942eae909619a749045d571b43f000c40a"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90080722f6c235ae679c928360835134cfdfff4", "author": {"user": null}, "url": "https://github.com/HubSpot/jinjava/commit/f90080722f6c235ae679c928360835134cfdfff4", "committedDate": "2020-08-17T14:55:09Z", "message": "Rename RegularDivOperator to DivOperator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1532, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}