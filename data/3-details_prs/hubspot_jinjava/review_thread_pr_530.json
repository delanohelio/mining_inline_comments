{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4ODE2Njcy", "number": 530, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMzowNVrOE4NPTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDowNjo0NVrOE40F_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzcyNjIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMzowNVrOHx_akg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzozMTo1NFrOHyF6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTI2Ng==", "bodyText": "Integer overflow might be a concern. It should be safer to do size() >= maxSize - elements.size()", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181266", "createdAt": "2020-11-12T15:13:05Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.add(index, element);\n+  }\n+\n+  @Override\n+  public boolean addAll(int index, Collection<?> elements) {\n+    if (size() + elements.size() >= maxSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4NzY1MA==", "bodyText": "I think we will run out of memory long before this if a collection has 2B items in it!", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522287650", "createdAt": "2020-11-12T17:31:54Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.add(index, element);\n+  }\n+\n+  @Override\n+  public boolean addAll(int index, Collection<?> elements) {\n+    if (size() + elements.size() >= maxSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTI2Ng=="}, "originalCommit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzczMDA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxNDowMVrOHx_dHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxNDowMVrOHx_dHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTkxOA==", "bodyText": "To be consistent with addAll, could check what the size would be after adding the one element", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181918", "createdAt": "2020-11-12T15:14:01Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b150419269893d6419cd527d9f8ef75422cd477b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDA5MjEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDowNjo0NVrOHy9VZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDowNjo0NVrOHy9VZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5NTc0OA==", "bodyText": "Nice", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r523195748", "createdAt": "2020-11-13T20:06:45Z", "author": {"login": "jasmith-hs"}, "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -1,13 +1,18 @@\n package com.hubspot.jinjava.objects.collections;\n \n import com.hubspot.jinjava.interpret.CollectionTooBigException;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateError;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorReason;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorType;\n import com.hubspot.jinjava.objects.PyWrapper;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n \n public class SizeLimitingPyList extends PyList implements PyWrapper {\n   private int maxSize;\n+  private boolean hasWarned;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38bcb1a9d65ae899370ee95b45d0127aef544db1"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1744, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}