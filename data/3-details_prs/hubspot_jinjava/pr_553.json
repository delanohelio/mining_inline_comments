{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODU1NjY5", "number": 553, "title": "Implement EagerIfTag", "bodyText": "Part of #532\nThis PR adds the functionality necessary for eager execution with if tags. Unless tags are handled the same when executing eagerly as they are a negated if tag, and the branch paths are evaluated in the same way.\nIf the correct path cannot be determined because of a DeferredValueException, then the eagerInterpret() method gets called and all branches of the if tree get executed in a speculative fashion. The children are executed in a child context that is set to protectedMode = true. This protected mode prevents certain things from happening that would change the state of the context. When one of these occurs (such as replacing or updating a value in the interpreter.getContext()), the previous value gets reconstructed. See #545 as this logic is generic and has been introduced already.\nAlso, there is some logic to prune branches that certainly won't be executed. This is possible when there are ElseIfTags present so we don't need to include code unnecessarily.\n\nA quick example:\n{% set foo,bar = 'is foo','is bar' %}\n{% if contact.registered %}\n{{ foo }}\n{% else %}\n{{ bar }}\n{% endif %}\n\nThis is a simple case, where eagerly executing the if statement (assuming contact is deferred) would cause the output to be:\n{% if contact.registered %}\nis foo\n{% else %}\nis bar\n{% endif %}\n\nA second pass with the contact set would either give is foo or is bar, without needing to preserve the context. This is even more beneficial when rather than evaluating simple expressions, complex functions (possibly calling APIs) can be eagerly evaluated within these branches.\ncc @jboulter @Joeoh", "createdAt": "2020-11-30T22:45:54Z", "url": "https://github.com/HubSpot/jinjava/pull/553", "merged": true, "mergeCommit": {"oid": "a47abf58e421c959b96cddf84cbb94a25af4f5da"}, "closed": true, "closedAt": "2020-12-09T21:09:51Z", "author": {"login": "jasmith-hs"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhrpZMAH2gAyNTI5ODU1NjY5OmE3MGQ2Y2ZjN2ZmNzQ4YmI2NWYzYmYwZDUwZjZlNTA2OWFhMDJhOWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkin60gH2gAyNTI5ODU1NjY5OmE3NTAxMzg2YjllNjkyZGZhYzEzY2QxMWJmMWI1ZjUzNDNiZGQ2ZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a70d6cfc7ff748bb65f3bf0d50f6e5069aa02a9d", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/a70d6cfc7ff748bb65f3bf0d50f6e5069aa02a9d", "committedDate": "2020-11-30T20:47:52Z", "message": "Checkout eager if tag functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da0adb10065c017cb14efd16515b67c5c978dca", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/2da0adb10065c017cb14efd16515b67c5c978dca", "committedDate": "2020-11-30T20:54:37Z", "message": "Handle unless tag too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd7f059d0fe063829f8f2bfbded5603c7855fc5", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/ffd7f059d0fe063829f8f2bfbded5603c7855fc5", "committedDate": "2020-11-30T20:56:57Z", "message": "Enable some tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzE5Mzc1", "url": "https://github.com/HubSpot/jinjava/pull/553#pullrequestreview-541719375", "createdAt": "2020-12-01T09:42:26Z", "commit": {"oid": "ffd7f059d0fe063829f8f2bfbded5603c7855fc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo0MjoyNlrOH8iIqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo0MjoyNlrOH8iIqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIzNTg4Mw==", "bodyText": "This comment is a little unclear to me", "url": "https://github.com/HubSpot/jinjava/pull/553#discussion_r533235883", "createdAt": "2020-12-01T09:42:26Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerIfTag.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import com.hubspot.jinjava.interpret.DeferredValueException;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateSyntaxException;\n+import com.hubspot.jinjava.lib.tag.ElseIfTag;\n+import com.hubspot.jinjava.lib.tag.ElseTag;\n+import com.hubspot.jinjava.lib.tag.IfTag;\n+import com.hubspot.jinjava.tree.Node;\n+import com.hubspot.jinjava.tree.TagNode;\n+import com.hubspot.jinjava.util.LengthLimitingStringBuilder;\n+import com.hubspot.jinjava.util.ObjectTruthValue;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class EagerIfTag extends EagerTagDecorator<IfTag> {\n+\n+  public EagerIfTag() {\n+    super(new IfTag());\n+  }\n+\n+  public EagerIfTag(IfTag ifTag) {\n+    super(ifTag);\n+  }\n+\n+  @Override\n+  public String eagerInterpret(TagNode tagNode, JinjavaInterpreter interpreter) {\n+    if (StringUtils.isBlank(tagNode.getHelpers())) {\n+      throw new TemplateSyntaxException(\n+        interpreter,\n+        tagNode.getMaster().getImage(),\n+        \"Tag 'if' expects expression\"\n+      );\n+    }\n+\n+    LengthLimitingStringBuilder result = new LengthLimitingStringBuilder(\n+      interpreter.getConfig().getMaxOutputSize()\n+    );\n+\n+    result.append(\n+      executeInChildContext(\n+        eagerInterpreter ->\n+          getEagerImage(tagNode.getMaster(), eagerInterpreter) +\n+          renderChildren(tagNode, eagerInterpreter),\n+        interpreter,\n+        false\n+      )\n+    );\n+    tagNode.getMaster().setRightTrimAfterEnd(false);\n+    result.append(reconstructEnd(tagNode));\n+\n+    return result.toString();\n+  }\n+\n+  @Override\n+  public String renderChildren(TagNode tagNode, JinjavaInterpreter interpreter) {\n+    // If the branch is impossible, it should be removed\n+    boolean definitelyDrop = shouldDropBranch(tagNode, interpreter);\n+    // If the branch would definitely get executed, change it to and else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffd7f059d0fe063829f8f2bfbded5603c7855fc5"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2c078b5a5c9bae7c803c2ef99846bb9064712e8", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/e2c078b5a5c9bae7c803c2ef99846bb9064712e8", "committedDate": "2020-12-01T14:08:25Z", "message": "Update typo in comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTM3MzU3", "url": "https://github.com/HubSpot/jinjava/pull/553#pullrequestreview-542937357", "createdAt": "2020-12-02T15:14:27Z", "commit": {"oid": "e2c078b5a5c9bae7c803c2ef99846bb9064712e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxNDoyN1rOH9fwwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxNDoyN1rOH9fwwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0NTU2OA==", "bodyText": "if we drop a branch, what happens to the whitespace around it? I could see this changing the output of templates because of dropped statements and whitespace (not that it's generally useful).", "url": "https://github.com/HubSpot/jinjava/pull/553#discussion_r534245568", "createdAt": "2020-12-02T15:14:27Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/lib/tag/eager/EagerIfTag.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package com.hubspot.jinjava.lib.tag.eager;\n+\n+import com.hubspot.jinjava.interpret.DeferredValueException;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateSyntaxException;\n+import com.hubspot.jinjava.lib.tag.ElseIfTag;\n+import com.hubspot.jinjava.lib.tag.ElseTag;\n+import com.hubspot.jinjava.lib.tag.IfTag;\n+import com.hubspot.jinjava.tree.Node;\n+import com.hubspot.jinjava.tree.TagNode;\n+import com.hubspot.jinjava.util.LengthLimitingStringBuilder;\n+import com.hubspot.jinjava.util.ObjectTruthValue;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class EagerIfTag extends EagerTagDecorator<IfTag> {\n+\n+  public EagerIfTag() {\n+    super(new IfTag());\n+  }\n+\n+  public EagerIfTag(IfTag ifTag) {\n+    super(ifTag);\n+  }\n+\n+  @Override\n+  public String eagerInterpret(TagNode tagNode, JinjavaInterpreter interpreter) {\n+    if (StringUtils.isBlank(tagNode.getHelpers())) {\n+      throw new TemplateSyntaxException(\n+        interpreter,\n+        tagNode.getMaster().getImage(),\n+        \"Tag 'if' expects expression\"\n+      );\n+    }\n+\n+    LengthLimitingStringBuilder result = new LengthLimitingStringBuilder(\n+      interpreter.getConfig().getMaxOutputSize()\n+    );\n+\n+    result.append(\n+      executeInChildContext(\n+        eagerInterpreter ->\n+          getEagerImage(tagNode.getMaster(), eagerInterpreter) +\n+          renderChildren(tagNode, eagerInterpreter),\n+        interpreter,\n+        false\n+      )\n+    );\n+    tagNode.getMaster().setRightTrimAfterEnd(false);\n+    result.append(reconstructEnd(tagNode));\n+\n+    return result.toString();\n+  }\n+\n+  @Override\n+  public String renderChildren(TagNode tagNode, JinjavaInterpreter interpreter) {\n+    // If the branch is impossible, it should be removed.\n+    boolean definitelyDrop = shouldDropBranch(tagNode, interpreter);\n+    // If an (\"elseif\") branch would definitely get executed,\n+    // change it to an \"else\" tag and drop all the subsequent branches.\n+    // We know this has to start as false otherwise IfTag would have chosen\n+    // the first branch.\n+    boolean definitelyExecuted = false;\n+    StringBuilder sb = new StringBuilder();\n+    for (Node child : tagNode.getChildren()) {\n+      if (TagNode.class.isAssignableFrom(child.getClass())) {\n+        TagNode tag = (TagNode) child;\n+        if (\n+          tag.getName().equals(ElseIfTag.TAG_NAME) ||\n+          tag.getName().equals(ElseTag.TAG_NAME)\n+        ) {\n+          if (definitelyExecuted) {\n+            break;\n+          }\n+          definitelyDrop =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c078b5a5c9bae7c803c2ef99846bb9064712e8"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fce219e6d96a3931a7524e37943801b8b99541e9", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/fce219e6d96a3931a7524e37943801b8b99541e9", "committedDate": "2020-12-09T17:46:11Z", "message": "Merge branch 'master' of github.com:HubSpot/jinjava into eager-if"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b839905cb3639b9a6a51bd4d4c6512a33b38fcae", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/b839905cb3639b9a6a51bd4d4c6512a33b38fcae", "committedDate": "2020-12-09T17:51:03Z", "message": "Manual adjustments after merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7501386b9e692dfac13cd11bf1b5f5343bdd6ee", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/a7501386b9e692dfac13cd11bf1b5f5343bdd6ee", "committedDate": "2020-12-09T17:58:53Z", "message": "Merge branch 'master' of github.com:HubSpot/jinjava into eager-if"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2484, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}