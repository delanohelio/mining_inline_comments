{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDEzNTY5", "number": 463, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNjo1NVrOENBT9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzo1NDoxMlrOENSPDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDg4NDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNjo1NVrOGveLZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToyMzowM1rOGwthJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDY5NQ==", "bodyText": "I think you only need to check new parent against the existing parents, right? If we're running this every time a new ScopeMap is created, it will get them all.", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r452430695", "createdAt": "2020-07-09T19:06:55Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -19,6 +25,23 @@ public ScopeMap() {\n   public ScopeMap(ScopeMap<K, V> parent) {\n     this.scope = new HashMap<K, V>();\n     this.parent = parent;\n+\n+    Set<ScopeMap<K, V>> parents = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgzMjcwNw==", "bodyText": "So are you suggesting storing all the parents in a Set on the ScopeMap? Either way we have to run up the parent tree in the constructor.", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r452832707", "createdAt": "2020-07-10T13:10:10Z", "author": {"login": "kacperadach"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -19,6 +25,23 @@ public ScopeMap() {\n   public ScopeMap(ScopeMap<K, V> parent) {\n     this.scope = new HashMap<K, V>();\n     this.parent = parent;\n+\n+    Set<ScopeMap<K, V>> parents = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDY5NQ=="}, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0ODc2MA==", "bodyText": "yeah, I was thinking just run up the whole parent tree in the constructor. I think that will take a trivial amount of time.", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r452948760", "createdAt": "2020-07-10T16:30:26Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -19,6 +25,23 @@ public ScopeMap() {\n   public ScopeMap(ScopeMap<K, V> parent) {\n     this.scope = new HashMap<K, V>();\n     this.parent = parent;\n+\n+    Set<ScopeMap<K, V>> parents = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDY5NQ=="}, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMjMwNA==", "bodyText": "Should I add a config to enable/disable this check?", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r453722304", "createdAt": "2020-07-13T15:11:50Z", "author": {"login": "kacperadach"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -19,6 +25,23 @@ public ScopeMap() {\n   public ScopeMap(ScopeMap<K, V> parent) {\n     this.scope = new HashMap<K, V>();\n     this.parent = parent;\n+\n+    Set<ScopeMap<K, V>> parents = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDY5NQ=="}, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMDU5Nw==", "bodyText": "I can't think of a reason why you'd want to turn it off.", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r453730597", "createdAt": "2020-07-13T15:23:03Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -19,6 +25,23 @@ public ScopeMap() {\n   public ScopeMap(ScopeMap<K, V> parent) {\n     this.scope = new HashMap<K, V>();\n     this.parent = parent;\n+\n+    Set<ScopeMap<K, V>> parents = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDY5NQ=="}, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzY1NzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzo1NDoxMlrOGv4SKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoxNzowNlrOGv5HxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1ODQxMA==", "bodyText": "I see we use ENGINE_LOG everywhere else in jinjava, should we keep using that?", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r452858410", "createdAt": "2020-07-10T13:54:12Z", "author": {"login": "hs-lsong"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -2,13 +2,19 @@\n \n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ScopeMap<K, V> implements Map<K, V> {\n+  private static final Logger LOG = LoggerFactory.getLogger(ScopeMap.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3MjEzMw==", "bodyText": "Good call", "url": "https://github.com/HubSpot/jinjava/pull/463#discussion_r452872133", "createdAt": "2020-07-10T14:17:06Z", "author": {"login": "kacperadach"}, "path": "src/main/java/com/hubspot/jinjava/util/ScopeMap.java", "diffHunk": "@@ -2,13 +2,19 @@\n \n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class ScopeMap<K, V> implements Map<K, V> {\n+  private static final Logger LOG = LoggerFactory.getLogger(ScopeMap.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg1ODQxMA=="}, "originalCommit": {"oid": "a87d06bdcf89d9a4bc53f8d8a74c85acd2f792fe"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1706, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}