{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4ODE1MzI2", "number": 529, "title": "Introduce Eager Tokens", "bodyText": "Part of #532\nFor the Eager Execution project (see #519), the variables, functions, and filters (together referred to as \"words\") need to be marked so it is known which words need to be resolved/evaluated for a second rendering pass. This PR sets up this concept, and the actual eager execution functionality for different tags will come in later PRs.\nThe eagerExecutionEnabled flag allows for the option to have different interpreters to be specified with a simple switch to do eager execution on one of them (or neither of them). This would generally only be used when doing a multiple render approach with an initial pre-render and then a final render pass. The pre-render interpreter would have eagerExecutionEnabled=true, and the final render interpreter would have it set to false.\nThe Eager Execution project executes all the children of a node that would be deferred due to the encountering of a deferred value in the context eagerly (see https://en.wikipedia.org/wiki/Speculative_execution#Eager_execution for where that term is derived). By executing all the children nodes, as well as everything in an expression that needs to be deferred (see the ChunkResolver for partial evaluation of deferred expressions), we can determine which words were not able to be resolved/evaluated in the initial pre-render pass. These words will be stored in the EagerToken structure.\nAn EagerToken consists of three parts:\n\ntoken: this is the tree.parse.Token that gets \"reconstructed\" and put into the output. It is used to determine which types of tokens are deferred (be it a SetTag's token, an ExpressionNode's token, etc.), as some types of tokens may not be possible to evaluate in a second render. It is useful to know ahead of time which tokens will still need to be evaluated in a second render. (If there are none, then a second render isn't required).\nsetDeferredWords: this is a set of strings that are for when a word (namely a variable) gets set within the token and the setting needs to be deferred. This can happen in a ForTag, CycleTag, FromTag, ImportTag, and a SetTag.\nusedDeferredWords: this is a set of strings that are for when a word (variable or function) is used but its usage needs to be deferred. For example:\n{{ range(0, deferred|int) }} would result in usedDeferredWords == [\"range\", \"deferred\", \"int\"]. This set can help find words that will not be supported in second rendering pass or would require additional dependencies to evaluate (if it is a custom function, for example).\n\nWhen handling EagerTokens, any setDeferredWords are marked as DeferredValues on the context. usedDeferredWords are marked as DeferredValues on the context, but only if those words already existed in the context (this prevents something like the \"range\" function from being put onto the context itself.", "createdAt": "2020-11-10T23:01:37Z", "url": "https://github.com/HubSpot/jinjava/pull/529", "merged": true, "mergeCommit": {"oid": "06ba5fa414284e118d90f90246d6dc1dcf96de7d"}, "closed": true, "closedAt": "2020-11-23T15:03:58Z", "author": {"login": "jasmith-hs"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbRDxnAH2gAyNTE4ODE1MzI2OjUzMDUzNjQ4MTJiODg2Zjc4NzY1Yjg1MTI5YzVmY2IyZDEwNTE3YTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfWFmdgH2gAyNTE4ODE1MzI2OmQ3NmIwNTE4YjdiNmJjYmY4ZDU0ZGU1YzBhYmI4NGU3OGVhZjljODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5305364812b886f78765b85129c5fcb2d10517a2", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/5305364812b886f78765b85129c5fcb2d10517a2", "committedDate": "2020-11-10T22:25:42Z", "message": "Checkout context, config from eager-execution-a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fa94fb402127c06890eaab3dbb82898aa49c178", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/1fa94fb402127c06890eaab3dbb82898aa49c178", "committedDate": "2020-11-10T22:50:05Z", "message": "Separate handling for set and used deferred words"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTY3ODE0", "url": "https://github.com/HubSpot/jinjava/pull/529#pullrequestreview-528167814", "createdAt": "2020-11-11T13:25:02Z", "commit": {"oid": "1fa94fb402127c06890eaab3dbb82898aa49c178"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoyNTowMlrOHxNAvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoyNTowMlrOHxNAvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1NTQ1Mw==", "bodyText": "A test for this could be good", "url": "https://github.com/HubSpot/jinjava/pull/529#discussion_r521355453", "createdAt": "2020-11-11T13:25:02Z", "author": {"login": "Joeoh"}, "path": "src/main/java/com/hubspot/jinjava/util/DeferredValueUtils.java", "diffHunk": "@@ -126,6 +151,24 @@ private static String rebuildTemplateForNodes(Set<Node> nodes) {\n     return joiner.toString();\n   }\n \n+  private static String rebuildTemplateForEagerTagTokens(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa94fb402127c06890eaab3dbb82898aa49c178"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTY3OTgw", "url": "https://github.com/HubSpot/jinjava/pull/529#pullrequestreview-528167980", "createdAt": "2020-11-11T13:25:15Z", "commit": {"oid": "1fa94fb402127c06890eaab3dbb82898aa49c178"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fb90e1a2f13f64a12767fbe1e974e2fbd07408f", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/5fb90e1a2f13f64a12767fbe1e974e2fbd07408f", "committedDate": "2020-11-12T14:59:06Z", "message": "Add test for DeferredValueUtils marking eager tokens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MzU0MTg5", "url": "https://github.com/HubSpot/jinjava/pull/529#pullrequestreview-529354189", "createdAt": "2020-11-12T18:05:32Z", "commit": {"oid": "5fb90e1a2f13f64a12767fbe1e974e2fbd07408f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODowNTozMlrOHyHQfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODowNTozMlrOHyHQfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMwOTc1Ng==", "bodyText": "what does this do?", "url": "https://github.com/HubSpot/jinjava/pull/529#discussion_r522309756", "createdAt": "2020-11-12T18:05:32Z", "author": {"login": "boulter"}, "path": "src/main/java/com/hubspot/jinjava/interpret/Context.java", "diffHunk": "@@ -526,4 +551,13 @@ public void addDependencies(SetMultimap<String, String> dependencies) {\n   public SetMultimap<String, String> getDependencies() {\n     return this.dependencies;\n   }\n+\n+  public boolean isProtectedMode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fb90e1a2f13f64a12767fbe1e974e2fbd07408f"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fde04dac3fde783f8dce80d9e76c69afefba6fbf", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/fde04dac3fde783f8dce80d9e76c69afefba6fbf", "committedDate": "2020-11-12T21:21:27Z", "message": "Migrate pre-render/eager execution flags to enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ccb6f95b1d3cf03ca0d4d6308dcbccedef4e78", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/e9ccb6f95b1d3cf03ca0d4d6308dcbccedef4e78", "committedDate": "2020-11-13T15:59:09Z", "message": "Rename within enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c34486cfd6351557ec6f02e00b4b65e84c3b280d", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/c34486cfd6351557ec6f02e00b4b65e84c3b280d", "committedDate": "2020-11-13T16:44:52Z", "message": "Turn enum into interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc82efc195200824634f843ec3107ab459eed33c", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/fc82efc195200824634f843ec3107ab459eed33c", "committedDate": "2020-11-13T17:23:53Z", "message": "Merge pull request #2 from jasmith-hs/execution-mode\n\nExecution mode in config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76b0518b7b6bcbf8d54de5c0abb84e78eaf9c87", "author": {"user": {"login": "jasmith-hs", "name": "Jack Smith"}}, "url": "https://github.com/HubSpot/jinjava/commit/d76b0518b7b6bcbf8d54de5c0abb84e78eaf9c87", "committedDate": "2020-11-23T14:32:55Z", "message": "Merge branch 'master' of github.com:jasmith-hs/jinjava into eager-execution-flags"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1553, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}