{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1ODc3MjIz", "number": 4341, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjozOToyOVrOEvSx2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjozOToyOVrOEvSx2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDI2MjAwOnYy", "diffSide": "RIGHT", "path": "multitenancy/src/main/java/io/micronaut/multitenancy/tenantresolver/HttpRequestTenantResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjozOToyOVrOHkMT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoxMjoxMlrOHkNl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMjQ4MQ==", "bodyText": "Needs to expression whether the return type is nullable or not", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4341#discussion_r507712481", "createdAt": "2020-10-19T12:39:29Z", "author": {"login": "graemerocher"}, "path": "multitenancy/src/main/java/io/micronaut/multitenancy/tenantresolver/HttpRequestTenantResolver.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.multitenancy.tenantresolver;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.http.HttpRequest;\n+import io.micronaut.multitenancy.exceptions.TenantNotFoundException;\n+\n+import javax.validation.constraints.NotNull;\n+import java.io.Serializable;\n+\n+/**\n+ * An interface for multi-tenant aware applications which resolve the current identifier for the current request.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.1.2\n+ */\n+public interface HttpRequestTenantResolver {\n+    /**\n+     * Resolves the current tenant identifier.\n+     * @param request The HTTP request\n+     * @return The tenant identifier\n+     * @throws TenantNotFoundException if tenant not found\n+     */\n+    Serializable resolveTenantIdentifier(@NonNull @NotNull HttpRequest<?> request) throws TenantNotFoundException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44ad7c183766a21389cd9525edc6828e1a62a691"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczMzQ4MQ==", "bodyText": "I've added the @NonNull annotation to both TenantResolver::resolveIdentifier  and HttpRequestTenantResolver::resolveIdentifier(HttpRequest) methods.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4341#discussion_r507733481", "createdAt": "2020-10-19T13:12:12Z", "author": {"login": "sdelamo"}, "path": "multitenancy/src/main/java/io/micronaut/multitenancy/tenantresolver/HttpRequestTenantResolver.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.multitenancy.tenantresolver;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.http.HttpRequest;\n+import io.micronaut.multitenancy.exceptions.TenantNotFoundException;\n+\n+import javax.validation.constraints.NotNull;\n+import java.io.Serializable;\n+\n+/**\n+ * An interface for multi-tenant aware applications which resolve the current identifier for the current request.\n+ *\n+ * @author Sergio del Amo\n+ * @since 2.1.2\n+ */\n+public interface HttpRequestTenantResolver {\n+    /**\n+     * Resolves the current tenant identifier.\n+     * @param request The HTTP request\n+     * @return The tenant identifier\n+     * @throws TenantNotFoundException if tenant not found\n+     */\n+    Serializable resolveTenantIdentifier(@NonNull @NotNull HttpRequest<?> request) throws TenantNotFoundException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMjQ4MQ=="}, "originalCommit": {"oid": "44ad7c183766a21389cd9525edc6828e1a62a691"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1244, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}