{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MzU5NTA5", "number": 3761, "title": "Create threads named after its executor/event-loop", "bodyText": "", "createdAt": "2020-07-21T10:24:45Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3761", "merged": true, "mergeCommit": {"oid": "2d7984f5abe2f190412e2a41247eec2972da345f"}, "closed": true, "closedAt": "2020-09-10T15:33:57Z", "author": {"login": "graemerocher"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1-oHcAH2gAyNDU0MzU5NTA5OmQ5OGRiOThjZjMyNTU1ZWNiMDczZDI5NTVmMzczYTJiMTJhZWI3ZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3wP3CgFqTQ1NDE4NDg2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d98db98cf32555ecb073d2955f373a2b12aeb7e3", "author": {"user": {"login": "dstepanov", "name": "Denis Stepanov"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d98db98cf32555ecb073d2955f373a2b12aeb7e3", "committedDate": "2020-07-18T02:02:00Z", "message": "Create threads named after it's executor/event-loop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e5fdb24cddf380fa64f86eb5396a11ded0a2fd", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d3e5fdb24cddf380fa64f86eb5396a11ded0a2fd", "committedDate": "2020-07-21T10:23:53Z", "message": "resolve backward compatibility issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTg0ODY5", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3761#pullrequestreview-454184869", "createdAt": "2020-07-23T14:24:40Z", "commit": {"oid": "d3e5fdb24cddf380fa64f86eb5396a11ded0a2fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyNDo0MFrOG2NAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyNDo0MFrOG2NAUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ4OTM2Mg==", "bodyText": "Are you certain this works? I believe this has to be annotated with @ConfigurationInject?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3761#discussion_r459489362", "createdAt": "2020-07-23T14:24:40Z", "author": {"login": "jameskleeh"}, "path": "runtime/src/main/java/io/micronaut/scheduling/executor/UserExecutorConfiguration.java", "diffHunk": "@@ -37,18 +41,53 @@\n      */\n     public static final int AVAILABLE_PROCESSORS = Runtime.getRuntime().availableProcessors();\n \n+    protected String name;\n     // needs to be protected to allow for nThreads to be set in config\n     @SuppressWarnings(\"WeakerAccess\")\n-    protected Integer nThreads = AVAILABLE_PROCESSORS * 2;\n-    private ExecutorType type = ExecutorType.SCHEDULED;\n-    private Integer parallelism = AVAILABLE_PROCESSORS;\n-    private Integer corePoolSize = AVAILABLE_PROCESSORS * 2;\n+    protected Integer nThreads;\n+    private ExecutorType type;\n+    private Integer parallelism;\n+    private Integer corePoolSize;\n     private Class<? extends ThreadFactory> threadFactoryClass;\n \n+    /**\n+     * Private Constructor.\n+     *\n+     * @param name The name\n+     */\n+    private UserExecutorConfiguration(@Parameter String name) {\n+        this(name, null, null, null, null, null);\n+    }\n+\n     /**\n      * Default Constructor.\n+     *\n+     * @param name the name\n+     * @param nThreads number of threads\n+     * @param type the type\n+     * @param parallelism the parallelism\n+     * @param corePoolSize the core pool size\n+     * @param threadFactoryClass the thread factory class\n      */\n-    protected UserExecutorConfiguration() {\n+    @Inject\n+    protected UserExecutorConfiguration(@Nullable @Parameter String name,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e5fdb24cddf380fa64f86eb5396a11ded0a2fd"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2821, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}