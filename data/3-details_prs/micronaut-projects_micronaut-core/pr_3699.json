{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTU4OTEy", "number": 3699, "title": "Fix how suspend function results are mapped", "bodyText": "Fixes #3667", "createdAt": "2020-07-09T16:11:27Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3699", "merged": true, "mergeCommit": {"oid": "4e0f68f2fa6d48deac2794b15897e1200e676d21"}, "closed": true, "closedAt": "2020-07-12T07:45:39Z", "author": {"login": "jameskleeh"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczRX49AH2gAyNDQ2OTU4OTEyOmM5MzY1NGEzODExYWZjN2JjNzc2YjU3MjIxY2ViY2U3MjZmMGY0YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0H8YfAFqTQ0Njg1NDgwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c93654a3811afc7bc776b57221cebce726f0f4be", "author": {"user": {"login": "jameskleeh", "name": "James Kleeh"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/c93654a3811afc7bc776b57221cebce726f0f4be", "committedDate": "2020-07-09T16:10:42Z", "message": "Fix how suspend function results are passed through. Now filters will get an appropriate response based on the result of the body stream. Fixes #3667"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTg0MDI0", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3699#pullrequestreview-446184024", "createdAt": "2020-07-10T07:33:54Z", "commit": {"oid": "c93654a3811afc7bc776b57221cebce726f0f4be"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozMzo1NFrOGvtAgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozMzo1NFrOGvtAgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3MzY2NQ==", "bodyText": "Isn't it just more efficient to use Flowable.create instead of Single.create if we are just converting it to a flowable afterwards? Only different in the code would be you would have to call onNext(..) then onComplete()", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3699#discussion_r452673665", "createdAt": "2020-07-10T07:33:54Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/RoutingInBoundHandler.java", "diffHunk": "@@ -1407,49 +1408,47 @@ protected void doOnError(Throwable t) {\n                                 routeMatch instanceof MethodBasedRouteMatch &&\n                                         isKotlinFunctionReturnTypeUnit(((MethodBasedRouteMatch) routeMatch).getExecutableMethod());\n                         final Supplier<CompletableFuture<?>> supplier = ContinuationArgumentBinder.extractContinuationCompletableFutureSupplier(incomingRequest);\n-                        Object suspendedBody;\n                         if (isKotlinCoroutineSuspended(body)) {\n-                            if (isKotlinFunctionReturnTypeUnit) {\n-                                suspendedBody = Completable.create(emitter -> {\n-                                    CompletableFuture<?> f = supplier.get();\n-                                    f.whenComplete((BiConsumer<Object, Throwable>) (o, throwable) -> {\n-                                        if (throwable != null) {\n-                                            emitter.onError(throwable);\n-                                        } else {\n-                                            emitter.onComplete();\n-                                        }\n-                                    });\n-                                });\n-                            } else {\n-                                suspendedBody = Single.create(emitter -> {\n-                                    CompletableFuture<?> f = supplier.get();\n-                                    f.whenComplete((BiConsumer<Object, Throwable>) (o, throwable) -> {\n-                                        if (throwable != null) {\n-                                            emitter.onError(throwable);\n+                            return Single.<MutableHttpResponse<?>>create(emitter -> {\n+                                CompletableFuture<?> f = supplier.get();\n+                                f.whenComplete((o, throwable) -> {\n+                                    if (throwable != null) {\n+                                        emitter.onError(throwable);\n+                                    } else {\n+                                        MutableHttpResponse<?> response;\n+                                        if (o instanceof MutableHttpResponse) {\n+                                            response = (MutableHttpResponse<?>) o;\n                                         } else {\n-                                            emitter.onSuccess(o);\n+                                            response = forStatus(routeMatch.getAnnotationMetadata(), defaultHttpStatus);\n+                                            if (!isKotlinFunctionReturnTypeUnit) {\n+                                                response = response.body(o);\n+                                            }\n                                         }\n-                                    });\n+                                        response.setAttribute(HttpAttributes.ROUTE_MATCH, finalRoute);\n+                                        emitter.onSuccess(response);\n+                                    }\n                                 });\n-                            }\n+                            }).toFlowable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c93654a3811afc7bc776b57221cebce726f0f4be"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "379b27abe0e55aad39d2fdb96a4c9a4156e0e141", "author": {"user": {"login": "jameskleeh", "name": "James Kleeh"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/379b27abe0e55aad39d2fdb96a4c9a4156e0e141", "committedDate": "2020-07-10T13:25:14Z", "message": "Use Flowable.create instead of Single"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46177bf8c18b964cd4339fed6a6ffa007c8d69aa", "author": {"user": {"login": "jameskleeh", "name": "James Kleeh"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/46177bf8c18b964cd4339fed6a6ffa007c8d69aa", "committedDate": "2020-07-10T16:28:34Z", "message": "Merge branch 'master' into issue-3667"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODU0ODA0", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3699#pullrequestreview-446854804", "createdAt": "2020-07-12T07:45:27Z", "commit": {"oid": "46177bf8c18b964cd4339fed6a6ffa007c8d69aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2816, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}