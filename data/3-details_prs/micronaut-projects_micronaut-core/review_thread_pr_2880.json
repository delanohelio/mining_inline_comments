{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNjE2NDUz", "number": 2880, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNToyMToyOFrODlFgbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNToyMToyOFrODlFgbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjE0MTI2OnYy", "diffSide": "RIGHT", "path": "src/main/docs/guide/languageSupport/java/incrementalannotationgradle.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNToyMToyOFrOFxxivA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODoyNTozN1rOFx4h-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczNjI1Mg==", "bodyText": "I think this warning should be included for Kotlin as well as it applies the same. I would also include the          '-Amicronaut.processing.annotations=com.example.*', example", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2880#discussion_r387736252", "createdAt": "2020-03-04T15:21:28Z", "author": {"login": "graemerocher"}, "path": "src/main/docs/guide/languageSupport/java/incrementalannotationgradle.adoc", "diffHunk": "@@ -0,0 +1,18 @@\n+Micronaut supports https://docs.gradle.org/current/userguide/java_plugin.html#sec:incremental_annotation_processing[Gradle incremental annotation processing] which helps speed up builds by compiling only classes that have changed avoiding a full recompilation.\n+\n+However, the support is disabled by default since Micronaut allows the definition of custom meta-annotations (to for example define <<aop,custom AOP advice>>) that need to be configured for processing.\n+\n+The following example demonstrates how to enable and configure incremental annotation processing for annotations you have defined under the `com.example` package:\n+\n+.Enabling Incremental Annotation Processing\n+[source,groovy]\n+----\n+tasks.withType(JavaCompile) {\n+    options.compilerArgs = [\n+        '-Amicronaut.processing.incremental=true',\n+        '-Amicronaut.processing.annotations=com.example.*',\n+    ]\n+}\n+----\n+\n+WARNING: If you do not enable processing for custom annotations you define these annotations will simple be ignored by Micronaut which may break your application.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d40d2fbd536130f7f2baa736cb1045048a5f8e9f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg1MDc0Nw==", "bodyText": "I added the warning and an example with to different packages", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2880#discussion_r387850747", "createdAt": "2020-03-04T18:25:37Z", "author": {"login": "olamelin"}, "path": "src/main/docs/guide/languageSupport/java/incrementalannotationgradle.adoc", "diffHunk": "@@ -0,0 +1,18 @@\n+Micronaut supports https://docs.gradle.org/current/userguide/java_plugin.html#sec:incremental_annotation_processing[Gradle incremental annotation processing] which helps speed up builds by compiling only classes that have changed avoiding a full recompilation.\n+\n+However, the support is disabled by default since Micronaut allows the definition of custom meta-annotations (to for example define <<aop,custom AOP advice>>) that need to be configured for processing.\n+\n+The following example demonstrates how to enable and configure incremental annotation processing for annotations you have defined under the `com.example` package:\n+\n+.Enabling Incremental Annotation Processing\n+[source,groovy]\n+----\n+tasks.withType(JavaCompile) {\n+    options.compilerArgs = [\n+        '-Amicronaut.processing.incremental=true',\n+        '-Amicronaut.processing.annotations=com.example.*',\n+    ]\n+}\n+----\n+\n+WARNING: If you do not enable processing for custom annotations you define these annotations will simple be ignored by Micronaut which may break your application.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczNjI1Mg=="}, "originalCommit": {"oid": "d40d2fbd536130f7f2baa736cb1045048a5f8e9f"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1366, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}