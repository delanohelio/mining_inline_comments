{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTc0NjI3", "number": 3669, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDoyMFrOEMMqWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDo0NlrOEMMq8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI1ODE4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDoyMFrOGuLBTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDoyMFrOGuLBTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODIzOA==", "bodyText": "Needs @since tags", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068238", "createdAt": "2020-07-07T18:40:20Z", "author": {"login": "graemerocher"}, "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -488,6 +488,19 @@ default boolean isVoid() {\n         return of((Class<List<T>>) ((Class) List.class), type);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic list.\n+     *\n+     * @param type list element type\n+     * @param <T>  list element type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <T> Argument<List<T>> listOf(Argument<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f029229c621eadd4b4d253a169fb46a03a6b0209"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI1ODkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDozNVrOGuLBvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDozNVrOGuLBvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODM1MA==", "bodyText": "Needs @since tags", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068350", "createdAt": "2020-07-07T18:40:35Z", "author": {"login": "graemerocher"}, "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -501,6 +514,19 @@ default boolean isVoid() {\n         return of((Class<Set<T>>) ((Class) Set.class), type);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic set.\n+     *\n+     * @param type set element type\n+     * @param <T>  set element type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <T> Argument<Set<T>> setOf(Argument<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f029229c621eadd4b4d253a169fb46a03a6b0209"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI1OTcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDo0NlrOGuLCNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDo0NlrOGuLCNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODQ3MA==", "bodyText": "Needs @since tags", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3669#discussion_r451068470", "createdAt": "2020-07-07T18:40:46Z", "author": {"login": "graemerocher"}, "path": "core/src/main/java/io/micronaut/core/type/Argument.java", "diffHunk": "@@ -516,4 +542,19 @@ default boolean isVoid() {\n         return of((Class<Map<K, V>>) ((Class) Map.class), keyType, valueType);\n     }\n \n+    /**\n+     * Creates a new argument representing a generic map.\n+     *\n+     * @param keyType The key type\n+     * @param valueType The value type\n+     * @param <K>  The map key type\n+     * @param <V> The map value type\n+     * @return The argument instance\n+     */\n+    @NonNull\n+    static <K, V> Argument<Map<K, V>> mapOf(Argument<K> keyType, Argument<V> valueType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f029229c621eadd4b4d253a169fb46a03a6b0209"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1294, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}