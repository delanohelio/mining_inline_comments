{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTU5MTY4", "number": 3599, "title": "Clean-up inject code.", "bodyText": "", "createdAt": "2020-06-29T17:44:42Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599", "merged": true, "mergeCommit": {"oid": "906d27b0eec142f2d153ad7778c46abb791f0437"}, "closed": true, "closedAt": "2020-06-30T18:46:53Z", "author": {"login": "croudet"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwE7jfgBqjM0OTM4ODU3OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwZAtfgBqjM0OTg4NTIzMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e2a3a23bfd6e195c9a04c7b6428496a882d09ed", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/3e2a3a23bfd6e195c9a04c7b6428496a882d09ed", "committedDate": "2020-06-29T17:40:38Z", "message": "Clean-up inject code."}, "afterCommit": {"oid": "6a79ab4b45567aec6cc9cbf6e8ab365d294eb071", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/6a79ab4b45567aec6cc9cbf6e8ab365d294eb071", "committedDate": "2020-06-29T17:54:07Z", "message": "Clean-up inject code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a79ab4b45567aec6cc9cbf6e8ab365d294eb071", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/6a79ab4b45567aec6cc9cbf6e8ab365d294eb071", "committedDate": "2020-06-29T17:54:07Z", "message": "Clean-up inject code."}, "afterCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/a03a856f1d7fb5c4925e30fd3e62ad64fa913632", "committedDate": "2020-06-29T18:15:20Z", "message": "Clean-up inject code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTkzNjg3", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#pullrequestreview-440193687", "createdAt": "2020-06-30T16:34:25Z", "commit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozNDoyNVrOGrE7CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozOTowOFrOGrFILA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMjYwMQ==", "bodyText": "This doesn't seem correct", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#discussion_r447822601", "createdAt": "2020-06-30T16:34:25Z", "author": {"login": "jameskleeh"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/visitor/AbstractJavaElement.java", "diffHunk": "@@ -211,30 +211,23 @@ public String toString() {\n                 return mirrorToClassElement(bound, visitorContext, genericsInfo);\n             } else {\n \n-                ClassElement classElement = mirrorToClassElement(upperBound, visitorContext, genericsInfo);\n-                if (classElement != null) {\n-                    return classElement;\n-                } else {\n-                    return mirrorToClassElement(tv.getLowerBound(), visitorContext, genericsInfo);\n-                }\n+                return mirrorToClassElement(upperBound, visitorContext, genericsInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMzYxNQ==", "bodyText": "Removing this check doesn't seem correct. The previous calls mirrorToClassElement could have returned null", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#discussion_r447823615", "createdAt": "2020-06-30T16:35:45Z", "author": {"login": "jameskleeh"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/visitor/JavaClassElement.java", "diffHunk": "@@ -211,37 +211,31 @@ protected void accept(DeclaredType declaringType, javax.lang.model.element.Eleme\n                         getterReturnType = mirrorToClassElement(returnType, visitorContext, JavaClassElement.this.genericTypeInfo);\n                     }\n \n-                    if (getterReturnType != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMzkzNg==", "bodyText": "Removing this check doesn't seem correct. The previous call to mirrorToClassElement could have returned null", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#discussion_r447823936", "createdAt": "2020-06-30T16:36:09Z", "author": {"login": "jameskleeh"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/visitor/JavaClassElement.java", "diffHunk": "@@ -211,37 +211,31 @@ protected void accept(DeclaredType declaringType, javax.lang.model.element.Eleme\n                         getterReturnType = mirrorToClassElement(returnType, visitorContext, JavaClassElement.this.genericTypeInfo);\n                     }\n \n-                    if (getterReturnType != null) {\n-\n-                        BeanPropertyData beanPropertyData = props.computeIfAbsent(propertyName, BeanPropertyData::new);\n-                        configureDeclaringType(declaringTypeElement, beanPropertyData);\n-                        beanPropertyData.type = getterReturnType;\n-                        beanPropertyData.getter = executableElement;\n-                        if (beanPropertyData.setter != null) {\n-                            TypeMirror typeMirror = beanPropertyData.setter.getParameters().get(0).asType();\n-                            ClassElement setterParameterType = mirrorToClassElement(typeMirror, visitorContext, JavaClassElement.this.genericTypeInfo);\n-                            if (setterParameterType == null || !setterParameterType.getName().equals(getterReturnType.getName())) {\n-                                beanPropertyData.setter = null; // not a compatible setter\n-                            }\n+                    BeanPropertyData beanPropertyData = props.computeIfAbsent(propertyName, BeanPropertyData::new);\n+                    configureDeclaringType(declaringTypeElement, beanPropertyData);\n+                    beanPropertyData.type = getterReturnType;\n+                    beanPropertyData.getter = executableElement;\n+                    if (beanPropertyData.setter != null) {\n+                        TypeMirror typeMirror = beanPropertyData.setter.getParameters().get(0).asType();\n+                        ClassElement setterParameterType = mirrorToClassElement(typeMirror, visitorContext, JavaClassElement.this.genericTypeInfo);\n+                        if (!setterParameterType.getName().equals(getterReturnType.getName())) {\n+                            beanPropertyData.setter = null; // not a compatible setter\n                         }\n                     }\n                 } else if (NameUtils.isSetterName(methodName) && executableElement.getParameters().size() == 1) {\n                     String propertyName = NameUtils.getPropertyNameForSetter(methodName);\n                     TypeMirror typeMirror = executableElement.getParameters().get(0).asType();\n                     ClassElement setterParameterType = mirrorToClassElement(typeMirror, visitorContext, JavaClassElement.this.genericTypeInfo);\n \n-                    if (setterParameterType != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNTIxMQ==", "bodyText": "This also doesn't make sense to me. If the call returns null it shouldn't be put into the map with a null value", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#discussion_r447825211", "createdAt": "2020-06-30T16:38:00Z", "author": {"login": "jameskleeh"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/visitor/JavaClassElement.java", "diffHunk": "@@ -415,9 +404,7 @@ public AnnotationMetadata getAnnotationMetadata() {\n         while (tpi.hasNext()) {\n             TypeParameterElement tpe = tpi.next();\n             ClassElement classElement = mirrorToClassElement(tpe.asType(), visitorContext, this.genericTypeInfo);\n-            if (classElement != null) {\n-                map.put(tpe.toString(), classElement);\n-            }\n+            map.put(tpe.toString(), classElement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNTk2NA==", "bodyText": "What is the reasoning for this change?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3599#discussion_r447825964", "createdAt": "2020-06-30T16:39:08Z", "author": {"login": "jameskleeh"}, "path": "inject/src/main/java/io/micronaut/context/AbstractBeanDefinition.java", "diffHunk": "@@ -128,7 +128,7 @@ protected AbstractBeanDefinition(Class<T> producedType,\n                                      boolean requiresReflection,\n                                      Argument... arguments) {\n \n-        AnnotationMetadata beanAnnotationMetadata = getAnnotationMetadata();\n+        getAnnotationMetadata();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26e9ccc5f0b6473f1626eceefd627d99943fb9d0", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/26e9ccc5f0b6473f1626eceefd627d99943fb9d0", "committedDate": "2020-06-30T17:22:34Z", "message": "Clean-up inject code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a03a856f1d7fb5c4925e30fd3e62ad64fa913632", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/a03a856f1d7fb5c4925e30fd3e62ad64fa913632", "committedDate": "2020-06-29T18:15:20Z", "message": "Clean-up inject code."}, "afterCommit": {"oid": "26e9ccc5f0b6473f1626eceefd627d99943fb9d0", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/26e9ccc5f0b6473f1626eceefd627d99943fb9d0", "committedDate": "2020-06-30T17:22:34Z", "message": "Clean-up inject code."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2846, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}