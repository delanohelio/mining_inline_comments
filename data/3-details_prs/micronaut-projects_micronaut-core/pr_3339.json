{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyODc0MzY1", "number": 3339, "title": "AccessLogger for http server", "bodyText": "In the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\nWorks with http and http2, will log at info level.\nConfiguration:\n\nenable with 'micronaut.server.netty.access-logger.enabled'\nchange logger name with 'micronaut.server.netty.access-logger.logger-name', default is HTTP_ACCESS_LOGGER\nchange log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n<appender name=\"httpAccessLogAppender\"\n    class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <append>true</append>\n    <file>log/http-access.log</file>\n    <rollingPolicy\n        class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n        <!-- daily rollover -->\n        <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n        </fileNamePattern>\n        <maxHistory>7</maxHistory>\n    </rollingPolicy>\n    <encoder>\n        <charset>UTF-8</charset>\n        <pattern>%msg%n</pattern>\n    </encoder>\n    <immediateFlush>true</immediateFlush>\n</appender>\n\n<logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n    <appender-ref ref=\"httpAccessLogAppender\" />\n</logger>", "createdAt": "2020-05-25T19:35:17Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339", "merged": true, "mergeCommit": {"oid": "61b6be20047d280e6944c3ccef1e627fcc2d64fa"}, "closed": true, "closedAt": "2020-05-27T06:41:02Z", "author": {"login": "croudet"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABck1mJ8ABqjMzNzExNTEzMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclMfC3gBqjMzNzU2NjM3NTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "961c55c50ca1497352d14b35efbd9a6d32017e8b", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/961c55c50ca1497352d14b35efbd9a6d32017e8b", "committedDate": "2020-05-25T19:23:56Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}, "afterCommit": {"oid": "7924a636f368d411396620b5fe5762a88a214580", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7924a636f368d411396620b5fe5762a88a214580", "committedDate": "2020-05-25T19:53:42Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7924a636f368d411396620b5fe5762a88a214580", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7924a636f368d411396620b5fe5762a88a214580", "committedDate": "2020-05-25T19:53:42Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}, "afterCommit": {"oid": "23127e63151b2a65a77401938b39a74b8b389a77", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/23127e63151b2a65a77401938b39a74b8b389a77", "committedDate": "2020-05-25T20:13:12Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23127e63151b2a65a77401938b39a74b8b389a77", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/23127e63151b2a65a77401938b39a74b8b389a77", "committedDate": "2020-05-25T20:13:12Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}, "afterCommit": {"oid": "dc5b78e5c115b6ffbdbc19bb0408dcd0d3293e50", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/dc5b78e5c115b6ffbdbc19bb0408dcd0d3293e50", "committedDate": "2020-05-25T20:46:22Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc5b78e5c115b6ffbdbc19bb0408dcd0d3293e50", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/dc5b78e5c115b6ffbdbc19bb0408dcd0d3293e50", "committedDate": "2020-05-25T20:46:22Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}, "afterCommit": {"oid": "7eeacc05a9dacf5266cc76b719d66bf2ace601fa", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7eeacc05a9dacf5266cc76b719d66bf2ace601fa", "committedDate": "2020-05-25T21:04:31Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7774dd0076d17f66640b6150808c08914144c01e", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7774dd0076d17f66640b6150808c08914144c01e", "committedDate": "2020-05-25T21:22:18Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7eeacc05a9dacf5266cc76b719d66bf2ace601fa", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7eeacc05a9dacf5266cc76b719d66bf2ace601fa", "committedDate": "2020-05-25T21:04:31Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}, "afterCommit": {"oid": "7774dd0076d17f66640b6150808c08914144c01e", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/7774dd0076d17f66640b6150808c08914144c01e", "committedDate": "2020-05-25T21:22:18Z", "message": "AccessLogger for httpserver\n\nIn the spirit of apache mod_log_config http://httpd.apache.org/docs/current/mod/mod_log_config.html and\ntomcat Access Log Valve https://tomcat.apache.org/tomcat-10.0-doc/config/valve.html#Access_Logging\n\nWorks with http and http2, will log at info level.\n\nConfguration:\n- enable with 'micronaut.server.netty.access-logger.enabled'\n- change logger name with 'micronaut.server.netty.access-logger.logger-name', default is `HTTP_ACCESS_LOGGER`\n- change log format with 'micronaut.server.netty.access-logger.log-format', default is Common Log Format, https://en.wikipedia.org/wiki/Common_Log_Format\n\nYou have to add a logger in logback, for instance for the default logger name:\n\n    <appender name=\"httpAccessLogAppender\"\n        class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <append>true</append>\n        <file>log/http-access.log</file>\n        <rollingPolicy\n            class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <!-- daily rollover -->\n            <fileNamePattern>log/http-access-%d{yyyy-MM-dd}.log\n            </fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%msg%n</pattern>\n        </encoder>\n        <immediateFlush>true</immediateFlush>\n    </appender>\n\n    <logger name=\"HTTP_ACCESS_LOGGER\" additivity=\"false\" level=\"info\">\n        <appender-ref ref=\"httpAccessLogAppender\" />\n    </logger>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Mjk3OTMy", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#pullrequestreview-418297932", "createdAt": "2020-05-26T13:29:44Z", "commit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzoyOTo0NFrOGaeTLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozNzoxM1rOGaenOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxMjU5MA==", "bodyText": "It seems like these initializers are redundant and the fields can be made final since they are reassigned in the constructor?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430412590", "createdAt": "2020-05-26T13:29:44Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/AccessLog.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.slf4j.Logger;\n+\n+import io.micronaut.http.server.netty.handler.accesslog.element.AccessLogFormatParser.IndexedLogElement;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.socket.SocketChannel;\n+import io.netty.handler.codec.http.HttpHeaders;\n+\n+/**\n+ * An Access log instance.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+public class AccessLog {\n+    private List<IndexedLogElement> onRequestHeadersElements = new ArrayList<>();\n+    private List<IndexedLogElement> onResponseHeadersElements = new ArrayList<>();\n+    private List<IndexedLogElement> onResponseWriteElements = new ArrayList<>();\n+    private List<IndexedLogElement> onLastResponseWriteElements = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTA5OA==", "bodyText": "Also please make the fields final if possible", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430415098", "createdAt": "2020-05-26T13:33:24Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/AccessLogFormatParser.java", "diffHunk": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.ArrayList;\n+import java.util.IdentityHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n+\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.socket.SocketChannel;\n+import io.netty.handler.codec.http.HttpHeaderNames;\n+\n+/**\n+ * The access log format parser.\n+ *\n+ * The syntax is based on <a href=\"http://httpd.apache.org/docs/current/mod/mod_log_config.html\">Apache httpd log format</a>.\n+ * Here are the supported directives:\n+ * <ul>\n+ * <li><b>%a</b> - Remote IP address</li>\n+ * <li><b>%A</b> - Local IP address</li>\n+ * <li><b>%b</b> - Bytes sent, excluding HTTP headers, or '-' if no bytes were sent</li>\n+ * <li><b>%B</b> - Bytes sent, excluding HTTP headers</li>\n+ * <li><b>%h</b> - Remote host name</li>\n+ * <li><b>%H</b> - Request protocol</li>\n+ * <li><b>%{<header>}i</b> - Request header. If the argument is omitted (<b>%i</b>) all headers will be printed</li>\n+ * <li><b>%{<header>}o</b> - Response header. If the argument is omitted (<b>%o</b>) all headers will be printed</li>\n+ * <li><b>%{<cookie>}C</b> - Request cookie (COOKIE). If the argument is omitted (<b>%C</b>) all cookies will be printed</li>\n+ * <li><b>%{<cookie>}c</b> - Response cookie (SET_COOKIE). If the argument is omitted (<b>%c</b>) all cookies will be printed</li>\n+ * <li><b>%l</b> - Remote logical username from identd (always returns '-')</li>\n+ * <li><b>%m</b> - Request method</li>\n+ * <li><b>%p</b> - Local port</li>\n+ * <li><b>%q</b> - Query string (excluding the '?' character)</li>\n+ * <li><b>%r</b> - First line of the request</li>\n+ * <li><b>%s</b> - HTTP status code of the response</li>\n+ * <li><b>%{<format>}t</b> - Date and time. If the argument is ommitted the Common Log Format format is used (\"'['dd/MMM/yyyy:HH:mm:ss Z']'\").\n+ * If the format starts with begin: (default) the time is taken at the beginning of the request processing. If it starts with end: it is the time when the log entry gets written, close to the end of the request processing.\n+ * The format should follow the DateTimeFormatter syntax.</li>\n+ * <li><b>%u</b> - Remote user that was authenticated. Not implemented. Prints '-'.</li>\n+ * <li><b>%U</b> - Requested URI</li>\n+ * <li><b>%v</b> - Local server name</li>\n+ * <li><b>%D</b> - Time taken to process the request, in millis</li>\n+ * <li><b>%T</b> - Time taken to process the request, in seconds</li>\n+ * </ul>\n+ * <p>In addition, the following aliases for commonly utilized patterns:</p>\n+ * <ul>\n+ * <li><b>common</b> - <code>%h %l %u %t \"%r\" %s %b</code> Common Log Format (CLF)</li>\n+ * <li><b>combined</b> -\n+ * <code>%h %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-Agent}i\"</code> Combined Log Format</li>\n+ * </ul>\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+public class AccessLogFormatParser {\n+    /**\n+     * The combined log format.\n+     */\n+    public static final String COMBINED_LOG_FORMAT = \"%h %l %u %t \\\"%r\\\" %s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\";\n+    /**\n+     * The common log format.\n+     */\n+    public static final String COMMON_LOG_FORMAT = \"%h %l %u %t \\\"%r\\\" %s %b\";\n+\n+    private List<IndexedLogElement> onRequestElements = new ArrayList<>();\n+    private List<IndexedLogElement> onResponseHeadersElements = new ArrayList<>();\n+    private List<IndexedLogElement> onResponseWriteElements = new ArrayList<>();\n+    private List<IndexedLogElement> onLastResponseWriteElements = new ArrayList<>();\n+    private List<IndexedLogElement> constantElements = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg2NA==", "bodyText": "since this class is internal maybe make it final", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430416864", "createdAt": "2020-05-26T13:35:56Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/BytesSentElement.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+/**\n+ * BytesSentElement LogElement. The bytes sent.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+class BytesSentElement implements LogElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzEzNw==", "bodyText": "Maybe make it final", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430417137", "createdAt": "2020-05-26T13:36:19Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/ConstantElement.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+\n+import io.netty.channel.socket.SocketChannel;\n+import io.netty.handler.codec.http.HttpHeaders;\n+\n+/**\n+ * ConstantElement LogElement. Represents a fixed value.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+class ConstantElement implements LogElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzQxNg==", "bodyText": "Maybe make this one final", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430417416", "createdAt": "2020-05-26T13:36:45Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/DateTimeElement.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.EnumSet;\n+import java.util.Locale;\n+import java.util.Set;\n+\n+import io.netty.channel.socket.SocketChannel;\n+import io.netty.handler.codec.http.HttpHeaders;\n+\n+/**\n+ * DateTimeElement LogElement.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+class DateTimeElement implements LogElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzU1Ng==", "bodyText": "Maybe make this final", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430417556", "createdAt": "2020-05-26T13:36:59Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/ElapseTimeElement.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.EnumSet;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+import io.netty.channel.socket.SocketChannel;\n+import io.netty.handler.codec.http.HttpHeaders;\n+\n+/**\n+ * ElapseTimeElement LogElement. Time spent to complete the request.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+class ElapseTimeElement implements LogElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzcyMg==", "bodyText": "Maybe make this final", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3339#discussion_r430417722", "createdAt": "2020-05-26T13:37:13Z", "author": {"login": "graemerocher"}, "path": "http-server-netty/src/main/java/io/micronaut/http/server/netty/handler/accesslog/element/HeaderElement.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.server.netty.handler.accesslog.element;\n+\n+import java.util.List;\n+import java.util.StringJoiner;\n+\n+import io.netty.handler.codec.http.HttpHeaders;\n+\n+/**\n+ * HeaderElement LogElement. A http header.\n+ *\n+ * @author croudet\n+ * @since 2.0\n+ */\n+class HeaderElement extends AbstractHttpMessageLogElement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "204571433d861b42ce7bf2f9f7c3463f2b3ed115", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/204571433d861b42ce7bf2f9f7c3463f2b3ed115", "committedDate": "2020-05-26T14:00:12Z", "message": "Remove SessionElement\n\nadding `api project(\":session\")` breaks `ResponseAndStreamSpec.test switch to streaming on flowable body`:\n\n18:36:47.667 [Test worker] WARN  io.micronaut.core.reflect.ClassUtils - Request argument binder [io.micronaut.session.binder.OptionalSessionValueArgumentBinder@eef9493] triggered the use of reflection for types []\n18:36:48.621 [nioEventLoopGroup-1-3] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: null\njava.lang.NullPointerException: null\n\tat io.micronaut.http.filter.OncePerRequestHttpServerFilter.doFilter(OncePerRequestHttpServerFilter.java:35)\n\tat io.micronaut.http.filter.HttpServerFilter.doFilter(HttpServerFilter.java:48)\n\tat io.micronaut.http.server.netty.RoutingInBoundHandler$3.proceed(RoutingInBoundHandler.java:1787)\n\tat io.micronaut.http.filter.ServerFilterChain$proceed.call(Unknown Source)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d63013f886cbc6574fef3d3b997bbc51b4d8684", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/5d63013f886cbc6574fef3d3b997bbc51b4d8684", "committedDate": "2020-05-25T22:50:39Z", "message": "Remove SessionElement\n\nadding `api project(\":session\")` breaks `ResponseAndStreamSpec.test switch to streaming on flowable body`:\n\n18:36:47.667 [Test worker] WARN  io.micronaut.core.reflect.ClassUtils - Request argument binder [io.micronaut.session.binder.OptionalSessionValueArgumentBinder@eef9493] triggered the use of reflection for types []\n18:36:48.621 [nioEventLoopGroup-1-3] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: null\njava.lang.NullPointerException: null\n\tat io.micronaut.http.filter.OncePerRequestHttpServerFilter.doFilter(OncePerRequestHttpServerFilter.java:35)\n\tat io.micronaut.http.filter.HttpServerFilter.doFilter(HttpServerFilter.java:48)\n\tat io.micronaut.http.server.netty.RoutingInBoundHandler$3.proceed(RoutingInBoundHandler.java:1787)\n\tat io.micronaut.http.filter.ServerFilterChain$proceed.call(Unknown Source)"}, "afterCommit": {"oid": "204571433d861b42ce7bf2f9f7c3463f2b3ed115", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/204571433d861b42ce7bf2f9f7c3463f2b3ed115", "committedDate": "2020-05-26T14:00:12Z", "message": "Remove SessionElement\n\nadding `api project(\":session\")` breaks `ResponseAndStreamSpec.test switch to streaming on flowable body`:\n\n18:36:47.667 [Test worker] WARN  io.micronaut.core.reflect.ClassUtils - Request argument binder [io.micronaut.session.binder.OptionalSessionValueArgumentBinder@eef9493] triggered the use of reflection for types []\n18:36:48.621 [nioEventLoopGroup-1-3] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: null\njava.lang.NullPointerException: null\n\tat io.micronaut.http.filter.OncePerRequestHttpServerFilter.doFilter(OncePerRequestHttpServerFilter.java:35)\n\tat io.micronaut.http.filter.HttpServerFilter.doFilter(HttpServerFilter.java:48)\n\tat io.micronaut.http.server.netty.RoutingInBoundHandler$3.proceed(RoutingInBoundHandler.java:1787)\n\tat io.micronaut.http.filter.ServerFilterChain$proceed.call(Unknown Source)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46380fc297122150a5e519e20038d2a5143507bd", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/46380fc297122150a5e519e20038d2a5143507bd", "committedDate": "2020-05-26T16:14:29Z", "message": "Refactor Access Logging support.\n\nUse Builders and ServiceLoader patterns."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d198abdf6a76b546d1810414858c4704eb10a4d", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/8d198abdf6a76b546d1810414858c4704eb10a4d", "committedDate": "2020-05-26T16:14:35Z", "message": "Add SessionLogElement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d23559344a1ff72f7554e273e4efd2302af603", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/76d23559344a1ff72f7554e273e4efd2302af603", "committedDate": "2020-05-26T16:17:46Z", "message": "Clean-up AccessLog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8436aca975d92c9dde8945a66f9397a6eeb184e9", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/8436aca975d92c9dde8945a66f9397a6eeb184e9", "committedDate": "2020-05-26T16:55:35Z", "message": "Documentation for access logger."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69dd5625fdd2bcf136a7e2d7d8d4eb3614c49ca6", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/69dd5625fdd2bcf136a7e2d7d8d4eb3614c49ca6", "committedDate": "2020-05-26T17:43:10Z", "message": "elements in AccessLog can be final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "471474d37ea9cc352c40a6334a79f84efd2bede2", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/471474d37ea9cc352c40a6334a79f84efd2bede2", "committedDate": "2020-05-26T17:58:46Z", "message": "Remove System.out.println"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29feb5ab537c3c3561f5365f7b505829f79b1105", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/29feb5ab537c3c3561f5365f7b505829f79b1105", "committedDate": "2020-05-26T19:26:51Z", "message": "clean-up access logger code."}, "afterCommit": {"oid": "9d68233bc14636eaf69b034eeb0b589a89aa0fa8", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9d68233bc14636eaf69b034eeb0b589a89aa0fa8", "committedDate": "2020-05-26T20:30:12Z", "message": "clean-up access logger code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d68233bc14636eaf69b034eeb0b589a89aa0fa8", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9d68233bc14636eaf69b034eeb0b589a89aa0fa8", "committedDate": "2020-05-26T20:30:12Z", "message": "clean-up access logger code."}, "afterCommit": {"oid": "940c959c6506b550c897ef7b49ac86f3055c65dd", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/940c959c6506b550c897ef7b49ac86f3055c65dd", "committedDate": "2020-05-26T20:45:11Z", "message": "clean-up access logger code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "940c959c6506b550c897ef7b49ac86f3055c65dd", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/940c959c6506b550c897ef7b49ac86f3055c65dd", "committedDate": "2020-05-26T20:45:11Z", "message": "clean-up access logger code."}, "afterCommit": {"oid": "9124fb28ade33bcc9ebd0cf340f5a7e19edc7e5d", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9124fb28ade33bcc9ebd0cf340f5a7e19edc7e5d", "committedDate": "2020-05-26T20:58:22Z", "message": "clean-up access logger code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457933bdbbb63a824cd228760248fadd45eafc2d", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/457933bdbbb63a824cd228760248fadd45eafc2d", "committedDate": "2020-05-26T22:33:44Z", "message": "clean-up access logger code."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9124fb28ade33bcc9ebd0cf340f5a7e19edc7e5d", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9124fb28ade33bcc9ebd0cf340f5a7e19edc7e5d", "committedDate": "2020-05-26T20:58:22Z", "message": "clean-up access logger code."}, "afterCommit": {"oid": "457933bdbbb63a824cd228760248fadd45eafc2d", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/457933bdbbb63a824cd228760248fadd45eafc2d", "committedDate": "2020-05-26T22:33:44Z", "message": "clean-up access logger code."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}