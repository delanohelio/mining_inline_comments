{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NTMxMjg2", "number": 4610, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODowNzowNFrOE-xq8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODowNzowNFrOE-xq8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjYwOTc3OnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/bind/DefaultHttpClientBinderRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODowNzowNFrOH8HUZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1NDoxNFrOH8JCMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NjUxNw==", "bodyText": "This should be context.with(beanProperty.asArgument()) so that errors are combined in the same context", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4610#discussion_r532796517", "createdAt": "2020-11-30T18:07:04Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/bind/DefaultHttpClientBinderRegistry.java", "diffHunk": "@@ -122,6 +124,17 @@ protected DefaultHttpClientBinderRegistry(ConversionService<?> conversionService\n         byAnnotation.put(Body.class, (ClientArgumentRequestBinder<Object>) (context, uriContext, value, request) -> {\n             request.body(value);\n         });\n+        byAnnotation.put(RequestBean.class, (ClientArgumentRequestBinder<Object>) (context, uriContext, value, request) -> {\n+            BeanIntrospection<Object> introspection = BeanIntrospection.getIntrospection(context.getArgument().getType());\n+            for (BeanProperty<Object, Object> beanProperty : introspection.getBeanProperties()) {\n+                findArgumentBinder(beanProperty.asArgument()).ifPresent(binder -> {\n+                    Object propertyValue = beanProperty.get(value);\n+                    if (propertyValue != null) {\n+                        binder.bind(ConversionContext.of(beanProperty.asArgument()), uriContext, propertyValue, request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "246c830a228864e7d2734a8315a93715edc601b4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNDYyNg==", "bodyText": "Done", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4610#discussion_r532824626", "createdAt": "2020-11-30T18:54:14Z", "author": {"login": "dstepanov"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/bind/DefaultHttpClientBinderRegistry.java", "diffHunk": "@@ -122,6 +124,17 @@ protected DefaultHttpClientBinderRegistry(ConversionService<?> conversionService\n         byAnnotation.put(Body.class, (ClientArgumentRequestBinder<Object>) (context, uriContext, value, request) -> {\n             request.body(value);\n         });\n+        byAnnotation.put(RequestBean.class, (ClientArgumentRequestBinder<Object>) (context, uriContext, value, request) -> {\n+            BeanIntrospection<Object> introspection = BeanIntrospection.getIntrospection(context.getArgument().getType());\n+            for (BeanProperty<Object, Object> beanProperty : introspection.getBeanProperties()) {\n+                findArgumentBinder(beanProperty.asArgument()).ifPresent(binder -> {\n+                    Object propertyValue = beanProperty.get(value);\n+                    if (propertyValue != null) {\n+                        binder.bind(ConversionContext.of(beanProperty.asArgument()), uriContext, propertyValue, request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NjUxNw=="}, "originalCommit": {"oid": "246c830a228864e7d2734a8315a93715edc601b4"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1215, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}