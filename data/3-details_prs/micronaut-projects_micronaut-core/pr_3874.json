{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTAyODEw", "number": 3874, "title": "Add new utility methods for GraalVM and refactor", "bodyText": "See micronaut-projects/micronaut-sql#275\nOnce this is merged and Micronaut 2.0.2 released I will merge micronaut-projects/micronaut-sql#278 with the changes.", "createdAt": "2020-08-06T15:32:31Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3874", "merged": true, "mergeCommit": {"oid": "1f3c21643638b7483609b35f5eece3b7f92917a2"}, "closed": true, "closedAt": "2020-08-14T08:21:07Z", "author": {"login": "ilopmar"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8SLZugH2gAyNDY0MTAyODEwOjEwZGZkNjYyNTE4ZWI3NTkwZjAwMjlmNzI2OTExZWEzNDRmNDhkZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-vLWFgFqTQ2NzM1MTY5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10dfd662518eb7590f0029f726911ea344f48de1", "author": {"user": {"login": "ilopmar", "name": "Iv\u00e1n L\u00f3pez"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/10dfd662518eb7590f0029f726911ea344f48de1", "committedDate": "2020-08-06T16:12:17Z", "message": "Add new utility methods for GraalVM and refactor\n\nSee https://github.com/micronaut-projects/micronaut-sql/issues/275"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2a38ccc2b631c753a47e9d3a3574770810ab7b3", "author": {"user": {"login": "ilopmar", "name": "Iv\u00e1n L\u00f3pez"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/c2a38ccc2b631c753a47e9d3a3574770810ab7b3", "committedDate": "2020-08-06T15:27:24Z", "message": "Add new utility methods for GraalVM and refactor\n\nSee https://github.com/micronaut-projects/micronaut-sql/issues/275"}, "afterCommit": {"oid": "10dfd662518eb7590f0029f726911ea344f48de1", "author": {"user": {"login": "ilopmar", "name": "Iv\u00e1n L\u00f3pez"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/10dfd662518eb7590f0029f726911ea344f48de1", "committedDate": "2020-08-06T16:12:17Z", "message": "Add new utility methods for GraalVM and refactor\n\nSee https://github.com/micronaut-projects/micronaut-sql/issues/275"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzUxNjk0", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3874#pullrequestreview-467351694", "createdAt": "2020-08-14T07:07:00Z", "commit": {"oid": "10dfd662518eb7590f0029f726911ea344f48de1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzowNzowMVrOHAp4MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNzowNzoxMVrOHAp4kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ0ODE3Ng==", "bodyText": "Even if the class is flagged as internal. Should not we keep the method and annotate it with @Deprecated and in the java doc tell to use the new one:\n    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String className) {\nFrom the old one we can the new one.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3874#discussion_r470448176", "createdAt": "2020-08-14T07:07:01Z", "author": {"login": "sdelamo"}, "path": "core/src/main/java/io/micronaut/core/graal/AutomaticFeatureUtils.java", "diffHunk": "@@ -44,67 +45,118 @@\n     /**\n      * Marks the given class to be initialized at build time, only if it is present.\n      *\n-     * @param access the {@link BeforeAnalysisAccess} instance\n-     * @param className the class name\n+     * @param access     The {@link BeforeAnalysisAccess} instance\n+     * @param classNames The class names\n      */\n-    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String className) {\n-        findClass(access, className).ifPresent(RuntimeClassInitialization::initializeAtBuildTime);\n+    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String... classNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10dfd662518eb7590f0029f726911ea344f48de1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ0ODI3NQ==", "bodyText": "Even if the class is flagged as internal. Should not we keep the method and annotate it with @Deprecated and in the java doc tell to use the new one:\n    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String className) {\nFrom the old one we can the new one.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3874#discussion_r470448275", "createdAt": "2020-08-14T07:07:11Z", "author": {"login": "sdelamo"}, "path": "core/src/main/java/io/micronaut/core/graal/AutomaticFeatureUtils.java", "diffHunk": "@@ -44,67 +45,118 @@\n     /**\n      * Marks the given class to be initialized at build time, only if it is present.\n      *\n-     * @param access the {@link BeforeAnalysisAccess} instance\n-     * @param className the class name\n+     * @param access     The {@link BeforeAnalysisAccess} instance\n+     * @param classNames The class names\n      */\n-    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String className) {\n-        findClass(access, className).ifPresent(RuntimeClassInitialization::initializeAtBuildTime);\n+    public static void initializeAtBuildTime(BeforeAnalysisAccess access, String... classNames) {\n+        for (String className : classNames) {\n+            findClass(access, className).ifPresent(RuntimeClassInitialization::initializeAtBuildTime);\n+        }\n     }\n \n     /**\n      * Marks the given class to be initialized at runtime, only if it is present.\n      *\n-     * @param access the {@link BeforeAnalysisAccess} instance\n-     * @param className the class name\n+     * @param access     The {@link BeforeAnalysisAccess} instance\n+     * @param classNames The class names\n      */\n-    public static void initializeAtRunTime(BeforeAnalysisAccess access, String className) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10dfd662518eb7590f0029f726911ea344f48de1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2788, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}