{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Mzg0MjM2", "number": 4012, "title": "Liveness and readiness probes", "bodyText": "Fixes #4005", "createdAt": "2020-09-03T06:14:12Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012", "merged": true, "mergeCommit": {"oid": "d7dd8901ac6526d08938f8e064fe3cb0b794e43e"}, "closed": true, "closedAt": "2020-09-18T08:00:19Z", "author": {"login": "pgressa"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFKcX_AFqTQ4MTUyMTI3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJt1FkABqjM3NzcwODE0Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNTIxMjcx", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-481521271", "createdAt": "2020-09-03T06:16:54Z", "commit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNjo1NFrOHMXY4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNjo1NFrOHMXY4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODE2Mw==", "bodyText": "I don't like this line but I expect that Array.asList will be somehow optimised by JIT", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482728163", "createdAt": "2020-09-03T06:16:54Z", "author": {"login": "pgressa"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpoint.java", "diffHunk": "@@ -79,8 +90,39 @@ public HealthEndpoint(HealthAggregator<HealthResult> healthAggregator,\n     @Read\n     public Single<HealthResult> getHealth(@Nullable Principal principal) {\n         HealthLevelOfDetail detail = levelOfDetail(principal);\n+        // due to backward comaptibility all HealthIndicators that are not qualified with Readiness\n+        // e.g. are Liveness or without qualifier are returned by this resource\n         return Single.fromPublisher(\n-                healthAggregator.aggregate(healthIndicators, detail)\n+                healthAggregator.aggregate(\n+                        Arrays.stream(healthIndicators).\n+                                filter(healthIndicator ->\n+                                        !Arrays.asList(readinessHealthIndicators).contains(healthIndicator))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNTIxNDYz", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-481521463", "createdAt": "2020-09-03T06:17:17Z", "commit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNzoxOFrOHMXZXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNzoxOFrOHMXZXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODI4Ng==", "bodyText": "Not sure whether using enum in selector isn't too much defensive", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482728286", "createdAt": "2020-09-03T06:17:18Z", "author": {"login": "pgressa"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpoint.java", "diffHunk": "@@ -79,8 +90,39 @@ public HealthEndpoint(HealthAggregator<HealthResult> healthAggregator,\n     @Read\n     public Single<HealthResult> getHealth(@Nullable Principal principal) {\n         HealthLevelOfDetail detail = levelOfDetail(principal);\n+        // due to backward comaptibility all HealthIndicators that are not qualified with Readiness\n+        // e.g. are Liveness or without qualifier are returned by this resource\n         return Single.fromPublisher(\n-                healthAggregator.aggregate(healthIndicators, detail)\n+                healthAggregator.aggregate(\n+                        Arrays.stream(healthIndicators).\n+                                filter(healthIndicator ->\n+                                        !Arrays.asList(readinessHealthIndicators).contains(healthIndicator))\n+                                .toArray(HealthIndicator[]::new),\n+                        detail)\n+        );\n+    }\n+\n+    /**\n+     * @param principal Authenticated user\n+     * @param selector HealthEndpointSelector\n+     * @return The health information as a {@link Single}\n+     */\n+    @Read\n+    public Single<HealthResult> getHealth(@Nullable Principal principal, @Selector HealthEndpointSelector selector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNTIxNzE2", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-481521716", "createdAt": "2020-09-03T06:17:47Z", "commit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNzo0N1rOHMXaDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoxNzo0N1rOHMXaDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODQ2Mw==", "bodyText": "Liveness or LivenessHealthIndicator?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482728463", "createdAt": "2020-09-03T06:17:47Z", "author": {"login": "pgressa"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Liveness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa\n+ * @since 2.1\n+ */\n+@Qualifier\n+@Documented\n+@Retention(RUNTIME)\n+public @interface Liveness{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNTM3NjE1", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-481537615", "createdAt": "2020-09-03T06:47:54Z", "commit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo0Nzo1NFrOHMYOEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1MTo0NVrOHMYU7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MTc3Ng==", "bodyText": "I think an enum is fine.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482741776", "createdAt": "2020-09-03T06:47:54Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpoint.java", "diffHunk": "@@ -79,8 +90,39 @@ public HealthEndpoint(HealthAggregator<HealthResult> healthAggregator,\n     @Read\n     public Single<HealthResult> getHealth(@Nullable Principal principal) {\n         HealthLevelOfDetail detail = levelOfDetail(principal);\n+        // due to backward comaptibility all HealthIndicators that are not qualified with Readiness\n+        // e.g. are Liveness or without qualifier are returned by this resource\n         return Single.fromPublisher(\n-                healthAggregator.aggregate(healthIndicators, detail)\n+                healthAggregator.aggregate(\n+                        Arrays.stream(healthIndicators).\n+                                filter(healthIndicator ->\n+                                        !Arrays.asList(readinessHealthIndicators).contains(healthIndicator))\n+                                .toArray(HealthIndicator[]::new),\n+                        detail)\n+        );\n+    }\n+\n+    /**\n+     * @param principal Authenticated user\n+     * @param selector HealthEndpointSelector\n+     * @return The health information as a {@link Single}\n+     */\n+    @Read\n+    public Single<HealthResult> getHealth(@Nullable Principal principal, @Selector HealthEndpointSelector selector) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODI4Ng=="}, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MjMxNw==", "bodyText": "I would move this to the package io.micronaut.management.health.indicator and rename to HealthCheckType", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742317", "createdAt": "2020-09-03T06:49:14Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpointSelector.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.micronaut.management.endpoint.health;\n+\n+/**\n+ * Options for {@link io.micronaut.management.endpoint.health.HealthEndpoint} selector that aggregates\n+ * {@link io.micronaut.management.health.indicator.HealthIndicator} according to {@link io.micronaut.management.health.indicator.Liveness}\n+ * respectively {@link io.micronaut.management.health.indicator.Readiness} qualifiers.\n+ *\n+ * @author Pavol Gressa\n+ * @since 2.1\n+ */\n+public enum HealthEndpointSelector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MjQ0NQ==", "bodyText": "Add license (can be done with ./gradlew spotlessApply", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742445", "createdAt": "2020-09-03T06:49:32Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpointSelector.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.micronaut.management.endpoint.health;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MjU3Mg==", "bodyText": "Liveness works", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742572", "createdAt": "2020-09-03T06:49:49Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Liveness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa\n+ * @since 2.1\n+ */\n+@Qualifier\n+@Documented\n+@Retention(RUNTIME)\n+public @interface Liveness{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyODQ2Mw=="}, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MjYxNA==", "bodyText": "add license", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742614", "createdAt": "2020-09-03T06:49:55Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Liveness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MjY5Nw==", "bodyText": "add javadoc description", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742697", "createdAt": "2020-09-03T06:50:03Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Liveness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0Mjc5Mw==", "bodyText": "add license", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742793", "createdAt": "2020-09-03T06:50:14Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Readiness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0Mjg4NQ==", "bodyText": "Add javadoc description", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482742885", "createdAt": "2020-09-03T06:50:26Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Readiness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MzA5OQ==", "bodyText": "@Target should be TYPE, METHOD and ANNOTATION_TYPE", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482743099", "createdAt": "2020-09-03T06:50:54Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Readiness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa\n+ * @since 2.1\n+ */\n+@Qualifier\n+@Documented\n+@Retention(RUNTIME)\n+public @interface Readiness {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MzM4Ng==", "bodyText": "put these in a subpackage called io.micronaut.management.health.indicator.annotation", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482743386", "createdAt": "2020-09-03T06:51:28Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Readiness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MzUzMg==", "bodyText": "@Target should be TYPE, METHOD and ANNOTATION_TYPE", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482743532", "createdAt": "2020-09-03T06:51:45Z", "author": {"login": "graemerocher"}, "path": "management/src/main/java/io/micronaut/management/health/indicator/Liveness.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package io.micronaut.management.health.indicator;\n+\n+import javax.inject.Qualifier;\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Retention;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+/**\n+ * @author Pavol Gressa\n+ * @since 2.1\n+ */\n+@Qualifier\n+@Documented\n+@Retention(RUNTIME)\n+public @interface Liveness{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "457466dc5c7822355fb0eb5e3dc6308942ac0302", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/457466dc5c7822355fb0eb5e3dc6308942ac0302", "committedDate": "2020-09-02T17:24:08Z", "message": "Use @Liveness annotation to core health indicators"}, "afterCommit": {"oid": "ed1a360514334863f95f5ebcf6d68e5e76eefa56", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/ed1a360514334863f95f5ebcf6d68e5e76eefa56", "committedDate": "2020-09-03T12:36:04Z", "message": "fixup! Extend health endpoint with readiness and liveness probes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzk0NzQx", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-481794741", "createdAt": "2020-09-03T12:37:57Z", "commit": {"oid": "ed1a360514334863f95f5ebcf6d68e5e76eefa56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjozNzo1OFrOHMkmww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjozNzo1OFrOHMkmww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk0NDcwNw==", "bodyText": "so this basically means that /health and /health/readiness returns the same payload", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r482944707", "createdAt": "2020-09-03T12:37:58Z", "author": {"login": "pgressa"}, "path": "management/src/main/java/io/micronaut/management/endpoint/health/HealthEndpoint.java", "diffHunk": "@@ -72,15 +71,22 @@\n     /**\n      * @param healthAggregator            The {@link HealthAggregator}\n      * @param healthIndicators            The {@link HealthIndicator}\n+     * @param livenessHealthIndicators    The {@link HealthIndicator} qualified by {@link Liveness}\n      */\n     public HealthEndpoint(HealthAggregator<HealthResult> healthAggregator,\n                           HealthIndicator[] healthIndicators,\n-                          @Liveness HealthIndicator[] livenessHealthIndicators,\n-                          @Readiness HealthIndicator[] readinessHealthIndicators) {\n+                          @Liveness HealthIndicator[] livenessHealthIndicators) {\n         this.healthAggregator = healthAggregator;\n-        this.healthIndicators = healthIndicators;\n         this.livenessHealthIndicators = livenessHealthIndicators;\n-        this.readinessHealthIndicators = readinessHealthIndicators;\n+        this.readinessHealthIndicators = getReadinessHealthIndicators(healthIndicators, livenessHealthIndicators);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1a360514334863f95f5ebcf6d68e5e76eefa56"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed1a360514334863f95f5ebcf6d68e5e76eefa56", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/ed1a360514334863f95f5ebcf6d68e5e76eefa56", "committedDate": "2020-09-03T12:36:04Z", "message": "fixup! Extend health endpoint with readiness and liveness probes"}, "afterCommit": {"oid": "d7687cf8e2f33c2ee0ab221ee967e87f7ff282a5", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d7687cf8e2f33c2ee0ab221ee967e87f7ff282a5", "committedDate": "2020-09-03T12:42:37Z", "message": "fixup! Extend health endpoint with readiness and liveness probes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDUyNDkx", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-485452491", "createdAt": "2020-09-09T22:44:49Z", "commit": {"oid": "14a649b02a1a9f6034825db6aa2ebc9cd1d52fc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMjo0NDo0OVrOHPcxsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMjo0NDo0OVrOHPcxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2MjE2MQ==", "bodyText": "This will need better phrasing.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#discussion_r485962161", "createdAt": "2020-09-09T22:44:49Z", "author": {"login": "pgressa"}, "path": "src/main/docs/guide/management/providedEndpoints/healthEndpoint.adoc", "diffHunk": "@@ -69,7 +69,7 @@ The above will return api:http.HttpStatus#OK[] (200) even when the api:health.He\n \n == Customization\n \n-The health endpoint consists of a health aggregator and any number of health indicators. To add a health indicator, simply create a bean class that implements link:{api}/io/micronaut/management/health/indicator/HealthIndicator.html[HealthIndicator]. A base class link:{api}/io/micronaut/management/health/indicator/AbstractHealthIndicator.html[AbstractHealthIndicator] has been provided for you to extend to make the process easier.\n+The health endpoint consists of a health aggregator and any number of health indicators. To add a health indicator, simply create a bean class that implements link:{api}/io/micronaut/management/health/indicator/HealthIndicator.html[HealthIndicator]. It is recommended to also use either link:{api}/io/micronaut/health/indicator/annotation/Liveness.html[@Liveness] or link:{api}/io/micronaut/health/indicator/annotation/Readiness.html[@Readiness] qualifier. If no qualifier is used then the health incidator is part of /health and /health/readiness endpoints. A base class link:{api}/io/micronaut/management/health/indicator/AbstractHealthIndicator.html[AbstractHealthIndicator] has been provided for you to extend to make the process easier.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14a649b02a1a9f6034825db6aa2ebc9cd1d52fc7"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14a649b02a1a9f6034825db6aa2ebc9cd1d52fc7", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/14a649b02a1a9f6034825db6aa2ebc9cd1d52fc7", "committedDate": "2020-09-04T17:12:15Z", "message": "fixup! Extend health endpoint with readiness and liveness probes"}, "afterCommit": {"oid": "1006d8e35fde2e9ff167044e429bd1ed84410ccb", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/1006d8e35fde2e9ff167044e429bd1ed84410ccb", "committedDate": "2020-09-16T20:07:42Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4550fd92114be5e7cc950760185de514545f149", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d4550fd92114be5e7cc950760185de514545f149", "committedDate": "2020-09-16T20:14:34Z", "message": "Extend health endpoint with readiness and liveness probes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22c8a9bd6a467a737327f996d0d46b8c35741ae3", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/22c8a9bd6a467a737327f996d0d46b8c35741ae3", "committedDate": "2020-09-16T20:15:02Z", "message": "Extend documentation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1006d8e35fde2e9ff167044e429bd1ed84410ccb", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/1006d8e35fde2e9ff167044e429bd1ed84410ccb", "committedDate": "2020-09-16T20:07:42Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}, "afterCommit": {"oid": "f0c739264b6c82b6b2b356df9d33b30afccfc05b", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/f0c739264b6c82b6b2b356df9d33b30afccfc05b", "committedDate": "2020-09-16T20:15:12Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0c739264b6c82b6b2b356df9d33b30afccfc05b", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/f0c739264b6c82b6b2b356df9d33b30afccfc05b", "committedDate": "2020-09-16T20:15:12Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}, "afterCommit": {"oid": "a6c41d062db498f158d8815fe7cafeebfbdcca68", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/a6c41d062db498f158d8815fe7cafeebfbdcca68", "committedDate": "2020-09-16T20:19:00Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6c41d062db498f158d8815fe7cafeebfbdcca68", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/a6c41d062db498f158d8815fe7cafeebfbdcca68", "committedDate": "2020-09-16T20:19:00Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}, "afterCommit": {"oid": "0f3bc9ad60dd056228a3ba13df1f84348865aeb9", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/0f3bc9ad60dd056228a3ba13df1f84348865aeb9", "committedDate": "2020-09-16T20:25:59Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486a3499fd69c0d930628e73340e718892021669", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/486a3499fd69c0d930628e73340e718892021669", "committedDate": "2020-09-16T20:45:47Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f3bc9ad60dd056228a3ba13df1f84348865aeb9", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/0f3bc9ad60dd056228a3ba13df1f84348865aeb9", "committedDate": "2020-09-16T20:25:59Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}, "afterCommit": {"oid": "486a3499fd69c0d930628e73340e718892021669", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/486a3499fd69c0d930628e73340e718892021669", "committedDate": "2020-09-16T20:45:47Z", "message": "Add ServiceReadyHealthIndicator as Readiness indicator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzk4ODk4", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4012#pullrequestreview-490398898", "createdAt": "2020-09-17T09:14:42Z", "commit": {"oid": "486a3499fd69c0d930628e73340e718892021669"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d195d6662beca30ac9857bf66557a12d75e43bdd", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d195d6662beca30ac9857bf66557a12d75e43bdd", "committedDate": "2020-09-17T09:46:01Z", "message": "fixup! Extend documentation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fe9ab34c4c3dac41ff200df4938a4c2970d25d8", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/2fe9ab34c4c3dac41ff200df4938a4c2970d25d8", "committedDate": "2020-09-17T09:41:37Z", "message": "fixup! Extend documentation"}, "afterCommit": {"oid": "d195d6662beca30ac9857bf66557a12d75e43bdd", "author": {"user": {"login": "pgressa", "name": "Pavol Gressa"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/d195d6662beca30ac9857bf66557a12d75e43bdd", "committedDate": "2020-09-17T09:46:01Z", "message": "fixup! Extend documentation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2766, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}