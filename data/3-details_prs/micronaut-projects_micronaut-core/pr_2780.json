{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTI2MzYw", "number": 2780, "title": "Improvements to HttpClient infrastructure", "bodyText": "Improvements\n\nSupport for configurable EventLoopGroup instances. Fixes  #2590\nUse a common default EventLoopGroup for server worker threads and http request threads to reduce context switching and improve resource utilization\nRemove ClientScope and make DefaultHttpClient a non-parameterized bean so that you can just write @Inject RxHttpClient client to get the default client\nUnify the creation of RxHttpClient instances into the RxHttpClientRegistry interface and eliminate duplication of client creation from HttpClientIntroductionAdvice and ServiceHttpClientFactory. Also Fixes #2769\nAllow using native transports (kqueue and epoll) for HTTP client as well\nClients defined via micronaut.http.services inherit default configuration. Fixes #2213\n\nBreaking Changes\n\nAn RxHttpClient is no longer registered by name for each ServiceHttpClientConfiguration so you can no longer do context.getBean(RxHttpClient.class, Qualifiers.byName(..)) however this was never documented as being possible the correct way to retrieve a client is via @Client(\"id\")", "createdAt": "2020-02-10T13:12:22Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2780", "merged": true, "mergeCommit": {"oid": "2827a91271d6d3702aaad3c6994483d30b683a07"}, "closed": true, "closedAt": "2020-02-11T09:10:42Z", "author": {"login": "graemerocher"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCAQJXAH2gAyMzczMTI2MzYwOmNhYjFiMmRhY2UwYzhkZTVlMGI5MTk0YTlmYTQwMTIxMzQ0MDYzOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDN4GlAH2gAyMzczMTI2MzYwOjVjMzBlYjZjY2IyYzEwYjJmODBjM2IzODZiOWFjMTI1N2NmODMxNTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cab1b2dace0c8de5e0b9194a9fa4012134406394", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/cab1b2dace0c8de5e0b9194a9fa4012134406394", "committedDate": "2020-02-07T14:31:34Z", "message": "Support customizable event loop creation for server. Issue #2590"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c954156b03c258c9872e93b0c20b9204931d1bed", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/c954156b03c258c9872e93b0c20b9204931d1bed", "committedDate": "2020-02-07T14:42:06Z", "message": "Support customizable event loop creation for server. Issue #2590"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f163c7554aa40093fe770bfacc4f731e569523", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/95f163c7554aa40093fe770bfacc4f731e569523", "committedDate": "2020-02-09T18:12:42Z", "message": "Apply configured timeout to service discovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "accd5940d3b119e6fc24e5302eb31148195f25e8", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/accd5940d3b119e6fc24e5302eb31148195f25e8", "committedDate": "2020-02-09T18:14:18Z", "message": "Centralize construction of RxHttpClient instances & remove ClientScope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a926647ce1114fc57e783801a77720b13412225", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/3a926647ce1114fc57e783801a77720b13412225", "committedDate": "2020-02-09T18:15:18Z", "message": "Merge branch 'netty-event-loop-config' of github.com:micronaut-projects/micronaut-core into netty-event-loop-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c1ee28fe0c323971843d8b44282837a04a5d41b", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9c1ee28fe0c323971843d8b44282837a04a5d41b", "committedDate": "2020-02-09T19:05:56Z", "message": "Fix getValueForConstructorArgument not poping path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb11d50afb7082becd70991aa56cb7a7bd945c92", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/cb11d50afb7082becd70991aa56cb7a7bd945c92", "committedDate": "2020-02-09T20:18:45Z", "message": "Fix getValueForConstructorArgument not poping path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "936f630dd0dedf14f0863054e088e9241955600b", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/936f630dd0dedf14f0863054e088e9241955600b", "committedDate": "2020-02-10T08:31:48Z", "message": "Remove nonsensical configure method from DefaultHttpClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b9298f0a5c93cfde378108469dae7700157972", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/60b9298f0a5c93cfde378108469dae7700157972", "committedDate": "2020-02-10T09:31:36Z", "message": "Eliminate secondary beans for ServiceHttpClientFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f7a09335954fcda4bf5e2f2d816c131798bb32d", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/5f7a09335954fcda4bf5e2f2d816c131798bb32d", "committedDate": "2020-02-10T09:35:09Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35ea52c32127e43141f64b6c579e477cbce7c467", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/35ea52c32127e43141f64b6c579e477cbce7c467", "committedDate": "2020-02-10T10:41:25Z", "message": "Use shared event loop group with server and allow configurable groups\n\nFixes #2590"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24fd021d7fc4a9dc118345b5f3bfab83159b964a", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/24fd021d7fc4a9dc118345b5f3bfab83159b964a", "committedDate": "2020-02-10T11:14:32Z", "message": "Correctly support native transports in HTTP client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5cb1a11bbe726b9d785d464cd72ab01b8c3b5b", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/eb5cb1a11bbe726b9d785d464cd72ab01b8c3b5b", "committedDate": "2020-02-10T13:03:07Z", "message": "Documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e3afaa4ea11dea4274665b4a983a47a9e9e9fe", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/67e3afaa4ea11dea4274665b4a983a47a9e9e9fe", "committedDate": "2020-02-10T13:40:52Z", "message": "Allow named HTTP clients to inherit defaults. Fixes #2213"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a24645235c6524bf713738585295c9a7edeccf", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/03a24645235c6524bf713738585295c9a7edeccf", "committedDate": "2020-02-10T16:59:42Z", "message": "Migrate tests to Micronaut Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a9a80a1bb42139dc4aaa6e5269180a3f9f673aa", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/9a9a80a1bb42139dc4aaa6e5269180a3f9f673aa", "committedDate": "2020-02-10T17:09:40Z", "message": "Add @Primary to the httpClient bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDMwNDIz", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2780#pullrequestreview-356030423", "createdAt": "2020-02-10T15:30:30Z", "commit": {"oid": "67e3afaa4ea11dea4274665b4a983a47a9e9e9fe"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTozMDozMVrOFnqbvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo0OTozOFrOFnrNmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEzNDAxMw==", "bodyText": "Javadoc isn't correct", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2780#discussion_r377134013", "createdAt": "2020-02-10T15:30:31Z", "author": {"login": "jameskleeh"}, "path": "http-client/src/main/java/io/micronaut/http/client/RxHttpClientRegistry.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.client;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import edu.umd.cs.findbugs.annotations.Nullable;\n+import io.micronaut.core.annotation.AnnotationMetadata;\n+import io.micronaut.core.annotation.Internal;\n+\n+/**\n+ * Internal interface for managing the construction and lifecycle of instances of {@link RxHttpClient}.\n+ *\n+ * @author graemerocher\n+ * @since 2.0\n+ */\n+@Internal\n+public interface RxHttpClientRegistry {\n+\n+    /**\n+     * Return the client for the given annotation metadata.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e3afaa4ea11dea4274665b4a983a47a9e9e9fe"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE0Njc3OA==", "bodyText": "Does this annotation belong here?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2780#discussion_r377146778", "createdAt": "2020-02-10T15:49:38Z", "author": {"login": "jameskleeh"}, "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupConfiguration.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2017-2019 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.http.netty.channel;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import edu.umd.cs.findbugs.annotations.Nullable;\n+import io.micronaut.context.annotation.ConfigurationInject;\n+import io.micronaut.context.annotation.EachProperty;\n+import io.micronaut.context.annotation.Parameter;\n+import io.micronaut.core.bind.annotation.Bindable;\n+import io.micronaut.core.util.StringUtils;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Configuration interface for event loop configuration.\n+ *\n+ * @author graemerocher\n+ * @since 2.0\n+ */\n+@EachProperty(value = EventLoopGroupConfiguration.EVENT_LOOPS, primary = \"default\")\n+public class DefaultEventLoopGroupConfiguration implements EventLoopGroupConfiguration {\n+\n+    private final int numThreads;\n+    private final Integer ioRatio;\n+    private final boolean preferNativeTransport;\n+    private final String name;\n+    private final String executor;\n+\n+    /**\n+     * Default constructor.\n+     *\n+     * @param name                  The name of the group\n+     * @param numThreads            The number of threads\n+     * @param ioRatio               The IO ratio (optional)\n+     * @param preferNativeTransport Whether native transport is to be preferred\n+     * @param executor              A named executor service to use (optional)\n+     */\n+    @ConfigurationInject\n+    public DefaultEventLoopGroupConfiguration(\n+            @Parameter String name,\n+            @Bindable(defaultValue = \"0\") int numThreads,\n+            @Nullable Integer ioRatio,\n+            @Bindable(defaultValue = StringUtils.FALSE) boolean preferNativeTransport,\n+            @Nullable String executor) {\n+        this.name = name;\n+        this.numThreads = numThreads;\n+        this.ioRatio = ioRatio;\n+        this.preferNativeTransport = preferNativeTransport;\n+        this.executor = executor;\n+    }\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public DefaultEventLoopGroupConfiguration() {\n+        this.name = DEFAULT;\n+        this.numThreads = 0;\n+        this.ioRatio = null;\n+        this.preferNativeTransport = false;\n+        this.executor = null;\n+    }\n+\n+    /**\n+     * @return The number of threads for the event loop\n+     */\n+    @Override\n+    public int getNumThreads() {\n+        return numThreads;\n+    }\n+\n+    /**\n+     * @return The I/O ratio.\n+     */\n+    @Override\n+    public Optional<Integer> getIoRatio() {\n+        return Optional.ofNullable(ioRatio);\n+    }\n+\n+    @Override\n+    public Optional<String> getExecutorName() {\n+        return Optional.ofNullable(executor);\n+    }\n+\n+    /**\n+     * @return Whether to prefer the native transport\n+     */\n+    @Override\n+    @Bindable(defaultValue = StringUtils.TRUE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67e3afaa4ea11dea4274665b4a983a47a9e9e9fe"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e6d74419277bfd34e6735cebf693e8400856028", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/3e6d74419277bfd34e6735cebf693e8400856028", "committedDate": "2020-02-11T08:35:00Z", "message": "Breaking changes docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef021e6ec37ca78ad735648b97ab09f4d3d36406", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/ef021e6ec37ca78ad735648b97ab09f4d3d36406", "committedDate": "2020-02-11T08:40:35Z", "message": "Convert tests / cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a14f7cf6783421373d9892c9a96242555a9891", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/a3a14f7cf6783421373d9892c9a96242555a9891", "committedDate": "2020-02-11T08:46:02Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c30eb6ccb2c10b2f80c3b386b9ac1257cf83154", "author": {"user": {"login": "graemerocher", "name": "Graeme Rocher"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/5c30eb6ccb2c10b2f80c3b386b9ac1257cf83154", "committedDate": "2020-02-11T08:57:54Z", "message": "Checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2917, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}