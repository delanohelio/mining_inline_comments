{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMDU2Njcy", "number": 4470, "title": "Fix isRoot logic. Fixes #4463", "bodyText": "", "createdAt": "2020-11-12T17:55:43Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4470", "merged": true, "mergeCommit": {"oid": "c0eecfccf25afce6be58e05d570b12cea41085d1"}, "closed": true, "closedAt": "2020-11-16T08:06:34Z", "author": {"login": "jameskleeh"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb2OZDgH2gAyNTIwMDU2NjcyOjAxMDlhYWM5OWJhMTg3ZWYyYTA3OGMzMTE3ZDJkOGJiYzkzOWRkMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcEKmngFqTUyOTkyNjQ2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0109aac99ba187ef2a078c3117d2d8bbc939dd1b", "author": {"user": {"login": "jameskleeh", "name": "James Kleeh"}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/0109aac99ba187ef2a078c3117d2d8bbc939dd1b", "committedDate": "2020-11-12T17:43:47Z", "message": "Fix isRoot logic. Fixes #4463"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5OTI2NDY3", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4470#pullrequestreview-529926467", "createdAt": "2020-11-13T09:58:19Z", "commit": {"oid": "0109aac99ba187ef2a078c3117d2d8bbc939dd1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTo1ODoxOVrOHyn9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTo1ODoxOVrOHyn9Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NTUzOA==", "bodyText": "I don't understand this check, would rawSegment not always be null?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4470#discussion_r522845538", "createdAt": "2020-11-13T09:58:19Z", "author": {"login": "graemerocher"}, "path": "http/src/main/java/io/micronaut/http/uri/UriMatchTemplate.java", "diffHunk": "@@ -202,6 +198,29 @@ protected UriTemplateParser createParser(String templateString, Object... parser\n         return new UriMatchTemplateParser(templateString, this);\n     }\n \n+    private boolean isRoot() {\n+        CharSequence rawSegment = null;\n+        for (PathSegment segment : segments) {\n+            if (segment.isVariable()) {\n+                if (!segment.isQuerySegment()) {\n+                    return false;\n+                }\n+            } else {\n+                if (rawSegment == null) {\n+                    rawSegment = segment;\n+                } else {\n+                    return false;\n+                }\n+            }\n+        }\n+        if (rawSegment == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0109aac99ba187ef2a078c3117d2d8bbc939dd1b"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2718, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}