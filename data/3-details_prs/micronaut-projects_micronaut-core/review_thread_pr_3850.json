{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjIzNjgx", "number": 3850, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMTo1M1rOEVUItg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMTo1M1rOEVUItg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg1NDYyOnYy", "diffSide": "RIGHT", "path": "inject/src/main/java/io/micronaut/inject/ast/PrimitiveElement.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMTo1M1rOG7_ubQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyNjowMFrOG8JkPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MzI0NQ==", "bodyText": "Why declaring this here if they already exist in \n  \n    \n      micronaut-core/inject/src/main/java/io/micronaut/inject/writer/AbstractClassFileWriter.java\n    \n    \n        Lines 91 to 100\n      in\n      d116782\n    \n    \n    \n    \n\n        \n          \n           static { \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"void\", \"V\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"boolean\", \"Z\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"char\", \"C\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"int\", \"I\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"byte\", \"B\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"long\", \"J\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"double\", \"D\"); \n        \n\n        \n          \n               NAME_TO_TYPE_MAP.put(\"float\", \"F\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3850#discussion_r465563245", "createdAt": "2020-08-05T08:31:53Z", "author": {"login": "ilopmar"}, "path": "inject/src/main/java/io/micronaut/inject/ast/PrimitiveElement.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.inject.ast;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.core.annotation.AnnotationMetadata;\n+\n+public final class PrimitiveElement implements ClassElement {\n+\n+    public static final PrimitiveElement VOID = new PrimitiveElement(\"void\", \"V\");\n+\n+    private static final PrimitiveElement INT = new PrimitiveElement(\"int\", \"I\");\n+    private static final PrimitiveElement CHAR = new PrimitiveElement(\"char\", \"C\");\n+    private static final PrimitiveElement BOOLEAN = new PrimitiveElement(\"boolean\", \"Z\");\n+    private static final PrimitiveElement LONG = new PrimitiveElement(\"long\", \"J\");\n+    private static final PrimitiveElement FLOAT = new PrimitiveElement(\"float\", \"F\");\n+    private static final PrimitiveElement DOUBLE = new PrimitiveElement(\"double\", \"D\");\n+    private static final PrimitiveElement SHORT = new PrimitiveElement(\"short\", \"S\");\n+    private static final PrimitiveElement BYTE = new PrimitiveElement(\"byte\", \"B\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ac01e8c935146e81aed4a902775967018dd50e3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNDQ3OQ==", "bodyText": "Great catch - I didn't see that map there", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3850#discussion_r465724479", "createdAt": "2020-08-05T13:26:00Z", "author": {"login": "jameskleeh"}, "path": "inject/src/main/java/io/micronaut/inject/ast/PrimitiveElement.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2017-2020 original authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.micronaut.inject.ast;\n+\n+import edu.umd.cs.findbugs.annotations.NonNull;\n+import io.micronaut.core.annotation.AnnotationMetadata;\n+\n+public final class PrimitiveElement implements ClassElement {\n+\n+    public static final PrimitiveElement VOID = new PrimitiveElement(\"void\", \"V\");\n+\n+    private static final PrimitiveElement INT = new PrimitiveElement(\"int\", \"I\");\n+    private static final PrimitiveElement CHAR = new PrimitiveElement(\"char\", \"C\");\n+    private static final PrimitiveElement BOOLEAN = new PrimitiveElement(\"boolean\", \"Z\");\n+    private static final PrimitiveElement LONG = new PrimitiveElement(\"long\", \"J\");\n+    private static final PrimitiveElement FLOAT = new PrimitiveElement(\"float\", \"F\");\n+    private static final PrimitiveElement DOUBLE = new PrimitiveElement(\"double\", \"D\");\n+    private static final PrimitiveElement SHORT = new PrimitiveElement(\"short\", \"S\");\n+    private static final PrimitiveElement BYTE = new PrimitiveElement(\"byte\", \"B\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MzI0NQ=="}, "originalCommit": {"oid": "9ac01e8c935146e81aed4a902775967018dd50e3"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1281, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}