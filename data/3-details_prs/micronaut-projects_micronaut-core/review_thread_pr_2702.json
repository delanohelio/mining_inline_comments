{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MDc0ODI4", "number": 2702, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTozODo1OFrODbRF_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTowMzo0NFrODdAnyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTE4MjA3OnYy", "diffSide": "RIGHT", "path": "gradle.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTozODo1OFrOFipvoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTo0MjozM1rOFip5Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3OTg0MA==", "bodyText": "Please remove this change", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r371879840", "createdAt": "2020-01-28T15:38:58Z", "author": {"login": "graemerocher"}, "path": "gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-projectVersion=1.3.0.BUILD-SNAPSHOT\n+projectVersion=1.3.0.RC2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa033688c896b506bd50fbeba4eaa01660b7c0c3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MTk5Ng==", "bodyText": "@miguelbaldi could you sign the CLA? Thanks.\nAlready signed!", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r371881996", "createdAt": "2020-01-28T15:42:11Z", "author": {"login": "miguelbaldi"}, "path": "gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-projectVersion=1.3.0.BUILD-SNAPSHOT\n+projectVersion=1.3.0.RC2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3OTg0MA=="}, "originalCommit": {"oid": "fa033688c896b506bd50fbeba4eaa01660b7c0c3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MjI1NA==", "bodyText": "Please remove this change\n\nDone! Sorry for that", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r371882254", "createdAt": "2020-01-28T15:42:33Z", "author": {"login": "miguelbaldi"}, "path": "gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-projectVersion=1.3.0.BUILD-SNAPSHOT\n+projectVersion=1.3.0.RC2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3OTg0MA=="}, "originalCommit": {"oid": "fa033688c896b506bd50fbeba4eaa01660b7c0c3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzQ1MDU5OnYy", "diffSide": "RIGHT", "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTowMjo1MFrOFlXSlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyODoyM1rOFlYW_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyMzIyMQ==", "bodyText": "You collect to a Set, so I don't think distinct is needed.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r374723221", "createdAt": "2020-02-04T15:02:50Z", "author": {"login": "croudet"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "diffHunk": "@@ -55,10 +58,30 @@\n public class TypeElementVisitorProcessor extends AbstractInjectAnnotationProcessor {\n \n     private boolean executed = false;\n+    private Collection<TypeElementVisitor> typeElementVisitors;\n+\n+    @Override\n+    public synchronized void init(ProcessingEnvironment processingEnv) {\n+        super.init(processingEnv);\n+        this.typeElementVisitors = findTypeElementVisitors();\n+    }\n \n     @Override\n     public Set<String> getSupportedOptions() {\n-        return Collections.singleton(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> baseOption = Stream.of(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> visitorsOptions = typeElementVisitors\n+                .stream()\n+                .map(TypeElementVisitor::getSupportedOptions)\n+                .flatMap(Collection::stream);\n+        Stream<String> visitorsAnnotationsOptions = typeElementVisitors\n+                .stream()\n+                .filter(tev -> tev.getClass().isAnnotationPresent(SupportedOptions.class))\n+                .map(TypeElementVisitor::getClass)\n+                .map(cls -> cls.getAnnotation(SupportedOptions.class))\n+                .flatMap((SupportedOptions supportedOptions) -> Arrays.stream(supportedOptions.value()));\n+        return Stream.of(baseOption, visitorsAnnotationsOptions, visitorsOptions)\n+                .flatMap(Stream::distinct)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4cc6f8337f2735265bbccf8cf68eb79e38dd47d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDczMw==", "bodyText": "Done!", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r374740733", "createdAt": "2020-02-04T15:28:23Z", "author": {"login": "miguelbaldi"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "diffHunk": "@@ -55,10 +58,30 @@\n public class TypeElementVisitorProcessor extends AbstractInjectAnnotationProcessor {\n \n     private boolean executed = false;\n+    private Collection<TypeElementVisitor> typeElementVisitors;\n+\n+    @Override\n+    public synchronized void init(ProcessingEnvironment processingEnv) {\n+        super.init(processingEnv);\n+        this.typeElementVisitors = findTypeElementVisitors();\n+    }\n \n     @Override\n     public Set<String> getSupportedOptions() {\n-        return Collections.singleton(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> baseOption = Stream.of(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> visitorsOptions = typeElementVisitors\n+                .stream()\n+                .map(TypeElementVisitor::getSupportedOptions)\n+                .flatMap(Collection::stream);\n+        Stream<String> visitorsAnnotationsOptions = typeElementVisitors\n+                .stream()\n+                .filter(tev -> tev.getClass().isAnnotationPresent(SupportedOptions.class))\n+                .map(TypeElementVisitor::getClass)\n+                .map(cls -> cls.getAnnotation(SupportedOptions.class))\n+                .flatMap((SupportedOptions supportedOptions) -> Arrays.stream(supportedOptions.value()));\n+        return Stream.of(baseOption, visitorsAnnotationsOptions, visitorsOptions)\n+                .flatMap(Stream::distinct)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyMzIyMQ=="}, "originalCommit": {"oid": "c4cc6f8337f2735265bbccf8cf68eb79e38dd47d"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzQ1NDgyOnYy", "diffSide": "RIGHT", "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTowMzo0NFrOFlXVFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyODowNlrOFlYWLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyMzg2MA==", "bodyText": "You may want to call super.getSupportedOptions as well.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r374723860", "createdAt": "2020-02-04T15:03:44Z", "author": {"login": "croudet"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "diffHunk": "@@ -55,10 +58,30 @@\n public class TypeElementVisitorProcessor extends AbstractInjectAnnotationProcessor {\n \n     private boolean executed = false;\n+    private Collection<TypeElementVisitor> typeElementVisitors;\n+\n+    @Override\n+    public synchronized void init(ProcessingEnvironment processingEnv) {\n+        super.init(processingEnv);\n+        this.typeElementVisitors = findTypeElementVisitors();\n+    }\n \n     @Override\n     public Set<String> getSupportedOptions() {\n-        return Collections.singleton(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> baseOption = Stream.of(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> visitorsOptions = typeElementVisitors\n+                .stream()\n+                .map(TypeElementVisitor::getSupportedOptions)\n+                .flatMap(Collection::stream);\n+        Stream<String> visitorsAnnotationsOptions = typeElementVisitors\n+                .stream()\n+                .filter(tev -> tev.getClass().isAnnotationPresent(SupportedOptions.class))\n+                .map(TypeElementVisitor::getClass)\n+                .map(cls -> cls.getAnnotation(SupportedOptions.class))\n+                .flatMap((SupportedOptions supportedOptions) -> Arrays.stream(supportedOptions.value()));\n+        return Stream.of(baseOption, visitorsAnnotationsOptions, visitorsOptions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4cc6f8337f2735265bbccf8cf68eb79e38dd47d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDUyNA==", "bodyText": "Done! Thanks", "url": "https://github.com/micronaut-projects/micronaut-core/pull/2702#discussion_r374740524", "createdAt": "2020-02-04T15:28:06Z", "author": {"login": "miguelbaldi"}, "path": "inject-java/src/main/java/io/micronaut/annotation/processing/TypeElementVisitorProcessor.java", "diffHunk": "@@ -55,10 +58,30 @@\n public class TypeElementVisitorProcessor extends AbstractInjectAnnotationProcessor {\n \n     private boolean executed = false;\n+    private Collection<TypeElementVisitor> typeElementVisitors;\n+\n+    @Override\n+    public synchronized void init(ProcessingEnvironment processingEnv) {\n+        super.init(processingEnv);\n+        this.typeElementVisitors = findTypeElementVisitors();\n+    }\n \n     @Override\n     public Set<String> getSupportedOptions() {\n-        return Collections.singleton(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> baseOption = Stream.of(\"org.gradle.annotation.processing.aggregating\");\n+        Stream<String> visitorsOptions = typeElementVisitors\n+                .stream()\n+                .map(TypeElementVisitor::getSupportedOptions)\n+                .flatMap(Collection::stream);\n+        Stream<String> visitorsAnnotationsOptions = typeElementVisitors\n+                .stream()\n+                .filter(tev -> tev.getClass().isAnnotationPresent(SupportedOptions.class))\n+                .map(TypeElementVisitor::getClass)\n+                .map(cls -> cls.getAnnotation(SupportedOptions.class))\n+                .flatMap((SupportedOptions supportedOptions) -> Arrays.stream(supportedOptions.value()));\n+        return Stream.of(baseOption, visitorsAnnotationsOptions, visitorsOptions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyMzg2MA=="}, "originalCommit": {"oid": "c4cc6f8337f2735265bbccf8cf68eb79e38dd47d"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1384, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}