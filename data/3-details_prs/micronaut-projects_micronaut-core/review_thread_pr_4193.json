{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDAwNzE4", "number": 4193, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzowOTozM1rOEoqbMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzowOTozM1rOEoqbMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDczNTg1OnYy", "diffSide": "RIGHT", "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzowOTozM1rOHZ4keQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTo0NjoxMFrOHZ-kkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwMzI4OQ==", "bodyText": "Why is this info statement here seems like debug output?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4193#discussion_r496903289", "createdAt": "2020-09-29T17:09:33Z", "author": {"login": "graemerocher"}, "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "diffHunk": "@@ -309,4 +310,14 @@ private SyntaxErrorMessage buildErrorMessage(String message, Element element) {\n         return attributes.get(name, conversionContext);\n     }\n \n+    @Override\n+    public Collection<String> getGeneratedResources() {\n+        return Collections.unmodifiableCollection(generatedResources);\n+    }\n+\n+    @Override\n+    public void addGeneratedResource(@NonNull String resource) {\n+        info(\"Adding generated resource: \" + resource, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a6facdf1e573848deea5d670d6c579692204bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNzQxNw==", "bodyText": "I suppose it doesn't need to be. Do we have some guidelines for when to use info messages during TypeElement visitor processing?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4193#discussion_r496917417", "createdAt": "2020-09-29T17:32:21Z", "author": {"login": "wetted"}, "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "diffHunk": "@@ -309,4 +310,14 @@ private SyntaxErrorMessage buildErrorMessage(String message, Element element) {\n         return attributes.get(name, conversionContext);\n     }\n \n+    @Override\n+    public Collection<String> getGeneratedResources() {\n+        return Collections.unmodifiableCollection(generatedResources);\n+    }\n+\n+    @Override\n+    public void addGeneratedResource(@NonNull String resource) {\n+        info(\"Adding generated resource: \" + resource, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwMzI4OQ=="}, "originalCommit": {"oid": "29a6facdf1e573848deea5d670d6c579692204bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNzk2NQ==", "bodyText": "It's in the JavaVisitorContext too.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4193#discussion_r496917965", "createdAt": "2020-09-29T17:33:15Z", "author": {"login": "wetted"}, "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "diffHunk": "@@ -309,4 +310,14 @@ private SyntaxErrorMessage buildErrorMessage(String message, Element element) {\n         return attributes.get(name, conversionContext);\n     }\n \n+    @Override\n+    public Collection<String> getGeneratedResources() {\n+        return Collections.unmodifiableCollection(generatedResources);\n+    }\n+\n+    @Override\n+    public void addGeneratedResource(@NonNull String resource) {\n+        info(\"Adding generated resource: \" + resource, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwMzI4OQ=="}, "originalCommit": {"oid": "29a6facdf1e573848deea5d670d6c579692204bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMDA2NA==", "bodyText": "For me this adds no value to the user. Output should be generated to point user to a generated file but not this kind of debut output IMO", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4193#discussion_r497000064", "createdAt": "2020-09-29T19:43:21Z", "author": {"login": "graemerocher"}, "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "diffHunk": "@@ -309,4 +310,14 @@ private SyntaxErrorMessage buildErrorMessage(String message, Element element) {\n         return attributes.get(name, conversionContext);\n     }\n \n+    @Override\n+    public Collection<String> getGeneratedResources() {\n+        return Collections.unmodifiableCollection(generatedResources);\n+    }\n+\n+    @Override\n+    public void addGeneratedResource(@NonNull String resource) {\n+        info(\"Adding generated resource: \" + resource, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwMzI4OQ=="}, "originalCommit": {"oid": "29a6facdf1e573848deea5d670d6c579692204bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMTYxNw==", "bodyText": "OK. I'll remove it from the java and Groovy visitor contexts.", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4193#discussion_r497001617", "createdAt": "2020-09-29T19:46:10Z", "author": {"login": "wetted"}, "path": "inject-groovy/src/main/groovy/io/micronaut/ast/groovy/visitor/GroovyVisitorContext.java", "diffHunk": "@@ -309,4 +310,14 @@ private SyntaxErrorMessage buildErrorMessage(String message, Element element) {\n         return attributes.get(name, conversionContext);\n     }\n \n+    @Override\n+    public Collection<String> getGeneratedResources() {\n+        return Collections.unmodifiableCollection(generatedResources);\n+    }\n+\n+    @Override\n+    public void addGeneratedResource(@NonNull String resource) {\n+        info(\"Adding generated resource: \" + resource, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwMzI4OQ=="}, "originalCommit": {"oid": "29a6facdf1e573848deea5d670d6c579692204bc"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1252, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}