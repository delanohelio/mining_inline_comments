{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTc1NTMz", "number": 4319, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MTo0NFrOExXmCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MzowN1rOExXndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyMjUxOnYy", "diffSide": "RIGHT", "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MTo0NFrOHnd27g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MTo0NFrOHnd27g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NTcxMA==", "bodyText": "This should be surrounded with if (LOGGER.isWarnEnabled())", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511145710", "createdAt": "2020-10-23T20:41:44Z", "author": {"login": "jameskleeh"}, "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "diffHunk": "@@ -56,29 +66,49 @@ public DefaultEventLoopGroupRegistry(EventLoopGroupFactory eventLoopGroupFactory\n         this.beanLocator = beanLocator;\n     }\n \n+    /**\n+     * Shut down event loop groups according to configuration.\n+     */\n+    @PreDestroy\n+    void shutdown() {\n+        eventLoopGroups.forEach((eventLoopGroup, configuration) -> {\n+            try {\n+                long quietPeriod = configuration.getShutdownQuietPeriod().toMillis();\n+                long timeout = configuration.getShutdownTimeout().toMillis();\n+                eventLoopGroup.shutdownGracefully(quietPeriod, timeout, TimeUnit.MILLISECONDS);\n+            } catch (Throwable t) {\n+                LOGGER.warn(\"Error shutting down EventLoopGroup: {}\", t.getMessage(), t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyMzM5OnYy", "diffSide": "RIGHT", "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MjowNFrOHnd3fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MjowNFrOHnd3fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NTg1NQ==", "bodyText": "LOG here is generally preferred over LOGGER", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511145855", "createdAt": "2020-10-23T20:42:04Z", "author": {"login": "jameskleeh"}, "path": "http-netty/src/main/java/io/micronaut/http/netty/channel/DefaultEventLoopGroupRegistry.java", "diffHunk": "@@ -42,9 +48,13 @@\n @Internal\n @BootstrapContextCompatible\n public class DefaultEventLoopGroupRegistry implements EventLoopGroupRegistry {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DefaultEventLoopGroupRegistry.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNDY2OnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MjozNVrOHnd4Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MjozNVrOHnd4Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjA3MQ==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146071", "createdAt": "2020-10-23T20:42:35Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/RxStreamingHttpClient.java", "diffHunk": "@@ -59,4 +59,16 @@\n     static RxStreamingHttpClient create(URL url) {\n         return HttpClientConfiguration.createStreamingClient(url);\n     }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    static RxStreamingHttpClient create(URL url, HttpClientConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNDk5OnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo0MVrOHnd4hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo0MVrOHnd4hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjExOQ==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146119", "createdAt": "2020-10-23T20:42:41Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "diffHunk": "@@ -43,4 +53,14 @@\n      * @return The client\n      */\n     RxStreamingHttpClient createStreamingClient(@Nullable URL url);\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    RxStreamingHttpClient createStreamingClient(@Nullable URL url, HttpClientConfiguration configuration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNTEyOnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo0NFrOHnd4nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo0NFrOHnd4nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE0MA==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146140", "createdAt": "2020-10-23T20:42:44Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/RxHttpClientFactory.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     RxHttpClient createClient(@Nullable URL url);\n \n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNTQyOnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo1MVrOHnd4zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo1MVrOHnd4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE4OQ==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146189", "createdAt": "2020-10-23T20:42:51Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "diffHunk": "@@ -609,6 +649,26 @@ static RxHttpClient createClient(@Nullable URL url) {\n     @Internal\n     static RxStreamingHttpClient createStreamingClient(@NonNull URL url) {\n         ArgumentUtils.requireNonNull(\"url\", url);\n+        RxHttpClientFactory clientFactory = getRxHttpClientFactory();\n+        return clientFactory.createStreamingClient(url);\n+    }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration The client configuration\n+     * @return The client\n+     */\n+    @Internal\n+    static RxStreamingHttpClient createStreamingClient(@NonNull URL url, HttpClientConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNTY1OnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo1N1rOHnd49A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0Mjo1N1rOHnd49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjIyOA==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146228", "createdAt": "2020-10-23T20:42:57Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClientConfiguration.java", "diffHunk": "@@ -586,19 +619,26 @@ public Proxy resolveProxy(boolean isSsl, String host, int port) {\n      */\n     @Internal\n     static RxHttpClient createClient(@Nullable URL url) {\n-        RxHttpClientFactory clientFactory = HttpClientConfiguration.clientFactory;\n-        if (clientFactory == null) {\n-            synchronized (HttpClientConfiguration.class) { // double check\n-                clientFactory = HttpClientConfiguration.clientFactory;\n-                if (clientFactory == null) {\n-                    clientFactory = resolveClientFactory();\n-                    HttpClientConfiguration.clientFactory = clientFactory;\n-                }\n-            }\n-        }\n+        RxHttpClientFactory clientFactory = getRxHttpClientFactory();\n+\n         return clientFactory.createClient(url);\n     }\n \n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    @Internal\n+    static RxHttpClient createClient(@Nullable URL url, HttpClientConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjAyNjE1OnYy", "diffSide": "RIGHT", "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MzowN1rOHnd5Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDo0MzowN1rOHnd5Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjMwNw==", "bodyText": "Please add @SInCE 2.2.0 here", "url": "https://github.com/micronaut-projects/micronaut-core/pull/4319#discussion_r511146307", "createdAt": "2020-10-23T20:43:07Z", "author": {"login": "jameskleeh"}, "path": "http-client-core/src/main/java/io/micronaut/http/client/HttpClient.java", "diffHunk": "@@ -233,4 +233,16 @@ default HttpClient refresh() {\n     static HttpClient create(@Nullable URL url) {\n         return HttpClientConfiguration.createClient(url);\n     }\n+\n+    /**\n+     * Create a new {@link HttpClient} with the specified configuration. Note that this method should only be used\n+     * outside of the context of an application. Within Micronaut use {@link javax.inject.Inject} to inject a client instead\n+     *\n+     * @param url The base URL\n+     * @param configuration the client configuration\n+     * @return The client\n+     */\n+    static HttpClient create(@Nullable URL url, HttpClientConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "437b5af7f50d7cafda7bba98411236ca9f759e6d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1242, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}