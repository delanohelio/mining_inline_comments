{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNDgzMTk4", "number": 3597, "title": "Clean-up core code", "bodyText": "", "createdAt": "2020-06-29T15:15:29Z", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3597", "merged": true, "mergeCommit": {"oid": "d0823bdb2990fb54fe098caedea9dd752a8a21fb"}, "closed": true, "closedAt": "2020-06-30T15:36:00Z", "author": {"login": "croudet"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwClIigH2gAyNDQxNDgzMTk4Ojk0MmZiNDNlZGIyMDFkNTMxMzI2OTlmNGU3ZmYzMmU5MjdkYjc3ZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwDYHPAFqTQzOTI5NDYwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "942fb43edb201d53132699f4e7ff32e927db77e6", "author": {"user": {"login": "croudet", "name": null}}, "url": "https://github.com/micronaut-projects/micronaut-core/commit/942fb43edb201d53132699f4e7ff32e927db77e6", "committedDate": "2020-06-29T15:14:49Z", "message": "Clean-up core code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mjk0NjAz", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3597#pullrequestreview-439294603", "createdAt": "2020-06-29T16:07:27Z", "commit": {"oid": "942fb43edb201d53132699f4e7ff32e927db77e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNjowNzoyN1rOGqX8fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNjowNzoyN1rOGqX8fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA4NTY5Mg==", "bodyText": "What is the reasoning behind this change?", "url": "https://github.com/micronaut-projects/micronaut-core/pull/3597#discussion_r447085692", "createdAt": "2020-06-29T16:07:27Z", "author": {"login": "jameskleeh"}, "path": "core/src/main/java/io/micronaut/core/io/service/DefaultServiceDefinition.java", "diffHunk": "@@ -56,7 +56,7 @@ public boolean isPresent() {\n     public <X extends Throwable> S orElseThrow(Supplier<? extends X> exceptionSupplier) throws X {\n         final Class<S> type = loadedClass.orElseThrow(exceptionSupplier);\n         try {\n-            return type.newInstance();\n+            return type.getDeclaredConstructor().newInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "942fb43edb201d53132699f4e7ff32e927db77e6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2843, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}