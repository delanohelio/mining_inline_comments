{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDQ5NzI0", "number": 8526, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo0MToxN1rOELzUuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo0MToxN1rOELzUuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODEwNjgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/serializing/Serializer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo0MToxN1rOGti7uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDo0NzozMFrOGt5G_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMTQ0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  writer.writeAttribute(INVALIDATION_BATCH_SIZE, Integer.toString(configuration.clustering().invalidationBatchSize()));\n          \n          \n            \n                  configuration.clustering().attributes().write(writer, ClusteringConfiguration.INVALIDATION_BATCH_SIZE, INVALIDATION_BATCH_SIZE);\n          \n      \n    \n    \n  \n\nit only serializes if the attribute changes.\nHow about the other attributes? BIAS_ACQUISITION and BIAS_LIFESPAN are configurable programmatically but they aren't parser...", "url": "https://github.com/infinispan/infinispan/pull/8526#discussion_r450411449", "createdAt": "2020-07-06T18:41:17Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/configuration/serializing/Serializer.java", "diffHunk": "@@ -383,6 +386,15 @@ private void writeInvalidationCache(XMLExtendedStreamWriter writer, String name,\n       writer.writeEndElement();\n    }\n \n+   private void writeScatteredCache(XMLExtendedStreamWriter writer, String name, Configuration configuration) throws XMLStreamException {\n+      writer.writeStartElement(Element.SCATTERED_CACHE);\n+      writer.writeAttribute(INVALIDATION_BATCH_SIZE, Integer.toString(configuration.clustering().invalidationBatchSize()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fa088c745446f6f5f789d91982868b0b27eeb18"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwNTUzNg==", "bodyText": "I just copied what was in the Parser. I can add these as well", "url": "https://github.com/infinispan/infinispan/pull/8526#discussion_r450705536", "createdAt": "2020-07-07T08:45:00Z", "author": {"login": "ryanemerson"}, "path": "core/src/main/java/org/infinispan/configuration/serializing/Serializer.java", "diffHunk": "@@ -383,6 +386,15 @@ private void writeInvalidationCache(XMLExtendedStreamWriter writer, String name,\n       writer.writeEndElement();\n    }\n \n+   private void writeScatteredCache(XMLExtendedStreamWriter writer, String name, Configuration configuration) throws XMLStreamException {\n+      writer.writeStartElement(Element.SCATTERED_CACHE);\n+      writer.writeAttribute(INVALIDATION_BATCH_SIZE, Integer.toString(configuration.clustering().invalidationBatchSize()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMTQ0OQ=="}, "originalCommit": {"oid": "5fa088c745446f6f5f789d91982868b0b27eeb18"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxMjc2Nw==", "bodyText": "if you don't mind :) I hope it doesn't break anything xD", "url": "https://github.com/infinispan/infinispan/pull/8526#discussion_r450712767", "createdAt": "2020-07-07T08:57:00Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/configuration/serializing/Serializer.java", "diffHunk": "@@ -383,6 +386,15 @@ private void writeInvalidationCache(XMLExtendedStreamWriter writer, String name,\n       writer.writeEndElement();\n    }\n \n+   private void writeScatteredCache(XMLExtendedStreamWriter writer, String name, Configuration configuration) throws XMLStreamException {\n+      writer.writeStartElement(Element.SCATTERED_CACHE);\n+      writer.writeAttribute(INVALIDATION_BATCH_SIZE, Integer.toString(configuration.clustering().invalidationBatchSize()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMTQ0OQ=="}, "originalCommit": {"oid": "5fa088c745446f6f5f789d91982868b0b27eeb18"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc3NDc4Mw==", "bodyText": "I've added the missing attributes to the parser, serializer and the .xsd", "url": "https://github.com/infinispan/infinispan/pull/8526#discussion_r450774783", "createdAt": "2020-07-07T10:47:30Z", "author": {"login": "ryanemerson"}, "path": "core/src/main/java/org/infinispan/configuration/serializing/Serializer.java", "diffHunk": "@@ -383,6 +386,15 @@ private void writeInvalidationCache(XMLExtendedStreamWriter writer, String name,\n       writer.writeEndElement();\n    }\n \n+   private void writeScatteredCache(XMLExtendedStreamWriter writer, String name, Configuration configuration) throws XMLStreamException {\n+      writer.writeStartElement(Element.SCATTERED_CACHE);\n+      writer.writeAttribute(INVALIDATION_BATCH_SIZE, Integer.toString(configuration.clustering().invalidationBatchSize()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxMTQ0OQ=="}, "originalCommit": {"oid": "5fa088c745446f6f5f789d91982868b0b27eeb18"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3961, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}