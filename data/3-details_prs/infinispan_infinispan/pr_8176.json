{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTU4ODcz", "number": 8176, "title": "ISPN-11601 Remove KeyFilter", "bodyText": "https://issues.redhat.com/browse/ISPN-11601", "createdAt": "2020-04-07T09:47:42Z", "url": "https://github.com/infinispan/infinispan/pull/8176", "merged": true, "mergeCommit": {"oid": "18be324b1c20890c2744bbf881f0a29d1ce42237"}, "closed": true, "closedAt": "2020-04-07T20:45:08Z", "author": {"login": "ryanemerson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVTqUtgBqjMyMDk5NjM4Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVYAYnABqjMyMTExOTg4NDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d77e30e74440029627b8520651d945c14db9bca9", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/d77e30e74440029627b8520651d945c14db9bca9", "committedDate": "2020-04-07T09:46:04Z", "message": "ISPN-11601 Remove KeyFilter"}, "afterCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/6a9777b8393ea9e4ccccdca34f5acd99a83450de", "committedDate": "2020-04-07T13:52:46Z", "message": "ISPN-11601 Remove KeyFilter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzc1OTAz", "url": "https://github.com/infinispan/infinispan/pull/8176#pullrequestreview-389375903", "createdAt": "2020-04-07T18:20:33Z", "commit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMDozNFrOGCQXzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyNDozOVrOGCQhmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxODU3Mg==", "bodyText": "Can make this one line and remove brackets now.", "url": "https://github.com/infinispan/infinispan/pull/8176#discussion_r405018572", "createdAt": "2020-04-07T18:20:34Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/notifications/cachelistener/cluster/AbstractClusterListenerTest.java", "diffHunk": "@@ -734,4 +730,11 @@ public void testMetadataExpirationConverterSuccessNotOwner() {\n       verifySimpleExpirationEvents(clusterListener, clusterListener.hasIncludeState() ? 2 : 1, key, expectedValue);\n    }\n \n+   private CacheEventFilter<Object, String> filter(Object keyToFilter) {\n+      return (Serializable & CacheEventFilter<Object, String>)\n+            (k, oldValue, oldMetadata, newValue, newMetadata, eventType) -> {\n+         boolean retVal = Objects.equals(k, keyToFilter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTg1NA==", "bodyText": "This looks wrong, we aren't using the filter anymore.", "url": "https://github.com/infinispan/infinispan/pull/8176#discussion_r405019854", "createdAt": "2020-04-07T18:22:38Z", "author": {"login": "wburns"}, "path": "counter/src/main/java/org/infinispan/counter/impl/listener/CounterManagerNotificationManager.java", "diffHunk": "@@ -119,7 +120,8 @@ public synchronized void listenOn(Cache<CounterKey, CounterValue> cache) throws\n          topologyListener.register(cache);\n       }\n       if (!listenersRegistered) {\n-         this.cache.addListener(valueListener, CounterKeyFilter.getInstance());\n+         this.cache.addFilteredListener(valueListener, null, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyMDQ4Mg==", "bodyText": "Also the override to specify the events is more for remote, not for embedded as we can properly ascertain this from the annotations of the methods.", "url": "https://github.com/infinispan/infinispan/pull/8176#discussion_r405020482", "createdAt": "2020-04-07T18:23:43Z", "author": {"login": "wburns"}, "path": "counter/src/main/java/org/infinispan/counter/impl/listener/CounterManagerNotificationManager.java", "diffHunk": "@@ -119,7 +120,8 @@ public synchronized void listenOn(Cache<CounterKey, CounterValue> cache) throws\n          topologyListener.register(cache);\n       }\n       if (!listenersRegistered) {\n-         this.cache.addListener(valueListener, CounterKeyFilter.getInstance());\n+         this.cache.addFilteredListener(valueListener, null, null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxOTg1NA=="}, "originalCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyMDkxNg==", "bodyText": "Shouldn't need to specify the event types, as this is handled by the annotation itself. This is for remote listeners which we don't have access to the annotations at this point.", "url": "https://github.com/infinispan/infinispan/pull/8176#discussion_r405020916", "createdAt": "2020-04-07T18:24:23Z", "author": {"login": "wburns"}, "path": "counter/src/main/java/org/infinispan/counter/impl/manager/CounterConfigurationManager.java", "diffHunk": "@@ -84,7 +85,7 @@ public void start() {\n       Map<String, CounterConfiguration> persisted = storage.loadAll();\n       persisted.forEach((name, cfg) -> stateCache.putIfAbsent(stateKey(name), cfg));\n       counterCacheStarted.set(false);\n-      stateCache.addListener(listener, new ScopeFilter(COUNTER_SCOPE));\n+      stateCache.addFilteredListener(listener, new ScopeFilter(COUNTER_SCOPE), null, Util.asSet(CacheEntryCreated.class, CacheEntryModified.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyMTA4MQ==", "bodyText": "Unneeded.", "url": "https://github.com/infinispan/infinispan/pull/8176#discussion_r405021081", "createdAt": "2020-04-07T18:24:39Z", "author": {"login": "wburns"}, "path": "lucene/lucene-directory/src/test/java/org/infinispan/lucene/cacheloader/CacheLoaderAPITest.java", "diffHunk": "@@ -11,8 +11,8 @@\n import org.infinispan.commons.test.CommonsTestingUtil;\n import org.infinispan.commons.util.Util;\n import org.infinispan.configuration.cache.ConfigurationBuilder;\n-import org.infinispan.container.impl.InternalEntryFactory;\n import org.infinispan.container.entries.InternalCacheEntry;\n+import org.infinispan.container.impl.InternalEntryFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f8ec7809e72ff1801e7db8ba9aad75d4ee5c807", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4f8ec7809e72ff1801e7db8ba9aad75d4ee5c807", "committedDate": "2020-04-07T18:52:51Z", "message": "ISPN-11601 Remove KeyFilter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a9777b8393ea9e4ccccdca34f5acd99a83450de", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/6a9777b8393ea9e4ccccdca34f5acd99a83450de", "committedDate": "2020-04-07T13:52:46Z", "message": "ISPN-11601 Remove KeyFilter"}, "afterCommit": {"oid": "4f8ec7809e72ff1801e7db8ba9aad75d4ee5c807", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4f8ec7809e72ff1801e7db8ba9aad75d4ee5c807", "committedDate": "2020-04-07T18:52:51Z", "message": "ISPN-11601 Remove KeyFilter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 827, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}