{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDgxMDg0", "number": 8531, "title": "ISPN-12079 && ISPN-12099 Missing handlers in the HTTP/2 pipeline & keepalive fix", "bodyText": "https://issues.redhat.com/browse/ISPN-12079\nhttps://issues.redhat.com/browse/ISPN-12099", "createdAt": "2020-07-07T15:15:58Z", "url": "https://github.com/infinispan/infinispan/pull/8531", "merged": true, "mergeCommit": {"oid": "ef6ef971814103b5ef4cf5184619871035c0ad7a"}, "closed": true, "closedAt": "2020-07-13T11:33:40Z", "author": {"login": "gustavonalle"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy8mULgBqjM1MjU5MjI1Njk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0fhblgFqTQ0NzE1NjUxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7971e41ae89077f2d4c813480ee38caee3a68e3", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/c7971e41ae89077f2d4c813480ee38caee3a68e3", "committedDate": "2020-07-07T15:11:11Z", "message": "ISPN-12079 Missing handlers in the HTTP/2 pipeline"}, "afterCommit": {"oid": "4ff8a5ef1aeda120555034971921caba425d6409", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/4ff8a5ef1aeda120555034971921caba425d6409", "committedDate": "2020-07-08T15:57:10Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ff8a5ef1aeda120555034971921caba425d6409", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/4ff8a5ef1aeda120555034971921caba425d6409", "committedDate": "2020-07-08T15:57:10Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}, "afterCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/85d32ef448371d7bb3092b645d34dde42f215b9c", "committedDate": "2020-07-08T17:11:10Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTE5MzM2", "url": "https://github.com/infinispan/infinispan/pull/8531#pullrequestreview-446519336", "createdAt": "2020-07-10T16:02:11Z", "commit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowMjoxMlrOGv85vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoyMzo0NlrOGv9lWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNDA3Ng==", "bodyText": "maybe it is a stupid question, but isn't this instance shared between requests? I mean, this scenario:\nreq1: sets streamId=1\nreq2: sets streamId=2\nresp from req1: read streamId==2\nresp from req2: read streamId==2 again?", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452934076", "createdAt": "2020-07-10T16:02:12Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/HeaderCorrelatorHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.infinispan.rest;\n+\n+import io.netty.channel.ChannelDuplexHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelPromise;\n+import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.handler.codec.http2.HttpConversionUtil;\n+import io.netty.util.AsciiString;\n+\n+/**\n+ * Handler to propagate HTTP headers between requests and responses.\n+ *\n+ * @since 12.0\n+ */\n+class HeaderCorrelatorHandler extends ChannelDuplexHandler {\n+\n+   public static final AsciiString STREAM_ID_HEADER = HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text();\n+   private Integer streamId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNDc0Mg==", "bodyText": "is it required in this method? configureHttp1() adds another RestRequestHandler after this one.", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452934742", "createdAt": "2020-07-10T16:03:24Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/ALPNHandler.java", "diffHunk": "@@ -76,22 +78,56 @@ public void configurePipeline(ChannelPipeline pipeline, String protocol) {\n     */\n    protected void configureHttp2(ChannelPipeline pipeline) {\n       pipeline.addLast(getHttp11To2ConnectionHandler());\n+      addHttp1Handlers(pipeline);\n+   }\n+\n+   /**\n+    * Adds the commons Http1 handlers to the pipeline.\n+    */\n+   private void addHttp1Handlers(ChannelPipeline pipeline) {\n+      // Handles http content encoding (gzip)\n+      pipeline.addLast(new HttpContentCompressor(restServer.getConfiguration().getCompressionLevel()));\n+      // Handles chunked data\n+      pipeline.addLast(new HttpObjectAggregator(maxContentLength()));\n+      // Handles Http/2 headers propagation from request to response\n+      pipeline.addLast(new HeaderCorrelatorHandler());\n+      // Handles CORS\n+      pipeline.addLast(new CorsHandler(getCorsConfigs(), true));\n+      // Handles Keep-alive\n+      pipeline.addLast(new HttpServerKeepAliveHandler());\n+      // Handles the writing of ChunkedInputs\n       pipeline.addLast(new ChunkedWriteHandler());\n-      pipeline.addLast(\"rest-handler-http2\", new RestRequestHandler(restServer));\n+      // Handles REST request\n+      pipeline.addLast(new RestRequestHandler(restServer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNDkzMw==", "bodyText": "well, it says HTTP2... does it work with HTTP1?", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452934933", "createdAt": "2020-07-10T16:03:47Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/ALPNHandler.java", "diffHunk": "@@ -76,22 +78,56 @@ public void configurePipeline(ChannelPipeline pipeline, String protocol) {\n     */\n    protected void configureHttp2(ChannelPipeline pipeline) {\n       pipeline.addLast(getHttp11To2ConnectionHandler());\n+      addHttp1Handlers(pipeline);\n+   }\n+\n+   /**\n+    * Adds the commons Http1 handlers to the pipeline.\n+    */\n+   private void addHttp1Handlers(ChannelPipeline pipeline) {\n+      // Handles http content encoding (gzip)\n+      pipeline.addLast(new HttpContentCompressor(restServer.getConfiguration().getCompressionLevel()));\n+      // Handles chunked data\n+      pipeline.addLast(new HttpObjectAggregator(maxContentLength()));\n+      // Handles Http/2 headers propagation from request to response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNTUwNw==", "bodyText": "maybe change the method name to addCommonHandlers. it isn't clear for me if this method should register only HTTP1 or HTTP2 or both handlers :)", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452935507", "createdAt": "2020-07-10T16:04:53Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/ALPNHandler.java", "diffHunk": "@@ -76,22 +78,56 @@ public void configurePipeline(ChannelPipeline pipeline, String protocol) {\n     */\n    protected void configureHttp2(ChannelPipeline pipeline) {\n       pipeline.addLast(getHttp11To2ConnectionHandler());\n+      addHttp1Handlers(pipeline);\n+   }\n+\n+   /**\n+    * Adds the commons Http1 handlers to the pipeline.\n+    */\n+   private void addHttp1Handlers(ChannelPipeline pipeline) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MDc0MA==", "bodyText": "nitpick: final", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452940740", "createdAt": "2020-07-10T16:15:00Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/assertion/ResponseAssertion.java", "diffHunk": "@@ -54,11 +57,16 @@\n    private RestResponse response;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0Mjc4NQ==", "bodyText": "nitpick: instead of a boolean, I probably use protocol(org.infinispan.client.rest.configuration.Protocol) to be future proof \ud83d\udc4d", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452942785", "createdAt": "2020-07-10T16:18:59Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/AbstractRestResourceTest.java", "diffHunk": "@@ -59,19 +63,31 @@\n    private final List<RestServerHelper> restServers = new ArrayList<>(NUM_SERVERS);\n \n    protected boolean security;\n+   protected boolean http2;\n+   protected boolean ssl;\n \n    protected CacheIgnoreManager ignoreManager;\n \n    @Override\n    protected String parameters() {\n-      return \"[security=\" + security + \"]\";\n+      return \"[security=\" + security + \", http2=\" + http2 + \", ssl=\" + ssl + \"]\";\n    }\n \n    protected AbstractRestResourceTest withSecurity(boolean security) {\n       this.security = security;\n       return this;\n    }\n \n+   protected AbstractRestResourceTest http2(boolean http2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MzI3OQ==", "bodyText": "security and ssl tests with HTTP1 missing?", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452943279", "createdAt": "2020-07-10T16:19:56Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheResourceTest.java", "diffHunk": "@@ -86,12 +86,13 @@ protected void defineCaches(EmbeddedCacheManager cm) {\n    public Object[] factory() {\n       return new Object[]{\n             new CacheResourceTest().withSecurity(false),\n-            new CacheResourceTest().withSecurity(true),\n+            new CacheResourceTest().withSecurity(true).http2(true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NDExMA==", "bodyText": "ps. org.infinispan.rest.resources.CacheResourceOffHeapTest be changed as well to test all combination (hopefully not an overkill)", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452944110", "createdAt": "2020-07-10T16:21:29Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheResourceTest.java", "diffHunk": "@@ -86,12 +86,13 @@ protected void defineCaches(EmbeddedCacheManager cm) {\n    public Object[] factory() {\n       return new Object[]{\n             new CacheResourceTest().withSecurity(false),\n-            new CacheResourceTest().withSecurity(true),\n+            new CacheResourceTest().withSecurity(true).http2(true),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MzI3OQ=="}, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NDk3OA==", "bodyText": "same comment as above", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452944978", "createdAt": "2020-07-10T16:23:09Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheV2ResourceTest.java", "diffHunk": "@@ -71,8 +71,9 @@ protected void defineCaches(EmbeddedCacheManager cm) {\n    @Override\n    public Object[] factory() {\n       return new Object[]{\n-            new CacheV2ResourceTest().withSecurity(true),\n-            new CacheV2ResourceTest().withSecurity(false)\n+            new CacheV2ResourceTest().withSecurity(false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0NTI0MA==", "bodyText": "same as above :)", "url": "https://github.com/infinispan/infinispan/pull/8531#discussion_r452945240", "createdAt": "2020-07-10T16:23:46Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/StaticResourceTest.java", "diffHunk": "@@ -55,18 +72,12 @@ private RestResponse call(String path, String ifModifiedSince) {\n       return join(rawClient.get(path, allHeaders));\n    }\n \n-   @Override\n-   protected RestClientConfigurationBuilder getClientConfig() {\n-      RestClientConfigurationBuilder builder = super.getClientConfig();\n-      builder.followRedirects(true);\n-      return builder;\n-   }\n-\n    @Override\n    public Object[] factory() {\n       return new Object[]{\n             new StaticResourceTest().withSecurity(false),\n-            new StaticResourceTest().withSecurity(true),\n+            new StaticResourceTest().withSecurity(true).http2(true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a5609341d5740a1f4da1461a9733be1b394b81e", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/2a5609341d5740a1f4da1461a9733be1b394b81e", "committedDate": "2020-07-13T09:30:43Z", "message": "ISPN-12079 Missing handlers in the HTTP/2 pipeline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da264f1496eb8bf1cfc06e6febc7bf44427ee6ce", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/da264f1496eb8bf1cfc06e6febc7bf44427ee6ce", "committedDate": "2020-07-13T09:30:45Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85d32ef448371d7bb3092b645d34dde42f215b9c", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/85d32ef448371d7bb3092b645d34dde42f215b9c", "committedDate": "2020-07-08T17:11:10Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}, "afterCommit": {"oid": "da264f1496eb8bf1cfc06e6febc7bf44427ee6ce", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/da264f1496eb8bf1cfc06e6febc7bf44427ee6ce", "committedDate": "2020-07-13T09:30:45Z", "message": "ISPN-12099 REST server prevents connection reuse for some resources"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MTU2NTE1", "url": "https://github.com/infinispan/infinispan/pull/8531#pullrequestreview-447156515", "createdAt": "2020-07-13T11:13:43Z", "commit": {"oid": "da264f1496eb8bf1cfc06e6febc7bf44427ee6ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}