{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTc3MTky", "number": 8353, "title": "ISPN-11721 CLI Migrate command", "bodyText": "https://issues.redhat.com/browse/ISPN-11721 CLI rolling upgrade migrator\nI've removed the store migration stuff as it needs a hefty redesign.", "createdAt": "2020-05-20T08:00:03Z", "url": "https://github.com/infinispan/infinispan/pull/8353", "merged": true, "mergeCommit": {"oid": "83d2461b337e7c9f77a84a04ac54370a433dc386"}, "closed": true, "closedAt": "2020-05-21T08:16:20Z", "author": {"login": "tristantarrant"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjFR5HAFqTQxNTEzMzE2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjK3yYgBqjMzNTcwNTQwMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTMzMTYz", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415133163", "createdAt": "2020-05-20T09:02:30Z", "commit": {"oid": "edfde57239832cfc6386a6d9a8c03f11f824004a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTowMjozMFrOGYCHLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTowMjozMFrOGYCHLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg1MzYxMw==", "bodyText": "The migrator utilises the current Infinispan version to write to the target store, so this isn't really configurable, it will just be the Infinispan version associated with the CLI.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427853613", "createdAt": "2020-05-20T09:02:30Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,261 @@\n+package org.infinispan.cli.commands;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Paths;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.impl.completer.FileOptionCompleter;\n+import org.aesh.command.option.Option;\n+import org.aesh.command.option.OptionGroup;\n+import org.aesh.io.Resource;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.completers.MigrateStoreFileTypeCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.infinispan.commons.util.Version;\n+import org.infinispan.tools.store.migrator.StoreMigrator;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class, Migrate.Store.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         throw new UnsupportedOperationException();\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterDisconnect.CMD, description = \"Disconnects from a source cluster\")\n+   public static class ClusterDisconnect extends CliCommand {\n+\n+      public static final String CMD = \"disconnect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, ClusterDisconnect.CMD)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterSynchronize.CMD, description = \"Synchronizes data from a source to a target cluster\")\n+   public static class ClusterSynchronize extends CliCommand {\n+      public static final String CMD = \"synchronize\";\n+      public static final String READ_BATCH = \"read-batch\";\n+      public static final String THREADS = \"threads\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Option(shortName = 'b', description = \"The amount of entries to process in a batch\")\n+      Integer readBatch;\n+\n+      @Option(shortName = 't', description = \"The number of threads to use. Defaults to the number of cores on the server\")\n+      Integer threads;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, Migrate.ClusterSynchronize.CMD)\n+               .option(READ_BATCH, readBatch)\n+               .option(THREADS, threads)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Store.CMD, description = \"Performs store migration\", groupCommands = {Migrate.StoreFile.class}, activator = DisabledActivator.class)\n+   public class Store extends CliCommand {\n+\n+      public static final String CMD = \"store\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.StoreFile.CMD, description = \"Migrates a file store\")\n+   public static class StoreFile extends CliCommand {\n+      public static final String CMD = \"file\";\n+\n+      @Option(completer = FileOptionCompleter.class, name = \"source-location\", required = true, description = \"The location of the source file store.\")\n+      Resource sourceLocation;\n+\n+      @Option(completer = FileOptionCompleter.class, name = \"target-location\", required = true, description = \"The location of the target file store.\")\n+      Resource targetLocation;\n+\n+      @Option(name = \"source-version\", required = true, description = \"The source version.\")\n+      String sourceVersion;\n+\n+      @Option(name = \"target-version\", description = \"The target version. Defaults to the version of this CLI.\")\n+      String targetVersion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfde57239832cfc6386a6d9a8c03f11f824004a"}, "originalPosition": 200}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edfde57239832cfc6386a6d9a8c03f11f824004a", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/edfde57239832cfc6386a6d9a8c03f11f824004a", "committedDate": "2020-05-20T07:51:09Z", "message": "ISPN-11701 CLI Store migration support"}, "afterCommit": {"oid": "d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "committedDate": "2020-05-20T09:57:18Z", "message": "Migrate CLI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/d9ec5f7a907281e15be6aeffb4e90e203f66b7a1", "committedDate": "2020-05-20T09:57:18Z", "message": "Migrate CLI"}, "afterCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/31a6897b98dca3a92d282d67ce7437b847c72784", "committedDate": "2020-05-20T09:58:08Z", "message": "ISPN-11721 CLI Migrate command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTg5NjEw", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415189610", "createdAt": "2020-05-20T10:14:35Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDozNVrOGYEygg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxOToyOVrOGYE8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzQ3NA==", "bodyText": "If this going to be the home of migrate configuration etc, the description should probably be just \"Migration operations\" similar to the Patch command.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427897474", "createdAt": "2020-05-20T10:14:35Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODIyMg==", "bodyText": "Needs removing.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427898222", "createdAt": "2020-05-20T10:15:58Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.infinispan.cli.completers;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.infinispan.cli.Context;\n+import org.infinispan.tools.store.migrator.StoreType;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+public class MigrateStoreFileTypeCompleter extends ListCompleter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5OTkzMA==", "bodyText": "Missing \"ClusterConnect\" command.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427899930", "createdAt": "2020-05-20T10:19:16Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/resources/help/migrate.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+MIGRATE(1)\n+==========\n+:doctype: manpage\n+\n+\n+NAME\n+----\n+migrate - migrates data from one version of ${infinispan.brand.name} to another.\n+\n+\n+SYNOPSIS\n+--------\n+*migrate cluster synchronize*\n+\n+*migrate cluster disconnect*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDA0MQ==", "bodyText": "Don't forget \ud83d\ude42", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427900041", "createdAt": "2020-05-20T10:19:29Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java", "diffHunk": "@@ -565,6 +545,28 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                }\n                break;\n             }\n+            case Migrate.CMD: {\n+               RestCacheClient cache = getRestCacheClient(command.option(CliCommand.CACHE));\n+               switch (command.arg(Migrate.TYPE)) {\n+                  case Migrate.Cluster.CMD: {\n+                     switch (command.arg(Migrate.SUBTYPE)) {\n+                        case Migrate.ClusterConnect.CMD:\n+                           //TODO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTkyOTcz", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415192973", "createdAt": "2020-05-20T10:19:32Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMTo0OVrOGYFBnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyODowOFrOGYFPtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMTM0Mw==", "bodyText": "nitpick: shouldn't the string concatenation be avoided with StringBuilder?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     sb.append(\"&read-batch=\" + readBatch);\n          \n          \n            \n                     sb.append(\"&read-batch=\").append(readBatch);\n          \n      \n    \n    \n  \n\nsame below... and above...", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427901343", "createdAt": "2020-05-20T10:21:49Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestCacheClientOkHttp.java", "diffHunk": "@@ -53,12 +53,24 @@ public String name() {\n    }\n \n    @Override\n-   public CompletionStage<RestResponse> synchronizeData() {\n+   public CompletionStage<RestResponse> synchronizeData(Integer readBatch, Integer threads) {\n       Request.Builder builder = new Request.Builder();\n-      builder.url(cacheUrl + \"?action=sync-data\").get();\n+      StringBuilder sb = new StringBuilder(cacheUrl + \"?action=sync-data\");\n+      if (readBatch != null) {\n+         sb.append(\"&read-batch=\" + readBatch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjQyMg==", "bodyText": "shouldn't be migrate cluster disconnect... ?", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427902422", "createdAt": "2020-05-20T10:23:47Z", "author": {"login": "pruivo"}, "path": "server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.infinispan.server.functional;\n+\n+import org.infinispan.cli.commands.CLI;\n+import org.infinispan.cli.impl.AeshDelegatingShell;\n+import org.infinispan.client.rest.RestClient;\n+import org.infinispan.server.test.core.AeshTestConnection;\n+\n+/**\n+ * @since 11.0\n+ */\n+public class RollingUpgradeCliIT extends RollingUpgradeIT {\n+\n+   protected void disconnectSource(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjUzMQ==", "bodyText": "shouldn't be migrate cluster syncrhonize... ?", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427902531", "createdAt": "2020-05-20T10:23:59Z", "author": {"login": "pruivo"}, "path": "server/tests/src/test/java/org/infinispan/server/functional/RollingUpgradeCliIT.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.infinispan.server.functional;\n+\n+import org.infinispan.cli.commands.CLI;\n+import org.infinispan.cli.impl.AeshDelegatingShell;\n+import org.infinispan.client.rest.RestClient;\n+import org.infinispan.server.test.core.AeshTestConnection;\n+\n+/**\n+ * @since 11.0\n+ */\n+public class RollingUpgradeCliIT extends RollingUpgradeIT {\n+\n+   protected void disconnectSource(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate disconnect --cache=\" + CACHE_NAME);\n+      }\n+   }\n+\n+   protected void doRollingUpgrade(RestClient client) {\n+      try (AeshTestConnection terminal = new AeshTestConnection()) {\n+         CLI.main(new AeshDelegatingShell(terminal), new String[]{});\n+         terminal.readln(\"connect\");\n+         terminal.assertContains(\"//containers/default]>\");\n+         terminal.clear();\n+         terminal.readln(\"migrate synchronize --cache=\" + CACHE_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMzgyNw==", "bodyText": "not anymore :)", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427903827", "createdAt": "2020-05-20T10:26:20Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/resources/help/migrate.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+MIGRATE(1)\n+==========\n+:doctype: manpage\n+\n+\n+NAME\n+----\n+migrate - migrates data from one version of ${infinispan.brand.name} to another.\n+\n+\n+SYNOPSIS\n+--------\n+*migrate cluster synchronize*\n+\n+*migrate cluster disconnect*\n+\n+\n+DESCRIPTION\n+-----------\n+Use the `migrate` command to migrate data from one version of ${infinispan.brand.name} to another.\n+The tool can perform different types of migration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDk0OQ==", "bodyText": "can be removed...", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427904949", "createdAt": "2020-05-20T10:28:08Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/completers/MigrateStoreFileTypeCompleter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.infinispan.cli.completers;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.infinispan.cli.Context;\n+import org.infinispan.tools.store.migrator.StoreType;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+public class MigrateStoreFileTypeCompleter extends ListCompleter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjA0NjUz", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415204653", "createdAt": "2020-05-20T10:36:10Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozNjoxMFrOGYFgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozNjoxMFrOGYFgZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwOTIyMw==", "bodyText": "description missing", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427909223", "createdAt": "2020-05-20T10:36:10Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjIyNTIy", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415222522", "createdAt": "2020-05-20T11:03:19Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTowMzoxOVrOGYGXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTowMzoxOVrOGYGXNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyMzI1NQ==", "bodyText": "extra new line prevents this section to be shown when you do help migrate", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427923255", "createdAt": "2020-05-20T11:03:19Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/resources/help/migrate.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+MIGRATE(1)\n+==========\n+:doctype: manpage\n+\n+\n+NAME\n+----\n+migrate - migrates data from one version of ${infinispan.brand.name} to another.\n+\n+\n+SYNOPSIS\n+--------\n+*migrate cluster synchronize*\n+\n+*migrate cluster disconnect*\n+\n+\n+DESCRIPTION\n+-----------\n+Use the `migrate` command to migrate data from one version of ${infinispan.brand.name} to another.\n+The tool can perform different types of migration.\n+\n+\n+COMMAND SYNOPSIS\n+----------------\n+\n+Migrate clusters\n+\n+*migrate cluster synchronize*::\n+Synchronize data between the source cluster and the target cluster.\n+\n+*migrate cluster disconnect*::\n+Disconnects the target cluster from the source cluster.\n+\n+\n+COMMON OPTIONS\n+--------------\n+\n+These options apply to all commands:\n+\n+*-h, --help*::\n+Displays a help page for the command or sub-command.\n+\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjIzMTI2", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415223126", "createdAt": "2020-05-20T11:04:09Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTowNDowOVrOGYGY3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTowNDowOVrOGYGY3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyMzY3OQ==", "bodyText": "synchronize?", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427923679", "createdAt": "2020-05-20T11:04:09Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/resources/help/migrate.adoc", "diffHunk": "@@ -0,0 +1,63 @@\n+MIGRATE(1)\n+==========\n+:doctype: manpage\n+\n+\n+NAME\n+----\n+migrate - migrates data from one version of ${infinispan.brand.name} to another.\n+\n+\n+SYNOPSIS\n+--------\n+*migrate cluster synchronize*\n+\n+*migrate cluster disconnect*\n+\n+\n+DESCRIPTION\n+-----------\n+Use the `migrate` command to migrate data from one version of ${infinispan.brand.name} to another.\n+The tool can perform different types of migration.\n+\n+\n+COMMAND SYNOPSIS\n+----------------\n+\n+Migrate clusters\n+\n+*migrate cluster synchronize*::\n+Synchronize data between the source cluster and the target cluster.\n+\n+*migrate cluster disconnect*::\n+Disconnects the target cluster from the source cluster.\n+\n+\n+COMMON OPTIONS\n+--------------\n+\n+These options apply to all commands:\n+\n+*-h, --help*::\n+Displays a help page for the command or sub-command.\n+\n+\n+\n+CLUSTER SYNCHRONIZE OPTIONS\n+---------------------------\n+\n+*-c, --cache*='name'::\n+The name of the cache to synchronize.\n+\n+*-b, --read-batch*='num'::\n+The amount of entries to process in a batch. Defaults to 10000.\n+\n+*-t, --threads*='num'::\n+The number of threads to use. Defaults to the number of cores on the server.\n+\n+\n+CLUSTER DISCONNECT OPTIONS\n+--------------------------\n+\n+*-c, --cache*='name'::\n+The name of the cache to synchronize.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjM3OTY4", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415237968", "createdAt": "2020-05-20T11:27:05Z", "commit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMToyNzowNVrOGYHGCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMToyNzowNVrOGYHGCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkzNTI0Mg==", "bodyText": "is there a way to disable the auto-completion for threads and readBatch?\nIf I do double-tab, I got the following exception:\n[pedro-laptop-3-56000@cluster//containers/default]> migrate cluster synchronize --threads=May 20, 2020 12:21:36 PM org.aesh.command.impl.AeshCommandRuntime doSimpleComplete\nSEVERE: Runtime exception when completing: Buffer: migrate cluster synchronize --threads=, Cursor:38, Offset:0, IgnoreOffset:false, Append separator: true, Candidates:[]\njava.lang.NumberFormatException: For input string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:662)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:770)\n\tat org.aesh.command.impl.converter.IntegerConverter.convert(IntegerConverter.java:31)\n\tat org.aesh.command.impl.converter.IntegerConverter.convert(IntegerConverter.java:28)\n\tat org.aesh.command.impl.internal.ProcessedOption.doConvert(ProcessedOption.java:362)\n\tat org.aesh.command.impl.internal.ProcessedOption.injectValueIntoField(ProcessedOption.java:393)\n\tat org.aesh.command.impl.populator.AeshCommandPopulator.populateObject(AeshCommandPopulator.java:64)\n\tat org.aesh.command.impl.parser.AeshCommandLineCompletionParser.doInjectValues(AeshCommandLineCompletionParser.java:356)\n\tat org.aesh.command.impl.parser.AeshCommandLineCompletionParser.injectValuesAndComplete(AeshCommandLineCompletionParser.java:58)\n\tat org.aesh.command.impl.parser.AeshCommandLineParser.complete(AeshCommandLineParser.java:126)\n\tat org.aesh.command.impl.AeshCommandRuntime.doSimpleComplete(AeshCommandRuntime.java:332)\n\tat org.aesh.command.impl.AeshCommandRuntime.completeWithOperators(AeshCommandRuntime.java:278)\n\tat org.aesh.command.impl.AeshCommandRuntime.complete(AeshCommandRuntime.java:262)\n\tat org.aesh.readline.ReadlineConsole$AeshCompletion.complete(ReadlineConsole.java:409)\n\tat org.aesh.readline.ReadlineConsole$AeshCompletion.complete(ReadlineConsole.java:406)\n\tat org.aesh.readline.completion.CompletionHandler.createCompletionList(CompletionHandler.java:134)\n\tat org.aesh.readline.completion.CompletionHandler.complete(CompletionHandler.java:102)\n\tat org.aesh.readline.action.mappings.Complete.accept(Complete.java:62)\n\tat org.aesh.readline.Readline$AeshInputProcessor.parse(Readline.java:235)\n\tat org.aesh.readline.Readline$AeshInputProcessor.access$100(Readline.java:174)\n\tat org.aesh.readline.Readline.readInput(Readline.java:95)\n\tat org.aesh.readline.Readline.access$1000(Readline.java:57)\n\tat org.aesh.readline.Readline$AeshInputProcessor.lambda$start$1(Readline.java:324)\n\tat org.aesh.terminal.EventDecoder.accept(EventDecoder.java:118)\n\tat org.aesh.terminal.EventDecoder.accept(EventDecoder.java:31)\n\tat org.aesh.terminal.io.Decoder.write(Decoder.java:133)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.openBlocking(TerminalConnection.java:216)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.openBlocking(TerminalConnection.java:203)\n\tat org.aesh.readline.ReadlineConsole.accept(ReadlineConsole.java:243)\n\tat org.aesh.readline.ReadlineConsole.accept(ReadlineConsole.java:87)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.init(TerminalConnection.java:153)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.<init>(TerminalConnection.java:86)\n\tat org.aesh.readline.tty.terminal.TerminalConnection.<init>(TerminalConnection.java:96)\n\tat org.aesh.readline.ReadlineConsole.start(ReadlineConsole.java:183)\n\tat org.infinispan.cli.commands.CLI.interactive(CLI.java:203)\n\tat org.infinispan.cli.commands.CLI.exec(CLI.java:152)\n\tat org.infinispan.cli.commands.CliCommand.execute(CliCommand.java:32)\n\tat org.infinispan.cli.commands.CliCommand.execute(CliCommand.java:14)\n\tat org.aesh.command.impl.operator.EndOperator.execute(EndOperator.java:41)\n\tat org.aesh.command.impl.Executions$ExecutionImpl.execute(Executions.java:213)\n\tat org.aesh.command.impl.AeshCommandRuntime.executeCommand(AeshCommandRuntime.java:161)\n\tat org.aesh.AeshRuntimeRunner.execute(AeshRuntimeRunner.java:118)\n\tat org.infinispan.cli.commands.CLI.main(CLI.java:252)\n\nThe only way I found to \"fix\" it was to create a converter:\n   public Integer convert(ConverterInvocation converterInvocation) {\n      String value = converterInvocation.getInput();\n      if (value == null || value.isEmpty()) {\n         return null;\n      }\n      return Integer.parseInt(value);\n   }", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r427935242", "createdAt": "2020-05-20T11:27:05Z", "author": {"login": "pruivo"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,148 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Performs data migration\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         throw new UnsupportedOperationException();\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterDisconnect.CMD, description = \"Disconnects from a source cluster\")\n+   public static class ClusterDisconnect extends CliCommand {\n+\n+      public static final String CMD = \"disconnect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         CommandInputLine cmd = new CommandInputLine(Migrate.CMD)\n+               .arg(Migrate.TYPE, Migrate.Cluster.CMD)\n+               .arg(Migrate.SUBTYPE, ClusterDisconnect.CMD)\n+               .option(CACHE, cache);\n+         return invocation.execute(cmd);\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterSynchronize.CMD, description = \"Synchronizes data from a source to a target cluster\")\n+   public static class ClusterSynchronize extends CliCommand {\n+      public static final String CMD = \"synchronize\";\n+      public static final String READ_BATCH = \"read-batch\";\n+      public static final String THREADS = \"threads\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c')\n+      String cache;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Option(shortName = 'b', description = \"The amount of entries to process in a batch\")\n+      Integer readBatch;\n+\n+      @Option(shortName = 't', description = \"The number of threads to use. Defaults to the number of cores on the server\")\n+      Integer threads;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784"}, "originalPosition": 130}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31a6897b98dca3a92d282d67ce7437b847c72784", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/31a6897b98dca3a92d282d67ce7437b847c72784", "committedDate": "2020-05-20T09:58:08Z", "message": "ISPN-11721 CLI Migrate command"}, "afterCommit": {"oid": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "committedDate": "2020-05-20T11:42:07Z", "message": "ISPN-11721 CLI Migrate command"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/a2e8c3d6afaaf3f1445f10a80604a89862dbc2ce", "committedDate": "2020-05-20T11:42:07Z", "message": "ISPN-11721 CLI Migrate command"}, "afterCommit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/a72e54cd5678b896f23dc9ba3128b420e413a18d", "committedDate": "2020-05-20T11:59:50Z", "message": "ISPN-11721 CLI Migrate command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzMxMDE5", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415331019", "createdAt": "2020-05-20T13:26:14Z", "commit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzYxMjYw", "url": "https://github.com/infinispan/infinispan/pull/8353#pullrequestreview-415361260", "createdAt": "2020-05-20T13:55:48Z", "commit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NTo0OVrOGYM-wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NjowMVrOGYM_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTY4MQ==", "bodyText": "This is the Jira ID for adding the store migrator to the CLI.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r428031681", "createdAt": "2020-05-20T13:55:49Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/commands/Migrate.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package org.infinispan.cli.commands;\n+\n+import org.aesh.command.Command;\n+import org.aesh.command.CommandDefinition;\n+import org.aesh.command.CommandException;\n+import org.aesh.command.CommandResult;\n+import org.aesh.command.GroupCommandDefinition;\n+import org.aesh.command.option.Option;\n+import org.infinispan.cli.activators.ConnectionActivator;\n+import org.infinispan.cli.activators.DisabledActivator;\n+import org.infinispan.cli.completers.CacheCompleter;\n+import org.infinispan.cli.converters.NullableIntegerConverter;\n+import org.infinispan.cli.impl.ContextAwareCommandInvocation;\n+import org.kohsuke.MetaInfServices;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@MetaInfServices(Command.class)\n+@GroupCommandDefinition(name = Migrate.CMD, description = \"Migration operations\", groupCommands = {Migrate.Cluster.class})\n+public class Migrate extends CliCommand {\n+\n+   public static final String CMD = \"migrate\";\n+   public static final String TYPE = \"type\";\n+   public static final String SUBTYPE = \"subtype\";\n+\n+   @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+   protected boolean help;\n+\n+   @Override\n+   public boolean isHelp() {\n+      return help;\n+   }\n+\n+   @Override\n+   public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+      // This command serves only to wrap the sub-commands\n+      invocation.println(invocation.getHelpInfo());\n+      return CommandResult.FAILURE;\n+   }\n+\n+   @GroupCommandDefinition(name = Migrate.Cluster.CMD, description = \"Performs data migration between clusters\", groupCommands = {Migrate.ClusterConnect.class, Migrate.ClusterDisconnect.class, Migrate.ClusterSynchronize.class}, activator = ConnectionActivator.class)\n+   public class Cluster extends CliCommand {\n+\n+      public static final String CMD = \"cluster\";\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      public CommandResult exec(ContextAwareCommandInvocation invocation) {\n+         // This command serves only to wrap the sub-commands\n+         invocation.println(invocation.getHelpInfo());\n+         return CommandResult.FAILURE;\n+      }\n+   }\n+\n+   @CommandDefinition(name = Migrate.ClusterConnect.CMD, description = \"Connects to a source cluster\", activator = DisabledActivator.class)\n+   public static class ClusterConnect extends CliCommand {\n+\n+      public static final String CMD = \"connect\";\n+\n+      @Option(completer = CacheCompleter.class, shortName = 'c', description = \"The name of the cache.\")\n+      String cache;\n+\n+      @Option(shortName = 'u', description = \"The Hot Rod URL for the source cluster\", required = true)\n+      String url;\n+\n+      @Option(shortName = 'h', hasValue = false, overrideRequired = true)\n+      protected boolean help;\n+\n+      @Override\n+      public boolean isHelp() {\n+         return help;\n+      }\n+\n+      @Override\n+      protected CommandResult exec(ContextAwareCommandInvocation invocation) throws CommandException {\n+         // TODO: ISPN-11701", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTg3Mg==", "bodyText": "This is the Jira ID for adding the store migrator to the CLI.", "url": "https://github.com/infinispan/infinispan/pull/8353#discussion_r428031872", "createdAt": "2020-05-20T13:56:01Z", "author": {"login": "ryanemerson"}, "path": "cli/cli-client/src/main/java/org/infinispan/cli/connection/rest/RestConnection.java", "diffHunk": "@@ -565,6 +545,28 @@ public String execute(List<CommandInputLine> commands) throws IOException {\n                }\n                break;\n             }\n+            case Migrate.CMD: {\n+               RestCacheClient cache = getRestCacheClient(command.option(CliCommand.CACHE));\n+               switch (command.arg(Migrate.TYPE)) {\n+                  case Migrate.Cluster.CMD: {\n+                     switch (command.arg(Migrate.SUBTYPE)) {\n+                        case Migrate.ClusterConnect.CMD:\n+                           // TODO: ISPN-11701", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "committedDate": "2020-05-20T15:32:13Z", "message": "ISPN-11721 CLI Migrate command"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a72e54cd5678b896f23dc9ba3128b420e413a18d", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/a72e54cd5678b896f23dc9ba3128b420e413a18d", "committedDate": "2020-05-20T11:59:50Z", "message": "ISPN-11721 CLI Migrate command"}, "afterCommit": {"oid": "c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/c0da358680cf02ed9bbd955a858be6bfeeb6aa43", "committedDate": "2020-05-20T15:32:13Z", "message": "ISPN-11721 CLI Migrate command"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 803, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}