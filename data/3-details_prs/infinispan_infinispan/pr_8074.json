{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzA3Mjc3", "number": 8074, "title": "ISPN-10608 embedded docs", "bodyText": "https://issues.redhat.com/browse/ISPN-10608\nNeeds backport to 10.1.x", "createdAt": "2020-03-23T10:50:23Z", "url": "https://github.com/infinispan/infinispan/pull/8074", "merged": true, "mergeCommit": {"oid": "ed1e30cf75e531f9396f97b65d043332cf1255ef"}, "closed": true, "closedAt": "2020-03-26T14:09:50Z", "author": {"login": "oraNod"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQyYd_gBqjMxNTk1MDc1OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRaYCfgFqTM4MTkxNzQ0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab8d02739f40c971bb93bd32aa5a24e6ba7159ff", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/ab8d02739f40c971bb93bd32aa5a24e6ba7159ff", "committedDate": "2020-03-23T10:49:49Z", "message": "ISPN-10608 embedded docs"}, "afterCommit": {"oid": "e7460787d2c79909751b0f9f828e8f2602c8a164", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/e7460787d2c79909751b0f9f828e8f2602c8a164", "committedDate": "2020-03-24T12:50:42Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7460787d2c79909751b0f9f828e8f2602c8a164", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/e7460787d2c79909751b0f9f828e8f2602c8a164", "committedDate": "2020-03-24T12:50:42Z", "message": "ISPN-10608 embedded docs"}, "afterCommit": {"oid": "40ef1c430e902e90469df7e3ff82be55cdf23d52", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/40ef1c430e902e90469df7e3ff82be55cdf23d52", "committedDate": "2020-03-25T14:58:54Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40ef1c430e902e90469df7e3ff82be55cdf23d52", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/40ef1c430e902e90469df7e3ff82be55cdf23d52", "committedDate": "2020-03-25T14:58:54Z", "message": "ISPN-10608 embedded docs"}, "afterCommit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "committedDate": "2020-03-26T09:28:11Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODM4Mzky", "url": "https://github.com/infinispan/infinispan/pull/8074#pullrequestreview-381838392", "createdAt": "2020-03-26T09:38:59Z", "commit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozODo1OVrOF7-eGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozODo1OVrOF7-eGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMzgxOA==", "bodyText": "Incorrect: the above code creates a clustered cache manager.", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398433818", "createdAt": "2020-03-26T09:38:59Z", "author": {"login": "tristantarrant"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, local Cache Manager. Cache Managers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5a180845bfa2c0d0489a10f38bbe0f0564b7fbde", "committedDate": "2020-03-26T09:28:11Z", "message": "ISPN-10608 embedded docs"}, "afterCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/ea1be0743de996199b0701e0193d0fd18657b286", "committedDate": "2020-03-26T09:54:19Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODU2MTI2", "url": "https://github.com/infinispan/infinispan/pull/8074#pullrequestreview-381856126", "createdAt": "2020-03-26T10:01:29Z", "commit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDowMToyOVrOF7_XQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNjoyNVrOF7_7cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0ODQ0OQ==", "bodyText": "you don't have to use the bom, but if you do, you need to import it:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                   </dependency>\n          \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                       <type>pom</type>\n          \n          \n            \n                       <scope>import</scope>\n          \n          \n            \n                   </dependency>\n          \n      \n    \n    \n  \n\nyou have an example in spring-boot repo: https://github.com/infinispan/infinispan-spring-boot/blob/master/pom.xml#L95", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398448449", "createdAt": "2020-03-26T10:01:29Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/dependencies_maven/ispn_embedded.xml", "diffHunk": "@@ -1,5 +1,13 @@\n-<dependency>\n-  <groupId>org.infinispan</groupId>\n-  <artifactId>infinispan-embedded</artifactId>\n-  <version>${version.infinispan}</version>\n-</dependency>\n+<dependencyManagement>\n+    <dependencies>\n+       <dependency>\n+           <groupId>org.infinispan</groupId>\n+           <artifactId>infinispan-bom</artifactId>\n+           <version>${version.infinispan}</version>\n+       </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDYzMg==", "bodyText": "can you align the spaces?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398454632", "createdAt": "2020-03-26T10:11:17Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NTgxOA==", "bodyText": "is it worth to mention that the cache is created in all the nodes in the cluster?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398455818", "createdAt": "2020-03-26T10:13:18Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjI5Mg==", "bodyText": "what do you think of keeping only the code and remove the imports?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398456292", "createdAt": "2020-03-26T10:14:03Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzE0NA==", "bodyText": "A / is missing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]\n          \n          \n            \n            * link:{javadocroot}/org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457144", "createdAt": "2020-03-26T10:15:24Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data\n+into the cache, or configure {brandname} as needed.\n+\n+.Reference\n+\n+* link:{config_docs}#programmatic-configuring[Configuring {brandname} Programmatically]\n+* link:{javadocroot}/org/infinispan/Cache.html[org.infinispan.Cache]\n+* link:{javadocroot}/org/infinispan/commons/api/CacheContainerAdmin.html[org.infinispan.commons.api.CacheContainerAdmin]\n+* link:{javadocroot}/org/infinispan/configuration/cache/CacheMode.html[org.infinispan.configuration.cache.CacheMode]\n+* link:{javadocroot}/org/infinispan/configuration/cache/Configuration.html[org.infinispan.configuration.cache.Configuration]\n+* link:{javadocroot}/org/infinispan/configuration/cache/ConfigurationBuilder.html[org.infinispan.configuration.cache.ConfigurationBuilder]\n+* link:{javadocroot}/org/infinispan/configuration/global/GlobalConfigurationBuilder.html[org.infinispan.configuration.global.GlobalConfigurationBuilder]\n+* link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzcxMg==", "bodyText": "the transport must be configured before instantiating the DefaultCacheManager.", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457712", "createdAt": "2020-03-26T10:16:25Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ceb88de707dd894ce29768d7d70b1f2f899ed05", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/2ceb88de707dd894ce29768d7d70b1f2f899ed05", "committedDate": "2020-03-26T10:44:38Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b48f9ebc42e77629c0f65eba9c5d2cff1a8e1fb", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5b48f9ebc42e77629c0f65eba9c5d2cff1a8e1fb", "committedDate": "2020-03-26T10:27:38Z", "message": "Update documentation/src/main/asciidoc/topics/proc_running_embedded.adoc\n\nCo-Authored-By: Pedro Ruivo <pruivo@users.noreply.github.com>"}, "afterCommit": {"oid": "2ceb88de707dd894ce29768d7d70b1f2f899ed05", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/2ceb88de707dd894ce29768d7d70b1f2f899ed05", "committedDate": "2020-03-26T10:44:38Z", "message": "ISPN-10608 embedded docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d6bd4c28dc3e415f9b21997c78e9fdf778b98fd", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/3d6bd4c28dc3e415f9b21997c78e9fdf778b98fd", "committedDate": "2020-03-26T11:23:51Z", "message": "fix for invalid assembly ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTE3NDQ0", "url": "https://github.com/infinispan/infinispan/pull/8074#pullrequestreview-381917444", "createdAt": "2020-03-26T11:26:35Z", "commit": {"oid": "3d6bd4c28dc3e415f9b21997c78e9fdf778b98fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 952, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}