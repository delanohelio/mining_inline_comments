{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODY4MTcx", "number": 8921, "title": "ISPN-12469 Don't cache isTraceEnabled/isDebugEnabled calls", "bodyText": "https://issues.redhat.com/browse/ISPN-12469\nInitially was supposed to move caching to instance level (1). Doing that does not allow the optimisations in quarkusio/quarkus#13376 to kick in, so went ahead and removed all caching to allow those optimizations to kick in (2).\nSome numbers performance numbers for native:\n\nStoring 2m 2kb key/value pairs:\n\nBefore any work, it took 265s to store.\nAfter (1) it went down to 150-145s.\nAfter (2) it now takes 130-135s.\nFor reference, JVM mode does it in 105-110s.\n\n\nState transfer for the 1/2 of the stored data:\n\nBefore any work, it took 77s to store.\nAfter (1) 25-24s.\nAfter (2) it now takes 17s.\nJVM mode does it in 8-9s.", "createdAt": "2020-12-07T18:35:43Z", "url": "https://github.com/infinispan/infinispan/pull/8921", "merged": true, "mergeCommit": {"oid": "7206596b4a0258d0b8f1a20d78259e7f270a81ec"}, "closed": true, "closedAt": "2020-12-14T15:38:19Z", "author": {"login": "galderz"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdke3ZRAFqTU0Nzk1OTIwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmHdNkAFqTU1MTQ3OTU2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTU5MjA3", "url": "https://github.com/infinispan/infinispan/pull/8921#pullrequestreview-547959207", "createdAt": "2020-12-09T08:51:22Z", "commit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "state": "APPROVED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo1MToyMlrOICJLVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozMzozOVrOICUzzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExODQyMA==", "bodyText": "We should remove the method in AbstractTransactionTable", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539118420", "createdAt": "2020-12-09T08:51:22Z", "author": {"login": "danberindei"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transaction/XaModeTransactionTable.java", "diffHunk": "@@ -68,7 +67,7 @@ Log getLog() {\n \n    @Override\n    boolean isTraceLogEnabled() {\n-      return trace;\n+      return log.isTraceEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MjUzNg==", "bodyText": "We should remove isTraceEnabled() and getLog()", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539282536", "createdAt": "2020-12-09T12:54:40Z", "author": {"login": "danberindei"}, "path": "server/hotrod/src/main/java/org/infinispan/server/hotrod/tx/operation/RollbackTransactionOperation.java", "diffHunk": "@@ -162,7 +161,7 @@ Log log() {\n \n    @Override\n    boolean isTraceEnabled() {\n-      return trace;\n+      return log.isTraceEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4NTg3OQ==", "bodyText": "We should remove the if (trace) checks from tests IMO", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539285879", "createdAt": "2020-12-09T12:59:37Z", "author": {"login": "danberindei"}, "path": "hibernate/cache-commons/src/test/java/org/infinispan/test/hibernate/cache/commons/functional/ConcurrentWriteTest.java", "diffHunk": "@@ -349,36 +348,36 @@ public Void call() throws Exception {\n \t\t\ttry {\n \t\t\t\tfor ( int i = 0; i < ITERATION_COUNT && !TERMINATE_ALL_USERS; i++ ) {\n \t\t\t\t\tcontactExists();\n-\t\t\t\t\tif ( trace ) {\n+\t\t\t\t\tif ( log.isTraceEnabled() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5MDYzNw==", "bodyText": "I don't think if (log.isDebugEnabled()) is justified, there are just too few invocations.", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539290637", "createdAt": "2020-12-09T13:06:52Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/xsite/statetransfer/XSiteStateConsumerImpl.java", "diffHunk": "@@ -54,7 +52,7 @@\n \n    @Override\n    public void startStateTransfer(String sendingSite) {\n-      if (debug) {\n+      if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5MTc3MQ==", "bodyText": "This is wrong IMO. We shouldn't log individual chunks at DEBUG level because the number of chunks depends on the number of entries (and the chunk size).", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539291771", "createdAt": "2020-12-09T13:08:40Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/xsite/statetransfer/XSiteStateProviderImpl.java", "diffHunk": "@@ -163,10 +161,10 @@ private void sendFromSharedBuffer(XSiteBackup xSiteBackup, List<XSiteState> shar\n       }\n       XSiteState[] privateBuffer = sharedBuffer.toArray(new XSiteState[0]);\n \n-      if (trace) {\n+      if (log.isTraceEnabled()) {\n          log.debugf(\"Sending chunk to site '%s'. Chunk contains %s\", xSiteBackup.getSiteName(),\n                     Arrays.toString(privateBuffer));\n-      } else if (debug) {\n+      } else if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5MjQ5Mw==", "bodyText": "Again, no if needed for debug logs.", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539292493", "createdAt": "2020-12-09T13:09:44Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/xsite/statetransfer/XSiteStateTransferManagerImpl.java", "diffHunk": "@@ -142,7 +140,7 @@ public final void startPushState(String siteName) throws Throwable {\n             CacheRpcCommand command = commandsFactory.buildXSiteStateTransferStartSendCommand(siteName, currentTopologyId());\n             controlStateTransferOnLocalSite(command);\n          } else {\n-            if (debug) {\n+            if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5Mjc1NQ==", "bodyText": "Not needed for tests.", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539292755", "createdAt": "2020-12-09T13:10:11Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/conflict/impl/BaseMergePolicyTest.java", "diffHunk": "@@ -122,20 +121,20 @@ protected void afterConflictResolutionAndMerge() {\n    }\n \n    public void testPartitionMergePolicy() throws Exception {\n-      if (trace) log.tracef(\"beforeSplit()\");\n+      if (log.isTraceEnabled()) log.tracef(\"beforeSplit()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI5NTUyNw==", "bodyText": ":))", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539295527", "createdAt": "2020-12-09T13:14:29Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/xsite/ClusteredCacheBackupReceiver.java", "diffHunk": "@@ -95,7 +95,6 @@\n public class ClusteredCacheBackupReceiver implements BackupReceiver {\n \n    private static final Log log = LogFactory.getLog(ClusteredCacheBackupReceiver.class);\n-   private static final boolean trace = log.isDebugEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwMTU5Mg==", "bodyText": "We should remove isTraceEnabled() and getLog().", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539301592", "createdAt": "2020-12-09T13:23:21Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/remoting/inboundhandler/TxPerCacheInboundInvocationHandler.java", "diffHunk": "@@ -99,7 +98,7 @@ protected Log getLog() {\n \n    @Override\n    protected boolean isTraceEnabled() {\n-      return trace;\n+      return log.isTraceEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNDEzOA==", "bodyText": "IMO we should always create the AtomicInteger, and we should only check log.isTraceEnabled() in nextTraceId().", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539304138", "createdAt": "2020-12-09T13:26:52Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/persistence/support/NonBlockingStoreAdapter.java", "diffHunk": "@@ -41,8 +41,7 @@\n \n public class NonBlockingStoreAdapter<K, V> implements NonBlockingStore<K, V> {\n    private static final Log log = LogFactory.getLog(MethodHandles.lookup().lookupClass());\n-   private static final boolean trace = log.isTraceEnabled();\n-   private static final AtomicInteger id = trace ? new AtomicInteger() : null;\n+   private final AtomicInteger id = log.isTraceEnabled() ? new AtomicInteger() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNTEyNA==", "bodyText": "We should remove isTraceEnabled() and getLog()", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539305124", "createdAt": "2020-12-09T13:28:10Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/remoting/inboundhandler/NonTxPerCacheInboundInvocationHandler.java", "diffHunk": "@@ -104,7 +103,7 @@ protected Log getLog() {\n \n    @Override\n    protected boolean isTraceEnabled() {\n-      return trace;\n+      return log.isTraceEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwOTAwNQ==", "bodyText": "log should be private", "url": "https://github.com/infinispan/infinispan/pull/8921#discussion_r539309005", "createdAt": "2020-12-09T13:33:39Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/interceptors/xsite/BaseBackupInterceptor.java", "diffHunk": "@@ -40,7 +40,6 @@\n    @Inject protected ClusteringDependentLogic clusteringDependentLogic;\n \n    protected static final Log log = LogFactory.getLog(BaseBackupInterceptor.class);\n-   protected static final boolean trace = log.isTraceEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94aa39859bfde0aa2c4eb8e7fc4c437d3e90140d", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/94aa39859bfde0aa2c4eb8e7fc4c437d3e90140d", "committedDate": "2020-12-10T12:37:28Z", "message": "ISPN-12469 Do not cache trace level statically"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ae34d35e1367d48a1be65c6311540cac649e8fb", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/infinispan/infinispan/commit/0ae34d35e1367d48a1be65c6311540cac649e8fb", "committedDate": "2020-12-07T18:28:10Z", "message": "ISPN-12469 Don't cache isTraceEnabled/isDebugEnabled calls"}, "afterCommit": {"oid": "06a656531df3eb97a63bb0e9da96723b67f551c7", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/infinispan/infinispan/commit/06a656531df3eb97a63bb0e9da96723b67f551c7", "committedDate": "2020-12-10T12:40:29Z", "message": "ISPN-12469 PR review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca7510501ba71697d3b33cfd4baadec68946c0a1", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/infinispan/infinispan/commit/ca7510501ba71697d3b33cfd4baadec68946c0a1", "committedDate": "2020-12-10T12:46:09Z", "message": "ISPN-12469 Don't cache isTraceEnabled/isDebugEnabled calls"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06a656531df3eb97a63bb0e9da96723b67f551c7", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/infinispan/infinispan/commit/06a656531df3eb97a63bb0e9da96723b67f551c7", "committedDate": "2020-12-10T12:40:29Z", "message": "ISPN-12469 PR review fixes"}, "afterCommit": {"oid": "ca7510501ba71697d3b33cfd4baadec68946c0a1", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/infinispan/infinispan/commit/ca7510501ba71697d3b33cfd4baadec68946c0a1", "committedDate": "2020-12-10T12:46:09Z", "message": "ISPN-12469 Don't cache isTraceEnabled/isDebugEnabled calls"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTIyNDQy", "url": "https://github.com/infinispan/infinispan/pull/8921#pullrequestreview-551122442", "createdAt": "2020-12-14T08:08:06Z", "commit": {"oid": "ca7510501ba71697d3b33cfd4baadec68946c0a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDc5NTYw", "url": "https://github.com/infinispan/infinispan/pull/8921#pullrequestreview-551479560", "createdAt": "2020-12-14T15:27:36Z", "commit": {"oid": "ca7510501ba71697d3b33cfd4baadec68946c0a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 214, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}