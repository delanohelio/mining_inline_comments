{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTE3NzY4", "number": 8876, "title": "ISPN-12448 JGroups documentation revisited", "bodyText": "https://issues.redhat.com/browse/ISPN-12448\nPurpose of this PR is to rework Server Getting Started content to clarify that the procedure to copy server -> server2 is illustrative for automatic cluster discovery with default settings and not realistic for any sort of production environment.\nThis PR also adds the \"Setting Up Clusters\" to Server and Embedded docs, with conditional statements separating server and embedded specific details. The cluster transport section is removed from the configuration guide.\nNeeds backport to 11.0.x without INSERT_BEFORE.", "createdAt": "2020-11-20T19:50:56Z", "url": "https://github.com/infinispan/infinispan/pull/8876", "merged": true, "mergeCommit": {"oid": "ab5bf17292b58c54c6254b66e35f6f22dbe7b05c"}, "closed": true, "closedAt": "2020-12-04T16:33:14Z", "author": {"login": "oraNod"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfYaqgABqjQwMjg3NzE1NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi6VQHABqjQwNzM0NzU4MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af3e5655464e3e7429a0b6c4a306333a5bac7774", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/af3e5655464e3e7429a0b6c4a306333a5bac7774", "committedDate": "2020-11-20T19:46:28Z", "message": "ISPN-12448 JGroups documentation revisited"}, "afterCommit": {"oid": "ef5262b7aa3330fd1c851f9636f8baeb2fdddae4", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/ef5262b7aa3330fd1c851f9636f8baeb2fdddae4", "committedDate": "2020-11-23T17:15:32Z", "message": "add stack combine insert before"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef5262b7aa3330fd1c851f9636f8baeb2fdddae4", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/ef5262b7aa3330fd1c851f9636f8baeb2fdddae4", "committedDate": "2020-11-23T17:15:32Z", "message": "add stack combine insert before"}, "afterCommit": {"oid": "5b2eca63a7dd9802598c658f4fadb5b11ff89268", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5b2eca63a7dd9802598c658f4fadb5b11ff89268", "committedDate": "2020-11-23T17:48:17Z", "message": "add stack combine insert before"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28f8db7e2a2ac5975ff570d816d6549ad214780e", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/28f8db7e2a2ac5975ff570d816d6549ad214780e", "committedDate": "2020-11-23T18:03:52Z", "message": "note about conflicting jgroups properties"}, "afterCommit": {"oid": "c9db834b3a4e72b01746d3b82179c05cc5db9965", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/c9db834b3a4e72b01746d3b82179c05cc5db9965", "committedDate": "2020-11-25T16:51:54Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDk1OTU3", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-539095957", "createdAt": "2020-11-26T08:39:50Z", "commit": {"oid": "c9db834b3a4e72b01746d3b82179c05cc5db9965"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODozOTo1MFrOH6Q7ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODozOTo1MFrOH6Q7ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1NjgwNA==", "bodyText": "I don't understand this classification.\nI'd say the discovery protocols fall into two broad categories:\n\nthe generic ones (TCPPING and UDPPING) which should work on most network and don't rely on external services\nthose that rely on some external source for storing/retrieving topology information (DNS, Kubernetes, S3, JDBC, Gossip, etc)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r530856804", "createdAt": "2020-11-26T08:39:50Z", "author": {"login": "tristantarrant"}, "path": "documentation/src/main/asciidoc/topics/con_discovery.adoc", "diffHunk": "@@ -0,0 +1,16 @@\n+[id='cluster_discovery-{context}']\n+= Cluster Discovery Protocols\n+{brandname} supports different protocols that allow nodes to automatically find each other on the network and form clusters.\n+\n+{brandname} can use the following discovery mechanisms:\n+\n+* Generic discovery protocols (`TCPPING` and `TCPGOSSIP`)\n+* JGroups PING protocols (`KUBE_PING` and `DNS_PING`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9db834b3a4e72b01746d3b82179c05cc5db9965"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9db834b3a4e72b01746d3b82179c05cc5db9965", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/c9db834b3a4e72b01746d3b82179c05cc5db9965", "committedDate": "2020-11-25T16:51:54Z", "message": "ISPN-12448 JGroups documentation revisited"}, "afterCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/76c4a32abad2fc674cc01ede810ff20fcefed2ef", "committedDate": "2020-11-30T13:29:24Z", "message": "some edits and updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTc0MzM4", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-540974338", "createdAt": "2020-11-30T14:44:40Z", "commit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDo0NDo0MFrOH7-RtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTozODo0N1rOH8AzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0ODM3Mg==", "bodyText": "-p doesn't encrypt anything :)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532648372", "createdAt": "2020-11-30T14:44:40Z", "author": {"login": "pruivo"}, "path": "cli/src/main/resources/help/user.adoc", "diffHunk": "@@ -97,7 +83,7 @@ Specifies the algorithms used to hash the password.\n *-g, --groups*='group1,group2,...'::\n Specifies the groups to which the user belongs.\n \n-*-p, --password*='password'::\n+*-p, --password*='password'::Encrypt all of the passwords ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1MjI2OQ==", "bodyText": "The file name is redhat-datagrid (I think)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            $ unzip jboss-datagrid-{FullProductVersion}-server.zip\n          \n          \n            \n            $ unzip redhat-datagrid-{FullProductVersion}-server.zip", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532652269", "createdAt": "2020-11-30T14:49:40Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/cmd_examples/extract_server_distribution.adoc", "diffHunk": "@@ -0,0 +1,6 @@\n+ifndef::productized[]\n+$ unzip infinispan-server-{ispn_version}.zip\n+endif::productized[]\n+ifdef::productized[]\n+$ unzip jboss-datagrid-{FullProductVersion}-server.zip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1NDM5Nw==", "bodyText": "import not required since the calls are chained.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532654397", "createdAt": "2020-11-30T14:52:28Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/code_examples/ConfigureTransportDefault.java", "diffHunk": "@@ -1,3 +1,5 @@\n+import org.infinispan.configuration.global.TransportConfigurationBuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1NDU4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .clusterName(\"qa-cluster\")\n          \n          \n            \n            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .clusterName(\"qa-cluster\")\n          \n          \n            \n            \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .build()", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532654586", "createdAt": "2020-11-30T14:52:42Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/code_examples/ConfigureTransportDefault.java", "diffHunk": "@@ -1,3 +1,5 @@\n+import org.infinispan.configuration.global.TransportConfigurationBuilder;\n+\n GlobalConfiguration globalConfig = new GlobalConfigurationBuilder().transport()\n         .defaultTransport()\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .clusterName(\"qa-cluster\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1NjQ5Ng==", "bodyText": "I would remove the {brandname} from here (and other places in the doc related to user creation)\nThe final outcome would be Create a Infinispan user <- doesn't seem correct to me.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532656496", "createdAt": "2020-11-30T14:55:08Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_creating_caches_console.adoc", "diffHunk": "@@ -5,7 +5,7 @@ Dynamically add caches from templates or configuration files through the\n \n .Prerequisites\n \n-Add {brandname} credentials and start at least one {brandname} server instance.\n+Create a {brandname} user and start at least one {brandname} server instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2MTYzMw==", "bodyText": "not sure why step 1 (locate) & 2 (view xml) are required. Reading this it seems mandatory to open the XML file.\nIMO, You can just tell where the XML is.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532661633", "createdAt": "2020-11-30T15:01:52Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_default.adoc", "diffHunk": "@@ -0,0 +1,51 @@\n+[id='jgroups_getting_started-{context}']\n+= Getting Started with Default Stacks\n+{brandname} uses JGroups protocol stacks so nodes can send each other messages on dedicated cluster channels.\n+\n+{brandname} provides preconfigured JGroups stacks for `UDP` and `TCP` protocols.\n+You can use these default stacks as a starting point for building custom cluster transport configuration that is optimized for your network requirements.\n+\n+.Procedure\n+\n+. Locate the default JGroups stacks in the `default-configs` directory inside the `infinispan-core-{ispn_version}.jar` file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2Mjk3OQ==", "bodyText": "update url?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * link:http://www.jgroups.org/manual/html/protlist.html[JGroups Protocol]\n          \n          \n            \n            * link:http://jgroups.org/manual4/index.html#protlist[JGroups Protocol]", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532662979", "createdAt": "2020-11-30T15:03:49Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_default.adoc", "diffHunk": "@@ -40,4 +38,3 @@ directory.\n .Reference\n \n * link:http://www.jgroups.org/manual/html/protlist.html[JGroups Protocol]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2NDk1Nw==", "bodyText": "RELAY2 doesn't have a default port. If not configured, it will use 7800++", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532664957", "createdAt": "2020-11-30T15:06:33Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_ports.adoc", "diffHunk": "@@ -21,7 +22,3 @@\n |JGroups RELAY2 for cross-site replication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2ODA2MQ==", "bodyText": "is this true? You don't need stack.position when used with COMBINE. I'm not expecting it to reset everything :)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532668061", "createdAt": "2020-11-30T15:10:39Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_inheritance_attributes.adoc", "diffHunk": "@@ -0,0 +1,37 @@\n+[id='jgroups_inheritance_attributes-{context}']\n+= Inheritance Attributes\n+When you extend a JGroups stack, inheritance attributes let you adjust protocols and properties in the stack you are extending.\n+\n+* `stack.combine` uses the following values to extends JGroups stacks:\n++\n+[%header,cols=\"1,2\"]\n+|===\n+\n+| Value\n+| Description\n+\n+| `COMBINE`\n+| Overrides protocol properties.\n+\n+| `REPLACE`\n+| Replaces protocols.\n+\n+| `INSERT_AFTER`\n+| Adds a protocol into the stack after another protocol.\n+Does not affect the protocol that you specify as the insertion point.\n+\n+Protocols in JGroups stacks affect each other based on their location in the stack.\n+For example, you should put a protocol such as `NAKACK2` after the `SYM_ENCRYPT` or `ASYM_ENCRYPT` protocol so that `NAKACK2` is secured.\n+\n+| `INSERT_BEFORE`\n+| Inserts a protocols into the stack before another protocol.\n+Affects the protocol that you specify as the insertion point.\n+\n+| `REMOVE`\n+| Removes protocols from the stack.\n+\n+|===\n+\n+* `stack.position` specifies protocols to modify.\n+If you do not specify `stack.position`, {brandname} modifies the corresponding protocol in the stack.\n+This resets all protocol attributes that you do not specify to default values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3NDY3Nw==", "bodyText": "there is one more property I added with JGroups 4.2.9:\njgroups.thread_dumps_threshold: \"The number of times a thread pool needs to be full before a thread dump is logged\"", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532674677", "createdAt": "2020-11-30T15:19:30Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -1,11 +1,6 @@\n [id='jgroups_system_props-{context}']\n-= System Properties for Default JGroups Stacks\n-Use system properties with default JGroups stacks.\n-\n-.Common Properties\n-\n-The following system properties apply to all JGroups stacks, including\n-`default-jgroups-udp.xml` and `default-jgroups-tcp.xml`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3NjM1NA==", "bodyText": "can you check column \"required\" in jgroups.google.bucket_name? It is mentioning dns_query but I'm not sure if it is related.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532676354", "createdAt": "2020-11-30T15:21:40Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -108,7 +103,7 @@ The following system properties apply to `default-jgroups-kubernetes.xml`:\n \n .Google Cloud Platform\n \n-The following system properties apply to `default-jgroups-google.xml`:\n+The following system properties apply only to `default-jgroups-google.xml`:\n \n [%header,cols=\"1,3,2,1\"]\n |===", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3Njc2Mw==", "bodyText": "where is dns_query come from? It is mentioned in the column \"required\".", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532676763", "createdAt": "2020-11-30T15:22:09Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -89,7 +84,7 @@ The following system properties apply to `default-jgroups-ec2.xml`:\n \n .Kubernetes\n \n-The following system properties apply to `default-jgroups-kubernetes.xml`:\n+The following system properties apply only to `default-jgroups-kubernetes.xml`:\n \n [%header,cols=\"1,3,2,1\"]\n |===", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3NzcwMQ==", "bodyText": "The JGroups Protocol List URL needs to be updated as well. Put in some attribute?", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532677701", "createdAt": "2020-11-30T15:23:23Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -108,7 +103,7 @@ The following system properties apply to `default-jgroups-kubernetes.xml`:\n \n .Google Cloud Platform\n \n-The following system properties apply to `default-jgroups-google.xml`:\n+The following system properties apply only to `default-jgroups-google.xml`:\n \n [%header,cols=\"1,3,2,1\"]\n |===", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3ODg5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . Add custom JGroups stack files to the `{server_home}/conf` directory.\n          \n          \n            \n            . Add custom JGroups stack files to the `{server_home}/server/conf` directory.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532678890", "createdAt": "2020-11-30T15:24:52Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_external.adoc", "diffHunk": "@@ -1,33 +1,24 @@\n [id='jgroups_external-{context}']\n-= Using JGroups Stacks in External Files\n-You can use custom JGroups transport configuration from external files.\n+= Using External JGroups Stacks\n+Reference external files that define custom JGroups stacks in `infinispan.xml` files.\n \n-{brandname} looks for JGroups configuration files on your classpath first and\n-then for absolute path names.\n+.Procedure\n \n-.Declaratively\n-\n-* Specify your JGroups transport configuration with the `stack-file` element.\n+ifdef::server_mode[]\n+. Add custom JGroups stack files to the `{server_home}/conf` directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4MDM4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * link:http://www.jgroups.org/manual/html/protlist.html#DiscoveryProtocols[JGroups Discovery Protocols]\n          \n          \n            \n            * link:http://jgroups.org/manual4/index.html#DiscoveryProtocols[JGroups Discovery Protocols]", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532680386", "createdAt": "2020-11-30T15:26:42Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/con_discovery.adoc", "diffHunk": "@@ -0,0 +1,16 @@\n+[id='cluster_discovery-{context}']\n+= Cluster Discovery Protocols\n+{brandname} supports different protocols that allow nodes to automatically find each other on the network and form clusters.\n+\n+There are two types of discovery mechanisms that {brandname} can use:\n+\n+* Generic discovery protocols that work on most networks and do not rely on external services.\n+* Discovery protocols that rely on external services to store and retrieve topology information for {brandname} clusters. +\n+For instance the JDBC_PING protocol uses a shared database where nodes write their IP addresses.\n+\n+[NOTE]\n+====\n+Running {brandname} on hosted platforms requires using discovery mechanisms that are adapted to network constraints that individual cloud providers impose.\n+====\n+\n+* link:http://www.jgroups.org/manual/html/protlist.html#DiscoveryProtocols[JGroups Discovery Protocols]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4MTY4Nw==", "bodyText": "JGroups TCPPING needs update:\nhttp://jgroups.org/manual4/index.html#TCPPING_Prot", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532681687", "createdAt": "2020-11-30T15:28:17Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_tcp_ping.adoc", "diffHunk": "@@ -1,11 +1,8 @@\n+[id='discovery_tcpping-{context}']\n = TCPPING\n-`TCPPING` is a generic JGroups discovery mechanism that uses a static list of IP\n-addresses for cluster members.\n+TCPPING is a generic JGroups discovery mechanism that uses a list of static addresses for cluster members.\n \n-To use `TCPPING`, you must add the list of static IP addresses to the JGroups\n-configuration file for each {brandname} node. However, the drawback to\n-`TCPPING` is that it does not allow nodes to dynamically join {brandname}\n-clusters.\n+With TCPPING, you manually specify the IP address or hostname of each node in the {brandname} cluster as part of the JGroups stack, rather letting nodes discover each other dynamically.\n \n .TCPPING configuration example\n [source,xml,options=\"nowrap\",subs=attributes+]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4MjU0Mg==", "bodyText": "link needs update:\nhttp://jgroups.org/manual4/index.html#TCPGOSSIP_Prot", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532682542", "createdAt": "2020-11-30T15:29:23Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_gossip_router.adoc", "diffHunk": "@@ -1,4 +1,5 @@\n-= Gossip Router\n+[id='discovery_tcpgossip-{context}']\n+= TCPGOSSIP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4NDUwOA==", "bodyText": "KUBE_PING is old and we don't ship/productize it (DNS_PING is recommended). I would remove it from docs.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532684508", "createdAt": "2020-11-30T15:31:50Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_kube_ping.adoc", "diffHunk": "@@ -1,6 +1,7 @@\n+[id='discovery_kubeping-{context}']\n = KUBE_PING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4NjI1OQ==", "bodyText": "link to docs? http://jgroups.org/manual4/index.html#_native_s3_ping", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532686259", "createdAt": "2020-11-30T15:34:14Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_aws.adoc", "diffHunk": "@@ -11,8 +12,11 @@ requires both Amazon S3 and EC2 subscriptions.\n include::config_examples/s3ping.xml[]\n ----\n \n-.NATIVE_S3_PING dependencies for embedded {brandname}\n+ifdef::embedded_mode[]\n+{brandname} requires cloud provider dependencies to use NATIVE_S3_PING:\n+\n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n include::dependencies_maven/ispn_cloud_ec2.xml[]\n ----\n+endif::embedded_mode[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4ODExNw==", "bodyText": "@tristantarrant we don't productize this and we don't ship it with the server. should be removed from server docs? (or include it in the server? or document how to include it in the server xD)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532688117", "createdAt": "2020-11-30T15:36:34Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_azure.adoc", "diffHunk": "@@ -1,5 +1,6 @@\n+[id='discovery_azure-{context}']\n = AZURE_PING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4ODQ5Nw==", "bodyText": "same for this :)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532688497", "createdAt": "2020-11-30T15:37:01Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_google.adoc", "diffHunk": "@@ -1,6 +1,7 @@\n+[id='discovery_google-{context}']\n = GOOGLE2_PING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4ODg3Mw==", "bodyText": "BTW, the protocol name is GOOGLE_PING2 :)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532688873", "createdAt": "2020-11-30T15:37:30Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_google.adoc", "diffHunk": "@@ -1,6 +1,7 @@\n+[id='discovery_google-{context}']\n = GOOGLE2_PING", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4ODQ5Nw=="}, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4OTA2Nw==", "bodyText": "link is missing: http://jgroups.org/manual4/index.html#GOOGLE_PING2", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532689067", "createdAt": "2020-11-30T15:37:44Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_google.adoc", "diffHunk": "@@ -1,6 +1,7 @@\n+[id='discovery_google-{context}']\n = GOOGLE2_PING", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4ODQ5Nw=="}, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY4OTgyNA==", "bodyText": "I think it works with \"all\" JDBC databases. Worth mention it?\nAlso, link to docs: http://jgroups.org/manual4/index.html#_jdbc_ping", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r532689824", "createdAt": "2020-11-30T15:38:47Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_jdbc.adoc", "diffHunk": "@@ -1,6 +1,8 @@\n+[id='discovery_jdbcping-{context}']\n = JDBC_PING\n-`JDBC_PING` uses JDBC connections to shared databases, such as Amazon RDS on\n-EC2, to store information about {brandname} nodes.\n+JDBC_PING uses shared databases, such as Amazon RDS on EC2, to store information about {brandname} clusters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4a32abad2fc674cc01ede810ff20fcefed2ef"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0132aeeb31aef081303639d35f5747e5dba27210", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/0132aeeb31aef081303639d35f5747e5dba27210", "committedDate": "2020-11-30T17:06:33Z", "message": "Update documentation/src/main/asciidoc/topics/ref_jgroups_default.adoc\n\nCo-authored-by: Pedro Ruivo <pruivo@users.noreply.github.com>"}, "afterCommit": {"oid": "d2544f013976433599ce466864dcd42b420984c2", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/d2544f013976433599ce466864dcd42b420984c2", "committedDate": "2020-11-30T17:43:16Z", "message": "pruivo feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2544f013976433599ce466864dcd42b420984c2", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/d2544f013976433599ce466864dcd42b420984c2", "committedDate": "2020-11-30T17:43:16Z", "message": "pruivo feedback"}, "afterCommit": {"oid": "553aad66c1d83624155b9c58cd9b51d9ac8e84e3", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/553aad66c1d83624155b9c58cd9b51d9ac8e84e3", "committedDate": "2020-11-30T17:58:24Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "553aad66c1d83624155b9c58cd9b51d9ac8e84e3", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/553aad66c1d83624155b9c58cd9b51d9ac8e84e3", "committedDate": "2020-11-30T17:58:24Z", "message": "ISPN-12448 JGroups documentation revisited"}, "afterCommit": {"oid": "1f844c2120736d83ab1828873079a175a1041173", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/1f844c2120736d83ab1828873079a175a1041173", "committedDate": "2020-12-01T16:28:58Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODU2OTAx", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-542856901", "createdAt": "2020-12-02T13:55:39Z", "commit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo1NTo0MFrOH9cBXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDozMDoxNVrOH9dmNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NDI4Nw==", "bodyText": "this file isn't consumed anywhere (at least, I don't find any reference). remove it?", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534184287", "createdAt": "2020-12-02T13:55:40Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_using_custom_jchannels.adoc", "diffHunk": "@@ -14,4 +14,4 @@ include::code_examples/CustomJChannel.java[]\n \n .Reference\n \n-link:http://www.jgroups.org/manual4/index.html#JChannel[JGroups JChannel]\n+link:{jgroups_docs}#JChannel[JGroups JChannel]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NzUwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            On Amazon Web Service (AWS), use the S3_PING protocol for discovery.\n          \n          \n            \n            On Amazon Web Service (AWS), use the NATIVE_S3_PING protocol for discovery.\n          \n      \n    \n    \n  \n\nwarning, there is an S3_PING protocol as well. We don't ship it; we only ship the native one.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534187508", "createdAt": "2020-12-02T14:00:11Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_aws.adoc", "diffHunk": "@@ -1,8 +1,9 @@\n+[id='discovery_aws-{context}']\n = NATIVE_S3_PING\n-On Amazon Web Service (AWS), use the `S3_PING` protocol for discovery.\n+On Amazon Web Service (AWS), use the S3_PING protocol for discovery.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTIxMA==", "bodyText": "I'm overthinking again \ud83d\ude28\nthis section is fine for embedded. But for the server, it requires custom jars to be placed in server/lib: the jgroups-google jar and manually find its dependencies. (same for azure & native_s3)\nthis isn't a trivial task and the server docs make it look too easy. I'm not sure how to proceed here:\n\nRemove those discovery protocols from server docs?\nsomething else?", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534199210", "createdAt": "2020-12-02T14:16:37Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_google.adoc", "diffHunk": "@@ -1,16 +1,22 @@\n-= GOOGLE2_PING\n-On Google Compute Engine (GCE), use a generic discovery protocol or\n-`GOOGLE2_PING`, which uses Google Cloud Storage (GCS) to store information\n-about the cluster members.\n+[id='discovery_google-{context}']\n+= GOOGLE_PING2\n+On Google Compute Engine (GCE), use a generic discovery protocol or GOOGLE_PING2, which uses Google Cloud Storage (GCS) to store information about the cluster members.\n \n-.GOOGLE2_PING configuration example\n+.GOOGLE_PING2 configuration example\n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n include::config_examples/googleping.xml[]\n ----\n \n-.GOOGLE2_PING dependencies for embedded {brandname}\n+ifdef::embedded_mode[]\n+{brandname} requires cloud provider dependencies to use GOOGLE_PING2:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMTgyNw==", "bodyText": "worth mention (as a warning/note) that the user needs to add the driver jar (H2, MySQL, whatever he is using)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534201827", "createdAt": "2020-12-02T14:19:59Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_jdbc.adoc", "diffHunk": "@@ -1,7 +1,12 @@\n+[id='discovery_jdbcping-{context}']\n = JDBC_PING\n-`JDBC_PING` uses JDBC connections to shared databases, such as Amazon RDS on\n-EC2, to store information about {brandname} nodes.\n+JDBC_PING uses shared databases to store information about {brandname} clusters.\n+This protocol supports any database that can use a JDBC connection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMjQ4MA==", "bodyText": "ps. actually, we don't ship the native_s3 for 11.x/master. We ship in the old server 9.4.x.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534202480", "createdAt": "2020-12-02T14:20:47Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_discovery_google.adoc", "diffHunk": "@@ -1,16 +1,22 @@\n-= GOOGLE2_PING\n-On Google Compute Engine (GCE), use a generic discovery protocol or\n-`GOOGLE2_PING`, which uses Google Cloud Storage (GCS) to store information\n-about the cluster members.\n+[id='discovery_google-{context}']\n+= GOOGLE_PING2\n+On Google Compute Engine (GCE), use a generic discovery protocol or GOOGLE_PING2, which uses Google Cloud Storage (GCS) to store information about the cluster members.\n \n-.GOOGLE2_PING configuration example\n+.GOOGLE_PING2 configuration example\n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n include::config_examples/googleping.xml[]\n ----\n \n-.GOOGLE2_PING dependencies for embedded {brandname}\n+ifdef::embedded_mode[]\n+{brandname} requires cloud provider dependencies to use GOOGLE_PING2:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTIxMA=="}, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwNzUyMg==", "bodyText": "It is required.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534207522", "createdAt": "2020-12-02T14:27:03Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -120,12 +120,12 @@ The following system properties apply to `default-jgroups-google.xml`:\n \n | `jgroups.google.bucket_name`\n | Name of the Google Compute Engine bucket. The name must exist and be unique.\n-| N/A\n-| Required if you do not set the `dns_query` parameter.\n+| No default value.\n+| Optional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxMDEwMg==", "bodyText": "I would remove dns_query from the table and make the attribute required.\nTo overwrite dns_query you need a custom stack and, if that is the case, jgroups.dns.query is not longer used.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534210102", "createdAt": "2020-12-02T14:30:15Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -100,15 +100,15 @@ The following system properties apply to `default-jgroups-kubernetes.xml`:\n | Required/Optional\n \n | `jgroups.dns.query`\n-| Sets the DNS record that returns cluster members.\n-| N/A\n-| Required if you do not set the `dns_query` parameter.\n+| Sets the DNS record that returns cluster members and overrides the `dns_query` parameter in the DNS_PING discovery protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe30fd839cbee7a350094480ce96356d7048756"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe2eadd41bedce7492636f7149c6c93dc6c562c8", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/fe2eadd41bedce7492636f7149c6c93dc6c562c8", "committedDate": "2020-12-02T15:24:16Z", "message": "Update documentation/src/main/asciidoc/topics/ref_discovery_aws.adoc\n\nCo-authored-by: Pedro Ruivo <pruivo@users.noreply.github.com>"}, "afterCommit": {"oid": "2ecd8bfd477b1f2f3c5ad176a95e97a1d854b090", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/2ecd8bfd477b1f2f3c5ad176a95e97a1d854b090", "committedDate": "2020-12-02T15:27:41Z", "message": "pruivo feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTk0NjEw", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-542994610", "createdAt": "2020-12-02T16:08:23Z", "commit": {"oid": "d0de964929b8de0d80bf4cedaa4eb42355219d5f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjowODoyM1rOH9icqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjowODoyM1rOH9icqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI4OTU3OQ==", "bodyText": "I miss this one. can you update the URL?", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r534289579", "createdAt": "2020-12-02T16:08:23Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_system_properties.adoc", "diffHunk": "@@ -120,12 +120,12 @@ The following system properties apply to `default-jgroups-google.xml`:\n \n | `jgroups.google.bucket_name`\n | Name of the Google Compute Engine bucket. The name must exist and be unique.\n-| N/A\n-| Required if you do not set the `dns_query` parameter.\n+| No default value.\n+| Required\n \n |===\n \n .Reference\n \n-* link:http://www.jgroups.org/manual4/index.html#SystemProperties[JGroups System Properties]\n+* link:{jgroups_docs}#SystemProperties[JGroups System Properties]\n * link:http://jgroups.org/manual/html/protlist.html[JGroups Protocol List]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0de964929b8de0d80bf4cedaa4eb42355219d5f"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDM2NDc3", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-543036477", "createdAt": "2020-12-02T16:50:13Z", "commit": {"oid": "9f16b3cc0331c697a6c49d29d631a7d8d9d42aba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f16b3cc0331c697a6c49d29d631a7d8d9d42aba", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/9f16b3cc0331c697a6c49d29d631a7d8d9d42aba", "committedDate": "2020-12-02T16:33:58Z", "message": "last url"}, "afterCommit": {"oid": "f1e89b016f63f52e7390f0a5b4ccbd397d0e9f6f", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/f1e89b016f63f52e7390f0a5b4ccbd397d0e9f6f", "committedDate": "2020-12-02T16:51:51Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1e89b016f63f52e7390f0a5b4ccbd397d0e9f6f", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/f1e89b016f63f52e7390f0a5b4ccbd397d0e9f6f", "committedDate": "2020-12-02T16:51:51Z", "message": "ISPN-12448 JGroups documentation revisited"}, "afterCommit": {"oid": "a38cc1cb4f80261c36b1a4408278e052fa48b0e0", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/a38cc1cb4f80261c36b1a4408278e052fa48b0e0", "committedDate": "2020-12-03T09:07:31Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a38cc1cb4f80261c36b1a4408278e052fa48b0e0", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/a38cc1cb4f80261c36b1a4408278e052fa48b0e0", "committedDate": "2020-12-03T09:07:31Z", "message": "ISPN-12448 JGroups documentation revisited"}, "afterCommit": {"oid": "6030fba32f7b9bf0236171077b254f43b6539a16", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/6030fba32f7b9bf0236171077b254f43b6539a16", "committedDate": "2020-12-04T11:32:44Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODkxODg2", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-544891886", "createdAt": "2020-12-04T11:51:09Z", "commit": {"oid": "6030fba32f7b9bf0236171077b254f43b6539a16"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTo1MToxMFrOH_NjCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTo1NTo0MVrOH_Nsgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0NDI5OQ==", "bodyText": "Is JDBC_PING a good example here? It seems one of the more niche discovery protocols. How about DNS_PING? That's what we use in kubernetes/openshfit.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536044299", "createdAt": "2020-12-04T11:51:10Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/con_discovery.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+[id='cluster_discovery-{context}']\n+= Cluster Discovery Protocols\n+{brandname} supports different protocols that allow nodes to automatically find each other on the network and form clusters.\n+\n+There are two types of discovery mechanisms that {brandname} can use:\n+\n+* Generic discovery protocols that work on most networks and do not rely on external services.\n+* Discovery protocols that rely on external services to store and retrieve topology information for {brandname} clusters. +\n+For instance the JDBC_PING protocol uses a shared database where nodes write their IP addresses.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6030fba32f7b9bf0236171077b254f43b6539a16"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0NTgxNw==", "bodyText": "s/to find/to create/", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536045817", "createdAt": "2020-12-04T11:54:02Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/proc_customizing_jgroups_stacks.adoc", "diffHunk": "@@ -0,0 +1,85 @@\n+[id='using_jgroups_inheritance-{context}']\n+= Customizing JGroups Stacks\n+Adjust and tune properties to find a cluster transport configuration that works for your network requirements.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6030fba32f7b9bf0236171077b254f43b6539a16"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0NjcyMg==", "bodyText": "I'm not sure this sentence adds anything, imo we can remove this.", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536046722", "createdAt": "2020-12-04T11:55:41Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_default.adoc", "diffHunk": "@@ -0,0 +1,57 @@\n+[id='jgroups_getting_started-{context}']\n+= Getting Started with Default Stacks\n+{brandname} uses JGroups protocol stacks so nodes can send each other messages on dedicated cluster channels.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6030fba32f7b9bf0236171077b254f43b6539a16"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTQ3MTUx", "url": "https://github.com/infinispan/infinispan/pull/8876#pullrequestreview-544947151", "createdAt": "2020-12-04T13:13:46Z", "commit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzoxMzo0NlrOH_QXMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoxMjoyMlrOH_SmPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5MDQxOA==", "bodyText": "This will not modify the timout alone!\nIt will replace the protocol - so nothing is used from the original settings\nit is exactly this setting which is used\n(for VERIFY_SUSPECT there is not really a setting in defaults but it is worth to mention)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536090418", "createdAt": "2020-12-04T13:13:46Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_customizing_jgroups_stacks.adoc", "diffHunk": "@@ -0,0 +1,85 @@\n+[id='using_jgroups_inheritance-{context}']\n+= Customizing JGroups Stacks\n+Adjust and tune properties to create a cluster transport configuration that works for your network requirements.\n+\n+{brandname} provides attributes that let you extend the default JGroups stacks for easier configuration.\n+You can inherit properties from the default stacks while combining, removing, and replacing other properties.\n+\n+.Procedure\n+\n+. Create a new JGroups stack declaration in your `infinispan.xml` file.\n++\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan>\n+  <jgroups>\n+    <stack name=\"my-stack\"> <1>\n+    </stack>\n+  </jgroups>\n+</infinispan>\n+----\n++\n+<1> Creates a custom JGroups stack named \"my-stack\".\n++\n+. Add the `extends` attribute and specify a JGroups stack to inherit properties from.\n++\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan>\n+  <jgroups>\n+    <stack name=\"my-stack\" extends=\"tcp\"> <1>\n+    </stack>\n+  </jgroups>\n+</infinispan>\n+----\n++\n+<1> Inherits from the default TCP stack.\n++\n+. Use the `stack.combine` attribute to modify properties for protocols configured in the inherited stack.\n+. Use the `stack.position` attribute to define the location for your custom stack.\n++\n+For example, you might evaluate using a Gossip router and symmetric encryption with the default TCP stack as follows:\n++\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+include::config_examples/config_jgroups_extends.xml[]\n+----\n++\n+<1> Uses the `TCPGOSSIP` protocol as the discovery mechanism instead of `MPING`.\n+<2> Removes the `FD_SOCK` protocol from the stack.\n+<3> Modifies the timeout value for the `VERIFY_SUSPECT` protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA5MjU4Mw==", "bodyText": "With default tcp or udp configuration which uses multicast. Other settings might not discover nodes automatically.\nAlso the netword need to allow mcast", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536092583", "createdAt": "2020-12-04T13:17:27Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_forming_clusters.adoc", "diffHunk": "@@ -1,25 +1,25 @@\n [id='verify_cluster_discovery-{context}']\n-= Verifying {brandname} Cluster Discovery\n-{brandname} servers running on the same network discover each other with the\n-`MPING` protocol and automatically form clusters. This procedure demonstrates\n-that capability with two locally running {brandname} server instances.\n+= Verifying Cluster Views\n+{brandname} nodes on the same network automatically discover each other and form clusters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwNTI0OA==", "bodyText": "We should mention that port-offset use in production is not recommended.\nConsider that it might change only the infinispan ports (8.0) and the jgroups bind-port if ${jgroups.bind.port} is used in config (8.1.1) but FD_SOCK port is still random by default!\nSo -o is not always reliable and should be avoided in prod", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536105248", "createdAt": "2020-12-04T13:38:22Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_forming_clusters.adoc", "diffHunk": "@@ -1,25 +1,25 @@\n [id='verify_cluster_discovery-{context}']\n-= Verifying {brandname} Cluster Discovery\n-{brandname} servers running on the same network discover each other with the\n-`MPING` protocol and automatically form clusters. This procedure demonstrates\n-that capability with two locally running {brandname} server instances.\n+= Verifying Cluster Views\n+{brandname} nodes on the same network automatically discover each other and form clusters.\n+\n+Complete this procedure to observe cluster discovery with the `MPING` protocol in the default `TCP` stack with locally running {brandname} Server instances.\n+If you want to adjust cluster transport for custom network requirements, see the documentation for setting up {brandname} clusters.\n \n .Prerequisites\n \n-Start a locally running {brandname} server instance.\n+Have one instance of {brandname} Server running.\n \n .Procedure\n \n-. Create a new {brandname} server instance.\n-.. Open a terminal in `{server_home}`.\n-.. Copy the root directory to `server2`.\n+. Open a terminal in `{server_home}`.\n+. Copy the root directory to `server2`.\n +\n [source,options=\"nowrap\",subs=attributes+]\n ----\n $ cp -r server server2\n ----\n +\n-. Specify a port offset and the location of the `server2` root directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMTExNQ==", "bodyText": "would be a generic ispn-version better ?", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536121115", "createdAt": "2020-12-04T14:03:11Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_default.adoc", "diffHunk": "@@ -0,0 +1,57 @@\n+[id='jgroups_getting_started-{context}']\n+= Getting Started with Default Stacks\n+{brandname} uses JGroups protocol stacks so nodes can send each other messages on dedicated cluster channels.\n+\n+{brandname} provides preconfigured JGroups stacks for `UDP` and `TCP` protocols.\n+You can use these default stacks as a starting point for building custom cluster transport configuration that is optimized for your network requirements.\n+\n+.Procedure\n+\n+. Locate the default JGroups stacks, `default-jgroups-*.xml`, in the `default-configs` directory inside the `infinispan-core-{ispn_version}.jar` file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMjYxNg==", "bodyText": "Hint: that will only work if the infinispan.xml contains the transport expression stack=${infinispan.cluster.stack:XXX}", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536122616", "createdAt": "2020-12-04T14:05:31Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_default.adoc", "diffHunk": "@@ -0,0 +1,57 @@\n+[id='jgroups_getting_started-{context}']\n+= Getting Started with Default Stacks\n+{brandname} uses JGroups protocol stacks so nodes can send each other messages on dedicated cluster channels.\n+\n+{brandname} provides preconfigured JGroups stacks for `UDP` and `TCP` protocols.\n+You can use these default stacks as a starting point for building custom cluster transport configuration that is optimized for your network requirements.\n+\n+.Procedure\n+\n+. Locate the default JGroups stacks, `default-jgroups-*.xml`, in the `default-configs` directory inside the `infinispan-core-{ispn_version}.jar` file.\n+ifdef::server_mode[]\n++\n+The `jar` file is in the `{server_home}/lib` directory.\n++\n+endif::server_mode[]\n+. Do one of the following:\n+\n+* Use the `stack` attribute in your `infinispan.xml` file.\n++\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+include::config_examples/config_transport_stack.xml[]\n+----\n+<1> Uses `default-jgroups-udp.xml` for cluster transport.\n+\n+ifdef::embedded_mode[]\n+* Use the `addProperty()` method to set the JGroups stack file:\n++\n+[source,java]\n+----\n+include::code_examples/ConfigureTransportDefault.java[]\n+----\n+<1> Uses the `default-jgroups-udp.xml` stack for cluster transport.\n+endif::embedded_mode[]\n+\n+ifdef::server_mode[]\n+* Use the `cluster-stack` argument when you start the server:\n++\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+$ bin/server.sh --cluster-stack=udp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyNTYyOQ==", "bodyText": "TIP  from 12.0 there is a server.sh -P option to collect all the -D stuff\nMaybe there is a better location to mention that ;)", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536125629", "createdAt": "2020-12-04T14:10:11Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/proc_using_jgroups_system_properties.adoc", "diffHunk": "@@ -0,0 +1,30 @@\n+[id='using_jgroups_system_properties-{context}']\n+= Using JGroups System Properties\n+Pass system properties to {brandname} at startup to tune cluster transport.\n+\n+.Procedure\n+\n+* Use `-D<property-name>=<property-value>` arguments to set JGroups system properties as required.\n+\n+For example, set a custom bind port and IP address as follows:\n+\n+ifdef::embedded_mode[]\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+$ java -cp ... -Djgroups.bind.port=1234 -Djgroups.bind.address=192.0.2.0\n+----\n+\n+[NOTE]\n+====\n+When you embed {brandname} clusters in clustered {wildflybrandname} applications, JGroups system properties can clash or override each other.\n+\n+For example, you do not set a unique bind address for either your {brandname} cluster or your {wildflybrandname} application.\n+In this case both {brandname} and your {wildflybrandname} application use the JGroups default property and attempt to form clusters using the same bind address.\n+====\n+endif::embedded_mode[]\n+ifdef::server_mode[]\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+$ bin/server.sh -Djgroups.bind.port=1234 -Djgroups.bind.address=192.0.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyNzAzNg==", "bodyText": "We should mention that without such attributes the protocol is replaced completely", "url": "https://github.com/infinispan/infinispan/pull/8876#discussion_r536127036", "createdAt": "2020-12-04T14:12:22Z", "author": {"login": "wfink"}, "path": "documentation/src/main/asciidoc/topics/ref_jgroups_inheritance_attributes.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+[id='jgroups_inheritance_attributes-{context}']\n+= Inheritance Attributes\n+When you extend a JGroups stack, inheritance attributes let you adjust protocols and properties in the stack you are extending.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8aa537394c23f8efe5b4f32cdfa7f81a6a13f3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8b4d1cede7f710cec35bedbf8546d1c8c907b7", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/2f8b4d1cede7f710cec35bedbf8546d1c8c907b7", "committedDate": "2020-12-04T16:27:54Z", "message": "ISPN-12448 JGroups documentation revisited"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6dd262c08ff0b6d842a809fdb02d135cb0f9db70", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/6dd262c08ff0b6d842a809fdb02d135cb0f9db70", "committedDate": "2020-12-04T16:24:27Z", "message": "Wolf's feedback"}, "afterCommit": {"oid": "2f8b4d1cede7f710cec35bedbf8546d1c8c907b7", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/2f8b4d1cede7f710cec35bedbf8546d1c8c907b7", "committedDate": "2020-12-04T16:27:54Z", "message": "ISPN-12448 JGroups documentation revisited"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 308, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}