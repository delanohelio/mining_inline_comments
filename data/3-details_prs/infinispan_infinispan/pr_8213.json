{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjA3NDA0", "number": 8213, "title": "ISPN-11675 ComponentAnnotationProcessor exception hides compilation error", "bodyText": "https://issues.redhat.com/browse/ISPN-11675", "createdAt": "2020-04-17T15:44:21Z", "url": "https://github.com/infinispan/infinispan/pull/8213", "merged": true, "mergeCommit": {"oid": "3c6e9eeceaab6aa4d6a4e28b777a1349ba083f32"}, "closed": true, "closedAt": "2020-05-01T12:41:59Z", "author": {"login": "danberindei"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZEKL0AFqTM5NTk4MDQzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaEdTAABqjMyNTk1NzQ1MjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTgwNDM0", "url": "https://github.com/infinispan/infinispan/pull/8213#pullrequestreview-395980434", "createdAt": "2020-04-19T06:04:56Z", "commit": {"oid": "a6c75c18f6500daea1918e784892236ce7232102"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNjowNDo1NlrOGHy3og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNjowNDo1NlrOGHy3og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgyNjY1OA==", "bodyText": "ava.lang ? :)", "url": "https://github.com/infinispan/infinispan/pull/8213#discussion_r410826658", "createdAt": "2020-04-19T06:04:56Z", "author": {"login": "anistor"}, "path": "component-processor/src/main/java/org/infinispan/component/processor/ComponentAnnotationProcessor.java", "diffHunk": "@@ -198,6 +200,18 @@ private void parseGeneratedSources(ModelBuilder modelBuilder) throws IOException\n       modelBuilder.setModuleClass(moduleClassElement, moduleAnnotation, classPrefix);\n    }\n \n+   private <A extends Annotation> A getAnnotation(AnnotatedConstruct moduleClassElement, Class<A> annotationType) {\n+      try {\n+         return moduleClassElement.getAnnotation(annotationType);\n+      } catch (ClassCastException e) {\n+         // The annotation has unresolved values\n+         // ava.lang.ClassCastException: class com.sun.tools.javac.code.Attribute$UnresolvedClass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75c18f6500daea1918e784892236ce7232102"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTgwNTM2", "url": "https://github.com/infinispan/infinispan/pull/8213#pullrequestreview-395980536", "createdAt": "2020-04-19T06:06:44Z", "commit": {"oid": "a6c75c18f6500daea1918e784892236ce7232102"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNjowNjo0NFrOGHy4qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNjowNjo0NFrOGHy4qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgyNjkyMA==", "bodyText": "I wonder if making this an error rather than an info would improve the experience. I do realize that once this happens here the build will certainly fail later for other module-related reasons, but maybe it would be good to ensure these errors are not silent.", "url": "https://github.com/infinispan/infinispan/pull/8213#discussion_r410826920", "createdAt": "2020-04-19T06:06:44Z", "author": {"login": "anistor"}, "path": "component-processor/src/main/java/org/infinispan/component/processor/ComponentAnnotationProcessor.java", "diffHunk": "@@ -168,12 +169,13 @@ private void parseGeneratedSources(ModelBuilder modelBuilder) throws IOException\n       }\n \n       TypeElement moduleClassElement = elements().getTypeElement(moduleClassAndPackages.getKey());\n-      if (moduleClassElement == null || moduleClassElement.getAnnotation(InfinispanModule.class) == null) {\n+      InfinispanModule moduleAnnotation = moduleClassElement != null ?\n+                                          getAnnotation(moduleClassElement, InfinispanModule.class) : null;\n+      if (moduleAnnotation == null) {\n          info(null, \"Ignoring invalid module implementation %s\", moduleImplementationName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c75c18f6500daea1918e784892236ce7232102"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdeb319984433c16bc029068421224a16c3672b0", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/bdeb319984433c16bc029068421224a16c3672b0", "committedDate": "2020-04-22T08:59:36Z", "message": "ISPN-11675 ComponentAnnotationProcessor exception hides compilation error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6c75c18f6500daea1918e784892236ce7232102", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/a6c75c18f6500daea1918e784892236ce7232102", "committedDate": "2020-04-17T15:32:38Z", "message": "ISPN-11675 ComponentAnnotationProcessor exception hides compilation error"}, "afterCommit": {"oid": "bdeb319984433c16bc029068421224a16c3672b0", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/bdeb319984433c16bc029068421224a16c3672b0", "committedDate": "2020-04-22T08:59:36Z", "message": "ISPN-11675 ComponentAnnotationProcessor exception hides compilation error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 872, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}