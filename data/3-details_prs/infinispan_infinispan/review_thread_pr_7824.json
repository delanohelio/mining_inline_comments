{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDIxNjAw", "number": 7824, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMTo1OFrODdQ57A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozNTo1OFrODdQ_EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDEyMjY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/remoting/transport/Transport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMTo1OFrOFlxBMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMTo1OFrOFlxBMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NDc1Mw==", "bodyText": "tis", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375144753", "createdAt": "2020-02-05T09:31:58Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/remoting/transport/Transport.java", "diffHunk": "@@ -247,6 +248,18 @@ public boolean needMoreResponses() {\n     */\n    boolean isMulticastCapable();\n \n+   /**\n+    * Checks if this {@link Transport} is able to perform cross-site requests.\n+    *\n+    * @throws CacheConfigurationException if cross-site isn't available.\n+    */\n+   void checkCrossSiteAvailable() throws CacheConfigurationException;\n+\n+   /**\n+    * @return The local site name or {@code null} if tis {@link Transport} cannot make cross-site requests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDEyNTExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMjo0NVrOFlxCoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo0ODozMlrOFlxiCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NTEyMA==", "bodyText": "can throw nullpointer if called without the check", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375145120", "createdAt": "2020-02-05T09:32:45Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -418,6 +418,18 @@ public boolean isMulticastCapable() {\n       return channel.getProtocolStack().getTransport().supportsMulticasting();\n    }\n \n+   @Override\n+   public void checkCrossSiteAvailable() throws CacheConfigurationException {\n+      if (findRelay2() == null) {\n+         throw CLUSTER.crossSiteUnavailable();\n+      }\n+   }\n+\n+   @Override\n+   public String localSiteName() {\n+      return findRelay2().site();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1MzE2MQ==", "bodyText": "nice catch!", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375153161", "createdAt": "2020-02-05T09:48:32Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -418,6 +418,18 @@ public boolean isMulticastCapable() {\n       return channel.getProtocolStack().getTransport().supportsMulticasting();\n    }\n \n+   @Override\n+   public void checkCrossSiteAvailable() throws CacheConfigurationException {\n+      if (findRelay2() == null) {\n+         throw CLUSTER.crossSiteUnavailable();\n+      }\n+   }\n+\n+   @Override\n+   public String localSiteName() {\n+      return findRelay2().site();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NTEyMA=="}, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDEzMDgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/xsite/BackupSenderImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozNDozMFrOFlxF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMTo0MzoxN1rOFl04MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NTk3OA==", "bodyText": "can't we just do this check inside the localSiteName and cal the localSiteName method here ?", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375145978", "createdAt": "2020-02-05T09:34:30Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/xsite/BackupSenderImpl.java", "diffHunk": "@@ -123,13 +123,14 @@ private static boolean isCommunicationError(Throwable throwable) {\n \n    private enum BackupFilter {KEEP_1PC_ONLY, KEEP_2PC_ONLY, KEEP_ALL}\n \n-   public BackupSenderImpl(String localSiteName) {\n-      this.localSiteName = localSiteName;\n+   public BackupSenderImpl() {\n    }\n \n    @Start\n    public void start() {\n+      transport.checkCrossSiteAvailable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1MjA2MQ==", "bodyText": "wouldn't that be bad for the console?\neach time you invoke localSiteName() it will throw an exception if JGroups isn't configured with RELAY2", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375152061", "createdAt": "2020-02-05T09:46:29Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/xsite/BackupSenderImpl.java", "diffHunk": "@@ -123,13 +123,14 @@ private static boolean isCommunicationError(Throwable throwable) {\n \n    private enum BackupFilter {KEEP_1PC_ONLY, KEEP_2PC_ONLY, KEEP_ALL}\n \n-   public BackupSenderImpl(String localSiteName) {\n-      this.localSiteName = localSiteName;\n+   public BackupSenderImpl() {\n    }\n \n    @Start\n    public void start() {\n+      transport.checkCrossSiteAvailable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NTk3OA=="}, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIwNzk4NA==", "bodyText": "ok", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375207984", "createdAt": "2020-02-05T11:43:17Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/xsite/BackupSenderImpl.java", "diffHunk": "@@ -123,13 +123,14 @@ private static boolean isCommunicationError(Throwable throwable) {\n \n    private enum BackupFilter {KEEP_1PC_ONLY, KEEP_2PC_ONLY, KEEP_ALL}\n \n-   public BackupSenderImpl(String localSiteName) {\n-      this.localSiteName = localSiteName;\n+   public BackupSenderImpl() {\n    }\n \n    @Start\n    public void start() {\n+      transport.checkCrossSiteAvailable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NTk3OA=="}, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDEzMjcxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/remoting/transport/MockTransport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozNTowNFrOFlxHFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo0Njo1N1rOFlxevw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NjI2Mw==", "bodyText": "for me we only need a method (maybe I'm missing something)", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375146263", "createdAt": "2020-02-05T09:35:04Z", "author": {"login": "karesti"}, "path": "core/src/test/java/org/infinispan/remoting/transport/MockTransport.java", "diffHunk": "@@ -249,6 +250,16 @@ public boolean isMulticastCapable() {\n       return true;\n    }\n \n+   @Override\n+   public void checkCrossSiteAvailable() throws CacheConfigurationException {\n+\n+   }\n+\n+   @Override\n+   public String localSiteName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1MjMxOQ==", "bodyText": "not sure what do you mean here :(", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375152319", "createdAt": "2020-02-05T09:46:57Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/remoting/transport/MockTransport.java", "diffHunk": "@@ -249,6 +250,16 @@ public boolean isMulticastCapable() {\n       return true;\n    }\n \n+   @Override\n+   public void checkCrossSiteAvailable() throws CacheConfigurationException {\n+\n+   }\n+\n+   @Override\n+   public String localSiteName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NjI2Mw=="}, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDEzNTg1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/xsite/XSiteFileParsingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozNTo1OFrOFlxI7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozNTo1OFrOFlxI7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0NjczMg==", "bodyText": "use one method", "url": "https://github.com/infinispan/infinispan/pull/7824#discussion_r375146732", "createdAt": "2020-02-05T09:35:58Z", "author": {"login": "karesti"}, "path": "core/src/test/java/org/infinispan/xsite/XSiteFileParsingTest.java", "diffHunk": "@@ -25,12 +26,12 @@\n \n    @Override\n    protected EmbeddedCacheManager createCacheManager() throws Exception {\n-      return TestCacheManagerFactory.fromXml(FILE_NAME);\n+      return TestCacheManagerFactory.fromXml(FILE_NAME, false, true, TransportFlags.minimalXsiteFlags());\n    }\n \n-   public void testGlobalConfiguration() {\n-      GlobalConfiguration cmc = cacheManager.getCacheManagerConfiguration();\n-      assertEquals(\"LON\", cmc.sites().localSite());\n+   public void testLocalSiteName() {\n+      cacheManager.getTransport().checkCrossSiteAvailable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a26583d54ca77396b5f7d74806ae8c75817d3a"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4557, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}