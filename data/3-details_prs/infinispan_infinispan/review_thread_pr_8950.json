{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MDY5ODc4", "number": 8950, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjo0NTozMlrOFIJS2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjo0NjoxM1rOFIJTpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDg1MjA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/parsing/CacheParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjo0NTozMlrOIJ59ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjo0NTozMlrOIJ59ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI1NzcwMQ==", "bodyText": "instead of passing null as a parameter, could we use overloading in ParseUtils ?", "url": "https://github.com/infinispan/infinispan/pull/8950#discussion_r547257701", "createdAt": "2020-12-22T12:45:32Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/CacheParser.java", "diffHunk": "@@ -884,7 +885,7 @@ private final void parseTransaction(XMLExtendedStreamReader reader, Configuratio\n             }\n             case TRANSACTION_PROTOCOL: {\n                if (reader.getSchema().since(11, 0)) {\n-                  throw ParseUtils.unexpectedAttribute(reader, attribute.getLocalName());\n+                  throw ParseUtils.attributeRemoved(reader, i, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ef23273b0bc47c77102f34ac5b0eb39e500dbb"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDg1NDE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/parsing/ParseUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjo0NjoxM1rOIJ5-ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMDozNzoxMVrOIKIf6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI1Nzk5NA==", "bodyText": "I don't like the null attribute. why not having two methods ?", "url": "https://github.com/infinispan/infinispan/pull/8950#discussion_r547257994", "createdAt": "2020-12-22T12:46:13Z", "author": {"login": "karesti"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/ParseUtils.java", "diffHunk": "@@ -322,11 +322,33 @@ public static String requireAttributeProperty(final XMLStreamReader reader, int\n         }\n     }\n \n-    public static void ignoreAttribute(XMLExtendedStreamReader reader, Enum<?> attribute) {\n-       CONFIG.ignoreXmlAttribute(attribute, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n+    public static void ignoreAttribute(XMLExtendedStreamReader reader, String attributeName) {\n+       CONFIG.ignoreXmlAttribute(attributeName, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n+    }\n+\n+    public static void ignoreAttribute(XMLExtendedStreamReader reader, int attributeIndex) {\n+        ignoreAttribute(reader, reader.getAttributeName(attributeIndex).getLocalPart());\n     }\n \n     public static void ignoreElement(XMLExtendedStreamReader reader, Enum<?> element) {\n        CONFIG.ignoreXmlElement(element, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n     }\n+\n+    public static XMLStreamException elementRemoved(XMLExtendedStreamReader reader, String newElementName) {\n+        if (newElementName != null) {\n+            return CONFIG.elementRemovedUseOther(reader.getLocalName(), newElementName, reader.getLocation());\n+        } else {\n+            return CONFIG.elementRemoved(reader.getLocalName(), reader.getLocation());\n+        }\n+    }\n+\n+    public static XMLStreamException attributeRemoved(XMLExtendedStreamReader reader, int attributeIndex,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ef23273b0bc47c77102f34ac5b0eb39e500dbb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ5NTkxNA==", "bodyText": "Lazyness :)", "url": "https://github.com/infinispan/infinispan/pull/8950#discussion_r547495914", "createdAt": "2020-12-22T20:37:11Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/ParseUtils.java", "diffHunk": "@@ -322,11 +322,33 @@ public static String requireAttributeProperty(final XMLStreamReader reader, int\n         }\n     }\n \n-    public static void ignoreAttribute(XMLExtendedStreamReader reader, Enum<?> attribute) {\n-       CONFIG.ignoreXmlAttribute(attribute, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n+    public static void ignoreAttribute(XMLExtendedStreamReader reader, String attributeName) {\n+       CONFIG.ignoreXmlAttribute(attributeName, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n+    }\n+\n+    public static void ignoreAttribute(XMLExtendedStreamReader reader, int attributeIndex) {\n+        ignoreAttribute(reader, reader.getAttributeName(attributeIndex).getLocalPart());\n     }\n \n     public static void ignoreElement(XMLExtendedStreamReader reader, Enum<?> element) {\n        CONFIG.ignoreXmlElement(element, reader.getLocation().getLineNumber(), reader.getLocation().getColumnNumber());\n     }\n+\n+    public static XMLStreamException elementRemoved(XMLExtendedStreamReader reader, String newElementName) {\n+        if (newElementName != null) {\n+            return CONFIG.elementRemovedUseOther(reader.getLocalName(), newElementName, reader.getLocation());\n+        } else {\n+            return CONFIG.elementRemoved(reader.getLocalName(), reader.getLocation());\n+        }\n+    }\n+\n+    public static XMLStreamException attributeRemoved(XMLExtendedStreamReader reader, int attributeIndex,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI1Nzk5NA=="}, "originalCommit": {"oid": "79ef23273b0bc47c77102f34ac5b0eb39e500dbb"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3744, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}