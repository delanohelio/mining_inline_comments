{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTMyNDMw", "number": 7788, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMTo0OFrODctgxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzozMjowNlrODcttoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDMyMzg4OnYy", "diffSide": "RIGHT", "path": "commons/src/main/java/org/infinispan/commons/marshall/ProtoStreamTypeIds.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMTo0OFrOFk5XWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzozNjoyNlrOFk50KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjkyMA==", "bodyText": "This is much simpler than +5 etc. I'll update the class to use this approach for all values in the future.", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374232920", "createdAt": "2020-02-03T17:21:48Z", "author": {"login": "ryanemerson"}, "path": "commons/src/main/java/org/infinispan/commons/marshall/ProtoStreamTypeIds.java", "diffHunk": "@@ -78,10 +78,12 @@\n    int FILE_READ_LOCK_KEY = LUCENE_LOWER_BOUND + 4;\n    int FILE_LIST_CACHE_VALUE = LUCENE_LOWER_BOUND + 5;\n \n-   // Scripting 4800 -> 4999\n+   // Tasks + Scripting 4800 -> 4999\n    int SCRIPTING_LOWER_BOUND = LUCENE_LOWER_BOUND + 200;\n    int EXECUTION_MODE = SCRIPTING_LOWER_BOUND;\n    int SCRIPT_METADATA = SCRIPTING_LOWER_BOUND + 1;\n+   int DISTRIBUTED_SERVER_TASK = SCRIPT_METADATA + 1;\n+   int DISTRIBUTED_SERVER_TASK_PARAMETER = DISTRIBUTED_SERVER_TASK + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0MDI5Ng==", "bodyText": "You just can't comment them out arbitrarily anymore though :D", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374240296", "createdAt": "2020-02-03T17:36:26Z", "author": {"login": "wburns"}, "path": "commons/src/main/java/org/infinispan/commons/marshall/ProtoStreamTypeIds.java", "diffHunk": "@@ -78,10 +78,12 @@\n    int FILE_READ_LOCK_KEY = LUCENE_LOWER_BOUND + 4;\n    int FILE_LIST_CACHE_VALUE = LUCENE_LOWER_BOUND + 5;\n \n-   // Scripting 4800 -> 4999\n+   // Tasks + Scripting 4800 -> 4999\n    int SCRIPTING_LOWER_BOUND = LUCENE_LOWER_BOUND + 200;\n    int EXECUTION_MODE = SCRIPTING_LOWER_BOUND;\n    int SCRIPT_METADATA = SCRIPTING_LOWER_BOUND + 1;\n+   int DISTRIBUTED_SERVER_TASK = SCRIPT_METADATA + 1;\n+   int DISTRIBUTED_SERVER_TASK_PARAMETER = DISTRIBUTED_SERVER_TASK + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjkyMA=="}, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDMzMjQ1OnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/Extensions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyNDoyOVrOFk5clw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMToxNzowOFrOFlAPPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNDI2Mw==", "bodyText": "Is this an old comment? It doesn't seem to belong here anymore.", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374234263", "createdAt": "2020-02-03T17:24:29Z", "author": {"login": "ryanemerson"}, "path": "server/runtime/src/main/java/org/infinispan/server/Extensions.java", "diffHunk": "@@ -84,6 +84,7 @@ private void loadServerTasks(ClassLoader classLoader) {\n    }\n \n    public TaskEngine getServerTaskEngine(EmbeddedCacheManager cm) {\n+      // Create marshallers for all tasks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTUzNQ==", "bodyText": "Removed", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345535", "createdAt": "2020-02-03T21:17:08Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/Extensions.java", "diffHunk": "@@ -84,6 +84,7 @@ private void loadServerTasks(ClassLoader classLoader) {\n    }\n \n    public TaskEngine getServerTaskEngine(EmbeddedCacheManager cm) {\n+      // Create marshallers for all tasks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNDI2Mw=="}, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDM0OTExOnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/DistributedServerTaskRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyOTo1MlrOFk5nDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMToxNzowMFrOFlAPCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNjk0MA==", "bodyText": "Class variable serverTaskEngine is never used, so we can remove the constructor.", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374236940", "createdAt": "2020-02-03T17:29:52Z", "author": {"login": "ryanemerson"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/DistributedServerTaskRunner.java", "diffHunk": "@@ -36,8 +38,9 @@ public DistributedServerTaskRunner(ServerTaskEngine serverTaskEngine) {\n             results.add(v);\n          }\n       };\n-      CompletableFuture<Void> future = clusterExecutor.submitConsumer(new DistributedServerTask<>(\n-            masterCacheNode.getName(), taskName, context.getParameters()), triConsumer);\n+      List<TaskParameter> taskParams = context.getParameters().orElse(Collections.emptyMap()).entrySet().stream().map(e -> new TaskParameter(e.getKey(), e.getValue().toString())).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTQ4MQ==", "bodyText": "Removed", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345481", "createdAt": "2020-02-03T21:17:00Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/DistributedServerTaskRunner.java", "diffHunk": "@@ -36,8 +38,9 @@ public DistributedServerTaskRunner(ServerTaskEngine serverTaskEngine) {\n             results.add(v);\n          }\n       };\n-      CompletableFuture<Void> future = clusterExecutor.submitConsumer(new DistributedServerTask<>(\n-            masterCacheNode.getName(), taskName, context.getParameters()), triConsumer);\n+      List<TaskParameter> taskParams = context.getParameters().orElse(Collections.emptyMap()).entrySet().stream().map(e -> new TaskParameter(e.getKey(), e.getValue().toString())).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNjk0MA=="}, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDM1MjQ3OnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/PersistenceContextInitializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzozMDo1MVrOFk5pGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMToxNjo1MlrOFlAO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNzQ2NQ==", "bodyText": "Can be package-private", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374237465", "createdAt": "2020-02-03T17:30:51Z", "author": {"login": "ryanemerson"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/PersistenceContextInitializer.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.protostream.SerializationContextInitializer;\n+import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n+\n+/**\n+ * Interface used to initialise a {@link org.infinispan.protostream.SerializationContext} using the specified Pojos,\n+ * Marshaller implementations and provided .proto schemas.\n+ *\n+ * @author Tristan Tarrant\n+ * @since 11.0\n+ */\n+@AutoProtoSchemaBuilder(\n+      includeClasses = {\n+            TaskParameter.class,\n+            DistributedServerTask.class\n+      },\n+      schemaFileName = \"persistence.servertasks.proto\",\n+      schemaFilePath = \"proto/generated\",\n+      schemaPackageName = \"org.infinispan.persistence.servertasks\")\n+public interface PersistenceContextInitializer extends SerializationContextInitializer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTQyNA==", "bodyText": "Done", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345424", "createdAt": "2020-02-03T21:16:52Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/PersistenceContextInitializer.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.protostream.SerializationContextInitializer;\n+import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;\n+\n+/**\n+ * Interface used to initialise a {@link org.infinispan.protostream.SerializationContext} using the specified Pojos,\n+ * Marshaller implementations and provided .proto schemas.\n+ *\n+ * @author Tristan Tarrant\n+ * @since 11.0\n+ */\n+@AutoProtoSchemaBuilder(\n+      includeClasses = {\n+            TaskParameter.class,\n+            DistributedServerTask.class\n+      },\n+      schemaFileName = \"persistence.servertasks.proto\",\n+      schemaFilePath = \"proto/generated\",\n+      schemaPackageName = \"org.infinispan.persistence.servertasks\")\n+public interface PersistenceContextInitializer extends SerializationContextInitializer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzNzQ2NQ=="}, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDM1NjgxOnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/tasks/TaskParameter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzozMjowNlrOFk5ruw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMToxNjo0NVrOFlAOmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzODEzOQ==", "bodyText": "Class and constructor can be package-private as only used internally.", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374238139", "createdAt": "2020-02-03T17:32:06Z", "author": {"login": "ryanemerson"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/TaskParameter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.commons.marshall.ProtoStreamTypeIds;\n+import org.infinispan.protostream.annotations.ProtoFactory;\n+import org.infinispan.protostream.annotations.ProtoField;\n+import org.infinispan.protostream.annotations.ProtoTypeId;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@ProtoTypeId(ProtoStreamTypeIds.DISTRIBUTED_SERVER_TASK_PARAMETER)\n+public class TaskParameter {\n+   @ProtoField(number = 1)\n+   String key;\n+\n+   @ProtoField(number = 2)\n+   String value;\n+\n+   @ProtoFactory\n+   public TaskParameter(String key, String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM0NTM2OA==", "bodyText": "Fixed", "url": "https://github.com/infinispan/infinispan/pull/7788#discussion_r374345368", "createdAt": "2020-02-03T21:16:45Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/tasks/TaskParameter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.infinispan.server.tasks;\n+\n+import org.infinispan.commons.marshall.ProtoStreamTypeIds;\n+import org.infinispan.protostream.annotations.ProtoFactory;\n+import org.infinispan.protostream.annotations.ProtoField;\n+import org.infinispan.protostream.annotations.ProtoTypeId;\n+\n+/**\n+ * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n+ * @since 11.0\n+ **/\n+@ProtoTypeId(ProtoStreamTypeIds.DISTRIBUTED_SERVER_TASK_PARAMETER)\n+public class TaskParameter {\n+   @ProtoField(number = 1)\n+   String key;\n+\n+   @ProtoField(number = 2)\n+   String value;\n+\n+   @ProtoFactory\n+   public TaskParameter(String key, String value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzODEzOQ=="}, "originalCommit": {"oid": "fcfd2a4b6fa44964bd0e4f4ecad4b2a90b6944ef"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4529, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}