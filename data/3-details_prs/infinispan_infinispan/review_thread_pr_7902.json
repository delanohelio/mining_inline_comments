{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MDUwMjEy", "number": 7902, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozODowNVrODgXBQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozODo1MlrODgXCIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjU4MTc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/util/concurrent/ConditionFuture.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozODowNVrOFqhc0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTozMjo1M1rOFqodoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjU2MQ==", "bodyText": "why not use new ArrayList<>(futures.values());", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380132561", "createdAt": "2020-02-17T11:38:05Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/util/concurrent/ConditionFuture.java", "diffHunk": "@@ -100,17 +100,19 @@ public void updateAsync(T value, Executor executor) {\n       try {\n          executor.execute(() -> checkConditions(value));\n       } catch (Throwable t) {\n-         List<CompletableFuture<?>> completed;\n-         synchronized (futures) {\n-            completed = new ArrayList<>(futures.size());\n-            for (Data data : futures.values()) {\n-               data.cancelFuture.cancel(false);\n-               completed.add(data);\n-            }\n-         }\n-         for (CompletableFuture<?> future : completed) {\n-            future.completeExceptionally(t);\n-         }\n+         completeAllExceptionally(t);\n+      }\n+   }\n+\n+   private void completeAllExceptionally(Throwable t) {\n+      List<Data> completed;\n+      synchronized (futures) {\n+         completed = new ArrayList<>(futures.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7ef234f5ed4467a3d002eadeb82df69cd960b1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NzQ1Ng==", "bodyText": "Done", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380247456", "createdAt": "2020-02-17T15:32:53Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/util/concurrent/ConditionFuture.java", "diffHunk": "@@ -100,17 +100,19 @@ public void updateAsync(T value, Executor executor) {\n       try {\n          executor.execute(() -> checkConditions(value));\n       } catch (Throwable t) {\n-         List<CompletableFuture<?>> completed;\n-         synchronized (futures) {\n-            completed = new ArrayList<>(futures.size());\n-            for (Data data : futures.values()) {\n-               data.cancelFuture.cancel(false);\n-               completed.add(data);\n-            }\n-         }\n-         for (CompletableFuture<?> future : completed) {\n-            future.completeExceptionally(t);\n-         }\n+         completeAllExceptionally(t);\n+      }\n+   }\n+\n+   private void completeAllExceptionally(Throwable t) {\n+      List<Data> completed;\n+      synchronized (futures) {\n+         completed = new ArrayList<>(futures.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjU2MQ=="}, "originalCommit": {"oid": "8f7ef234f5ed4467a3d002eadeb82df69cd960b1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjU4NDAyOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/test/Exceptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozODo1MlrOFqheKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozODo1MlrOFqheKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMjkwNA==", "bodyText": "unused import.", "url": "https://github.com/infinispan/infinispan/pull/7902#discussion_r380132904", "createdAt": "2020-02-17T11:38:52Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/test/Exceptions.java", "diffHunk": "@@ -1,6 +1,8 @@\n package org.infinispan.test;\n \n import java.util.concurrent.Callable;\n+import java.util.concurrent.CompletionException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7ef234f5ed4467a3d002eadeb82df69cd960b1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4478, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}