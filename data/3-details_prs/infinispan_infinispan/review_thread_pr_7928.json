{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDcyMjk5", "number": 7928, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTozMzo1M1rODjbfuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTozMzo1M1rODjbfuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDc3MjQxOnYy", "diffSide": "LEFT", "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTozMzo1M1rOFvO4Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoyMTozNFrOFvXyVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg==", "bodyText": "Is there no other blocking CacheRpcCommand we could have used instead?", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385071142", "createdAt": "2020-02-27T11:33:53Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "diffHunk": "@@ -99,9 +96,6 @@ public void setUp() throws Throwable {\n       commandsFactory = extractCommandsFactory(cache);\n \n       //populate commands\n-      blockingCacheRpcCommand = new StreamRequestCommand<>(cacheName, null, null, false,\n-                                                           StreamRequestCommand.Type.TERMINAL, null, null, null, false,\n-                                                           false, mock(TerminalOperation.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNTQyMg==", "bodyText": "I tried a few, but couldn't find one that still passed the assertion. Do you know of one we could add back in? To be honest I would hope we would eventually get to a point where no command would block, as we would handle it in the interceptors.", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385115422", "createdAt": "2020-02-27T13:10:38Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "diffHunk": "@@ -99,9 +96,6 @@ public void setUp() throws Throwable {\n       commandsFactory = extractCommandsFactory(cache);\n \n       //populate commands\n-      blockingCacheRpcCommand = new StreamRequestCommand<>(cacheName, null, null, false,\n-                                                           StreamRequestCommand.Type.TERMINAL, null, null, null, false,\n-                                                           false, mock(TerminalOperation.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}, "originalCommit": {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEyNjA3NQ==", "bodyText": "CompleteTransactionCommand", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385126075", "createdAt": "2020-02-27T13:30:49Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "diffHunk": "@@ -99,9 +96,6 @@ public void setUp() throws Throwable {\n       commandsFactory = extractCommandsFactory(cache);\n \n       //populate commands\n-      blockingCacheRpcCommand = new StreamRequestCommand<>(cacheName, null, null, false,\n-                                                           StreamRequestCommand.Type.TERMINAL, null, null, null, false,\n-                                                           false, mock(TerminalOperation.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}, "originalCommit": {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxNzExMA==", "bodyText": "I created #7962 to use mocks for all command types, since the test is about InboundInvocationHandler.", "url": "https://github.com/infinispan/infinispan/pull/7928#discussion_r385217110", "createdAt": "2020-02-27T16:21:34Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/remoting/AsynchronousInvocationTest.java", "diffHunk": "@@ -99,9 +96,6 @@ public void setUp() throws Throwable {\n       commandsFactory = extractCommandsFactory(cache);\n \n       //populate commands\n-      blockingCacheRpcCommand = new StreamRequestCommand<>(cacheName, null, null, false,\n-                                                           StreamRequestCommand.Type.TERMINAL, null, null, null, false,\n-                                                           false, mock(TerminalOperation.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MTE0Mg=="}, "originalCommit": {"oid": "d3408d4fc4d162c6049d810bc56d9a54f567e6cc"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4488, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}