{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4Mjc4NTQ3", "number": 7795, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDoyMjoxNVrODb7nvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTo0NjozMlrODcCd1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjE0OTc0OnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDoyMjoxNVrOFjso1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNDoyMjoxNVrOFjso1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjk3NTgzMQ==", "bodyText": "the changes in this class aren't required.", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r372975831", "createdAt": "2020-01-30T14:22:15Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "diffHunk": "@@ -88,6 +88,7 @@\n    private String serverContextName;\n    private String defaultCacheName;\n    private boolean clientAuth;\n+   private ProtocolServerConfiguration configuration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fea0396b411300e75b348e5eb9877a10ff35a6e8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE1NzQ4OnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTowOTozM1rOFj2k6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNDo0N1rOFj3WwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzODY2Ng==", "bodyText": "this can be removed from here (the field too)\nAs soon as you do :stop-connector and :start-connector, this class keeps pointing to the old instance.\nThe metrics bytes read/written are never updated after the restart.", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373138666", "createdAt": "2020-01-30T19:09:33Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "diffHunk": "@@ -266,7 +266,7 @@ public synchronized ProtocolServer getValue() throws IllegalStateException {\n       return extensionManager;\n    }\n \n-    public Transport getTransport() {\n+   public Transport getTransport() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTQyNQ==", "bodyText": "Done !", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151425", "createdAt": "2020-01-30T19:34:47Z", "author": {"login": "tristantarrant"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerService.java", "diffHunk": "@@ -266,7 +266,7 @@ public synchronized ProtocolServer getValue() throws IllegalStateException {\n       return extensionManager;\n    }\n \n-    public Transport getTransport() {\n+   public Transport getTransport() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzODY2Ng=="}, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE2MDIxOnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToxMDoyMlrOFj2mmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNTowNVrOFj3XVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTA5OA==", "bodyText": "you need to get the Transport from the AbstractProtocolServer. The service, only keeps the first instance instantiated by the endpoint.", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139098", "createdAt": "2020-01-30T19:10:22Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java", "diffHunk": "@@ -84,6 +53,10 @@ protected void executeRuntimeStep(OperationContext context, ModelNode operation)\n          case BYTES_WRITTEN:\n             result.set(service.getTransport().getTotalBytesWritten());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTU3NA==", "bodyText": "Done", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151574", "createdAt": "2020-01-30T19:35:05Z", "author": {"login": "tristantarrant"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerMetricsHandler.java", "diffHunk": "@@ -84,6 +53,10 @@ protected void executeRuntimeStep(OperationContext context, ModelNode operation)\n          case BYTES_WRITTEN:\n             result.set(service.getTransport().getTotalBytesWritten());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTA5OA=="}, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE2MjA4OnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToxMTowMFrOFj2n5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNDo1N1rOFj3XCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTQzMA==", "bodyText": "You need to get the Transport from the RestServer. Same reason as above.", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139430", "createdAt": "2020-01-30T19:11:00Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2012-2013 Red Hat Inc. and/or its affiliates and other contributors\n+ * as indicated by the @author tags. All rights reserved.\n+ * See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use,\n+ * modify, copy, or redistribute it subject to the terms and conditions\n+ * of the GNU Lesser General Public License, v. 2.1.\n+ * This program is distributed in the hope that it will be useful, but WITHOUT A\n+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n+ * You should have received a copy of the GNU Lesser General Public License,\n+ * v.2.1 along with this distribution; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n+ * MA  02110-1301, USA.\n+ */\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.lifecycle.ComponentStatus;\n+import org.jboss.as.controller.AbstractRuntimeOnlyHandler;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.descriptions.ModelDescriptionConstants;\n+import org.jboss.as.controller.registry.ManagementResourceRegistration;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class RestMetricsHandler extends AbstractRuntimeOnlyHandler {\n+   final String name;\n+\n+   protected RestMetricsHandler(final String name) {\n+      this.name = name;\n+   }\n+\n+   @Override\n+   protected void executeRuntimeStep(OperationContext context, ModelNode operation) throws OperationFailedException {\n+      final String attrName = operation.require(ModelDescriptionConstants.NAME).asString();\n+      ProtocolServerMetrics metric = ProtocolServerMetrics.getStat(attrName);\n+      if (metric == null) {\n+         context.getFailureDescription().set(String.format(\"Unknown metric %s\", attrName));\n+      } else {\n+         final ServiceController<?> controller = context.getServiceRegistry(false)\n+               .getService(EndpointUtils.getServiceName(operation, name));\n+         RestService service = (RestService) controller.getService();\n+         ModelNode result = new ModelNode();\n+         switch (metric) {\n+            case BYTES_READ:\n+               result.set(service.getTransport().getTotalBytesRead());\n+               break;\n+            case BYTES_WRITTEN:\n+               result.set(service.getTransport().getTotalBytesWritten());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTQ5Nw==", "bodyText": "Done", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151497", "createdAt": "2020-01-30T19:34:57Z", "author": {"login": "tristantarrant"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestMetricsHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * JBoss, Home of Professional Open Source\n+ * Copyright 2012-2013 Red Hat Inc. and/or its affiliates and other contributors\n+ * as indicated by the @author tags. All rights reserved.\n+ * See the copyright.txt in the distribution for a\n+ * full listing of individual contributors.\n+ *\n+ * This copyrighted material is made available to anyone wishing to use,\n+ * modify, copy, or redistribute it subject to the terms and conditions\n+ * of the GNU Lesser General Public License, v. 2.1.\n+ * This program is distributed in the hope that it will be useful, but WITHOUT A\n+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n+ * You should have received a copy of the GNU Lesser General Public License,\n+ * v.2.1 along with this distribution; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n+ * MA  02110-1301, USA.\n+ */\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.lifecycle.ComponentStatus;\n+import org.jboss.as.controller.AbstractRuntimeOnlyHandler;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.descriptions.ModelDescriptionConstants;\n+import org.jboss.as.controller.registry.ManagementResourceRegistration;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class RestMetricsHandler extends AbstractRuntimeOnlyHandler {\n+   final String name;\n+\n+   protected RestMetricsHandler(final String name) {\n+      this.name = name;\n+   }\n+\n+   @Override\n+   protected void executeRuntimeStep(OperationContext context, ModelNode operation) throws OperationFailedException {\n+      final String attrName = operation.require(ModelDescriptionConstants.NAME).asString();\n+      ProtocolServerMetrics metric = ProtocolServerMetrics.getStat(attrName);\n+      if (metric == null) {\n+         context.getFailureDescription().set(String.format(\"Unknown metric %s\", attrName));\n+      } else {\n+         final ServiceController<?> controller = context.getServiceRegistry(false)\n+               .getService(EndpointUtils.getServiceName(operation, name));\n+         RestService service = (RestService) controller.getService();\n+         ModelNode result = new ModelNode();\n+         switch (metric) {\n+            case BYTES_READ:\n+               result.set(service.getTransport().getTotalBytesRead());\n+               break;\n+            case BYTES_WRITTEN:\n+               result.set(service.getTransport().getTotalBytesWritten());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTQzMA=="}, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE2NDE4OnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToxMTozNFrOFj2pEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNTozMlrOFj3YQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTcyOA==", "bodyText": "the Transport is the \"service\" isn't needed anymore and can be removed.", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373139728", "createdAt": "2020-01-30T19:11:34Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java", "diffHunk": "@@ -77,6 +79,7 @@\n    private final int maxContentLength;\n    private int compressionLevel;\n    private List<CorsConfig> corsConfigList;\n+   private Transport transport;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTgwOA==", "bodyText": "Done", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151808", "createdAt": "2020-01-30T19:35:32Z", "author": {"login": "tristantarrant"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/RestService.java", "diffHunk": "@@ -77,6 +79,7 @@\n    private final int maxContentLength;\n    private int compressionLevel;\n    private List<CorsConfig> corsConfigList;\n+   private Transport transport;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzOTcyOA=="}, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE3MjgxOnYy", "diffSide": "RIGHT", "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToxNDoyOVrOFj2ukQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTozNToyMVrOFj3X4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0MTEzNw==", "bodyText": "just curious: you could have used a single class to handle the start and stop connector right? or it wouldn't work?\nIt seems the only difference is the method invoked :)", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373141137", "createdAt": "2020-01-30T19:14:29Z", "author": {"login": "pruivo"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.server.core.AbstractProtocolServer;\n+import org.infinispan.server.core.configuration.ProtocolServerConfiguration;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.OperationStepHandler;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class ProtocolServerConnectorStartHandler implements OperationStepHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1MTcxMg==", "bodyText": "I've collapsed the classes into one", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373151712", "createdAt": "2020-01-30T19:35:21Z", "author": {"login": "tristantarrant"}, "path": "server/integration/endpoint/src/main/java/org/infinispan/server/endpoint/subsystem/ProtocolServerConnectorStartHandler.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.infinispan.server.endpoint.subsystem;\n+\n+import org.infinispan.server.core.AbstractProtocolServer;\n+import org.infinispan.server.core.configuration.ProtocolServerConfiguration;\n+import org.jboss.as.controller.OperationContext;\n+import org.jboss.as.controller.OperationFailedException;\n+import org.jboss.as.controller.OperationStepHandler;\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.msc.service.ServiceController;\n+\n+public class ProtocolServerConnectorStartHandler implements OperationStepHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0MTEzNw=="}, "originalCommit": {"oid": "85aedcbf9686a18bf9c05489e2beef144ef74fe9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzI3MTI2OnYy", "diffSide": "RIGHT", "path": "server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTo0NjozMlrOFj3tUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTo0ODoxNVrOFj3wrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1NzIwMw==", "bodyText": "I think you meant to have brackets encapsulate the entire rest of the method?", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373157203", "createdAt": "2020-01-30T19:46:32Z", "author": {"login": "wburns"}, "path": "server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java", "diffHunk": "@@ -112,6 +118,21 @@ protected void startTransport() {\n       }\n    }\n \n+   public void stopTransport() {\n+      if (transport != null && transportStatus == ComponentStatus.RUNNING)\n+         transport.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d55326fdba4870f74de2725de552851a0a5ce50"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1ODA2MQ==", "bodyText": "Repushed", "url": "https://github.com/infinispan/infinispan/pull/7795#discussion_r373158061", "createdAt": "2020-01-30T19:48:15Z", "author": {"login": "tristantarrant"}, "path": "server/core/src/main/java/org/infinispan/server/core/AbstractProtocolServer.java", "diffHunk": "@@ -112,6 +118,21 @@ protected void startTransport() {\n       }\n    }\n \n+   public void stopTransport() {\n+      if (transport != null && transportStatus == ComponentStatus.RUNNING)\n+         transport.stop();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE1NzIwMw=="}, "originalCommit": {"oid": "8d55326fdba4870f74de2725de552851a0a5ce50"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4536, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}