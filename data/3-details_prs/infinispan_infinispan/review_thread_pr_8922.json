{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0Mjg5NTMw", "number": 8922, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMDozOVrOFCetWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMjoyNFrOFCextg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTQ0NjAzOnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/assertion/JsonAssertion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMDozOVrOIBqe0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMDozOVrOIBqe0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNTUwNg==", "bodyText": "Should we do an assertNotNull here? That way it won't throw a NPE later.", "url": "https://github.com/infinispan/infinispan/pull/8922#discussion_r538615506", "createdAt": "2020-12-08T17:10:39Z", "author": {"login": "wburns"}, "path": "server/rest/src/test/java/org/infinispan/rest/assertion/JsonAssertion.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.infinispan.rest.assertion;\n+\n+import static org.testng.AssertJUnit.assertEquals;\n+import static org.testng.AssertJUnit.assertNull;\n+\n+import org.infinispan.commons.dataconversion.internal.Json;\n+\n+/**\n+ * Assertions on JSON contents.\n+ *\n+ * @author Dan Berindei\n+ * @since 12\n+ */\n+public class JsonAssertion {\n+   private Json node;\n+\n+   public JsonAssertion(Json node) {\n+      this.node = node;\n+   }\n+\n+   public JsonAssertion hasProperty(String propertyName) {\n+      return new JsonAssertion(node.at(propertyName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b8d6579cc8c82871352c449fc172a2638557da"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTQ1MzY0OnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/assertion/JsonAssertion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMTo1MlrOIBqjlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNjowNjoyNVrOIDqeAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNjcyNg==", "bodyText": "This shouldn't be needed if we change hasProperty to check for not null.", "url": "https://github.com/infinispan/infinispan/pull/8922#discussion_r538616726", "createdAt": "2020-12-08T17:11:52Z", "author": {"login": "wburns"}, "path": "server/rest/src/test/java/org/infinispan/rest/assertion/JsonAssertion.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.infinispan.rest.assertion;\n+\n+import static org.testng.AssertJUnit.assertEquals;\n+import static org.testng.AssertJUnit.assertNull;\n+\n+import org.infinispan.commons.dataconversion.internal.Json;\n+\n+/**\n+ * Assertions on JSON contents.\n+ *\n+ * @author Dan Berindei\n+ * @since 12\n+ */\n+public class JsonAssertion {\n+   private Json node;\n+\n+   public JsonAssertion(Json node) {\n+      this.node = node;\n+   }\n+\n+   public JsonAssertion hasProperty(String propertyName) {\n+      return new JsonAssertion(node.at(propertyName));\n+   }\n+\n+   public JsonAssertion hasNoProperty(String propertyName) {\n+      assertNull(node.at(propertyName));\n+      return this;\n+   }\n+\n+   public void is(int value) {\n+      assertEquals(value, node.asInteger());\n+   }\n+\n+   public void is(String value) {\n+      assertEquals(value, node.asString());\n+   }\n+\n+   public void isNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b8d6579cc8c82871352c449fc172a2638557da"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDcxMjQ1MQ==", "bodyText": "It is needed in order to distinguish {error: null} from {}.\nI just made a typo in the test and instead of fixing that I assumed that the property is parsed as null (it's actually a NullJson).", "url": "https://github.com/infinispan/infinispan/pull/8922#discussion_r540712451", "createdAt": "2020-12-11T06:06:25Z", "author": {"login": "danberindei"}, "path": "server/rest/src/test/java/org/infinispan/rest/assertion/JsonAssertion.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.infinispan.rest.assertion;\n+\n+import static org.testng.AssertJUnit.assertEquals;\n+import static org.testng.AssertJUnit.assertNull;\n+\n+import org.infinispan.commons.dataconversion.internal.Json;\n+\n+/**\n+ * Assertions on JSON contents.\n+ *\n+ * @author Dan Berindei\n+ * @since 12\n+ */\n+public class JsonAssertion {\n+   private Json node;\n+\n+   public JsonAssertion(Json node) {\n+      this.node = node;\n+   }\n+\n+   public JsonAssertion hasProperty(String propertyName) {\n+      return new JsonAssertion(node.at(propertyName));\n+   }\n+\n+   public JsonAssertion hasNoProperty(String propertyName) {\n+      assertNull(node.at(propertyName));\n+      return this;\n+   }\n+\n+   public void is(int value) {\n+      assertEquals(value, node.asInteger());\n+   }\n+\n+   public void is(String value) {\n+      assertEquals(value, node.asString());\n+   }\n+\n+   public void isNull() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNjcyNg=="}, "originalCommit": {"oid": "10b8d6579cc8c82871352c449fc172a2638557da"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTQ1NzE4OnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/assertion/ResponseAssertion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMjoyNFrOIBqlvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMjoyNFrOIBqlvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzI3OA==", "bodyText": "Use hasNoProperty instead?", "url": "https://github.com/infinispan/infinispan/pull/8922#discussion_r538617278", "createdAt": "2020-12-08T17:12:24Z", "author": {"login": "wburns"}, "path": "server/rest/src/test/java/org/infinispan/rest/assertion/ResponseAssertion.java", "diffHunk": "@@ -295,8 +295,12 @@ public ResponseAssertion expiresAfter(int expireDuration) {\n    }\n \n    public ResponseAssertion hasNoErrors() {\n-      Json node = Json.read(response.getBody());\n-      Assertions.assertThat(node.at(\"error\").isNull()).isTrue();\n+      hasJson().hasProperty(\"error\").isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b8d6579cc8c82871352c449fc172a2638557da"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3714, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}