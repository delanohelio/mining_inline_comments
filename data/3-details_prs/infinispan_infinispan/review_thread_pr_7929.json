{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjgyNjg1", "number": 7929, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1MjoxOVrODheqPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1MjoxOVrODheqPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDMxOTMzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1MjoxOVrOFsO0Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzo1NDoyOVrOFsUJQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNDQzOA==", "bodyText": "-1\nsending order is important. You need to use a single thread to send the request or you risk it to be reordered.", "url": "https://github.com/infinispan/infinispan/pull/7929#discussion_r381924438", "createdAt": "2020-02-20T10:52:19Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -326,13 +326,22 @@ public BackupResponse backupRemotely(Collection<XSiteBackup> backups, XSiteRepli\n          DeliverOrder order = xsb.isSync() ? DeliverOrder.NONE : DeliverOrder.PER_SENDER;\n          long timeout = xsb.getTimeout();\n          try {\n-            sendCommand(recipient, command, request.getRequestId(), order, rsvp, false, false);\n+            Message message = new Message(toJGroupsAddress(recipient));\n+            marshallRequest(message, command, request.getRequestId());\n+            setMessageFlags(message, order, rsvp, false);\n+\n+            remoteExecutor.submit(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c64842e33b2f75ff9b7398b55925d0f0852b238"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzQ3NQ==", "bodyText": "Oops :)", "url": "https://github.com/infinispan/infinispan/pull/7929#discussion_r381927475", "createdAt": "2020-02-20T10:58:18Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -326,13 +326,22 @@ public BackupResponse backupRemotely(Collection<XSiteBackup> backups, XSiteRepli\n          DeliverOrder order = xsb.isSync() ? DeliverOrder.NONE : DeliverOrder.PER_SENDER;\n          long timeout = xsb.getTimeout();\n          try {\n-            sendCommand(recipient, command, request.getRequestId(), order, rsvp, false, false);\n+            Message message = new Message(toJGroupsAddress(recipient));\n+            marshallRequest(message, command, request.getRequestId());\n+            setMessageFlags(message, order, rsvp, false);\n+\n+            remoteExecutor.submit(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNDQzOA=="}, "originalCommit": {"oid": "8c64842e33b2f75ff9b7398b55925d0f0852b238"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxMTcxNA==", "bodyText": "I added ActionSequencer when the commands need to be ordered", "url": "https://github.com/infinispan/infinispan/pull/7929#discussion_r382011714", "createdAt": "2020-02-20T13:54:29Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -326,13 +326,22 @@ public BackupResponse backupRemotely(Collection<XSiteBackup> backups, XSiteRepli\n          DeliverOrder order = xsb.isSync() ? DeliverOrder.NONE : DeliverOrder.PER_SENDER;\n          long timeout = xsb.getTimeout();\n          try {\n-            sendCommand(recipient, command, request.getRequestId(), order, rsvp, false, false);\n+            Message message = new Message(toJGroupsAddress(recipient));\n+            marshallRequest(message, command, request.getRequestId());\n+            setMessageFlags(message, order, rsvp, false);\n+\n+            remoteExecutor.submit(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNDQzOA=="}, "originalCommit": {"oid": "8c64842e33b2f75ff9b7398b55925d0f0852b238"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4491, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}