{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjAzMzI2", "number": 7942, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTozMjozM1rODifC7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTozMjozM1rODifC7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDg2ODI5OnYy", "diffSide": "RIGHT", "path": "javadoc/javadoc-all/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTozMjozM1rOFtwoMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo1MzoxOFrOFuG2UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNjk2Mg==", "bodyText": "have you tried to exclude the package?\nSee https://github.com/infinispan/infinispan/blob/master/javadoc/javadoc-all/pom.xml#L311\nit seems a better fix than add it as a dependency. AFAIK, it is only a test dependency, right?", "url": "https://github.com/infinispan/infinispan/pull/7942#discussion_r383526962", "createdAt": "2020-02-24T21:32:33Z", "author": {"login": "pruivo"}, "path": "javadoc/javadoc-all/pom.xml", "diffHunk": "@@ -235,6 +235,11 @@\n          <groupId>org.infinispan</groupId>\n          <artifactId>infinispan-scripting</artifactId>\n       </dependency>\n+\n+      <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085f2b3e4ce72d6f65373fb04ea336344ba199bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc2ODQxNA==", "bodyText": "@pruivo ideally our users would also use BlockHound and our integration would warn them when they use blocking methods in callbacks that should be non-blocking, like listeners, or even cache.putAsync(key, value).thenAccept(__ -> cache.put(key2, value2)", "url": "https://github.com/infinispan/infinispan/pull/7942#discussion_r383768414", "createdAt": "2020-02-25T09:49:57Z", "author": {"login": "danberindei"}, "path": "javadoc/javadoc-all/pom.xml", "diffHunk": "@@ -235,6 +235,11 @@\n          <groupId>org.infinispan</groupId>\n          <artifactId>infinispan-scripting</artifactId>\n       </dependency>\n+\n+      <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNjk2Mg=="}, "originalCommit": {"oid": "085f2b3e4ce72d6f65373fb04ea336344ba199bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg5MTAyNQ==", "bodyText": "Actually the more I think about it we may want to include the BlockHoundIntegration in the Javadoc so users can be aware of it. Thus I would say to keep this PR as is.", "url": "https://github.com/infinispan/infinispan/pull/7942#discussion_r383891025", "createdAt": "2020-02-25T13:53:18Z", "author": {"login": "wburns"}, "path": "javadoc/javadoc-all/pom.xml", "diffHunk": "@@ -235,6 +235,11 @@\n          <groupId>org.infinispan</groupId>\n          <artifactId>infinispan-scripting</artifactId>\n       </dependency>\n+\n+      <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNjk2Mg=="}, "originalCommit": {"oid": "085f2b3e4ce72d6f65373fb04ea336344ba199bc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4494, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}