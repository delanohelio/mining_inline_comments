{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMTg1OTQ2", "number": 8266, "title": "ISPN-11744 Fix ManagedConnectionOperations", "bodyText": "https://issues.redhat.com/browse/ISPN-11744", "createdAt": "2020-04-30T06:40:29Z", "url": "https://github.com/infinispan/infinispan/pull/8266", "merged": true, "mergeCommit": {"oid": "b5e57a3282352c2a350846932dd26bd2382ead93"}, "closed": true, "closedAt": "2020-05-06T17:09:15Z", "author": {"login": "tristantarrant"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccnROAABqjMyODc3ODE4NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceqj8agFqTQwNjczOTkwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0aef28e3d7ddfb23a6d0d58cd00a94f9f4dbb1e", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/b0aef28e3d7ddfb23a6d0d58cd00a94f9f4dbb1e", "committedDate": "2020-04-30T06:38:02Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "2cd53919290e360fd701e90c5ff24087718a53dc", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/2cd53919290e360fd701e90c5ff24087718a53dc", "committedDate": "2020-04-30T06:40:53Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cd53919290e360fd701e90c5ff24087718a53dc", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/2cd53919290e360fd701e90c5ff24087718a53dc", "committedDate": "2020-04-30T06:40:53Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "85cbab6a64c1d8ef47fa2a5b666b8df73b9a2ca5", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/85cbab6a64c1d8ef47fa2a5b666b8df73b9a2ca5", "committedDate": "2020-04-30T12:25:26Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85cbab6a64c1d8ef47fa2a5b666b8df73b9a2ca5", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/85cbab6a64c1d8ef47fa2a5b666b8df73b9a2ca5", "committedDate": "2020-04-30T12:25:26Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/e2f3abc28960f9e7647e26afc2df787dbebcddca", "committedDate": "2020-04-30T16:41:33Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNzc0NTQ2", "url": "https://github.com/infinispan/infinispan/pull/8266#pullrequestreview-403774546", "createdAt": "2020-04-30T18:30:08Z", "commit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODozMDowOFrOGO1ZCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxODozMTowOFrOGO1bCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwODAwOQ==", "bodyText": "Nit: add this parameter on a new line", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r418208009", "createdAt": "2020-04-30T18:30:08Z", "author": {"login": "alanfx"}, "path": "server/testdriver/core/src/main/java/org/infinispan/server/test/core/InfinispanServerTestConfiguration.java", "diffHunk": "@@ -18,10 +20,11 @@\n    private final JavaArchive[] archives;\n    private final boolean jmx;\n    private final boolean parallelStartup;\n+   private final List<InfinispanServerListener> listeners;\n \n    public InfinispanServerTestConfiguration(String configurationFile, int numServers, ServerRunMode runMode,\n                                             Properties properties, String[] mavenArtifacts, JavaArchive[] archives,\n-                                            boolean jmx, boolean parallelStartup) {\n+                                            boolean jmx, boolean parallelStartup, List<InfinispanServerListener> listeners) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwODI3Mw==", "bodyText": "Nit: Extra blank line", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r418208273", "createdAt": "2020-04-30T18:30:41Z", "author": {"login": "alanfx"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.jdbc.databases\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwODQzMw==", "bodyText": "The formatting looks weird in this block?", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r418208433", "createdAt": "2020-04-30T18:30:58Z", "author": {"login": "alanfx"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.jdbc.databases\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+\n+   }\n+\n+   @Override\n+   public void before(InfinispanServerDriver driver) {\n+      databases = new LinkedHashMap<>(databaseTypes.length);\n+      for (int i = 0; i < databaseTypes.length; i++) {\n+         Database database  = initDatabase(databaseTypes[i]);\n+         log.infof(\"Starting database: %s\", database.getType());\n+         database.start();\n+         log.infof(\"Started database: %s\", database.getType());\n+         databases.put(databaseTypes[i], database);\n+        driver.getConfiguration().properties().put(\"org.infinispan.server.test.\"+ database.getType()+\".jdbcUrl\", database.jdbcUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwODUyMA==", "bodyText": "Nit: Extra blank line", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r418208520", "createdAt": "2020-04-30T18:31:08Z", "author": {"login": "alanfx"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.jdbc.databases\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+\n+   }\n+\n+   @Override\n+   public void before(InfinispanServerDriver driver) {\n+      databases = new LinkedHashMap<>(databaseTypes.length);\n+      for (int i = 0; i < databaseTypes.length; i++) {\n+         Database database  = initDatabase(databaseTypes[i]);\n+         log.infof(\"Starting database: %s\", database.getType());\n+         database.start();\n+         log.infof(\"Started database: %s\", database.getType());\n+         databases.put(databaseTypes[i], database);\n+        driver.getConfiguration().properties().put(\"org.infinispan.server.test.\"+ database.getType()+\".jdbcUrl\", database.jdbcUrl());\n+      }\n+   }\n+\n+   @Override\n+   public void after(InfinispanServerDriver driver) {\n+      log.info(\"Stopping databases\");\n+      databases.values().forEach(Database::stop);\n+      log.info(\"Stopped databases\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2f3abc28960f9e7647e26afc2df787dbebcddca", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/e2f3abc28960f9e7647e26afc2df787dbebcddca", "committedDate": "2020-04-30T16:41:33Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/abc6687d30dacd4b0a2fe379e09ff30347afd70d", "committedDate": "2020-05-05T13:24:25Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTg5MDUz", "url": "https://github.com/infinispan/infinispan/pull/8266#pullrequestreview-405989053", "createdAt": "2020-05-05T17:08:57Z", "commit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowODo1N1rOGQzRFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowODo1N1rOGQzRFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MDM1Ng==", "bodyText": "Looks like org.infinispan.server.test.database.type.* is no longer being used since you can pass these properties through org.infinispan.test.server.database.properties.path\nLGTM despite that", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420270356", "createdAt": "2020-05-05T17:08:57Z", "author": {"login": "gustavolira"}, "path": "server/testdriver/README.md", "diffHunk": "@@ -113,13 +113,12 @@ The following is a list of properties which affect the build:\n * `org.infinispan.test.server.embedded.timeoutSeconds` the amount of time in seconds to wait for a server start/stop operation when using the `EMBEDDED` driver.\n * `org.infinispan.test.server.driver`  the driver to use, `EMBEDDED` or `CONTAINER`. Defaults to the `EMBEDDED` driver.\n * `org.infinispan.test.server.extension.libs` locates artifact defined by G:A:V, you can pass a list of libraries (comma separeted) to be copied to the server. Only needed for container mode.\n-* `org.infinispan.test.server.jdbc.databases` database name to be used during persistence tests.\n-* `org.infinispan.test.server.jdbc.database.url` JDBC URL. If it's a external database\n-* `org.infinispan.test.server.jdbc.database.username` database username. If it's a external database\n-* `org.infinispan.test.server.jdbc.database.password` database password. If it's a external database\n-* `org.infinispan.test.server.jdbc.database.driverClass` database jdbc driver name. If it's a external database\n-* `org.infinispan.test.server.jdbc.image.tag` Docker image version to be used during persistence tests.\n-\n+* `org.infinispan.test.server.database.types` comma-separated list of database types to be used during persistence tests.\n+* `org.infinispan.test.server.database.properties.path` a path to a directory containing property files with connection details for each database to be tested.\n+* `org.infinispan.server.test.database.type.username` username to use for a specific database type ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTk4OTk5", "url": "https://github.com/infinispan/infinispan/pull/8266#pullrequestreview-406598999", "createdAt": "2020-05-06T13:14:54Z", "commit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxNDo1NFrOGRSX9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozMzoyOVrOGRTLng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MDAyMA==", "bodyText": "Similar to JDBC [1] you could log the exception as CONFIG logger.\n[1] https://github.com/infinispan/infinispan/blob/master/persistence/jdbc/src/main/java/org/infinispan/persistence/jdbc/logging/Log.java#L30", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420780020", "createdAt": "2020-05-06T13:14:54Z", "author": {"login": "pruivo"}, "path": "server/runtime/src/main/java/org/infinispan/server/configuration/DataSourcesConfigurationBuilder.java", "diffHunk": "@@ -1,28 +1,39 @@\n package org.infinispan.server.configuration;\n \n+import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.stream.Collectors;\n \n import org.infinispan.commons.configuration.Builder;\n import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.server.Server;\n \n public class DataSourcesConfigurationBuilder implements Builder<DataSourcesConfiguration> {\n \n    private final AttributeSet attributes;\n    private final ServerConfigurationBuilder server;\n \n    private Map<String, DataSourceConfigurationBuilder> dataSources = new LinkedHashMap<>(2);\n+   private Set<String> jndiNames = new HashSet<>(2);\n \n    DataSourcesConfigurationBuilder(ServerConfigurationBuilder server) {\n       this.server = server;\n       attributes = DataSourcesConfiguration.attributeDefinitionSet();\n    }\n \n    DataSourceConfigurationBuilder dataSource(String name, String jndiName) {\n+      if (dataSources.containsKey(name)) {\n+         throw Server.log.duplicateDataSource(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MDI1OQ==", "bodyText": "nitpick: both jndiNames and  dataSources can be final.", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420780259", "createdAt": "2020-05-06T13:15:14Z", "author": {"login": "pruivo"}, "path": "server/runtime/src/main/java/org/infinispan/server/configuration/DataSourcesConfigurationBuilder.java", "diffHunk": "@@ -1,28 +1,39 @@\n package org.infinispan.server.configuration;\n \n+import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.stream.Collectors;\n \n import org.infinispan.commons.configuration.Builder;\n import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.server.Server;\n \n public class DataSourcesConfigurationBuilder implements Builder<DataSourcesConfiguration> {\n \n    private final AttributeSet attributes;\n    private final ServerConfigurationBuilder server;\n \n    private Map<String, DataSourceConfigurationBuilder> dataSources = new LinkedHashMap<>(2);\n+   private Set<String> jndiNames = new HashSet<>(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MDYzOA==", "bodyText": "or not... it seems to be using the SERVER category for this in other places...", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420780638", "createdAt": "2020-05-06T13:15:50Z", "author": {"login": "pruivo"}, "path": "server/runtime/src/main/java/org/infinispan/server/configuration/DataSourcesConfigurationBuilder.java", "diffHunk": "@@ -1,28 +1,39 @@\n package org.infinispan.server.configuration;\n \n+import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.stream.Collectors;\n \n import org.infinispan.commons.configuration.Builder;\n import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.server.Server;\n \n public class DataSourcesConfigurationBuilder implements Builder<DataSourcesConfiguration> {\n \n    private final AttributeSet attributes;\n    private final ServerConfigurationBuilder server;\n \n    private Map<String, DataSourceConfigurationBuilder> dataSources = new LinkedHashMap<>(2);\n+   private Set<String> jndiNames = new HashSet<>(2);\n \n    DataSourcesConfigurationBuilder(ServerConfigurationBuilder server) {\n       this.server = server;\n       attributes = DataSourcesConfiguration.attributeDefinitionSet();\n    }\n \n    DataSourceConfigurationBuilder dataSource(String name, String jndiName) {\n+      if (dataSources.containsKey(name)) {\n+         throw Server.log.duplicateDataSource(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MDAyMA=="}, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4NjM3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for (int i = 0; i < databaseTypes.length; i++) {\n          \n          \n            \n                  for (String databaseType : databaseTypes) {", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420786373", "createdAt": "2020-05-06T13:24:02Z", "author": {"login": "pruivo"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.database.types\";\n+   public static final String DATABASE_PROPERTIES_PATH = \"org.infinispan.test.server.database.properties.path\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+   }\n+\n+   @Override\n+   public void before(InfinispanServerDriver driver) {\n+      databases = new LinkedHashMap<>(databaseTypes.length);\n+      for (int i = 0; i < databaseTypes.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4Njc2NQ==", "bodyText": "shouldn't check for duplicates before starting?", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420786765", "createdAt": "2020-05-06T13:24:32Z", "author": {"login": "pruivo"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.database.types\";\n+   public static final String DATABASE_PROPERTIES_PATH = \"org.infinispan.test.server.database.properties.path\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+   }\n+\n+   @Override\n+   public void before(InfinispanServerDriver driver) {\n+      databases = new LinkedHashMap<>(databaseTypes.length);\n+      for (int i = 0; i < databaseTypes.length; i++) {\n+         Database database = initDatabase(databaseTypes[i]);\n+         log.infof(\"Starting database: %s\", database.getType());\n+         database.start();\n+         log.infof(\"Started database: %s\", database.getType());\n+         databases.put(databaseTypes[i], database);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4ODA1MQ==", "bodyText": "will /database/%s.properties  work on windows?", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420788051", "createdAt": "2020-05-06T13:26:25Z", "author": {"login": "pruivo"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/DatabaseServerListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+package org.infinispan.server.test.junit4;\n+\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import org.infinispan.server.test.core.InfinispanServerDriver;\n+import org.infinispan.server.test.core.InfinispanServerListener;\n+import org.infinispan.server.test.core.persistence.Database;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * @author Gustavo Lira &lt;glira@redhat.com&gt;\n+ * @since 10.0\n+ **/\n+public class DatabaseServerListener implements InfinispanServerListener {\n+   private static final Logger log = Logger.getLogger(DatabaseServerListener.class);\n+   public static final String DATABASES = \"org.infinispan.test.server.database.types\";\n+   public static final String DATABASE_PROPERTIES_PATH = \"org.infinispan.test.server.database.properties.path\";\n+   private final String[] databaseTypes;\n+   public Map<String, Database> databases;\n+\n+   public DatabaseServerListener(String... databaseTypes) {\n+      String property = System.getProperty(DATABASES);\n+      if (property != null) {\n+         this.databaseTypes = property.split(\",\");\n+         log.infof(\"Overriding databases: %s\", this.databaseTypes);\n+      } else {\n+         this.databaseTypes = databaseTypes;\n+      }\n+   }\n+\n+   @Override\n+   public void before(InfinispanServerDriver driver) {\n+      databases = new LinkedHashMap<>(databaseTypes.length);\n+      for (int i = 0; i < databaseTypes.length; i++) {\n+         Database database = initDatabase(databaseTypes[i]);\n+         log.infof(\"Starting database: %s\", database.getType());\n+         database.start();\n+         log.infof(\"Started database: %s\", database.getType());\n+         databases.put(databaseTypes[i], database);\n+         driver.getConfiguration().properties().put(\"org.infinispan.server.test.\" + database.getType() + \".jdbcUrl\", database.jdbcUrl());\n+      }\n+   }\n+\n+   @Override\n+   public void after(InfinispanServerDriver driver) {\n+      log.info(\"Stopping databases\");\n+      databases.values().forEach(Database::stop);\n+      log.info(\"Stopped databases\");\n+   }\n+\n+   public Database getDatabase(String databaseType) {\n+      return databases.get(databaseType);\n+   }\n+\n+   public String[] getDatabaseTypes() {\n+      return databaseTypes;\n+   }\n+\n+   private Database initDatabase(String databaseType) {\n+      String property = System.getProperty(DATABASE_PROPERTIES_PATH);\n+      try (InputStream inputStream = property != null ? Files.newInputStream(Paths.get(property).resolve(databaseType + \".properties\")) : getClass().getResourceAsStream(String.format(\"/database/%s.properties\", databaseType))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4OTMxMQ==", "bodyText": "nitpick: final", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420789311", "createdAt": "2020-05-06T13:28:01Z", "author": {"login": "pruivo"}, "path": "server/testdriver/junit4/src/main/java/org/infinispan/server/test/junit4/InfinispanServerRuleBuilder.java", "diffHunk": "@@ -22,6 +25,7 @@\n    private JavaArchive[] archives;\n    private boolean jmx;\n    private boolean parallelStartup = true;\n+   private List<InfinispanServerListener> listeners = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5MzI0Ng==", "bodyText": "remove comment?", "url": "https://github.com/infinispan/infinispan/pull/8266#discussion_r420793246", "createdAt": "2020-05-06T13:33:29Z", "author": {"login": "pruivo"}, "path": "server/tests/src/test/resources/configuration/datasources/default.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<data-sources xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+           xsi:schemaLocation=\"urn:infinispan:server:11.0 https://infinispan.org/schemas/infinispan-server-11.0.xsd\"\n+           xmlns=\"urn:infinispan:server:11.0\">\n+   <data-source name=\"h2\" jndi-name=\"jdbc/h2\" statistics=\"true\">\n+      <connection-factory driver=\"org.h2.Driver\"\n+                          username=\"${org.infinispan.server.test.database.h2.username:test}\"\n+                          password=\"${org.infinispan.server.test.database.h2.password:test}\"\n+                          url=\"${org.infinispan.server.test.h2.jdbcUrl}\"\n+                          new-connection-sql=\"SELECT 1\" />\n+      <connection-pool max-size=\"10\" background-validation=\"1000\" idle-removal=\"1\" initial-size=\"1\" leak-detection=\"10000\"/>\n+   </data-source>\n+   <data-source name=\"mysql\" jndi-name=\"jdbc/mysql\" statistics=\"true\">\n+      <!-- The URL will be filled in by -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abc6687d30dacd4b0a2fe379e09ff30347afd70d", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/abc6687d30dacd4b0a2fe379e09ff30347afd70d", "committedDate": "2020-05-05T13:24:25Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "1a654135217cc15a85f5b9b5a84c6fcffcfd7f02", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/1a654135217cc15a85f5b9b5a84c6fcffcfd7f02", "committedDate": "2020-05-06T13:51:19Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjUyNjk1", "url": "https://github.com/infinispan/infinispan/pull/8266#pullrequestreview-406652695", "createdAt": "2020-05-06T14:11:13Z", "commit": {"oid": "1a654135217cc15a85f5b9b5a84c6fcffcfd7f02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606ae20b64e68072dd9b30cf6e8a7745f289f841", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/606ae20b64e68072dd9b30cf6e8a7745f289f841", "committedDate": "2020-05-06T15:01:27Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a654135217cc15a85f5b9b5a84c6fcffcfd7f02", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/1a654135217cc15a85f5b9b5a84c6fcffcfd7f02", "committedDate": "2020-05-06T13:51:19Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}, "afterCommit": {"oid": "606ae20b64e68072dd9b30cf6e8a7745f289f841", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/606ae20b64e68072dd9b30cf6e8a7745f289f841", "committedDate": "2020-05-06T15:01:27Z", "message": "ISPN-11744 Fix ManagedConnectionOperations\n\n* Remove SocketProxy\n* Convert Database ClassRule to a listener for the InfinispanServer ClassRule\n* Start all databases upfront before the Infinispan cluster\n* Protect against duplicate datasource names/jndinames"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzM5OTA4", "url": "https://github.com/infinispan/infinispan/pull/8266#pullrequestreview-406739908", "createdAt": "2020-05-06T15:39:05Z", "commit": {"oid": "606ae20b64e68072dd9b30cf6e8a7745f289f841"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 933, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}