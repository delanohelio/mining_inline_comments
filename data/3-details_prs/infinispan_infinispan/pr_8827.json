{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0OTAyMTE1", "number": 8827, "title": "ISPN-11614 PersistenceMarshaller should utilise an independent Serialization context", "bodyText": "https://issues.redhat.com/browse/ISPN-11614\nhttps://issues.redhat.com/browse/ISPN-11426\nhttps://issues.redhat.com/browse/ISPN-12093", "createdAt": "2020-11-03T17:55:11Z", "url": "https://github.com/infinispan/infinispan/pull/8827", "merged": true, "mergeCommit": {"oid": "59b120f26ba51d63060c4e1ed4830fc573bb0dca"}, "closed": true, "closedAt": "2020-12-16T15:19:33Z", "author": {"login": "ryanemerson"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY-ArEABqjM5NTQzOTQxMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmdv6KABqjQxMTU3NzA0NTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0827bce02cd2a7d873f635d5719f58060c88c16e", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/0827bce02cd2a7d873f635d5719f58060c88c16e", "committedDate": "2020-11-03T17:53:27Z", "message": "jpa wip"}, "afterCommit": {"oid": "a8217459ad600f6a86e92f6e788840f7ca02fec1", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/a8217459ad600f6a86e92f6e788840f7ca02fec1", "committedDate": "2020-11-03T19:04:13Z", "message": "jpa wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8217459ad600f6a86e92f6e788840f7ca02fec1", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/a8217459ad600f6a86e92f6e788840f7ca02fec1", "committedDate": "2020-11-03T19:04:13Z", "message": "jpa wip"}, "afterCommit": {"oid": "19d14e94c883852d3594fd8a43b2890d5ba5f8a9", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/19d14e94c883852d3594fd8a43b2890d5ba5f8a9", "committedDate": "2020-11-03T20:29:05Z", "message": "jpa wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19d14e94c883852d3594fd8a43b2890d5ba5f8a9", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/19d14e94c883852d3594fd8a43b2890d5ba5f8a9", "committedDate": "2020-11-03T20:29:05Z", "message": "jpa wip"}, "afterCommit": {"oid": "7976f89d24c27d2af67f48026d8aa91b4bfe2cca", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/7976f89d24c27d2af67f48026d8aa91b4bfe2cca", "committedDate": "2020-11-03T21:38:02Z", "message": "jpa wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37fda3cc21b1b310cd92abc78caab915bfe27570", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/37fda3cc21b1b310cd92abc78caab915bfe27570", "committedDate": "2020-11-04T18:08:37Z", "message": "Add cascading context checks to Protostream Transcoder"}, "afterCommit": {"oid": "a8deafe9355eb7c6721628f8dcacd51d2683ecb8", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/a8deafe9355eb7c6721628f8dcacd51d2683ecb8", "committedDate": "2020-11-05T08:23:20Z", "message": "Add cascading context checks to Protostream Transcoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8deafe9355eb7c6721628f8dcacd51d2683ecb8", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/a8deafe9355eb7c6721628f8dcacd51d2683ecb8", "committedDate": "2020-11-05T08:23:20Z", "message": "Add cascading context checks to Protostream Transcoder"}, "afterCommit": {"oid": "5e01e6021d931cbe684d630034f19ea2375353b8", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/5e01e6021d931cbe684d630034f19ea2375353b8", "committedDate": "2020-11-05T16:35:12Z", "message": "Add cascading context checks to Protostream Transcoder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6de4300d5daee962d5595a6a5434bc6c8d6f4654", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/6de4300d5daee962d5595a6a5434bc6c8d6f4654", "committedDate": "2020-11-13T17:31:02Z", "message": "Fix RemoteStoreTest failures"}, "afterCommit": {"oid": "8b80911d6b36a8770af6879a42f53fd0a0d38754", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/8b80911d6b36a8770af6879a42f53fd0a0d38754", "committedDate": "2020-11-16T18:00:37Z", "message": "ISPN-11426 Add UUID to core SerializationContexts\n\nUtilise FIXED64 in UUIDBridge"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa0a0aa3c72894b7ff250f169c470765d11b8e15", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/aa0a0aa3c72894b7ff250f169c470765d11b8e15", "committedDate": "2020-11-16T18:15:00Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "baf96985c29714cfb998b9d3d716d49e54bacec6", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/baf96985c29714cfb998b9d3d716d49e54bacec6", "committedDate": "2020-11-16T18:52:37Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "baf96985c29714cfb998b9d3d716d49e54bacec6", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/baf96985c29714cfb998b9d3d716d49e54bacec6", "committedDate": "2020-11-16T18:52:37Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "3403986ee660abd5591ef156da5ae3a45fb0152b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/3403986ee660abd5591ef156da5ae3a45fb0152b", "committedDate": "2020-11-16T20:05:59Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3403986ee660abd5591ef156da5ae3a45fb0152b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/3403986ee660abd5591ef156da5ae3a45fb0152b", "committedDate": "2020-11-16T20:05:59Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "96447665f412d36407a1976eae2792db9388f57b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/96447665f412d36407a1976eae2792db9388f57b", "committedDate": "2020-11-16T20:12:21Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96447665f412d36407a1976eae2792db9388f57b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/96447665f412d36407a1976eae2792db9388f57b", "committedDate": "2020-11-16T20:12:21Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "1eb34105df35afd1308d542a624fe731ec7354b9", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/1eb34105df35afd1308d542a624fe731ec7354b9", "committedDate": "2020-11-19T11:36:12Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1eb34105df35afd1308d542a624fe731ec7354b9", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/1eb34105df35afd1308d542a624fe731ec7354b9", "committedDate": "2020-11-19T11:36:12Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "70e3f119243a55a6420cc378509ebca7fb87db93", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/70e3f119243a55a6420cc378509ebca7fb87db93", "committedDate": "2020-11-23T10:59:29Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODYwODMz", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-539860833", "createdAt": "2020-11-27T10:16:19Z", "commit": {"oid": "70e3f119243a55a6420cc378509ebca7fb87db93"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxNjoxOVrOH64mdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxNjoxOVrOH64mdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNjgwNw==", "bodyText": "This doesn't look like a getAndSet but getAndAdd", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r531506807", "createdAt": "2020-11-27T10:16:19Z", "author": {"login": "tristantarrant"}, "path": "commons/all/src/main/java/org/infinispan/commons/util/ByRef.java", "diffHunk": "@@ -84,6 +84,12 @@ public void set(long i) {\n          ref = i;\n       }\n \n+      public long getAndSet(long i) {\n+         long ret = ref;\n+         ref += i;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e3f119243a55a6420cc378509ebca7fb87db93"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70e3f119243a55a6420cc378509ebca7fb87db93", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/70e3f119243a55a6420cc378509ebca7fb87db93", "committedDate": "2020-11-23T10:59:29Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "db3ae9d77a59a05c02d3b0c4b0da95ba83667467", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/db3ae9d77a59a05c02d3b0c4b0da95ba83667467", "committedDate": "2020-11-27T10:23:14Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db3ae9d77a59a05c02d3b0c4b0da95ba83667467", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/db3ae9d77a59a05c02d3b0c4b0da95ba83667467", "committedDate": "2020-11-27T10:23:14Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}, "afterCommit": {"oid": "54030d3b5105c18f9ea064401516c876a3037c11", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/54030d3b5105c18f9ea064401516c876a3037c11", "committedDate": "2020-11-27T11:07:42Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54030d3b5105c18f9ea064401516c876a3037c11", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/54030d3b5105c18f9ea064401516c876a3037c11", "committedDate": "2020-11-27T11:07:42Z", "message": "Ignore .attach_pid* files"}, "afterCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/8848bcb281ec182f71bf59368e3b3960775fb316", "committedDate": "2020-11-27T15:47:50Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTY2MzQw", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-542566340", "createdAt": "2020-12-02T07:43:28Z", "commit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MzoyOVrOH9OCTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MzoyOVrOH9OCTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NTE1MA==", "bodyText": "Why the removal?", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r533955150", "createdAt": "2020-12-02T07:43:29Z", "author": {"login": "gustavonalle"}, "path": "core/src/test/java/org/infinispan/eviction/impl/MemoryBasedEvictionFunctionalStoreAsBinaryTest.java", "diffHunk": "@@ -39,8 +37,4 @@ public void testCustomClass() throws Exception {\n       }\n       assertTrue(cache.getAdvancedCache().getDataContainer().size() < numberInserted);\n    }\n-\n-   public void testJGroupsAddress() {\n-      cache.put(\"key\", new JGroupsAddress(new UUID()));\n-   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTY4MDU4", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-542568058", "createdAt": "2020-12-02T07:46:36Z", "commit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0NjozNlrOH9OH_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0NjozNlrOH9OH_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NjYwNA==", "bodyText": "should not commit?", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r533956604", "createdAt": "2020-12-02T07:46:36Z", "author": {"login": "gustavonalle"}, "path": "persistence/rocksdb/src/test/resources/11_0_x_rocksdb_data/data/LOG", "diffHunk": "@@ -0,0 +1,256 @@\n+2020/11/23-10:53:43.160947 7f5a5c2ea700 RocksDB version: 6.8.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTY4OTQ5", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-542568949", "createdAt": "2020-12-02T07:48:13Z", "commit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0ODoxM1rOH9OK8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0ODoxM1rOH9OK8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1NzM2Mw==", "bodyText": "Should not commit this (I think)", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r533957363", "createdAt": "2020-12-02T07:48:13Z", "author": {"login": "gustavonalle"}, "path": "persistence/rocksdb/src/test/resources/11_0_x_rocksdb_data/expired/OPTIONS-000005", "diffHunk": "@@ -0,0 +1,165 @@\n+# This is a RocksDB option file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTc0MTE3", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-542574117", "createdAt": "2020-12-02T07:57:01Z", "commit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1NzowMVrOH9Ob6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1NzowMVrOH9Ob6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2MTcwNg==", "bodyText": "Does it have a Protostream JIRA to have this workaround removed?", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r533961706", "createdAt": "2020-12-02T07:57:01Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/encoding/ProtostreamTranscoder.java", "diffHunk": "@@ -132,27 +124,92 @@ private boolean isWrapped(MediaType mediaType) {\n    }\n \n    private byte[] marshall(Object decoded, MediaType destinationType) throws IOException {\n-      try {\n-         if (isWrapped(destinationType)) return ProtobufUtil.toWrappedByteArray(ctx(), decoded);\n-         return ProtobufUtil.toByteArray(ctx(), decoded);\n-      } catch (IllegalArgumentException iae) {\n-         throw new MarshallingException(iae.getMessage());\n+      ImmutableSerializationContext ctx = getCtxForMarshalling(decoded);\n+      if (isWrapped(destinationType)) {\n+         return ProtobufUtil.toWrappedByteArray(ctx, decoded);\n       }\n+      return ProtobufUtil.toByteArray(ctx, decoded);\n    }\n \n    private Object unmarshall(byte[] bytes, MediaType contentType, MediaType destinationType) throws IOException {\n+      if (isWrapped(contentType))\n+         return unmarshallCascading(bytes);\n+\n+      String type = destinationType.getClassType();\n+      if (type == null) throw logger.missingTypeForUnwrappedPayload();\n+      Class<?> destination = Util.loadClass(type, classLoader);\n+      ImmutableSerializationContext ctx = getCtxForMarshalling(destination);\n+      return ProtobufUtil.fromByteArray(ctx, bytes, destination);\n+   }\n+\n+   private Object unmarshallCascading(byte[] bytes) throws IOException {\n+      // First try to unmarshalling with the user context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316"}, "originalPosition": 88}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8848bcb281ec182f71bf59368e3b3960775fb316", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/8848bcb281ec182f71bf59368e3b3960775fb316", "committedDate": "2020-11-27T15:47:50Z", "message": "Ignore .attach_pid* files"}, "afterCommit": {"oid": "e59f93879e6ef85b845163c9a5154700f0f6ffac", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/e59f93879e6ef85b845163c9a5154700f0f6ffac", "committedDate": "2020-12-02T11:13:27Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e59f93879e6ef85b845163c9a5154700f0f6ffac", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/e59f93879e6ef85b845163c9a5154700f0f6ffac", "committedDate": "2020-12-02T11:13:27Z", "message": "Ignore .attach_pid* files"}, "afterCommit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/e62860fc0ae7d2080b4936d167910ffac9695594", "committedDate": "2020-12-03T11:35:22Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTI4MTky", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-546528192", "createdAt": "2020-12-07T20:55:07Z", "commit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDo1NTowOFrOIA6SfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDo1NTowOFrOIA6SfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyNTkxNg==", "bodyText": "It seems you don't need this ByRef if you change allocate to return a ByteBuffer instead.", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r537825916", "createdAt": "2020-12-07T20:55:08Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/persistence/file/SingleFileStore.java", "diffHunk": "@@ -213,27 +221,20 @@ public boolean isAvailable() {\n     * Rebuilds the in-memory index from file.\n     */\n    private void rebuildIndex() throws Exception {\n-      ByteBuffer buf = ByteBuffer.allocate(KEY_POS_11_0);\n+      ByRef<ByteBuffer> buf = new ByRef<>(ByteBuffer.allocate(KEY_POS_LATEST));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTg5MDk4", "url": "https://github.com/infinispan/infinispan/pull/8827#pullrequestreview-549589098", "createdAt": "2020-12-10T20:48:11Z", "commit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0ODoxMVrOIDcpoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0ODoxMVrOIDcpoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjA0OA==", "bodyText": "I wonder should we confirm if the prior marshaller could be used? What if a DBA deletes the metadata table. I wonder if we should catch the exception and maybe mention that as a possibility?", "url": "https://github.com/infinispan/infinispan/pull/8827#discussion_r540486048", "createdAt": "2020-12-10T20:48:11Z", "author": {"login": "wburns"}, "path": "persistence/jdbc/src/main/java/org/infinispan/persistence/jdbc/stringbased/JdbcStringBasedStore.java", "diffHunk": "@@ -160,6 +183,66 @@ public void start() {\n       }\n    }\n \n+   private void migrateFromV11() throws SQLException {\n+      // If a custom user marshaller was previously used, no need to update rows\n+      if (ctx.getGlobalConfiguration().serialization().marshaller() != null)\n+         return;\n+\n+      Connection conn = null;\n+      PreparedStatement ps = null;\n+      ResultSet rs = null;\n+      try {\n+         conn = connectionFactory.getConnection();\n+         conn.setAutoCommit(false);\n+         String sql = tableManager.getLoadNonExpiredAllRowsSql();\n+         ps = conn.prepareStatement(sql);\n+         ps.setLong(1, timeService.wallClockTime());\n+         rs = ps.executeQuery();\n+\n+         Marshaller userMarshaller = marshaller.getUserMarshaller();\n+         try (PreparedStatement upsertBatch = conn.prepareStatement(tableManager.getUpdateRowSql())) {\n+            int batchSize = 0;\n+            while (rs.next()) {\n+               batchSize++;\n+               InputStream inputStream = rs.getBinaryStream(1);\n+               String keyStr = rs.getString(2);\n+               long timestamp = rs.getLong(3);\n+               int segment = keyPartitioner == null ? -1 : rs.getInt(4);\n+\n+               MarshalledValue mv = unmarshall(inputStream, marshaller);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594"}, "originalPosition": 90}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e62860fc0ae7d2080b4936d167910ffac9695594", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/e62860fc0ae7d2080b4936d167910ffac9695594", "committedDate": "2020-12-03T11:35:22Z", "message": "Ignore .attach_pid* files"}, "afterCommit": {"oid": "78dc6079137cd739688fd423c0cbad9e7138abdb", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/78dc6079137cd739688fd423c0cbad9e7138abdb", "committedDate": "2020-12-11T15:55:03Z", "message": "SFS Remove ByRef for ByteBuffer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78dc6079137cd739688fd423c0cbad9e7138abdb", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/78dc6079137cd739688fd423c0cbad9e7138abdb", "committedDate": "2020-12-11T15:55:03Z", "message": "SFS Remove ByRef for ByteBuffer"}, "afterCommit": {"oid": "4f00f961c5716a63c82378e55e74c5b8d1bd9fda", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4f00f961c5716a63c82378e55e74c5b8d1bd9fda", "committedDate": "2020-12-14T15:13:04Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f5abeee241038f5f94ef8f4ac51ca0605a33ff", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/11f5abeee241038f5f94ef8f4ac51ca0605a33ff", "committedDate": "2020-12-15T17:25:31Z", "message": "ISPN-11614 PersistenceMarshaller should utilise an independent SerializationContext for user types\n\nUser marshaller instance now created via MarshallerFactory\n\nAdd cascading context checks to Protostream Transcoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebb1a44eb20ab580d3cb3da27a2caa4931970d52", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/ebb1a44eb20ab580d3cb3da27a2caa4931970d52", "committedDate": "2020-12-15T17:25:31Z", "message": "ISPN-11614 AbstractInternalProtoStreamMarshaller utilised by PersistenceMarshallerImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a35ef28f53eb8dd9f5de347d7c499bd7f7b406", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/c4a35ef28f53eb8dd9f5de347d7c499bd7f7b406", "committedDate": "2020-12-15T17:25:31Z", "message": "ISPN-11614 Stores updated to migrate incompatible data from 11.x -> 12.x\n\nAffected stores:\n- SFS\n- SIFS\n- JDBC\n- RocksDb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9177f84d62e307283bff840c34c84e3fda7aba04", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/9177f84d62e307283bff840c34c84e3fda7aba04", "committedDate": "2020-12-15T17:25:31Z", "message": "ISPN-11426 Add UUID to core SerializationContexts\n\nUtilise FIXED64 in UUIDBridge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b795e4a97c82f162265ab2e5309c1effd7d863", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/80b795e4a97c82f162265ab2e5309c1effd7d863", "committedDate": "2020-12-15T17:25:31Z", "message": "ISPN-12093 Service loaded SCIs not registered with the SerializationContextRegistry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a6b3c212959013ffaa8aaf5766dc62cca4d4a47", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/5a6b3c212959013ffaa8aaf5766dc62cca4d4a47", "committedDate": "2020-12-15T17:25:31Z", "message": "Ignore .attach_pid* files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f00f961c5716a63c82378e55e74c5b8d1bd9fda", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4f00f961c5716a63c82378e55e74c5b8d1bd9fda", "committedDate": "2020-12-14T15:13:04Z", "message": "Ignore .attach_pid* files"}, "afterCommit": {"oid": "5a6b3c212959013ffaa8aaf5766dc62cca4d4a47", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/5a6b3c212959013ffaa8aaf5766dc62cca4d4a47", "committedDate": "2020-12-15T17:25:31Z", "message": "Ignore .attach_pid* files"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 280, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}