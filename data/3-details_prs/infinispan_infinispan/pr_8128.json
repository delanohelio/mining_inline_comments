{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTQ4MTUw", "number": 8128, "title": "ISPN-11525 Fix Authz with REST admin ops", "bodyText": "https://issues.redhat.com/browse/ISPN-11525\nBackport #8239", "createdAt": "2020-03-30T22:46:10Z", "url": "https://github.com/infinispan/infinispan/pull/8128", "merged": true, "mergeCommit": {"oid": "7b956fba0a8243fbaa2164cba43a5f9601c61747"}, "closed": true, "closedAt": "2020-04-28T12:48:51Z", "author": {"login": "karesti"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS-4RlAFqTM4NDUwMTQ5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccCUs5gBqjMyNzk4OTgyNDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTAxNDkx", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-384501491", "createdAt": "2020-03-31T08:18:31Z", "commit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoxODozMlrOF-KX1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODozMTozNlrOF-K4UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyNTk3NA==", "bodyText": "never used.", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400725974", "createdAt": "2020-03-31T08:18:32Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -65,15 +70,18 @@\n public class CacheManagerResource implements ResourceHandler {\n \n    private final EmbeddedCacheManager cacheManager;\n+   private InvocationHelper invocationHelper;\n    private final InternalCacheRegistry internalCacheRegistry;\n    private final JsonWriter jsonWriter = new JsonWriter();\n    private final ObjectMapper objectMapper;\n    private final ParserRegistry parserRegistry = new ParserRegistry();\n    private final String cacheManagerName;\n+   private final static Logger log = LogFactory.getLogger(CacheManagerResource.class.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyNjk0Mw==", "bodyText": "I don't understand why do you need the RestCacheManager.\nIt only decorates the cache with encodings and flags. Both don't affect the methods getName() neither getCacheConfiguration()", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400726943", "createdAt": "2020-03-31T08:20:10Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -202,9 +215,10 @@ public Invocations getInvocations() {\n          cachesHeath.put(ch.getCacheName(), ch.getStatus());\n       }\n \n+      RestCacheManager<Object> restCacheManager = invocationHelper.getRestCacheManager();\n       // We rely on the fact that getCacheNames doesn't block for embedded - remote it does unfortunately\n       return Flowable.fromIterable(cacheManager.getCacheNames())\n-            .map(cacheManager::getCache)\n+            .map(cacheName -> restCacheManager.getCache(cacheName, request))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyOTEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        () -> cacheManager.getCacheManagerInfo());\n          \n          \n            \n                        cacheManager::getCacheManagerInfo);", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400729133", "createdAt": "2020-03-31T08:23:43Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -108,9 +116,13 @@ public Invocations getInvocations() {\n \n    private CompletionStage<RestResponse> getInfo(RestRequest request) {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n+\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n+      CacheManagerInfo cacheManagerInfo = Security.doAs(request.getSubject(), (PrivilegedAction<CacheManagerInfo>)\n+            () -> cacheManager.getCacheManagerInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyOTQwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        () -> cacheManager.getCacheManagerConfiguration());\n          \n          \n            \n                        cacheManager::getCacheManagerConfiguration);", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400729404", "createdAt": "2020-03-31T08:24:03Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -123,8 +135,8 @@ public Invocations getInvocations() {\n    private CompletionStage<RestResponse> getConfig(RestRequest request) {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n-\n-      GlobalConfiguration globalConfiguration = cacheManager.getCacheManagerConfiguration();\n+      GlobalConfiguration globalConfiguration = Security.doAs(request.getSubject(), (PrivilegedAction<GlobalConfiguration>)\n+            () -> cacheManager.getCacheManagerConfiguration());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyOTY0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        () -> cacheManager.getStats());\n          \n          \n            \n                        cacheManager::getStats);", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400729644", "createdAt": "2020-03-31T08:24:23Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -149,10 +161,11 @@ public Invocations getInvocations() {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n-      CacheContainerStats stats = cacheManager.getStats();\n+      CacheContainerStats containerStats = Security.doAs(request.getSubject(), (PrivilegedAction<CacheContainerStats>)\n+            () -> cacheManager.getStats());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyOTk1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                           () -> cacheManager.getCacheConfigurationNames());\n          \n          \n            \n                           cacheManager::getCacheConfigurationNames);", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400729958", "createdAt": "2020-03-31T08:24:50Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -270,13 +285,22 @@ public Invocations getInvocations() {\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n       try {\n-         Set<String> cacheConfigurationNames = cacheManager.getCacheConfigurationNames();\n+\n+         Set<String> cacheConfigurationNames = Security.doAs(request.getSubject(), (PrivilegedAction<Set<String>>)\n+               () -> cacheManager.getCacheConfigurationNames());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMDYzNg==", "bodyText": "Extract it to a method? it is used more than once.", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400730636", "createdAt": "2020-03-31T08:25:55Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -270,13 +285,22 @@ public Invocations getInvocations() {\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n       try {\n-         Set<String> cacheConfigurationNames = cacheManager.getCacheConfigurationNames();\n+\n+         Set<String> cacheConfigurationNames = Security.doAs(request.getSubject(), (PrivilegedAction<Set<String>>)\n+               () -> cacheManager.getCacheConfigurationNames());\n \n          List<NamedCacheConfiguration> configurations = cacheConfigurationNames.stream()\n                .filter(n -> !internalCacheRegistry.isInternalCache(n))\n-               .filter(n -> cacheManager.getCacheConfiguration(n).isTemplate())\n+               .filter(n -> {\n+                  Configuration cacheConfiguration = Security.doAs(request.getSubject(), (PrivilegedAction<Configuration>) () -> cacheManager.getCacheConfiguration(n));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczNDI4OQ==", "bodyText": "ps. you have GetCacheConfigurationFromManagerAction available as well.", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r400734289", "createdAt": "2020-03-31T08:31:36Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -270,13 +285,22 @@ public Invocations getInvocations() {\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n       try {\n-         Set<String> cacheConfigurationNames = cacheManager.getCacheConfigurationNames();\n+\n+         Set<String> cacheConfigurationNames = Security.doAs(request.getSubject(), (PrivilegedAction<Set<String>>)\n+               () -> cacheManager.getCacheConfigurationNames());\n \n          List<NamedCacheConfiguration> configurations = cacheConfigurationNames.stream()\n                .filter(n -> !internalCacheRegistry.isInternalCache(n))\n-               .filter(n -> cacheManager.getCacheConfiguration(n).isTemplate())\n+               .filter(n -> {\n+                  Configuration cacheConfiguration = Security.doAs(request.getSubject(), (PrivilegedAction<Configuration>) () -> cacheManager.getCacheConfiguration(n));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMDYzNg=="}, "originalCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c"}, "originalPosition": 123}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "418b5914e798acd3a48010016864c32ded888a5c", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/418b5914e798acd3a48010016864c32ded888a5c", "committedDate": "2020-03-30T22:45:18Z", "message": "ISPN-11525 Sending correctly the subject"}, "afterCommit": {"oid": "74e368b85a28d91de9428de6a847451cea813520", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/74e368b85a28d91de9428de6a847451cea813520", "committedDate": "2020-04-01T15:55:26Z", "message": "use the cache manager with subject in templates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTc4MTMy", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-386178132", "createdAt": "2020-04-02T07:44:27Z", "commit": {"oid": "dbb45d0784be618165f07c30dfbee3d17769e7f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzo0NDoyN1rOF_fDJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzo0NjowNlrOF_fGoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExMzMxNw==", "bodyText": "Can you keep all this security stuff outside the rest resources and put them inside the  invocationHelper?  Thus by doing a invocationHelper.getRestCacheManager(request) you'd already get a cacheManager/cache/whatever with proper security credentials", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r402113317", "createdAt": "2020-04-02T07:44:27Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -202,13 +210,14 @@ public Invocations getInvocations() {\n          cachesHeath.put(ch.getCacheName(), ch.getStatus());\n       }\n \n+      RestCacheManager<Object> restCacheManager = invocationHelper.getRestCacheManager();\n       // We rely on the fact that getCacheNames doesn't block for embedded - remote it does unfortunately\n-      return Flowable.fromIterable(cacheManager.getCacheNames())\n-            .map(cacheManager::getCache)\n+      return Flowable.fromIterable(cacheManager.withSubject(request.getSubject()).getCacheNames())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbb45d0784be618165f07c30dfbee3d17769e7f3"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExNDIwOQ==", "bodyText": "There are no tests or reproducers for the changes. Those tests should be in the rest module itself rather than outside.", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r402114209", "createdAt": "2020-04-02T07:46:06Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -65,6 +68,7 @@\n public class CacheManagerResource implements ResourceHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbb45d0784be618165f07c30dfbee3d17769e7f3"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dbb45d0784be618165f07c30dfbee3d17769e7f3", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/dbb45d0784be618165f07c30dfbee3d17769e7f3", "committedDate": "2020-04-01T22:39:10Z", "message": "weird"}, "afterCommit": {"oid": "746c67c815b37d059599e1689c73922ad757c748", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/746c67c815b37d059599e1689c73922ad757c748", "committedDate": "2020-04-02T14:29:13Z", "message": "wip test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "746c67c815b37d059599e1689c73922ad757c748", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/746c67c815b37d059599e1689c73922ad757c748", "committedDate": "2020-04-02T14:29:13Z", "message": "wip test"}, "afterCommit": {"oid": "7ee9ead68894554388fe64bc12fdfab8943740a9", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/7ee9ead68894554388fe64bc12fdfab8943740a9", "committedDate": "2020-04-18T14:57:00Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43f72df577d2afbcd40a0ac13f592c533315dec1", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/43f72df577d2afbcd40a0ac13f592c533315dec1", "committedDate": "2020-04-18T23:50:00Z", "message": "wipppp"}, "afterCommit": {"oid": "6cddf759a7a86d941df4f6df8f6dcd883d347a85", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/6cddf759a7a86d941df4f6df8f6dcd883d347a85", "committedDate": "2020-04-19T16:20:58Z", "message": "ISPN-11525 Fix authorization in REST endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDM2Nzcz", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-396036773", "createdAt": "2020-04-19T16:27:52Z", "commit": {"oid": "6cddf759a7a86d941df4f6df8f6dcd883d347a85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoyNzo1M1rOGH51nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoyNzo1M1rOGH51nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk0MDgyOA==", "bodyText": "@gustavonalle @tristantarrant this little thing has been driving me crazy :))) and I think this explains why I could not create a cache from the console but you told me you could. Tests with auth enabled had been like crazy for this", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r410940828", "createdAt": "2020-04-19T16:27:53Z", "author": {"login": "karesti"}, "path": "server/rest/src/main/java/org/infinispan/rest/RestRequestHandler.java", "diffHunk": "@@ -85,6 +85,7 @@ public void channelRead0(ChannelHandlerContext ctx, FullHttpRequest request) thr\n          // Ensure that the authorization header, if needed, has not changed\n          String authz = request.headers().get(HttpHeaderNames.AUTHORIZATION);\n          if (Objects.equals(authz, authorization)) {\n+            restRequest.setSubject(subject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cddf759a7a86d941df4f6df8f6dcd883d347a85"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cddf759a7a86d941df4f6df8f6dcd883d347a85", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/6cddf759a7a86d941df4f6df8f6dcd883d347a85", "committedDate": "2020-04-19T16:20:58Z", "message": "ISPN-11525 Fix authorization in REST endpoints"}, "afterCommit": {"oid": "c4437fbb40d945cda787fd1f7ec17a78d3dc0961", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/c4437fbb40d945cda787fd1f7ec17a78d3dc0961", "committedDate": "2020-04-20T11:52:13Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4437fbb40d945cda787fd1f7ec17a78d3dc0961", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/c4437fbb40d945cda787fd1f7ec17a78d3dc0961", "committedDate": "2020-04-20T11:52:13Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/8b363293b1254dc29b15ef3e8240848bcfa9f604", "committedDate": "2020-04-20T11:54:16Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDIwNDgx", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-396420481", "createdAt": "2020-04-20T12:48:48Z", "commit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo0ODo0OFrOGISxkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo1NzowM1rOGITHCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0OTM5NQ==", "bodyText": "No, this is wrong: the cache object passed in should already have the Subject applied (cache.withSubject(subject)) (RestCacheManager does this)", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411349395", "createdAt": "2020-04-20T12:48:48Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/BaseCacheResource.java", "diffHunk": "@@ -114,7 +118,7 @@ public BaseCacheResource(InvocationHelper invocationHelper) {\n                }\n             }\n          }\n-         return putInCache(responseBuilder, cache, key, data, ttl, idle);\n+         return putInCache(responseBuilder, cache, key, data, ttl, idle, request.getSubject());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0OTcxNA==", "bodyText": "Undo these changes please", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411349714", "createdAt": "2020-04-20T12:49:17Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/BaseCacheResource.java", "diffHunk": "@@ -224,10 +228,12 @@ private void writeValue(Object value, MediaType requested, MediaType configuredM\n \n    private CompletionStage<RestResponse> putInCache(NettyRestResponse.Builder responseBuilder,\n                                                     AdvancedCache<Object, Object> cache, Object key, byte[] data, Long ttl,\n-                                                    Long idleTime) {\n+                                                    Long idleTime, Subject subject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1MTExNA==", "bodyText": "Rename to cachesHealth", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411351114", "createdAt": "2020-04-20T12:51:25Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -196,21 +210,28 @@ public Invocations getInvocations() {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n+      EmbeddedCacheManager withSubjectCM = cacheManager.withSubject(request.getSubject());\n       Map<String, HealthStatus> cachesHeath = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1MjAyMA==", "bodyText": "withSubjectCM is not particularly pleasant. subjectCacheManager is nicer (like you do below)", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411352020", "createdAt": "2020-04-20T12:52:52Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -196,21 +210,28 @@ public Invocations getInvocations() {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n+      EmbeddedCacheManager withSubjectCM = cacheManager.withSubject(request.getSubject());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1MzQ5MQ==", "bodyText": "You can use cacheNames.removeAll(internalCacheRegistry.getInternalCacheNames());", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411353491", "createdAt": "2020-04-20T12:55:01Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -196,21 +210,28 @@ public Invocations getInvocations() {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n+      EmbeddedCacheManager withSubjectCM = cacheManager.withSubject(request.getSubject());\n       Map<String, HealthStatus> cachesHeath = new HashMap<>();\n+      // Remove internal caches\n+      Set<String> cacheNames = new HashSet<>(withSubjectCM.getCacheNames());\n+      cacheNames.remove(PROTOBUF_METADATA_CACHE_NAME);\n+      cacheNames.remove(SCRIPT_CACHE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1NDg4OA==", "bodyText": "RestCacheManager.getCacheManagerAdmin() should already return a privileged RemoteCacheAdmin so remove all these Subject.doAs invocations", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r411354888", "createdAt": "2020-04-20T12:57:03Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -183,7 +187,10 @@ public Invocations getInvocations() {\n          return CompletableFuture.completedFuture(responseBuilder.build());\n       }\n       return CompletableFuture.supplyAsync(() -> {\n-         restCacheManager.getCacheManagerAdmin(request).removeCache(cacheName);\n+         Subject.doAs(request.getSubject(), (PrivilegedAction<Void>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b363293b1254dc29b15ef3e8240848bcfa9f604", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/8b363293b1254dc29b15ef3e8240848bcfa9f604", "committedDate": "2020-04-20T11:54:16Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "5a01b29137a9836bf5b8953bfd081cc5b4b7db1c", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/5a01b29137a9836bf5b8953bfd081cc5b4b7db1c", "committedDate": "2020-04-20T15:22:54Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a01b29137a9836bf5b8953bfd081cc5b4b7db1c", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/5a01b29137a9836bf5b8953bfd081cc5b4b7db1c", "committedDate": "2020-04-20T15:22:54Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "3527d4db22df90d3adf52251060c4da69e250118", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/3527d4db22df90d3adf52251060c4da69e250118", "committedDate": "2020-04-20T15:45:41Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3527d4db22df90d3adf52251060c4da69e250118", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/3527d4db22df90d3adf52251060c4da69e250118", "committedDate": "2020-04-20T15:45:41Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "5045c0bba55abf91a718cd1722fec8cfad451e82", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/5045c0bba55abf91a718cd1722fec8cfad451e82", "committedDate": "2020-04-22T15:41:47Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5045c0bba55abf91a718cd1722fec8cfad451e82", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/5045c0bba55abf91a718cd1722fec8cfad451e82", "committedDate": "2020-04-22T15:41:47Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92", "committedDate": "2020-04-24T10:14:01Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODgzMjEz", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-399883213", "createdAt": "2020-04-24T12:01:46Z", "commit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMTo0NlrOGLUYJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMTo0NlrOGLUYJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMTM4Mw==", "bodyText": "This should be unnecessary: the administration object should already have the Subject set on it.", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r414521383", "createdAt": "2020-04-24T12:01:46Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -211,7 +218,10 @@ public Invocations getInvocations() {\n       if (template != null && !template.isEmpty()) {\n          String templateName = template.iterator().next();\n          return CompletableFuture.supplyAsync(() -> {\n-            administration.createCache(cacheName, templateName);\n+            Security.doAs(request.getSubject(), (PrivilegedAction<Void>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODgzMzkw", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-399883390", "createdAt": "2020-04-24T12:02:04Z", "commit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMjowNFrOGLUYtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMjowNFrOGLUYtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMTUyNw==", "bodyText": "Same", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r414521527", "createdAt": "2020-04-24T12:02:04Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -221,7 +231,10 @@ public Invocations getInvocations() {\n       byte[] bytes = contents.rawContent();\n       if (bytes == null || bytes.length == 0) {\n          return CompletableFuture.supplyAsync(() -> {\n-            administration.createCache(cacheName, (String) null);\n+            Security.doAs(request.getSubject(), (PrivilegedAction<Void>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODgzNDUy", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-399883452", "createdAt": "2020-04-24T12:02:10Z", "commit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMjoxMFrOGLUY6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowMjoxMFrOGLUY6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMTU3Nw==", "bodyText": "Same", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r414521577", "createdAt": "2020-04-24T12:02:10Z", "author": {"login": "tristantarrant"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -242,8 +255,10 @@ public Invocations getInvocations() {\n \n       ConfigurationBuilder finalCfgBuilder = cfgBuilder;\n       return CompletableFuture.supplyAsync(() -> {\n-         administration.createCache(cacheName, finalCfgBuilder.build());\n-\n+         Security.doAs(request.getSubject(), (PrivilegedAction<Void>) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/ed4d9e44eb76cf87dec934d0c48070a4f0fb7a92", "committedDate": "2020-04-24T10:14:01Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "2ec38fdfff5cc3830c1ba1a00b739fa3e9dbead0", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/2ec38fdfff5cc3830c1ba1a00b739fa3e9dbead0", "committedDate": "2020-04-24T13:49:13Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ec38fdfff5cc3830c1ba1a00b739fa3e9dbead0", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/2ec38fdfff5cc3830c1ba1a00b739fa3e9dbead0", "committedDate": "2020-04-24T13:49:13Z", "message": "ISPN-11525 Authz handled in REST endpoints"}, "afterCommit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/712bddcd73795d7f70338ab6eabccac54758ed1b", "committedDate": "2020-04-25T08:54:59Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzUzNjQy", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-400753642", "createdAt": "2020-04-27T08:54:48Z", "commit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwODo1NDo0OFrOGMYOhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwODo1NzozNFrOGMYWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzMzAyOQ==", "bodyText": "This is changing the return payload of the API, IMO we should keep returning all caches and add a new request parameter to filter internal caches", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r415633029", "createdAt": "2020-04-27T08:54:48Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -195,21 +207,27 @@ public Invocations getInvocations() {\n       NettyRestResponse.Builder responseBuilder = checkCacheManager(request);\n       if (responseBuilder.getHttpStatus() == NOT_FOUND) return completedFuture(responseBuilder.build());\n \n-      Map<String, HealthStatus> cachesHeath = new HashMap<>();\n+      EmbeddedCacheManager subjectCacheManager = cacheManager.withSubject(request.getSubject());\n+      Map<String, HealthStatus> cachesHealth = new HashMap<>();\n+      // Remove internal caches\n+      Set<String> cacheNames = new HashSet<>(subjectCacheManager.getCacheNames());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzNDEwNQ==", "bodyText": "The idea is to have ADMIN have all permissions, but USER be a regular user, otherwise we have the same two subjects with different names", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r415634105", "createdAt": "2020-04-27T08:56:13Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/AbstractRestResourceTest.java", "diffHunk": "@@ -49,7 +49,7 @@\n public class AbstractRestResourceTest extends MultipleCacheManagersTest {\n    public static final String REALM = \"ApplicationRealm\";\n    public static final Subject ADMIN_USER = TestingUtil.makeSubject(\"ADMIN\", ScriptingManager.SCRIPT_MANAGER_ROLE, ProtobufMetadataManager.SCHEMA_MANAGER_ROLE);\n-   public static final Subject USER = TestingUtil.makeSubject(\"USER\");\n+   public static final Subject USER = TestingUtil.makeSubject(\"USER\", ProtobufMetadataManager.SCHEMA_MANAGER_ROLE, ScriptingManager.SCRIPT_MANAGER_ROLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzNDQ3OQ==", "bodyText": "Same as above, why does USER need to have the same permissions as ADMIN?", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r415634479", "createdAt": "2020-04-27T08:56:41Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/AbstractRestResourceTest.java", "diffHunk": "@@ -89,7 +89,7 @@ protected GlobalConfigurationBuilder getGlobalConfigForNode(int id) {\n    protected void addSecurity(GlobalConfigurationBuilder globalBuilder) {\n       globalBuilder.security().authorization().enable().principalRoleMapper(new IdentityRoleMapper())\n                    .role(\"ADMIN\").permission(AuthorizationPermission.ALL)\n-                   .role(\"USER\");\n+                   .role(\"USER\").permission(AuthorizationPermission.ALL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzNTExMQ==", "bodyText": "As commented before, we should not change the API return payloads, but add a new request parameter to filter out the internal caches", "url": "https://github.com/infinispan/infinispan/pull/8128#discussion_r415635111", "createdAt": "2020-04-27T08:57:34Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -142,7 +142,8 @@ public void testCaches() throws Exception {\n       String json = response.getContentAsString();\n       JsonNode jsonNode = mapper.readTree(json);\n       List<String> names = asText(jsonNode.findValues(\"name\"));\n-      Set<String> expectedNames = Util.asSet(\"defaultcache\", \"___protobuf_metadata\", \"___script_cache\", \"cache1\", \"cache2\");\n+      Set<String> expectedNames = Util.asSet(\"defaultcache\", \"cache1\", \"cache2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712bddcd73795d7f70338ab6eabccac54758ed1b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjgxNjY5", "url": "https://github.com/infinispan/infinispan/pull/8128#pullrequestreview-401681669", "createdAt": "2020-04-28T09:58:42Z", "commit": {"oid": "e6549746b5dc72270ed478f9c1ae6689945a835a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3aab5eec89e75c2b8d1c8ec2470929779bb2af", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/be3aab5eec89e75c2b8d1c8ec2470929779bb2af", "committedDate": "2020-04-28T11:38:05Z", "message": "ISPN-11525 DefaultCacheManager.withSubject()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b731c7cdfebcfb6edd100e8431bc69f79110f84", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/8b731c7cdfebcfb6edd100e8431bc69f79110f84", "committedDate": "2020-04-28T11:38:11Z", "message": "ISPN-11525 Authz handled in REST endpoints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da39c5e5b5bf49f206b291fb9c74d812a89d7062", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/da39c5e5b5bf49f206b291fb9c74d812a89d7062", "committedDate": "2020-04-28T11:38:11Z", "message": "ISPN-11525 User test subject permissions change\n* Protobuf role subject is needed for now\n* Tasks only need exec permission for now"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6549746b5dc72270ed478f9c1ae6689945a835a", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/e6549746b5dc72270ed478f9c1ae6689945a835a", "committedDate": "2020-04-27T23:02:16Z", "message": "ISPN-11525 User test subject permissions change\n* Protobuf role subject is needed for now\n* Tasks only need exec permission for now"}, "afterCommit": {"oid": "da39c5e5b5bf49f206b291fb9c74d812a89d7062", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/da39c5e5b5bf49f206b291fb9c74d812a89d7062", "committedDate": "2020-04-28T11:38:11Z", "message": "ISPN-11525 User test subject permissions change\n* Protobuf role subject is needed for now\n* Tasks only need exec permission for now"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1017, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}