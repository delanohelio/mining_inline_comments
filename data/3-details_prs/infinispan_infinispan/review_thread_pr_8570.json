{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTQ0MjIy", "number": 8570, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1NTowOFrOERLVtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxNjowNVrOER0YMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDQ3MDMwOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_creating_caches_hotrod_onaccess.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1NTowOFrOG1v8Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1NTowOFrOG1v8Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMzE2Mg==", "bodyText": "since you changed the example, I would add a link to DefaultTemplate javadoc. So, the user knows which templates are available.", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r459013162", "createdAt": "2020-07-22T18:55:08Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_creating_caches_hotrod_onaccess.adoc", "diffHunk": "@@ -50,5 +50,5 @@ infinispan.client.hotrod.cache.my-other-cache.configuration_uri=file:/path/to/co\n \n .Reference\n \n-* link:{javadocroot}/org/infinispan/client/hotrod/configuration/package-summary.html[`RemoteCacheManager` Javadoc]\n-* link:{javadocroot}/org/infinispan/client/hotrod/configuration/RemoteCacheConfigurationBuilder.html[`RemoteCacheConfigurationBuilder` Javadoc]\n+* link:{javadocroot}/org/infinispan/client/hotrod/configuration/package-summary.html[Hot Rod Client Configuration]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a26eb1803197b02a00910d1139bf500005c3b21"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDQ3NTQ2OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_server_using_datasources.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1NjoyN1rOG1v_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozODowOVrOG2IjaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMzkzNQ==", "bodyText": "is BYTEA a valid type? (honest question, I don't know the available SQL types :))", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r459013935", "createdAt": "2020-07-22T18:56:27Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_server_using_datasources.adoc", "diffHunk": "@@ -15,19 +15,19 @@ configuration of your cache configuration, as in the following example:\n \n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n-<distributed-cache-configuration name=\"persistent-cache\">\n+<distributed-cache-configuration name=\"persistent-cache\" xmlns:jdbc=\"urn:infinispan:config:store:jdbc:{schemaversion}\">\n     <persistence>\n-        <string-keyed-jdbc-store>\n-            <data-source jndi-url=\"jdbc/datasource\"/> <1>\n-            <string-keyed-table drop-on-exit=\"true\"\n+        <jdbc:string-keyed-jdbc-store>\n+            <jdbc:data-source jndi-url=\"jdbc/postgres\"/>\n+            <jdbc:string-keyed-table drop-on-exit=\"true\"\n                           create-on-start=\"true\"\n                           prefix=\"TBL\">\n-                <id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n-                <data-column name=\"DATA\" type=\"BINARY\"/>\n-                <timestamp-column name=\"TS\" type=\"BIGINT\"/>\n-                <segment-column name=\"S\" type=\"INT\"/>\n-            </string-keyed-table>\n-        </string-keyed-jdbc-store>\n+                <jdbc:id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n+                <jdbc:data-column name=\"DATA\" type=\"BYTEA\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a26eb1803197b02a00910d1139bf500005c3b21"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMwMDQ3NQ==", "bodyText": "@pruivo yeah I believe it is. https://www.postgresql.org/docs/7.2/datatype-binary.html\nI'm not the expert here though. I'll double check this with Gustavo to be sure.", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r459300475", "createdAt": "2020-07-23T08:45:15Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/proc_server_using_datasources.adoc", "diffHunk": "@@ -15,19 +15,19 @@ configuration of your cache configuration, as in the following example:\n \n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n-<distributed-cache-configuration name=\"persistent-cache\">\n+<distributed-cache-configuration name=\"persistent-cache\" xmlns:jdbc=\"urn:infinispan:config:store:jdbc:{schemaversion}\">\n     <persistence>\n-        <string-keyed-jdbc-store>\n-            <data-source jndi-url=\"jdbc/datasource\"/> <1>\n-            <string-keyed-table drop-on-exit=\"true\"\n+        <jdbc:string-keyed-jdbc-store>\n+            <jdbc:data-source jndi-url=\"jdbc/postgres\"/>\n+            <jdbc:string-keyed-table drop-on-exit=\"true\"\n                           create-on-start=\"true\"\n                           prefix=\"TBL\">\n-                <id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n-                <data-column name=\"DATA\" type=\"BINARY\"/>\n-                <timestamp-column name=\"TS\" type=\"BIGINT\"/>\n-                <segment-column name=\"S\" type=\"INT\"/>\n-            </string-keyed-table>\n-        </string-keyed-jdbc-store>\n+                <jdbc:id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n+                <jdbc:data-column name=\"DATA\" type=\"BYTEA\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMzkzNQ=="}, "originalCommit": {"oid": "2a26eb1803197b02a00910d1139bf500005c3b21"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxNjQyNA==", "bodyText": "@oraNod @pruivo depends on the database.\nFor the data column type we have:\npostgres: BYTEA\nmysql, mariadb, mssql: VARBINARY\ndb2: blob\noracle: raw\nsybase: image", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r459416424", "createdAt": "2020-07-23T12:38:09Z", "author": {"login": "gustavolira"}, "path": "documentation/src/main/asciidoc/topics/proc_server_using_datasources.adoc", "diffHunk": "@@ -15,19 +15,19 @@ configuration of your cache configuration, as in the following example:\n \n [source,xml,options=\"nowrap\",subs=attributes+]\n ----\n-<distributed-cache-configuration name=\"persistent-cache\">\n+<distributed-cache-configuration name=\"persistent-cache\" xmlns:jdbc=\"urn:infinispan:config:store:jdbc:{schemaversion}\">\n     <persistence>\n-        <string-keyed-jdbc-store>\n-            <data-source jndi-url=\"jdbc/datasource\"/> <1>\n-            <string-keyed-table drop-on-exit=\"true\"\n+        <jdbc:string-keyed-jdbc-store>\n+            <jdbc:data-source jndi-url=\"jdbc/postgres\"/>\n+            <jdbc:string-keyed-table drop-on-exit=\"true\"\n                           create-on-start=\"true\"\n                           prefix=\"TBL\">\n-                <id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n-                <data-column name=\"DATA\" type=\"BINARY\"/>\n-                <timestamp-column name=\"TS\" type=\"BIGINT\"/>\n-                <segment-column name=\"S\" type=\"INT\"/>\n-            </string-keyed-table>\n-        </string-keyed-jdbc-store>\n+                <jdbc:id-column name=\"ID\" type=\"VARCHAR(255)\"/>\n+                <jdbc:data-column name=\"DATA\" type=\"BYTEA\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMzkzNQ=="}, "originalCommit": {"oid": "2a26eb1803197b02a00910d1139bf500005c3b21"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTE5NDA5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxNjowNVrOG2u6gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoyNjo0NlrOG2vRzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NDkzMA==", "bodyText": "what about replacing \"this page\" with \"the contributing guide\"?\nplease refer to this page. vs  please refer to the contribution guide\nWDYT?\nps. same for the below", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r460044930", "createdAt": "2020-07-24T13:16:05Z", "author": {"login": "pruivo"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -5,7 +5,7 @@ Contributions from the community are essential in keeping Infinispan strong and\n \n This guide focuses on how to contribute back to Infinispan using GitHub pull requests.\n If you need help with cloning, compiling or setting the project up in an IDE please refer to\n-[this page](http://infinispan.org/docs/stable/contributing/contributing.html).\n+[this page](https://infinispan.org/docs/stable/titles/contributing/contributing.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6abe0d871c0feb18b8200142f788d55c2d811a7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1MDg5NA==", "bodyText": "yeah good call @pruivo", "url": "https://github.com/infinispan/infinispan/pull/8570#discussion_r460050894", "createdAt": "2020-07-24T13:26:46Z", "author": {"login": "oraNod"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -5,7 +5,7 @@ Contributions from the community are essential in keeping Infinispan strong and\n \n This guide focuses on how to contribute back to Infinispan using GitHub pull requests.\n If you need help with cloning, compiling or setting the project up in an IDE please refer to\n-[this page](http://infinispan.org/docs/stable/contributing/contributing.html).\n+[this page](https://infinispan.org/docs/stable/titles/contributing/contributing.html).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NDkzMA=="}, "originalCommit": {"oid": "e6abe0d871c0feb18b8200142f788d55c2d811a7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4004, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}