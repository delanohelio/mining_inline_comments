{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTk4MzUy", "number": 7803, "title": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces", "bodyText": "https://issues.jboss.org/browse/ISPN-11103", "createdAt": "2020-01-29T14:49:58Z", "url": "https://github.com/infinispan/infinispan/pull/7803", "merged": true, "mergeCommit": {"oid": "8cf2e67f190aca109478fbeba6d059d2e054775f"}, "closed": true, "closedAt": "2020-01-31T18:04:58Z", "author": {"login": "ryanemerson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_IKungBqjI5OTAwOTY4MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_wteGABqjI5OTc0MzgxODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f2f654371ebf082756eec1b32cc547da9e23d54", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/9f2f654371ebf082756eec1b32cc547da9e23d54", "committedDate": "2020-01-29T14:48:01Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}, "afterCommit": {"oid": "47340ef03a3d3c7f51a2aaedbd1be2c10de26398", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/47340ef03a3d3c7f51a2aaedbd1be2c10de26398", "committedDate": "2020-01-29T16:02:54Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47340ef03a3d3c7f51a2aaedbd1be2c10de26398", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/47340ef03a3d3c7f51a2aaedbd1be2c10de26398", "committedDate": "2020-01-29T16:02:54Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}, "afterCommit": {"oid": "b6b5a767f78cea4ef4dc1559d1cac2f90d141952", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/b6b5a767f78cea4ef4dc1559d1cac2f90d141952", "committedDate": "2020-01-29T18:12:37Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzc5NzA4", "url": "https://github.com/infinispan/infinispan/pull/7803#pullrequestreview-350379708", "createdAt": "2020-01-29T19:49:28Z", "commit": {"oid": "b6b5a767f78cea4ef4dc1559d1cac2f90d141952"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0OToyOFrOFjVb4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxOTo0OTo0MlrOFjVcXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTY4MA==", "bodyText": "This isn't correct as the segments are no longer used anymore. We should make this not have a default imo.", "url": "https://github.com/infinispan/infinispan/pull/7803#discussion_r372595680", "createdAt": "2020-01-29T19:49:28Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/persistence/spi/SegmentedAdvancedLoadWriteStore.java", "diffHunk": "@@ -212,41 +163,10 @@ default boolean delete(int segment, Object key) {\n     * @param fetchValue    whether the value should be included in the marshalled entry\n     * @param fetchMetadata whether the metadata should be included in the marshalled entry\n     * @return a publisher that will provide the entries from the store that map to the given segments\n-    * @implSpec The default implementation falls back to invoking {@link #publishEntries(Predicate, boolean,\n-    * boolean)}.\n-    * @deprecated since 10.0, please us {@link #entryPublisher(Predicate, boolean, boolean)} instead.\n-    */\n-   @Deprecated\n-   default Publisher<MarshalledEntry<K, V>> publishEntries(IntSet segments, Predicate<? super K> filter, boolean fetchValue,\n-                                                     boolean fetchMetadata) {\n-      return publishEntries(filter, fetchValue, fetchMetadata);\n-   }\n-\n-   /**\n-    * Publishes all entries from this store.  The given publisher can be used by as many {@link\n-    * org.reactivestreams.Subscriber}s as desired. Entries are not retrieved until a given Subscriber requests them from\n-    * the {@link org.reactivestreams.Subscription}.\n-    * <p>\n-    * If <b>fetchMetadata</b> is true this store must guarantee to not return any expired entries.\n-    * <p>\n-    * The segments here <b>must</b> be adhered to and the entries published must not include any that don't belong to\n-    * the provided segments.\n-    * <p>\n-    * This method is not invoked invoked when the store is not configured to be {@link StoreConfiguration#segmented()}.\n-    * {@link StoreConfiguration#segmented()}.\n-    *\n-    * @param segments      the segments that the keys of the entries must map to. Always non null.\n-    * @param filter        a filter on the keys of the entries that if passed will allow the given entry to be returned\n-    *                      from the publisher\n-    * @param fetchValue    whether the value should be included in the marshalled entry\n-    * @param fetchMetadata whether the metadata should be included in the marshalled entry\n-    * @return a publisher that will provide the entries from the store that map to the given segments\n-    * @implSpec The default implementation falls back to invoking {@link #publishEntries(IntSet, Predicate, boolean,\n-    * boolean)}.\n     */\n    default Publisher<MarshallableEntry<K, V>> entryPublisher(IntSet segments, Predicate<? super K> filter, boolean fetchValue,\n                                                              boolean fetchMetadata) {\n-      return Flowable.fromPublisher(publishEntries(segments, filter, fetchValue, fetchMetadata));\n+      return entryPublisher(filter, fetchValue, fetchMetadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b5a767f78cea4ef4dc1559d1cac2f90d141952"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5NTgwNA==", "bodyText": "Adios! This class was always so dirty feeling to me.", "url": "https://github.com/infinispan/infinispan/pull/7803#discussion_r372595804", "createdAt": "2020-01-29T19:49:42Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/persistence/util/PersistenceManagerCloseableSupplier.java", "diffHunk": "@@ -1,168 +0,0 @@\n-package org.infinispan.persistence.util;\n-\n-import java.lang.invoke.MethodHandles;\n-import java.util.concurrent.ArrayBlockingQueue;\n-import java.util.concurrent.BlockingQueue;\n-import java.util.concurrent.Executor;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicReference;\n-import java.util.concurrent.locks.Condition;\n-import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantLock;\n-import java.util.function.Predicate;\n-\n-import org.infinispan.filter.KeyFilter;\n-import org.infinispan.marshall.core.MarshalledEntry;\n-import org.infinispan.persistence.spi.AdvancedCacheLoader;\n-import org.infinispan.util.concurrent.TimeoutException;\n-import org.infinispan.util.concurrent.WithinThreadExecutor;\n-import org.infinispan.util.function.CloseableSupplier;\n-import org.infinispan.util.logging.Log;\n-import org.infinispan.util.logging.LogFactory;\n-\n-/**\n- * A closeable supplier that provides a way to supply cache entries from a given persistence manager.  On the first\n- * call to get this class will submit a task to collect all of the entries from the loader (or optionally a subset\n- * provided a given {@link org.infinispan.filter.KeyFilter}).  A timeout value is required so that if a get blocks\n- * for the given timeout it will throw a {@link TimeoutException}.\n- * @author William Burns\n- * @since 8.0\n- * @deprecated This class is to be removed when {@link AdvancedCacheLoader#process(KeyFilter, AdvancedCacheLoader.CacheLoaderTask, Executor, boolean, boolean)} is removed\n- */\n-@Deprecated\n-public class PersistenceManagerCloseableSupplier<K, V> implements CloseableSupplier<MarshalledEntry<K, V>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b5a767f78cea4ef4dc1559d1cac2f90d141952"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6b5a767f78cea4ef4dc1559d1cac2f90d141952", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/b6b5a767f78cea4ef4dc1559d1cac2f90d141952", "committedDate": "2020-01-29T18:12:37Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}, "afterCommit": {"oid": "2aae2b7bff756af818ee0b0a6cd5b4307fa826f4", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/2aae2b7bff756af818ee0b0a6cd5b4307fa826f4", "committedDate": "2020-01-30T10:18:52Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTM0MTQ4", "url": "https://github.com/infinispan/infinispan/pull/7803#pullrequestreview-351534148", "createdAt": "2020-01-31T14:19:47Z", "commit": {"oid": "334eabeb265b352f6bf81283c4649e8f955aea57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDoxOTo0OFrOFkMu9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDoxOTo0OFrOFkMu9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMTY4Ng==", "bodyText": "Probably don't need the TODO :)", "url": "https://github.com/infinispan/infinispan/pull/7803#discussion_r373501686", "createdAt": "2020-01-31T14:19:48Z", "author": {"login": "wburns"}, "path": "wildfly/infinispan/src/test/java/org/jboss/as/clustering/infinispan/cs/factory/CustomStoreWithConfiguration.java", "diffHunk": "@@ -21,6 +24,11 @@ public void init(InitializationContext ctx) {\n       return null;\n    }\n \n+   @Override\n+   public Publisher<MarshallableEntry<Object, Object>> entryPublisher(Predicate<? super Object> filter, boolean fetchValue, boolean fetchMetadata) {\n+      return null;  // TODO: Customise this generated block", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "334eabeb265b352f6bf81283c4649e8f955aea57"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTM0Mjcx", "url": "https://github.com/infinispan/infinispan/pull/7803#pullrequestreview-351534271", "createdAt": "2020-01-31T14:19:57Z", "commit": {"oid": "334eabeb265b352f6bf81283c4649e8f955aea57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDoxOTo1N1rOFkMvVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDoxOTo1N1rOFkMvVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMTc4MQ==", "bodyText": "Same here with TODO.", "url": "https://github.com/infinispan/infinispan/pull/7803#discussion_r373501781", "createdAt": "2020-01-31T14:19:57Z", "author": {"login": "wburns"}, "path": "wildfly/infinispan/src/test/java/org/jboss/as/clustering/infinispan/subsystem/CustomCacheLoader.java", "diffHunk": "@@ -19,6 +22,11 @@ public MarshallableEntry loadEntry(Object o) {\n       return null;\n    }\n \n+   @Override\n+   public Publisher<MarshallableEntry> entryPublisher(Predicate filter, boolean fetchValue, boolean fetchMetadata) {\n+      return null;  // TODO: Customise this generated block", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "334eabeb265b352f6bf81283c4649e8f955aea57"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40cdd8e5966bd1f87e6e827e4f766be7c5967532", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/40cdd8e5966bd1f87e6e827e4f766be7c5967532", "committedDate": "2020-01-31T15:17:09Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces\n\n- Remove SegmentedAdvancedLoadWriteStore default methods\n- Remove redundant StreamingMarshallerBridge"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "334eabeb265b352f6bf81283c4649e8f955aea57", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/334eabeb265b352f6bf81283c4649e8f955aea57", "committedDate": "2020-01-30T17:16:18Z", "message": "Fix loader tests"}, "afterCommit": {"oid": "40cdd8e5966bd1f87e6e827e4f766be7c5967532", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/40cdd8e5966bd1f87e6e827e4f766be7c5967532", "committedDate": "2020-01-31T15:17:09Z", "message": "ISPN-1103 Remove deprecated Persistence SPI methods and interfaces\n\n- Remove SegmentedAdvancedLoadWriteStore default methods\n- Remove redundant StreamingMarshallerBridge"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1259, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}