{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTAzMzIz", "number": 8107, "title": "ISPN-11512 The mass indexer should iterate over the cache only once", "bodyText": "https://issues.redhat.com/browse/ISPN-11512\nPerforms the mass indexer grouping same indexes types (shared/non-shared)", "createdAt": "2020-03-26T11:11:07Z", "url": "https://github.com/infinispan/infinispan/pull/8107", "merged": true, "mergeCommit": {"oid": "dc909c2e750cbfacd687ccad0a1bed70b0f5558a"}, "closed": true, "closedAt": "2020-03-30T09:15:46Z", "author": {"login": "gustavonalle"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRbStYAFqTM4MTk2MDY5NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRr9BhABqjMxNzEzMjgwNDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTYwNjk1", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381960695", "createdAt": "2020-03-26T12:30:39Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozMDozOVrOF8Elrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozMDozOVrOF8Elrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNDA2Mw==", "bodyText": "This types is used only to count them ? And then writeObject + convertToLegacy again? surely a mistake", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398534063", "createdAt": "2020-03-26T12:30:39Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -151,7 +153,15 @@ private Object extractValue(Object storageValue, DataConversion valueDataConvers\n       @Override\n       public void writeObject(ObjectOutput output, IndexWorker worker) throws IOException {\n          output.writeObject(worker.cacheName);\n-         output.writeObject(PojoIndexedTypeIdentifier.convertToLegacy(worker.indexedType));\n+         if (worker.indexedTypes == null) {\n+            output.writeInt(0);\n+         } else {\n+            Set<? extends Class<?>> types = worker.indexedTypes.stream().map(PojoIndexedTypeIdentifier::convertToLegacy).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTYyMzE0", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381962314", "createdAt": "2020-03-26T12:32:54Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozMjo1NVrOF8EqyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozMjo1NVrOF8EqyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNTM2OA==", "bodyText": "Is the initial capacity really helping ?", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398535368", "createdAt": "2020-03-26T12:32:55Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -162,14 +172,19 @@ public void writeObject(ObjectOutput output, IndexWorker worker) throws IOExcept\n       @Override\n       public IndexWorker readObject(ObjectInput input) throws IOException, ClassNotFoundException {\n          String cacheName = (String) input.readObject();\n-         Class indexedClass = (Class) input.readObject();\n+         int typesSize = input.readInt();\n+         Set<IndexedTypeIdentifier> types = new HashSet<>(typesSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTYzMjg1", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381963285", "createdAt": "2020-03-26T12:34:18Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozNDoxOFrOF8Et4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozNDoxOFrOF8Et4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNjE2Mw==", "bodyText": "The if (typesSize > 0)  is not needed, the for already guards against that.", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398536163", "createdAt": "2020-03-26T12:34:18Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -162,14 +172,19 @@ public void writeObject(ObjectOutput output, IndexWorker worker) throws IOExcept\n       @Override\n       public IndexWorker readObject(ObjectInput input) throws IOException, ClassNotFoundException {\n          String cacheName = (String) input.readObject();\n-         Class indexedClass = (Class) input.readObject();\n+         int typesSize = input.readInt();\n+         Set<IndexedTypeIdentifier> types = new HashSet<>(typesSize);\n+         if (typesSize > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTY1MzMw", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381965330", "createdAt": "2020-03-26T12:37:04Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozNzowNFrOF8E0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozNzowNFrOF8E0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzNzc0OQ==", "bodyText": "Perfect timing to also sort out the TODO on line 76", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398537749", "createdAt": "2020-03-26T12:37:04Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -46,17 +47,17 @@\n public final class IndexWorker implements Function<EmbeddedCacheManager, Void> {\n \n    private final String cacheName;\n-   private final IndexedTypeIdentifier indexedType;\n+   private final Set<IndexedTypeIdentifier> indexedTypes;\n    private final boolean flush;\n    private final boolean clean;\n    private final boolean skipIndex;\n    private final boolean primaryOwner;\n    private final Set<Object> keys;\n \n-   IndexWorker(String cacheName, IndexedTypeIdentifier indexedType, boolean flush, boolean clean, boolean skipIndex,\n+   IndexWorker(String cacheName, Set<IndexedTypeIdentifier> indexedTypes, boolean flush, boolean clean, boolean skipIndex,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTY2ODIy", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381966822", "createdAt": "2020-03-26T12:39:07Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozOTowN1rOF8E46A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjozOTowN1rOF8E46A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODk4NA==", "bodyText": "When reading, this silently leads to null being transformed into empty set. Do we care?", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398538984", "createdAt": "2020-03-26T12:39:07Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -151,7 +153,15 @@ private Object extractValue(Object storageValue, DataConversion valueDataConvers\n       @Override\n       public void writeObject(ObjectOutput output, IndexWorker worker) throws IOException {\n          output.writeObject(worker.cacheName);\n-         output.writeObject(PojoIndexedTypeIdentifier.convertToLegacy(worker.indexedType));\n+         if (worker.indexedTypes == null) {\n+            output.writeInt(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTY5NjM5", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381969639", "createdAt": "2020-03-26T12:42:59Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo0Mjo1OVrOF8FCJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo0Mjo1OVrOF8FCJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0MTM0OQ==", "bodyText": "I think this TODO was just resolved \ud83d\ude01", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398541349", "createdAt": "2020-03-26T12:42:59Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/IndexWorker.java", "diffHunk": "@@ -103,8 +104,9 @@ public Void apply(EmbeddedCacheManager embeddedCacheManager) {\n                      value = wrapper.wrap(value);\n                   }\n                   //TODO do not use Class equality but refactor to type equality:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTc2MTcz", "url": "https://github.com/infinispan/infinispan/pull/8107#pullrequestreview-381976173", "createdAt": "2020-03-26T12:51:42Z", "commit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1MTo0MlrOF8FXuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1MTo0MlrOF8FXuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU0Njg3Mg==", "bodyText": "This compositeFuture could be declared directly where it is used.", "url": "https://github.com/infinispan/infinispan/pull/8107#discussion_r398546872", "createdAt": "2020-03-26T12:51:42Z", "author": {"login": "anistor"}, "path": "query/src/main/java/org/infinispan/query/impl/massindex/DistributedExecutorMassIndexer.java", "diffHunk": "@@ -186,33 +186,32 @@ public boolean isRunning() {\n \n          BiConsumer<Void, Throwable> flushIfNeeded = (v, t) -> {\n             try {\n-               for (IndexedTypeIdentifier type : toFlush) {\n-                  indexUpdater.flush(type);\n-               }\n+               indexUpdater.flush(toFlush);\n             } finally {\n                lock.unlock();\n             }\n          };\n          CompletableFuture<Void> compositeFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1cfe6d8c8a514d050f92b8dd720154afb21e2e", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/2d1cfe6d8c8a514d050f92b8dd720154afb21e2e", "committedDate": "2020-03-27T07:55:11Z", "message": "ISPN-11512 Group indexing operations by shared/not-shared index type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2c6751b97d1c98497b384b8f6ab90c59b283773", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/c2c6751b97d1c98497b384b8f6ab90c59b283773", "committedDate": "2020-03-26T10:59:54Z", "message": "ISPN-11512 Group indexing operations by shared/not-shared index type"}, "afterCommit": {"oid": "2d1cfe6d8c8a514d050f92b8dd720154afb21e2e", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/2d1cfe6d8c8a514d050f92b8dd720154afb21e2e", "committedDate": "2020-03-27T07:55:11Z", "message": "ISPN-11512 Group indexing operations by shared/not-shared index type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 984, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}