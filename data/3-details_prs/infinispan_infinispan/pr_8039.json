{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODExNjc5", "number": 8039, "title": "ISPN-10270 Fix DropppedConnectionsTest random failures", "bodyText": "https://issues.redhat.com/browse/ISPN-10270", "createdAt": "2020-03-11T17:01:41Z", "url": "https://github.com/infinispan/infinispan/pull/8039", "merged": true, "mergeCommit": {"oid": "456e803f85ad248c4334b999c4f7c6843762b684"}, "closed": true, "closedAt": "2020-03-24T15:19:21Z", "author": {"login": "tristantarrant"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNQ5dCAFqTM3NDIzNDg4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOhBWlABqjMxMzY5MjA3NTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MjM0ODg2", "url": "https://github.com/infinispan/infinispan/pull/8039#pullrequestreview-374234886", "createdAt": "2020-03-13T11:41:31Z", "commit": {"oid": "a0253985c8b49f62c71dd4670e1b06a38d00cb15"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTo0MTozMVrOF2AqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTo1Mzo1MFrOF2A-uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3ODI5Nw==", "bodyText": "I'd rather keep separate sentences on separate lines :)", "url": "https://github.com/infinispan/infinispan/pull/8039#discussion_r392178297", "createdAt": "2020-03-13T11:41:31Z", "author": {"login": "danberindei"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/transport/netty/ChannelPool.java", "diffHunk": "@@ -21,16 +21,15 @@\n import io.netty.util.internal.PlatformDependent;\n \n /**\n- * This is a custom implementation of {@link io.netty.channel.Channel} pooling.\n- * Compared to {@link io.netty.channel.pool.ChannelPool} implementations in Netty it does not enforce\n- * context switch before writing to the channel.\n- * **Update**: Netty enforces going through event loop later on by delegating the write through\n- * {@link io.netty.channel.AbstractChannelHandlerContext.WriteAndFlushTask}. So writing the socket in caller\n- * thread is still TODO.\n- *\n- * It should be also more allocation-efficient since it does not create futures and invokes the callback directly\n- * if the channel is available.\n- *\n+ * This is a custom implementation of {@link io.netty.channel.Channel} pooling. Compared to {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0253985c8b49f62c71dd4670e1b06a38d00cb15"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4MzQ4MQ==", "bodyText": "Why is this assert no longer valid? I'd like to see an explanation here or in the executeOperation() javadoc on what the operation should expect, because many operations write to the channel without checking if it's active first.", "url": "https://github.com/infinispan/infinispan/pull/8039#discussion_r392183481", "createdAt": "2020-03-13T11:53:50Z", "author": {"login": "danberindei"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/impl/operations/RetryOnFailureOperation.java", "diffHunk": "@@ -69,7 +69,6 @@ protected RetryOnFailureOperation(short requestCode, short responseCode, Codec c\n \n    @Override\n    public void invoke(Channel channel) {\n-      assert channel.isActive();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0253985c8b49f62c71dd4670e1b06a38d00cb15"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75c934f74fc79c2c0070dfad567e2522e90378d8", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/75c934f74fc79c2c0070dfad567e2522e90378d8", "committedDate": "2020-03-17T11:29:15Z", "message": "ISPN-10270 Fix DropppedConnectionsTest random failures\n\n* Let RetryOnFailureOperation's error handling logic handle inactive channels\n*\n* Refactor test to allow repeated invocations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0253985c8b49f62c71dd4670e1b06a38d00cb15", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/a0253985c8b49f62c71dd4670e1b06a38d00cb15", "committedDate": "2020-03-11T17:01:27Z", "message": "ISPN-10270 Fix DropppedConnectionsTest random failures\n\n* Let RetryOnFailureOperation's error handling logic handle inactive channels\n*\n* Refactor test to allow repeated invocations"}, "afterCommit": {"oid": "75c934f74fc79c2c0070dfad567e2522e90378d8", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/75c934f74fc79c2c0070dfad567e2522e90378d8", "committedDate": "2020-03-17T11:29:15Z", "message": "ISPN-10270 Fix DropppedConnectionsTest random failures\n\n* Let RetryOnFailureOperation's error handling logic handle inactive channels\n*\n* Refactor test to allow repeated invocations"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1100, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}