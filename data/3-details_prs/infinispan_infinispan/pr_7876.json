{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODM1MTM2", "number": 7876, "title": "[9.4.x] ISPN-11209 Max Idle changes caused a REPL read performance regression", "bodyText": "Updated missing reference\n\nhttps://issues.redhat.com/browse/ISPN-11209", "createdAt": "2020-02-11T19:20:45Z", "url": "https://github.com/infinispan/infinispan/pull/7876", "merged": true, "mergeCommit": {"oid": "8f8201187c3142a8df7c26580a7cb5e9c26a11d7"}, "closed": true, "closedAt": "2020-02-12T07:17:32Z", "author": {"login": "wburns"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDW9uNgBqjMwMjc5MjU0Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDZKnygFqTM1NzAwMTkyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e96f2bbe536bbf4ecd3eb240cdb94826e879f8b2", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/e96f2bbe536bbf4ecd3eb240cdb94826e879f8b2", "committedDate": "2020-02-11T19:19:33Z", "message": "ISPN-11209 Max Idle changes caused a REPL read performance regression\n\n* Updated missing reference"}, "afterCommit": {"oid": "6e0f686104518fea26446518214488db312d7882", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/6e0f686104518fea26446518214488db312d7882", "committedDate": "2020-02-11T19:33:05Z", "message": "ISPN-11209 Max Idle changes caused a REPL read performance regression\n\n* Updated missing reference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/6d716460226f2748dfe134a0db64dd2fd1fb160c", "committedDate": "2020-02-11T20:39:48Z", "message": "ISPN-11209 Max Idle changes caused a REPL read performance regression\n\n* Updated missing reference"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecc965f94f809da0a961487dbffe77d749d50463", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/ecc965f94f809da0a961487dbffe77d749d50463", "committedDate": "2020-02-11T20:31:51Z", "message": "fixes remaining tests?"}, "afterCommit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/6d716460226f2748dfe134a0db64dd2fd1fb160c", "committedDate": "2020-02-11T20:39:48Z", "message": "ISPN-11209 Max Idle changes caused a REPL read performance regression\n\n* Updated missing reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDAxOTI3", "url": "https://github.com/infinispan/infinispan/pull/7876#pullrequestreview-357001927", "createdAt": "2020-02-11T21:17:34Z", "commit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNzozNFrOFoZZng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMjowMTowOVrOFoaxTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMzUxOA==", "bodyText": "AFAICT the PeekableTouchableMap impls implement Lifecycle, not AutoCloseable, so maybe this code isn't needed at all?", "url": "https://github.com/infinispan/infinispan/pull/7876#discussion_r377903518", "createdAt": "2020-02-11T21:17:34Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/container/impl/DefaultSegmentedDataContainer.java", "diffHunk": "@@ -234,11 +234,11 @@ public void removeSegments(IntSet segments) {\n \n    private void startNewMap(int segment) {\n       if (maps.get(segment) == null) {\n-         PeekableTouchableContainerMap<K, V> newMap = new PeekableTouchableContainerMap<>(mapSupplier.get());\n+         PeekableTouchableMap<K, InternalCacheEntry<K, V>> newMap = mapSupplier.get();\n          // Just in case of concurrent starts - this shouldn't be possible\n-         if (!maps.compareAndSet(segment, null, newMap) && newMap.delegate() instanceof AutoCloseable) {\n+         if (!maps.compareAndSet(segment, null, newMap) && newMap instanceof AutoCloseable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwNDk1Nw==", "bodyText": "Comment still says \"it wasn't touched\"", "url": "https://github.com/infinispan/infinispan/pull/7876#discussion_r377904957", "createdAt": "2020-02-11T21:19:06Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/container/offheap/OffHeapConcurrentMap.java", "diffHunk": "@@ -58,7 +58,7 @@\n    @Override\n    public boolean touchKey(Object key, long currentTimeMillis) {\n       // OFF HEAP does not support max idle in this version - just say it wasn't touched\n-      return false;\n+      return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTk2NQ==", "bodyText": "\ud83d\udc4d\nFor master, the declaration would be simpler if you made PeekableTouchableMap<K, V> implement ConcurrentMap<K, InternalCacheEntry<K, V>>, and the PeekableMap and TouchableMap interfaces also don't seem to be used by themselves:\n1f21b70\nI'd go even further and change the interface name, e.g. DataContainerSegment, so there's no confusion because the V means something else compared to Map.", "url": "https://github.com/infinispan/infinispan/pull/7876#discussion_r377925965", "createdAt": "2020-02-11T22:01:09Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/factories/DataContainerFactory.java", "diffHunk": "@@ -65,7 +68,8 @@ public Object construct(String componentName) {\n                int addressCount = memoryConfiguration.addressCount();\n                if (shouldSegment) {\n                   int segments = clusteringConfiguration.hash().numSegments();\n-                  Supplier mapSupplier = () -> createAndStartOffHeapConcurrentMap(addressCount, segments);\n+                  Supplier<PeekableTouchableMap<WrappedBytes, InternalCacheEntry<WrappedBytes, WrappedBytes>>>\n+                        mapSupplier = () -> createAndStartOffHeapConcurrentMap(addressCount, segments);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d716460226f2748dfe134a0db64dd2fd1fb160c"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1146, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}