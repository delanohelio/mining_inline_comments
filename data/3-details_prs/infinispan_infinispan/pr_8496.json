{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODA0NTIx", "number": 8496, "title": "ISPN-12036 Automatically register SerializationContextInitializers de\u2026", "bodyText": "https://issues.redhat.com/browse/ISPN-12036\nGoes hand in hand with infinispan/protostream#101", "createdAt": "2020-06-22T09:23:27Z", "url": "https://github.com/infinispan/infinispan/pull/8496", "merged": true, "mergeCommit": {"oid": "f61aae51ffc68df675909955136f93cd33b6f3f9"}, "closed": true, "closedAt": "2020-07-02T12:45:17Z", "author": {"login": "tristantarrant"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctsycsAH2gAyNDM3ODA0NTIxOjk0MTI3MjEzOWYyNDMwM2ExMjNmOGNjNGFlZTEwYTUyMDUyMjQzNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw_6aUAFqTQ0MTc0NjI4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "941272139f24303a123f8cc4aee10a520522436b", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/941272139f24303a123f8cc4aee10a520522436b", "committedDate": "2020-06-22T08:43:36Z", "message": "ISPN-12036 Automatically register SerializationContextInitializers declared in services"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Nzg1NDk1", "url": "https://github.com/infinispan/infinispan/pull/8496#pullrequestreview-434785495", "createdAt": "2020-06-22T10:11:05Z", "commit": {"oid": "941272139f24303a123f8cc4aee10a520522436b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzQ2Mjg2", "url": "https://github.com/infinispan/infinispan/pull/8496#pullrequestreview-441746286", "createdAt": "2020-07-02T14:42:15Z", "commit": {"oid": "941272139f24303a123f8cc4aee10a520522436b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0MjoxNlrOGsQAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0MjoxNlrOGsQAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MjcwMw==", "bodyText": "Providing more detail on what I said before, here I was expecting the service loader would be used only if there are no manually configured SCI's in globalConfiguration.serialization().\nThe auto-registration is nice for simple use cases, which might account for 90% real use cases. But it cannot give you any way out of situations when schemas are conflicting for any reason.\nTo support debugging of such situations I propose adding INFO logging here, with the names of all SCI's being registred. And after the registration I would also dump the eventual errors, with ERROR level immediately.", "url": "https://github.com/infinispan/infinispan/pull/8496#discussion_r449052703", "createdAt": "2020-07-02T14:42:16Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/ProtobufMetadataManagerImpl.java", "diffHunk": "@@ -95,6 +95,7 @@ void start() {\n             getProtobufMetadataCacheConfig(globalConfiguration).build(),\n             EnumSet.of(InternalCacheRegistry.Flag.USER, InternalCacheRegistry.Flag.PROTECTED, InternalCacheRegistry.Flag.PERSISTENT));\n \n+      processSerializationContextInitializer(ServiceFinder.load(SerializationContextInitializer.class, globalConfiguration.classLoader()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941272139f24303a123f8cc4aee10a520522436b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}