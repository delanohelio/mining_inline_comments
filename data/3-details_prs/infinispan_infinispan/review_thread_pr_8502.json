{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MjgzNDY0", "number": 8502, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMjowOVrOEJpvTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMjo0OFrOEJqTrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTU2NDk0OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMjowOVrOGqQP3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMjowOVrOGqQP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1OTU4Mw==", "bodyText": "nitpick: javadoc?", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446959583", "createdAt": "2020-06-29T13:12:09Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -101,6 +119,8 @@\n     */\n    CompletionStage<RestResponse> put(String key, RestEntity value);\n \n+   CompletionStage<RestResponse> put(String key, RestEntity value, String... flags);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTU3Mjg5OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMzo1NVrOGqQUlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNDowMToxNVrOGqSYrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ==", "bodyText": "is this only for the next release cycle?", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446960789", "createdAt": "2020-06-29T13:13:55Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4MzExNg==", "bodyText": "Do we have another 11.x release?", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446983116", "createdAt": "2020-06-29T13:45:32Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4NTU2OA==", "bodyText": "yes, 11.0.1.Final is needed to be consumed downstream.", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446985568", "createdAt": "2020-06-29T13:48:48Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4Njk3OQ==", "bodyText": "ok, I will change it", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446986979", "createdAt": "2020-06-29T13:50:46Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4ODU0Ng==", "bodyText": "we can keep this on hold until we branch 11.x (that should happen this week)", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446988546", "createdAt": "2020-06-29T13:52:57Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NDYwNA==", "bodyText": "+1\nThis is a not needed in 11.x anyway", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446994604", "createdAt": "2020-06-29T14:01:15Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2MDc4OQ=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTY0MTM2OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyOToxMVrOGqQ-0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo0NjoyMFrOGqRuMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MTYwMg==", "bodyText": "why a String and not a Collection/Array?", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446971602", "createdAt": "2020-06-29T13:29:11Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestResponse.java", "diffHunk": "@@ -17,6 +17,11 @@\n \n    Map<String, List<String>> headers();\n \n+   /**\n+    * Returns the value of a header as a String. For multi-valued headers, values are separated by comma.\n+    */\n+   String getHeader(String header);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4MzczMQ==", "bodyText": "Because 99% of the headers are single values...And there is another method for them (the multivalues)", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446983731", "createdAt": "2020-06-29T13:46:20Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestResponse.java", "diffHunk": "@@ -17,6 +17,11 @@\n \n    Map<String, List<String>> headers();\n \n+   /**\n+    * Returns the value of a header as a String. For multi-valued headers, values are separated by comma.\n+    */\n+   String getHeader(String header);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MTYwMg=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTY0NTY2OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestResponseOkHttp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMDowNVrOGqRBSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMDowNVrOGqRBSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MjIzNA==", "bodyText": "well, can be final as well.", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446972234", "createdAt": "2020-06-29T13:30:05Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestResponseOkHttp.java", "diffHunk": "@@ -10,16 +10,19 @@\n import org.infinispan.commons.dataconversion.MediaType;\n \n import okhttp3.Response;\n+import okhttp3.ResponseBody;\n \n /**\n  * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n  * @since 10.0\n  **/\n public class RestResponseOkHttp implements RestResponse {\n    Response response;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTY0ODU4OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestResponseOkHttp.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMDo0NFrOGqRC-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo0Njo1NlrOGqRv0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MjY2Ng==", "bodyText": "why caching the body? it seems to be simple field access.", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446972666", "createdAt": "2020-06-29T13:30:44Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestResponseOkHttp.java", "diffHunk": "@@ -10,16 +10,19 @@\n import org.infinispan.commons.dataconversion.MediaType;\n \n import okhttp3.Response;\n+import okhttp3.ResponseBody;\n \n /**\n  * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n  * @since 10.0\n  **/\n public class RestResponseOkHttp implements RestResponse {\n    Response response;\n+   private final ResponseBody body;\n \n    RestResponseOkHttp(Response response) {\n       this.response = response;\n+      this.body = this.response.body();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4NDE0NA==", "bodyText": "The body can be consumed only once, then it starts throwing errors...", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446984144", "createdAt": "2020-06-29T13:46:56Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestResponseOkHttp.java", "diffHunk": "@@ -10,16 +10,19 @@\n import org.infinispan.commons.dataconversion.MediaType;\n \n import okhttp3.Response;\n+import okhttp3.ResponseBody;\n \n /**\n  * @author Tristan Tarrant &lt;tristan@infinispan.org&gt;\n  * @since 10.0\n  **/\n public class RestResponseOkHttp implements RestResponse {\n    Response response;\n+   private final ResponseBody body;\n \n    RestResponseOkHttp(Response response) {\n       this.response = response;\n+      this.body = this.response.body();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MjY2Ng=="}, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTY1ODA2OnYy", "diffSide": "RIGHT", "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMjo0OFrOGqRIug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMjo0OFrOGqRIug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3NDEzOA==", "bodyText": "nitpick: use TEXT_PLAIN?", "url": "https://github.com/infinispan/infinispan/pull/8502#discussion_r446974138", "createdAt": "2020-06-29T13:32:48Z", "author": {"login": "pruivo"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/impl/okhttp/RestSchemasClientOkHttp.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.infinispan.client.rest.impl.okhttp;\n+\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.TEXT_PLAIN;\n+import static org.infinispan.client.rest.impl.okhttp.RestClientOkHttp.sanitize;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.infinispan.client.rest.RestResponse;\n+import org.infinispan.client.rest.RestSchemaClient;\n+\n+import okhttp3.Request;\n+import okhttp3.RequestBody;\n+\n+/**\n+ * @since 12.0\n+ */\n+public class RestSchemasClientOkHttp implements RestSchemaClient {\n+\n+   private final RestClientOkHttp client;\n+   private final String baseUrl;\n+\n+   public RestSchemasClientOkHttp(RestClientOkHttp client) {\n+      this.client = client;\n+      this.baseUrl = String.format(\"%s%s/v2/schemas\", client.getBaseURL(), client.getConfiguration().contextPath())\n+            .replaceAll(\"//\", \"/\");\n+   }\n+\n+   @Override\n+   public CompletionStage<RestResponse> names() {\n+      return client.execute(baseUrl);\n+   }\n+\n+   @Override\n+   public CompletionStage<RestResponse> post(String schemaName, String schemaContents) {\n+      Request.Builder builder = new Request.Builder();\n+      RequestBody body = RequestBody.create(TEXT_PLAIN, schemaContents);\n+      builder.url(schemaUrl(schemaName)).post(body);\n+      return client.execute(builder);\n+   }\n+\n+   @Override\n+   public CompletionStage<RestResponse> put(String schemaName, String schemaContents) {\n+      Request.Builder builder = new Request.Builder();\n+      RequestBody body = RequestBody.create(TEXT_PLAIN, schemaContents);\n+      builder.url(schemaUrl(schemaName)).put(body);\n+      return client.execute(builder);\n+   }\n+\n+   @Override\n+   public CompletionStage<RestResponse> delete(String schemaName) {\n+      Request.Builder builder = new Request.Builder();\n+      builder.url(schemaUrl(schemaName)).delete();\n+      return client.execute(builder);\n+   }\n+\n+   @Override\n+   public CompletionStage<RestResponse> get(String schemaName) {\n+      Request.Builder builder = new Request.Builder();\n+      builder.header(\"Accept\", \"text/plain\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34589b616075cd22c74f4b9487536b7391fbf011"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4102, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}