{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjgyMTE0", "number": 8579, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo1OTowN1rOETUhrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo1OTowN1rOETUhrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Njk0NzAzOnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo1OTowN1rOG4_Sxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1NDozM1rOG5vwKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMDQzOQ==", "bodyText": "I'd rather have a switch statement with explicit os-specific calls.", "url": "https://github.com/infinispan/infinispan/pull/8579#discussion_r462410439", "createdAt": "2020-07-29T15:59:07Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -554,14 +554,15 @@ public TaskManager getTaskManager() {\n    @Override\n    public CompletionStage<Path> getServerReport() {\n       OS os = OS.getCurrentOs();\n-      if (os != OS.LINUX) {\n+      if (os == OS.WINDOWS) {\n          return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n       }\n       long pid = ProcessInfo.getInstance().getPid();\n       Path home = serverHome.toPath();\n       Path root = serverRoot.toPath();\n       ProcessBuilder builder = new ProcessBuilder();\n-      builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\n+      String reportFile = String.format(\"bin/%s\", OS.getCurrentOs() == OS.LINUX ? \"report.sh\" : \"report-osx.sh\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fcdc5642750d4f12c74f1ef92bf23216121e174"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwNDM5Mg==", "bodyText": "@tristantarrant updated", "url": "https://github.com/infinispan/infinispan/pull/8579#discussion_r463204392", "createdAt": "2020-07-30T18:54:33Z", "author": {"login": "gustavolira"}, "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -554,14 +554,15 @@ public TaskManager getTaskManager() {\n    @Override\n    public CompletionStage<Path> getServerReport() {\n       OS os = OS.getCurrentOs();\n-      if (os != OS.LINUX) {\n+      if (os == OS.WINDOWS) {\n          return CompletableFutures.completedExceptionFuture(log.serverReportUnavailable(os));\n       }\n       long pid = ProcessInfo.getInstance().getPid();\n       Path home = serverHome.toPath();\n       Path root = serverRoot.toPath();\n       ProcessBuilder builder = new ProcessBuilder();\n-      builder.command(\"sh\", \"-c\", home.resolve(\"bin/report.sh\").toString(), Long.toString(pid), root.toString());\n+      String reportFile = String.format(\"bin/%s\", OS.getCurrentOs() == OS.LINUX ? \"report.sh\" : \"report-osx.sh\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMDQzOQ=="}, "originalCommit": {"oid": "4fcdc5642750d4f12c74f1ef92bf23216121e174"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4012, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}