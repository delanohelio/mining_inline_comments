{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTc1MzY3", "number": 8571, "title": "ISPN-10249 Upgrade to Hibernate Search 6", "bodyText": "https://issues.redhat.com/browse/ISPN-10249\nReopening of #8226", "createdAt": "2020-07-21T15:18:35Z", "url": "https://github.com/infinispan/infinispan/pull/8571", "merged": true, "mergeCommit": {"oid": "91d194f1a4e6f6990903ea42094be659142bb4d5"}, "closed": true, "closedAt": "2020-07-26T18:25:51Z", "author": {"login": "fax4ever"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3IOXfgFqTQ1MjU5MzI4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FCq6gH2gAyNDU0NTc1MzY3OjA2ZjJmOTQ2NDE1NDQ2ZGIxOTI2NTRlNTE0ZDE3MTc1NTVlZTMwMWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTkzMjg1", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-452593285", "createdAt": "2020-07-21T15:46:50Z", "commit": {"oid": "45b82c7749dc5e80335c5e14daeb6b7be47f9697"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo0Njo1MVrOG0-Xtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNTo0Njo1MVrOG0-Xtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMTAxNA==", "bodyText": "I think you don't have to remove this, just replace LUCENE_CURRENT with LATEST.", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458201014", "createdAt": "2020-07-21T15:46:51Z", "author": {"login": "yrodiere"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/event/ClientListenerWithDslFilterObjectStorageTest.java", "diffHunk": "@@ -81,8 +81,7 @@ protected ConfigurationBuilder getConfigurationBuilder() {\n       cfgBuilder.encoding().key().mediaType(MediaType.APPLICATION_OBJECT_TYPE);\n       cfgBuilder.encoding().value().mediaType(MediaType.APPLICATION_OBJECT_TYPE);\n       cfgBuilder.indexing().enable()\n-            .addProperty(\"default.directory_provider\", \"local-heap\")\n-            .addProperty(\"lucene_version\", \"LUCENE_CURRENT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45b82c7749dc5e80335c5e14daeb6b7be47f9697"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a093e2bd6f15684245470b0329e71c1e06016af", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/6a093e2bd6f15684245470b0329e71c1e06016af", "committedDate": "2020-07-21T15:17:00Z", "message": "ISPN-10249 Remove maven parent reference"}, "afterCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/973742666427584064f0529d85af66024e57d0ab", "committedDate": "2020-07-21T18:02:04Z", "message": "ISPN-10249 Filter indexed-protobuf entities by cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTU5ODMz", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-453159833", "createdAt": "2020-07-22T09:43:23Z", "commit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTo0MzoyM1rOG1a9NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTo0MzoyM1rOG1a9NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2OTM2NQ==", "bodyText": "@fax4ever Unless I'm mistaken, you're not closing the search mapping, which leads to the test failures in CI mentioning \"leaked threads\".\nThere are other test failures mentioning thread leaks, maybe you should have a look at them? The name of the test generally appears somewhere in the stack trace.", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458669365", "createdAt": "2020-07-22T09:43:23Z", "author": {"login": "yrodiere"}, "path": "query/src/test/java/org/infinispan/query/dsl/embedded/impl/HibernateSearchPropertyHelperTest.java", "diffHunk": "@@ -20,14 +21,14 @@\n  */\n public class HibernateSearchPropertyHelperTest {\n \n-   @Rule\n-   public SearchFactoryHolder factoryHolder = new SearchFactoryHolder(TestEntity.class);\n-\n    private HibernateSearchPropertyHelper propertyHelper;\n \n    @Before\n    public void setup() {\n-      propertyHelper = new HibernateSearchPropertyHelper(factoryHolder.getSearchFactory(), new ReflectionEntityNamesResolver(null));\n+      SearchMappingHolder mappingHolder = mock(SearchMappingHolder.class);\n+      when(mappingHolder.getSearchMapping()).thenReturn(\n+            SearchMappingHelper.createSearchMappingForTests(TestEntity.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTAzNDU4", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-453103458", "createdAt": "2020-07-22T08:28:12Z", "commit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODoyODoxMlrOG1YNAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoxMDozM1rOG1kQCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNDI1OQ==", "bodyText": "We deprecated SearchManager in 11, and it's going to be removed in 12, so It's better to not add features to it", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458624259", "createdAt": "2020-07-22T08:28:12Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/SearchManager.java", "diffHunk": "@@ -88,6 +53,8 @@\n    @Deprecated\n    void purge(Class<?> entityType);\n \n+   void refresh(Class<?> entityType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNjgwMQ==", "bodyText": "CacheQuery is also deprecated, so better not to change it.", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458626801", "createdAt": "2020-07-22T08:32:14Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/CacheQuery.java", "diffHunk": "@@ -67,70 +63,22 @@\n     */\n    CacheQuery<E> maxResults(int numResults);\n \n-   /**\n-    * @return return the manager for all faceting related operations\n-    */\n-   FacetManager getFacetManager();\n-\n    /**\n     * Gets the total number of results matching the query, ignoring pagination (firstResult, maxResult).\n     *\n     * @return total number of results.\n     */\n-   int getResultSize();\n+   long getResultSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyODIxNw==", "bodyText": "This class is also deprecated. Same as CacheQuery and SearchManager. Could you avoid changing them, and if it's not possible, just remove?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458628217", "createdAt": "2020-07-22T08:34:43Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/spi/SearchManagerImplementor.java", "diffHunk": "@@ -15,33 +12,13 @@\n @Deprecated\n public interface SearchManagerImplementor extends SearchManager {\n \n-   /**\n-    * Define the timeout exception factory to customize the exception thrown when the query timeout is exceeded.\n-    *\n-    * @param timeoutExceptionFactory the timeout exception factory to use\n-    * @deprecated Since 11.0, without replacement. To be removed in next major version.\n-    */\n-   @Deprecated\n-   void setTimeoutExceptionFactory(TimeoutExceptionFactory timeoutExceptionFactory);\n-\n    /**\n     * Creates a cache query based on a {@link QueryDefinition} and a custom metadata.\n     * @deprecated Since 11.0, without replacement. To be removed in next major version.\n     */\n    @Deprecated\n-   <E> CacheQuery<E> getQuery(QueryDefinition queryDefinition, IndexedQueryMode indexedQueryMode, IndexedTypeMap<CustomTypeMetadata> indexedTypeMap);\n+   <E> CacheQuery<E> getQuery(QueryDefinition queryDefinition, IndexedQueryMode indexedQueryMode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MDkyNQ==", "bodyText": "Is there an easy way to create an alias at Infinispan side so that we could deprecate the old properties instead of removing them?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458780925", "createdAt": "2020-07-22T13:13:40Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/admin/RemoteCacheAdminTest.java", "diffHunk": "@@ -46,7 +47,7 @@ protected void createCacheManagers() throws Throwable {\n             getDefaultClusteredCacheConfig(CacheMode.DIST_SYNC, false));\n       builder.indexing().enable()\n              .addIndexedEntity(\"sample_bank_account.Transaction\")\n-             .addProperty(\"default.directory_provider\", \"local-heap\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MzE1NA==", "bodyText": "Why did this change? Did the POJO in the test change or is it something new brougth by  HSearch 6?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458783154", "createdAt": "2020-07-22T13:17:00Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/marshall/NonIndexedEmbeddedRemoteQueryTest.java", "diffHunk": "@@ -25,10 +24,4 @@ protected ConfigurationBuilder createConfigBuilder() {\n       builder.encoding().value().mediaType(MediaType.APPLICATION_OBJECT_TYPE);\n       return builder;\n    }\n-\n-   @Test(expectedExceptions = HotRodClientException.class, expectedExceptionsMessageRegExp = \"org.infinispan.objectfilter.ParsingException: ISPN028521: Full-text queries cannot be applied to property 'longDescription' in type sample_bank_account.Transaction unless the property is indexed and analyzed.\")\n-   @Override\n-   public void testRemoteFullTextQuery() {\n-      super.testRemoteFullTextQuery();\n-   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4MzcwNQ==", "bodyText": "I am not sure what is that parent about, asking @pruivo: is it OK to remove it?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458783705", "createdAt": "2020-07-22T13:17:46Z", "author": {"login": "gustavonalle"}, "path": "build-configuration/pom.xml", "diffHunk": "@@ -2,12 +2,6 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n \n-   <parent>\n-      <groupId>org.jboss</groupId>\n-      <artifactId>jboss-parent</artifactId>\n-      <version>36</version>\n-   </parent>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4NjM0Ng==", "bodyText": "It seems many of the new config added here is unrelated to the old config. So that we can understand and proper document in the upgrade guide, would it be possible to replace them with the equivalent new ones, keeping the same numeric values if possible?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458786346", "createdAt": "2020-07-22T13:21:30Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/query/MultiServerStoreQueryTest.java", "diffHunk": "@@ -90,12 +91,13 @@ public Configuration buildIndexedConfig(String storeName) {\n       ConfigurationBuilder builder = hotRodCacheConfiguration(getDefaultClusteredCacheConfig(CacheMode.DIST_SYNC, false));\n       builder.indexing().enable()\n              .addIndexedEntity(\"News\")\n-             .addProperty(\"default.directory_provider\", \"local-heap\")\n-             .addProperty(\"default.worker.execution\", \"async\")\n-             .addProperty(\"default.index_flush_interval\", \"500\")\n-             .addProperty(\"default.indexwriter.merge_factor\", \"30\")\n-             .addProperty(\"default.indexwriter.merge_max_size\", \"1024\")\n-             .addProperty(\"default.indexwriter.ram_buffer_size\", \"256\");\n+             .addProperty(SearchConfig.DIRECTORY_TYPE, SearchConfig.HEAP)\n+            .addProperty(SearchConfig.THREAD_POOL_SIZE, \"6\")\n+             .addProperty(SearchConfig.QUEUE_COUNT, \"6\")\n+             .addProperty(SearchConfig.QUEUE_SIZE, \"4096\")\n+             .addProperty(SearchConfig.COMMIT_INTERVAL, \"10000\")\n+             .addProperty(SearchConfig.SHARDING_STRATEGY, SearchConfig.HASH)\n+             .addProperty(SearchConfig.NUMBER_OF_SHARDS, \"6\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4ODUxMA==", "bodyText": "Could you drop a comment here what is the equivalent of near-real-time in HS6?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458788510", "createdAt": "2020-07-22T13:24:38Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/query/RemoteQueryDslConditionsTunedTest.java", "diffHunk": "@@ -29,23 +30,26 @@ protected ConfigurationBuilder getConfigurationBuilder() {\n              .addIndexedEntity(\"sample_bank_account.User\")\n              .addIndexedEntity(\"sample_bank_account.Account\")\n              .addIndexedEntity(\"sample_bank_account.Transaction\")\n-             .addProperty(\"default.indexmanager\", \"near-real-time\")\n-             .addProperty(\"default.indexBase\", indexDirectory)\n-             .addProperty(\"default.exclusive_index_use\", \"true\")\n-             .addProperty(\"default.indexwriter.merge_factor\", \"30\")\n-             .addProperty(\"default.indexwriter.merge_max_size\", \"4096\")\n-             .addProperty(\"default.indexwriter.ram_buffer_size\", \"220\")\n-             .addProperty(\"default.locking_strategy\", \"native\")\n-             .addProperty(\"default.sharding_strategy.nbr_of_shards\", String.valueOf(NUM_SHARDS));\n+             .addProperty(SearchConfig.DIRECTORY_TYPE, SearchConfig.FILE)\n+             .addProperty(SearchConfig.DIRECTORY_ROOT, indexDirectory)\n+             .addProperty(SearchConfig.THREAD_POOL_SIZE, String.valueOf(NUM_SHARDS))\n+             .addProperty(SearchConfig.QUEUE_COUNT, String.valueOf(NUM_SHARDS))\n+             .addProperty(SearchConfig.QUEUE_SIZE, \"4096\")\n+             .addProperty(SearchConfig.COMMIT_INTERVAL, \"10000\")\n+             .addProperty(SearchConfig.SHARDING_STRATEGY, SearchConfig.HASH)\n+             .addProperty(SearchConfig.NUMBER_OF_SHARDS, String.valueOf(NUM_SHARDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc5MTQyNw==", "bodyText": "Can you add the indexed entities in the config so that it does not change the test behaviour?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458791427", "createdAt": "2020-07-22T13:28:50Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/query/RemoteQueryNonQueryableCacheTest.java", "diffHunk": "@@ -53,18 +54,22 @@ private Configuration createCache(String mediaType) {\n \n    private Configuration createIndexedCache() {\n       ConfigurationBuilder builder = new ConfigurationBuilder();\n-      builder.indexing().enable().addProperty(\"default.directory_provider\", \"local-heap\");\n+      builder.indexing().enable().addProperty(SearchConfig.DIRECTORY_TYPE, SearchConfig.HEAP);\n       return builder.build();\n    }\n \n    @Test\n    public void testQueryable() {\n       executeQuery(DEFAULT_CACHE);\n-      executeQuery(INDEXED_CACHE);\n       executeQuery(PROTOBUF_CACHE);\n       executeQuery(POJO_CACHE);\n    }\n \n+   @Test(expectedExceptions = HotRodClientException.class, expectedExceptionsMessageRegExp = \".*ISPN014054.*\")\n+   public void assertErrorForIndexedCacheButWithoutIndexedEntities() {\n+      executeQuery(INDEXED_CACHE);\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc5MzQ5Nw==", "bodyText": "Could you clarify what is this about? What do you mean \"one change of serialization context\" ?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458793497", "createdAt": "2020-07-22T13:31:54Z", "author": {"login": "gustavonalle"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/query/RemoteQueryWithProtostreamAnnotationsTest.java", "diffHunk": "@@ -31,7 +31,9 @@\n  *\n  * @author Adrian Nistor\n  */\n-@Test(testName = \"client.hotrod.query.RemoteQueryWithProtostreamAnnotationsTest\", groups = \"functional\")\n+// TODO Hibernate Search 6 cannot handle more than one change of serialization context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc5NTUwNA==", "bodyText": "I don't think we can comment the whole feature pack module, is it possible to remove only the Hibernate Search relevant stuff?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458795504", "createdAt": "2020-07-22T13:34:51Z", "author": {"login": "gustavonalle"}, "path": "pom.xml", "diffHunk": "@@ -138,7 +138,8 @@\n       <module>cdi/remote</module>\n       <module>lock</module>\n       <module>jcache</module>\n-      <module>wildfly/feature-pack</module>\n+<!--      Hibernate Search 6 does not provide feature-pack(s) -->\n+<!--      <module>wildfly/feature-pack</module>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc5NjM5NQ==", "bodyText": "Same here, there's more than Hibernate Search in that module", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458796395", "createdAt": "2020-07-22T13:36:04Z", "author": {"login": "gustavonalle"}, "path": "pom.xml", "diffHunk": "@@ -147,11 +148,13 @@\n       <module>integrationtests/security-manager-it</module>\n       <module>integrationtests/cdi-weld-se-it</module>\n       <module>integrationtests/spring-boot-it</module>\n-      <module>integrationtests/wildfly-modules</module>\n+      <!-- Hiberante Search 6 does not provide feature packs -->\n+      <!--<module>integrationtests/wildfly-modules</module>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwMTM3Mw==", "bodyText": "This concept of refresh was not part of HSearch 5, what does it do? Could you add some javadoc? If it's something IndexWriter related, I prefer this to be on org.infinispan.query.Indexer", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458801373", "createdAt": "2020-07-22T13:43:06Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/backend/QueryInterceptor.java", "diffHunk": "@@ -322,69 +314,66 @@ public Object visitReadWriteManyEntriesCommand(InvocationContext ctx, ReadWriteM\n     * Remove all entries from all known indexes\n     */\n    public void purgeAllIndexes() {\n-      purgeAllIndexes(NoTransactionContext.INSTANCE);\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {\n+         return;\n+      }\n+\n+      searchMapping.scopeAll().workspace().purge();\n    }\n \n    public void purgeIndex(Class<?> entityType) {\n-      purgeIndex(NoTransactionContext.INSTANCE, entityType);\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {\n+         return;\n+      }\n+\n+      searchMapping.scope(entityType).workspace().purge();\n+   }\n+\n+   public void refreshIndex(Class<?> entityType) {\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwMzg1NA==", "bodyText": "I've seen this check in many places, in which scenarios it can be null? On master, the QueryInterceptor is only installed if the cache is indexed, and if it is, the SearchFactory was never null.", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458803854", "createdAt": "2020-07-22T13:46:24Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/backend/QueryInterceptor.java", "diffHunk": "@@ -322,69 +314,66 @@ public Object visitReadWriteManyEntriesCommand(InvocationContext ctx, ReadWriteM\n     * Remove all entries from all known indexes\n     */\n    public void purgeAllIndexes() {\n-      purgeAllIndexes(NoTransactionContext.INSTANCE);\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {\n+         return;\n+      }\n+\n+      searchMapping.scopeAll().workspace().purge();\n    }\n \n    public void purgeIndex(Class<?> entityType) {\n-      purgeIndex(NoTransactionContext.INSTANCE, entityType);\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {\n+         return;\n+      }\n+\n+      searchMapping.scope(entityType).workspace().purge();\n+   }\n+\n+   public void refreshIndex(Class<?> entityType) {\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {\n+         return;\n+      }\n+\n+      searchMapping.scope(entityType).workspace().refresh();\n    }\n \n    /**\n     * Removes from the index the entries corresponding to the supplied segments, if the index is local.\n     */\n    void purgeIndex(IntSet segments) {\n-      if (segments == null) return;\n-      for (int segment : segments) {\n-         DeletionQuery deletionQuery = new SingularTermDeletionQuery(SEGMENT_FIELD, String.valueOf(segment));\n-         for (IndexedTypeIdentifier type : searchFactory.getIndexBindings().keySet()) {\n-            Work deleteWork = new DeleteByQueryWork(type, deletionQuery);\n-            performSearchWork(deleteWork, NoTransactionContext.INSTANCE);\n-         }\n+      if (segments == null || segments.isEmpty()) return;\n+\n+      SearchMapping searchMapping = searchMappingHolder.getSearchMapping();\n+      if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNzkyNA==", "bodyText": "heads up, we've deprecated the whole \"CacheQuery\" class in 11, and this include the so called \"lazy\" iterator. So you could just get rid of it", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458817924", "createdAt": "2020-07-22T14:05:24Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/clustered/ClusteredQueryOperation.java", "diffHunk": "@@ -38,12 +38,12 @@ public QueryDefinition getQueryDefinition() {\n       return queryDefinition;\n    }\n \n-   static ClusteredQueryOperation createLazyIterator(QueryDefinition queryDefinition, UUID queryId) {\n+   /*static ClusteredQueryOperation createLazyIterator(QueryDefinition queryDefinition, UUID queryId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxOTA5MQ==", "bodyText": "Shouldn't be deleted", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458819091", "createdAt": "2020-07-22T14:07:02Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/clustered/commandworkers/package-info.java", "diffHunk": "@@ -1,4 +0,0 @@\n-/**\n- * @private\n- */\n-package org.infinispan.query.clustered.commandworkers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxOTY5Mg==", "bodyText": "Did you fix this @fax4ever ? If not, let's keep it as a reminder :)", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458819692", "createdAt": "2020-07-22T14:07:51Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/dsl/embedded/impl/EmbeddedLuceneQuery.java", "diffHunk": "@@ -83,21 +83,23 @@ public void resetQuery() {\n \n    @Override\n    public QueryResult<T> execute() {\n-      List<T> results = StreamSupport.stream(spliterator(), false).collect(Collectors.toList());\n-      long hits = createCacheQuery().getResultSize();\n-      return new QueryResultImpl<>(hits, results);\n+      List<?> results = StreamSupport.stream(spliterator(), false)\n+            .map(i -> (projection == null) ? i : convertProjectionItem(i))\n+            .collect(Collectors.toList());\n+\n+      int hits = Math.toIntExact(createCacheQuery().getResultSize());\n+      return new QueryResultImpl<>(hits, (List<T>) results);\n    }\n \n    @Override\n    public CloseableIterator<T> iterator() {\n-      CloseableIterator<T> iterator = createCacheQuery().iterator();\n-      return rowProcessor == null ? iterator : new MappingIterator(iterator, t -> rowProcessor.apply((Object[]) t));\n+      IndexedQuery<T> cacheQuery = createCacheQuery();\n+      return new MappingIterator(cacheQuery.iterator(), i -> (projection == null) ? i : convertProjectionItem(i) );\n    }\n \n    @Override\n    public int getResultSize() {\n-      //todo [anistor] optimize this by running a slightly modified query that performs just COUNT only, ignoring projections or sorting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgyMTY0Mw==", "bodyText": "We are not caching query result size or list anymore:  https://infinispan.org/docs/stable/titles/upgrading/upgrading.html#querying\nIs this something you need to do?", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r458821643", "createdAt": "2020-07-22T14:10:33Z", "author": {"login": "gustavonalle"}, "path": "query/src/main/java/org/infinispan/query/impl/CacheQueryImpl.java", "diffHunk": "@@ -42,83 +36,36 @@\n    private static final FetchOptions DEFAULT_FETCH_OPTIONS = new FetchOptions().fetchMode(FetchMode.EAGER);\n \n    protected final AdvancedCache<?, ?> cache;\n-   protected final KeyTransformationHandler keyTransformationHandler;\n    protected final PartitionHandlingSupport partitionHandlingSupport;\n    protected QueryDefinition queryDefinition;\n-   private ProjectionConverter projectionConverter;\n \n-   /**\n-    * Create a CacheQueryImpl based on a Lucene query.\n-    */\n-   public CacheQueryImpl(Query luceneQuery, SearchIntegrator searchFactory, AdvancedCache<?, ?> cache,\n-                         KeyTransformationHandler keyTransformationHandler, TimeoutExceptionFactory timeoutExceptionFactory,\n-                         Class<?> entity) {\n-      this(timeoutExceptionFactory == null ? searchFactory.createHSQuery(luceneQuery, entity) :\n-                  searchFactory.createHSQuery(luceneQuery, entity).timeoutExceptionFactory(timeoutExceptionFactory),\n-            cache, keyTransformationHandler);\n-   }\n+   // caching result size, since Search 6 doesn't do that\n+   private Long resultSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDE4OTA2", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-454018906", "createdAt": "2020-07-23T10:47:34Z", "commit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDo0NzozNVrOG2FVpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDo0NzozNVrOG2FVpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2Mzc1MQ==", "bodyText": "Why this change ? LOCAL_HEAP_DIRECTORY_PROVIDER is \"local-heap\"", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r459363751", "createdAt": "2020-07-23T10:47:35Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "diffHunk": "@@ -320,9 +320,9 @@ public IndexingConfiguration create() {\n       // check for presence of index providers that are not persistent upon restart\n       boolean isVolatile = typedProperties.entrySet().stream()\n                                      .anyMatch(e -> {\n-                                        if (((String) e.getKey()).endsWith(DIRECTORY_PROVIDER_SUFFIX)) {\n+                                        if (((String) e.getKey()).endsWith(\"directory.type\")) {\n                                            String directoryImplementationName = String.valueOf(e.getValue()).trim();\n-                                           return LOCAL_HEAP_DIRECTORY_PROVIDER.equalsIgnoreCase(directoryImplementationName)\n+                                           return \"local-heap\".equalsIgnoreCase(directoryImplementationName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDE5NzE3", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-454019717", "createdAt": "2020-07-23T10:48:54Z", "commit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDo0ODo1NFrOG2FX_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMDo0ODo1NFrOG2FX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2NDM1MQ==", "bodyText": "DIRECTORY_PROVIDER_SUFFIX should probably become \"directory.type\". It is used in other places in this class, which I think are broken now unless we make the change", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r459364351", "createdAt": "2020-07-23T10:48:54Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "diffHunk": "@@ -320,9 +320,9 @@ public IndexingConfiguration create() {\n       // check for presence of index providers that are not persistent upon restart\n       boolean isVolatile = typedProperties.entrySet().stream()\n                                      .anyMatch(e -> {\n-                                        if (((String) e.getKey()).endsWith(DIRECTORY_PROVIDER_SUFFIX)) {\n+                                        if (((String) e.getKey()).endsWith(\"directory.type\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "973742666427584064f0529d85af66024e57d0ab", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/973742666427584064f0529d85af66024e57d0ab", "committedDate": "2020-07-21T18:02:04Z", "message": "ISPN-10249 Filter indexed-protobuf entities by cache"}, "afterCommit": {"oid": "6300e5d5e53a1e59b9349292cdc7d87ce9d476da", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/6300e5d5e53a1e59b9349292cdc7d87ce9d476da", "committedDate": "2020-07-23T12:43:55Z", "message": "ISPN-10249 Avoid to change the deprecated interface\n\nUnfortunately IndexedTypeMap is a Hibernate Search 5\u2019s class, so I think we had to remove it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32718114c38cd1cf83048d759033d952387d0a7e", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/32718114c38cd1cf83048d759033d952387d0a7e", "committedDate": "2020-07-24T07:23:53Z", "message": "ISPN-10249 Add ISPN search mapper module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51d3df78264303cd72212e2cd169a0bf89349736", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/51d3df78264303cd72212e2cd169a0bf89349736", "committedDate": "2020-07-24T07:23:53Z", "message": "ISPN-10249 Introduce pseudo-HS5 annotation support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NzM0NTk0", "url": "https://github.com/infinispan/infinispan/pull/8571#pullrequestreview-454734594", "createdAt": "2020-07-24T09:02:13Z", "commit": {"oid": "55832fad3a9ae160316397b34fb49e0af665d09f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMjoxM1rOG2oLWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMjoxM1rOG2oLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNDU1Mw==", "bodyText": "I suspect the suffix directory_provider here also must become directory.type", "url": "https://github.com/infinispan/infinispan/pull/8571#discussion_r459934553", "createdAt": "2020-07-24T09:02:13Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "diffHunk": "@@ -29,11 +29,12 @@\n  */\n public class IndexingConfigurationBuilder extends AbstractConfigurationChildBuilder implements Builder<IndexingConfiguration>, ConfigurationBuilderInfo {\n \n-   private static final String DIRECTORY_PROVIDER_SUFFIX = \".directory_provider\";\n+   private static final String DIRECTORY_PROVIDER_SUFFIX = \"directory.type\";\n \n+   // TODO Check if *KEY1* can be used\n    private static final String DIRECTORY_PROVIDER_KEY1 = \"hibernate.search.default.directory_provider\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55832fad3a9ae160316397b34fb49e0af665d09f"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55832fad3a9ae160316397b34fb49e0af665d09f", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/55832fad3a9ae160316397b34fb49e0af665d09f", "committedDate": "2020-07-23T13:14:18Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}, "afterCommit": {"oid": "bb18590bbe7e5e9948bca940518235678d1a4fae", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/bb18590bbe7e5e9948bca940518235678d1a4fae", "committedDate": "2020-07-24T09:05:53Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b76eeeee768bb075a447e35324baa3d6986830f1", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/b76eeeee768bb075a447e35324baa3d6986830f1", "committedDate": "2020-07-24T11:59:20Z", "message": "ISPN-10249 Upgrade to Hibernate Search 6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb18590bbe7e5e9948bca940518235678d1a4fae", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/bb18590bbe7e5e9948bca940518235678d1a4fae", "committedDate": "2020-07-24T09:05:53Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}, "afterCommit": {"oid": "917da575b1ba55b0147d9cbeb1e553e3b24fc837", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/917da575b1ba55b0147d9cbeb1e553e3b24fc837", "committedDate": "2020-07-24T11:59:20Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8d307f379ffaa6ca9b4d670e4abe4e0f2ae33f3", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/d8d307f379ffaa6ca9b4d670e4abe4e0f2ae33f3", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Use Search 6 configuration properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c83177e2efd0cf6eb026e5de93579765c2426db8", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/c83177e2efd0cf6eb026e5de93579765c2426db8", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Comment feature pack modules\n\nHibernate Search 6 does not provide feature packs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752b631b9f1023ac64e64754df5d0d4471cb353a", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/752b631b9f1023ac64e64754df5d0d4471cb353a", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Filter indexed-protobuf entities by cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf985dc7268a283902985cc777e9dff1425dabb6", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/cf985dc7268a283902985cc777e9dff1425dabb6", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Provide entity lists in cache configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "009c09a6330ce8005925f73687179122582805ed", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/009c09a6330ce8005925f73687179122582805ed", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Avoid to change the deprecated interface\n\nUnfortunately IndexedTypeMap is a Hibernate Search 5\u2019s class, so I think we had to remove it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10f23a187bce36db7fa046a4541c77808b6b3f8a", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/10f23a187bce36db7fa046a4541c77808b6b3f8a", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646927489d0b43deaf39b24f4ecf19d6de430e8c", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/infinispan/infinispan/commit/646927489d0b43deaf39b24f4ecf19d6de430e8c", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Solve thread leak in HibernateSearchPropertyHelperTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "917da575b1ba55b0147d9cbeb1e553e3b24fc837", "author": {"user": {"login": "fax4ever", "name": "Fabio Massimo Ercoli"}}, "url": "https://github.com/infinispan/infinispan/commit/917da575b1ba55b0147d9cbeb1e553e3b24fc837", "committedDate": "2020-07-24T11:59:20Z", "message": "ISPN-10249 Avoid to cache result size in deprecated class"}, "afterCommit": {"oid": "646927489d0b43deaf39b24f4ecf19d6de430e8c", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/infinispan/infinispan/commit/646927489d0b43deaf39b24f4ecf19d6de430e8c", "committedDate": "2020-07-24T14:33:02Z", "message": "ISPN-10249 Solve thread leak in HibernateSearchPropertyHelperTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06f2f946415446db192654e514d1717555ee301f", "author": {"user": {"login": "gustavonalle", "name": "Gustavo"}}, "url": "https://github.com/infinispan/infinispan/commit/06f2f946415446db192654e514d1717555ee301f", "committedDate": "2020-07-24T14:38:17Z", "message": "Ignore Wildfly search tests for now"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 535, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}