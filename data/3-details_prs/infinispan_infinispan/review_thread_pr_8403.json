{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTg4Mjcy", "number": 8403, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjoxMzowMFrOEAlDtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODoyNToxN1rOEBpRFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDQyNjE1OnYy", "diffSide": "RIGHT", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjoxMzowMVrOGb8mKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODo1MTozOVrOGcUUzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw==", "bodyText": "Should test for both MediaType.APPLICATION_PROTOSTREAM and MediaType.APPLICATION_OBJECT\nInstead of == should use .match()\ncache.getCacheConfiguration().encoding().valueDataType() can be null if I'm not mistaken", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r431957547", "createdAt": "2020-05-28T16:13:01Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,6 +303,9 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n+      boolean indexed =  configuration.indexing().enabled();\n+      boolean query = indexed ||\n+            cache.getCacheConfiguration().encoding().valueDataType().mediaType() == MediaType.APPLICATION_PROTOSTREAM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMzk5MQ==", "bodyText": "It still can cause a NPE", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432333991", "createdAt": "2020-05-29T08:28:43Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,6 +303,9 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n+      boolean indexed =  configuration.indexing().enabled();\n+      boolean query = indexed ||\n+            cache.getCacheConfiguration().encoding().valueDataType().mediaType() == MediaType.APPLICATION_PROTOSTREAM;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw=="}, "originalCommit": {"oid": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NjMxOQ==", "bodyText": "ahhh I did not reproduce debugging but I was super tired y", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432346319", "createdAt": "2020-05-29T08:51:39Z", "author": {"login": "karesti"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,6 +303,9 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n+      boolean indexed =  configuration.indexing().enabled();\n+      boolean query = indexed ||\n+            cache.getCacheConfiguration().encoding().valueDataType().mediaType() == MediaType.APPLICATION_PROTOSTREAM;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1NzU0Nw=="}, "originalCommit": {"oid": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDQzNjM5OnYy", "diffSide": "RIGHT", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjoxNTowN1rOGb8swg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMDo1MToxN1rOGcGQfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1OTIzNA==", "bodyText": "queryable would be better", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r431959234", "createdAt": "2020-05-28T16:15:07Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -404,5 +409,6 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       public boolean hasRemoteBackup;\n       public boolean indexingInProgress;\n       public boolean statistics;\n+      public boolean query;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExNTgzOQ==", "bodyText": "ok", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r432115839", "createdAt": "2020-05-28T20:51:17Z", "author": {"login": "karesti"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -404,5 +409,6 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       public boolean hasRemoteBackup;\n       public boolean indexingInProgress;\n       public boolean statistics;\n+      public boolean query;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1OTIzNA=="}, "originalCommit": {"oid": "462d9f18dbee297ec7d558c264bed2f7ff74cdfc"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTYwMTQ5OnYy", "diffSide": "RIGHT", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODoyNToxN1rOGdnRqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODo0NToxM1rOGdoAgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA==", "bodyText": "It's wrong to assume a cache without an explicit encoding configuration is not queryable, because depending on the storage type it will either use APPLICATION_OBJECT or the user marshaller's media type (which is APPLICATION_PROTOSTREAM with the default serialization configuration).\nYou should use cache.getValueDataConversion().getStorageMediaType() to get the actual media type, but I'd much rather make this a method in query-core", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433705384", "createdAt": "2020-06-02T08:25:17Z", "author": {"login": "danberindei"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,7 +303,11 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n-\n+      boolean indexed =  configuration.indexing().enabled();\n+      ContentTypeConfiguration valueDataType = cache.getCacheConfiguration().encoding().valueDataType();\n+      boolean queryable = indexed || (valueDataType != null && valueDataType.mediaType()!= null &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwODgzOQ==", "bodyText": "@danberindei You are right, I will send a follow up PR to have a method in StorageManager to verify the runtime storage", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433708839", "createdAt": "2020-06-02T08:30:51Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,7 +303,11 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n-\n+      boolean indexed =  configuration.indexing().enabled();\n+      ContentTypeConfiguration valueDataType = cache.getCacheConfiguration().encoding().valueDataType();\n+      boolean queryable = indexed || (valueDataType != null && valueDataType.mediaType()!= null &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}, "originalCommit": {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwOTA0MQ==", "bodyText": "This will also come handy for many other places that need this info", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433709041", "createdAt": "2020-06-02T08:31:14Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,7 +303,11 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n-\n+      boolean indexed =  configuration.indexing().enabled();\n+      ContentTypeConfiguration valueDataType = cache.getCacheConfiguration().encoding().valueDataType();\n+      boolean queryable = indexed || (valueDataType != null && valueDataType.mediaType()!= null &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}, "originalCommit": {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcxNzM3Ng==", "bodyText": "The PR already exists it's #8389  :)", "url": "https://github.com/infinispan/infinispan/pull/8403#discussion_r433717376", "createdAt": "2020-06-02T08:45:13Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -302,7 +303,11 @@ private RestResponse getDetailResponse(NettyRestResponse.Builder responseBuilder\n       InfinispanQueryStatisticsInfo.IndexStatistics indexStatistics = getIndexStatistics(cache);\n       boolean rehashInProgress = distributionManager != null && distributionManager.isRehashInProgress();\n       boolean indexingInProgress = indexStatistics != null && indexStatistics.getReindexing();\n-\n+      boolean indexed =  configuration.indexing().enabled();\n+      ContentTypeConfiguration valueDataType = cache.getCacheConfiguration().encoding().valueDataType();\n+      boolean queryable = indexed || (valueDataType != null && valueDataType.mediaType()!= null &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcwNTM4NA=="}, "originalCommit": {"oid": "1d758ad05f9308c2ef7c7a5da05e16d2b1b429f1"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4125, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}