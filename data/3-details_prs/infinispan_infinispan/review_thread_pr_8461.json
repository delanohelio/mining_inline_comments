{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDQxNjQ3", "number": 8461, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1ODowNFrOEETrJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1ODowNFrOEETrJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTUyMTAyOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/util/ThreadLocalLeakTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1ODowNFrOGh2Iwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNDozN1rOGh24pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE0MzE3MA==", "bodyText": "Looking at how the global configuration is defined, I think it should either enable global state or not call globalBuilder.globalState().persistentLocation(tmpDirectory).", "url": "https://github.com/infinispan/infinispan/pull/8461#discussion_r438143170", "createdAt": "2020-06-10T13:58:04Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/util/ThreadLocalLeakTest.java", "diffHunk": "@@ -60,7 +60,7 @@ public void testCheckThreadLocalLeaks() throws Exception {\n             .memory().size(4096)\n             .locking().concurrencyLevel(2048)\n             .persistence().passivation(false)\n-               .addSingleFileStore().shared(false).preload(true);\n+               .addSingleFileStore().location(tmpDirectory).shared(false).preload(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe170af3c662bf88ff0f2f8695ba509eae1698a7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NTQzMA==", "bodyText": "Good point, I forgot to update the global config originally. I went with enabling the global state as it's location is already configured and is a smaller diff.", "url": "https://github.com/infinispan/infinispan/pull/8461#discussion_r438155430", "createdAt": "2020-06-10T14:14:37Z", "author": {"login": "ryanemerson"}, "path": "core/src/test/java/org/infinispan/util/ThreadLocalLeakTest.java", "diffHunk": "@@ -60,7 +60,7 @@ public void testCheckThreadLocalLeaks() throws Exception {\n             .memory().size(4096)\n             .locking().concurrencyLevel(2048)\n             .persistence().passivation(false)\n-               .addSingleFileStore().shared(false).preload(true);\n+               .addSingleFileStore().location(tmpDirectory).shared(false).preload(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE0MzE3MA=="}, "originalCommit": {"oid": "fe170af3c662bf88ff0f2f8695ba509eae1698a7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4071, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}