{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMjE2OTM4", "number": 7963, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNTo1OFrODmcqSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNTo1OFrODmcqSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjQyMDU2OnYy", "diffSide": "RIGHT", "path": "server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNTo1OFrOFz304w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoyODo0NVrOF1l_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNjM1NQ==", "bodyText": "I'd really love this to be rewritten not to use JMX at some point", "url": "https://github.com/infinispan/infinispan/pull/7963#discussion_r389936355", "createdAt": "2020-03-09T20:15:58Z", "author": {"login": "tristantarrant"}, "path": "server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java", "diffHunk": "@@ -95,22 +95,26 @@ private int calculateGlobalConnections() {\n       public Integer apply(EmbeddedCacheManager embeddedCacheManager) {\n          CacheManagerJmxRegistration jmxRegistration = SecurityActions.getGlobalComponentRegistry(embeddedCacheManager)\n                .getComponent(CacheManagerJmxRegistration.class);\n-         try {\n-            ObjectName transportNamePattern = new ObjectName(jmxRegistration.getDomain() + \":type=Server,component=Transport,name=*\");\n-            Set<ObjectName> objectNames = jmxRegistration.getMBeanServer().queryNames(transportNamePattern, null);\n-\n-            // sum the NumberOfLocalConnections from all transport MBeans that match the pattern\n-            int total = 0;\n-            for (ObjectName name : objectNames) {\n-               if (name.getKeyProperty(\"name\").startsWith(serverName)) {\n-                  Integer connections = (Integer) jmxRegistration.getMBeanServer().getAttribute(name, \"NumberOfLocalConnections\");\n-                  total += connections;\n+         if (jmxRegistration.enabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3310ac56733fa80bfba40c9ed5a4d92360fc552"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc0MTM0Mg==", "bodyText": "I've create https://issues.redhat.com/browse/ISPN-11466 to track this.", "url": "https://github.com/infinispan/infinispan/pull/7963#discussion_r391741342", "createdAt": "2020-03-12T16:28:45Z", "author": {"login": "anistor"}, "path": "server/core/src/main/java/org/infinispan/server/core/transport/NettyTransportConnectionStats.java", "diffHunk": "@@ -95,22 +95,26 @@ private int calculateGlobalConnections() {\n       public Integer apply(EmbeddedCacheManager embeddedCacheManager) {\n          CacheManagerJmxRegistration jmxRegistration = SecurityActions.getGlobalComponentRegistry(embeddedCacheManager)\n                .getComponent(CacheManagerJmxRegistration.class);\n-         try {\n-            ObjectName transportNamePattern = new ObjectName(jmxRegistration.getDomain() + \":type=Server,component=Transport,name=*\");\n-            Set<ObjectName> objectNames = jmxRegistration.getMBeanServer().queryNames(transportNamePattern, null);\n-\n-            // sum the NumberOfLocalConnections from all transport MBeans that match the pattern\n-            int total = 0;\n-            for (ObjectName name : objectNames) {\n-               if (name.getKeyProperty(\"name\").startsWith(serverName)) {\n-                  Integer connections = (Integer) jmxRegistration.getMBeanServer().getAttribute(name, \"NumberOfLocalConnections\");\n-                  total += connections;\n+         if (jmxRegistration.enabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNjM1NQ=="}, "originalCommit": {"oid": "e3310ac56733fa80bfba40c9ed5a4d92360fc552"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4511, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}