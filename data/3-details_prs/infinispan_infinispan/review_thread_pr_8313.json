{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MjI5OTQy", "number": 8313, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1MzowOFrOD8aANQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1MzowOFrOD8aANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjY3MTg5OnYy", "diffSide": "RIGHT", "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/configuration/ConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1MzowOFrOGVUxPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1Mzo0OFrOGVUy2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMzU2Nw==", "bodyText": "maybe the invalid property format should be covered by tests ?", "url": "https://github.com/infinispan/infinispan/pull/8313#discussion_r425013567", "createdAt": "2020-05-14T09:53:08Z", "author": {"login": "karesti"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/configuration/ConfigurationTest.java", "diffHunk": "@@ -585,4 +587,51 @@ private static void assertEqualsConfig(Object expected, String propertyName, Con\n       assertEquals(TYPES.get(expected.getClass()).apply(expected), cfg.properties().get(propertyName));\n    }\n \n+   @Test\n+   public void testConfigurationViaURI() {\n+      Configuration configuration = HotRodURI.create(\"hotrod://host1\").toConfigurationBuilder().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090db93b9ee800a0a66422108cdfc3d576563ba5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMzk3OQ==", "bodyText": "and the IllegalArgumentException ?", "url": "https://github.com/infinispan/infinispan/pull/8313#discussion_r425013979", "createdAt": "2020-05-14T09:53:48Z", "author": {"login": "karesti"}, "path": "client/hotrod-client/src/test/java/org/infinispan/client/hotrod/configuration/ConfigurationTest.java", "diffHunk": "@@ -585,4 +587,51 @@ private static void assertEqualsConfig(Object expected, String propertyName, Con\n       assertEquals(TYPES.get(expected.getClass()).apply(expected), cfg.properties().get(propertyName));\n    }\n \n+   @Test\n+   public void testConfigurationViaURI() {\n+      Configuration configuration = HotRodURI.create(\"hotrod://host1\").toConfigurationBuilder().build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxMzU2Nw=="}, "originalCommit": {"oid": "090db93b9ee800a0a66422108cdfc3d576563ba5"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4201, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}