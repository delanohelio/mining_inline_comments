{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjE5Njgz", "number": 8271, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo1NzoyNlrOEELwQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoyNToxOFrOEE9aaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODIyMzM4OnYy", "diffSide": "RIGHT", "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/logging/Log.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo1NzoyNlrOGhpRlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTozNzo1N1rOGhtB2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzMjQzOQ==", "bodyText": "Could you add a line in upgrading.adoc about this?", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r437932439", "createdAt": "2020-06-10T07:57:26Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/logging/Log.java", "diffHunk": "@@ -66,4 +66,9 @@\n    @Message(id = 28016, value = \"Query performed in a cache ('%s') that has an unknown format configuration. \" +\n          \"Please configure the cache encoding as 'application/x-protostream' or 'application/x-java-object'\")\n    void warnNoMediaType(String cacheName);\n+\n+   //TODO [anistor] This warning will become ERROR in version 12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd05bedf55f11dfa5aafd4c3146588b53d11d670"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk5Mzk0NQ==", "bodyText": "done", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r437993945", "createdAt": "2020-06-10T09:37:57Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/logging/Log.java", "diffHunk": "@@ -66,4 +66,9 @@\n    @Message(id = 28016, value = \"Query performed in a cache ('%s') that has an unknown format configuration. \" +\n          \"Please configure the cache encoding as 'application/x-protostream' or 'application/x-java-object'\")\n    void warnNoMediaType(String cacheName);\n+\n+   //TODO [anistor] This warning will become ERROR in version 12", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzMjQzOQ=="}, "originalCommit": {"oid": "cd05bedf55f11dfa5aafd4c3146588b53d11d670"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzk1Mzk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyMDo1OVrOGiiM4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoyODoyOVrOGi57mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ==", "bodyText": "Unfortunately  builder.memory().encoding().value().isProtobufStorage() only gives the information that \"protobuf was explicitly configured in the cache\", and not if the storage turns out to be protobuf or not. Storage information is obtained only at runtime\nadvancedCache.getValueDataConversion().getStorageMediaType()\nI think the reasons why it \"works\" here in this PR is because the exception is ignored", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r438865121", "createdAt": "2020-06-11T15:20:59Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIyNzIzNQ==", "bodyText": "And don't we want to know that \"protobuf was explicitly configured in the cache\" ?", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439227235", "createdAt": "2020-06-12T06:17:51Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIyODA4Mw==", "bodyText": "And we need that to know at config time not at runtime.", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439228083", "createdAt": "2020-06-12T06:20:21Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NTM4OQ==", "bodyText": "atm there is no way of knowing at config time, unless it is explicitly configured. So if a cache hasn't go the encoding config, but declares protobuf messages as entities, the parser will try to load this inexistent classes, but will fail. No big deal, I was just saying that it will work since the exception is ignored.", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439245389", "createdAt": "2020-06-12T07:07:56Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0ODgzNw==", "bodyText": "we absolutely need that in 12, at least, otherwise the whole pre-declared stuff for HS 6 will not really exist.", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439248837", "createdAt": "2020-06-12T07:16:22Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MzkxMg==", "bodyText": "yes, it shall be available at config time", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439253912", "createdAt": "2020-06-12T07:28:29Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2779,14 +2779,25 @@ private void parseKeyTransformer(XMLExtendedStreamReader reader, ConfigurationBu\n \n    private void parseIndexedEntities(XMLExtendedStreamReader reader, ConfigurationBuilderHolder holder, ConfigurationBuilder builder) throws XMLStreamException {\n       ParseUtils.requireNoAttributes(reader);\n+      boolean isProtobufStorage = builder.memory().encoding().value().isProtobufStorage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NTEyMQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzk3MDY3OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNDo1OVrOGiiXtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTo1NzoxOVrOGi38pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2Nzg5NQ==", "bodyText": "this will flood the logs for sure \ud83d\ude04\nI wonder if it's possible to print only at cache creation or start", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r438867895", "createdAt": "2020-06-11T15:24:59Z", "author": {"login": "gustavonalle"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.\n+This requirement exists solely for indexed caches and applies to both Java classes and protobuf types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4ODc5NQ==", "bodyText": "I'll try to move that to once", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r438888795", "createdAt": "2020-06-11T15:48:04Z", "author": {"login": "anistor"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.\n+This requirement exists solely for indexed caches and applies to both Java classes and protobuf types.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2Nzg5NQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwNDExNg==", "bodyText": "@Once will be once for all caches I'm afraid. Ideally it should print once per cache", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r438904116", "createdAt": "2020-06-11T16:08:52Z", "author": {"login": "gustavonalle"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.\n+This requirement exists solely for indexed caches and applies to both Java classes and protobuf types.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2Nzg5NQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIyMTQxNQ==", "bodyText": "I added an internal flag in ProtobufValueWrapperFieldBridge to log only once per cache", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439221415", "createdAt": "2020-06-12T05:57:19Z", "author": {"login": "anistor"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.\n+This requirement exists solely for indexed caches and applies to both Java classes and protobuf types.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2Nzg5NQ=="}, "originalCommit": {"oid": "98b1981d6a3e5adb38b9554bc1e8357f99013b2d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjM1OTQ0OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoyNToxOFrOGi52DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwODozNjoyNlrOGi724A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MjQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.\n          \n          \n            \n            * Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged when the undeclared type is firstly used.", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439252493", "createdAt": "2020-06-12T07:25:18Z", "author": {"login": "gustavonalle"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b9f61dc07f7649ff2195a767c3fdc9661b5719"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI4NTQ3Mg==", "bodyText": "Done!", "url": "https://github.com/infinispan/infinispan/pull/8271#discussion_r439285472", "createdAt": "2020-06-12T08:36:26Z", "author": {"login": "anistor"}, "path": "documentation/src/main/asciidoc/topics/upgrading.adoc", "diffHunk": "@@ -42,6 +42,11 @@ It is forbidden to use both the `.indexing().enabled( )` and the deprecated `.in\n \n * The `auto-config` attribute is deprecated and will be removed in a future version.\n \n+* Starting with version 11 it is mandatory to declare all indexed types in the indexing configuration or else warnings will be logged every time an undeclared type is indexed or queried.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MjQ5Mw=="}, "originalCommit": {"oid": "56b9f61dc07f7649ff2195a767c3fdc9661b5719"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4163, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}