{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNDkxODE3", "number": 8757, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNjo0MFrOEsAMFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNzo0OVrOEsANXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTc1ODk0OnYy", "diffSide": "RIGHT", "path": "query/src/test/java/org/infinispan/query/dsl/embedded/impl/LuceneTransformationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNjo0MVrOHfFPeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNjo0MVrOHfFPeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM1Mzc4Ng==", "bodyText": "This change is only necessary because the previous parsing of @Field was buggy and ignored the analyzer.\nNow that we correctly detect the analyzer, we create a full-text-field as we should, thus Hibernate Search knows any field with a value has norms, and it can use this more efficient way of detecting the presence of a field.", "url": "https://github.com/infinispan/infinispan/pull/8757#discussion_r502353786", "createdAt": "2020-10-09T11:06:41Z", "author": {"login": "yrodiere"}, "path": "query/src/test/java/org/infinispan/query/dsl/embedded/impl/LuceneTransformationTest.java", "diffHunk": "@@ -539,21 +539,21 @@ public void testNotLikeQuery() {\n    public void testIsNullQuery() {\n       assertGeneratedLuceneQuery(\n             \"select e from org.infinispan.query.dsl.embedded.impl.model.Employee e where e.name IS null\",\n-            \"+(-ConstantScore(__HSEARCH_field_names:name) #*:*)\");\n+            \"+(-ConstantScore(NormsFieldExistsQuery [field=name]) #*:*)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa99276ab720da26807bd0bfceb30d792f611b5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTc2MjIwOnYy", "diffSide": "RIGHT", "path": "query/src/test/java/org/infinispan/query/dsl/embedded/impl/model/TheEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNzo0OVrOHfFRbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTowNzo0OVrOHfFRbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM1NDI4NQ==", "bodyText": "This change is only necessary because the previous parsing of @SortableField was buggy.\nIf you look at the git history, we actually used to set the forField attribute in Infinispan 11 (because it was necessary), so we're back to normal.", "url": "https://github.com/infinispan/infinispan/pull/8757#discussion_r502354285", "createdAt": "2020-10-09T11:07:49Z", "author": {"login": "yrodiere"}, "path": "query/src/test/java/org/infinispan/query/dsl/embedded/impl/model/TheEntity.java", "diffHunk": "@@ -26,7 +26,7 @@ public TheEntity(String fieldX, TheEmbeddedEntity embeddedEntity) {\n       this.embeddedEntity = embeddedEntity;\n    }\n \n-   @SortableField\n+   @SortableField(forField = \"theField\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa99276ab720da26807bd0bfceb30d792f611b5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3850, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}