{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTUxNzMx", "number": 7822, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoxODo1M1rODdD47Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoxNzozOFrODd-YMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNzk5MDIxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/manager/CacheManagerInfo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoxODo1M1rOFlcjow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozNDowN1rOFle6ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwOTUwNw==", "bodyText": "IMO, you should get the site name from RELAY2. the site-name in global configuration isn't mandatory to set and it may be different.", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r374809507", "createdAt": "2020-02-04T17:18:53Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/manager/CacheManagerInfo.java", "diffHunk": "@@ -107,6 +108,11 @@ public String getClusterName() {\n       return configurationManager.getGlobalConfiguration().transport().clusterName();\n    }\n \n+   public String getLocalSite() {\n+      SiteConfiguration sites = configurationManager.getGlobalConfiguration().sites();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e50099c6b6c8995f7136c76c03ad0d86d80a08"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxMTQ3OQ==", "bodyText": "+1, this seems a random arbitrary property someone left behind :)\nAlso the infinispan-xsite.xml sample config shipped with the server does not use it either", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r374811479", "createdAt": "2020-02-04T17:22:27Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/manager/CacheManagerInfo.java", "diffHunk": "@@ -107,6 +108,11 @@ public String getClusterName() {\n       return configurationManager.getGlobalConfiguration().transport().clusterName();\n    }\n \n+   public String getLocalSite() {\n+      SiteConfiguration sites = configurationManager.getGlobalConfiguration().sites();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwOTUwNw=="}, "originalCommit": {"oid": "78e50099c6b6c8995f7136c76c03ad0d86d80a08"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0ODE4Ng==", "bodyText": "created:https://issues.redhat.com/browse/ISPN-11278", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r374848186", "createdAt": "2020-02-04T18:34:07Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/manager/CacheManagerInfo.java", "diffHunk": "@@ -107,6 +108,11 @@ public String getClusterName() {\n       return configurationManager.getGlobalConfiguration().transport().clusterName();\n    }\n \n+   public String getLocalSite() {\n+      SiteConfiguration sites = configurationManager.getGlobalConfiguration().sites();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwOTUwNw=="}, "originalCommit": {"oid": "78e50099c6b6c8995f7136c76c03ad0d86d80a08"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQ0NTIzOnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozOTozOVrOFmkJFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoyMTo1OVrOFnnzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjM1Ng==", "bodyText": "I'm not sure how useful this test is :)", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r375982356", "createdAt": "2020-02-06T17:39:39Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -213,6 +212,7 @@ public void testInfo() throws Exception {\n       assertFalse(cmInfo.get(\"version\").asText().isEmpty());\n       assertEquals(2, cmInfo.get(\"cluster_members\").size());\n       assertEquals(2, cmInfo.get(\"cluster_members_physical_addresses\").size());\n+      assertTrue(cmInfo.get(\"local_site\").isNull());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxMzkxOQ==", "bodyText": "Test that the property is there with than name. Rest api contract", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r376213919", "createdAt": "2020-02-07T04:53:09Z", "author": {"login": "karesti"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -213,6 +212,7 @@ public void testInfo() throws Exception {\n       assertFalse(cmInfo.get(\"version\").asText().isEmpty());\n       assertEquals(2, cmInfo.get(\"cluster_members\").size());\n       assertEquals(2, cmInfo.get(\"cluster_members_physical_addresses\").size());\n+      assertTrue(cmInfo.get(\"local_site\").isNull());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjM1Ng=="}, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNTA3OQ==", "bodyText": "well, it doesn't test if it returns the correct name... I'll close my eyes :)", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r376315079", "createdAt": "2020-02-07T10:18:13Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -213,6 +212,7 @@ public void testInfo() throws Exception {\n       assertFalse(cmInfo.get(\"version\").asText().isEmpty());\n       assertEquals(2, cmInfo.get(\"cluster_members\").size());\n       assertEquals(2, cmInfo.get(\"cluster_members_physical_addresses\").size());\n+      assertTrue(cmInfo.get(\"local_site\").isNull());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjM1Ng=="}, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MTUwMA==", "bodyText": "is there an easy way to configure the local site name for the test?", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r377071500", "createdAt": "2020-02-10T13:47:42Z", "author": {"login": "karesti"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -213,6 +212,7 @@ public void testInfo() throws Exception {\n       assertFalse(cmInfo.get(\"version\").asText().isEmpty());\n       assertEquals(2, cmInfo.get(\"cluster_members\").size());\n       assertEquals(2, cmInfo.get(\"cluster_members_physical_addresses\").size());\n+      assertTrue(cmInfo.get(\"local_site\").isNull());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjM1Ng=="}, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA5MDkzNQ==", "bodyText": "use the method that accepts the TransportFlags when instantiating the CacheManager and  use TransportFlags.minimalXsiteFlags()\nThe local site name will be LON-1", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r377090935", "createdAt": "2020-02-10T14:21:59Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -213,6 +212,7 @@ public void testInfo() throws Exception {\n       assertFalse(cmInfo.get(\"version\").asText().isEmpty());\n       assertEquals(2, cmInfo.get(\"cluster_members\").size());\n       assertEquals(2, cmInfo.get(\"cluster_members_physical_addresses\").size());\n+      assertTrue(cmInfo.get(\"local_site\").isNull());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjM1Ng=="}, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzU3Mjk4OnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoxNzozOFrOFm4bvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0Njo0M1rOFnmlYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNDgxMg==", "bodyText": "revert the changes in the imports", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r376314812", "createdAt": "2020-02-07T10:17:38Z", "author": {"login": "pruivo"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -1,20 +1,8 @@\n package org.infinispan.rest.resources;\n \n-import static org.infinispan.commons.dataconversion.MediaType.TEXT_PLAIN_TYPE;\n-import static org.infinispan.configuration.cache.CacheMode.DIST_SYNC;\n-import static org.infinispan.configuration.cache.CacheMode.LOCAL;\n-import static org.infinispan.partitionhandling.PartitionHandling.DENY_READ_WRITES;\n-import static org.testng.Assert.assertNotNull;\n-import static org.testng.Assert.assertTrue;\n-import static org.testng.AssertJUnit.assertEquals;\n-import static org.testng.AssertJUnit.assertFalse;\n-\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.stream.Collectors;\n-\n+import com.fasterxml.jackson.databind.JsonNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MDk0NQ==", "bodyText": "reverted", "url": "https://github.com/infinispan/infinispan/pull/7822#discussion_r377070945", "createdAt": "2020-02-10T13:46:43Z", "author": {"login": "karesti"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -1,20 +1,8 @@\n package org.infinispan.rest.resources;\n \n-import static org.infinispan.commons.dataconversion.MediaType.TEXT_PLAIN_TYPE;\n-import static org.infinispan.configuration.cache.CacheMode.DIST_SYNC;\n-import static org.infinispan.configuration.cache.CacheMode.LOCAL;\n-import static org.infinispan.partitionhandling.PartitionHandling.DENY_READ_WRITES;\n-import static org.testng.Assert.assertNotNull;\n-import static org.testng.Assert.assertTrue;\n-import static org.testng.AssertJUnit.assertEquals;\n-import static org.testng.AssertJUnit.assertFalse;\n-\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.stream.Collectors;\n-\n+import com.fasterxml.jackson.databind.JsonNode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNDgxMg=="}, "originalCommit": {"oid": "3b6645102712ccb78794209dead42553d451f2d8"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4555, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}