{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTAzODUw", "number": 8089, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1ODoyMVrODq4n6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzowMDoyOVrODq4raw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjk0NTA2OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/con_evict_vs_expire.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1ODoyMVrOF66FRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1ODoyMVrOF66FRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxMzM1MQ==", "bodyText": "It also applies to stores. not just data container.", "url": "https://github.com/infinispan/infinispan/pull/8089#discussion_r397313351", "createdAt": "2020-03-24T16:58:21Z", "author": {"login": "wburns"}, "path": "documentation/src/main/asciidoc/topics/con_evict_vs_expire.adoc", "diffHunk": "@@ -5,9 +5,13 @@ they remove old, unused entries. Although eviction and expiration are similar,\n they have some important differences that you should take into account when\n planning your configuration.\n \n-* [*] Eviction prevents {brandname} from exceeding the maximum size of data containers.\n+* [*] Eviction prevents {brandname} from exceeding the maximum size of the data\n+container. {brandname} performs eviction when you add entries to the cache.\n \n-* [*] Expiration limits the amount of time entries can exist.\n+* [*] Expiration limits the amount of time entries can exist in the data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8eeb12ffe83ffe78be214c410f606bcec90bf49"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjk0Nzg1OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/con_evict_vs_expire.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1OTowM1rOF66HNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1OTowM1rOF66HNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxMzg0NQ==", "bodyText": "\"not found\" isn't a value really. Maybe we should mention that it is null?", "url": "https://github.com/infinispan/infinispan/pull/8089#discussion_r397313845", "createdAt": "2020-03-24T16:59:03Z", "author": {"login": "wburns"}, "path": "documentation/src/main/asciidoc/topics/con_evict_vs_expire.adoc", "diffHunk": "@@ -5,9 +5,13 @@ they remove old, unused entries. Although eviction and expiration are similar,\n they have some important differences that you should take into account when\n planning your configuration.\n \n-* [*] Eviction prevents {brandname} from exceeding the maximum size of data containers.\n+* [*] Eviction prevents {brandname} from exceeding the maximum size of the data\n+container. {brandname} performs eviction when you add entries to the cache.\n \n-* [*] Expiration limits the amount of time entries can exist.\n+* [*] Expiration limits the amount of time entries can exist in the data\n+container. {brandname} uses a scheduler to periodically remove expired entries.\n+Entries that are expired but not yet removed are immediately removed on access;\n+in this case `get()` calls for expired entries return \"not found\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8eeb12ffe83ffe78be214c410f606bcec90bf49"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjk1MDg4OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/con_eviction_custom_classes.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1OTo0NlrOF66JEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo1OTo0NlrOF66JEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxNDMyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You must use binary or off-heap storage for custom classes that use eviction,\n          \n          \n            \n            You must use binary or off-heap storage memory based eviction,", "url": "https://github.com/infinispan/infinispan/pull/8089#discussion_r397314323", "createdAt": "2020-03-24T16:59:46Z", "author": {"login": "wburns"}, "path": "documentation/src/main/asciidoc/topics/con_eviction_custom_classes.adoc", "diffHunk": "@@ -0,0 +1,16 @@\n+[id='custom_class_eviction-{context}']\n+= Custom Classes with Memory-Based Eviction\n+You must use binary or off-heap storage for custom classes that use eviction,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8eeb12ffe83ffe78be214c410f606bcec90bf49"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Mjk1NDAzOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/con_eviction_overview.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzowMDoyOVrOF66LCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzowMDoyOVrOF66LCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMxNDgyNA==", "bodyText": "I don't think we need to mention passivation here. Makes it sound like that is how I should fix this.", "url": "https://github.com/infinispan/infinispan/pull/8089#discussion_r397314824", "createdAt": "2020-03-24T17:00:29Z", "author": {"login": "wburns"}, "path": "documentation/src/main/asciidoc/topics/con_eviction_overview.adoc", "diffHunk": "@@ -1,5 +1,15 @@\n [id='how_eviction_works-{context}']\n = How Eviction Works\n+{brandname} eviction removes entries from the data container to make space when\n+adding new entries.\n+\n+[IMPORTANT]\n+====\n+To prevent data loss, you should always configure a persistent cache store if\n+you enable eviction. Use passivation so that {brandname} writes to persistent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8eeb12ffe83ffe78be214c410f606bcec90bf49"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4345, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}