{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMzk1ODUx", "number": 7857, "title": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics", "bodyText": "https://issues.redhat.com/browse/ISPN-11174\nhttps://issues.redhat.com/browse/ISPN-10979", "createdAt": "2020-02-07T12:48:54Z", "url": "https://github.com/infinispan/infinispan/pull/7857", "merged": true, "mergeCommit": {"oid": "d70408f131f83edd94771bec1e2dd9cdb542b473"}, "closed": true, "closedAt": "2020-02-20T20:16:14Z", "author": {"login": "anistor"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCAO-KgBqjMwMTc4NDU3NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGQ8uNABqjMwNTgwMTMxMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "785e90b2e1e271204afc4f1eb736f16f33d76c62", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/785e90b2e1e271204afc4f1eb736f16f33d76c62", "committedDate": "2020-02-07T12:47:42Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics"}, "afterCommit": {"oid": "396a0106f9e45fc5061f170246ade67f9f1c240b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/396a0106f9e45fc5061f170246ade67f9f1c240b", "committedDate": "2020-02-07T14:20:18Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "396a0106f9e45fc5061f170246ade67f9f1c240b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/396a0106f9e45fc5061f170246ade67f9f1c240b", "committedDate": "2020-02-07T14:20:18Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}, "afterCommit": {"oid": "24687c61b2332fb9005032c02a6c976d25072eeb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/24687c61b2332fb9005032c02a6c976d25072eeb", "committedDate": "2020-02-10T11:56:36Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24687c61b2332fb9005032c02a6c976d25072eeb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/24687c61b2332fb9005032c02a6c976d25072eeb", "committedDate": "2020-02-10T11:56:36Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}, "afterCommit": {"oid": "064a6eae035c0a349f0c1a666495a080cadd7c9b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/064a6eae035c0a349f0c1a666495a080cadd7c9b", "committedDate": "2020-02-11T07:59:41Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "064a6eae035c0a349f0c1a666495a080cadd7c9b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/064a6eae035c0a349f0c1a666495a080cadd7c9b", "committedDate": "2020-02-11T07:59:41Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration"}, "afterCommit": {"oid": "6b2eb2bd53da41d42c0a9ff84017017eae1e3bbd", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/6b2eb2bd53da41d42c0a9ff84017017eae1e3bbd", "committedDate": "2020-02-11T08:04:56Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b2eb2bd53da41d42c0a9ff84017017eae1e3bbd", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/6b2eb2bd53da41d42c0a9ff84017017eae1e3bbd", "committedDate": "2020-02-11T08:04:56Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}, "afterCommit": {"oid": "19b0960deecc8d5f5e500bd0f55f180ab0c845ed", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/19b0960deecc8d5f5e500bd0f55f180ab0c845ed", "committedDate": "2020-02-11T12:53:30Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19b0960deecc8d5f5e500bd0f55f180ab0c845ed", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/19b0960deecc8d5f5e500bd0f55f180ab0c845ed", "committedDate": "2020-02-11T12:53:30Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}, "afterCommit": {"oid": "4323bc46db825d362b5738a4b43fa072a8b26aec", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/4323bc46db825d362b5738a4b43fa072a8b26aec", "committedDate": "2020-02-11T13:47:03Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4323bc46db825d362b5738a4b43fa072a8b26aec", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/4323bc46db825d362b5738a4b43fa072a8b26aec", "committedDate": "2020-02-11T13:47:03Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}, "afterCommit": {"oid": "5b341c7fd8d3e62859835ae556451ef1ea2b98d2", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/5b341c7fd8d3e62859835ae556451ef1ea2b98d2", "committedDate": "2020-02-11T15:10:23Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b341c7fd8d3e62859835ae556451ef1ea2b98d2", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/5b341c7fd8d3e62859835ae556451ef1ea2b98d2", "committedDate": "2020-02-11T15:10:23Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}, "afterCommit": {"oid": "923f2404dbf321f505acc9b02a79a0d04b2e2c78", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/923f2404dbf321f505acc9b02a79a0d04b2e2c78", "committedDate": "2020-02-13T08:37:53Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21116101de050d7b75e5ce9d765da1b7d6cb7c15", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/21116101de050d7b75e5ce9d765da1b7d6cb7c15", "committedDate": "2020-02-13T11:23:09Z", "message": "wip undo"}, "afterCommit": {"oid": "f64c5dced9f8ce29e6e72e924e3b68484af6f356", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/f64c5dced9f8ce29e6e72e924e3b68484af6f356", "committedDate": "2020-02-13T16:01:21Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f64c5dced9f8ce29e6e72e924e3b68484af6f356", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/f64c5dced9f8ce29e6e72e924e3b68484af6f356", "committedDate": "2020-02-13T16:01:21Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()"}, "afterCommit": {"oid": "ceff70de7d782724b5028d58e8b5c7374d8c2c56", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/ceff70de7d782724b5028d58e8b5c7374d8c2c56", "committedDate": "2020-02-13T16:41:39Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ceff70de7d782724b5028d58e8b5c7374d8c2c56", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/ceff70de7d782724b5028d58e8b5c7374d8c2c56", "committedDate": "2020-02-13T16:41:39Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}, "afterCommit": {"oid": "e24f9e49a9e27b46f828183bca00b119cfcc02e2", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/e24f9e49a9e27b46f828183bca00b119cfcc02e2", "committedDate": "2020-02-14T09:27:07Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d45c46934c524d2f90272f026421a525a7f0dae", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/6d45c46934c524d2f90272f026421a525a7f0dae", "committedDate": "2020-02-14T11:06:16Z", "message": "wip"}, "afterCommit": {"oid": "bb427b5d01a92b10273c8019635d56163d86f042", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/bb427b5d01a92b10273c8019635d56163d86f042", "committedDate": "2020-02-14T12:44:02Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4bc2f8b266672d502fb05976c5e47fc7d2594a0d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/4bc2f8b266672d502fb05976c5e47fc7d2594a0d", "committedDate": "2020-02-14T14:02:41Z", "message": "wip"}, "afterCommit": {"oid": "32f69237e822b7d9e22bca0a382e26b2c36914dd", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/32f69237e822b7d9e22bca0a382e26b2c36914dd", "committedDate": "2020-02-14T14:34:50Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32f69237e822b7d9e22bca0a382e26b2c36914dd", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/32f69237e822b7d9e22bca0a382e26b2c36914dd", "committedDate": "2020-02-14T14:34:50Z", "message": "wip"}, "afterCommit": {"oid": "135f1f3e3ddf871e942d5fef0b4f36e8e92de930", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/135f1f3e3ddf871e942d5fef0b4f36e8e92de930", "committedDate": "2020-02-14T17:39:27Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "135f1f3e3ddf871e942d5fef0b4f36e8e92de930", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/135f1f3e3ddf871e942d5fef0b4f36e8e92de930", "committedDate": "2020-02-14T17:39:27Z", "message": "wip"}, "afterCommit": {"oid": "00b321e45cb6e09897ee6c15ef5abe524f4140f7", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/00b321e45cb6e09897ee6c15ef5abe524f4140f7", "committedDate": "2020-02-16T13:58:36Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00b321e45cb6e09897ee6c15ef5abe524f4140f7", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/00b321e45cb6e09897ee6c15ef5abe524f4140f7", "committedDate": "2020-02-16T13:58:36Z", "message": "wip"}, "afterCommit": {"oid": "5173ee8c908f49968387f4a032d7eb9b3089e80d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/5173ee8c908f49968387f4a032d7eb9b3089e80d", "committedDate": "2020-02-16T20:49:00Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5173ee8c908f49968387f4a032d7eb9b3089e80d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/5173ee8c908f49968387f4a032d7eb9b3089e80d", "committedDate": "2020-02-16T20:49:00Z", "message": "wip"}, "afterCommit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/3909913e1aff019426f56ec23a47ba5a5a6d5c0e", "committedDate": "2020-02-17T07:59:14Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTc3MTQ3", "url": "https://github.com/infinispan/infinispan/pull/7857#pullrequestreview-359577147", "createdAt": "2020-02-17T09:06:32Z", "commit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowNjozM1rOFqcz1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowNjozM1rOFqcz1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NjUzMg==", "bodyText": "Replace with Util.threadLocalRandomUUID()", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r380056532", "createdAt": "2020-02-17T09:06:33Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/metrics/impl/CacheManagerMetricsRegistration.java", "diffHunk": "@@ -13,7 +13,17 @@\n public final class CacheManagerMetricsRegistration extends AbstractMetricsRegistration {\n \n    @Override\n-   protected String initPrefix() {\n+   protected String initNamePrefix() {\n       return \"CacheManager_\" + globalConfig.cacheManagerName();\n    }\n+\n+   @Override\n+   protected String initNodeName() {\n+      String nodeName = globalConfig.transport().nodeName();\n+      if (nodeName == null || nodeName.isEmpty()) {\n+         //TODO [anistor] ensure unique node name is set in all tests and also in real life usage\n+         nodeName = java.util.UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTc3NzI0", "url": "https://github.com/infinispan/infinispan/pull/7857#pullrequestreview-359577724", "createdAt": "2020-02-17T09:07:32Z", "commit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowNzozM1rOFqc1mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowNzozM1rOFqc1mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1Njk4NQ==", "bodyText": "StringBuilder !", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r380056985", "createdAt": "2020-02-17T09:07:33Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/metrics/impl/InfinispanMetricsRegistry.java", "diffHunk": "@@ -133,4 +123,16 @@ public void unregister(MetricID metricId) {\n                     metricId, System.identityHashCode(registry), registry.getMetrics().size());\n       }\n    }\n+\n+   private static final Pattern SNAKE_CASE_PATTERN = Pattern.compile(\"(?<=[a-z])[A-Z]\");\n+\n+   private static String decamelize(String s) {\n+      Matcher m = SNAKE_CASE_PATTERN.matcher(s);\n+      StringBuffer sb = new StringBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3909913e1aff019426f56ec23a47ba5a5a6d5c0e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/3909913e1aff019426f56ec23a47ba5a5a6d5c0e", "committedDate": "2020-02-17T07:59:14Z", "message": "wip"}, "afterCommit": {"oid": "0c367bdd740afff63176fb8445192e7afe6b953b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/0c367bdd740afff63176fb8445192e7afe6b953b", "committedDate": "2020-02-17T09:08:42Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c367bdd740afff63176fb8445192e7afe6b953b", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/0c367bdd740afff63176fb8445192e7afe6b953b", "committedDate": "2020-02-17T09:08:42Z", "message": "wip"}, "afterCommit": {"oid": "29c3052daa8f9adae194efbffc4b8ff6f72a33fa", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/29c3052daa8f9adae194efbffc4b8ff6f72a33fa", "committedDate": "2020-02-17T15:50:22Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29c3052daa8f9adae194efbffc4b8ff6f72a33fa", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/29c3052daa8f9adae194efbffc4b8ff6f72a33fa", "committedDate": "2020-02-17T15:50:22Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}, "afterCommit": {"oid": "a3446c9a43dfc6e00b2b48dfcb66e9c8692539eb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/a3446c9a43dfc6e00b2b48dfcb66e9c8692539eb", "committedDate": "2020-02-17T20:45:00Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3446c9a43dfc6e00b2b48dfcb66e9c8692539eb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/a3446c9a43dfc6e00b2b48dfcb66e9c8692539eb", "committedDate": "2020-02-17T20:45:00Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "f86c01a1414e24930ff24c88b197676b33fbf208", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/f86c01a1414e24930ff24c88b197676b33fbf208", "committedDate": "2020-02-18T00:15:52Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f86c01a1414e24930ff24c88b197676b33fbf208", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/f86c01a1414e24930ff24c88b197676b33fbf208", "committedDate": "2020-02-18T00:15:52Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "cf64323d79da41a7aa809ee1c871518fec6f4bfa", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/cf64323d79da41a7aa809ee1c871518fec6f4bfa", "committedDate": "2020-02-18T00:18:14Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf64323d79da41a7aa809ee1c871518fec6f4bfa", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/cf64323d79da41a7aa809ee1c871518fec6f4bfa", "committedDate": "2020-02-18T00:18:14Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "b1afa0e18bbac91e7a4f6cab2cf738e493b9692f", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/b1afa0e18bbac91e7a4f6cab2cf738e493b9692f", "committedDate": "2020-02-18T17:52:50Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a23344863c536ab30259cd4a32536f54d583d074", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/a23344863c536ab30259cd4a32536f54d583d074", "committedDate": "2020-02-19T15:33:16Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/1e687654d29ee1f91cd1468b643e4d74548eda95", "committedDate": "2020-02-19T18:07:22Z", "message": "WIP more and more hacks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjY0NzA5", "url": "https://github.com/infinispan/infinispan/pull/7857#pullrequestreview-361664709", "createdAt": "2020-02-20T06:47:47Z", "commit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNjo0Nzo0OFrOFsHzGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNzo1MjozNFrOFsJLKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgwOTQzNQ==", "bodyText": "I'm not sure about this, making smallrye optional means the users will have to add the dependencies themselves after they enable statistics and they get a ClassNotFoundException", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381809435", "createdAt": "2020-02-20T06:47:48Z", "author": {"login": "danberindei"}, "path": "core/pom.xml", "diffHunk": "@@ -37,21 +37,25 @@\n       <dependency>\n          <groupId>org.eclipse.microprofile.config</groupId>\n          <artifactId>microprofile-config-api</artifactId>\n+         <optional>true</optional>\n       </dependency>\n \n       <dependency>\n          <groupId>io.smallrye</groupId>\n          <artifactId>smallrye-config</artifactId>\n+         <optional>true</optional>\n       </dependency>\n \n       <dependency>\n          <groupId>org.eclipse.microprofile.metrics</groupId>\n          <artifactId>microprofile-metrics-api</artifactId>\n+         <optional>true</optional>\n       </dependency>\n \n       <dependency>\n          <groupId>io.smallrye</groupId>\n          <artifactId>smallrye-metrics</artifactId>\n+         <optional>true</optional>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxMTE4Mg==", "bodyText": "IMO you need to change the author and add a @since tag", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381811182", "createdAt": "2020-02-20T06:50:50Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/cache/StatisticsConfiguration.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.infinispan.configuration.cache;\n+\n+import org.infinispan.commons.configuration.ConfigurationInfo;\n+import org.infinispan.commons.configuration.attributes.Attribute;\n+import org.infinispan.commons.configuration.attributes.AttributeDefinition;\n+import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.commons.configuration.attributes.Matchable;\n+import org.infinispan.commons.configuration.elements.DefaultElementDefinition;\n+import org.infinispan.commons.configuration.elements.ElementDefinition;\n+\n+/**\n+ * Determines whether statistics are gather and reported.\n+ *\n+ * @author pmuir", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxMTcxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Determines whether statistics are gather and reported.\n          \n          \n            \n             * Determines whether statistics are gathered and reported.\n          \n      \n    \n    \n  \n\nAlso @author and @since", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381811719", "createdAt": "2020-02-20T06:51:48Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/cache/StatisticsConfigurationBuilder.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package org.infinispan.configuration.cache;\n+\n+import static org.infinispan.configuration.cache.StatisticsConfiguration.AVAILABLE;\n+import static org.infinispan.configuration.cache.StatisticsConfiguration.ELEMENT_DEFINITION;\n+import static org.infinispan.configuration.cache.StatisticsConfiguration.ENABLED;\n+import static org.infinispan.util.logging.Log.CONFIG;\n+\n+import org.infinispan.commons.configuration.Builder;\n+import org.infinispan.commons.configuration.ConfigurationBuilderInfo;\n+import org.infinispan.commons.configuration.attributes.Attribute;\n+import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.commons.configuration.elements.ElementDefinition;\n+import org.infinispan.configuration.global.GlobalConfiguration;\n+\n+/**\n+ * Determines whether statistics are gather and reported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxMjI1Nw==", "bodyText": "I thought you wanted to end this practice, Adrian?", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381812257", "createdAt": "2020-02-20T06:53:21Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/global/AbstractGlobalConfigurationBuilder.java", "diffHunk": "@@ -22,9 +22,15 @@ public TransportConfigurationBuilder transport() {\n    }\n \n    @Override\n-   public GlobalJmxStatisticsConfigurationBuilder globalJmxStatistics() {\n-      globalConfig.globalJmxStatistics().enable();\n-      return globalConfig.globalJmxStatistics();\n+   public GlobalMetricsConfigurationBuilder metrics() {\n+      globalConfig.metrics().gauges(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxNDE0MA==", "bodyText": "Could you use an abstract class instead? I don't think changing a class to an interface preserves binary compatibility.", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381814140", "createdAt": "2020-02-20T06:59:52Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/cache/JMXStatisticsConfiguration.java", "diffHunk": "@@ -1,94 +1,18 @@\n package org.infinispan.configuration.cache;\n \n-import org.infinispan.commons.configuration.ConfigurationInfo;\n-import org.infinispan.commons.configuration.attributes.Attribute;\n-import org.infinispan.commons.configuration.attributes.AttributeDefinition;\n-import org.infinispan.commons.configuration.attributes.AttributeSet;\n-import org.infinispan.commons.configuration.attributes.Matchable;\n-import org.infinispan.commons.configuration.elements.DefaultElementDefinition;\n-import org.infinispan.commons.configuration.elements.ElementDefinition;\n-\n /**\n- * Determines whether statistics are gather and reported.\n- *\n- * @author pmuir\n- *\n+ * @deprecated since 10.1.3. Use {@link StatisticsConfiguration} instead. This will be removed in next major version.\n  */\n-public class JMXStatisticsConfiguration implements Matchable<JMXStatisticsConfiguration>, ConfigurationInfo {\n-\n-   public static final AttributeDefinition<Boolean> ENABLED = AttributeDefinition.builder(\"enabled\", false).xmlName(\"statistics\")\n-         .build();\n-   public static final AttributeDefinition<Boolean> AVAILABLE = AttributeDefinition.builder(\"available\", true).xmlName(\"statistics-available\").build();\n-   static AttributeSet attributeDefinitionSet() {\n-      return new AttributeSet(JMXStatisticsConfiguration.class, ENABLED, AVAILABLE);\n-   }\n+@Deprecated\n+public interface JMXStatisticsConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxNDMwNg==", "bodyText": "Missing javadoc", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381814306", "createdAt": "2020-02-20T07:00:26Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/configuration/global/GlobalMetricsConfiguration.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.infinispan.configuration.global;\n+\n+import org.infinispan.commons.configuration.ConfigurationInfo;\n+import org.infinispan.commons.configuration.attributes.Attribute;\n+import org.infinispan.commons.configuration.attributes.AttributeDefinition;\n+import org.infinispan.commons.configuration.attributes.AttributeSet;\n+import org.infinispan.commons.configuration.elements.DefaultElementDefinition;\n+import org.infinispan.commons.configuration.elements.ElementDefinition;\n+import org.infinispan.configuration.parsing.Element;\n+\n+public class GlobalMetricsConfiguration implements ConfigurationInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxNzg0OQ==", "bodyText": "@wburns is the if enough for Quarkus to not balk on the ObjectName static initializer?", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381817849", "createdAt": "2020-02-20T07:12:02Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -538,10 +540,9 @@ private void registerMBeansIfNeeded(String clusterName) {\n          // Normally this would be done by CacheManagerJmxRegistration but\n          // the channel is not started when the cache manager starts but\n          // when first cache starts, so it's safer to do it here.\n-         globalStatsEnabled = configuration.statistics();\n-         if (globalStatsEnabled) {\n-            // TODO Use the overloaded variant when available: https://issues.jboss.org/browse/JGRP-2394\n-            JmxConfigurator.registerChannel(channel, jmxRegistration.getMBeanServer(), jmxRegistration.getDomain(), clusterName, true);\n+         if (configuration.jmx().enabled()) {\n+            ObjectName namePrefix = new ObjectName(jmxRegistration.getDomain() + \":\" + ObjectNameKeys.MANAGER + \"=\" + ObjectName.quote(configuration.cacheManagerName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxODExNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @MBean(objectName = ClusterCacheStats.OBJECT_NAME, description = \"General cluster statistics such as timings, hit/miss ratio, etc. for a cache.\")\n          \n          \n            \n            @MBean(objectName = ClusterCacheStats.OBJECT_NAME, description = \"General clustered cache statistics such as timings, hit/miss ratio, etc.\")", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381818116", "createdAt": "2020-02-20T07:12:53Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/stats/impl/ClusterCacheStatsImpl.java", "diffHunk": "@@ -71,7 +71,7 @@\n import org.infinispan.util.logging.Log;\n import org.infinispan.util.logging.LogFactory;\n \n-@MBean(objectName = ClusterCacheStats.OBJECT_NAME, description = \"General cluster statistics such as timings, hit/miss ratio, etc.\")\n+@MBean(objectName = ClusterCacheStats.OBJECT_NAME, description = \"General cluster statistics such as timings, hit/miss ratio, etc. for a cache.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyMjA3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               @ManagedAttribute(description = \"Required minimum number of nodes to guarantee data consistency\",\n          \n          \n            \n               @ManagedAttribute(description = \"Required minimum number of nodes to hold current cache data\",\n          \n      \n    \n    \n  \n\nI know this is copied from CacheMgmtInterceptor/Stats, but it's not really true: if the cluster has 5 nodes and this attribute says 2 nodes would be enough to hold all the data, killing 3 nodes at once will absolutely lose data in a distributed cache with numOwners < 4.\nThe attribute also returns a valid number when the eviction strategy is REMOVE, which will also lose data if you reduce the number of nodes and then insert new entries.", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381822077", "createdAt": "2020-02-20T07:24:39Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/stats/impl/ClusterCacheStatsImpl.java", "diffHunk": "@@ -199,6 +199,9 @@ public long getAverageWriteTimeNanos() {\n       return getStatAsLong(AVERAGE_WRITE_TIME_NANOS);\n    }\n \n+   @ManagedAttribute(description = \"Required minimum number of nodes to guarantee data consistency\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyNDUxMQ==", "bodyText": "-1 for removing throws clauses in tests, it's too much noise adding and removing exceptions all the time.\nYou can edit the inspection settings in IntelliJ to \"Ignore exceptions thrown by entry point methods\" instead.", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381824511", "createdAt": "2020-02-20T07:32:03Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/configuration/ConfigurationUnitTest.java", "diffHunk": "@@ -81,7 +81,7 @@ public void testDistSyncAutoCommit() {\n    }\n \n    @Test\n-   public void testDummyTMGetCache() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyNTYzMg==", "bodyText": "That comment is definitely wrong now.\nFunny enough, the commit disabling stats says \"ISPN-8651 Add statistics for functional commands\" :)", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381825632", "createdAt": "2020-02-20T07:35:11Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/functional/AbstractFunctionalTest.java", "diffHunk": "@@ -68,8 +68,7 @@ protected void createCacheManagers() throws Throwable {\n \n    protected void configureCache(ConfigurationBuilder builder) {\n       // Make sure there are no errors when counting stats\n-//      builder.jmxStatistics().enabled(true);\n-      builder.jmxStatistics().available(false);\n+      builder.statistics().available(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyNzA2Mg==", "bodyText": "Isn't the UUID in CacheManagerMetricsRegistration supposed to fix this?\nIf a test sets a node name and sets the same name for 2 nodes (or 2 different tests set the same name) then the test should be fixed.", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381827062", "createdAt": "2020-02-20T07:39:16Z", "author": {"login": "danberindei"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -31,11 +35,20 @@\n  */\n public final class MetricsResource implements ResourceHandler {\n \n+   private final static Log log = LogFactory.getLog(MetricsResource.class, Log.class);\n+\n    private static final String METRICS_PATH = \"/metrics\";\n \n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      try {\n+         new JmxRegistrar().init();\n+      } catch (IOException | IllegalArgumentException e) {\n+         // Smallrye uses a global singleton registry which is a nightmare for tests where more than one\n+         // server has to exist in a single JVM. It fails and we can't do anything about it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgyODM4Mg==", "bodyText": "WildFly was never into JMX, do nothing I guess /cc @tristantarrant", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381828382", "createdAt": "2020-02-20T07:43:16Z", "author": {"login": "danberindei"}, "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/CacheConfigurationService.java", "diffHunk": "@@ -71,8 +72,9 @@ protected ConfigurationBuilder getConfigurationBuilder() {\n         builder.read(configuration);\n         builder.template(configuration.isTemplate());\n \n-       boolean jmxEnabled = SecurityActions.getCacheManagerConfiguration(dependencies.getCacheContainer()).statistics();\n-       builder.jmxStatistics().enabled(jmxEnabled);\n+        GlobalConfiguration globalConfiguration = SecurityActions.getCacheManagerConfiguration(dependencies.getCacheContainer());\n+        builder.statistics().enabled(globalConfiguration.statistics());\n+        // TODO [anistor] what about JMX ???", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgzMTk3OQ==", "bodyText": "This one's also deprecated", "url": "https://github.com/infinispan/infinispan/pull/7857#discussion_r381831979", "createdAt": "2020-02-20T07:52:34Z", "author": {"login": "danberindei"}, "path": "documentation/src/main/asciidoc/topics/code_examples/MBeanServerLookup.java", "diffHunk": "@@ -1,5 +1,5 @@\n GlobalConfiguration globalConfig = new GlobalConfigurationBuilder()\n-\u00a0 .globalJmxStatistics()\n+\u00a0 .jmx()\n \u00a0\u00a0\u00a0 .cacheManagerName(\"SalesCacheManager\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e687654d29ee1f91cd1468b643e4d74548eda95", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/1e687654d29ee1f91cd1468b643e4d74548eda95", "committedDate": "2020-02-19T18:07:22Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "876193b8b7cf25d2e1b15d5b8b61ada689e2198d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/876193b8b7cf25d2e1b15d5b8b61ada689e2198d", "committedDate": "2020-02-20T08:30:20Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "876193b8b7cf25d2e1b15d5b8b61ada689e2198d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/876193b8b7cf25d2e1b15d5b8b61ada689e2198d", "committedDate": "2020-02-20T08:30:20Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "87c8fe3eefd9c20e716d14fcd1bfb424c5e4cc4e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/87c8fe3eefd9c20e716d14fcd1bfb424c5e4cc4e", "committedDate": "2020-02-20T08:46:30Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87c8fe3eefd9c20e716d14fcd1bfb424c5e4cc4e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/87c8fe3eefd9c20e716d14fcd1bfb424c5e4cc4e", "committedDate": "2020-02-20T08:46:30Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "12193ea50e36fdb86a7f7761bc1b3c8d7abece8d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/12193ea50e36fdb86a7f7761bc1b3c8d7abece8d", "committedDate": "2020-02-20T09:00:45Z", "message": "WIP more and more hacks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12193ea50e36fdb86a7f7761bc1b3c8d7abece8d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/12193ea50e36fdb86a7f7761bc1b3c8d7abece8d", "committedDate": "2020-02-20T09:00:45Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "469256910e8c41bc8ab2e19b202c93c72f955649", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/469256910e8c41bc8ab2e19b202c93c72f955649", "committedDate": "2020-02-20T10:14:45Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* fix several 'configuration' test names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47da0aadb7607e8c8889d6d061c08ea6ffb138a2", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/47da0aadb7607e8c8889d6d061c08ea6ffb138a2", "committedDate": "2020-02-20T11:33:47Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "09fcde29c9fc9eb54ade5db9b9000d9706f6e67d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/09fcde29c9fc9eb54ade5db9b9000d9706f6e67d", "committedDate": "2020-02-20T16:25:37Z", "message": "WIP more and more hacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05b5f592ad7a63f80703f2f17393e3e10bf80c65", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/05b5f592ad7a63f80703f2f17393e3e10bf80c65", "committedDate": "2020-02-20T17:44:14Z", "message": "JGRP-2394 Include cache manager name in MBean names of jgroups channel and protocols"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c47962d0d58daada3ad0aac3da01e9ff8e56506", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/3c47962d0d58daada3ad0aac3da01e9ff8e56506", "committedDate": "2020-02-20T17:44:14Z", "message": "ISPN-10979 Make microprofile and smallrye metrics dependencies optional at runtime\n\n* all deps are optional in POM\n* implementation deals gracefully with eventual ClassNotFoundException and NoClassDefFoundError"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09fcde29c9fc9eb54ade5db9b9000d9706f6e67d", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/09fcde29c9fc9eb54ade5db9b9000d9706f6e67d", "committedDate": "2020-02-20T16:25:37Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "41d476a72bf50ff77fc9b46c67c1fb201a0db6bb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/41d476a72bf50ff77fc9b46c67c1fb201a0db6bb", "committedDate": "2020-02-20T17:44:39Z", "message": "WIP more and more hacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d42c285030a94711d46a4fb6273a526c57539e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/c9d42c285030a94711d46a4fb6273a526c57539e", "committedDate": "2020-02-20T20:10:34Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* add an enable flag for global JMX config and separate the flag from CacheContainerConfiguration.statistics\n* fix several 'configuration' test names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41d476a72bf50ff77fc9b46c67c1fb201a0db6bb", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/41d476a72bf50ff77fc9b46c67c1fb201a0db6bb", "committedDate": "2020-02-20T17:44:39Z", "message": "WIP more and more hacks"}, "afterCommit": {"oid": "c9d42c285030a94711d46a4fb6273a526c57539e", "author": {"user": {"login": "anistor", "name": "Adrian Nistor"}}, "url": "https://github.com/infinispan/infinispan/commit/c9d42c285030a94711d46a4fb6273a526c57539e", "committedDate": "2020-02-20T20:10:34Z", "message": "ISPN-11174 Add global and cache-level enable flag for microprofile metrics\n\n* rename ApplicationMetricsRegistry to InfinispanMetricsRegistry\n* rename JMXStatisticsConfiguration to StatisticsConfiguration\n* rename ConfigurationBuilder.jmxStatistics() to statistics()\n* add an enable flag for global JMX config and separate the flag from CacheContainerConfiguration.statistics\n* fix several 'configuration' test names"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1315, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}