{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MDM0NzA1", "number": 8058, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1ODoxOFrODphNBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNTozNDoxOFrODpj67A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODYyMjE1OnYy", "diffSide": "RIGHT", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/DefaultTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1ODoxOFrOF4voAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMToyOToxMlrOF5BCvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0NDg2NQ==", "bodyText": "getName() and Enum.name() are surprisingly different yet look very similar. I'm leaning towards naming it something like getTemplate or even getTemplateName", "url": "https://github.com/infinispan/infinispan/pull/8058#discussion_r395044865", "createdAt": "2020-03-19T13:58:18Z", "author": {"login": "anistor"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/DefaultTemplate.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.infinispan.client.hotrod;\n+\n+/**\n+ * This enum lists the cache configuration templates names that are available in the server by default.\n+ * \n+ * @since 10\n+ * @author Katia Aresti\n+ */\n+public enum DefaultTemplate {\n+   LOCAL(\"org.infinispan.LOCAL\"),\n+   REPL_SYNC(\"org.infinispan.REPL_SYNC\"),\n+   REPL_ASYNC(\"org.infinispan.REPL_ASYNC\"),\n+   DIST_SYNC(\"org.infinispan.DIST_SYNC\"),\n+   DIST_ASYNC(\"org.infinispan.DIST_ASYNC\"),\n+   INVALIDATION_SYNC(\"org.infinispan.INVALIDATION_SYNC\"),\n+   INVALIDATION_ASYNC(\"org.infinispan.INVALIDATION_ASYNC\"),\n+   SCATTERED_SYNC(\"org.infinispan.SCATTERED_SYNC\")\n+   ;\n+\n+   private final String name;\n+\n+   DefaultTemplate(String name) {\n+      this.name = name;\n+   }\n+\n+   /**\n+    * Use this method to retrieve the value of a template configured in the infinispan-defaults.xml file\n+    *\n+    * @return name of the template\n+    */\n+   public String getName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e176450e0b46ddfe7c304cce01def724f938207"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMDIzOQ==", "bodyText": "I agree", "url": "https://github.com/infinispan/infinispan/pull/8058#discussion_r395330239", "createdAt": "2020-03-19T21:29:12Z", "author": {"login": "karesti"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/DefaultTemplate.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.infinispan.client.hotrod;\n+\n+/**\n+ * This enum lists the cache configuration templates names that are available in the server by default.\n+ * \n+ * @since 10\n+ * @author Katia Aresti\n+ */\n+public enum DefaultTemplate {\n+   LOCAL(\"org.infinispan.LOCAL\"),\n+   REPL_SYNC(\"org.infinispan.REPL_SYNC\"),\n+   REPL_ASYNC(\"org.infinispan.REPL_ASYNC\"),\n+   DIST_SYNC(\"org.infinispan.DIST_SYNC\"),\n+   DIST_ASYNC(\"org.infinispan.DIST_ASYNC\"),\n+   INVALIDATION_SYNC(\"org.infinispan.INVALIDATION_SYNC\"),\n+   INVALIDATION_ASYNC(\"org.infinispan.INVALIDATION_ASYNC\"),\n+   SCATTERED_SYNC(\"org.infinispan.SCATTERED_SYNC\")\n+   ;\n+\n+   private final String name;\n+\n+   DefaultTemplate(String name) {\n+      this.name = name;\n+   }\n+\n+   /**\n+    * Use this method to retrieve the value of a template configured in the infinispan-defaults.xml file\n+    *\n+    * @return name of the template\n+    */\n+   public String getName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0NDg2NQ=="}, "originalCommit": {"oid": "2e176450e0b46ddfe7c304cce01def724f938207"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTA2NzMyOnYy", "diffSide": "RIGHT", "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNTozNDoxOFrOF40G5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMTozMDo1N1rOF5BF7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExODMwOA==", "bodyText": "@karesti is it really better than the client calling createCache(name, template.getName()) directly?", "url": "https://github.com/infinispan/infinispan/pull/8058#discussion_r395118308", "createdAt": "2020-03-19T15:34:18Z", "author": {"login": "danberindei"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java", "diffHunk": "@@ -24,6 +24,16 @@\n    @Override\n    <K, V> RemoteCache<K, V> createCache(String name, String template) throws HotRodClientException;\n \n+   /**\n+    * Creates a cache on the remote server cluster using the specified template.\n+    *\n+    * @param name the name of the cache to create\n+    * @param template {@link DefaultTemplate} enum\n+    * @return the cache\n+    * @throws HotRodClientException\n+    */\n+   <K, V> RemoteCache<K, V> createCache(String name, DefaultTemplate template) throws HotRodClientException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e176450e0b46ddfe7c304cce01def724f938207"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMTA1NA==", "bodyText": "Yes because as a user I might not know where to pick up this String from, but the DefaultTemplate is strongly typed so I discover it easily and it's nice to be used in the examples", "url": "https://github.com/infinispan/infinispan/pull/8058#discussion_r395331054", "createdAt": "2020-03-19T21:30:57Z", "author": {"login": "karesti"}, "path": "client/hotrod-client/src/main/java/org/infinispan/client/hotrod/RemoteCacheManagerAdmin.java", "diffHunk": "@@ -24,6 +24,16 @@\n    @Override\n    <K, V> RemoteCache<K, V> createCache(String name, String template) throws HotRodClientException;\n \n+   /**\n+    * Creates a cache on the remote server cluster using the specified template.\n+    *\n+    * @param name the name of the cache to create\n+    * @param template {@link DefaultTemplate} enum\n+    * @return the cache\n+    * @throws HotRodClientException\n+    */\n+   <K, V> RemoteCache<K, V> createCache(String name, DefaultTemplate template) throws HotRodClientException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExODMwOA=="}, "originalCommit": {"oid": "2e176450e0b46ddfe7c304cce01def724f938207"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4449, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}