{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzI5MDkz", "number": 8484, "title": "ISPN-11952 Revive Infinispan Archetypes", "bodyText": "https://issues.redhat.com/browse/ISPN-11952\nhttps://issues.redhat.com/browse/ISPN-11953\nhttps://issues.redhat.com/browse/ISPN-11956\nhttps://issues.redhat.com/browse/ISPN-11957\nClient and Store archetype to be added.", "createdAt": "2020-06-16T16:23:09Z", "url": "https://github.com/infinispan/infinispan/pull/8484", "merged": true, "mergeCommit": {"oid": "02f05713e43858f83fa864d2e8e4b78d5e0228ef"}, "closed": true, "closedAt": "2020-06-19T13:04:08Z", "author": {"login": "ryanemerson"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr4t66AFqTQzMTcyODI1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcseiYFgFqTQzMzI4NzA5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzI4MjU0", "url": "https://github.com/infinispan/infinispan/pull/8484#pullrequestreview-431728254", "createdAt": "2020-06-16T17:20:33Z", "commit": {"oid": "e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMDozM1rOGklhfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMzoyOFrOGkloSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNjcwMw==", "bodyText": "no more http :) use https\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                -DarchetypeRepository=http://repository.jboss.org/nexus/content/groups/public\n          \n          \n            \n                -DarchetypeRepository=https://repository.jboss.org/nexus/content/groups/public", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441016703", "createdAt": "2020-06-16T17:20:33Z", "author": {"login": "pruivo"}, "path": "archetypes/README.md", "diffHunk": "@@ -0,0 +1,17 @@\n+# The Infinispan Archetypes project\n+\n+This project provides a set of quick-start archetypes which can be used to generate skeleton projects using [Infinispan](https://infinispan.org).\n+\n+# Archetype Usage\n+To utilise the archetypes utilise the following command:\n+\n+```\n+mvn archetype:generate \\\n+    -DarchetypeGroupId=org.infinispan.archetypes \\\n+    -DarchetypeArtifactId=<archetype-name> \\\n+    -DarchetypeVersion=<infinispan-version> \\\n+    -DarchetypeRepository=http://repository.jboss.org/nexus/content/groups/public", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzUzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <url>http://repository.jboss.org/nexus/content/groups/public/</url>\n          \n          \n            \n                        <url>https://repository.jboss.org/nexus/content/groups/public/</url>", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441017538", "createdAt": "2020-06-16T17:22:00Z", "author": {"login": "pruivo"}, "path": "archetypes/embedded/src/main/resources/archetype-resources/pom.xml", "diffHunk": "@@ -0,0 +1,105 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>\\${groupId}</groupId>\n+    <artifactId>\\${artifactId}</artifactId>\n+    <packaging>jar</packaging>\n+    <version>\\${version}</version>\n+    <name>A sample project using Infinispan</name>\n+    <url>http://www.myorganization.org</url>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.infinispan</groupId>\n+                <artifactId>infinispan-bom</artifactId>\n+                <!-- Which Infinispan version do you want to use?  Released versions are always more reliable than snapshots! -->\n+                <version>${project.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.infinispan</groupId>\n+            <artifactId>infinispan-core</artifactId>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <!-- enforce java 1.8 and maven 3.2 -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <version>3.0.0-M1</version>\n+                <executions>\n+                    <execution>\n+                        <id>enforce-java</id>\n+                        <goals>\n+                            <goal>enforce</goal>\n+                        </goals>\n+                        <configuration>\n+                            <rules>\n+                                <requireJavaVersion>\n+                                    <version>[${maven.compiler.source},)</version>\n+                                </requireJavaVersion>\n+                                <requireMavenVersion>\n+                                    <version>[3.2.1,)</version>\n+                                </requireMavenVersion>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <!-- by default, compile to JDK 1.8 compatibility -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <version>${version.maven-compiler-plugin}</version>\n+                <configuration>\n+                    <source>${maven.compiler.source}</source>\n+                    <target>${maven.compiler.target}</target>\n+                    <encoding>UTF-8</encoding>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- This is used to run the sample Application.java file.  Remove this in any production usage.  -->\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>exec-maven-plugin</artifactId>\n+                <version>1.2.1</version>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>java</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <mainClass>\\${package}.Application</mainClass>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <repositories>\n+        <repository>\n+            <id>JBoss.org Public Repository</id>\n+            <releases>\n+                <enabled>true</enabled>\n+            </releases>\n+            <snapshots>\n+                <enabled>true</enabled>\n+            </snapshots>\n+            <url>http://repository.jboss.org/nexus/content/groups/public/</url>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxODQ0Mg==", "bodyText": "do you have the generated pom.xml? is this properly replaced?", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441018442", "createdAt": "2020-06-16T17:23:28Z", "author": {"login": "pruivo"}, "path": "archetypes/embedded/src/main/resources/archetype-resources/pom.xml", "diffHunk": "@@ -0,0 +1,105 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>\\${groupId}</groupId>\n+    <artifactId>\\${artifactId}</artifactId>\n+    <packaging>jar</packaging>\n+    <version>\\${version}</version>\n+    <name>A sample project using Infinispan</name>\n+    <url>http://www.myorganization.org</url>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.infinispan</groupId>\n+                <artifactId>infinispan-bom</artifactId>\n+                <!-- Which Infinispan version do you want to use?  Released versions are always more reliable than snapshots! -->\n+                <version>${project.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/e485e3422995d7f4b3ad0fb5cb18593aa7aa70d3", "committedDate": "2020-06-16T16:22:48Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}, "afterCommit": {"oid": "61e65dff401a9e50fade0bad3cd9b3ee43f0d53a", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/61e65dff401a9e50fade0bad3cd9b3ee43f0d53a", "committedDate": "2020-06-17T08:17:56Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61e65dff401a9e50fade0bad3cd9b3ee43f0d53a", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/61e65dff401a9e50fade0bad3cd9b3ee43f0d53a", "committedDate": "2020-06-17T08:17:56Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}, "afterCommit": {"oid": "1e5796b7a6e470a06a3129cd1dddec7969ff3d95", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/1e5796b7a6e470a06a3129cd1dddec7969ff3d95", "committedDate": "2020-06-17T08:37:00Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMjQ2NjU1", "url": "https://github.com/infinispan/infinispan/pull/8484#pullrequestreview-432246655", "createdAt": "2020-06-17T09:59:02Z", "commit": {"oid": "1e5796b7a6e470a06a3129cd1dddec7969ff3d95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTo1OTowMlrOGk-uaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTo1OTowMlrOGk-uaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQyOTYxMQ==", "bodyText": "can you try with the version used by jboss-parent?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <maven.archetype.version>2.3</maven.archetype.version>\n          \n          \n            \n                    <maven.archetype.version>${version.archetype.plugin}</maven.archetype.version>", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441429611", "createdAt": "2020-06-17T09:59:02Z", "author": {"login": "pruivo"}, "path": "archetypes/pom.xml", "diffHunk": "@@ -0,0 +1,93 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.infinispan</groupId>\n+        <artifactId>infinispan-parent</artifactId>\n+        <version>11.0.1-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <groupId>org.infinispan.archetypes</groupId>\n+    <artifactId>infinispan-archetypes</artifactId>\n+    <version>11.0.1-SNAPSHOT</version>\n+\n+    <name>Infinispan Archetypes</name>\n+    <description>Archetypes for the Infinispan project</description>\n+    <packaging>pom</packaging>\n+\n+    <modules>\n+        <module>embedded</module>\n+    </modules>\n+\n+    <properties>\n+        <maven.archetype.version>2.3</maven.archetype.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5796b7a6e470a06a3129cd1dddec7969ff3d95"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e5796b7a6e470a06a3129cd1dddec7969ff3d95", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/1e5796b7a6e470a06a3129cd1dddec7969ff3d95", "committedDate": "2020-06-17T08:37:00Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}, "afterCommit": {"oid": "10934547761e06b8b454f4fd06fc85cf4ae0e640", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/10934547761e06b8b454f4fd06fc85cf4ae0e640", "committedDate": "2020-06-17T10:40:30Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10934547761e06b8b454f4fd06fc85cf4ae0e640", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/10934547761e06b8b454f4fd06fc85cf4ae0e640", "committedDate": "2020-06-17T10:40:30Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}, "afterCommit": {"oid": "60161d02935fa6f3e15e1045ffde60af033bd060", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/60161d02935fa6f3e15e1045ffde60af033bd060", "committedDate": "2020-06-17T10:52:13Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a9be23fc3c587546012c2c04aa8520132057b83", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/8a9be23fc3c587546012c2c04aa8520132057b83", "committedDate": "2020-06-17T12:13:40Z", "message": "ISPN-11956 Add store archetype utilising the NonBlockingStore SPI"}, "afterCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4b190ade5b441705be9f5f94879556d3cb44fc15", "committedDate": "2020-06-17T15:57:50Z", "message": "ISPN-11953 Create Client archetype"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjE0MDU1", "url": "https://github.com/infinispan/infinispan/pull/8484#pullrequestreview-432614055", "createdAt": "2020-06-17T17:20:49Z", "commit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoyMDo0OVrOGlPiqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoyNDo1M1rOGlPsAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTEzMA==", "bodyText": "missing client and store?", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441705130", "createdAt": "2020-06-17T17:20:49Z", "author": {"login": "pruivo"}, "path": "archetypes/README.md", "diffHunk": "@@ -0,0 +1,17 @@\n+# The Infinispan Archetypes project\n+\n+This project provides a set of quick-start archetypes which can be used to generate skeleton projects using [Infinispan](https://infinispan.org).\n+\n+# Archetype Usage\n+To utilise the archetypes utilise the following command:\n+\n+```\n+mvn archetype:generate \\\n+    -DarchetypeGroupId=org.infinispan.archetypes \\\n+    -DarchetypeArtifactId=<archetype-name> \\\n+    -DarchetypeVersion=<infinispan-version> \\\n+    -DarchetypeRepository=https://repository.jboss.org/nexus/content/groups/public\n+```\n+\n+Where `<archetype-name>` can be one of the following:\n+  - `embedded` Creates skeleton infinispan app", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNjEwOQ==", "bodyText": "It is missing a CacheManager.stop() invocation.\nIf you use a clustered config and run mvn exec:java, the JVM never terminates.", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441706109", "createdAt": "2020-06-17T17:22:30Z", "author": {"login": "pruivo"}, "path": "archetypes/embedded/src/main/resources/archetype-resources/src/main/java/Application.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package ${package};\n+\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.infinispan.Cache;\n+import org.infinispan.notifications.Listener;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryCreated;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryModified;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryRemoved;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryVisited;\n+import org.infinispan.notifications.cachelistener.event.CacheEntryEvent;\n+import org.infinispan.notifications.cachelistener.event.CacheEntryVisitedEvent;\n+\n+/**\n+ * Sample application code. For more examples please see our documentation (https://infinispan.org/docs/stable/index.html)\n+ * and tutorials (https://infinispan.org/tutorials).\n+ */\n+public class Application {\n+\n+   public void basicUse() {\n+      System.out.println(\"\\n\\n1.  Demonstrating basic usage of Infinispan.  This cache stores arbitrary Strings.\");\n+      Cache<String, String> cache = SampleCacheContainer.getCache();\n+\n+      System.out.println(\"  Storing value 'World' under key 'Hello'\");\n+      String oldValue = cache.put(\"Hello\", \"World\");\n+      System.out.printf(\"  Done.  Saw old value as '%s'\\n\", oldValue);\n+\n+      System.out.println(\"  Replacing 'World' with 'Mars'.\");\n+      boolean worked = cache.replace(\"Hello\", \"World\", \"Mars\");\n+      System.out.printf(\"  Successful? %s\\n\", worked);\n+\n+      assert oldValue == null;\n+      assert worked == true;\n+   }\n+\n+   public void lifespans() throws InterruptedException {\n+      System.out.println(\"\\n\\n2.  Demonstrating usage of Infinispan with expirable entries.\");\n+      Cache<String, Float> stocksCache = SampleCacheContainer.getCache(\"stockTickers\");\n+      System.out.println(\"  Storing key 'RHT' for 10 seconds.\");\n+      stocksCache.put(\"RHT\", 45.0f, 10, TimeUnit.SECONDS);\n+      System.out.printf(\"  Checking for existence of key.  Is it there? %s\\n\", stocksCache.containsKey(\"RHT\"));\n+      System.out.println(\"  Sleeping for 10 seconds...\");\n+      Thread.sleep(10000);\n+      System.out.printf(\"  Checking for existence of key.  Is it there? %s\\n\", stocksCache.containsKey(\"RHT\"));\n+      assert stocksCache.get(\"RHT\") == null;\n+   }\n+\n+   public void asyncOperations() {\n+      System.out.println(\"\\n\\n3.  Demonstrating asynchronous operations - where writes can be done in a non-blocking fashion.\");\n+      Cache<String, Integer> wineCache = SampleCacheContainer.getCache(\"wineCache\");\n+\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f1 = wineCache.putAsync(\"Pinot Noir\", 300);\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f2 = wineCache.putAsync(\"Merlot\", 120);\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f3 = wineCache.putAsync(\"Chardonnay\", 180);\n+\n+      // now poll the futures to make sure any remote calls have completed!\n+      for (CompletableFuture<Integer> f : Arrays.asList(f1, f2, f3)) {\n+         try {\n+            System.out.println(\"  Checking future... \");\n+            f.get();\n+         } catch (Exception e) {\n+            throw new RuntimeException(\"Operation failed!\", e);\n+         }\n+      }\n+      System.out.println(\"  Everything stored!\");\n+\n+      // TIP: For more examples on using the asynchronous API, visit https://infinispan.org/docs/stable/titles/developing/developing.html#cache_asynchronous_api\n+   }\n+\n+   public void registeringListeners() {\n+      System.out.println(\"\\n\\n4.  Demonstrating use of listeners.\");\n+      Cache<Integer, String> anotherCache = SampleCacheContainer.getCache(\"another\");\n+      System.out.println(\"  Attaching listener\");\n+      MyListener l = new MyListener();\n+      anotherCache.addListener(l);\n+\n+      System.out.println(\"  Put #1\");\n+      anotherCache.put(1, \"One\");\n+      System.out.println(\"  Put #2\");\n+      anotherCache.put(2, \"Two\");\n+      System.out.println(\"  Put #3\");\n+      anotherCache.put(3, \"Three\");\n+\n+      // TIP: For more examples on using listeners visit https://infinispan.org/docs/stable/titles/developing/developing.html#listeners_and_notifications\n+   }\n+\n+   public static void main(String[] args) throws Exception {\n+      System.out.println(\"\\n\\n\\n   ********************************  \\n\\n\\n\");\n+      System.out.println(\"Hello.  This is a sample application making use of Infinispan.\");\n+      Application a = new Application();\n+      a.basicUse();\n+      a.lifespans();\n+      a.asyncOperations();\n+      a.registeringListeners();\n+      System.out.println(\"Sample complete.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNzUyMw==", "bodyText": "I would move the instantiation before the println and create/invoke a star() method. Just to remove the log4j entries out of the way\n1.  Demonstrating basic usage of Infinispan.  This cache stores arbitrary Strings.\nJun 17, 2020 6:19:48 PM org.infinispan.configuration.parsing.Parser parseStoreAsBinary\nWARN: ISPN000428: The 'store-as-binary' element has been deprecated. Please use the 'memory' element instead\nJun 17, 2020 6:19:48 PM org.infinispan.configuration.parsing.Parser parseMemory\nWARN: ISPN000586: The memory configuration element 'object' has been deprecated. Please update your configuration\nJun 17, 2020 6:19:49 PM org.infinispan.factories.GlobalComponentRegistry preStart\nINFO: ISPN000128: Infinispan version: Infinispan 'Corona Extra' 11.0.1-SNAPSHOT\nJun 17, 2020 6:19:49 PM org.infinispan.remoting.transport.jgroups.JGroupsTransport start\nINFO: ISPN000078: Starting JGroups channel mycluster with stack tcp\nJun 17, 2020 6:19:51 PM org.jgroups.protocols.pbcast.ClientGmsImpl joinInternal\nINFO: pedro-laptop-3-14776: no members discovered after 2002 ms: creating cluster as coordinator\nJun 17, 2020 6:19:51 PM org.infinispan.remoting.transport.jgroups.JGroupsTransport receiveClusterView\nINFO: ISPN000094: Received new cluster view for channel mycluster: [pedro-laptop-3-14776|0] (1) [pedro-laptop-3-14776]\nJun 17, 2020 6:19:51 PM org.infinispan.remoting.transport.jgroups.JGroupsTransport startJGroupsChannelIfNeeded\nINFO: ISPN000079: Channel mycluster local address is pedro-laptop-3-14776, physical addresses are [172.17.0.1:7800]\n  Storing value 'World' under key 'Hello'\n  Done.  Saw old value as 'null'\n  Replacing 'World' with 'Mars'.\n  Successful? true", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441707523", "createdAt": "2020-06-17T17:24:53Z", "author": {"login": "pruivo"}, "path": "archetypes/embedded/src/main/resources/archetype-resources/src/main/java/Application.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package ${package};\n+\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.infinispan.Cache;\n+import org.infinispan.notifications.Listener;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryCreated;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryModified;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryRemoved;\n+import org.infinispan.notifications.cachelistener.annotation.CacheEntryVisited;\n+import org.infinispan.notifications.cachelistener.event.CacheEntryEvent;\n+import org.infinispan.notifications.cachelistener.event.CacheEntryVisitedEvent;\n+\n+/**\n+ * Sample application code. For more examples please see our documentation (https://infinispan.org/docs/stable/index.html)\n+ * and tutorials (https://infinispan.org/tutorials).\n+ */\n+public class Application {\n+\n+   public void basicUse() {\n+      System.out.println(\"\\n\\n1.  Demonstrating basic usage of Infinispan.  This cache stores arbitrary Strings.\");\n+      Cache<String, String> cache = SampleCacheContainer.getCache();\n+\n+      System.out.println(\"  Storing value 'World' under key 'Hello'\");\n+      String oldValue = cache.put(\"Hello\", \"World\");\n+      System.out.printf(\"  Done.  Saw old value as '%s'\\n\", oldValue);\n+\n+      System.out.println(\"  Replacing 'World' with 'Mars'.\");\n+      boolean worked = cache.replace(\"Hello\", \"World\", \"Mars\");\n+      System.out.printf(\"  Successful? %s\\n\", worked);\n+\n+      assert oldValue == null;\n+      assert worked == true;\n+   }\n+\n+   public void lifespans() throws InterruptedException {\n+      System.out.println(\"\\n\\n2.  Demonstrating usage of Infinispan with expirable entries.\");\n+      Cache<String, Float> stocksCache = SampleCacheContainer.getCache(\"stockTickers\");\n+      System.out.println(\"  Storing key 'RHT' for 10 seconds.\");\n+      stocksCache.put(\"RHT\", 45.0f, 10, TimeUnit.SECONDS);\n+      System.out.printf(\"  Checking for existence of key.  Is it there? %s\\n\", stocksCache.containsKey(\"RHT\"));\n+      System.out.println(\"  Sleeping for 10 seconds...\");\n+      Thread.sleep(10000);\n+      System.out.printf(\"  Checking for existence of key.  Is it there? %s\\n\", stocksCache.containsKey(\"RHT\"));\n+      assert stocksCache.get(\"RHT\") == null;\n+   }\n+\n+   public void asyncOperations() {\n+      System.out.println(\"\\n\\n3.  Demonstrating asynchronous operations - where writes can be done in a non-blocking fashion.\");\n+      Cache<String, Integer> wineCache = SampleCacheContainer.getCache(\"wineCache\");\n+\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f1 = wineCache.putAsync(\"Pinot Noir\", 300);\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f2 = wineCache.putAsync(\"Merlot\", 120);\n+      System.out.println(\"  Put #1\");\n+      CompletableFuture<Integer> f3 = wineCache.putAsync(\"Chardonnay\", 180);\n+\n+      // now poll the futures to make sure any remote calls have completed!\n+      for (CompletableFuture<Integer> f : Arrays.asList(f1, f2, f3)) {\n+         try {\n+            System.out.println(\"  Checking future... \");\n+            f.get();\n+         } catch (Exception e) {\n+            throw new RuntimeException(\"Operation failed!\", e);\n+         }\n+      }\n+      System.out.println(\"  Everything stored!\");\n+\n+      // TIP: For more examples on using the asynchronous API, visit https://infinispan.org/docs/stable/titles/developing/developing.html#cache_asynchronous_api\n+   }\n+\n+   public void registeringListeners() {\n+      System.out.println(\"\\n\\n4.  Demonstrating use of listeners.\");\n+      Cache<Integer, String> anotherCache = SampleCacheContainer.getCache(\"another\");\n+      System.out.println(\"  Attaching listener\");\n+      MyListener l = new MyListener();\n+      anotherCache.addListener(l);\n+\n+      System.out.println(\"  Put #1\");\n+      anotherCache.put(1, \"One\");\n+      System.out.println(\"  Put #2\");\n+      anotherCache.put(2, \"Two\");\n+      System.out.println(\"  Put #3\");\n+      anotherCache.put(3, \"Three\");\n+\n+      // TIP: For more examples on using listeners visit https://infinispan.org/docs/stable/titles/developing/developing.html#listeners_and_notifications\n+   }\n+\n+   public static void main(String[] args) throws Exception {\n+      System.out.println(\"\\n\\n\\n   ********************************  \\n\\n\\n\");\n+      System.out.println(\"Hello.  This is a sample application making use of Infinispan.\");\n+      Application a = new Application();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjIwNDI0", "url": "https://github.com/infinispan/infinispan/pull/8484#pullrequestreview-432620424", "createdAt": "2020-06-17T17:29:01Z", "commit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoyOTowMVrOGlP2Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzo1Mjo0MlrOGlQtTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxMDE0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <description>Builds a skeleton sample project using Infinispan HotRod Client</description>\n          \n          \n            \n                <description>Builds a skeleton sample project using Infinispan Hot Rod Client</description>", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441710142", "createdAt": "2020-06-17T17:29:01Z", "author": {"login": "pruivo"}, "path": "archetypes/client/pom.xml", "diffHunk": "@@ -0,0 +1,16 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.infinispan.archetypes</groupId>\n+        <artifactId>infinispan-archetypes</artifactId>\n+        <version>11.0.1-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>client</artifactId>\n+    <packaging>jar</packaging>\n+    <name>Infinispan Client Archetype</name>\n+    <description>Builds a skeleton sample project using Infinispan HotRod Client</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyMjAzMw==", "bodyText": "for some reason, --net=host isn't working for me :(", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441722033", "createdAt": "2020-06-17T17:49:02Z", "author": {"login": "pruivo"}, "path": "archetypes/client/src/main/resources/archetype-resources/src/main/java/Application.java", "diffHunk": "@@ -0,0 +1,155 @@\n+package ${package};\n+\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.infinispan.client.hotrod.RemoteCache;\n+import org.infinispan.client.hotrod.RemoteCacheManager;\n+import org.infinispan.client.hotrod.annotation.ClientCacheEntryCreated;\n+import org.infinispan.client.hotrod.annotation.ClientCacheEntryModified;\n+import org.infinispan.client.hotrod.annotation.ClientCacheEntryRemoved;\n+import org.infinispan.client.hotrod.annotation.ClientListener;\n+import org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\n+import org.infinispan.client.hotrod.event.ClientCacheEntryCreatedEvent;\n+import org.infinispan.client.hotrod.event.ClientCacheEntryModifiedEvent;\n+import org.infinispan.client.hotrod.event.ClientCacheEntryRemovedEvent;\n+\n+/**\n+ * Sample client application code. For more examples please see our client documentation\n+ * (https://infinispan.org/docs/stable/titles/hotrod_java/hotrod_java.html).\n+ * <p>\n+ * In order to run this application, it's necessary for a Infinispan server to be executing on your localhost with the\n+ * HotRod endpoint available on port 11222. The easiest way to achieve this, is by utilising our server docker image:\n+ * <p>\n+ * <code>docker run --net=host -p 11222:11222 -e USER=\"user\" -e PASS=\"pass\" infinispan/server</code>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyNDIzNg==", "bodyText": "there isn't any Application.java. can be removed IMO.", "url": "https://github.com/infinispan/infinispan/pull/8484#discussion_r441724236", "createdAt": "2020-06-17T17:52:42Z", "author": {"login": "pruivo"}, "path": "archetypes/store/src/main/resources/archetype-resources/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <groupId>\\${groupId}</groupId>\n+    <artifactId>\\${artifactId}</artifactId>\n+    <packaging>jar</packaging>\n+    <version>\\${version}</version>\n+    <name>Custom Cache Store</name>\n+    <description>Archetype project for building custom cache stores for use within Infinispan</description>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.infinispan</groupId>\n+                <artifactId>infinispan-bom</artifactId>\n+                <!-- Which Infinispan version do you want to use?  Released versions are always more reliable than snapshots! -->\n+                <version>${project.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.infinispan</groupId>\n+            <artifactId>infinispan-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.kohsuke.metainf-services</groupId>\n+            <artifactId>metainf-services</artifactId>\n+            <version>${versionx.org.kohsuke.metainf-services.metainf-services}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <!-- enforce java 1.8 and maven 3.2 -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <version>3.0.0-M1</version>\n+                <executions>\n+                    <execution>\n+                        <id>enforce-java</id>\n+                        <goals>\n+                            <goal>enforce</goal>\n+                        </goals>\n+                        <configuration>\n+                            <rules>\n+                                <requireJavaVersion>\n+                                    <version>[${maven.compiler.source},)</version>\n+                                </requireJavaVersion>\n+                                <requireMavenVersion>\n+                                    <version>[3.2.1,)</version>\n+                                </requireMavenVersion>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <!-- by default, compile to JDK 1.8 compatibility -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <version>${version.maven-compiler-plugin}</version>\n+                <configuration>\n+                    <source>${maven.compiler.source}</source>\n+                    <target>${maven.compiler.target}</target>\n+                    <encoding>UTF-8</encoding>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- This is used to run the sample Application.java file.  Remove this in any production usage.  -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae2fe63626d8d28e8f77c4894e67325bf96f2c7", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/8ae2fe63626d8d28e8f77c4894e67325bf96f2c7", "committedDate": "2020-06-18T09:57:05Z", "message": "ISPN-11952 Revive Infinispan Archetypes\n\n- ISPN-11957 'embedded' archetype created to replace 'newproject-archetype'\n- configuration and pom xml versions parametised\n- integration test added to ensure archetypes compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ae3d3d606ccdc5dda99f360dd759302072d8af", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/09ae3d3d606ccdc5dda99f360dd759302072d8af", "committedDate": "2020-06-18T09:57:05Z", "message": "ISPN-11956 Add store archetype utilising the NonBlockingStore SPI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b190ade5b441705be9f5f94879556d3cb44fc15", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/4b190ade5b441705be9f5f94879556d3cb44fc15", "committedDate": "2020-06-17T15:57:50Z", "message": "ISPN-11953 Create Client archetype"}, "afterCommit": {"oid": "36066661007a6b3645bad4df4318dab49b2a35d7", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/36066661007a6b3645bad4df4318dab49b2a35d7", "committedDate": "2020-06-18T09:57:05Z", "message": "ISPN-11953 Create Client archetype"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74efc79d325f5673a0590f2cfada3609b3062c8e", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/74efc79d325f5673a0590f2cfada3609b3062c8e", "committedDate": "2020-06-18T09:58:56Z", "message": "ISPN-11953 Create Client archetype"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36066661007a6b3645bad4df4318dab49b2a35d7", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/36066661007a6b3645bad4df4318dab49b2a35d7", "committedDate": "2020-06-18T09:57:05Z", "message": "ISPN-11953 Create Client archetype"}, "afterCommit": {"oid": "74efc79d325f5673a0590f2cfada3609b3062c8e", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/74efc79d325f5673a0590f2cfada3609b3062c8e", "committedDate": "2020-06-18T09:58:56Z", "message": "ISPN-11953 Create Client archetype"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjg3MDkw", "url": "https://github.com/infinispan/infinispan/pull/8484#pullrequestreview-433287090", "createdAt": "2020-06-18T13:33:27Z", "commit": {"oid": "74efc79d325f5673a0590f2cfada3609b3062c8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 628, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}