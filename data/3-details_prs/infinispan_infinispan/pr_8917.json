{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODIyOTE5", "number": 8917, "title": "ISPN-12518 Possible deadlock if an entry is replaced at the same time\u2026", "bodyText": "\u2026 expiration take effect\n\nEnsure backup writes don't check expiration\n\nhttps://issues.redhat.com/browse/ISPN-12518", "createdAt": "2020-12-07T17:14:15Z", "url": "https://github.com/infinispan/infinispan/pull/8917", "merged": true, "mergeCommit": {"oid": "ffd68d723479e799e0e2cb6fb2e0b5f699ff142b"}, "closed": true, "closedAt": "2020-12-16T15:38:18Z", "author": {"login": "wburns"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk5RG3gBqjQwOTcwNzIyMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdme1G3gFqTU1Mjc1ODIzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0d8c5a939a2a7abef86099eced487fa6cc4c129", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/b0d8c5a939a2a7abef86099eced487fa6cc4c129", "committedDate": "2020-12-07T17:05:20Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}, "afterCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7", "committedDate": "2020-12-10T20:21:40Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTkwMTA4", "url": "https://github.com/infinispan/infinispan/pull/8917#pullrequestreview-550190108", "createdAt": "2020-12-11T15:18:56Z", "commit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxODo1NlrOID9Tuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozMzoxM1rOID97wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTExNQ==", "bodyText": "nit: can you merge FlagBitSets.SKIP_LOCKING to the line above and remove this line?", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541021115", "createdAt": "2020-12-11T15:18:56Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/commands/triangle/BackupWriteCommand.java", "diffHunk": "@@ -46,7 +46,8 @@\n    public final CompletionStage<?> invokeAsync(ComponentRegistry componentRegistry) {\n       WriteCommand command = createWriteCommand();\n       command.init(componentRegistry);\n-      command.setFlagsBitSet(flags);\n+      // Mark the command as a backup write\n+      command.setFlagsBitSet(flags | FlagBitSets.BACKUP_WRITE);\n       command.addFlags(FlagBitSets.SKIP_LOCKING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMjU1MQ==", "bodyText": "unused. can be removed.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541022551", "createdAt": "2020-12-11T15:20:59Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMzU3Nw==", "bodyText": "so, isn't the replicated cache affected by this?", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541023577", "createdAt": "2020-12-11T15:22:17Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzMTM2MA==", "bodyText": "for completeness :)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               }\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache0.get(key));\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache1.get(key));\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache2.get(key));\n          \n          \n            \n               }", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541031360", "createdAt": "2020-12-11T15:33:13Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {\n+         throw new SkipException(\"Test isn't supported in transactional mode\");\n+      }\n+      Object key = createKey(cache0, cache1);\n+      String value = key.toString();\n+      cache0.put(key, value,10, TimeUnit.SECONDS);\n+\n+      final ControlledRpcManager controlledRpcManager = ControlledRpcManager.replaceRpcManager(cache0);\n+      controlledRpcManager.excludeCommands(PutKeyValueCommand.class);\n+\n+      try {\n+         Future<String> result = fork(() -> cache0.put(key, value + \"-expire-backup\"));\n+\n+         ControlledRpcManager.BlockedRequest<BackupWriteCommand> blockedRequest = controlledRpcManager.expectCommand(BackupWriteCommand.class);\n+\n+         incrementAllTimeServices(11, TimeUnit.SECONDS);\n+\n+         blockedRequest.send();\n+\n+         assertEquals(value, result.get(10, TimeUnit.SECONDS));\n+      } finally {\n+         controlledRpcManager.revertRpcManager();\n+      }\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7", "committedDate": "2020-12-10T20:21:40Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}, "afterCommit": {"oid": "ae5122f0e4d7478eefa5b79ab013e4dd6b9a8b35", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/ae5122f0e4d7478eefa5b79ab013e4dd6b9a8b35", "committedDate": "2020-12-14T16:52:10Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae5122f0e4d7478eefa5b79ab013e4dd6b9a8b35", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/ae5122f0e4d7478eefa5b79ab013e4dd6b9a8b35", "committedDate": "2020-12-14T16:52:10Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}, "afterCommit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5", "committedDate": "2020-12-14T16:54:43Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjM5MTM5", "url": "https://github.com/infinispan/infinispan/pull/8917#pullrequestreview-552239139", "createdAt": "2020-12-15T09:08:17Z", "commit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTowODoxN1rOIGATxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTowODoxN1rOIGATxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NzQyOA==", "bodyText": "I think you have to remove the flag after sending (after line 280 below). if the command retries (topology changed), the command will have this flag on the primary owner.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r543167428", "createdAt": "2020-12-15T09:08:17Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/interceptors/distribution/BaseDistributionInterceptor.java", "diffHunk": "@@ -270,6 +270,8 @@ protected Object primaryReturnHandler(InvocationContext ctx, AbstractDataWriteCo\n       }\n       MapResponseCollector collector = MapResponseCollector.ignoreLeavers(isReplicated, owners.size());\n       RpcOptions rpcOptions = rpcManager.getSyncRpcOptions();\n+      // Mark the command as a backup write so it can skip some checks\n+      command.addFlags(FlagBitSets.BACKUP_WRITE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5325fd01e01aa1298900f95f50a17cd22f379fca", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/5325fd01e01aa1298900f95f50a17cd22f379fca", "committedDate": "2020-12-15T17:29:57Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5", "committedDate": "2020-12-14T16:54:43Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}, "afterCommit": {"oid": "5325fd01e01aa1298900f95f50a17cd22f379fca", "author": {"user": {"login": "wburns", "name": "William Burns"}}, "url": "https://github.com/infinispan/infinispan/commit/5325fd01e01aa1298900f95f50a17cd22f379fca", "committedDate": "2020-12-15T17:29:57Z", "message": "ISPN-12518 Possible deadlock if an entry is replaced at the same time expiration take effect\n\n* Ensure backup writes don't check expiration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzU4MjM2", "url": "https://github.com/infinispan/infinispan/pull/8917#pullrequestreview-552758236", "createdAt": "2020-12-15T18:41:31Z", "commit": {"oid": "5325fd01e01aa1298900f95f50a17cd22f379fca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 211, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}