{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTgyNzU1", "number": 7801, "title": "ISPN-11231 Transcoder lookup is inefficient", "bodyText": "https://issues.redhat.com/browse/ISPN-11231\n\nRegister transcoder adapter for global marshaller only once\nCache transcoders in a map by source and target media type\nLook up encoders and wrappers directly by id\nDon't allow injection in the static encoders", "createdAt": "2020-01-29T14:20:25Z", "url": "https://github.com/infinispan/infinispan/pull/7801", "merged": true, "mergeCommit": {"oid": "cf52a6ecfa5910ad9fd9272aa114b6eb31065917"}, "closed": true, "closedAt": "2020-02-03T08:59:48Z", "author": {"login": "danberindei"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_IG1mAFqTM1MDE2NDk0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_YllgABqjI5OTI5MTA2OTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTY0OTQ5", "url": "https://github.com/infinispan/infinispan/pull/7801#pullrequestreview-350164949", "createdAt": "2020-01-29T14:51:37Z", "commit": {"oid": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo1MTozN1rOFjLKjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo1Mjo0OFrOFjLN_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNzQwNw==", "bodyText": "Typo in if", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372427407", "createdAt": "2020-01-29T14:51:37Z", "author": {"login": "ryanemerson"}, "path": "commons/src/main/java/org/infinispan/commons/dataconversion/Transcoder.java", "diffHunk": "@@ -23,12 +28,15 @@\n    Set<MediaType> getSupportedMediaTypes();\n \n    /**\n-    * @return true if the transcoder supports the conversion between supplied {@link MediaType}.\n+    * @return {@code true} if the transcoder supports the conversion between the supplied {@link MediaType}s.\n     */\n    default boolean supportsConversion(MediaType mediaType, MediaType other) {\n       return !mediaType.match(other) && supports(mediaType) && supports(other);\n    }\n \n+   /**\n+    * @return {@code true} iff the transcoder supports the conversion to and from the given {@link MediaType}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyODI4Nw==", "bodyText": "Does this add any value? Same applies for EncoderIds.java", "url": "https://github.com/infinispan/infinispan/pull/7801#discussion_r372428287", "createdAt": "2020-01-29T14:52:48Z", "author": {"login": "ryanemerson"}, "path": "commons/src/main/java/org/infinispan/commons/dataconversion/WrapperIds.java", "diffHunk": "@@ -4,6 +4,10 @@\n  * @since 9.2\n  */\n public interface WrapperIds {\n+   /**\n+    * @since 11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNzE4MjQ5", "url": "https://github.com/infinispan/infinispan/pull/7801#pullrequestreview-350718249", "createdAt": "2020-01-30T10:26:17Z", "commit": {"oid": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c963695545f5f622951b7e1be5fc431cd5c4384", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/5c963695545f5f622951b7e1be5fc431cd5c4384", "committedDate": "2020-01-30T11:10:47Z", "message": "ISPN-11231 Transcoder lookup is inefficient\n\n* Register transcoder adapter for global marshaller only once\n* Cache transcoders in a map by source and target media type\n* Look up encoders and wrappers directly by id\n* Don't allow injection in the static encoders"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/75ec0fa1fa3b924bdc83b821ef19cc28683fa5d3", "committedDate": "2020-01-29T13:42:09Z", "message": "ISPN-11231 Transcoder lookup is inefficient\n\n* Register transcoder adapter for global marshaller only once\n* Cache transcoders in a map by source and target media type\n* Look up encoders and wrappers directly by id\n* Don't allow injection in the static encoders"}, "afterCommit": {"oid": "5c963695545f5f622951b7e1be5fc431cd5c4384", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/5c963695545f5f622951b7e1be5fc431cd5c4384", "committedDate": "2020-01-30T11:10:47Z", "message": "ISPN-11231 Transcoder lookup is inefficient\n\n* Register transcoder adapter for global marshaller only once\n* Cache transcoders in a map by source and target media type\n* Look up encoders and wrappers directly by id\n* Don't allow injection in the static encoders"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1256, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}