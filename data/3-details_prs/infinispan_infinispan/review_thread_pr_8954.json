{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTA0OTI1", "number": 8954, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNToxNzoyN1rOFK7okw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNToxNzoyN1rOFK7okw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDA3MTIzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/stream/DistributedStreamIteratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNToxNzoyN1rOIN1eOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjo1MTo1MVrOIN5G7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM3ODQ5MA==", "bodyText": "Is this change required?", "url": "https://github.com/infinispan/infinispan/pull/8954#discussion_r551378490", "createdAt": "2021-01-04T15:17:27Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/stream/DistributedStreamIteratorTest.java", "diffHunk": "@@ -296,7 +296,7 @@ public void testNodeLeavesWhileIteratingOverContainerCausingRehashToLoseValues()\n       final BlockingQueue<Map.Entry<Object, String>> returnQueue = new LinkedBlockingQueue<>();\n       Future<Void> future = fork(() -> {\n          // Put batch size to a lower number just to make sure it doesn't retrieve them all in 1 go\n-         Iterator<Map.Entry<Object, String>> iter = cache2.entrySet().stream().distributedBatchSize(2).iterator();\n+         Iterator<Map.Entry<Object, String>> iter = cache2.entrySet().stream().distributedBatchSize(cache2.size() - 2).iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f3994984d2b15132c07cd54a9cb70e80edcc44"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQzODA2Mg==", "bodyText": "No, it was an attempt to reproduce before I had the new test.", "url": "https://github.com/infinispan/infinispan/pull/8954#discussion_r551438062", "createdAt": "2021-01-04T16:51:51Z", "author": {"login": "danberindei"}, "path": "core/src/test/java/org/infinispan/stream/DistributedStreamIteratorTest.java", "diffHunk": "@@ -296,7 +296,7 @@ public void testNodeLeavesWhileIteratingOverContainerCausingRehashToLoseValues()\n       final BlockingQueue<Map.Entry<Object, String>> returnQueue = new LinkedBlockingQueue<>();\n       Future<Void> future = fork(() -> {\n          // Put batch size to a lower number just to make sure it doesn't retrieve them all in 1 go\n-         Iterator<Map.Entry<Object, String>> iter = cache2.entrySet().stream().distributedBatchSize(2).iterator();\n+         Iterator<Map.Entry<Object, String>> iter = cache2.entrySet().stream().distributedBatchSize(cache2.size() - 2).iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM3ODQ5MA=="}, "originalCommit": {"oid": "60f3994984d2b15132c07cd54a9cb70e80edcc44"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3746, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}