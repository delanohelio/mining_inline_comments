{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzExODA0", "number": 8049, "title": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore", "bodyText": "https://issues.redhat.com/browse/ISPN-11464", "createdAt": "2020-03-12T15:31:14Z", "url": "https://github.com/infinispan/infinispan/pull/8049", "merged": true, "mergeCommit": {"oid": "d238aee3d2c522b58525093a0d1df13212a8cf1e"}, "closed": true, "closedAt": "2020-03-24T13:19:50Z", "author": {"login": "gustavolira"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM9x0iAFqTM3MzY3ODg5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNPB-jABqjMxMjY0NTY1NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjc4ODk4", "url": "https://github.com/infinispan/infinispan/pull/8049#pullrequestreview-373678898", "createdAt": "2020-03-12T15:50:01Z", "commit": {"oid": "e89f6cf23965162e71b4df211fe133555092c033"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo1MDowMVrOF1kbAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo1MTo0MlrOF1kfVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNTU4NA==", "bodyText": "This was previously required by the jdg-functional-tests I think. Are all of those tests now in the Infinispan repo? and is this definitely not needed?", "url": "https://github.com/infinispan/infinispan/pull/8049#discussion_r391715584", "createdAt": "2020-03-12T15:50:01Z", "author": {"login": "ryanemerson"}, "path": "persistence/jdbc/src/test/java/org/infinispan/persistence/jdbc/stringbased/StringStoreWithManagedConnectionFunctionalTest.java", "diffHunk": "@@ -13,30 +10,10 @@\n @Test(groups = \"functional\", testName = \"persistence.jdbc.stringbased.StringStoreWithManagedConnectionFunctionalTest\")\n public class StringStoreWithManagedConnectionFunctionalTest extends AbstractStringBasedCacheStore {\n \n-    private ManagedConnectionFactoryConfiguration customFactoryConfiguration;\n-\n-    public StringStoreWithManagedConnectionFunctionalTest() {}\n-\n-    @SuppressWarnings(\"unused\")\n-    public StringStoreWithManagedConnectionFunctionalTest(ManagedConnectionFactoryConfiguration customFactoryConfiguration) {\n-        this.customFactoryConfiguration = customFactoryConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89f6cf23965162e71b4df211fe133555092c033"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNjQ4MQ==", "bodyText": "Based on our previous discussions, it seems like this change is fixing your issue because we're no longer using the ManagedConnectionFactory", "url": "https://github.com/infinispan/infinispan/pull/8049#discussion_r391716481", "createdAt": "2020-03-12T15:51:23Z", "author": {"login": "ryanemerson"}, "path": "persistence/jdbc/src/test/java/org/infinispan/persistence/jdbc/stringbased/StringStoreWithManagedConnectionFunctionalTest.java", "diffHunk": "@@ -13,30 +10,10 @@\n @Test(groups = \"functional\", testName = \"persistence.jdbc.stringbased.StringStoreWithManagedConnectionFunctionalTest\")\n public class StringStoreWithManagedConnectionFunctionalTest extends AbstractStringBasedCacheStore {\n \n-    private ManagedConnectionFactoryConfiguration customFactoryConfiguration;\n-\n-    public StringStoreWithManagedConnectionFunctionalTest() {}\n-\n-    @SuppressWarnings(\"unused\")\n-    public StringStoreWithManagedConnectionFunctionalTest(ManagedConnectionFactoryConfiguration customFactoryConfiguration) {\n-        this.customFactoryConfiguration = customFactoryConfiguration;\n-    }\n-\n     @Override\n     protected ConnectionFactory getConnectionFactory(JdbcStringBasedStoreConfigurationBuilder storeBuilder) {\n-        if(customFactoryConfiguration != null) {\n-            ConnectionFactoryConfiguration connectionFactoryConfiguration = storeBuilder\n-                    .dataSource()\n-                    .read(customFactoryConfiguration)\n-                    .create();\n-            final ConnectionFactory connectionFactory = ConnectionFactory.getConnectionFactory(ManagedConnectionFactory.class);\n-            connectionFactory.start(connectionFactoryConfiguration, connectionFactory.getClass().getClassLoader());\n-            return connectionFactory;\n-        } else {\n-            SimpleConnectionFactory simpleFactory = new SimpleConnectionFactory();\n-            simpleFactory.start(configureSimpleConnectionFactory(storeBuilder).create(), Thread.currentThread().getContextClassLoader());\n-            return simpleFactory;\n-        }\n-\n+        SimpleConnectionFactory simpleFactory = new SimpleConnectionFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89f6cf23965162e71b4df211fe133555092c033"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxNjY5NQ==", "bodyText": "As this method is private, I don't understand what value it adds.", "url": "https://github.com/infinispan/infinispan/pull/8049#discussion_r391716695", "createdAt": "2020-03-12T15:51:42Z", "author": {"login": "ryanemerson"}, "path": "persistence/jdbc/src/test/java/org/infinispan/persistence/jdbc/stringbased/AbstractStringBasedCacheStore.java", "diffHunk": "@@ -136,6 +136,10 @@ public EmbeddedCacheManager configureCacheManager(boolean passivation, boolean p\n         return defaultCacheManager;\n     }\n \n+    private void setTableManipulation(JdbcStringBasedStoreConfigurationBuilder storeBuilder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89f6cf23965162e71b4df211fe133555092c033"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e89f6cf23965162e71b4df211fe133555092c033", "author": {"user": {"login": "gustavolira", "name": "Gustavo Lira e Silva"}}, "url": "https://github.com/infinispan/infinispan/commit/e89f6cf23965162e71b4df211fe133555092c033", "committedDate": "2020-03-12T15:29:49Z", "message": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore"}, "afterCommit": {"oid": "9b4df174408e1add905234851ac13a80388583bc", "author": {"user": {"login": "gustavolira", "name": "Gustavo Lira e Silva"}}, "url": "https://github.com/infinispan/infinispan/commit/9b4df174408e1add905234851ac13a80388583bc", "committedDate": "2020-03-12T19:09:39Z", "message": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecd58977869a976c6d4696cbf214a19aa8bcfb18", "author": {"user": {"login": "gustavolira", "name": "Gustavo Lira e Silva"}}, "url": "https://github.com/infinispan/infinispan/commit/ecd58977869a976c6d4696cbf214a19aa8bcfb18", "committedDate": "2020-03-13T11:57:27Z", "message": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b4df174408e1add905234851ac13a80388583bc", "author": {"user": {"login": "gustavolira", "name": "Gustavo Lira e Silva"}}, "url": "https://github.com/infinispan/infinispan/commit/9b4df174408e1add905234851ac13a80388583bc", "committedDate": "2020-03-12T19:09:39Z", "message": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore"}, "afterCommit": {"oid": "ecd58977869a976c6d4696cbf214a19aa8bcfb18", "author": {"user": {"login": "gustavolira", "name": "Gustavo Lira e Silva"}}, "url": "https://github.com/infinispan/infinispan/commit/ecd58977869a976c6d4696cbf214a19aa8bcfb18", "committedDate": "2020-03-13T11:57:27Z", "message": "ISPN-11464 Make possible to override table manipulation configuration from AbstractStringBasedCacheStore"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1108, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}