{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMjczMDA5", "number": 8601, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoxMDo0NVrOEUHOKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoxMDo0NVrOEUHOKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTI1MjkxOnYy", "diffSide": "RIGHT", "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoxMDo0NVrOG6OD6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoxOToxMVrOG6OUMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwMDk3MQ==", "bodyText": "should not this be present only in case of properties based, on HTTP mode ?", "url": "https://github.com/infinispan/infinispan/pull/8601#discussion_r463700971", "createdAt": "2020-07-31T16:10:45Z", "author": {"login": "karesti"}, "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -406,6 +406,7 @@ public ConfigurationInfo getConfiguration() {\n       } else {\n          loginConfiguration.put(\"mode\", \"HTTP\");\n       }\n+      loginConfiguration.put(\"ready\", Boolean.toString(rest.authentication().authenticator().isReadyForHttpChallenge()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f90976bb4d9c915aec96c8316138c105336702a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwNTEzNg==", "bodyText": "that's already handled. The default is to return true (LDAP, Kerberos, OAuth, etc). If you have a properties-based realm then it will be dependent on entries being present", "url": "https://github.com/infinispan/infinispan/pull/8601#discussion_r463705136", "createdAt": "2020-07-31T16:19:11Z", "author": {"login": "tristantarrant"}, "path": "server/runtime/src/main/java/org/infinispan/server/Server.java", "diffHunk": "@@ -406,6 +406,7 @@ public ConfigurationInfo getConfiguration() {\n       } else {\n          loginConfiguration.put(\"mode\", \"HTTP\");\n       }\n+      loginConfiguration.put(\"ready\", Boolean.toString(rest.authentication().authenticator().isReadyForHttpChallenge()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwMDk3MQ=="}, "originalCommit": {"oid": "8f90976bb4d9c915aec96c8316138c105336702a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4032, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}