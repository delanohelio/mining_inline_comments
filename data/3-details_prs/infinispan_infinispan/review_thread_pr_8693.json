{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDY2NTAy", "number": 8693, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowMzowN1rOEo9cRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowNDowOVrOEo9eMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzg1MTU4OnYy", "diffSide": "RIGHT", "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowMzowN1rOHaWXtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzo1Njo1NVrOHa-vtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTU0MQ==", "bodyText": "use HealthStatus enum", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r497391541", "createdAt": "2020-09-30T10:03:07Z", "author": {"login": "karesti"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -230,9 +231,12 @@ public Invocations getInvocations() {\n                if (ignoredCaches.contains(cacheName)) {\n                   cacheInfo.status = \"IGNORED\";\n                } else {\n-                  // This action will fail for ignored caches\n-                  Cache cache = restCacheManager.getCache(cacheName, request);\n-                  cacheInfo.status = cache.getStatus().toString();\n+                  if(cacheHealth != HealthStatus.FAILED) {\n+                     Cache cache = restCacheManager.getCache(cacheName, request);\n+                     cacheInfo.status = cache.getStatus().toString();\n+                  } else {\n+                     cacheInfo.status = \"FAILED\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA0NDUzNg==", "bodyText": "cacheInfo.status is not the health of the cache, but as far as I could see, it is the component status or \"ignored\", so using the HealthEnum here would be confusing", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r498044536", "createdAt": "2020-10-01T07:42:07Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -230,9 +231,12 @@ public Invocations getInvocations() {\n                if (ignoredCaches.contains(cacheName)) {\n                   cacheInfo.status = \"IGNORED\";\n                } else {\n-                  // This action will fail for ignored caches\n-                  Cache cache = restCacheManager.getCache(cacheName, request);\n-                  cacheInfo.status = cache.getStatus().toString();\n+                  if(cacheHealth != HealthStatus.FAILED) {\n+                     Cache cache = restCacheManager.getCache(cacheName, request);\n+                     cacheInfo.status = cache.getStatus().toString();\n+                  } else {\n+                     cacheInfo.status = \"FAILED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTU0MQ=="}, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA0NjgzNQ==", "bodyText": "And I can't use cache.getStatus() directly because when a cache fails to start, it is basically inaccessible  :/", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r498046835", "createdAt": "2020-10-01T07:45:58Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -230,9 +231,12 @@ public Invocations getInvocations() {\n                if (ignoredCaches.contains(cacheName)) {\n                   cacheInfo.status = \"IGNORED\";\n                } else {\n-                  // This action will fail for ignored caches\n-                  Cache cache = restCacheManager.getCache(cacheName, request);\n-                  cacheInfo.status = cache.getStatus().toString();\n+                  if(cacheHealth != HealthStatus.FAILED) {\n+                     Cache cache = restCacheManager.getCache(cacheName, request);\n+                     cacheInfo.status = cache.getStatus().toString();\n+                  } else {\n+                     cacheInfo.status = \"FAILED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTU0MQ=="}, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA1MzA0Ng==", "bodyText": "Used ComponentStatus.FAILED", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r498053046", "createdAt": "2020-10-01T07:56:55Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheManagerResource.java", "diffHunk": "@@ -230,9 +231,12 @@ public Invocations getInvocations() {\n                if (ignoredCaches.contains(cacheName)) {\n                   cacheInfo.status = \"IGNORED\";\n                } else {\n-                  // This action will fail for ignored caches\n-                  Cache cache = restCacheManager.getCache(cacheName, request);\n-                  cacheInfo.status = cache.getStatus().toString();\n+                  if(cacheHealth != HealthStatus.FAILED) {\n+                     Cache cache = restCacheManager.getCache(cacheName, request);\n+                     cacheInfo.status = cache.getStatus().toString();\n+                  } else {\n+                     cacheInfo.status = \"FAILED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MTU0MQ=="}, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzg1NjQ4OnYy", "diffSide": "RIGHT", "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowNDowOVrOHaWaow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNzo1NzowMFrOHa-v6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MjI5MQ==", "bodyText": "would be better to use the enum on tests as well", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r497392291", "createdAt": "2020-09-30T10:04:09Z", "author": {"login": "karesti"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -86,7 +86,8 @@ public void testHealth() {\n \n       Json jsonNode = Json.read(response.getBody());\n       Json clusterHealth = jsonNode.at(\"cluster_health\");\n-      assertEquals(clusterHealth.at(\"health_status\").asString(), \"HEALTHY\");\n+      // One of the caches is in FAILED state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA1MzA5Nw==", "bodyText": "fixed", "url": "https://github.com/infinispan/infinispan/pull/8693#discussion_r498053097", "createdAt": "2020-10-01T07:57:00Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/test/java/org/infinispan/rest/resources/CacheManagerResourceTest.java", "diffHunk": "@@ -86,7 +86,8 @@ public void testHealth() {\n \n       Json jsonNode = Json.read(response.getBody());\n       Json clusterHealth = jsonNode.at(\"cluster_health\");\n-      assertEquals(clusterHealth.at(\"health_status\").asString(), \"HEALTHY\");\n+      // One of the caches is in FAILED state", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5MjI5MQ=="}, "originalCommit": {"oid": "c066700618b127d91257a2e472f51c67b35aeced"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3945, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}