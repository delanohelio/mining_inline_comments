{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTYwNzQw", "number": 8046, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0ODo0NFrODp3-7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0ODo0NFrODp3-7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjM1NDM2OnYy", "diffSide": "RIGHT", "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0ODo0NFrOF5UaxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MTowOVrOF8C7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NzY4NQ==", "bodyText": "This method was extracted just in case we need to replace it for quarkus.", "url": "https://github.com/infinispan/infinispan/pull/8046#discussion_r395647685", "createdAt": "2020-03-20T13:48:44Z", "author": {"login": "anistor"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -42,6 +42,10 @@\n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      registerBaseMetrics();\n+   }\n+\n+   private void registerBaseMetrics() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9ef6ffce53983505bfa689ec306e40ca722096e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI0MzkzNw==", "bodyText": "shouldn't be protected?", "url": "https://github.com/infinispan/infinispan/pull/8046#discussion_r397243937", "createdAt": "2020-03-24T15:29:57Z", "author": {"login": "pruivo"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -42,6 +42,10 @@\n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      registerBaseMetrics();\n+   }\n+\n+   private void registerBaseMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NzY4NQ=="}, "originalCommit": {"oid": "e9ef6ffce53983505bfa689ec306e40ca722096e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNjcxMQ==", "bodyText": "For quarkus? I don't know. Maybe @wburns ?", "url": "https://github.com/infinispan/infinispan/pull/8046#discussion_r397716711", "createdAt": "2020-03-25T09:34:50Z", "author": {"login": "anistor"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -42,6 +42,10 @@\n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      registerBaseMetrics();\n+   }\n+\n+   private void registerBaseMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NzY4NQ=="}, "originalCommit": {"oid": "e9ef6ffce53983505bfa689ec306e40ca722096e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNzYzNw==", "bodyText": "@anistor I'm pretty sure Quarkus can replace a private method, so it doesn't need to be protected. But it would be nice to have a comment in the code, to prevent others from trying to inline it and finding out that we need it for Quarkus after the PR is integrated.", "url": "https://github.com/infinispan/infinispan/pull/8046#discussion_r397737637", "createdAt": "2020-03-25T10:08:38Z", "author": {"login": "danberindei"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -42,6 +42,10 @@\n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      registerBaseMetrics();\n+   }\n+\n+   private void registerBaseMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NzY4NQ=="}, "originalCommit": {"oid": "e9ef6ffce53983505bfa689ec306e40ca722096e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNjc4Ng==", "bodyText": "done!", "url": "https://github.com/infinispan/infinispan/pull/8046#discussion_r398506786", "createdAt": "2020-03-26T11:41:09Z", "author": {"login": "anistor"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/MetricsResource.java", "diffHunk": "@@ -42,6 +42,10 @@\n    private final MetricsRequestHandler requestHandler = new MetricsRequestHandler();\n \n    public MetricsResource() {\n+      registerBaseMetrics();\n+   }\n+\n+   private void registerBaseMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0NzY4NQ=="}, "originalCommit": {"oid": "e9ef6ffce53983505bfa689ec306e40ca722096e"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4441, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}