{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTg1MTYx", "number": 7886, "title": "ISPN-11333 Remove deprecated RpcManager methods", "bodyText": "https://issues.redhat.com/browse/ISPN-11333", "createdAt": "2020-02-13T17:02:37Z", "url": "https://github.com/infinispan/infinispan/pull/7886", "merged": true, "mergeCommit": {"oid": "8523da16a3e4579648254d0fb20479e561dec067"}, "closed": true, "closedAt": "2020-02-14T15:38:33Z", "author": {"login": "ryanemerson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD-CVRgBqjMwMzU3MzkwMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEPqhYAFqTM1ODk0MzQ1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d382100ce5d83248b260c2b0ca34d4d8179eaaa6", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/d382100ce5d83248b260c2b0ca34d4d8179eaaa6", "committedDate": "2020-02-13T17:02:19Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}, "afterCommit": {"oid": "fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "committedDate": "2020-02-13T17:04:24Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/fa1c46c64e7e2aba16099e26e547eb43fe569e3b", "committedDate": "2020-02-13T17:04:24Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}, "afterCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "committedDate": "2020-02-13T18:14:42Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDQ4MTk2", "url": "https://github.com/infinispan/infinispan/pull/7886#pullrequestreview-358448196", "createdAt": "2020-02-13T18:24:03Z", "commit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyNDowNFrOFpepSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1MToxNVrOFpfhmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzODAyNw==", "bodyText": "offtopic, this looks like a very old code.\nThe method's code could be replaced with a single line: cacheManager.administration().createCache(cacheName, baseCacheName);", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379038027", "createdAt": "2020-02-13T18:24:04Z", "author": {"login": "pruivo"}, "path": "cli/cli-interpreter/src/main/java/org/infinispan/cli/interpreter/session/SessionImpl.java", "diffHunk": "@@ -117,7 +118,7 @@ public void createCache(String cacheName, String baseCacheName) {\n \n          CreateCacheCommand ccc = factory.buildCreateCacheCommand(cacheName, baseCacheName);\n          try {\n-            rpc.invokeRemotely(null, ccc, rpc.getSyncRpcOptions());\n+            rpc.blocking(rpc.invokeCommandOnAll(ccc, VoidResponseCollector.ignoreLeavers(), rpc.getSyncRpcOptions()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzOTc3Mw==", "bodyText": "use rpcManager.blocking() instead?", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379039773", "createdAt": "2020-02-13T18:27:22Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/persistence/cluster/ClusterLoader.java", "diffHunk": "@@ -71,7 +70,16 @@ public MarshallableEntry loadEntry(Object key) throws PersistenceException {\n       ClusteredGetCommand clusteredGetCommand = commandsFactory.buildClusteredGetCommand(key,\n             keyPartitioner.getSegment(key), EnumUtil.bitSetOf(Flag.SKIP_OWNERSHIP_CHECK));\n \n-      Collection<Response> responses = doRemoteCall(clusteredGetCommand);\n+      Collection<Response> responses;\n+      try {\n+         clusteredGetCommand.setTopologyId(rpcManager.getTopologyId());\n+         CompletionStage<Map<Address, Response>> getAll = rpcManager.invokeCommandOnAll(clusteredGetCommand,\n+               MapResponseCollector.ignoreLeavers(), rpcManager.getSyncRpcOptions());\n+         responses = CompletionStages.join(getAll).values();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MzU1Mg==", "bodyText": "SYNC is correct otherwise you would get an empty Map everytime.", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379043552", "createdAt": "2020-02-13T18:34:21Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/remoting/rpc/RpcManagerImpl.java", "diffHunk": "@@ -303,10 +300,11 @@ private void checkTopologyId(ReplicableCommand command) {\n       long startTimeNanos = statisticsEnabled ? timeService.time() : 0;\n       CompletableFuture<Map<Address, Response>> invocation;\n       try {\n+         // TODO what's the correct ResponseMode?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0NDQwMA==", "bodyText": "nitpick: replace if with &&\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return unit == options.unit;\n          \n          \n            \n                  return timeout == options.timeout && \n          \n          \n            \n                         deliverOrder == options.deliverOrder && \n          \n          \n            \n                         unit == options.unit;", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379044400", "createdAt": "2020-02-13T18:36:00Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/remoting/rpc/RpcOptions.java", "diffHunk": "@@ -111,21 +60,14 @@ public boolean equals(Object o) {\n \n       if (timeout != options.timeout) return false;\n       if (deliverOrder != options.deliverOrder) return false;\n-      if (responseFilter != null ? !responseFilter.equals(options.responseFilter) : options.responseFilter != null)\n-         return false;\n-      if (responseMode != options.responseMode) return false;\n-      if (unit != options.unit) return false;\n-\n-      return true;\n+      return unit == options.unit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0OTQ5Nw==", "bodyText": "suggestion: create RpcManager.getSyncOrderedRpcOptions(); if this method is invoked too often.", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379049497", "createdAt": "2020-02-13T18:45:41Z", "author": {"login": "pruivo"}, "path": "hibernate/cache-commons/src/main/java/org/infinispan/hibernate/cache/commons/util/Caches.java", "diffHunk": "@@ -225,8 +229,10 @@ public static void broadcastEvictAll(AdvancedCache cache) {\n \t\tfinal RpcManager rpcManager = cache.getRpcManager();\n \t\tif ( rpcManager != null ) {\n \t\t\tfinal EvictAllCommand cmd = new EvictAllCommand(ByteString.fromString(cache.getName()));\n-\t\t\tfinal RpcOptions options = rpcManager.getDefaultRpcOptions(isSynchronousCache(cache));\n-\t\t\trpcManager.invokeRemotely(null, cmd, options);\n+\t\t\tfinal RpcOptions options = isSynchronousCache(cache) ? rpcManager.getSyncRpcOptions() :\n+\t\t\t\t\tnew RpcOptions(DeliverOrder.PER_SENDER, cache.getCacheConfiguration().clustering().remoteTimeout(), TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MTEyMw==", "bodyText": "nitpick: no idea why this line has the timeout hardcoded...\ncan it be removed and use rpcManager.getSyncRpcOptions() below?", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379051123", "createdAt": "2020-02-13T18:48:43Z", "author": {"login": "pruivo"}, "path": "query/src/main/java/org/infinispan/query/clustered/ClusteredQueryInvoker.java", "diffHunk": "@@ -46,7 +47,7 @@\n       this.asyncExecutor = asyncExecutor;\n       this.rpcManager = cache.getRpcManager();\n       this.myAddress = rpcManager.getAddress();\n-      this.rpcOptions = rpcManager.getRpcOptionsBuilder(ResponseMode.SYNCHRONOUS).timeout(10000, TimeUnit.MILLISECONDS).build();\n+      this.rpcOptions = new RpcOptions(DeliverOrder.NONE, 10000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MjQ0Mw==", "bodyText": "you are ignoring the sync parameter.\nThe recipients can be replaced with a single Address (it doesn't change since it is assigned in the constructor)", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379052443", "createdAt": "2020-02-13T18:51:15Z", "author": {"login": "pruivo"}, "path": "query/src/main/java/org/infinispan/query/indexmanager/RemoteIndexingBackend.java", "diffHunk": "@@ -132,7 +134,8 @@ private void waitForReplacementBackend() {\n    }\n \n    private void sendCommand(ReplicableCommand command, List<LuceneWork> workList, boolean sync) {\n-      rpcManager.invokeRemotely(recipients, command, rpcManager.getDefaultRpcOptions(sync));\n+      CompletionStages.join(rpcManager.invokeCommand(recipients, command, VoidResponseCollector.ignoreLeavers(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/bf6ce6408bd53583bd30ebdf9c1088fd616d346b", "committedDate": "2020-02-13T18:14:42Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}, "afterCommit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/3c0b4e962ce25e38578515bd5498ab4d106098ab", "committedDate": "2020-02-13T23:25:41Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODEwNzIy", "url": "https://github.com/infinispan/infinispan/pull/7886#pullrequestreview-358810722", "createdAt": "2020-02-14T09:31:08Z", "commit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTozMTowOFrOFpwZXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTozMzowMFrOFpwcyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyODg2MQ==", "bodyText": "How I did I miss this before!?\nyou shouldn't do that. invokeCommandOnAll() as it is always sync, i.e. it waits for a response.\nyou need to use sendToAll() for async.", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379328861", "createdAt": "2020-02-14T09:31:08Z", "author": {"login": "pruivo"}, "path": "hibernate/cache-commons/src/main/java/org/infinispan/hibernate/cache/commons/util/Caches.java", "diffHunk": "@@ -223,10 +226,18 @@ public static AdvancedCache failSilentReadCache(AdvancedCache cache) {\n \t */\n \tpublic static void broadcastEvictAll(AdvancedCache cache) {\n \t\tfinal RpcManager rpcManager = cache.getRpcManager();\n-\t\tif ( rpcManager != null ) {\n+\t\tif (rpcManager != null) {\n \t\t\tfinal EvictAllCommand cmd = new EvictAllCommand(ByteString.fromString(cache.getName()));\n-\t\t\tfinal RpcOptions options = rpcManager.getDefaultRpcOptions(isSynchronousCache(cache));\n-\t\t\trpcManager.invokeRemotely(null, cmd, options);\n+\n+\t\t\tfinal RpcOptions options;\n+\t\t\tif (isSynchronousCache(cache)) {\n+\t\t\t\toptions = rpcManager.getSyncRpcOptions();\n+\t\t\t} else {\n+\t\t\t\tlong timeout = cache.getCacheConfiguration().clustering().remoteTimeout();\n+\t\t\t\toptions = new RpcOptions(DeliverOrder.PER_SENDER, timeout, TimeUnit.MILLISECONDS);\n+\t\t\t}\n+\n+\t\t\trpcManager.blocking(rpcManager.invokeCommandOnAll(cmd, VoidResponseCollector.validOnly(), options));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyOTI1MA==", "bodyText": "DeliverOrder.PER_SENDER!\nrpcManager.getDefaultRpcOptions(sync) with sync=false uses PER_SENDER instead of NONE.", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379329250", "createdAt": "2020-02-14T09:31:55Z", "author": {"login": "pruivo"}, "path": "query/src/main/java/org/infinispan/query/indexmanager/RemoteIndexingBackend.java", "diffHunk": "@@ -132,7 +134,13 @@ private void waitForReplacementBackend() {\n    }\n \n    private void sendCommand(ReplicableCommand command, List<LuceneWork> workList, boolean sync) {\n-      rpcManager.invokeRemotely(recipients, command, rpcManager.getDefaultRpcOptions(sync));\n+      if (sync) {\n+         CompletionStage<Void> completionStage = rpcManager.invokeCommand(recipient, command, VoidResponseCollector.ignoreLeavers(),\n+               rpcManager.getSyncRpcOptions());\n+         rpcManager.blocking(completionStage);\n+      } else {\n+         rpcManager.sendTo(recipient, command, DeliverOrder.NONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyOTczOA==", "bodyText": "DeliverOrder.PER_SENDER", "url": "https://github.com/infinispan/infinispan/pull/7886#discussion_r379329738", "createdAt": "2020-02-14T09:33:00Z", "author": {"login": "pruivo"}, "path": "query/src/test/java/org/infinispan/query/backend/AsyncBackendTest.java", "diffHunk": "@@ -122,9 +122,12 @@ private void calledIndexAsynchronously(Transport transport, String indexName) th\n \n    private void assertIndexCall(Transport transport, String indexName, boolean sync) throws Exception {\n       ArgumentCaptor<IndexUpdateCommand> argument = ArgumentCaptor.forClass(IndexUpdateCommand.class);\n-      verify(transport, atLeastOnce()).invokeRemotelyAsync(anyCollection(), argument.capture(),\n-                                                           eq(sync ? ResponseMode.SYNCHRONOUS : ResponseMode.ASYNCHRONOUS),\n-                                                           anyLong(), any(), any(), anyBoolean());\n+      if (sync) {\n+         verify(transport, atLeastOnce()).invokeCommand(any(Address.class), argument.capture(), any(VoidResponseCollector.class),\n+               eq(DeliverOrder.NONE), anyLong(), any());\n+      } else {\n+         verify(transport, atLeastOnce()).sendTo(any(Address.class), argument.capture(), eq(DeliverOrder.NONE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46dce44e6749a95d18eed23c9d89af491b3e3682", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/46dce44e6749a95d18eed23c9d89af491b3e3682", "committedDate": "2020-02-14T10:49:47Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c0b4e962ce25e38578515bd5498ab4d106098ab", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/3c0b4e962ce25e38578515bd5498ab4d106098ab", "committedDate": "2020-02-13T23:25:41Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}, "afterCommit": {"oid": "46dce44e6749a95d18eed23c9d89af491b3e3682", "author": {"user": {"login": "ryanemerson", "name": "Ryan Emerson"}}, "url": "https://github.com/infinispan/infinispan/commit/46dce44e6749a95d18eed23c9d89af491b3e3682", "committedDate": "2020-02-14T10:49:47Z", "message": "ISPN-11333 Remove deprecated RpcManager methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4OTQzNDU1", "url": "https://github.com/infinispan/infinispan/pull/7886#pullrequestreview-358943455", "createdAt": "2020-02-14T13:36:48Z", "commit": {"oid": "46dce44e6749a95d18eed23c9d89af491b3e3682"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1161, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}