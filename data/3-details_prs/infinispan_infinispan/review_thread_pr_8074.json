{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzA3Mjc3", "number": 8074, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozODo1OVrODrkA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNjoyNVrODrk6aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDA1NDMxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozODo1OVrOF7-eGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo1NToyNFrOF7_HnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMzgxOA==", "bodyText": "Incorrect: the above code creates a clustered cache manager.", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398433818", "createdAt": "2020-03-26T09:38:59Z", "author": {"login": "tristantarrant"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, local Cache Manager. Cache Managers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NDQ0NQ==", "bodyText": "argh. sorry that should be totally obvious. I guess I got hold of a bad batch of TP moonshine. fixed.", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398444445", "createdAt": "2020-03-26T09:55:24Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, local Cache Manager. Cache Managers", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMzgxOA=="}, "originalCommit": {"oid": "5a180845bfa2c0d0489a10f38bbe0f0564b7fbde"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE0NDkxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/dependencies_maven/ispn_embedded.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDowMToyOVrOF7_XQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDowMToyOVrOF7_XQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0ODQ0OQ==", "bodyText": "you don't have to use the bom, but if you do, you need to import it:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                   </dependency>\n          \n          \n            \n                   <dependency>\n          \n          \n            \n                       <groupId>org.infinispan</groupId>\n          \n          \n            \n                       <artifactId>infinispan-bom</artifactId>\n          \n          \n            \n                       <version>${version.infinispan}</version>\n          \n          \n            \n                       <type>pom</type>\n          \n          \n            \n                       <scope>import</scope>\n          \n          \n            \n                   </dependency>\n          \n      \n    \n    \n  \n\nyou have an example in spring-boot repo: https://github.com/infinispan/infinispan-spring-boot/blob/master/pom.xml#L95", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398448449", "createdAt": "2020-03-26T10:01:29Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/dependencies_maven/ispn_embedded.xml", "diffHunk": "@@ -1,5 +1,13 @@\n-<dependency>\n-  <groupId>org.infinispan</groupId>\n-  <artifactId>infinispan-embedded</artifactId>\n-  <version>${version.infinispan}</version>\n-</dependency>\n+<dependencyManagement>\n+    <dependencies>\n+       <dependency>\n+           <groupId>org.infinispan</groupId>\n+           <artifactId>infinispan-bom</artifactId>\n+           <version>${version.infinispan}</version>\n+       </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE4MjQyOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMToxN1rOF7_vaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMToxN1rOF7_vaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NDYzMg==", "bodyText": "can you align the spaces?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398454632", "createdAt": "2020-03-26T10:11:17Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE4OTYxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMzoxOFrOF7_0Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxMzoxOFrOF7_0Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NTgxOA==", "bodyText": "is it worth to mention that the cache is created in all the nodes in the cluster?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398455818", "createdAt": "2020-03-26T10:13:18Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE5MjgzOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNDowM1rOF7_15A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNDowM1rOF7_15A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NjI5Mg==", "bodyText": "what do you think of keeping only the code and remove the imports?", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398456292", "createdAt": "2020-03-26T10:14:03Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDE5ODQxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNToyNFrOF7_5OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNToyNFrOF7_5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzE0NA==", "bodyText": "A / is missing.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]\n          \n          \n            \n            * link:{javadocroot}/org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457144", "createdAt": "2020-03-26T10:15:24Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data\n+into the cache, or configure {brandname} as needed.\n+\n+.Reference\n+\n+* link:{config_docs}#programmatic-configuring[Configuring {brandname} Programmatically]\n+* link:{javadocroot}/org/infinispan/Cache.html[org.infinispan.Cache]\n+* link:{javadocroot}/org/infinispan/commons/api/CacheContainerAdmin.html[org.infinispan.commons.api.CacheContainerAdmin]\n+* link:{javadocroot}/org/infinispan/configuration/cache/CacheMode.html[org.infinispan.configuration.cache.CacheMode]\n+* link:{javadocroot}/org/infinispan/configuration/cache/Configuration.html[org.infinispan.configuration.cache.Configuration]\n+* link:{javadocroot}/org/infinispan/configuration/cache/ConfigurationBuilder.html[org.infinispan.configuration.cache.ConfigurationBuilder]\n+* link:{javadocroot}/org/infinispan/configuration/global/GlobalConfigurationBuilder.html[org.infinispan.configuration.global.GlobalConfigurationBuilder]\n+* link:{javadocroot}org/infinispan/manager/DefaultCacheManager.html[org.infinispan.manager.DefaultCacheManager]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDIwMTM5OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNjoyNVrOF7_7cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDoxNjoyNVrOF7_7cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1NzcxMg==", "bodyText": "the transport must be configured before instantiating the DefaultCacheManager.", "url": "https://github.com/infinispan/infinispan/pull/8074#discussion_r398457712", "createdAt": "2020-03-26T10:16:25Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_running_embedded.adoc", "diffHunk": "@@ -0,0 +1,54 @@\n+[id='run_library']\n+= Running {brandname} as an Embedded Library\n+Learn how to run {brandname} as an embedded data store in your project.\n+\n+.Procedure\n+\n+* Initialize the default Cache Manager and add a cache definition as follows:\n+\n+[source,java,options=\"nowrap\"]\n+----\n+import org.infinispan.Cache;\n+import org.infinispan.commons.api.CacheContainerAdmin;\n+import org.infinispan.configuration.cache.CacheMode;\n+import org.infinispan.configuration.cache.Configuration;\n+import org.infinispan.configuration.cache.ConfigurationBuilder;\n+import org.infinispan.configuration.global.GlobalConfigurationBuilder;\n+import org.infinispan.manager.DefaultCacheManager;\n+\n+...\n+\n+      GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();\n+            DefaultCacheManager cacheManager = new DefaultCacheManager(global.build());\n+            ConfigurationBuilder builder = new ConfigurationBuilder();\n+            builder.clustering().cacheMode(CacheMode.DIST_SYNC);\n+      cacheManager.administration().getOrCreate(\"myCache\", builder.build());\n+----\n+\n+The preceding code initializes a default, clustered Cache Manager. Cache\n+Managers contain your cache definitions and control cache lifecycles.\n+\n+{brandname} does not provide default cache definitions so after initializing\n+the default Cache Manager, you need to add at least one cache instance. This\n+example uses the `ConfigurationBuilder` class to create a cache definition that\n+uses the distributed, synchronous cache mode. You then call the `getOrCreate()`\n+method that either creates a cache named \"myCache\" or returns it if it already\n+exists.\n+\n+.Next steps\n+\n+Now that you have a running Cache Manager with a cache created, you can add\n+some more cache definitions, configure a cluster transport layer, put some data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1be0743de996199b0701e0193d0fd18657b286"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4328, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}