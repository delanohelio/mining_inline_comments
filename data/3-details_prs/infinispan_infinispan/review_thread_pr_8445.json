{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjkwMjMy", "number": 8445, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMDo1OVrOEESZ_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMDo1OVrOEESZ_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTMxMzI3OnYy", "diffSide": "RIGHT", "path": "persistence/remote/src/test/java/org/infinispan/persistence/remote/GetWithMetadataTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMDo1OVrOGh0EDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxMDo1OVrOGh0EDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEwOTE5OA==", "bodyText": "Nitpicking, but I'd prefer creating the builder with\n      org.infinispan.client.hotrod.configuration.ConfigurationBuilder clientBuilder =\n            HotRodClientTestingUtil.newRemoteConfigurationBuilder(hotRodServer);\n\nand then setting the marshalling.\nSame in RemoteStoreMixedAccessTest", "url": "https://github.com/infinispan/infinispan/pull/8445#discussion_r438109198", "createdAt": "2020-06-10T13:10:59Z", "author": {"login": "danberindei"}, "path": "persistence/remote/src/test/java/org/infinispan/persistence/remote/GetWithMetadataTest.java", "diffHunk": "@@ -32,28 +32,29 @@\n \n    public static final String CACHE_NAME = \"testCache\";\n \n-   protected PersistenceConfigurationBuilder createCacheStoreConfig(String cacheName, int port,\n-                                                                    PersistenceConfigurationBuilder persistence) {\n-      persistence.addStore(RemoteStoreConfigurationBuilder.class)\n-              .remoteCacheName(cacheName)\n-              .hotRodWrapping(true)\n-              .addServer()\n-              .host(\"localhost\")\n-              .port(port);\n-      return persistence;\n-   }\n-\n    private <K, V> RemoteCache<K, V> getRemoteCache(HotRodServer hotRodServer) {\n       org.infinispan.client.hotrod.configuration.ConfigurationBuilder clientBuilder =\n               new org.infinispan.client.hotrod.configuration.ConfigurationBuilder();\n+      clientBuilder\n+            .marshaller(GenericJBossMarshaller.class)\n+            .addServer()\n+            .host(\"localhost\")\n+            .port(hotRodServer.getPort());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56d9223e9d419b2c5ac3e40a1cb60c2d3992958f"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4068, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}