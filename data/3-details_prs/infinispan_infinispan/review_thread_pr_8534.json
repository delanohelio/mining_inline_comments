{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjQwOTIx", "number": 8534, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODozMDoxNVrOEMy5dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODozMDoxNVrOEMy5dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODUyMjc3OnYy", "diffSide": "RIGHT", "path": "persistence/jdbc/src/main/java/org/infinispan/persistence/jdbc/impl/table/SybaseTableManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODozMDoxNVrOGvHFNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowODoyMFrOGvYBqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1MjI3Nw==", "bodyText": "If we do String index = rs.getString(\"INDEX_NAME\"); if (index != null ...) we only make a single call to the JDBC driver. From the ResultSet docs:\nFor maximum portability, result set columns within each row should be read in left-to-right order, and each column should be read only once.\n\nhttps://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html", "url": "https://github.com/infinispan/infinispan/pull/8534#discussion_r452052277", "createdAt": "2020-07-09T08:30:15Z", "author": {"login": "ryanemerson"}, "path": "persistence/jdbc/src/main/java/org/infinispan/persistence/jdbc/impl/table/SybaseTableManager.java", "diffHunk": "@@ -65,4 +72,24 @@ protected String initUpsertRowSql() {\n                config.segmentColumnName());\n       }\n    }\n+\n+   @Override\n+   protected boolean indexExists(String indexName, Connection conn) throws PersistenceException {\n+      ResultSet rs = null;\n+      try {\n+         DatabaseMetaData meta = conn.getMetaData();\n+         rs = meta.getIndexInfo(null, tableName.getSchema(), tableName.getName(), false, false);\n+\n+         while (rs.next()) {\n+            if (rs.getString(\"INDEX_NAME\") != null && indexName.equalsIgnoreCase(rs.getString(\"INDEX_NAME\").replaceAll(\"\\\"\", \"\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a01b67f576016db6c33ab3023d1859cd727a591e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMyOTg5Nw==", "bodyText": "@ryanemerson Good catch, it was updated, thanks", "url": "https://github.com/infinispan/infinispan/pull/8534#discussion_r452329897", "createdAt": "2020-07-09T16:08:20Z", "author": {"login": "gustavolira"}, "path": "persistence/jdbc/src/main/java/org/infinispan/persistence/jdbc/impl/table/SybaseTableManager.java", "diffHunk": "@@ -65,4 +72,24 @@ protected String initUpsertRowSql() {\n                config.segmentColumnName());\n       }\n    }\n+\n+   @Override\n+   protected boolean indexExists(String indexName, Connection conn) throws PersistenceException {\n+      ResultSet rs = null;\n+      try {\n+         DatabaseMetaData meta = conn.getMetaData();\n+         rs = meta.getIndexInfo(null, tableName.getSchema(), tableName.getName(), false, false);\n+\n+         while (rs.next()) {\n+            if (rs.getString(\"INDEX_NAME\") != null && indexName.equalsIgnoreCase(rs.getString(\"INDEX_NAME\").replaceAll(\"\\\"\", \"\"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1MjI3Nw=="}, "originalCommit": {"oid": "a01b67f576016db6c33ab3023d1859cd727a591e"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3986, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}