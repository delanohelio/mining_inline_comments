{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExODU3MjA1", "number": 8821, "title": "ISPN-12444 Stream K/V endpoint", "bodyText": "Limit parameter\nMetadata parameter\nLimit parameter included for key streaming\n\nhttps://issues.redhat.com/browse/ISPN-12444", "createdAt": "2020-10-28T21:48:07Z", "url": "https://github.com/infinispan/infinispan/pull/8821", "merged": true, "mergeCommit": {"oid": "7c6759528c3e3aed8173b650cba3259945fa4b9d"}, "closed": true, "closedAt": "2020-10-30T16:30:46Z", "author": {"login": "karesti"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXE0hggBqjM5MzM1NjAzMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXpXXDgBqjM5NDIwNzcyOTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "412b7f8a96584206acfe59f764b5942cb9a15e2b", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/412b7f8a96584206acfe59f764b5942cb9a15e2b", "committedDate": "2020-10-28T21:47:20Z", "message": "ISPN-12444 Stream K/V endpoint\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}, "afterCommit": {"oid": "0445675470eabc2c03361db59c9147ee6e162f31", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/0445675470eabc2c03361db59c9147ee6e162f31", "committedDate": "2020-10-28T21:54:13Z", "message": "ISPN-12444 Stream K/V endpoint\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0445675470eabc2c03361db59c9147ee6e162f31", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/0445675470eabc2c03361db59c9147ee6e162f31", "committedDate": "2020-10-28T21:54:13Z", "message": "ISPN-12444 Stream K/V endpoint\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}, "afterCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/dac872a989fc2b7f9d1987796d7295c8eb5335ae", "committedDate": "2020-10-28T22:00:00Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI4NzIz", "url": "https://github.com/infinispan/infinispan/pull/8821#pullrequestreview-519528723", "createdAt": "2020-10-29T10:32:27Z", "commit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozMzoyNlrOHqVqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjoyNjo0MVrOHqZaJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NzEwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n          \n          \n            \n            |Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514157107", "createdAt": "2020-10-29T10:33:26Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1ODQwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |Specifies if each entry should contain the metadata. The default value is `false`.\n          \n          \n            \n            |Includes metadata for each entry in the response. The default value is `false`.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514158401", "createdAt": "2020-10-29T10:35:34Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1ODY2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n          \n          \n            \n            |Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514158665", "createdAt": "2020-10-29T10:35:58Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2MDIxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `key` The key of the entry.\n          \n          \n            \n            * `key` The key for the entry.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514160216", "createdAt": "2020-10-29T10:38:35Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxNjM4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514216382", "createdAt": "2020-10-29T12:22:51Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxNzI1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514217256", "createdAt": "2020-10-29T12:24:27Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n+* `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxNzY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `created` Value in milliseconds. -1 indicated not created time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `created` Time the entry was created. Returns a value of `-1` if there is no creation time. No value is returned unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514217682", "createdAt": "2020-10-29T12:25:10Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n+* `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.\n+* `created` Value in milliseconds. -1 indicated not created time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxODI4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `lastUsed` Value in milliseconds. -1 indicated not last used time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `lastUsed` The last time an operation was performed on the entry. Returns a value of `-1` if there is no last used time. No value is returned unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514218281", "createdAt": "2020-10-29T12:26:11Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n+* `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.\n+* `created` Value in milliseconds. -1 indicated not created time. The value will not be present if metadata is parameter is `false`.\n+* `lastUsed` Value in milliseconds. -1 indicated not last used time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxODUzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `expireTime` Value in milliseconds. -1 indicated not expiration time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `expireTime` The entry expiration time in milliseconds. A value of `-1` means the stream does not include entry metadata.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514218533", "createdAt": "2020-10-29T12:26:41Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n+* `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.\n+* `created` Value in milliseconds. -1 indicated not created time. The value will not be present if metadata is parameter is `false`.\n+* `lastUsed` Value in milliseconds. -1 indicated not last used time. The value will not be present if metadata is parameter is `false`.\n+* `expireTime` Value in milliseconds. -1 indicated not expiration time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTY1MDUx", "url": "https://github.com/infinispan/infinispan/pull/8821#pullrequestreview-519565051", "createdAt": "2020-10-29T11:21:57Z", "commit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMToyMTo1OFrOHqXUNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjoxMTo1OVrOHqY7Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NDI0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Stream all keys\n          \n          \n            \n                * Retrieve all keys", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514184246", "createdAt": "2020-10-29T11:21:58Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NDc0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @return Response with all keys streamed\n          \n          \n            \n                * @return Response with inputStream to get all the keys", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514184749", "createdAt": "2020-10-29T11:22:57Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTM0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Stream keys putting a limit\n          \n          \n            \n                * Retrieve keys limited by count", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185343", "createdAt": "2020-10-29T11:24:12Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTU3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @param limit, limit the response\n          \n          \n            \n                * @param limit The maximum number of keys to retrieve", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185579", "createdAt": "2020-10-29T11:24:35Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NTkzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * @return Response with the limited amount of keys streamed\n          \n          \n            \n                * @return Response with InputStream to get the keys", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514185939", "createdAt": "2020-10-29T11:25:13Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NjU3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Retrieves entries without metadata\n          \n          \n            \n                * Retrieves entries without metadata\n          \n          \n            \n                @return Response with InputStream to get the entries", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514186578", "createdAt": "2020-10-29T11:26:26Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzExOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Retrieves entries\n          \n          \n            \n                * Retrieves entries limited by count", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187118", "createdAt": "2020-10-29T11:27:29Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzQwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Limit -1 : all entries\n          \n          \n            \n                * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187409", "createdAt": "2020-10-29T11:28:04Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzY0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Limit -1 : all entries\n          \n          \n            \n                * @param limit: The maximum number of entries to retrieve, or -1 to retrieve all", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187641", "createdAt": "2020-10-29T11:28:34Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries\n+    */\n+   CompletionStage<RestResponse> entries(int limit);\n+\n+   /**\n+    * Retrieves entries with limit and metadata\n+    * Limit -1 : all entries", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzgwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                * Metadata true: includes the metadata for each entry\n          \n          \n            \n                * @param metadata: if true, includes the metadata for each entry", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514187803", "createdAt": "2020-10-29T11:28:56Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit\n+    *\n+    * @param limit, limit the response\n+    * @return Response with the limited amount of keys streamed\n+    */\n+   CompletionStage<RestResponse> keys(int limit);\n+\n+   /**\n+    * Retrieves entries without metadata\n+    */\n+   CompletionStage<RestResponse> entries();\n+\n+   /**\n+    * Retrieves entries\n+    * Limit -1 : all entries\n+    */\n+   CompletionStage<RestResponse> entries(int limit);\n+\n+   /**\n+    * Retrieves entries with limit and metadata\n+    * Limit -1 : all entries\n+    * Metadata true: includes the metadata for each entry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5MzQxMA==", "bodyText": "I'd rather apply the limit in the stream itself instead of the adaptor:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n          \n          \n            \n                      CacheStream<?> stream = cache.keySet().stream();\n          \n          \n            \n                      if(limit > 0) stream = cache.keySet().stream().limit(limit);\n          \n          \n            \n                      responseBuilder.entity(new CacheKeyInputStream(stream, batch));\n          \n      \n    \n    \n  \n\nAnd CacheKeyInputStream does not need to change its internal logic", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514193410", "createdAt": "2020-10-29T11:39:43Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NDIxNQ==", "bodyText": "The default should be unlimited, like the keys", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514194215", "createdAt": "2020-10-29T11:41:16Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+\n+         responseBuilder.contentType(APPLICATION_JSON_TYPE);\n+\n+         return responseBuilder.build();\n+      }, invocationHelper.getExecutor());\n+   }\n+\n+   private CompletionStage<RestResponse> streamEntries(RestRequest request) {\n+      String cacheName = request.variables().get(\"cacheName\");\n+      String limitParam = request.getParameter(\"limit\");\n+      String metadataParam = request.getParameter(\"metadata\");\n+      String batchParam = request.getParameter(\"batch\");\n+      int limit = limitParam == null ? 100 : Integer.parseInt(limitParam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NjE1NQ==", "bodyText": "Same as the comment before, I'd rather apply the limit in the stream itself", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514196155", "createdAt": "2020-10-29T11:44:58Z", "author": {"login": "gustavonalle"}, "path": "server/rest/src/main/java/org/infinispan/rest/resources/CacheResourceV2.java", "diffHunk": "@@ -187,7 +191,31 @@ public Invocations getInvocations() {\n       // Streaming over the cache is blocking\n       return CompletableFuture.supplyAsync(() -> {\n          NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n-         responseBuilder.entity(new CacheInputStream(cache.keySet().stream(), batch));\n+         responseBuilder.entity(new CacheKeyInputStream(cache.keySet().stream(), batch, limit));\n+\n+         responseBuilder.contentType(APPLICATION_JSON_TYPE);\n+\n+         return responseBuilder.build();\n+      }, invocationHelper.getExecutor());\n+   }\n+\n+   private CompletionStage<RestResponse> streamEntries(RestRequest request) {\n+      String cacheName = request.variables().get(\"cacheName\");\n+      String limitParam = request.getParameter(\"limit\");\n+      String metadataParam = request.getParameter(\"metadata\");\n+      String batchParam = request.getParameter(\"batch\");\n+      int limit = limitParam == null ? 100 : Integer.parseInt(limitParam);\n+      boolean metadata = metadataParam == null ? false : Boolean.parseBoolean(metadataParam);\n+      int batch = batchParam == null ? STREAM_BATCH_SIZE : Integer.parseInt(batchParam);\n+\n+      Cache<?, ?> cache = invocationHelper.getRestCacheManager().getCache(cacheName, APPLICATION_JSON, APPLICATION_JSON, request);\n+      if (cache == null)\n+         return notFoundResponseFuture();\n+\n+      // Streaming over the cache is blocking\n+      return CompletableFuture.supplyAsync(() -> {\n+         NettyRestResponse.Builder responseBuilder = new NettyRestResponse.Builder();\n+         responseBuilder.entity(new CacheEntryInputStream(cache.entrySet().stream(), batch, limit, metadata));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxMDYyMw==", "bodyText": "Same wording needs to be changed in those descriptions. E.g.:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `expireTime` Value in milliseconds. -1 indicated not expiration time. The value will not be present if metadata is parameter is `false`.\n          \n          \n            \n            * `expireTime` Value in milliseconds, or -1 if the entry does not expire. The value will not be present if metadata is parameter is `false`.", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514210623", "createdAt": "2020-10-29T12:11:59Z", "author": {"login": "gustavonalle"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Specifies if each entry should contain the metadata. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to be streamed. A negative value will retrieve the keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key of the entry.\n+* `value` The value of the entry.\n+* `lifespan` Value in milliseconds. -1 indicated not lifespan time. The value will not be present if metadata is parameter is `false`.\n+* `maxIdle` Value in milliseconds. -1 indicated not maxIdle time. The value will not be present if metadata is parameter is `false`.\n+* `created` Value in milliseconds. -1 indicated not created time. The value will not be present if metadata is parameter is `false`.\n+* `lastUsed` Value in milliseconds. -1 indicated not last used time. The value will not be present if metadata is parameter is `false`.\n+* `expireTime` Value in milliseconds. -1 indicated not expiration time. The value will not be present if metadata is parameter is `false`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjUwNjY3", "url": "https://github.com/infinispan/infinispan/pull/8821#pullrequestreview-519650667", "createdAt": "2020-10-29T13:15:45Z", "commit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzoxNTo0NVrOHqbQfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzoxNTo0NVrOHqbQfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0ODgzMQ==", "bodyText": "Please see my comments review below @oraNod. I think it'd be more clear to use retrieve instead of stream in the API docs, clarifying the response contains an InputStream to consume the result", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r514248831", "createdAt": "2020-10-29T13:15:45Z", "author": {"login": "gustavonalle"}, "path": "client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java", "diffHunk": "@@ -16,8 +16,39 @@\n     */\n    String name();\n \n+   /**\n+    * Stream all keys\n+    *\n+    * @return Response with all keys streamed\n+    */\n    CompletionStage<RestResponse> keys();\n \n+   /**\n+    * Stream keys putting a limit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac872a989fc2b7f9d1987796d7295c8eb5335ae"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "237401bfdad4604219465b9fd3e4738faff8e3aa", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/237401bfdad4604219465b9fd3e4738faff8e3aa", "committedDate": "2020-10-29T15:08:26Z", "message": "Update client/rest-client/src/main/java/org/infinispan/client/rest/RestCacheClient.java\n\nCo-authored-by: Gustavo <gustavonalle@gmail.com>"}, "afterCommit": {"oid": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "committedDate": "2020-10-29T15:11:14Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/ae54134e46047e29c1fcb6b8fc3ba49dcd4d37f0", "committedDate": "2020-10-29T15:11:14Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}, "afterCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/c2a43fa04fffc6fff24e727965be2f38d7a5d455", "committedDate": "2020-10-29T15:19:55Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzY2NTA3", "url": "https://github.com/infinispan/infinispan/pull/8821#pullrequestreview-520766507", "createdAt": "2020-10-30T15:14:40Z", "commit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODI3ODQ5", "url": "https://github.com/infinispan/infinispan/pull/8821#pullrequestreview-520827849", "createdAt": "2020-10-30T16:19:59Z", "commit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoxOTo1OVrOHrWZYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyMjoyMlrOHrWe2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNzc2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `expireTime` The entry expiration time in milliseconds. A value of `-1` means the stream does not include entry metadata.\n          \n          \n            \n            * `expireTime` Time when the entry expires or `Never` for immortal entries. Returns a value of `-1` unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r515217762", "createdAt": "2020-10-30T16:19:59Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Includes metadata for each entry in the response. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key for the entry.\n+* `value` The value of the entry.\n+* `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `created` Time the entry was created. Returns a value of `-1` if there is no creation time. No value is returned unless you set metadata=\"true\".\n+* `lastUsed` The last time an operation was performed on the entry. Returns a value of `-1` if there is no last used time. No value is returned unless you set metadata=\"true\".\n+* `expireTime` The entry expiration time in milliseconds. A value of `-1` means the stream does not include entry metadata.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxODEwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `lastUsed` The last time an operation was performed on the entry. Returns a value of `-1` if there is no last used time. No value is returned unless you set metadata=\"true\".\n          \n          \n            \n            * `lastUsed` Last time an operation was performed on the entry. Returns a value of `-1` unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r515218104", "createdAt": "2020-10-30T16:20:34Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Includes metadata for each entry in the response. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key for the entry.\n+* `value` The value of the entry.\n+* `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `created` Time the entry was created. Returns a value of `-1` if there is no creation time. No value is returned unless you set metadata=\"true\".\n+* `lastUsed` The last time an operation was performed on the entry. Returns a value of `-1` if there is no last used time. No value is returned unless you set metadata=\"true\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxODE5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `created` Time the entry was created. Returns a value of `-1` if there is no creation time. No value is returned unless you set metadata=\"true\".\n          \n          \n            \n            * `created` Time the entry was created. Returns a value of `-1` unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r515218190", "createdAt": "2020-10-30T16:20:45Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Includes metadata for each entry in the response. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key for the entry.\n+* `value` The value of the entry.\n+* `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `created` Time the entry was created. Returns a value of `-1` if there is no creation time. No value is returned unless you set metadata=\"true\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxODYwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n          \n          \n            \n            * `maxIdle` Maximum idle time, in milliseconds, or `Forever` if entries never expire. Returns a value of `-1` unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r515218606", "createdAt": "2020-10-30T16:21:24Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Includes metadata for each entry in the response. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key for the entry.\n+* `value` The value of the entry.\n+* `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n+* `maxIdle` Maximum idle time, in milliseconds, for the entry or `-1` if not specified. No value is returned unless you set metadata=\"true\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxOTE2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".\n          \n          \n            \n            * `lifespan` Lifespan, in milliseconds, or `Forever` if entries never expire. Returns a value of `-1` unless you set metadata=\"true\".", "url": "https://github.com/infinispan/infinispan/pull/8821#discussion_r515219163", "createdAt": "2020-10-30T16:22:22Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_rest_caches.adoc", "diffHunk": "@@ -318,11 +318,54 @@ GET /rest/v2/caches/{cacheName}?action=keys\n |===\n |Parameter |Required or Optional |Value\n \n-|`batch-size`\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to retrieve using an InputStream. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n+|OPTIONAL\n+|Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n+|===\n+\n+[id='rest_v2_get_entries']\n+= Retrieving All Entries from Caches\n+Invoke `GET` requests to retrieve all the entries in a cache in JSON format.\n+\n+[source,options=\"nowrap\",subs=attributes+]\n+----\n+GET /rest/v2/caches/{cacheName}?action=entries\n+----\n+\n+.Request Parameters\n+\n+|===\n+|Parameter |Required or Optional |Value\n+\n+|`metadata`\n+|OPTIONAL\n+|Includes metadata for each entry in the response. The default value is `false`.\n+|`limit`\n+|OPTIONAL\n+|Specifies the maximum number of keys to include in the response. A negative value retrieves all keys. The default value is `-1`.\n+|`batch`\n |OPTIONAL\n |Specifies the internal batch size when retrieving the keys. The default value is `1000`.\n |===\n \n+{brandname} provides a JSON response such as the following:\n+\n+[source,json,options=\"nowrap\",subs=attributes+]\n+----\n+include::json_examples/rest_caches_all_entries.json[]\n+----\n+\n+* `key` The key for the entry.\n+* `value` The value of the entry.\n+* `lifespan` Entry lifespan, in milliseconds, or `-1` if not specified. No value is returned unless you set metadata=\"true\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a43fa04fffc6fff24e727965be2f38d7a5d455"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "committedDate": "2020-10-30T16:28:16Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1cff54fc4045ef540ae8afbe8bf07f81bbf06b5", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/b1cff54fc4045ef540ae8afbe8bf07f81bbf06b5", "committedDate": "2020-10-30T16:26:38Z", "message": "Update documentation/src/main/asciidoc/topics/ref_rest_caches.adoc\n\nCo-authored-by: Don Naro <dnaro@redhat.com>"}, "afterCommit": {"oid": "d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "author": {"user": {"login": "karesti", "name": "Katia Aresti"}}, "url": "https://github.com/infinispan/infinispan/commit/d4f95df70f86606f1e4ad2d59d837c5681dfa5f5", "committedDate": "2020-10-30T16:28:16Z", "message": "ISPN-12444 Stream K/V endpoint\n\n* Limit parameter\n* Metadata parameter\n* Limit parameter included for key streaming"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 274, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}