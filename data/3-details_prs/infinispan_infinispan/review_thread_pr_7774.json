{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODExODcz", "number": 7774, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoxNTowNFrODZ4-Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoyMToxN1rODZ5HPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDc0NDMxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/ref_config_programmatic.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoxNTowNFrOFgiFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo1Mzo1MVrOFhYlvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NzI4MQ==", "bodyText": "Can we link to the HotRod documentation? Or does that not work with how things are separated?", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r369657281", "createdAt": "2020-01-22T16:15:04Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/ref_config_programmatic.adoc", "diffHunk": "@@ -0,0 +1,88 @@\n+[id='programmatic-{context}']\n+= Programmatic Configuration\n+Create new Configuration objects with the `ConfigurationBuilder` class and then\n+define cache configurations with the Cache Manager.\n+\n+[NOTE]\n+====\n+The examples in this section use `EmbeddedCacheManager`, which is a Cache\n+Manager that runs in the same JVM as the client.\n+\n+To configure caches remotely with HotRod clients, you use `RemoteCacheManager`.\n+Refer to the HotRod documentation for more information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU1MDIwNg==", "bodyText": "@ryanemerson we do link to the HotRod docs but from the .References section. Linking between guides in community is really straightforward. I've added attributes so all you need to do is link:{hotrod_docs}[HotRod Java Clients].\nyou can add anchors as well like link:{hotrod_docs}#anchor_name[HotRod Java Clients].\nalso pushing links to a reference section keeps readers \"on task\". inline linking can lead to distractions. I could go all day with this... let me know what you think though. I can show you some examples and explain in more detail.", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r370550206", "createdAt": "2020-01-24T09:53:51Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_config_programmatic.adoc", "diffHunk": "@@ -0,0 +1,88 @@\n+[id='programmatic-{context}']\n+= Programmatic Configuration\n+Create new Configuration objects with the `ConfigurationBuilder` class and then\n+define cache configurations with the Cache Manager.\n+\n+[NOTE]\n+====\n+The examples in this section use `EmbeddedCacheManager`, which is a Cache\n+Manager that runs in the same JVM as the client.\n+\n+To configure caches remotely with HotRod clients, you use `RemoteCacheManager`.\n+Refer to the HotRod documentation for more information.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NzI4MQ=="}, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDc2NzMzOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoyMToxN1rOFgiUkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTowNzowOFrOFlXdZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MTA3Mg==", "bodyText": "I think this needs clarifying to make it clear that \"additional named caches\" refers to when a user calls getCache(\"cache-name\"). It does not mean that another declaritevely named cache will inherit it's configuration from the default cache.\nThis is made somewhat more confusing by the fact we also have to explain -configuration and how multiple caches can use it via:", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r369661072", "createdAt": "2020-01-22T16:21:17Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[id='declarative-{context}']\n+= Declarative Configuration\n+You configure {brandname} caches by defining properties in `infinispan.xml`.\n+\n+The following example shows the basic structure of a {brandname} configuration:\n+\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan> <1>\n+   <cache-container default-cache=\"local\"> <2>\n+      <transport stack=\"udp\" cluster=\"mycluster\"/> <3>\n+      <local-cache name=\"local\"/> <4>\n+      <invalidation-cache name=\"invalidation\"/> <5>\n+      <replicated-cache name=\"replicated\"/> <6>\n+      <distributed-cache name=\"distributed\"/> <7>\n+   </cache-container>\n+</infinispan>\n+----\n+\n+<1> adds the root element for the {brandname} configuration. The minimum valid configuration is `<infinispan />`; however this provides very basic capabilities with no clustering and no cache instances.\n+<2> defines properties for all caches within the container and names the default cache.\n+<3> defines transport properties for clustered cache modes. In the preceding example, `stack=\"udp\"` specifies the default JGroups UDP transport stack and names the {brandname} cluster.\n+<4> names a local cache instance.\n+<5> names a cache instance that uses invalidation mode.\n+<6> names a cache instance that uses replicated mode.\n+<7> names a cache instance that uses distributed mode.\n+\n+.Default caches\n+{brandname} does not provide an implicit default cache. You must specify which\n+named cache is the default.\n+\n+Additional named caches inherit settings from the default cache. You can,\n+however, override or extend configuration in each named cache.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MjY4NA==", "bodyText": "@tristantarrant I can't keep up, do calls to getCache(\"new name\") create a new cache using the default config now?", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r369662684", "createdAt": "2020-01-22T16:24:00Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[id='declarative-{context}']\n+= Declarative Configuration\n+You configure {brandname} caches by defining properties in `infinispan.xml`.\n+\n+The following example shows the basic structure of a {brandname} configuration:\n+\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan> <1>\n+   <cache-container default-cache=\"local\"> <2>\n+      <transport stack=\"udp\" cluster=\"mycluster\"/> <3>\n+      <local-cache name=\"local\"/> <4>\n+      <invalidation-cache name=\"invalidation\"/> <5>\n+      <replicated-cache name=\"replicated\"/> <6>\n+      <distributed-cache name=\"distributed\"/> <7>\n+   </cache-container>\n+</infinispan>\n+----\n+\n+<1> adds the root element for the {brandname} configuration. The minimum valid configuration is `<infinispan />`; however this provides very basic capabilities with no clustering and no cache instances.\n+<2> defines properties for all caches within the container and names the default cache.\n+<3> defines transport properties for clustered cache modes. In the preceding example, `stack=\"udp\"` specifies the default JGroups UDP transport stack and names the {brandname} cluster.\n+<4> names a local cache instance.\n+<5> names a cache instance that uses invalidation mode.\n+<6> names a cache instance that uses replicated mode.\n+<7> names a cache instance that uses distributed mode.\n+\n+.Default caches\n+{brandname} does not provide an implicit default cache. You must specify which\n+named cache is the default.\n+\n+Additional named caches inherit settings from the default cache. You can,\n+however, override or extend configuration in each named cache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MTA3Mg=="}, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2Mzc0OQ==", "bodyText": "@ryanemerson thanks for clarifying that detail. tbh I wasn't sure about it and also felt it wasn't clear. I'm going to remove that sentence as it doesn't belong in the declarative config content.", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r370563749", "createdAt": "2020-01-24T10:23:40Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[id='declarative-{context}']\n+= Declarative Configuration\n+You configure {brandname} caches by defining properties in `infinispan.xml`.\n+\n+The following example shows the basic structure of a {brandname} configuration:\n+\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan> <1>\n+   <cache-container default-cache=\"local\"> <2>\n+      <transport stack=\"udp\" cluster=\"mycluster\"/> <3>\n+      <local-cache name=\"local\"/> <4>\n+      <invalidation-cache name=\"invalidation\"/> <5>\n+      <replicated-cache name=\"replicated\"/> <6>\n+      <distributed-cache name=\"distributed\"/> <7>\n+   </cache-container>\n+</infinispan>\n+----\n+\n+<1> adds the root element for the {brandname} configuration. The minimum valid configuration is `<infinispan />`; however this provides very basic capabilities with no clustering and no cache instances.\n+<2> defines properties for all caches within the container and names the default cache.\n+<3> defines transport properties for clustered cache modes. In the preceding example, `stack=\"udp\"` specifies the default JGroups UDP transport stack and names the {brandname} cluster.\n+<4> names a local cache instance.\n+<5> names a cache instance that uses invalidation mode.\n+<6> names a cache instance that uses replicated mode.\n+<7> names a cache instance that uses distributed mode.\n+\n+.Default caches\n+{brandname} does not provide an implicit default cache. You must specify which\n+named cache is the default.\n+\n+Additional named caches inherit settings from the default cache. You can,\n+however, override or extend configuration in each named cache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MTA3Mg=="}, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNTY5Mw==", "bodyText": "Caches no longer implicitly inherit from the default cache.", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r374725693", "createdAt": "2020-02-04T15:06:38Z", "author": {"login": "tristantarrant"}, "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[id='declarative-{context}']\n+= Declarative Configuration\n+You configure {brandname} caches by defining properties in `infinispan.xml`.\n+\n+The following example shows the basic structure of a {brandname} configuration:\n+\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan> <1>\n+   <cache-container default-cache=\"local\"> <2>\n+      <transport stack=\"udp\" cluster=\"mycluster\"/> <3>\n+      <local-cache name=\"local\"/> <4>\n+      <invalidation-cache name=\"invalidation\"/> <5>\n+      <replicated-cache name=\"replicated\"/> <6>\n+      <distributed-cache name=\"distributed\"/> <7>\n+   </cache-container>\n+</infinispan>\n+----\n+\n+<1> adds the root element for the {brandname} configuration. The minimum valid configuration is `<infinispan />`; however this provides very basic capabilities with no clustering and no cache instances.\n+<2> defines properties for all caches within the container and names the default cache.\n+<3> defines transport properties for clustered cache modes. In the preceding example, `stack=\"udp\"` specifies the default JGroups UDP transport stack and names the {brandname} cluster.\n+<4> names a local cache instance.\n+<5> names a cache instance that uses invalidation mode.\n+<6> names a cache instance that uses replicated mode.\n+<7> names a cache instance that uses distributed mode.\n+\n+.Default caches\n+{brandname} does not provide an implicit default cache. You must specify which\n+named cache is the default.\n+\n+Additional named caches inherit settings from the default cache. You can,\n+however, override or extend configuration in each named cache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MTA3Mg=="}, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNTk5MQ==", "bodyText": "The default cache is just any named cache that you obtain when you invoke getCache()", "url": "https://github.com/infinispan/infinispan/pull/7774#discussion_r374725991", "createdAt": "2020-02-04T15:07:08Z", "author": {"login": "tristantarrant"}, "path": "documentation/src/main/asciidoc/topics/ref_config_declarative.adoc", "diffHunk": "@@ -0,0 +1,38 @@\n+[id='declarative-{context}']\n+= Declarative Configuration\n+You configure {brandname} caches by defining properties in `infinispan.xml`.\n+\n+The following example shows the basic structure of a {brandname} configuration:\n+\n+[source,xml,options=\"nowrap\",subs=attributes+]\n+----\n+<infinispan> <1>\n+   <cache-container default-cache=\"local\"> <2>\n+      <transport stack=\"udp\" cluster=\"mycluster\"/> <3>\n+      <local-cache name=\"local\"/> <4>\n+      <invalidation-cache name=\"invalidation\"/> <5>\n+      <replicated-cache name=\"replicated\"/> <6>\n+      <distributed-cache name=\"distributed\"/> <7>\n+   </cache-container>\n+</infinispan>\n+----\n+\n+<1> adds the root element for the {brandname} configuration. The minimum valid configuration is `<infinispan />`; however this provides very basic capabilities with no clustering and no cache instances.\n+<2> defines properties for all caches within the container and names the default cache.\n+<3> defines transport properties for clustered cache modes. In the preceding example, `stack=\"udp\"` specifies the default JGroups UDP transport stack and names the {brandname} cluster.\n+<4> names a local cache instance.\n+<5> names a cache instance that uses invalidation mode.\n+<6> names a cache instance that uses replicated mode.\n+<7> names a cache instance that uses distributed mode.\n+\n+.Default caches\n+{brandname} does not provide an implicit default cache. You must specify which\n+named cache is the default.\n+\n+Additional named caches inherit settings from the default cache. You can,\n+however, override or extend configuration in each named cache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2MTA3Mg=="}, "originalCommit": {"oid": "c27b1005b45b88f2677bd564e33b27fd6f09016c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4518, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}