{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzMxNzg5", "number": 7815, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjozMDo1OFrODfhwaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjozMTo0NVrODfhxTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Mzg1NTE1OnYy", "diffSide": "RIGHT", "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjozMDo1OFrOFpSAgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo1OTowMlrOFp7a6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMDk3OQ==", "bodyText": "We should throw an Exception here if the parser is 11 or higher and the strategy is not recognised.", "url": "https://github.com/infinispan/infinispan/pull/7815#discussion_r378830979", "createdAt": "2020-02-13T12:30:58Z", "author": {"login": "ryanemerson"}, "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "diffHunk": "@@ -1619,7 +1621,12 @@ private void parseEviction(XMLExtendedStreamReader reader, ModelNode cache, Map<\n             Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n             switch (attribute) {\n                 case STRATEGY: {\n-                    enabled = EvictionStrategy.valueOf(value).isEnabled();\n+                    try {\n+                        enabled = EvictionStrategy.valueOf(value).isEnabled();\n+                    } catch (IllegalArgumentException e) {\n+                        // Unable to parse eviction strategy - assuming it is enabled\n+                        enabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff25391be1eb2de87e1067088d8ed488e74c88b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwOTQ4Mw==", "bodyText": "Sure", "url": "https://github.com/infinispan/infinispan/pull/7815#discussion_r379509483", "createdAt": "2020-02-14T15:59:02Z", "author": {"login": "wburns"}, "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "diffHunk": "@@ -1619,7 +1621,12 @@ private void parseEviction(XMLExtendedStreamReader reader, ModelNode cache, Map<\n             Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n             switch (attribute) {\n                 case STRATEGY: {\n-                    enabled = EvictionStrategy.valueOf(value).isEnabled();\n+                    try {\n+                        enabled = EvictionStrategy.valueOf(value).isEnabled();\n+                    } catch (IllegalArgumentException e) {\n+                        // Unable to parse eviction strategy - assuming it is enabled\n+                        enabled = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMDk3OQ=="}, "originalCommit": {"oid": "ff25391be1eb2de87e1067088d8ed488e74c88b4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Mzg1NzQwOnYy", "diffSide": "RIGHT", "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjozMTo0NVrOFpSB1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo1OTowNlrOFp7bEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMTMxNg==", "bodyText": "We should warn that the attribute has been ignored via ignoreAttribute.", "url": "https://github.com/infinispan/infinispan/pull/7815#discussion_r378831316", "createdAt": "2020-02-13T12:31:45Z", "author": {"login": "ryanemerson"}, "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "diffHunk": "@@ -1592,7 +1592,9 @@ private void parseMemoryOffHeap(XMLExtendedStreamReader reader, ModelNode cache,\n                     break;\n                 }\n                 case ADDRESS_COUNT: {\n-                    MemoryOffHeapConfigurationResource.ADDRESS_COUNT.parseAndSetParameter(value, offHeap, reader);\n+                    if (namespace.since(11, 0)) {\n+                        throw ParseUtils.unexpectedElement(reader);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff25391be1eb2de87e1067088d8ed488e74c88b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwOTUyMQ==", "bodyText": "Sure", "url": "https://github.com/infinispan/infinispan/pull/7815#discussion_r379509521", "createdAt": "2020-02-14T15:59:06Z", "author": {"login": "wburns"}, "path": "wildfly/infinispan/src/main/java/org/jboss/as/clustering/infinispan/subsystem/InfinispanSubsystemXMLReader.java", "diffHunk": "@@ -1592,7 +1592,9 @@ private void parseMemoryOffHeap(XMLExtendedStreamReader reader, ModelNode cache,\n                     break;\n                 }\n                 case ADDRESS_COUNT: {\n-                    MemoryOffHeapConfigurationResource.ADDRESS_COUNT.parseAndSetParameter(value, offHeap, reader);\n+                    if (namespace.since(11, 0)) {\n+                        throw ParseUtils.unexpectedElement(reader);\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMTMxNg=="}, "originalCommit": {"oid": "ff25391be1eb2de87e1067088d8ed488e74c88b4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4549, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}