{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTUyNTk1", "number": 8012, "title": "ISPN-11435 The server sometimes doesn't start all the caches", "bodyText": "https://issues.redhat.com/browse/ISPN-11435", "createdAt": "2020-03-07T14:58:20Z", "url": "https://github.com/infinispan/infinispan/pull/8012", "merged": true, "mergeCommit": {"oid": "30074fc87b9d4c4cf9a3f58e932be81c1dcbc1b4"}, "closed": true, "closedAt": "2020-03-11T17:27:45Z", "author": {"login": "danberindei"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcL-7tfgBqjMxMTA5MzA0MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMpFqcABqjMxMTkzOTc0NzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b694b0e197283bdcf7384445458dda31ddd6b5e", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/5b694b0e197283bdcf7384445458dda31ddd6b5e", "committedDate": "2020-03-07T20:33:14Z", "message": "ISPN-11435 Pre-start caches outside of startTransport\n\nHotRodServer.startTransport is not called with single port.\n\nDefined caches will be started if a client accesses this server\nwhen it first connects, but later requests will go to the\nservers that already have the cache running."}, "afterCommit": {"oid": "693f45aee7823f287fe6678402e625260ee73459", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/693f45aee7823f287fe6678402e625260ee73459", "committedDate": "2020-03-09T14:38:13Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nApplications/tests that want to start caches individually\ncan use the DefaultCacheManager constructors with a start\nparameter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjk4MTk3", "url": "https://github.com/infinispan/infinispan/pull/8012#pullrequestreview-371298197", "createdAt": "2020-03-09T15:44:11Z", "commit": {"oid": "693f45aee7823f287fe6678402e625260ee73459"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0NDoxMVrOFzuJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0NDoxMVrOFzuJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3NzY5Mw==", "bodyText": "This comment is no longer valid since you've moved things around", "url": "https://github.com/infinispan/infinispan/pull/8012#discussion_r389777693", "createdAt": "2020-03-09T15:44:11Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -107,24 +109,32 @@ void start() {\n          }\n       }\n \n+      // Install the listener\n+      GlobalConfigurationStateListener stateCacheListener = new GlobalConfigurationStateListener(this);\n+      getStateCache().addListener(stateCacheListener, new ScopeFilter(CACHE_SCOPE));\n+\n       // Initialize caches which are present in the initial state. We do this before installing the listener.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693f45aee7823f287fe6678402e625260ee73459"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzM2MTAx", "url": "https://github.com/infinispan/infinispan/pull/8012#pullrequestreview-371336101", "createdAt": "2020-03-09T16:28:42Z", "commit": {"oid": "693f45aee7823f287fe6678402e625260ee73459"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyODo0MlrOFzv8_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyODo0MlrOFzv8_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNzM1OQ==", "bodyText": "Why are you not starting the static caches before the persisted ones ?", "url": "https://github.com/infinispan/infinispan/pull/8012#discussion_r389807359", "createdAt": "2020-03-09T16:28:42Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -107,24 +109,32 @@ void start() {\n          }\n       }\n \n+      // Install the listener\n+      GlobalConfigurationStateListener stateCacheListener = new GlobalConfigurationStateListener(this);\n+      getStateCache().addListener(stateCacheListener, new ScopeFilter(CACHE_SCOPE));\n+\n       // Initialize caches which are present in the initial state. We do this before installing the listener.\n+      log.debugf(\"Starting caches from global state: %s\", getStateCache().keySet());\n       for (Map.Entry<ScopedState, Object> e : getStateCache().entrySet()) {\n          if (CACHE_SCOPE.equals(e.getKey().getScope())) {\n             String cacheName = e.getKey().getName();\n             CacheState cacheState = (CacheState) e.getValue();\n             uncheckedAwait(createCacheLocally(cacheName, cacheState));\n          }\n       }\n-      // Install the listener\n-      GlobalConfigurationStateListener stateCacheListener = new GlobalConfigurationStateListener(this);\n-      getStateCache().addListener(stateCacheListener, new ScopeFilter(CACHE_SCOPE));\n \n-      // Tell the LocalConfigurationManager that it can load any persistent caches\n+      // Load any persistent caches that are not in the state cache\n+      log.debugf(\"Starting caches from local persisted state: %s\", persistedConfigurations.keySet());\n       List<CompletableFuture<Configuration>> all = persistedConfigurations.entrySet().stream().map((entry) ->\n             // The cache configuration was permanent, it still needs to be\n             getOrCreateCache(entry.getKey(), entry.getValue(), EnumSet.noneOf(CacheContainerAdmin.AdminFlag.class))\n       ).collect(Collectors.toList());\n       uncheckedAwait(CompletableFutures.sequence(all));\n+\n+      Set<String> staticCacheNames = new HashSet<>(configurationManager.getDefinedCaches());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "693f45aee7823f287fe6678402e625260ee73459"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "892466ef2e0d80be07b2ce9feab9e3a7f7edea15", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/892466ef2e0d80be07b2ce9feab9e3a7f7edea15", "committedDate": "2020-03-10T11:01:23Z", "message": "f"}, "afterCommit": {"oid": "cd1f3846b40da3e55781e9757bff5fc8c0f15733", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/cd1f3846b40da3e55781e9757bff5fc8c0f15733", "committedDate": "2020-03-10T17:02:52Z", "message": "f"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "118d46acb9631dcd4c1b07c89fb796064bef1979", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/118d46acb9631dcd4c1b07c89fb796064bef1979", "committedDate": "2020-03-11T09:53:49Z", "message": "f"}, "afterCommit": {"oid": "237c6aa7a7a6eeb326e167a16c41ecbee6744ec1", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/237c6aa7a7a6eeb326e167a16c41ecbee6744ec1", "committedDate": "2020-03-11T10:34:52Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nApplications/tests that want to start caches individually\ncan use the DefaultCacheManager constructors with a start\nparameter."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "237c6aa7a7a6eeb326e167a16c41ecbee6744ec1", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/237c6aa7a7a6eeb326e167a16c41ecbee6744ec1", "committedDate": "2020-03-11T10:34:52Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nApplications/tests that want to start caches individually\ncan use the DefaultCacheManager constructors with a start\nparameter."}, "afterCommit": {"oid": "2d8a8e99b5be996153cfc346fd639ba4a4ff3ae2", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/2d8a8e99b5be996153cfc346fd639ba4a4ff3ae2", "committedDate": "2020-03-11T10:35:46Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nCaches are started on a single thread, to avoid overloading\nthe blocking thread pool.\n\nApplications/tests that want to start caches individually\nhave to define the caches after starting the DefaultCacheManager."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f603ff8d88efbefb200af5365b00e6e4f42831fc", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/f603ff8d88efbefb200af5365b00e6e4f42831fc", "committedDate": "2020-03-11T15:42:24Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nCaches are started on a single thread, to avoid overloading\nthe blocking thread pool.\n\nApplications/tests that want to start caches individually\nhave to define the caches after starting the DefaultCacheManager."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d8a8e99b5be996153cfc346fd639ba4a4ff3ae2", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/2d8a8e99b5be996153cfc346fd639ba4a4ff3ae2", "committedDate": "2020-03-11T10:35:46Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nCaches are started on a single thread, to avoid overloading\nthe blocking thread pool.\n\nApplications/tests that want to start caches individually\nhave to define the caches after starting the DefaultCacheManager."}, "afterCommit": {"oid": "f603ff8d88efbefb200af5365b00e6e4f42831fc", "author": {"user": {"login": "danberindei", "name": "Dan Berindei"}}, "url": "https://github.com/infinispan/infinispan/commit/f603ff8d88efbefb200af5365b00e6e4f42831fc", "committedDate": "2020-03-11T15:42:24Z", "message": "ISPN-11435 DefaultCacheManager should start all defined caches\n\nHotRodServer tries to pre-start all defined caches,\nbut this should happen everywhere, not just in the server.\n\nCaches are started on a single thread, to avoid overloading\nthe blocking thread pool.\n\nApplications/tests that want to start caches individually\nhave to define the caches after starting the DefaultCacheManager."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1088, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}