{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTk0OTkx", "number": 8750, "title": "ISPN-12383 improve marshalling docs", "bodyText": "https://issues.redhat.com/browse/ISPN-12383", "createdAt": "2020-10-06T14:35:38Z", "url": "https://github.com/infinispan/infinispan/pull/8750", "merged": true, "mergeCommit": {"oid": "169e38f09f0f53866f2d8f149228b3e09a49c76f"}, "closed": true, "closedAt": "2020-10-19T19:40:03Z", "author": {"login": "oraNod"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQJs63AFqTUwMzY5NTU0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUJebTAH2gAyNDk4NTk0OTkxOjg2YTQyNjhmMWVkMjI0MGFhOGI0ZGU3MjRlMmMyODJiNWFlNjkxNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjk1NTQw", "url": "https://github.com/infinispan/infinispan/pull/8750#pullrequestreview-503695540", "createdAt": "2020-10-07T09:33:12Z", "commit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozMzoxMlrOHdqzgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozNzoyM1rOHdq9tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3MjA2NQ==", "bodyText": "This isn't required for protostream, so this should just be linked from the docs of Marshallers that require it, e.g. JavaSerializationMarshaller or JbossUserMarshaller.", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500872065", "createdAt": "2020-10-07T09:33:12Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/stories/assembly_marshalling_user_types.adoc", "diffHunk": "@@ -0,0 +1,16 @@\n+[id='marshalling_user_types']\n+:context: marshalling\n+= Marshalling User Types with ProtoStream\n+User types are Java objects that {brandname} does not support out of the box.\n+To marshall user types, you implement the `SerializationContextInitializer`\n+interface to describe your Java objects so that the ProtoStream library can\n+encode them to Protobuf format and {brandname} can transmit and store them.\n+\n+include::{topics}/proc_generating_protostream_sci.adoc[leveloffset=+1]\n+include::{topics}/proc_manually_registering_sci.adoc[leveloffset=+2]\n+include::{topics}/proc_implementing_protostream_sci.adoc[leveloffset=+1]\n+include::{topics}/proc_adding_deserialization_allowlist.adoc[leveloffset=+1]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDY3OA==", "bodyText": "When manually creating a SCI it's necessary to register it with the configuration as described in Manually Registering Serialization Context Initializers. This is a usability issue until Adrian's new API is available, as it means that if users have to create a single manual SCI for external types, then they also have to register all generated SCIs manually.", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500874678", "createdAt": "2020-10-07T09:37:23Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/topics/proc_implementing_protostream_sci.adoc", "diffHunk": "@@ -0,0 +1,56 @@\n+[id='implementing_proto_marshallers']\n+= Manually Implementing Serialization Context Initializers\n+In some cases you might need to manually define Protobuf schemas and implement\n+ProtoStream marshallers. For example, if you cannot modify Java object classes\n+to add annotations.\n+\n+[NOTE]\n+====\n+This method for manually implementing the `SerializationContextInitializer`\n+interface is deprecated.\n+//Adrian to provide details on API change as an alternative. Users can provide annotations in different context to create bridge classes.\n+====\n+\n+.Procedure\n+\n+. Create a Protobuf schema, `.proto` file, that provides a structured\n+representations of the Java objects to marshall.\n++\n+[source,proto]\n+----\n+include::config_examples/library.proto[]\n+----\n++\n+The preceding `.library.proto` file defines an entity (Protobuf message type)\n+named _Book_ that is contained in the _book_sample_ package. _Book_ declares\n+several fields of primitive types and an array (Protobuf repeatable field)\n+named _authors_, which is the _Author_ message type.\n++\n+* You can nest messages but the resulting structure is strictly a tree, never a graph.\n+* Type inheritance is not possible.\n+* Collections are not supported but you can emulate arrays with repeated fields.\n++\n+. Use the `org.infinispan.protostream.MessageMarshaller` interface to implement\n+marshallers for your classes.\n++\n+[source,java]\n+.BookMarshaller.java\n+----\n+include::code_examples/BookMarshaller.java[]\n+----\n++\n+[source,java]\n+.AuthorMarshaller.java\n+----\n+include::code_examples/AuthorMarshaller.java[]\n+----\n++\n+. Create a `SerializationContextInitializer` implementation that registers the\n+`.proto` schema and the ProtoStream marshaller implementations with a\n+`SerializationContext`.\n++\n+[source,java]\n+.ManualSerializationContextInitializer.java\n+----\n+include::code_examples/ManualSerializationContextInitializer.java[]\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNzAwNTMx", "url": "https://github.com/infinispan/infinispan/pull/8750#pullrequestreview-503700531", "createdAt": "2020-10-07T09:39:32Z", "commit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozOTozMlrOHdrC1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozOTozMlrOHdrC1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTk4OQ==", "bodyText": "Is this story included anywhere?", "url": "https://github.com/infinispan/infinispan/pull/8750#discussion_r500875989", "createdAt": "2020-10-07T09:39:32Z", "author": {"login": "ryanemerson"}, "path": "documentation/src/main/asciidoc/stories/assembly_marshaller_implementations.adoc", "diffHunk": "@@ -0,0 +1,17 @@\n+[id='marshaller_implementations']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a69b3121b60a78704b5a198a555fb076207a01e9", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/a69b3121b60a78704b5a198a555fb076207a01e9", "committedDate": "2020-10-06T14:34:50Z", "message": "ISPN-12383 improve marshalling docs"}, "afterCommit": {"oid": "5b77f5440744a62d67a5e83199ee5966715a16c0", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5b77f5440744a62d67a5e83199ee5966715a16c0", "committedDate": "2020-10-07T11:42:34Z", "message": "ISPN-12383 improve marshalling docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODY5Njc0", "url": "https://github.com/infinispan/infinispan/pull/8750#pullrequestreview-503869674", "createdAt": "2020-10-07T13:20:06Z", "commit": {"oid": "5b77f5440744a62d67a5e83199ee5966715a16c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c4dced2d0fd5b352351544c4d19d07ec869d519", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/4c4dced2d0fd5b352351544c4d19d07ec869d519", "committedDate": "2020-10-08T13:33:13Z", "message": "ISPN-12383 improve marshalling docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b77f5440744a62d67a5e83199ee5966715a16c0", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/5b77f5440744a62d67a5e83199ee5966715a16c0", "committedDate": "2020-10-07T11:42:34Z", "message": "ISPN-12383 improve marshalling docs"}, "afterCommit": {"oid": "4c4dced2d0fd5b352351544c4d19d07ec869d519", "author": {"user": {"login": "oraNod", "name": "Don Naro"}}, "url": "https://github.com/infinispan/infinispan/commit/4c4dced2d0fd5b352351544c4d19d07ec869d519", "committedDate": "2020-10-08T13:33:13Z", "message": "ISPN-12383 improve marshalling docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86a4268f1ed2240aa8b4de724e2c282b5ae69166", "author": {"user": {"login": "tristantarrant", "name": "Tristan Tarrant"}}, "url": "https://github.com/infinispan/infinispan/commit/86a4268f1ed2240aa8b4de724e2c282b5ae69166", "committedDate": "2020-10-19T19:38:06Z", "message": "Merge branch 'master' into ISPN-12383_marshalling"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 355, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}