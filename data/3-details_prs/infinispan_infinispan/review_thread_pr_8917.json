{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODIyOTE5", "number": 8917, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxODo1NlrOFECHMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTowODoxN1rOFFeh4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzczMjM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/commands/triangle/BackupWriteCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxODo1NlrOID9Tuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNToxMToyMlrOIFVHuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTExNQ==", "bodyText": "nit: can you merge FlagBitSets.SKIP_LOCKING to the line above and remove this line?", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541021115", "createdAt": "2020-12-11T15:18:56Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/commands/triangle/BackupWriteCommand.java", "diffHunk": "@@ -46,7 +46,8 @@\n    public final CompletionStage<?> invokeAsync(ComponentRegistry componentRegistry) {\n       WriteCommand command = createWriteCommand();\n       command.init(componentRegistry);\n-      command.setFlagsBitSet(flags);\n+      // Mark the command as a backup write\n+      command.setFlagsBitSet(flags | FlagBitSets.BACKUP_WRITE);\n       command.addFlags(FlagBitSets.SKIP_LOCKING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ1OTgzNQ==", "bodyText": "Ah yes, didn't notice \ud83d\udc4d", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r542459835", "createdAt": "2020-12-14T15:11:22Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/commands/triangle/BackupWriteCommand.java", "diffHunk": "@@ -46,7 +46,8 @@\n    public final CompletionStage<?> invokeAsync(ComponentRegistry componentRegistry) {\n       WriteCommand command = createWriteCommand();\n       command.init(componentRegistry);\n-      command.setFlagsBitSet(flags);\n+      // Mark the command as a backup write\n+      command.setFlagsBitSet(flags | FlagBitSets.BACKUP_WRITE);\n       command.addFlags(FlagBitSets.SKIP_LOCKING);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTExNQ=="}, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Nzc0MTg3OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMDo1OVrOID9ZVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMDo1OVrOID9ZVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMjU1MQ==", "bodyText": "unused. can be removed.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541022551", "createdAt": "2020-12-11T15:20:59Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Nzc0ODczOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMjoxN1rOID9dWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNTo1NDowNVrOIFXQKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMzU3Nw==", "bodyText": "so, isn't the replicated cache affected by this?", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541023577", "createdAt": "2020-12-11T15:22:17Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ2Njg0OA==", "bodyText": "It is, but the test wasn't utilizing it :(", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r542466848", "createdAt": "2020-12-14T15:20:05Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMzU3Nw=="}, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ2ODE4NA==", "bodyText": "I will try to tweak it to add it, requires slightly different rpc handling.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r542468184", "createdAt": "2020-12-14T15:21:44Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMzU3Nw=="}, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NDc2MQ==", "bodyText": "REPL is broken atm, have to figure out how to fix it still.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r542494761", "createdAt": "2020-12-14T15:54:05Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMzU3Nw=="}, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzgwMDE2OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozMzoxM1rOID97wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNToxMjowMVrOIFVJ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzMTM2MA==", "bodyText": "for completeness :)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               }\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache0.get(key));\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache1.get(key));\n          \n          \n            \n               assertEquals(value + \"-expire-backup\", cache2.get(key));\n          \n          \n            \n               }", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r541031360", "createdAt": "2020-12-11T15:33:13Z", "author": {"login": "pruivo"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {\n+         throw new SkipException(\"Test isn't supported in transactional mode\");\n+      }\n+      Object key = createKey(cache0, cache1);\n+      String value = key.toString();\n+      cache0.put(key, value,10, TimeUnit.SECONDS);\n+\n+      final ControlledRpcManager controlledRpcManager = ControlledRpcManager.replaceRpcManager(cache0);\n+      controlledRpcManager.excludeCommands(PutKeyValueCommand.class);\n+\n+      try {\n+         Future<String> result = fork(() -> cache0.put(key, value + \"-expire-backup\"));\n+\n+         ControlledRpcManager.BlockedRequest<BackupWriteCommand> blockedRequest = controlledRpcManager.expectCommand(BackupWriteCommand.class);\n+\n+         incrementAllTimeServices(11, TimeUnit.SECONDS);\n+\n+         blockedRequest.send();\n+\n+         assertEquals(value, result.get(10, TimeUnit.SECONDS));\n+      } finally {\n+         controlledRpcManager.revertRpcManager();\n+      }\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ2MDM4MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r542460381", "createdAt": "2020-12-14T15:12:01Z", "author": {"login": "wburns"}, "path": "core/src/test/java/org/infinispan/expiration/impl/ClusterExpirationFunctionalTest.java", "diffHunk": "@@ -432,4 +439,32 @@ private void testMaxIdleNodeDies(Function<Cache<Object, String>, Object> keyToUs\n \n       assertNotNull(cache1.get(key));\n    }\n+\n+   public static final int LIFESPAN = 64;\n+\n+   public void testPrimaryNotExpiredButBackupWas() throws InterruptedException, ExecutionException, TimeoutException {\n+      if (transactional || cacheMode != CacheMode.DIST_SYNC) {\n+         throw new SkipException(\"Test isn't supported in transactional mode\");\n+      }\n+      Object key = createKey(cache0, cache1);\n+      String value = key.toString();\n+      cache0.put(key, value,10, TimeUnit.SECONDS);\n+\n+      final ControlledRpcManager controlledRpcManager = ControlledRpcManager.replaceRpcManager(cache0);\n+      controlledRpcManager.excludeCommands(PutKeyValueCommand.class);\n+\n+      try {\n+         Future<String> result = fork(() -> cache0.put(key, value + \"-expire-backup\"));\n+\n+         ControlledRpcManager.BlockedRequest<BackupWriteCommand> blockedRequest = controlledRpcManager.expectCommand(BackupWriteCommand.class);\n+\n+         incrementAllTimeServices(11, TimeUnit.SECONDS);\n+\n+         blockedRequest.send();\n+\n+         assertEquals(value, result.get(10, TimeUnit.SECONDS));\n+      } finally {\n+         controlledRpcManager.revertRpcManager();\n+      }\n+   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzMTM2MA=="}, "originalCommit": {"oid": "4bff8e865ee0fd5d9121ec8449667fc97e3e3ef7"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjg3Mzk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/interceptors/distribution/BaseDistributionInterceptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTowODoxN1rOIGATxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDo0MzozM1rOIGO33w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NzQyOA==", "bodyText": "I think you have to remove the flag after sending (after line 280 below). if the command retries (topology changed), the command will have this flag on the primary owner.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r543167428", "createdAt": "2020-12-15T09:08:17Z", "author": {"login": "pruivo"}, "path": "core/src/main/java/org/infinispan/interceptors/distribution/BaseDistributionInterceptor.java", "diffHunk": "@@ -270,6 +270,8 @@ protected Object primaryReturnHandler(InvocationContext ctx, AbstractDataWriteCo\n       }\n       MapResponseCollector collector = MapResponseCollector.ignoreLeavers(isReplicated, owners.size());\n       RpcOptions rpcOptions = rpcManager.getSyncRpcOptions();\n+      // Mark the command as a backup write so it can skip some checks\n+      command.addFlags(FlagBitSets.BACKUP_WRITE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNjA0Nw==", "bodyText": "Makes sense, let me take a closer look.", "url": "https://github.com/infinispan/infinispan/pull/8917#discussion_r543406047", "createdAt": "2020-12-15T14:43:33Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/interceptors/distribution/BaseDistributionInterceptor.java", "diffHunk": "@@ -270,6 +270,8 @@ protected Object primaryReturnHandler(InvocationContext ctx, AbstractDataWriteCo\n       }\n       MapResponseCollector collector = MapResponseCollector.ignoreLeavers(isReplicated, owners.size());\n       RpcOptions rpcOptions = rpcManager.getSyncRpcOptions();\n+      // Mark the command as a backup write so it can skip some checks\n+      command.addFlags(FlagBitSets.BACKUP_WRITE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NzQyOA=="}, "originalCommit": {"oid": "0fc6a6a089a0418edcaa0d9ddd7be10a9393bdb5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}