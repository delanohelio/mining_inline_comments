{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTM1Mjgw", "number": 7865, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTowNzo0N1rODf0h2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxNTo1NFrODf10ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjkzMDgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwOTowNzo0N1rOFpvwHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo0MTo0M1rOFpyfIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxODMwMw==", "bodyText": "I'd leave them the way they were, neither changing all the components nor having a different convention per file doesn't sound very appealing.", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379318303", "createdAt": "2020-02-14T09:07:47Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -49,12 +49,18 @@\n \n    public static final String CACHE_SCOPE = \"cache\";\n \n-   @Inject EmbeddedCacheManager cacheManager;\n-   @Inject LocalTopologyManager localTopologyManager;\n-   @Inject ConfigurationManager configurationManager;\n-   @Inject InternalCacheRegistry internalCacheRegistry;\n-   @Inject GlobalComponentRegistry globalComponentRegistry;\n-   @Inject @ComponentName(KnownComponentNames.ASYNC_OPERATIONS_EXECUTOR)\n+   @Inject\n+   EmbeddedCacheManager cacheManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2MzEwNg==", "bodyText": "That was my IDE reformatting at work :)", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379363106", "createdAt": "2020-02-14T10:41:43Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -49,12 +49,18 @@\n \n    public static final String CACHE_SCOPE = \"cache\";\n \n-   @Inject EmbeddedCacheManager cacheManager;\n-   @Inject LocalTopologyManager localTopologyManager;\n-   @Inject ConfigurationManager configurationManager;\n-   @Inject InternalCacheRegistry internalCacheRegistry;\n-   @Inject GlobalComponentRegistry globalComponentRegistry;\n-   @Inject @ComponentName(KnownComponentNames.ASYNC_OPERATIONS_EXECUTOR)\n+   @Inject\n+   EmbeddedCacheManager cacheManager;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMxODMwMw=="}, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzEyNjIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxMTowMFrOFpxljw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo0NjozOFrOFpynwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODM2Nw==", "bodyText": "This is kind of confusing, both the local persistent state and the state cache can be said to hold existing configuration state. Could you rename the variables a bit to make it clear where each came from?", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379348367", "createdAt": "2020-02-14T10:11:00Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -85,18 +91,42 @@ void start() {\n       parserRegistry = new ParserRegistry();\n \n       localConfigurationManager.initialize(cacheManager, configurationManager, executorService);\n+\n+      // Load any state we previously had", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NTMxMg==", "bodyText": "I have renamed things to make things clearer", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379365312", "createdAt": "2020-02-14T10:46:38Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -85,18 +91,42 @@ void start() {\n       parserRegistry = new ParserRegistry();\n \n       localConfigurationManager.initialize(cacheManager, configurationManager, executorService);\n+\n+      // Load any state we previously had", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0ODM2Nw=="}, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzE0MjEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxNTo1NFrOFpxvNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo0NjoyMlrOFpynOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MDgzOQ==", "bodyText": "I'm not sure if this is ok. Some attributes are validated against the global configuration, and they may not be valid with the current global configuration.", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379350839", "createdAt": "2020-02-14T10:15:54Z", "author": {"login": "danberindei"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -172,11 +202,15 @@ void start() {\n \n    CompletableFuture<Void> createCacheLocally(String name, CacheState state) {\n       log.debugf(\"Create cache %s\", name);\n-      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n-      Configuration configuration = builderHolder.getNamedConfigurationBuilders().get(name).build();\n+      Configuration configuration = buildConfiguration(name, state);\n       return localConfigurationManager.createCache(name, state.getTemplate(), configuration, state.getFlags());\n    }\n \n+   private Configuration buildConfiguration(String name, CacheState state) {\n+      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n+      return builderHolder.getNamedConfigurationBuilders().get(name).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2NTE3OQ==", "bodyText": "I now build against the global configuration", "url": "https://github.com/infinispan/infinispan/pull/7865#discussion_r379365179", "createdAt": "2020-02-14T10:46:22Z", "author": {"login": "tristantarrant"}, "path": "core/src/main/java/org/infinispan/globalstate/impl/GlobalConfigurationManagerImpl.java", "diffHunk": "@@ -172,11 +202,15 @@ void start() {\n \n    CompletableFuture<Void> createCacheLocally(String name, CacheState state) {\n       log.debugf(\"Create cache %s\", name);\n-      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n-      Configuration configuration = builderHolder.getNamedConfigurationBuilders().get(name).build();\n+      Configuration configuration = buildConfiguration(name, state);\n       return localConfigurationManager.createCache(name, state.getTemplate(), configuration, state.getFlags());\n    }\n \n+   private Configuration buildConfiguration(String name, CacheState state) {\n+      ConfigurationBuilderHolder builderHolder = parserRegistry.parse(state.getConfiguration());\n+      return builderHolder.getNamedConfigurationBuilders().get(name).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MDgzOQ=="}, "originalCommit": {"oid": "624e60e2fcdd3782c0c06239844d9e9790a604be"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}