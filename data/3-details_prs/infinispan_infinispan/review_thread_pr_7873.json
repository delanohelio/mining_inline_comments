{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzQ1MDYy", "number": 7873, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMDozMVrODe4mqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMTowMlrODe4nmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzExMjc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMDozMVrOFoRLug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMzoyNlrOFoRTBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA==", "bodyText": "No, this does not start JMX :) Please name it registerMBeans.", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377768890", "createdAt": "2020-02-11T17:00:31Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -523,27 +523,31 @@ protected void startJGroupsChannelIfNeeded() {\n          } catch (Exception e) {\n             throw new CacheException(\"Unable to start JGroups Channel\", e);\n          }\n-\n-         try {\n-            // Normally this would be done by CacheManagerJmxRegistration but\n-            // the channel is not started when the cache manager starts but\n-            // when first cache starts, so it's safer to do it here.\n-            globalStatsEnabled = configuration.statistics();\n-            if (globalStatsEnabled) {\n-               // TODO Use the overloaded variant when available: https://issues.jboss.org/browse/JGRP-2394\n-               JmxConfigurator.registerChannel(channel, jmxRegistration.getMBeanServer(), jmxRegistration.getDomain(), clusterName, true);\n-            }\n-         } catch (Exception e) {\n-            throw new CacheException(\"Channel connected, but unable to register MBeans\", e);\n-         }\n       }\n+      startJmxIfNeeded(clusterName);\n       if (!connectChannel) {\n          // the channel was already started externally, we need to initialize our member list\n          receiveClusterView(channel.getView());\n       }\n       CLUSTER.localAndPhysicalAddress(clusterName, getAddress(), getPhysicalAddresses());\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void startJmxIfNeeded(String clusterName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf2f790073832fb6b970122a412a9edf0e96871"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3MDc1Nw==", "bodyText": "Okay.", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377770757", "createdAt": "2020-02-11T17:03:26Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -523,27 +523,31 @@ protected void startJGroupsChannelIfNeeded() {\n          } catch (Exception e) {\n             throw new CacheException(\"Unable to start JGroups Channel\", e);\n          }\n-\n-         try {\n-            // Normally this would be done by CacheManagerJmxRegistration but\n-            // the channel is not started when the cache manager starts but\n-            // when first cache starts, so it's safer to do it here.\n-            globalStatsEnabled = configuration.statistics();\n-            if (globalStatsEnabled) {\n-               // TODO Use the overloaded variant when available: https://issues.jboss.org/browse/JGRP-2394\n-               JmxConfigurator.registerChannel(channel, jmxRegistration.getMBeanServer(), jmxRegistration.getDomain(), clusterName, true);\n-            }\n-         } catch (Exception e) {\n-            throw new CacheException(\"Channel connected, but unable to register MBeans\", e);\n-         }\n       }\n+      startJmxIfNeeded(clusterName);\n       if (!connectChannel) {\n          // the channel was already started externally, we need to initialize our member list\n          receiveClusterView(channel.getView());\n       }\n       CLUSTER.localAndPhysicalAddress(clusterName, getAddress(), getPhysicalAddresses());\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void startJmxIfNeeded(String clusterName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA=="}, "originalCommit": {"oid": "fcf2f790073832fb6b970122a412a9edf0e96871"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzExNTEzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMTowMlrOFoRNFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzowMzozMVrOFoRTMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2OTIzNw==", "bodyText": "unregisterMBeans", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377769237", "createdAt": "2020-02-11T17:01:02Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -807,6 +809,13 @@ public void stop() {\n       }\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void stopJmxIfNeeded(String clusterName) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf2f790073832fb6b970122a412a9edf0e96871"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc3MDgwMg==", "bodyText": "Okay.", "url": "https://github.com/infinispan/infinispan/pull/7873#discussion_r377770802", "createdAt": "2020-02-11T17:03:31Z", "author": {"login": "wburns"}, "path": "core/src/main/java/org/infinispan/remoting/transport/jgroups/JGroupsTransport.java", "diffHunk": "@@ -807,6 +809,13 @@ public void stop() {\n       }\n    }\n \n+   // This needs to stay as a separate method to allow for substitution for Substrate\n+   private void stopJmxIfNeeded(String clusterName) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2OTIzNw=="}, "originalCommit": {"oid": "fcf2f790073832fb6b970122a412a9edf0e96871"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4459, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}