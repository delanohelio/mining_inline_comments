{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MzY2ODkx", "number": 8060, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToyMDo1MVrODp1LuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo1NzowNlrODrLhaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTg5NTYwOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/config_examples/hotrod_java_client.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToyMDo1MVrOF5P5KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTozNzo1MFrOF5QWwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3MzU0NQ==", "bodyText": "no <scope>", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r395573545", "createdAt": "2020-03-20T11:20:51Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/config_examples/hotrod_java_client.xml", "diffHunk": "@@ -0,0 +1,6 @@\n+<dependency>\n+  <groupId>org.infinispan</groupId>\n+  <artifactId>infinispan-client-hotrod</artifactId>\n+  <version>${version.infinispan}</version>\n+  <scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5172d5e8d8c08f0a66fad34cccd2d2e5757d324"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU4MTEyMA==", "bodyText": "fixed @pruivo thanks", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r395581120", "createdAt": "2020-03-20T11:37:50Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/config_examples/hotrod_java_client.xml", "diffHunk": "@@ -0,0 +1,6 @@\n+<dependency>\n+  <groupId>org.infinispan</groupId>\n+  <artifactId>infinispan-client-hotrod</artifactId>\n+  <version>${version.infinispan}</version>\n+  <scope>test</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3MzU0NQ=="}, "originalCommit": {"oid": "b5172d5e8d8c08f0a66fad34cccd2d2e5757d324"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTkwMDkxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToyMjo0M1rOF5P8kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTozNzoyN1rOF5QWIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3NDQxOQ==", "bodyText": "we no longer zip the java hot rod client. Users must use the maven coordinates.", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r395574419", "createdAt": "2020-03-20T11:22:43Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "diffHunk": "@@ -1,6 +1,6 @@\n [id='download_java_client']\n-= Downloading the Hot Rod Java Client\n-{brandname} provides a reference Hot Rod Java client implementation.\n+= Getting the Hot Rod Java Client\n+{brandname} provides a Hot Rod Java client implementation.\n \n //Community\n ifndef::productized[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5172d5e8d8c08f0a66fad34cccd2d2e5757d324"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU4MDk2MA==", "bodyText": "thanks @pruivo fixed", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r395580960", "createdAt": "2020-03-20T11:37:27Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "diffHunk": "@@ -1,6 +1,6 @@\n [id='download_java_client']\n-= Downloading the Hot Rod Java Client\n-{brandname} provides a reference Hot Rod Java client implementation.\n+= Getting the Hot Rod Java Client\n+{brandname} provides a Hot Rod Java client implementation.\n \n //Community\n ifndef::productized[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3NDQxOQ=="}, "originalCommit": {"oid": "b5172d5e8d8c08f0a66fad34cccd2d2e5757d324"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTk1MzcxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/code_examples/HotRodConnectionPools.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozMTo0MlrOF7W5kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozMTo0MlrOF7W5kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4NTQ5MA==", "bodyText": "These lines aren't aligned. Space is missing.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               //Configure client connection pools.\n          \n          \n            \n               .connectionPool()\n          \n          \n            \n                //Configure client connection pools.\n          \n          \n            \n                .connectionPool()", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397785490", "createdAt": "2020-03-25T11:31:42Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/code_examples/HotRodConnectionPools.java", "diffHunk": "@@ -2,8 +2,12 @@\n clientBuilder\n    .addServer()\n     .host(\"127.0.0.1\")\n-    .port(11222);\n-   .connectionPool() <1>\n-    .maxActive(10) <2>\n-    .minIdle(20); <3>\n+    .port(11222)\n+   //Configure client connection pools.\n+   .connectionPool()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTk3MzY1OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozNzoyNFrOF7XFrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozMTo0MFrOF7Y16Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4ODU4OQ==", "bodyText": "this path doesn't exist:\nUnresolved directive in ../../topics/proc_download_hotrod_java_client.adoc - include::dependencies_maven/hotrod_java_client.xml[]", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397788589", "createdAt": "2020-03-25T11:37:24Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "diffHunk": "@@ -1,13 +1,9 @@\n [id='download_java_client']\n-= Downloading the Hot Rod Java Client\n-{brandname} provides a reference Hot Rod Java client implementation.\n+= Getting the Hot Rod Java Client\n \n-//Community\n-ifndef::productized[]\n-Visit the link:http://infinispan.org/hotrod-clients[Hot Rod clients] page on _infinispan.org_ to download the Java client and find client implementations in other languages.\n-endif::productized[]\n+Add the `infinispan-client-hotrod` dependency to your `pom.xml` as follows:\n \n-//Product\n-ifdef::productized[]\n-Visit the link:{download_url}[{brandname} downloads] page on the {portal} to download the Java client and find client implementations in other languages.\n-endif::productized[]\n+[source,xml]\n+----\n+include::dependencies_maven/hotrod_java_client.xml[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxNzMyMQ==", "bodyText": "oh, man! thanks for catching that @pruivo", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397817321", "createdAt": "2020-03-25T12:31:40Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/proc_download_hotrod_java_client.adoc", "diffHunk": "@@ -1,13 +1,9 @@\n [id='download_java_client']\n-= Downloading the Hot Rod Java Client\n-{brandname} provides a reference Hot Rod Java client implementation.\n+= Getting the Hot Rod Java Client\n \n-//Community\n-ifndef::productized[]\n-Visit the link:http://infinispan.org/hotrod-clients[Hot Rod clients] page on _infinispan.org_ to download the Java client and find client implementations in other languages.\n-endif::productized[]\n+Add the `infinispan-client-hotrod` dependency to your `pom.xml` as follows:\n \n-//Product\n-ifdef::productized[]\n-Visit the link:{download_url}[{brandname} downloads] page on the {portal} to download the Java client and find client implementations in other languages.\n-endif::productized[]\n+[source,xml]\n+----\n+include::dependencies_maven/hotrod_java_client.xml[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4ODU4OQ=="}, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTk3ODE2OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_forcing_return_values.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozODo0MVrOF7XIVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozODo0MVrOF7XIVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4OTI3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To reduce the amount of data sent across the network, RemoteCache operations\n          \n          \n            \n            To reduce the amount of data sent across the network, `RemoteCache` operations", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397789271", "createdAt": "2020-03-25T11:38:41Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_forcing_return_values.adoc", "diffHunk": "@@ -0,0 +1,29 @@\n+[id='hotrod_return_values']\n+= Forcing Return Values\n+Method calls that modify entries can return previous values for keys, for\n+example:\n+\n+[source,java]\n+----\n+V remove(Object key);\n+V put(K key, V value);\n+----\n+\n+To reduce the amount of data sent across the network, RemoteCache operations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTk4MDMyOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/proc_forcing_return_values.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozOToyMVrOF7XJtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTozOToyMVrOF7XJtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4OTYyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            always return null values.\n          \n          \n            \n            always return `null` values.", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397789621", "createdAt": "2020-03-25T11:39:21Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/proc_forcing_return_values.adoc", "diffHunk": "@@ -0,0 +1,29 @@\n+[id='hotrod_return_values']\n+= Forcing Return Values\n+Method calls that modify entries can return previous values for keys, for\n+example:\n+\n+[source,java]\n+----\n+V remove(Object key);\n+V put(K key, V value);\n+----\n+\n+To reduce the amount of data sent across the network, RemoteCache operations\n+always return null values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjAwMDkxOnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/ref_hotrod_listeners.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo0NTowOVrOF7XWKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo0NTowOVrOF7XWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5MjgxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            factory name to the @ClientListener annotation:\n          \n          \n            \n            factory name to the `@ClientListener` annotation:", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397792810", "createdAt": "2020-03-25T11:45:09Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_hotrod_listeners.adoc", "diffHunk": "@@ -110,31 +110,32 @@ which statically filter out all entries except the one whose key is `1`.\n \n To be able to register a listener with this cache event filter factory,\n the factory has to be given a unique name, and the Hot Rod server needs to be\n-plugged with the name and the cache event filter factory instance. Plugging the\n-{brandname} Server with a custom filter involves the following steps:\n+plugged with the name and the cache event filter factory instance.\n \n-1. Create a JAR file with the filter implementation within it.\n-2. Optional: If the cache uses custom key/value classes, these must be\n+. Create a JAR file that contains the filter implementation.\n++\n+If the cache uses custom key/value classes, these must be\n included in the JAR so that the callbacks can be executed with the correctly\n unmarshalled key and/or value instances. If the client listener has `useRawData`\n enabled, this is not necessary since the callback key/value instances will be\n provided in binary format.\n-3. Create a `META-INF/services/org.infinispan.notifications.cachelistener.filter.CacheEventFilterFactory` file\n++\n+. Create a `META-INF/services/org.infinispan.notifications.cachelistener.filter.CacheEventFilterFactory` file\n within the JAR file and within it, write the fully qualified class name of the\n filter class implementation.\n-4. Deploy the JAR file in the {brandname} Server.\n-\n-On top of that, the client listener needs to be linked with this cache event\n-filter factory by adding the factory's name to the @ClientListener annotation:\n-\n+. Add the JAR file to the `server/lib` directory of your {brandname} server\n+installation directory.\n+. Link the client listener with this cache event filter factory by adding the\n+factory name to the @ClientListener annotation:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjA0MTM3OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/topics/ref_hotrod_remote_cache.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo1NzowNlrOF7XupA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozMzo1MVrOF7Y6fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5OTA3Ng==", "bodyText": "this example can be removed IMO. it didn't add much to the docs.", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397799076", "createdAt": "2020-03-25T11:57:06Z", "author": {"login": "pruivo"}, "path": "documentation/src/main/asciidoc/topics/ref_hotrod_remote_cache.adoc", "diffHunk": "@@ -48,7 +49,7 @@ have to copy the contents yourself. Also you can do this with `entrySet` and\n Set<K> keysCopy = remoteCache.keySet().stream().collect(Collectors.toSet());\n ----\n \n-Please use extreme cautiong with this as a large number of keys can and will cause\n+Please use extreme caution with this as a large number of keys can and will cause\n OutOfMemoryError in the client.\n \n [source,java]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgxODQ5NQ==", "bodyText": "thanks. I've removed it.", "url": "https://github.com/infinispan/infinispan/pull/8060#discussion_r397818495", "createdAt": "2020-03-25T12:33:51Z", "author": {"login": "oraNod"}, "path": "documentation/src/main/asciidoc/topics/ref_hotrod_remote_cache.adoc", "diffHunk": "@@ -48,7 +49,7 @@ have to copy the contents yourself. Also you can do this with `entrySet` and\n Set<K> keysCopy = remoteCache.keySet().stream().collect(Collectors.toSet());\n ----\n \n-Please use extreme cautiong with this as a large number of keys can and will cause\n+Please use extreme caution with this as a large number of keys can and will cause\n OutOfMemoryError in the client.\n \n [source,java]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5OTA3Ng=="}, "originalCommit": {"oid": "3356a48421ffc96d64c6cc59a571ec55fc2c8713"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4455, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}