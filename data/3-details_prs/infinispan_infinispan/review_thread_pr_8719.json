{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNTU2NzY4", "number": 8719, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo1OTo1NVrOEn_H_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo0MDo0MVrOEoBacw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzY0MTU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo1OTo1NVrOHY0mLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODo1OTo1NVrOHY0mLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4OTYxNA==", "bodyText": "This addition ensures inheritance works properly when inheriting from an old base config that uses index`` or auto-configattributes rather thanenabled```.  Do you think it's worth adding this explanation in code @gustavonalle ?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495789614", "createdAt": "2020-09-28T08:59:55Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/cache/IndexingConfigurationBuilder.java", "diffHunk": "@@ -337,11 +349,18 @@ public IndexingConfiguration create() {\n    @Override\n    public IndexingConfigurationBuilder read(IndexingConfiguration template) {\n       attributes.read(template.attributes());\n+      Index index = attributes.attribute(INDEX).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b22b4a06272dffa533b15a6d28401c5d68a4dc67"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzY3NjAzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTowODo1MlrOHY06yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0NzoxNFrOHY6CWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ==", "bodyText": "This should be done in the builder itself, in IndexingConfigurationBuilder#create(). The issue of doing here is it covers only XML parsing.", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495794891", "createdAt": "2020-09-28T09:08:52Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2755,6 +2755,11 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n+      if (!builder.indexing().enabled()) {\n+         // discard any eventually inherited indexing config if indexing is not enabled\n+         builder.indexing().reset();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b22b4a06272dffa533b15a6d28401c5d68a4dc67"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0ODE5MQ==", "bodyText": "indeed. but create() is too late because we cannot distinguish the inherited vs own. and we also don;t even have a ref to base config to try to figure out.", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495848191", "createdAt": "2020-09-28T10:43:54Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2755,6 +2755,11 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n+      if (!builder.indexing().enabled()) {\n+         // discard any eventually inherited indexing config if indexing is not enabled\n+         builder.indexing().reset();\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}, "originalCommit": {"oid": "b22b4a06272dffa533b15a6d28401c5d68a4dc67"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3NzQzMg==", "bodyText": "what about resetting everything in the builder whenever the index.setDisabled() is called?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495877432", "createdAt": "2020-09-28T11:44:27Z", "author": {"login": "gustavonalle"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2755,6 +2755,11 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n+      if (!builder.indexing().enabled()) {\n+         // discard any eventually inherited indexing config if indexing is not enabled\n+         builder.indexing().reset();\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}, "originalCommit": {"oid": "b22b4a06272dffa533b15a6d28401c5d68a4dc67"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODc0Nw==", "bodyText": "I've pushed a new WIP commit to try that.\nThis thing gets disgustingly tangled \ud83d\udc19", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495878747", "createdAt": "2020-09-28T11:47:14Z", "author": {"login": "anistor"}, "path": "core/src/main/java/org/infinispan/configuration/parsing/Parser.java", "diffHunk": "@@ -2755,6 +2755,11 @@ private void parseIndexing(XMLExtendedStreamReader reader, ConfigurationBuilderH\n          builder.indexing().enable();\n       }\n \n+      if (!builder.indexing().enabled()) {\n+         // discard any eventually inherited indexing config if indexing is not enabled\n+         builder.indexing().reset();\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NDg5MQ=="}, "originalCommit": {"oid": "b22b4a06272dffa533b15a6d28401c5d68a4dc67"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDAxNjUxOnYy", "diffSide": "RIGHT", "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo0MDo0MVrOHY4EuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDoxNjo0MlrOHaW1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ==", "bodyText": "searchMapping is null well before this loop, so why not complain earlier about it @gustavonalle ?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r495846585", "createdAt": "2020-09-28T10:40:41Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc0MjUxMQ==", "bodyText": "I put it here so that it can report that a specific type is not indexed. Where do you suggest to move it?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496742511", "createdAt": "2020-09-29T14:01:21Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2NTA0NQ==", "bodyText": "a few lines above we have a check:  if (cfg.indexing().enabled())  so how can searchMapping be null then here?  it seems the only way (according to SerializationContextSearchMapping class) is if there are no indexed entities configured for a cache that is declared as indexed, and that is something we also catch earlier. So my question is when is this newly introduced CacheConfigurationException (typeNotIndexed) actually happening (which btw I think duplicates another message)?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496765045", "createdAt": "2020-09-29T14:29:28Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3MDE0OQ==", "bodyText": "if (cfg.indexing().enabled()) so how can searchMapping be null then here?\n\nYou can have an odd situation where the cache is indexed, but none of the entities are marked as indexed. This causes some issues, for e.g. https://issues.redhat.com/browse/ISPN-12218\nI hope this validation will prevent it", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496770149", "createdAt": "2020-09-29T14:35:41Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3MzExNw==", "bodyText": "and that is something we also catch earlier\n\nI don't remember seeing this being handled, and correctly reporting that 'entity X is not indexed' (this is an important part). Is that related to your changes?", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496773117", "createdAt": "2020-09-29T14:39:29Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3NTc4Mg==", "bodyText": "anyway, there's a test for this error reporting https://github.com/infinispan/infinispan/pull/8719/files#diff-b375b40160f198a071885221ebdbb838\nIf you move the searchmapping check, and the test still passes, good!", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r496775782", "createdAt": "2020-09-29T14:42:42Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI3Mjc5NA==", "bodyText": "Looking deeper at this, the search mapping null check is wrong @gustavonalle . See the latest WIP commit I added and the commit comment.", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497272794", "createdAt": "2020-09-30T06:35:37Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5ODU0OQ==", "bodyText": "And I pushed another WIP, that fixes the issue.  After you have a quick look at it @gustavonalle I think I can squash those and merge this.", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497298549", "createdAt": "2020-09-30T07:30:32Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3NTY0OA==", "bodyText": "Good catch @anistor let's wait for CI", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497375648", "createdAt": "2020-09-30T09:36:49Z", "author": {"login": "gustavonalle"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5OTA5Ng==", "bodyText": "ci is taking a nap.", "url": "https://github.com/infinispan/infinispan/pull/8719#discussion_r497399096", "createdAt": "2020-09-30T10:16:42Z", "author": {"login": "anistor"}, "path": "remote-query/remote-query-server/src/main/java/org/infinispan/query/remote/impl/LifecycleManager.java", "diffHunk": "@@ -171,6 +174,9 @@ public void cacheStarting(ComponentRegistry cr, Configuration cfg, String cacheN\n                   if (!knownTypes.contains(typeName)) {\n                      throw new CacheConfigurationException(\"The declared indexed type '\" + typeName + \"' is not known. Please register its proto schema file first.\");\n                   }\n+                  if (searchMapping == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg0NjU4NQ=="}, "originalCommit": {"oid": "77b656466431c3cbaf982abde2203ecaae4f26f9"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3824, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}