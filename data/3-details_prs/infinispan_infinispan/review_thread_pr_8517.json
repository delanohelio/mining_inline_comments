{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTEyNTk0", "number": 8517, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MTowNFrOEKIWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MjozOVrOEKIZdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4MDYwOnYy", "diffSide": "RIGHT", "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MTowNFrOGq_vHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTowODowOVrOGrBCLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzYyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Features features = new Features(classLoader);\n          \n          \n            \n                  Features features = globalConfiguration.features();", "url": "https://github.com/infinispan/infinispan/pull/8517#discussion_r447737629", "createdAt": "2020-06-30T14:41:04Z", "author": {"login": "pruivo"}, "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "diffHunk": "@@ -43,14 +49,19 @@ public void cacheManagerStarting(GlobalComponentRegistry gcr, GlobalConfiguratio\n \n    @Override\n    public void cacheStarting(ComponentRegistry cr, Configuration configuration, String cacheName) {\n-      AnchoredKeysConfiguration anchoredKeysConfiguration =\n-            configuration.module(AnchoredKeysConfiguration.class);\n+      AnchoredKeysConfiguration anchoredKeysConfiguration = configuration.module(AnchoredKeysConfiguration.class);\n       if (anchoredKeysConfiguration == null || !anchoredKeysConfiguration.enabled())\n          return;\n \n       assert configuration.clustering().cacheMode().isReplicated();\n       assert !configuration.clustering().stateTransfer().awaitInitialTransfer();\n \n+      ClassLoader classLoader = cr.getGlobalComponentRegistry().getGlobalConfiguration().classLoader();\n+      Features features = new Features(classLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3b8d2ae9b7ba62cea9e120cfd4c485a7cf8387"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1ODg5NQ==", "bodyText": "\ud83d\udc4d I didn't know about that method", "url": "https://github.com/infinispan/infinispan/pull/8517#discussion_r447758895", "createdAt": "2020-06-30T15:08:09Z", "author": {"login": "ryanemerson"}, "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "diffHunk": "@@ -43,14 +49,19 @@ public void cacheManagerStarting(GlobalComponentRegistry gcr, GlobalConfiguratio\n \n    @Override\n    public void cacheStarting(ComponentRegistry cr, Configuration configuration, String cacheName) {\n-      AnchoredKeysConfiguration anchoredKeysConfiguration =\n-            configuration.module(AnchoredKeysConfiguration.class);\n+      AnchoredKeysConfiguration anchoredKeysConfiguration = configuration.module(AnchoredKeysConfiguration.class);\n       if (anchoredKeysConfiguration == null || !anchoredKeysConfiguration.enabled())\n          return;\n \n       assert configuration.clustering().cacheMode().isReplicated();\n       assert !configuration.clustering().stateTransfer().awaitInitialTransfer();\n \n+      ClassLoader classLoader = cr.getGlobalComponentRegistry().getGlobalConfiguration().classLoader();\n+      Features features = new Features(classLoader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzYyOQ=="}, "originalCommit": {"oid": "9a3b8d2ae9b7ba62cea9e120cfd4c485a7cf8387"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4MjcxOnYy", "diffSide": "RIGHT", "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MTozMFrOGq_waA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MzoxOVrOGq_1gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzk2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     throw LogFactory.getLog(MethodHandles.lookup().lookupClass()).featureDisabled(ANCHORED_KEYS_FEATURE);\n          \n          \n            \n                     throw Log.CONFIG.featureDisabled(ANCHORED_KEYS_FEATURE);", "url": "https://github.com/infinispan/infinispan/pull/8517#discussion_r447737960", "createdAt": "2020-06-30T14:41:30Z", "author": {"login": "pruivo"}, "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "diffHunk": "@@ -43,14 +49,19 @@ public void cacheManagerStarting(GlobalComponentRegistry gcr, GlobalConfiguratio\n \n    @Override\n    public void cacheStarting(ComponentRegistry cr, Configuration configuration, String cacheName) {\n-      AnchoredKeysConfiguration anchoredKeysConfiguration =\n-            configuration.module(AnchoredKeysConfiguration.class);\n+      AnchoredKeysConfiguration anchoredKeysConfiguration = configuration.module(AnchoredKeysConfiguration.class);\n       if (anchoredKeysConfiguration == null || !anchoredKeysConfiguration.enabled())\n          return;\n \n       assert configuration.clustering().cacheMode().isReplicated();\n       assert !configuration.clustering().stateTransfer().awaitInitialTransfer();\n \n+      ClassLoader classLoader = cr.getGlobalComponentRegistry().getGlobalConfiguration().classLoader();\n+      Features features = new Features(classLoader);\n+      if (!features.isAvailable(ANCHORED_KEYS_FEATURE)) {\n+         throw LogFactory.getLog(MethodHandles.lookup().lookupClass()).featureDisabled(ANCHORED_KEYS_FEATURE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3b8d2ae9b7ba62cea9e120cfd4c485a7cf8387"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczOTI2Nw==", "bodyText": "ps. method in commons logging: org.infinispan.commons.logging.Log;", "url": "https://github.com/infinispan/infinispan/pull/8517#discussion_r447739267", "createdAt": "2020-06-30T14:43:19Z", "author": {"login": "pruivo"}, "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "diffHunk": "@@ -43,14 +49,19 @@ public void cacheManagerStarting(GlobalComponentRegistry gcr, GlobalConfiguratio\n \n    @Override\n    public void cacheStarting(ComponentRegistry cr, Configuration configuration, String cacheName) {\n-      AnchoredKeysConfiguration anchoredKeysConfiguration =\n-            configuration.module(AnchoredKeysConfiguration.class);\n+      AnchoredKeysConfiguration anchoredKeysConfiguration = configuration.module(AnchoredKeysConfiguration.class);\n       if (anchoredKeysConfiguration == null || !anchoredKeysConfiguration.enabled())\n          return;\n \n       assert configuration.clustering().cacheMode().isReplicated();\n       assert !configuration.clustering().stateTransfer().awaitInitialTransfer();\n \n+      ClassLoader classLoader = cr.getGlobalComponentRegistry().getGlobalConfiguration().classLoader();\n+      Features features = new Features(classLoader);\n+      if (!features.isAvailable(ANCHORED_KEYS_FEATURE)) {\n+         throw LogFactory.getLog(MethodHandles.lookup().lookupClass()).featureDisabled(ANCHORED_KEYS_FEATURE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzk2MA=="}, "originalCommit": {"oid": "9a3b8d2ae9b7ba62cea9e120cfd4c485a7cf8387"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4ODA2OnYy", "diffSide": "RIGHT", "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MjozOVrOGq_zsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MjozOVrOGq_zsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczODgwMQ==", "bodyText": "nitpick/offtopic: unused. just remove it.", "url": "https://github.com/infinispan/infinispan/pull/8517#discussion_r447738801", "createdAt": "2020-06-30T14:42:39Z", "author": {"login": "pruivo"}, "path": "anchored-keys/src/main/java/org/infinispan/anchored/AnchoredKeysModuleLifecycle.java", "diffHunk": "@@ -28,6 +32,8 @@\n @InfinispanModule(name = \"anchored-keys\", requiredModules = \"core\")\n public final class AnchoredKeysModuleLifecycle implements ModuleLifecycle, DynamicModuleMetadataProvider {\n \n+   public static final String ANCHORED_KEYS_FEATURE = \"anchored-keys\";\n+\n    private GlobalComponentRegistry gcr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a3b8d2ae9b7ba62cea9e120cfd4c485a7cf8387"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3955, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}