{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTIwMzE5", "number": 1127, "title": "Makes StrictScopeDecorator stricter without renaming it", "bodyText": "This fixes some fuzz in tests, but notably makes StrictScopeDecorator\nCloseable. In doing so, this will expose any instrumentation that\nleaked scopes as opposed to before which could only show if something\nclosed on the wrong thread.\nThis type was only ever documented for development, so there should be\nno harm in updating this in a way that could OOM in extreme leak\ncircumstances (due to hard references).", "createdAt": "2020-03-26T11:46:42Z", "url": "https://github.com/openzipkin/brave/pull/1127", "merged": true, "mergeCommit": {"oid": "c1bcbe71839e5725e2a3f3daa38bd44d5cdfed65"}, "closed": true, "closedAt": "2020-03-28T01:50:14Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRatwJAFqTM4MTkzMzEzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR68UDAH2gAyMzk0MTIwMzE5Ojg5YzM4YTFiMWJkMjA1NTVhOGMwZTE3MjZmMGQ4NzgwY2RhZGRmY2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTMzMTMz", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-381933133", "createdAt": "2020-03-26T11:50:18Z", "commit": {"oid": "4e0914633632f92381a59ac26635acf5825b63a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1MDoxOFrOF8DPLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1MDoxOFrOF8DPLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUxMTkxOA==", "bodyText": "I made a bug somewhere where I called this twice and expected different results :)", "url": "https://github.com/openzipkin/brave/pull/1127#discussion_r398511918", "createdAt": "2020-03-26T11:50:18Z", "author": {"login": "codefromthecrypt"}, "path": "brave-tests/src/main/java/brave/test/ITRemote.java", "diffHunk": "@@ -60,19 +60,22 @@\n \n   /** Returns a trace context for use in propagation tests. */\n   protected TraceContext newTraceContext(SamplingFlags flags) {\n+    long id = System.nanoTime(); // Random enough as tests are run serially anyway\n     TraceContext result = TraceContext.newBuilder()\n-      .traceIdHigh(1L).traceId(2L).parentId(3L).spanId(1L)\n+      .traceIdHigh(id).traceId(id + 1).parentId(id + 2).spanId(id + 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0914633632f92381a59ac26635acf5825b63a2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTMzNjE1", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-381933615", "createdAt": "2020-03-26T11:51:01Z", "commit": {"oid": "4e0914633632f92381a59ac26635acf5825b63a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1MTowMVrOF8DQ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1MTowMVrOF8DQ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUxMjM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @throws AssertionError if any scopes were left unclosed.\n          \n          \n            \n               * @throws IllegalStateException if any scopes were left unclosed.", "url": "https://github.com/openzipkin/brave/pull/1127#discussion_r398512355", "createdAt": "2020-03-26T11:51:01Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/brave/propagation/StrictScopeDecorator.java", "diffHunk": "@@ -30,38 +35,66 @@\n  *                  ).build();\n  * }</pre>\n  */\n-public final class StrictScopeDecorator implements ScopeDecorator {\n-  public static ScopeDecorator create() {\n+// Closeable so things like Spring will automatically execute it on shutdown and expose leaks!\n+public final class StrictScopeDecorator implements ScopeDecorator, Closeable {\n+  public static StrictScopeDecorator create() {\n     return new StrictScopeDecorator();\n   }\n \n-  /** Identifies problems by throwing assertion errors when a scope is closed on a different thread. */\n-  @Override public Scope decorateScope(@Nullable TraceContext currentSpan, Scope scope) {\n-    return new StrictScope(scope, new Error(String.format(\"Thread %s opened scope for %s here:\",\n-      Thread.currentThread().getName(), currentSpan)));\n+  final Queue<CallerStackTrace> currentCallers = new ConcurrentLinkedQueue<>();\n+\n+  /**\n+   * Identifies problems by throwing {@link IllegalStateException} when a scope is closed on a\n+   * different thread.\n+   */\n+  @Override public Scope decorateScope(@Nullable TraceContext context, Scope scope) {\n+    return new StrictScope(scope, new CallerStackTrace(context), currentCallers);\n+  }\n+\n+  /**\n+   * @throws AssertionError if any scopes were left unclosed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0914633632f92381a59ac26635acf5825b63a2"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTM1NzY3", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-381935767", "createdAt": "2020-03-26T11:54:18Z", "commit": {"oid": "daf53a8425b72457c702ab2096dd683915c6977f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1NDoxOFrOF8DX9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo1NDoxOFrOF8DX9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUxNDE2Ng==", "bodyText": "This is a neat trick.. Let's say some instrumentation you didn't write might be leaking a scope. If you add a bean of this type to an app with sleuth.. when you ctrl-c it should expose any leak problem automatically.", "url": "https://github.com/openzipkin/brave/pull/1127#discussion_r398514166", "createdAt": "2020-03-26T11:54:18Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/brave/propagation/StrictScopeDecorator.java", "diffHunk": "@@ -30,38 +35,66 @@\n  *                  ).build();\n  * }</pre>\n  */\n-public final class StrictScopeDecorator implements ScopeDecorator {\n-  public static ScopeDecorator create() {\n+// Closeable so things like Spring will automatically execute it on shutdown and expose leaks!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daf53a8425b72457c702ab2096dd683915c6977f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTQ2MzEx", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-382546311", "createdAt": "2020-03-27T02:40:20Z", "commit": {"oid": "daf53a8425b72457c702ab2096dd683915c6977f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjo0MDoyMFrOF8hQSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjo0MDoyMFrOF8hQSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwMzcyMg==", "bodyText": "Probably don't care about performance of this but just in case, can consider using a LinkedBlockingDeque to just remove the last element instead of iterating to the end.", "url": "https://github.com/openzipkin/brave/pull/1127#discussion_r399003722", "createdAt": "2020-03-27T02:40:20Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/propagation/StrictScopeDecorator.java", "diffHunk": "@@ -30,38 +35,66 @@\n  *                  ).build();\n  * }</pre>\n  */\n-public final class StrictScopeDecorator implements ScopeDecorator {\n-  public static ScopeDecorator create() {\n+// Closeable so things like Spring will automatically execute it on shutdown and expose leaks!\n+public final class StrictScopeDecorator implements ScopeDecorator, Closeable {\n+  public static StrictScopeDecorator create() {\n     return new StrictScopeDecorator();\n   }\n \n-  /** Identifies problems by throwing assertion errors when a scope is closed on a different thread. */\n-  @Override public Scope decorateScope(@Nullable TraceContext currentSpan, Scope scope) {\n-    return new StrictScope(scope, new Error(String.format(\"Thread %s opened scope for %s here:\",\n-      Thread.currentThread().getName(), currentSpan)));\n+  final Queue<CallerStackTrace> currentCallers = new ConcurrentLinkedQueue<>();\n+\n+  /**\n+   * Identifies problems by throwing {@link IllegalStateException} when a scope is closed on a\n+   * different thread.\n+   */\n+  @Override public Scope decorateScope(@Nullable TraceContext context, Scope scope) {\n+    return new StrictScope(scope, new CallerStackTrace(context), currentCallers);\n+  }\n+\n+  /**\n+   * @throws IllegalStateException if any scopes were left unclosed.\n+   * @since 5.11\n+   */\n+  @Override public void close() {\n+    for (CallerStackTrace caller : currentCallers) {\n+      throw new IllegalStateException(\n+        \"Thread [\" + caller.threadName + \"] opened scope, but never closed it\", caller);\n+    }\n   }\n \n   static final class StrictScope implements Scope {\n     final Scope delegate;\n-    final Throwable caller;\n-    final long threadId = Thread.currentThread().getId();\n+    final Queue<CallerStackTrace> currentCallers;\n+    final CallerStackTrace caller;\n \n-    StrictScope(Scope delegate, Throwable caller) {\n+    StrictScope(Scope delegate, CallerStackTrace caller, Queue<CallerStackTrace> currentCallers) {\n       this.delegate = delegate;\n+      this.currentCallers = currentCallers;\n       this.caller = caller;\n+      this.currentCallers.add(caller);\n     }\n \n     @Override public void close() {\n-      if (Thread.currentThread().getId() != threadId) {\n-        throw new IllegalStateException(\n-          \"scope closed in a different thread: \" + Thread.currentThread().getName(),\n-          caller);\n+      currentCallers.remove(caller);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daf53a8425b72457c702ab2096dd683915c6977f"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTU5MDk3", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-382559097", "createdAt": "2020-03-27T03:29:23Z", "commit": {"oid": "be0fd8c577f5a1c8365981ea3d330b9c8d7e67e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be0fd8c577f5a1c8365981ea3d330b9c8d7e67e2", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/be0fd8c577f5a1c8365981ea3d330b9c8d7e67e2", "committedDate": "2020-03-27T03:13:13Z", "message": "polish"}, "afterCommit": {"oid": "b542f541338439227ef2ac3504c6245fc2659546", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/b542f541338439227ef2ac3504c6245fc2659546", "committedDate": "2020-03-27T05:38:26Z", "message": "Makes StrictScopeDecorator stricter without renaming it\n\nThis fixes some fuzz in tests, but notably makes `StrictScopeDecorator`\n`Closeable`. In doing so, this will expose any instrumentation that\nleaked scopes as opposed to before which could only show if something\nclosed on the wrong thread.\n\nThis type was only ever documented for development, so there should be\nno harm in updating this in a way that could OOM in extreme leak\ncircumstances (due to hard references)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b542f541338439227ef2ac3504c6245fc2659546", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/b542f541338439227ef2ac3504c6245fc2659546", "committedDate": "2020-03-27T05:38:26Z", "message": "Makes StrictScopeDecorator stricter without renaming it\n\nThis fixes some fuzz in tests, but notably makes `StrictScopeDecorator`\n`Closeable`. In doing so, this will expose any instrumentation that\nleaked scopes as opposed to before which could only show if something\nclosed on the wrong thread.\n\nThis type was only ever documented for development, so there should be\nno harm in updating this in a way that could OOM in extreme leak\ncircumstances (due to hard references)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15e001ac904645af3f4ae417ee12ae1eccc33bc", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/f15e001ac904645af3f4ae417ee12ae1eccc33bc", "committedDate": "2020-03-27T05:40:28Z", "message": "license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb955accab85be7691ce4f486b55f88a9433b99e", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/bb955accab85be7691ce4f486b55f88a9433b99e", "committedDate": "2020-03-27T06:24:48Z", "message": "more in console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62c97387c70b8650f713dd5aa0bb2a8ece19746d", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/62c97387c70b8650f713dd5aa0bb2a8ece19746d", "committedDate": "2020-03-27T06:45:45Z", "message": "quiet spring-web"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5fe85a2bafff5209f8a28196e5b7e8383cc8d4f", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/a5fe85a2bafff5209f8a28196e5b7e8383cc8d4f", "committedDate": "2020-03-27T06:47:05Z", "message": "Adds and uses ThreadLocalCurrentTraceContext.clear()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjEyNDIw", "url": "https://github.com/openzipkin/brave/pull/1127#pullrequestreview-382612420", "createdAt": "2020-03-27T06:48:05Z", "commit": {"oid": "a5fe85a2bafff5209f8a28196e5b7e8383cc8d4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjo0ODowNVrOF8k8kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjo0ODowNVrOF8k8kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA2NDIxMA==", "bodyText": "Is it worth adding something like \"This is generally only useful in tests\"?", "url": "https://github.com/openzipkin/brave/pull/1127#discussion_r399064210", "createdAt": "2020-03-27T06:48:05Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/propagation/ThreadLocalCurrentTraceContext.java", "diffHunk": "@@ -42,13 +42,27 @@ public static CurrentTraceContext create() {\n     return new Builder().build();\n   }\n \n-  public static CurrentTraceContext.Builder newBuilder() {\n+  public static Builder newBuilder() {\n     return new Builder();\n   }\n \n-  static final class Builder extends CurrentTraceContext.Builder {\n+  /**\n+   * This component is backed by a possibly static shared thread local. Call this to clear the\n+   * reference when you are sure any residual state is due to a leak.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5fe85a2bafff5209f8a28196e5b7e8383cc8d4f"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a18cb898353fc334b680d9d0a510ad51343da1fe", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/a18cb898353fc334b680d9d0a510ad51343da1fe", "committedDate": "2020-03-27T06:55:11Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0fd4432dd2d05bca65a1cd3ddd2922d13fa5eea", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/e0fd4432dd2d05bca65a1cd3ddd2922d13fa5eea", "committedDate": "2020-03-27T06:57:03Z", "message": "try assertionerror"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "478523b890c17f91599cb5a00d70188e66e1f7d8", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/478523b890c17f91599cb5a00d70188e66e1f7d8", "committedDate": "2020-03-27T07:32:24Z", "message": "pares down logging so that we can see real errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f3d510bdfc5b6837b89deeb8ee2c3a82c3a35a", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/a8f3d510bdfc5b6837b89deeb8ee2c3a82c3a35a", "committedDate": "2020-03-27T07:39:48Z", "message": "don't decorate noop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1faf09fceda448a4e557ac76608d1baed91e8dc2", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/1faf09fceda448a4e557ac76608d1baed91e8dc2", "committedDate": "2020-03-27T08:04:48Z", "message": "restore maven config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2115262c653926939f062a3dc3bc313c6cd9685b", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/2115262c653926939f062a3dc3bc313c6cd9685b", "committedDate": "2020-03-27T08:32:45Z", "message": "more quiet okhttp console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11786acd18c62e3aaa66d99f4672cc3758499bd", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/c11786acd18c62e3aaa66d99f4672cc3758499bd", "committedDate": "2020-03-27T08:59:50Z", "message": "Uses a simpler collection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d7008cf81433708ecb5931166658963565bd9d8", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/3d7008cf81433708ecb5931166658963565bd9d8", "committedDate": "2020-03-27T09:25:50Z", "message": "more info on okhttp invoker fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717ea52eca5a096f0731c51f458d6883b8590451", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/717ea52eca5a096f0731c51f458d6883b8590451", "committedDate": "2020-03-27T10:30:46Z", "message": "ensures apache async client is closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae5447be08805c346f07193db45d087a30548c9", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/8ae5447be08805c346f07193db45d087a30548c9", "committedDate": "2020-03-28T00:02:31Z", "message": "cleaner okhttp3 shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03e32486ff50c3f0006cc40173c26fe582e8d45", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/e03e32486ff50c3f0006cc40173c26fe582e8d45", "committedDate": "2020-03-28T00:23:57Z", "message": "actually await termination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ce7a82c5b1bbffedc695dba1bc36711ea4ac6d9", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/1ce7a82c5b1bbffedc695dba1bc36711ea4ac6d9", "committedDate": "2020-03-28T00:58:28Z", "message": "clarifies instructions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c38a1b1bd20555a8c0e1726f0d8780cdaddfcb", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/89c38a1b1bd20555a8c0e1726f0d8780cdaddfcb", "committedDate": "2020-03-28T01:23:10Z", "message": "another one"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1893, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}