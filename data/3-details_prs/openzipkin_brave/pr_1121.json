{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzQ2NjI5", "number": 1121, "title": "Polishes ITRemote and re-uses for JMS testing", "bodyText": "This is a part of an overall deduplication of text fixtures and will\ncontinue across all instrumentation.", "createdAt": "2020-03-24T02:51:46Z", "url": "https://github.com/openzipkin/brave/pull/1121", "merged": true, "mergeCommit": {"oid": "4684d90bb875d24fb43b1361bc8a8a6deef32b7d"}, "closed": true, "closedAt": "2020-03-24T06:28:51Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQpzB7gH2gAyMzkyNzQ2NjI5OjJhNmQxOTVmMGViNmRlZTkyNjA3NmVhMTFjZWQ3ZTRkYjdmOTdhODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQshumAH2gAyMzkyNzQ2NjI5OjcxNWQzMDE1ZTFlNWRhNjZlYjRlZjQ1MzM0MjUxNjNkOTdmYTlmZWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a6d195f0eb6dee926076ea11ced7e4db7f97a86", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/2a6d195f0eb6dee926076ea11ced7e4db7f97a86", "committedDate": "2020-03-24T02:50:43Z", "message": "Polishes ITRemote and re-uses for JMS testing\n\nThis is a part of an overall deduplication of text fixtures and will\ncontinue across all instrumentation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTY3MDY3", "url": "https://github.com/openzipkin/brave/pull/1121#pullrequestreview-379967067", "createdAt": "2020-03-24T02:52:19Z", "commit": {"oid": "2a6d195f0eb6dee926076ea11ced7e4db7f97a86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjo1MjoyMFrOF6fTyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjo1MjoyMFrOF6fTyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDY5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Blocks until a local span was reported. We define a local span as one with a timestamp and\n          \n          \n            \n               * Blocks until a local span was reported. We define a local span as one with a timestamp and no", "url": "https://github.com/openzipkin/brave/pull/1121#discussion_r396874697", "createdAt": "2020-03-24T02:52:20Z", "author": {"login": "codefromthecrypt"}, "path": "brave-tests/src/main/java/brave/test/ITRemote.java", "diffHunk": "@@ -239,15 +239,39 @@ private Span doTakeSpan(boolean flushed) throws InterruptedException {\n     }\n   };\n \n+  /**\n+   * Blocks until a local span was reported. We define a local span as one with a timestamp and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a6d195f0eb6dee926076ea11ced7e4db7f97a86"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTY3MzQ1", "url": "https://github.com/openzipkin/brave/pull/1121#pullrequestreview-379967345", "createdAt": "2020-03-24T02:53:20Z", "commit": {"oid": "2a6d195f0eb6dee926076ea11ced7e4db7f97a86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjo1MzoyMFrOF6fUxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjo1MzoyMFrOF6fUxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDk0OA==", "bodyText": "this is just polishing", "url": "https://github.com/openzipkin/brave/pull/1121#discussion_r396874948", "createdAt": "2020-03-24T02:53:20Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/jms/src/main/java/brave/jms/TracingCompletionListener.java", "diffHunk": "@@ -40,23 +40,19 @@ static CompletionListener create(CompletionListener delegate, Span span,\n   }\n \n   @Override public void onCompletion(Message message) {\n-    Scope ws = current.maybeScope(span.context());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a6d195f0eb6dee926076ea11ced7e4db7f97a86"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe1863d94bc8821d2eae296fb78d00b64220072", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/bfe1863d94bc8821d2eae296fb78d00b64220072", "committedDate": "2020-03-24T03:01:15Z", "message": "hardens 1.1 failure test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b5484d4b901e02dbe3cc51626970514f283e65", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/60b5484d4b901e02dbe3cc51626970514f283e65", "committedDate": "2020-03-24T03:04:51Z", "message": "Update brave-tests/src/main/java/brave/test/ITRemote.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDAyNjAz", "url": "https://github.com/openzipkin/brave/pull/1121#pullrequestreview-380002603", "createdAt": "2020-03-24T05:06:41Z", "commit": {"oid": "60b5484d4b901e02dbe3cc51626970514f283e65"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowNjo0MVrOF6hILg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowNjo0MVrOF6hILg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwNDQ5NA==", "bodyText": "I wonder if this results in too many permutations. I'm thinking of adding BraveAssertions to allow something like\nassertThat(takeSpan()).isLocal().hasError(\"failed\");\nNot something you have to do :) But wondering what you think of the idea.", "url": "https://github.com/openzipkin/brave/pull/1121#discussion_r396904494", "createdAt": "2020-03-24T05:06:41Z", "author": {"login": "anuraaga"}, "path": "brave-tests/src/main/java/brave/test/ITRemote.java", "diffHunk": "@@ -239,15 +239,39 @@ private Span doTakeSpan(boolean flushed) throws InterruptedException {\n     }\n   };\n \n+  /**\n+   * Blocks until a local span was reported. We define a local span as one with a timestamp and no\n+   * duration, kind, or remote endpoint. This will fail if there's an \"error\" tag. If you expect a\n+   * failure, use {@link #takeLocalSpanWithError(String)} instead.\n+   */\n   protected Span takeLocalSpan() throws InterruptedException {\n     Span local = takeSpan();\n+    assertLocalSpan(local);\n+    return local;\n+  }\n+\n+  /** Like {@link #takeLocalSpan()} except an error tag must match the given value. */\n+  protected Span takeLocalSpanWithError(String errorTag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60b5484d4b901e02dbe3cc51626970514f283e65"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c484414d0264edb0cc53d7ad58997788e6ff615d", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/c484414d0264edb0cc53d7ad58997788e6ff615d", "committedDate": "2020-03-24T05:16:11Z", "message": "correct the exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDA3MDAx", "url": "https://github.com/openzipkin/brave/pull/1121#pullrequestreview-380007001", "createdAt": "2020-03-24T05:22:53Z", "commit": {"oid": "c484414d0264edb0cc53d7ad58997788e6ff615d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNToyMjo1M1rOF6hWjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNToyMjo1M1rOF6hWjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwODE3Mw==", "bodyText": "@anuraaga for example, the error assertion showed that the earlier tests were bad syntax. the error returned had nothing to do with the session that was closed. it is really important to not undo this as there are still a boatload of hidden bugs to find.", "url": "https://github.com/openzipkin/brave/pull/1121#discussion_r396908173", "createdAt": "2020-03-24T05:22:53Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/jms/src/test/java/brave/jms/ITJms_1_1_TracingMessageProducer.java", "diffHunk": "@@ -191,7 +191,7 @@ void should_record_properties(Map<String, String> producerTags) throws Exception\n \n   @Test public void should_record_error() throws Exception {\n     tracedSession.close();\n-    should_record_error(() -> messageProducer.send(message));\n+    should_record_error(() -> messageProducer.send(jms.destination, message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c484414d0264edb0cc53d7ad58997788e6ff615d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715d3015e1e5da66eb4ef4533425163d97fa9fec", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/715d3015e1e5da66eb4ef4533425163d97fa9fec", "committedDate": "2020-03-24T06:01:32Z", "message": "Moved the edge case about flushing to dubbo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1882, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}