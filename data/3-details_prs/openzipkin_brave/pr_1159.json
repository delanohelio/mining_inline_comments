{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMDg1ODAx", "number": 1159, "title": "Removes zipkin dependency from Brave core", "bodyText": "This implements json directly in MutableSpan in order to decouple Brave\nfrom Zipkin types. Future work can decouple ancillary modules such as\ntests or make a high-performance codec for zipkin-reporter-java (or even\na non zipkin-reporter-java variant).\nThis allows vendors to implement interfaces such as FinishedSpanHandler\nwithout pulling zipkin types (reducing the size of their agents)", "createdAt": "2020-04-14T09:57:48Z", "url": "https://github.com/openzipkin/brave/pull/1159", "merged": true, "mergeCommit": {"oid": "0e26fd75093d3e42600853ecdb6f95a0157d553e"}, "closed": true, "closedAt": "2020-04-15T04:57:33Z", "author": {"login": "codefromthecrypt"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXgeGngH2gAyNDAzMDg1ODAxOjFiNTZmZGRhOGYzNzU0ZTMyOTA1ZTMyMmQ5YTU3MjgyZjhhOGE2YTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwBCRZAFqTQzOTE0MTA3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/1b56fdda8f3754e32905e322d9a57282f8a8a6a9", "committedDate": "2020-04-14T09:56:11Z", "message": "Removes zipkin dependency from Brave core\n\nThis implements json directly in MutableSpan in order to decouple Brave\nfrom Zipkin types. Future work can decouple ancillary modules such as\ntests or make a high-performance code for zipkin-reporter-java (or even\na non zipkin-reporter-java variant)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzc5NDMy", "url": "https://github.com/openzipkin/brave/pull/1159#pullrequestreview-392779432", "createdAt": "2020-04-14T09:59:14Z", "commit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo1OToxNVrOGFHRFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo1OToxNVrOGFHRFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTEyNg==", "bodyText": "this is actually correct even if it seems like copy/paste error https://github.com/square/moshi/blob/2cf3f0204c38d62f14d258bc671c010ae6f0ea83/moshi/src/main/java/com/squareup/moshi/JsonUtf8Writer.java", "url": "https://github.com/openzipkin/brave/pull/1159#discussion_r408015126", "createdAt": "2020-04-14T09:59:15Z", "author": {"login": "codefromthecrypt"}, "path": "NOTICE", "diffHunk": "@@ -11,6 +11,13 @@ by Google in the Guava Library:\n   * License: Apache License v2.0\n   * Homepage: https://github.com/google/guava\n \n+This product contains a modified portion of 'JsonUtf8Writer', distributed\n+by Square, Inc in the Moshi Library:\n+\n+  * Copyright (C) 2010 Google Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODAxNDQ1", "url": "https://github.com/openzipkin/brave/pull/1159#pullrequestreview-392801445", "createdAt": "2020-04-14T10:30:47Z", "commit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODA0ODAw", "url": "https://github.com/openzipkin/brave/pull/1159#pullrequestreview-392804800", "createdAt": "2020-04-14T10:35:55Z", "commit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDozNTo1NlrOGFIkfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDozNjozMlrOGFIlvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzNjQ3Ng==", "bodyText": "Forget if we have a ThreadLocal StringBuilder buffer, it would probably help here. But can do it later if we don't have it conveniently available.", "url": "https://github.com/openzipkin/brave/pull/1159#discussion_r408036476", "createdAt": "2020-04-14T10:35:56Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/handler/MutableSpan.java", "diffHunk": "@@ -746,6 +748,129 @@ static boolean updateOrRemove(ArrayList list, int i, Object value, @Nullable Obj\n       && equal(error, that.error);\n   }\n \n+  /** Writes this span in Zipkin V2 format */\n+  // Ported from zipkin2.internal.V2SpanWriter and may eventually move to a separate codec type\n+  @Override public String toString() {\n+    StringBuilder b = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzNjc5OQ==", "bodyText": "Should be a pretty simple win to accept StringBuilder as argument here instead of allocating inside.", "url": "https://github.com/openzipkin/brave/pull/1159#discussion_r408036799", "createdAt": "2020-04-14T10:36:32Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/internal/JsonEscaper.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2013-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package brave.internal;\n+\n+// Initially, a copy of zipkin2.internal.JsonEscaper\n+public final class JsonEscaper {\n+  public static CharSequence jsonEscape(CharSequence v) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b56fdda8f3754e32905e322d9a57282f8a8a6a9"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaaf111d070a5b6ed1af11204111e7d9ff7e6ff2", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/aaaf111d070a5b6ed1af11204111e7d9ff7e6ff2", "committedDate": "2020-04-14T10:58:32Z", "message": "builder and fix ma beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6734fcd9d228a3a983f21d85ce0ef141defbd06", "author": {"user": null}, "url": "https://github.com/openzipkin/brave/commit/a6734fcd9d228a3a983f21d85ce0ef141defbd06", "committedDate": "2020-04-15T03:47:31Z", "message": "Adds count needed by sizers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTQxMDc3", "url": "https://github.com/openzipkin/brave/pull/1159#pullrequestreview-439141077", "createdAt": "2020-06-29T13:26:49Z", "commit": {"oid": "a6734fcd9d228a3a983f21d85ce0ef141defbd06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyNjo1MFrOGqQ4aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyNjo1MFrOGqQ4aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk2MA==", "bodyText": "@adriancole This logging created SO much noise in logs.\nI suggest that it should be a lower level of logging (not INFO) or (and maybe in addition) let the logger be logger of LogFinishedSpanHandler and not the main Tracer.class logger so we can configure this logger specifically.\nCurrently the only way to reduce the noise is to change the Tracer logger to log only WARN and above.", "url": "https://github.com/openzipkin/brave/pull/1159#discussion_r446969960", "createdAt": "2020-06-29T13:26:50Z", "author": {"login": "usulkies"}, "path": "brave/src/main/java/brave/Tracing.java", "diffHunk": "@@ -403,8 +406,19 @@ public Builder trackOrphans() {\n     public Tracing build() {\n       return new Default(this);\n     }\n+  }\n \n-    Builder() {\n+  static final class LogFinishedSpanHandler extends FinishedSpanHandler {\n+    final Logger logger = Logger.getLogger(Tracer.class.getName());\n+\n+    @Override public boolean handle(TraceContext context, MutableSpan span) {\n+      if (!logger.isLoggable(Level.INFO)) return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6734fcd9d228a3a983f21d85ce0ef141defbd06"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1663, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}