{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzODYwODQx", "number": 1268, "title": "Add error handling for `IllegalStateException`s from Kafka `Headers`", "bodyText": "Fixes #1266\nSince Headers actually defines these specific methods to throw IllegalStateException it seemed more appropriate to catch the specific exception rather than a general Throwable as suggested in #1266 ? But I'd be happy with either approach.", "createdAt": "2020-11-02T07:36:16Z", "url": "https://github.com/openzipkin/brave/pull/1268", "merged": true, "mergeCommit": {"oid": "d78503aa9c4b925accb6975d55b510667a52a94b"}, "closed": true, "closedAt": "2020-11-02T08:25:23Z", "author": {"login": "m50d"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYd9qagH2gAyNTEzODYwODQxOjhlOWIyNTZmOGY1MjIxOWI1ZWRkMGFjY2I0MWNhM2MxZWFlMTViNmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYgFHXAFqTUyMTQwNTkxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8e9b256f8f52219b5edd0accb41ca3c1eae15b6a", "author": {"user": {"login": "m50d", "name": "Mickey Donaghy"}}, "url": "https://github.com/openzipkin/brave/commit/8e9b256f8f52219b5edd0accb41ca3c1eae15b6a", "committedDate": "2020-11-02T05:46:01Z", "message": "Add test where injection fails"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80a878f993f06d4aba5b0f504088a7eed042aacd", "author": {"user": {"login": "m50d", "name": "Mickey Donaghy"}}, "url": "https://github.com/openzipkin/brave/commit/80a878f993f06d4aba5b0f504088a7eed042aacd", "committedDate": "2020-11-02T07:32:46Z", "message": "Add error handling for the IllegalStateExceptions that KafkaHeaders throws"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "author": {"user": {"login": "m50d", "name": "Mickey Donaghy"}}, "url": "https://github.com/openzipkin/brave/commit/15a01c9322fc2a6996bfd3fe7fa41f2116f0068f", "committedDate": "2020-11-02T07:33:58Z", "message": "Align formatting with upstream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzg2MTY1", "url": "https://github.com/openzipkin/brave/pull/1268#pullrequestreview-521386165", "createdAt": "2020-11-02T07:39:08Z", "commit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzozOTowOFrOHr4_PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzozOTowOFrOHr4_PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDUwOA==", "bodyText": "let's catch throwable vs guess which exceptions might be raised during this? less maintenance that way.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } catch (IllegalStateException e) {\n          \n          \n            \n                } catch (Throwable t) {\n          \n          \n            \n                  propagateIfFatal(t);", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515784508", "createdAt": "2020-11-02T07:39:08Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaHeaders.java", "diffHunk": "@@ -17,12 +17,17 @@\n import org.apache.kafka.common.header.Header;\n import org.apache.kafka.common.header.Headers;\n \n+import static brave.kafka.clients.KafkaTracing.log;\n import static java.nio.charset.StandardCharsets.UTF_8;\n \n final class KafkaHeaders {\n   static void replaceHeader(Headers headers, String key, String value) {\n-    headers.remove(key);\n-    headers.add(key, value.getBytes(UTF_8));\n+    try {\n+      headers.remove(key);\n+      headers.add(key, value.getBytes(UTF_8));\n+    } catch (IllegalStateException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzg2Njcy", "url": "https://github.com/openzipkin/brave/pull/1268#pullrequestreview-521386672", "createdAt": "2020-11-02T07:40:06Z", "commit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzo0MDowNlrOHr5AxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzo0MDowNlrOHr5AxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NDkwMQ==", "bodyText": "update this comment as it drifted both in the content here and the api used from logging (JUL doesn't have parameterizations)", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515784901", "createdAt": "2020-11-02T07:40:06Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaTracing.java", "diffHunk": "@@ -243,4 +252,35 @@ static void addTags(ConsumerRecord<?, ?> record, SpanCustomizer result) {\n     }\n     result.tag(KafkaTags.KAFKA_TOPIC_TAG, record.topic());\n   }\n+\n+\n+  /**\n+   * Avoids array allocation when logging a parameterized message when fine level is disabled. The\n+   * second parameter is optional.\n+   *\n+   * <p>Ex.\n+   * <pre>{@code\n+   * try {\n+   *    return message.getStringProperty(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzg2OTUy", "url": "https://github.com/openzipkin/brave/pull/1268#pullrequestreview-521386952", "createdAt": "2020-11-02T07:40:41Z", "commit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzo0MDo0MlrOHr5BqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzo0MDo0MlrOHr5BqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc4NTEyOA==", "bodyText": "add a test for this class that has the read-only nature that triggered all of this?", "url": "https://github.com/openzipkin/brave/pull/1268#discussion_r515785128", "createdAt": "2020-11-02T07:40:42Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/KafkaHeaders.java", "diffHunk": "@@ -17,12 +17,17 @@\n import org.apache.kafka.common.header.Header;\n import org.apache.kafka.common.header.Headers;\n \n+import static brave.kafka.clients.KafkaTracing.log;\n import static java.nio.charset.StandardCharsets.UTF_8;\n \n final class KafkaHeaders {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15a01c9322fc2a6996bfd3fe7fa41f2116f0068f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b080fabace985346725a11b513dcafd0cbff62c2", "author": {"user": {"login": "m50d", "name": "Mickey Donaghy"}}, "url": "https://github.com/openzipkin/brave/commit/b080fabace985346725a11b513dcafd0cbff62c2", "committedDate": "2020-11-02T07:56:09Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDA1OTE0", "url": "https://github.com/openzipkin/brave/pull/1268#pullrequestreview-521405914", "createdAt": "2020-11-02T08:13:58Z", "commit": {"oid": "b080fabace985346725a11b513dcafd0cbff62c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1803, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}