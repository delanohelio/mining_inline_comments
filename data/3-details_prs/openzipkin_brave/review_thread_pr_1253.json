{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MDMzNTU5", "number": 1253, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNTo0NlrOEjdVhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyOToxMFrOEjdapw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE2MjYwOnYy", "diffSide": "LEFT", "path": "brave-tests/src/main/java/brave/test/propagation/PropagationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNTo0NlrOHR0UHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNTo0NlrOHR0UHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NDk1OA==", "bodyText": "assertj got weird and leaked data which I didn't feel like hunting down. This is a classloader test", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488444958", "createdAt": "2020-09-15T07:25:46Z", "author": {"login": "codefromthecrypt"}, "path": "brave-tests/src/main/java/brave/test/propagation/PropagationTest.java", "diffHunk": "@@ -180,8 +180,9 @@ public MapEntry() {\n       Map<Object, String> map = new LinkedHashMap<>();\n       injector.inject(ctx, map);\n \n-      assertThat(extractor.extract(map).context())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE2NDQ3OnYy", "diffSide": "RIGHT", "path": "brave/src/test/java/brave/handler/MutableSpanTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjoxM1rOHR0VLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjoxM1rOHR0VLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTIzMQ==", "bodyText": "assertj's recursive can't tell the difference between two exceptions with the same value state anymore", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488445231", "createdAt": "2020-09-15T07:26:13Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/test/java/brave/handler/MutableSpanTest.java", "diffHunk": "@@ -578,7 +579,7 @@\n         MutableSpan other = otherConstructor.get();\n         assertThat(span).isNotSameAs(other); // sanity\n         assertNeitherEqualNorShareHashCode(span, other);\n-        assertThat(span).usingRecursiveComparison().isNotEqualTo(other); // double check our impl\n+        assertThat(Objects.deepEquals(span, other)).isFalse(); // double check our impl", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE2NzU4OnYy", "diffSide": "RIGHT", "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/TracingConsumer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjo1M1rOHR0W_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNjo1M1rOHR0W_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NTY5Mw==", "bodyText": "typical maintenance and without this we can't really trace kafka 2.6 as it won't completely implement the interface", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488445693", "createdAt": "2020-09-15T07:26:53Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/kafka-clients/src/main/java/brave/kafka/clients/TracingConsumer.java", "diffHunk": "@@ -313,6 +313,11 @@ public ConsumerGroupMetadata groupMetadata() {\n     return delegate.groupMetadata();\n   }\n \n+  // Do not use @Override annotation to avoid compatibility issue version < 2.6\n+  public void enforceRebalance() {\n+    delegate.enforceRebalance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE3MjE2OnYy", "diffSide": "RIGHT", "path": "instrumentation/mongodb/src/main/java/brave/mongodb/TraceMongoCommandListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyODoxMVrOHR0ZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyODoxMVrOHR0ZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NjQxMw==", "bodyText": "super strange that in a patch \"admin\" database commands suddenly show up. Due to order of things, we would only see \"endSessions\"! This explicitly gets rid of this similar to p6spy until/unless someone asks for full admin coverage and in that case end w/o start probably is undesirable.", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488446413", "createdAt": "2020-09-15T07:28:11Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/mongodb/src/main/java/brave/mongodb/TraceMongoCommandListener.java", "diffHunk": "@@ -61,11 +61,13 @@\n    * all callbacks happen on the same thread.\n    */\n   @Override public void commandStarted(CommandStartedEvent event) {\n+    String databaseName = event.getDatabaseName();\n+    if (\"admin\".equals(databaseName)) return; // don't trace commands like \"endSessions\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE3Mzg1OnYy", "diffSide": "RIGHT", "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbit.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyODo0MVrOHR0a6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyODo0MVrOHR0a6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NjY5Nw==", "bodyText": "same as our zipkin image, inlined and also lets us skip docker if we want.", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488446697", "createdAt": "2020-09-15T07:28:41Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbit.java", "diffHunk": "@@ -61,14 +67,41 @@\n   static final String TEST_QUEUE_BATCH = \"test-queue-1\";\n   static final Exchange exchange_batch = topicExchange(\"test-exchange-1\").durable(true).build();\n   static final Queue queue_batch = new Queue(TEST_QUEUE_BATCH);\n-  static final Binding binding_batch = bind(queue_batch).to(exchange_batch).with(\"test.binding.1\").noargs();\n+  static final Binding binding_batch =\n+    bind(queue_batch).to(exchange_batch).with(\"test.binding.1\").noargs();\n+\n+  static final String IMAGE = \"rabbitmq:3.8-management-alpine\";\n+  static final int RABBIT_PORT = 5672;\n+\n+  static final class RabbitMQContainer extends GenericContainer<RabbitMQContainer> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE3NTc1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyOToxMFrOHR0cCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjozOToxM1rOHULYWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0Njk4NQ==", "bodyText": "ordered lexicographical as tired of scanning", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r488446985", "createdAt": "2020-09-15T07:29:10Z", "author": {"login": "codefromthecrypt"}, "path": "pom.xml", "diffHunk": "@@ -82,55 +83,58 @@\n     <zipkin-reporter.version>2.15.2</zipkin-reporter.version>\n \n     <!-- Ensure older versions of spring still work -->\n-    <spring5.version>5.2.7.RELEASE</spring5.version>\n+    <spring5.version>5.2.8.RELEASE</spring5.version>\n     <spring.version>3.2.18.RELEASE</spring.version>\n \n     <!-- Apis used, but not in Jetty 7.6* imply duplication in servlet25 test fixtures -->\n     <!-- prefer sparkjava's jetty to reduce downloads -->\n     <jetty.version>9.4.30.v20200611</jetty.version>\n     <jetty-servlet25.version>7.6.21.v20160908</jetty-servlet25.version>\n     <!-- Note: 3.1.x requires Java 8; 3.0.20.Final is broken -->\n-    <resteasy.version>3.12.1.Final</resteasy.version>\n+    <resteasy.version>3.13.1.Final</resteasy.version>\n \n-    <kafka.version>2.5.0</kafka.version>\n-    <!-- must align with kafka version https://github.com/charithe/kafka-junit -->\n-    <kafka-junit.version>4.1.9</kafka-junit.version>\n+    <kafka.version>2.6.0</kafka.version>\n     <activemq.version>5.16.0</activemq.version>\n-    <spring-rabbit.version>2.2.8.RELEASE</spring-rabbit.version>\n+    <spring-rabbit.version>2.2.10.RELEASE</spring-rabbit.version>\n \n-    <finagle.version>20.6.0</finagle.version>\n+    <finagle.version>20.8.1</finagle.version>\n     <log4j.version>2.13.3</log4j.version>\n-    <okhttp.version>4.7.2</okhttp.version>\n+    <okhttp.version>4.9.0</okhttp.version>\n     <httpclient.version>4.5.12</httpclient.version>\n \n-    <grpc.version>1.30.2</grpc.version>\n+    <grpc.version>1.32.1</grpc.version>\n+    <protobuf.version>3.12.0</protobuf.version>\n     <!-- prefer grpc's version of netty -->\n-    <netty.version>4.1.48.Final</netty.version>\n+    <netty.version>4.1.51.Final</netty.version>\n \n     <sparkjava.version>2.9.2</sparkjava.version>\n+\n+    <!-- Test only dependencies -->\n     <junit.version>4.13</junit.version>\n-    <assertj.version>3.16.1</assertj.version>\n+    <assertj.version>3.17.2</assertj.version>\n     <powermock.version>2.0.7</powermock.version>\n-    <mockito.version>3.3.3</mockito.version>\n+    <mockito.version>3.5.10</mockito.version>\n     <jersey.version>2.31</jersey.version>\n-    <jmh.version>1.23</jmh.version>\n+    <!-- must align with kafka version https://github.com/charithe/kafka-junit -->\n+    <kafka-junit.version>4.1.10</kafka-junit.version>\n     <testcontainers.version>1.14.3</testcontainers.version>\n \n+    <animal-sniffer-maven-plugin.version>1.19</animal-sniffer-maven-plugin.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkyMDAyNQ==", "bodyText": "thanks!! \ud83d\ude4f\ud83c\udffd", "url": "https://github.com/openzipkin/brave/pull/1253#discussion_r490920025", "createdAt": "2020-09-18T12:39:13Z", "author": {"login": "jeqo"}, "path": "pom.xml", "diffHunk": "@@ -82,55 +83,58 @@\n     <zipkin-reporter.version>2.15.2</zipkin-reporter.version>\n \n     <!-- Ensure older versions of spring still work -->\n-    <spring5.version>5.2.7.RELEASE</spring5.version>\n+    <spring5.version>5.2.8.RELEASE</spring5.version>\n     <spring.version>3.2.18.RELEASE</spring.version>\n \n     <!-- Apis used, but not in Jetty 7.6* imply duplication in servlet25 test fixtures -->\n     <!-- prefer sparkjava's jetty to reduce downloads -->\n     <jetty.version>9.4.30.v20200611</jetty.version>\n     <jetty-servlet25.version>7.6.21.v20160908</jetty-servlet25.version>\n     <!-- Note: 3.1.x requires Java 8; 3.0.20.Final is broken -->\n-    <resteasy.version>3.12.1.Final</resteasy.version>\n+    <resteasy.version>3.13.1.Final</resteasy.version>\n \n-    <kafka.version>2.5.0</kafka.version>\n-    <!-- must align with kafka version https://github.com/charithe/kafka-junit -->\n-    <kafka-junit.version>4.1.9</kafka-junit.version>\n+    <kafka.version>2.6.0</kafka.version>\n     <activemq.version>5.16.0</activemq.version>\n-    <spring-rabbit.version>2.2.8.RELEASE</spring-rabbit.version>\n+    <spring-rabbit.version>2.2.10.RELEASE</spring-rabbit.version>\n \n-    <finagle.version>20.6.0</finagle.version>\n+    <finagle.version>20.8.1</finagle.version>\n     <log4j.version>2.13.3</log4j.version>\n-    <okhttp.version>4.7.2</okhttp.version>\n+    <okhttp.version>4.9.0</okhttp.version>\n     <httpclient.version>4.5.12</httpclient.version>\n \n-    <grpc.version>1.30.2</grpc.version>\n+    <grpc.version>1.32.1</grpc.version>\n+    <protobuf.version>3.12.0</protobuf.version>\n     <!-- prefer grpc's version of netty -->\n-    <netty.version>4.1.48.Final</netty.version>\n+    <netty.version>4.1.51.Final</netty.version>\n \n     <sparkjava.version>2.9.2</sparkjava.version>\n+\n+    <!-- Test only dependencies -->\n     <junit.version>4.13</junit.version>\n-    <assertj.version>3.16.1</assertj.version>\n+    <assertj.version>3.17.2</assertj.version>\n     <powermock.version>2.0.7</powermock.version>\n-    <mockito.version>3.3.3</mockito.version>\n+    <mockito.version>3.5.10</mockito.version>\n     <jersey.version>2.31</jersey.version>\n-    <jmh.version>1.23</jmh.version>\n+    <!-- must align with kafka version https://github.com/charithe/kafka-junit -->\n+    <kafka-junit.version>4.1.10</kafka-junit.version>\n     <testcontainers.version>1.14.3</testcontainers.version>\n \n+    <animal-sniffer-maven-plugin.version>1.19</animal-sniffer-maven-plugin.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0Njk4NQ=="}, "originalCommit": {"oid": "8dc07ba393786e491b02a1122d080e0556f03f37"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1482, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}