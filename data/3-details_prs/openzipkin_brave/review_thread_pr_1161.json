{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTM4MzAz", "number": 1161, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMDoyM1rODx6n_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMTozN1rODx6ouA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjY3MzI0OnYy", "diffSide": "RIGHT", "path": "travis/publish.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMDoyM1rOGFqAMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMDoyM1rOGFqAMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NDI0MA==", "bodyText": "@abesto I'm wondering if here and also zipkin, if it wouldn't make sense to add the similar logic we do in docker tags to link latest, major, and major.minor", "url": "https://github.com/openzipkin/brave/pull/1161#discussion_r408584240", "createdAt": "2020-04-15T05:10:23Z", "author": {"login": "codefromthecrypt"}, "path": "travis/publish.sh", "diffHunk": "@@ -104,6 +104,49 @@ safe_checkout_master() {\n   fi\n }\n \n+javadoc_to_gh_pages() {\n+  version=\"$(print_project_version)\"\n+  rm -rf javadoc-builddir\n+  builddir=\"javadoc-builddir/$version\"\n+\n+  # Collect javadoc for all modules\n+  for jar in $(find . -name \"*${version}-javadoc.jar\"); do\n+    module=\"$(echo \"$jar\" | sed \"s~.*/\\(.*\\)-${version}-javadoc.jar~\\1~\")\"\n+    this_builddir=\"$builddir/$module\"\n+    if [ -d \"$this_builddir\" ]; then\n+        # Skip modules we've already processed.\n+        # We may find multiple instances of the same javadoc jar because of, for instance,\n+        # integration tests copying jars around.\n+        continue\n+    fi\n+    mkdir -p \"$this_builddir\"\n+    unzip \"$jar\" -d \"$this_builddir\"\n+    # Build a simple module-level index\n+    echo \"<li><a href=\\\"${module}/index.html\\\">${module}</a></li>\" >> \"${builddir}/index.html\"\n+  done\n+\n+  # Update gh-pages\n+  git fetch origin gh-pages:gh-pages\n+  git checkout gh-pages\n+  rm -rf \"$version\"\n+  mv \"javadoc-builddir/$version\" ./\n+  rm -rf \"javadoc-builddir\"\n+\n+  # Update simple version-level index\n+  if ! grep \"$version\" index.html 2>/dev/null; then\n+    echo \"<li><a href=\\\"${version}/index.html\\\">${version}</a></li>\" >> index.html\n+  fi\n+\n+  # Ensure links are ordered by versions, latest on top\n+  sort -rV index.html > index.html.sorted\n+  mv index.html.sorted index.html\n+\n+  git add \"$version\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e29b7f18090251a0067c7d4ea45ce4610ba2ed"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjY3NTEyOnYy", "diffSide": "RIGHT", "path": "travis/publish.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMTozN1rOGFqBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxMTozN1rOGFqBcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NDU2Mw==", "bodyText": "in looking at these, it might be a little much to have the entire version as we don't typically change api on patch release (it is a bit wordy to say \"brave core api 5.11.2\" in the header of each index.html)", "url": "https://github.com/openzipkin/brave/pull/1161#discussion_r408584563", "createdAt": "2020-04-15T05:11:37Z", "author": {"login": "codefromthecrypt"}, "path": "travis/publish.sh", "diffHunk": "@@ -104,6 +104,49 @@ safe_checkout_master() {\n   fi\n }\n \n+javadoc_to_gh_pages() {\n+  version=\"$(print_project_version)\"\n+  rm -rf javadoc-builddir\n+  builddir=\"javadoc-builddir/$version\"\n+\n+  # Collect javadoc for all modules\n+  for jar in $(find . -name \"*${version}-javadoc.jar\"); do\n+    module=\"$(echo \"$jar\" | sed \"s~.*/\\(.*\\)-${version}-javadoc.jar~\\1~\")\"\n+    this_builddir=\"$builddir/$module\"\n+    if [ -d \"$this_builddir\" ]; then\n+        # Skip modules we've already processed.\n+        # We may find multiple instances of the same javadoc jar because of, for instance,\n+        # integration tests copying jars around.\n+        continue\n+    fi\n+    mkdir -p \"$this_builddir\"\n+    unzip \"$jar\" -d \"$this_builddir\"\n+    # Build a simple module-level index\n+    echo \"<li><a href=\\\"${module}/index.html\\\">${module}</a></li>\" >> \"${builddir}/index.html\"\n+  done\n+\n+  # Update gh-pages\n+  git fetch origin gh-pages:gh-pages\n+  git checkout gh-pages\n+  rm -rf \"$version\"\n+  mv \"javadoc-builddir/$version\" ./\n+  rm -rf \"javadoc-builddir\"\n+\n+  # Update simple version-level index\n+  if ! grep \"$version\" index.html 2>/dev/null; then\n+    echo \"<li><a href=\\\"${version}/index.html\\\">${version}</a></li>\" >> index.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e29b7f18090251a0067c7d4ea45ce4610ba2ed"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1360, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}