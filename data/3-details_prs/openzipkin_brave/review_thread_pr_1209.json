{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NTMzNDAy", "number": 1209, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo1NjowMVrOD7qatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo1ODoyMFrOD7qfCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODg3NTQzOnYy", "diffSide": "RIGHT", "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo1NjowMVrOGUH3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDozOToyMVrOGUdpVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MzY0Ng==", "bodyText": "Is the bitset to allow handlesAbandoned to be somewhat slow (maybe reading from a config value). Pushing that to the user may not be a big deal since I think it's pretty common for frameworks to read these sort of methods inline, even in JDK.", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r423753646", "createdAt": "2020-05-12T13:56:01Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -75,10 +85,18 @@ public static SpanHandler create(SpanHandler[] handlers,\n   }\n \n   static final class CompositeSpanHandler extends SpanHandler {\n+    final long handlesAbandonedBitset;\n     final SpanHandler[] handlers;\n \n     CompositeSpanHandler(SpanHandler[] handlers) {\n       this.handlers = handlers;\n+      long handlesAbandonedBitset = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDExMDQyMA==", "bodyText": "sounds fine to me", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r424110420", "createdAt": "2020-05-13T00:39:21Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -75,10 +85,18 @@ public static SpanHandler create(SpanHandler[] handlers,\n   }\n \n   static final class CompositeSpanHandler extends SpanHandler {\n+    final long handlesAbandonedBitset;\n     final SpanHandler[] handlers;\n \n     CompositeSpanHandler(SpanHandler[] handlers) {\n       this.handlers = handlers;\n+      long handlesAbandonedBitset = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1MzY0Ng=="}, "originalCommit": {"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODg4NjQ5OnYy", "diffSide": "RIGHT", "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo1ODoyMVrOGUH-1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTozNTo1NFrOGUeguA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NTQ3Nw==", "bodyText": "If not bitset think this becomes just\nfor (SpanHandler handler : handlers) {\n  if (cause != ABANDONING || handler.handlesAbandon()) {\n    handle()", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r423755477", "createdAt": "2020-05-12T13:58:21Z", "author": {"login": "anuraaga"}, "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -89,12 +107,25 @@ public static SpanHandler create(SpanHandler[] handlers,\n     }\n \n     @Override public boolean end(TraceContext context, MutableSpan span, Cause cause) {\n-      for (SpanHandler handler : handlers) {\n-        if (!handler.end(context, span, cause)) return false;\n+      if (cause != Cause.ABANDONED) {\n+        for (SpanHandler handler : handlers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEyNDYwMA==", "bodyText": "much better thanks! eb394a6", "url": "https://github.com/openzipkin/brave/pull/1209#discussion_r424124600", "createdAt": "2020-05-13T01:35:54Z", "author": {"login": "codefromthecrypt"}, "path": "brave/src/main/java/brave/internal/handler/NoopAwareSpanHandler.java", "diffHunk": "@@ -89,12 +107,25 @@ public static SpanHandler create(SpanHandler[] handlers,\n     }\n \n     @Override public boolean end(TraceContext context, MutableSpan span, Cause cause) {\n-      for (SpanHandler handler : handlers) {\n-        if (!handler.end(context, span, cause)) return false;\n+      if (cause != Cause.ABANDONED) {\n+        for (SpanHandler handler : handlers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc1NTQ3Nw=="}, "originalCommit": {"oid": "085cd0518c53129e945e3e14898bc3c7c128cd10"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1440, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}