{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODE3MDE0", "number": 1095, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNTozNDoxN1rODiNxgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNTozNDoxN1rODiNxgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjAzODQxOnYy", "diffSide": "RIGHT", "path": "instrumentation/grpc/src/main/java/brave/grpc/TracingClientInterceptor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNTozNDoxN1rOFtWBjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNTo0NDoxNFrOFtWH1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MTA4Ng==", "bodyText": "Not sure if gRPC being Java 8 means we would prefer try/resources here but just in case", "url": "https://github.com/openzipkin/brave/pull/1095#discussion_r383091086", "createdAt": "2020-02-24T05:34:17Z", "author": {"login": "anuraaga"}, "path": "instrumentation/grpc/src/main/java/brave/grpc/TracingClientInterceptor.java", "diffHunk": "@@ -93,10 +111,62 @@\n     }\n   }\n \n+  static final class TraceContextCallListener<RespT>\n+    extends SimpleForwardingClientCallListener<RespT> {\n+    final CurrentTraceContext currentTraceContext;\n+    @Nullable final TraceContext invocationContext;\n+\n+    TraceContextCallListener(\n+      Listener<RespT> delegate,\n+      CurrentTraceContext currentTraceContext,\n+      @Nullable TraceContext invocationContext\n+    ) {\n+      super(delegate);\n+      this.currentTraceContext = currentTraceContext;\n+      this.invocationContext = invocationContext;\n+    }\n+\n+    @Override public void onReady() {\n+      Scope scope = currentTraceContext.maybeScope(invocationContext);\n+      try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96dc02cb74cfc40e2e675e01c5ceb889d882e740"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MTU3Mg==", "bodyText": "I didn't move over the retrolambda comment. we still support gRPC 1.2 :P", "url": "https://github.com/openzipkin/brave/pull/1095#discussion_r383091572", "createdAt": "2020-02-24T05:36:34Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/grpc/src/main/java/brave/grpc/TracingClientInterceptor.java", "diffHunk": "@@ -93,10 +111,62 @@\n     }\n   }\n \n+  static final class TraceContextCallListener<RespT>\n+    extends SimpleForwardingClientCallListener<RespT> {\n+    final CurrentTraceContext currentTraceContext;\n+    @Nullable final TraceContext invocationContext;\n+\n+    TraceContextCallListener(\n+      Listener<RespT> delegate,\n+      CurrentTraceContext currentTraceContext,\n+      @Nullable TraceContext invocationContext\n+    ) {\n+      super(delegate);\n+      this.currentTraceContext = currentTraceContext;\n+      this.invocationContext = invocationContext;\n+    }\n+\n+    @Override public void onReady() {\n+      Scope scope = currentTraceContext.maybeScope(invocationContext);\n+      try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MTA4Ng=="}, "originalCommit": {"oid": "96dc02cb74cfc40e2e675e01c5ceb889d882e740"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MjYwMQ==", "bodyText": "I will make a comment in the pom.xml in next change which is that when we bring the floor version up to v1.16.0, we can bump to Java 1.7 and use try/resources naturally (unless retrolambda still complains)", "url": "https://github.com/openzipkin/brave/pull/1095#discussion_r383092601", "createdAt": "2020-02-24T05:43:36Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/grpc/src/main/java/brave/grpc/TracingClientInterceptor.java", "diffHunk": "@@ -93,10 +111,62 @@\n     }\n   }\n \n+  static final class TraceContextCallListener<RespT>\n+    extends SimpleForwardingClientCallListener<RespT> {\n+    final CurrentTraceContext currentTraceContext;\n+    @Nullable final TraceContext invocationContext;\n+\n+    TraceContextCallListener(\n+      Listener<RespT> delegate,\n+      CurrentTraceContext currentTraceContext,\n+      @Nullable TraceContext invocationContext\n+    ) {\n+      super(delegate);\n+      this.currentTraceContext = currentTraceContext;\n+      this.invocationContext = invocationContext;\n+    }\n+\n+    @Override public void onReady() {\n+      Scope scope = currentTraceContext.maybeScope(invocationContext);\n+      try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MTA4Ng=="}, "originalCommit": {"oid": "96dc02cb74cfc40e2e675e01c5ceb889d882e740"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MjY5NQ==", "bodyText": "wait that's already there.. I'll just add the comment :)", "url": "https://github.com/openzipkin/brave/pull/1095#discussion_r383092695", "createdAt": "2020-02-24T05:44:14Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/grpc/src/main/java/brave/grpc/TracingClientInterceptor.java", "diffHunk": "@@ -93,10 +111,62 @@\n     }\n   }\n \n+  static final class TraceContextCallListener<RespT>\n+    extends SimpleForwardingClientCallListener<RespT> {\n+    final CurrentTraceContext currentTraceContext;\n+    @Nullable final TraceContext invocationContext;\n+\n+    TraceContextCallListener(\n+      Listener<RespT> delegate,\n+      CurrentTraceContext currentTraceContext,\n+      @Nullable TraceContext invocationContext\n+    ) {\n+      super(delegate);\n+      this.currentTraceContext = currentTraceContext;\n+      this.invocationContext = invocationContext;\n+    }\n+\n+    @Override public void onReady() {\n+      Scope scope = currentTraceContext.maybeScope(invocationContext);\n+      try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5MTA4Ng=="}, "originalCommit": {"oid": "96dc02cb74cfc40e2e675e01c5ceb889d882e740"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1534, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}