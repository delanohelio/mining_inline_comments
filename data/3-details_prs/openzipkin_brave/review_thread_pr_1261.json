{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzQxNjMy", "number": 1261, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNDo0NTowM1rOEu-JlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzozNjozMlrOEvB0cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Njg4MjEzOnYy", "diffSide": "RIGHT", "path": "instrumentation/p6spy/src/main/java/brave/p6spy/TracingJdbcEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNDo0NTowM1rOHjrTuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyNDozNFrOHjsyXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2OA==", "bodyText": "Could you maybe add a small comment what the regex is aiming to match ? Not everyone can work it out from the top of their head.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507171768", "createdAt": "2020-10-18T14:45:03Z", "author": {"login": "jorgheymans"}, "path": "instrumentation/p6spy/src/main/java/brave/p6spy/TracingJdbcEventListener.java", "diffHunk": "@@ -30,7 +30,7 @@\n final class TracingJdbcEventListener extends SimpleJdbcEventListener {\n \n   private static final Pattern URL_SERVICE_NAME_FINDER =\n-    Pattern.compile(\"zipkinServiceName=(\\\\w*)\");\n+    Pattern.compile(\"zipkinServiceName=(.*?)(?:&|$)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea64ebb50a17562c72c55228b3686e9c883e4c9a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTk5Ng==", "bodyText": "Comment included.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507195996", "createdAt": "2020-10-18T18:24:34Z", "author": {"login": "rgamez"}, "path": "instrumentation/p6spy/src/main/java/brave/p6spy/TracingJdbcEventListener.java", "diffHunk": "@@ -30,7 +30,7 @@\n final class TracingJdbcEventListener extends SimpleJdbcEventListener {\n \n   private static final Pattern URL_SERVICE_NAME_FINDER =\n-    Pattern.compile(\"zipkinServiceName=(\\\\w*)\");\n+    Pattern.compile(\"zipkinServiceName=(.*?)(?:&|$)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MTc2OA=="}, "originalCommit": {"oid": "ea64ebb50a17562c72c55228b3686e9c883e4c9a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQ3OTU0OnYy", "diffSide": "RIGHT", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzozNTowMFrOHjwY3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzowNjoyN1rOHr4RYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg==", "bodyText": "this dep hasn't been updated since 2017, so might haunt us later. you mind switching to just using a map and calling a method not marked test for each pair here?", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255006", "createdAt": "2020-10-18T23:35:00Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTkwMg==", "bodyText": "unfortunately for junit4 there are no better alternatives, junit5 has support for this style of tests out of the box, let me see what I can do.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508081902", "createdAt": "2020-10-19T21:47:11Z", "author": {"login": "rgamez"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg=="}, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc3Mjc3MA==", "bodyText": "Arrays.asList in a for loop is better than a dead dependency. can you do add this? I'm worried about best being enemy of good..", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r515772770", "createdAt": "2020-11-02T07:06:27Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTAwNg=="}, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQ4MTMyOnYy", "diffSide": "RIGHT", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzozNTo0MVrOHjwaAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0NDo0OVrOHkiyiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTI5Nw==", "bodyText": "empty should coerce to null, not \"default\" IMHO", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255297", "createdAt": "2020-10-18T23:35:41Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",\n+    \"?zipkinServiceName=, default\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MDc3OQ==", "bodyText": "bear in mind that this parameter is an override for remoteServiceName, not providing it just results in the default (the database name) used, that's the pre-existing behaviour.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508080779", "createdAt": "2020-10-19T21:44:49Z", "author": {"login": "rgamez"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",\n+    \"?zipkinServiceName=, default\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTI5Nw=="}, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQ4MzM3OnYy", "diffSide": "RIGHT", "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzozNjozMlrOHjwbhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0NjowNVrOHki09Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTY4NQ==", "bodyText": "am I reading this carefully? the service name would have a comma in it? that seems odd.. I think we should pick last instead.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r507255685", "createdAt": "2020-10-18T23:36:32Z", "author": {"login": "codefromthecrypt"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTM5Nw==", "bodyText": "that's just the separator between the two parameters queryString and the expected name.", "url": "https://github.com/openzipkin/brave/pull/1261#discussion_r508081397", "createdAt": "2020-10-19T21:46:05Z", "author": {"login": "rgamez"}, "path": "instrumentation/p6spy/src/test/java/brave/p6spy/TracingJdbcEventListenerTest.java", "diffHunk": "@@ -121,6 +128,34 @@\n     verify(span).remoteIpAndPort(\"1.2.3.4\", 5555);\n   }\n \n+  @Test\n+  @TestCaseName(\"remoteServiceName should be '{1}'\")\n+  @Parameters({\n+    \"?zipkinServiceName=myDatabase&foo=bar, myDatabase\",\n+    \"?zipkinServiceName=my_database&foo=bar, my_database\",\n+    \"?zipkinServiceName=my-database&foo=bar, my-database\",\n+    \"?zipkinServiceName=my-database-1&foo=bar, my-database-1\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my.database&foo=bar, my.database\",\n+    \"?zipkinServiceName=my-database:5432&foo=bar, my-database:5432\",\n+    \"?zipkinServiceName=my-database@localhost&foo=bar, my-database@localhost\",\n+    \"?zipkinServiceName=my-database, my-database\",\n+    \"?zipkinServiceName=my-database-1&zipkinServiceName=my-database-2, my-database-1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI1NTY4NQ=="}, "originalCommit": {"oid": "e2c534fc96e9a43837b72b647551c7214460804a"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1487, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}