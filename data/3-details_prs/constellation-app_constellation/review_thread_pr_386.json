{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQ0NTM0", "number": 386, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0OToyMVrODtkUOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1NjowN1rODtkgXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTA3NTEzOnYy", "diffSide": "LEFT", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0OToyMVrOF_ES7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzoxNjowOVrOF_Z4-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ==", "bodyText": "I wonder what performance/memory complications there are when we remove the static modifier. @formalhaut69 did this have to be done to make it a lambda or was it for another reason?", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401674991", "createdAt": "2020-04-01T14:49:21Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc0OTY1MQ==", "bodyText": "https://gitter.im/constellation-app/community?at=5e83ebd9b6d72077bcabfe17\n\n@cygnus-x-1 I've just caught up on the chat in Gitter. For my understanding, can you explain why having the static is bad design?", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401749651", "createdAt": "2020-04-01T16:31:26Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ=="}, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyODc5NA==", "bodyText": "@cygnus-x-1 I've just caught up on the chat in Gitter. For my understanding, can you explain why having the static is bad design?\n\nHaving an inner static Interface like that is not inherently bad design (although it does imply it's supposed to be used outside this class); the bad design part was then having it rely on a variable of its outer class, as that variable will only exist when that outer class is instantiated.", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r402028794", "createdAt": "2020-04-02T03:16:09Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ=="}, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTA4MDE4OnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1MDoyNFrOF_EWIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzoxMjozOFrOF_Z1xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ==", "bodyText": "Can these be a final parameter?", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401675809", "createdAt": "2020-04-01T14:50:24Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        \n+        public void save(ParameterWriteAccess PWA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1MTgyNw==", "bodyText": "Yeah, sorry I keep forgetting to do that", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401951827", "createdAt": "2020-04-01T22:40:45Z", "author": {"login": "formalhaut69"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        \n+        public void save(ParameterWriteAccess PWA);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ=="}, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNzk3NQ==", "bodyText": "Also an all uppercase variable name like that is not good Java style.", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r402027975", "createdAt": "2020-04-02T03:12:38Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        \n+        public void save(ParameterWriteAccess PWA);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ=="}, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTEwNjIyOnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1NjowN1rOF_EnIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1NjowN1rOF_EnIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MDE2MA==", "bodyText": "A minor comment but when possible please review your NetBeans 11 settings and consider changing it to trim trailing whitespaces.", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401680160", "createdAt": "2020-04-01T14:56:07Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2441, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}