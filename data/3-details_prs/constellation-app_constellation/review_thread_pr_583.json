{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQ1NjMz", "number": 583, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1NzozNlrOEGLQ8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxODozOTowN1rOEHYUmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTExNDcyOnYy", "diffSide": "RIGHT", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1NzozNlrOGkz58A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzowODo0OFrOGk4dcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg==", "bodyText": "Can you please use the HttpURLConnection class instead of creating these constants?", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441252336", "createdAt": "2020-06-17T02:57:36Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java", "diffHunk": "@@ -38,9 +38,56 @@\n  * <p>\n  * All services are accessed via RestServiceServlet; see that for more details.\n  *\n+ * This also stores status codes.\n+ * Top section copied from public interface HttpServletResponse.\n+ * \n  * @author algol\n  */\n public abstract class RestService {\n+    public static final int SC_CONTINUE = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwOTMyNw==", "bodyText": "422 is not there. Shall I leave only that (and may be other missing ones) in the new class then?", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441309327", "createdAt": "2020-06-17T06:29:30Z", "author": {"login": "Auriga2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java", "diffHunk": "@@ -38,9 +38,56 @@\n  * <p>\n  * All services are accessed via RestServiceServlet; see that for more details.\n  *\n+ * This also stores status codes.\n+ * Top section copied from public interface HttpServletResponse.\n+ * \n  * @author algol\n  */\n public abstract class RestService {\n+    public static final int SC_CONTINUE = 100;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg=="}, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjk2MQ==", "bodyText": "Yep @Auriga2. Sorry I didn't realise 422 was not there.", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441326961", "createdAt": "2020-06-17T07:08:48Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java", "diffHunk": "@@ -38,9 +38,56 @@\n  * <p>\n  * All services are accessed via RestServiceServlet; see that for more details.\n  *\n+ * This also stores status codes.\n+ * Top section copied from public interface HttpServletResponse.\n+ * \n  * @author algol\n  */\n public abstract class RestService {\n+    public static final int SC_CONTINUE = 100;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg=="}, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTEyMzMyOnYy", "diffSide": "RIGHT", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzowMzoxMFrOGkz_Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNjo1NzoyMlrOGlh_6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA==", "bodyText": "So in here it would be HttpURLConnection.HTTP_OK.\nWhat is the reason to show the message \"Successful\" given the HTTP code will inform this. Does the message appear in the response output?\nAlso if you are going to keep it then its work making the string a constant.", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441253698", "createdAt": "2020-06-17T03:03:10Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "diffHunk": "@@ -182,6 +183,7 @@ public void callService(final PluginParameters parameters, final InputStream in,\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n+        return new ServiceResponse(SC_OK, \"Successful\"); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDU4NQ==", "bodyText": "@arcturus2 It's not really used afterwards, as I am processing only if it's not a 200. I just typed it thinking it's better than an empty string. What do you think?", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441310585", "createdAt": "2020-06-17T06:32:34Z", "author": {"login": "Auriga2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "diffHunk": "@@ -182,6 +183,7 @@ public void callService(final PluginParameters parameters, final InputStream in,\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n+        return new ServiceResponse(SC_OK, \"Successful\"); ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyOTc1OA==", "bodyText": "If its not used then how about creating another constructor like this?\npublic ServiceResponse(int errorCode){\n        this.errorCode = errorCode;\n        this.errorMessage = null;\n}", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441329758", "createdAt": "2020-06-17T07:14:29Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "diffHunk": "@@ -182,6 +183,7 @@ public void callService(final PluginParameters parameters, final InputStream in,\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n+        return new ServiceResponse(SC_OK, \"Successful\"); ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwNzUzMA==", "bodyText": "Agree, fixed.", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r442007530", "createdAt": "2020-06-18T06:57:22Z", "author": {"login": "Auriga2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "diffHunk": "@@ -182,6 +183,7 @@ public void callService(final PluginParameters parameters, final InputStream in,\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n+        return new ServiceResponse(SC_OK, \"Successful\"); ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTU5OTg1OnYy", "diffSide": "RIGHT", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzoxMToxNlrOGk4iMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzoxMToxNlrOGk4iMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyODE3Ng==", "bodyText": "how about statusMessage?", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441328176", "createdAt": "2020-06-17T07:11:16Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.webserver.restapi;\n+\n+/**\n+ * This class is used to send custom HTTP error codes generated from the \n+ * callService in webserver.services classes.\n+ */\n+public class ServiceResponse { \n+    private String errorMessage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTYwMTc2OnYy", "diffSide": "RIGHT", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzoxMTo1MFrOGk4jQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNzoxMTo1MFrOGk4jQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyODQ1MQ==", "bodyText": "how about statusCode given the response is not always when there is an error.", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441328451", "createdAt": "2020-06-17T07:11:50Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.webserver.restapi;\n+\n+/**\n+ * This class is used to send custom HTTP error codes generated from the \n+ * callService in webserver.services classes.\n+ */\n+public class ServiceResponse { \n+    private String errorMessage;\n+    private int errorCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTczOTc4OnYy", "diffSide": "RIGHT", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxODozOTowN1rOGmtjHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMDowNTo0OVrOGmvE0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NTM0MQ==", "bodyText": "@Auriga2  should the 200 be replaced with HttpURLConnection.HTTP_OK?", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r443245341", "createdAt": "2020-06-21T18:39:07Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java", "diffHunk": "@@ -101,7 +102,10 @@ private void callService(final HttpMethod httpMethod, final HttpServletRequest r\n         try {\n             response.setContentType(rs.getMimeType());\n             response.setStatus(HttpServletResponse.SC_OK);\n-            rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            ServiceResponse serviceResponse = rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            if (serviceResponse.getStatusCode()!=200){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2583d5699b6a7734578ed76ae867185bbb24ed9"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3MDM1Mw==", "bodyText": "Yes Thanks! Fixed.", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r443270353", "createdAt": "2020-06-22T00:05:49Z", "author": {"login": "Auriga2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java", "diffHunk": "@@ -101,7 +102,10 @@ private void callService(final HttpMethod httpMethod, final HttpServletRequest r\n         try {\n             response.setContentType(rs.getMimeType());\n             response.setStatus(HttpServletResponse.SC_OK);\n-            rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            ServiceResponse serviceResponse = rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            if (serviceResponse.getStatusCode()!=200){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NTM0MQ=="}, "originalCommit": {"oid": "c2583d5699b6a7734578ed76ae867185bbb24ed9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2182, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}