{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzODYzMzk2", "number": 623, "title": "Welcome Page Update", "bodyText": "Description of the Change\nThe purpose of this update is to provide the framework code for a welcome page. It should be able to dynamically create welcome entries using the Welcome Page provider, and it just needs to be configured to follow the design that's being developed.\nAlternate Designs\nThere were no alternate designs\nWhy Should This Be In Core?\nWelcome Page came about as a part of hallway testing - it should be at the base level.\nBenefits\nIt should help make Constellation easier to use.\nPossible Drawbacks\nIt's not a very clever way of generating the HTML.\nVerification Process\nTested to see whether it loads on startup, whether it's the primary page if the Tutorial Page is also selected\nApplicable Issues\n#9", "createdAt": "2020-07-03T05:43:11Z", "url": "https://github.com/constellation-app/constellation/pull/623", "merged": true, "mergeCommit": {"oid": "324d0860fd22f34606fa2d445c74c67a3d98ba9e"}, "closed": true, "closedAt": "2021-01-11T14:27:29Z", "author": {"login": "canis-majoris-42"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxMrx1gH2gAyNDQzODYzMzk2OjhhMjVjZGQ4MWJiNWFhNmIwMGYxNWMwNjljOTI3MjE0ODAwYWNiYzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvHYDYgFqTU2NTQwMTc0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3", "author": {"user": {"login": "canis-majoris-42", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8a25cdd81bb5aa6b00f15c069c927214800acbc3", "committedDate": "2020-07-03T05:35:03Z", "message": "Welcome Page Update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTU4MzQz", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-442158343", "createdAt": "2020-07-03T05:44:02Z", "commit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzgxODcw", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-442381870", "createdAt": "2020-07-03T12:33:05Z", "commit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzowNVrOGsu8DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0MjoxMVrOGsvLuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU1OTU2NA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449559564", "createdAt": "2020-07-03T12:33:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+/**\n+ * A plugin designed to be supported by the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+public abstract class WelcomePageProvider {\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    public String getName() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    public String getLinkDescription() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a link to appear on the Welcome Page\n+     *\n+     * @return a link address\n+     */\n+    public String getLink() {\n+        StringBuilder href = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU1OTgyOA==", "bodyText": "...you could also chain all these appends together.", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449559828", "createdAt": "2020-07-03T12:33:40Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+/**\n+ * A plugin designed to be supported by the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+public abstract class WelcomePageProvider {\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    public String getName() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    public String getLinkDescription() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a link to appear on the Welcome Page\n+     *\n+     * @return a link address\n+     */\n+    public String getLink() {\n+        StringBuilder href = new StringBuilder();\n+        href.append(\"<a href=\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDI3MQ==", "bodyText": "extends JavaFxTopComponent?", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560271", "createdAt": "2020-07-03T12:34:44Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDQ3Mg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560472", "createdAt": "2020-07-03T12:35:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    private static final String WELCOME_WEBVIEW = \"resources/welcome_webview.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            BorderPane root = new BorderPane();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDU0MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560540", "createdAt": "2020-07-03T12:35:12Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    private static final String WELCOME_WEBVIEW = \"resources/welcome_webview.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create Right VBox to handle Browser and controls,\n+            //or error messages\n+            VBox vbox = new VBox();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTcwNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561707", "createdAt": "2020-07-03T12:37:53Z", "author": {"login": "cygnus-x-1"}, "path": "CoreTesting/src/au/gov/asd/tac/constellation/testing/SphereGraphWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/* \n+ * Copyright 2010-2020 Australian Signals Directorate \n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0 \n+ * \n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License. \n+ */\n+package au.gov.asd.tac.constellation.testing;\n+\n+import au.gov.asd.tac.constellation.functionality.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.opener.GraphOpener;\n+import au.gov.asd.tac.constellation.graph.interaction.InteractiveGraphPluginRegistry;\n+import au.gov.asd.tac.constellation.graph.locking.DualGraph;\n+import au.gov.asd.tac.constellation.graph.schema.Schema;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.plugins.PluginExecutor;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import au.gov.asd.tac.constellation.testing.construction.SphereGraphBuilderPlugin;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**  \n+ * The New Graph with a Sphere plugin for the Welcome Page.  \n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = WelcomePageProvider.class)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"SphereGraphWelcomePlugin=Sphere Graph Welcome Plugin\")\n+public class SphereGraphWelcomePlugin extends WelcomePageProvider {\n+\n+    /**  \n+     * Get a unique reference that is used to identify the plugin\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return SphereGraphWelcomePlugin.class.getName();\n+    }\n+\n+    /**   \n+     * Get a description for the link that will appear on the Welcome Page  \n+     * @return a unique reference      \n+     */\n+    @Override\n+    public String getLinkDescription() {\n+        return \"Open up a new graph with a Sphere Network\";\n+    }\n+\n+    /**\n+     * Get an optional textual description that appears on the Welcome Page.\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getDescription() {\n+        StringBuilder buf = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTgxMQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561811", "createdAt": "2020-07-03T12:38:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/DelimitedFileWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.plugins.importexport;\n+\n+import au.gov.asd.tac.constellation.functionality.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import au.gov.asd.tac.constellation.plugins.importexport.delimited.DelimitedFileImporterStage;\n+import javafx.application.Platform;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+\n+/**\n+ * The Open Delimited File plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = WelcomePageProvider.class)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"DelimitedFileWelcomePlugin=Delimited File Welcome Plugin\")\n+public class DelimitedFileWelcomePlugin extends WelcomePageProvider {\n+\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return DelimitedFileWelcomePlugin.class.getName();\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getLinkDescription() {\n+        return \"Open the Delimited File Importer\";\n+    }\n+    \n+    /**\n+     * Get an optional textual description that appears on the Welcome Page.\n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getDescription() {\n+        StringBuilder buf = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTg5NQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561895", "createdAt": "2020-07-03T12:38:17Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                DataObject d = activated.getLookup().lookup(DataObject.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTk0Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561947", "createdAt": "2020-07-03T12:38:27Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA0Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562047", "createdAt": "2020-07-03T12:38:42Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA5MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562091", "createdAt": "2020-07-03T12:38:47Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjEzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562136", "createdAt": "2020-07-03T12:38:56Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjIwMw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562203", "createdAt": "2020-07-03T12:39:08Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjMzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562336", "createdAt": "2020-07-03T12:39:25Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                DataObject d = activated.getLookup().lookup(DataObject.class);\n+                if (d != null) {\n+                    File f = FileUtil.toFile(d.getPrimaryFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjQ3OQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562479", "createdAt": "2020-07-03T12:39:44Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjU2MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562560", "createdAt": "2020-07-03T12:39:56Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjY3Mg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562672", "createdAt": "2020-07-03T12:40:10Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFileAction.java", "diffHunk": "@@ -73,101 +71,22 @@\n @ActionReferences({\n     @ActionReference(path = \"Menu/File\", position = 300),\n     @ActionReference(path = \"Shortcuts\", name = \"C-O\")})\n-public class OpenFileAction implements ActionListener {\n+public class OpenFileAction implements ActionListener {   \n \n-    /**\n-     * stores the last current directory of the file chooser\n-     */\n-    private static File currentDirectory = null;\n-\n-    private HelpCtx getHelpCtx() {\n-        return new HelpCtx(this.getClass().getName());\n-    }\n-\n-    /**\n-     * Creates and initializes a file chooser.\n-     *\n-     * @return the initialized file chooser\n-     */\n-    protected JFileChooser prepareFileChooser() {\n-        JFileChooser chooser = new FileChooser();\n-        chooser.setCurrentDirectory(getCurrentDirectory());\n-        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n-\n-        return chooser;\n-    }\n-\n-    /**\n-     * Displays the specified file chooser and returns a list of selected files.\n-     *\n-     * @param chooser file chooser to display\n-     * @return array of selected files,\n-     * @exception org.openide.util.UserCancelException if the user cancelled the\n-     * operation\n-     */\n-    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n-            throws UserCancelException {\n-        File[] files;\n-        do {\n-            int selectedOption = chooser.showOpenDialog(\n-                    WindowManager.getDefault().getMainWindow());\n-\n-            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n-                throw new UserCancelException();\n-            }\n-            files = chooser.getSelectedFiles();\n-        } while (files.length == 0);\n-        return files;\n+    public OpenFileAction() {\n     }\n-    private static boolean running;\n \n     /**\n      * {@inheritDoc} Displays a file chooser dialog and opens the selected\n      * files.\n      */\n     @Override\n     public void actionPerformed(final ActionEvent e) {\n-        if (running) {\n-            return;\n-        }\n+        final StoreGraph sg = new StoreGraph();\n         try {\n-            running = true;\n-            JFileChooser chooser = prepareFileChooser();\n-            File[] files;\n-            try {\n-                files = chooseFilesToOpen(chooser);\n-                currentDirectory = chooser.getCurrentDirectory();\n-            } catch (UserCancelException ex) {\n-                return;\n-            }\n-            for (int i = 0; i < files.length; i++) {\n-                OpenFile.openFile(files[i], -1);\n-            }\n-        } finally {\n-            running = false;\n-        }\n-    }\n-\n-    private static File getCurrentDirectory() {\n-        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n-            // Prefer to open from parent of active editor, if any.\n-            TopComponent activated = TopComponent.getRegistry().getActivated();\n-            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n-                DataObject d = activated.getLookup().lookup(DataObject.class);\n-                if (d != null) {\n-                    File f = FileUtil.toFile(d.getPrimaryFile());\n-                    if (f != null) {\n-                        return f.getParentFile();\n-                    }\n-                }\n-            }\n-        }\n-        // Otherwise, use last-selected directory, if any.\n-        if (currentDirectory != null && currentDirectory.exists()) {\n-            return currentDirectory;\n+            PluginExecution.withPlugin(GraphPluginRegistry.OPEN_FILE).executeNow(sg);\n+        } catch (InterruptedException | PluginException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MzU3Nw==", "bodyText": "While there isn't a GraphPluginRegistry yet, that name should probably be reserved for the Graph Framework module and this class should probably be GraphFilePluginRegistry", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449563577", "createdAt": "2020-07-03T12:42:11Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphPluginRegistry.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.OpenFilePlugin;\n+\n+/**\n+ * List of all core actions/plugins\n+ *\n+ * @author canis_majoris\n+ */\n+public final class GraphPluginRegistry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d79a89c917450787cff999717a6038f1962371d", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/0d79a89c917450787cff999717a6038f1962371d", "committedDate": "2020-11-06T02:31:48Z", "message": "Merge branch 'master' into welcome_page_update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48fe4728d17eea1545b996900fcd043b166e8a83", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/48fe4728d17eea1545b996900fcd043b166e8a83", "committedDate": "2020-11-10T00:21:43Z", "message": "Buttons created to match exmaple layout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf82b150771b371c55f7eac002287de86320e65", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/3cf82b150771b371c55f7eac002287de86320e65", "committedDate": "2020-11-10T22:28:13Z", "message": "Layout Updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11a35f1ec1fe87d71376a2e581aaae87a5bed41d", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/11a35f1ec1fe87d71376a2e581aaae87a5bed41d", "committedDate": "2020-11-11T04:09:29Z", "message": "Buttons added to layout dynamically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "842114e94fb8818cc3af068e54284edd83a1dd5e", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/842114e94fb8818cc3af068e54284edd83a1dd5e", "committedDate": "2020-11-11T05:23:20Z", "message": "Layout complete and plugins created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b5653798300aa3472d3f89772436606a16e8fcf", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/2b5653798300aa3472d3f89772436606a16e8fcf", "committedDate": "2020-11-11T21:48:40Z", "message": "Code Smells corrected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d327e70d2feb6b331c725b2f59d88cc93100e7e8", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d327e70d2feb6b331c725b2f59d88cc93100e7e8", "committedDate": "2020-11-11T22:24:26Z", "message": "Removed unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83c0faa3f36c190f18ab98a03aa18a3543206808", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/83c0faa3f36c190f18ab98a03aa18a3543206808", "committedDate": "2020-11-11T23:33:02Z", "message": "Updates to plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "862ec0981299fbac9a4de4013efa1bf6b276b64c", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/862ec0981299fbac9a4de4013efa1bf6b276b64c", "committedDate": "2020-11-12T04:37:56Z", "message": "Updates to plugins and mouse cursor over buttons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45b721a49a8295cc7c0df6c061d6b9ba6936e041", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/45b721a49a8295cc7c0df6c061d6b9ba6936e041", "committedDate": "2020-11-12T22:49:02Z", "message": "Fix code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c808fb5d8e6c98babfb2eb948de96da138987427", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c808fb5d8e6c98babfb2eb948de96da138987427", "committedDate": "2020-11-17T22:26:42Z", "message": "Recent buttons open graphs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e7a99b3ca772eaef6e4d75c5b90a838777b1d7d", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/1e7a99b3ca772eaef6e4d75c5b90a838777b1d7d", "committedDate": "2020-11-18T00:49:41Z", "message": "Code cleaned up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2505a98bbc83f052221766ba1f93e82eee4ecee", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/e2505a98bbc83f052221766ba1f93e82eee4ecee", "committedDate": "2020-11-25T22:33:04Z", "message": "Text elements update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2708cbc68df63487b5d832e2cad1c124b307152", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d2708cbc68df63487b5d832e2cad1c124b307152", "committedDate": "2020-11-26T01:49:51Z", "message": ":art: Recent graphs screenshot\n* Added `RecentGraphScreenshotUtilities` to manage taking screenshots of graphs to be used by the Welcome tab."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d68a6ca23ace3472d0862f8a8e8baa6bf1626537", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d68a6ca23ace3472d0862f8a8e8baa6bf1626537", "committedDate": "2020-11-26T03:48:04Z", "message": "Recent button images resized and duplicates are no longer added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1469aa696a6fb4863e2e8ce0638e142218836bfd", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/1469aa696a6fb4863e2e8ce0638e142218836bfd", "committedDate": "2020-11-26T23:09:32Z", "message": "Update to icons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bc0d73ba993019a1d94c0183e388c8a6eaa4db2", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/5bc0d73ba993019a1d94c0183e388c8a6eaa4db2", "committedDate": "2020-12-03T00:17:13Z", "message": "Welcome View Module created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3486151bac95966e93a1c341ba0c1aeca6ef1dac", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/3486151bac95966e93a1c341ba0c1aeca6ef1dac", "committedDate": "2020-12-03T00:50:31Z", "message": "Merge branch 'master' into welcome_page_update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec08859545c0635b0710eee56786c0578d8ab361", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ec08859545c0635b0710eee56786c0578d8ab361", "committedDate": "2020-12-03T01:25:04Z", "message": "Fix build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b82818fde9bdbd04bcaa2b6d82f0a832fafc6488", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b82818fde9bdbd04bcaa2b6d82f0a832fafc6488", "committedDate": "2020-12-03T01:33:56Z", "message": "Attempt to fix build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eb1eaa5782ae035f9fa9586d2c77de5b594f1f1", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/4eb1eaa5782ae035f9fa9586d2c77de5b594f1f1", "committedDate": "2020-12-06T22:07:12Z", "message": "Fix module name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aee50dcaf710981dd9a1729541633908b703a46c", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/aee50dcaf710981dd9a1729541633908b703a46c", "committedDate": "2020-12-06T22:29:12Z", "message": "Fix Code Smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/078845a3cc7d6435febb4a7b01de059f5a8bf626", "committedDate": "2020-12-06T22:46:22Z", "message": "More code smell fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODEwNDQ4", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-545810448", "createdAt": "2020-12-07T03:37:03Z", "commit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzozNzowNFrOIAUn7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDowMjozNVrOIAVC_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwODgxNQ==", "bodyText": "are you able throw an illegal argument exception here:\nthrow new IllegalArgumentException(\"Utility class\")", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537208815", "createdAt": "2020-12-07T03:37:04Z", "author": {"login": "antares1470"}, "path": "CoreInteractiveGraph/src/au/gov/asd/tac/constellation/graph/interaction/plugins/io/screenshot/RecentGraphScreenshotUtilities.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot;\n+\n+import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.node.GraphNode;\n+import au.gov.asd.tac.constellation.preferences.ApplicationPreferenceKeys;\n+import au.gov.asd.tac.constellation.utilities.visual.VisualManager;\n+import java.io.File;\n+import java.util.logging.Logger;\n+import java.util.prefs.Preferences;\n+import org.openide.util.NbPreferences;\n+\n+/**\n+ * Recent Graph Screenshot Utilities\n+ *\n+ * @author arcturus\n+ */\n+public class RecentGraphScreenshotUtilities {\n+\n+    private static final String SCREENSHOTS_DIR = \"Screenshots\";\n+    private static final Logger LOGGER = Logger.getLogger(RecentGraphScreenshotUtilities.class.getName());\n+    \n+    private RecentGraphScreenshotUtilities() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMDQ4OA==", "bodyText": "this looks like the old package name so not sure whether or not this needs to be changed to the new one", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537210488", "createdAt": "2020-12-07T03:42:53Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzE0MA==", "bodyText": "Would be good to change this to a String like \"Getting Started Welcome\"", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213140", "createdAt": "2020-12-07T03:52:35Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return GettingStartedWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzE5NQ==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213195", "createdAt": "2020-12-07T03:52:50Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that allows the user to join the \n+ * Constellation community\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 8)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"JoinCommWelcomePlugin=Join Comm Welcome Plugin\")\n+public class JoinCommWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String JOIN = \"resources/welcome_join.png\";\n+    ImageView joinView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(JOIN)));\n+    Button joinBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(JoinCommWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return JoinCommWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzM1Ng==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213356", "createdAt": "2020-12-07T03:53:36Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/OpenGraphWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.GraphFilePluginRegistry;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.text.Font;\n+import org.openide.util.Exceptions;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The Open Graph plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 3)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"OpenGraphWelcomePlugin=Open Graph Welcome Plugin\")\n+public class OpenGraphWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String OPEN = \"resources/welcome_open_folder.png\";\n+    ImageView openImage = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(OPEN)));\n+    Button openFile = new Button();\n+    \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return OpenGraphWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzQ5OA==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213498", "createdAt": "2020-12-07T03:54:08Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to where the user can \n+ * provide feedback for the Constellation app\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 7)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"ProvideFeedbackWelcomePlugin=Provide Feedback Welcome Plugin\")\n+public class ProvideFeedbackWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String FEEDBACK = \"resources/welcome_feedback.png\";\n+    ImageView feedView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(FEEDBACK)));\n+    Button feedbackButton = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(ProvideFeedbackWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return ProvideFeedbackWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNDc1Mg==", "bodyText": "These 2 additions can be removed since they've been moved to their own module", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537214752", "createdAt": "2020-12-07T03:58:48Z", "author": {"login": "antares1470"}, "path": "CoreFunctionality/nbproject/project.xml", "diffHunk": "@@ -290,9 +290,10 @@\n                 <package>au.gov.asd.tac.constellation.functionality.browser</package>\n                 <package>au.gov.asd.tac.constellation.functionality.dialog</package>\n                 <package>au.gov.asd.tac.constellation.functionality.email</package>\n-                <package>au.gov.asd.tac.constellation.functionality.genericjsonio</package>\n                 <package>au.gov.asd.tac.constellation.functionality.startup</package>\n                 <package>au.gov.asd.tac.constellation.functionality.tutorial</package>\n+                <package>au.gov.asd.tac.constellation.functionality.welcome</package>\n+                <package>au.gov.asd.tac.constellation.functionality.welcome.plugins</package>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNTc0MQ==", "bodyText": "if this dependency was added as a result of the welcome page then it can probably be removed", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537215741", "createdAt": "2020-12-07T04:02:35Z", "author": {"login": "antares1470"}, "path": "CoreImportExportPlugins/nbproject/project.xml", "diffHunk": "@@ -14,6 +14,14 @@\n                         <specification-version>1.0</specification-version>\n                     </run-dependency>\n                 </dependency>\n+                <dependency>\n+                    <code-name-base>au.gov.asd.tac.constellation.functionality</code-name-base>\n+                    <build-prerequisite/>\n+                    <compile-dependency/>\n+                    <run-dependency>\n+                        <specification-version>1.0.7</specification-version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97231b6283553c3bbb26a2f21dca86899627b56", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c97231b6283553c3bbb26a2f21dca86899627b56", "committedDate": "2020-12-07T04:36:17Z", "message": "Update to requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c361b736ca371379358230f19f98435b86829d2", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/9c361b736ca371379358230f19f98435b86829d2", "committedDate": "2020-12-07T20:14:34Z", "message": ":green_heart: Include the new Core Welcome View in SonarQube"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTA0MjQy", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-546504242", "createdAt": "2020-12-07T20:20:41Z", "commit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTEwOTA1", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-546510905", "createdAt": "2020-12-07T20:29:53Z", "commit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoyOTo1M1rOIA5Xew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDozMjozMVrOIA5djQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMDgxMQ==", "bodyText": "Following on from my comment #623 (review) I was able to resolve this by running the open link command in a different thread. Actually, we also have a plugin that I'd prefer to use to open links and I replaced the above code with this and it worked.\nPluginExecution.withPlugin(CorePluginRegistry.OPEN_IN_BROWSER)\n                    .withParameter(OpenInBrowserPlugin.APPLICATION_PARAMETER_ID, \"Open \" + getName())\n                    .withParameter(OpenInBrowserPlugin.URL_PARAMETER_ID, url)\n                    .executeLater(null);", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537810811", "createdAt": "2020-12-07T20:29:53Z", "author": {"login": "arcturus2"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        if(Desktop.isDesktopSupported()){\n+            Desktop desktop = Desktop.getDesktop();\n+            try {\n+                desktop.browse(new URI(url));\n+            } catch (IOException | URISyntaxException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMjM2NQ==", "bodyText": "I'm wondering if we want this or whether we not bother. If we can't open the link in a browser from what the Desktop utility provides then I feel we shouldn't worry about running it from the command line like this. If you agree, can we remove these blocks from the different WelcomeProvider plugins?", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537812365", "createdAt": "2020-12-07T20:32:31Z", "author": {"login": "arcturus2"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        if(Desktop.isDesktopSupported()){\n+            Desktop desktop = Desktop.getDesktop();\n+            try {\n+                desktop.browse(new URI(url));\n+            } catch (IOException | URISyntaxException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }\n+        } else {\n+            Runtime runtime = Runtime.getRuntime();\n+            try {\n+                runtime.exec(\"xdg-open \" + url);\n+            } catch (IOException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ed18c1138d6cc5b7c00708c1bb250444c5f2b982", "committedDate": "2020-12-07T21:48:33Z", "message": "Urls open with browser plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjM2ODgw", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-546636880", "createdAt": "2020-12-07T23:51:04Z", "commit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MTowNFrOIBAPCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzo1M1rOIBBDQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzMzNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923337", "createdAt": "2020-12-07T23:51:04Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjU2MA=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzQ2OA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923468", "createdAt": "2020-12-07T23:51:20Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjIwMw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzU0MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923541", "createdAt": "2020-12-07T23:51:33Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjEzNg=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzYxOQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923619", "createdAt": "2020-12-07T23:51:41Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA0Nw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzY1Mw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923653", "createdAt": "2020-12-07T23:51:46Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA5MQ=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNDE2MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537924160", "createdAt": "2020-12-07T23:52:54Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTk0Nw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNTgxNA==", "bodyText": "This could potentially be simplified to:\nif (currentDirectory == null || !currentDirectory.exists()) {\n    currentDirectory = new File(System.getProperty(\"user.home\"));\n}\nreturn currentDirectory;", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537925814", "createdAt": "2020-12-07T23:56:45Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                final File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                final DataObject d = activated.getLookup().lookup(DataObject.class);\n+                if (d != null) {\n+                    final File f = FileUtil.toFile(d.getPrimaryFile());\n+                    if (f != null) {\n+                        return f.getParentFile();\n+                    }\n+                }\n+            }\n+        }\n+        // Otherwise, use last-selected directory, if any.\n+        if (currentDirectory != null && currentDirectory.exists()) {\n+            return currentDirectory;\n+        }\n+        // Fall back to default location ($HOME or similar).\n+        currentDirectory = new File(System.getProperty(\"user.home\"));  // algol\n+        return currentDirectory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNjkzNQ==", "bodyText": "can probably omit the variable here and just add files.size() in the for loop condition", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537926935", "createdAt": "2020-12-07T23:59:02Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.openide.filesystems.FileObject;\n+import org.openide.filesystems.FileUtil;\n+\n+\n+/**\n+ * Get the recent files for the welcome page \n+ * \n+ * @author Delphinus8821\n+ */\n+\n+public class RecentFilesWelcomePage { \n+    \n+    static final List<RecentFiles.HistoryItem> files = RecentFiles.getRecentFiles();\n+    static final List<String> fileNames = new ArrayList<>();\n+    \n+    \n+    private RecentFilesWelcomePage() {\n+    }\n+    \n+    /**\n+     * Gets the names of the files that were recently saved\n+     * \n+     * @return list of recent file names\n+     */\n+    public static List<String> getFileNames(){\n+        RecentFiles.init(); \n+        int num = files.size();\n+        for (int i = 0; i < num; i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzM4OQ==", "bodyText": "filename can be final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537927389", "createdAt": "2020-12-08T00:00:09Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.openide.filesystems.FileObject;\n+import org.openide.filesystems.FileUtil;\n+\n+\n+/**\n+ * Get the recent files for the welcome page \n+ * \n+ * @author Delphinus8821\n+ */\n+\n+public class RecentFilesWelcomePage { \n+    \n+    static final List<RecentFiles.HistoryItem> files = RecentFiles.getRecentFiles();\n+    static final List<String> fileNames = new ArrayList<>();\n+    \n+    \n+    private RecentFilesWelcomePage() {\n+    }\n+    \n+    /**\n+     * Gets the names of the files that were recently saved\n+     * \n+     * @return list of recent file names\n+     */\n+    public static List<String> getFileNames(){\n+        RecentFiles.init(); \n+        int num = files.size();\n+        for (int i = 0; i < num; i++){\n+            final FileObject fo = RecentFiles.convertPath2File(files.get(i).getPath());\n+            if (fo != null && !fileNames.contains(files.get(i).getFileName())){\n+                fileNames.add(files.get(i).getFileName());  \n+            }   \n+        } \n+        return fileNames;\n+    }\n+    \n+    /**\n+     * Opens the file that matches the name of the parameter\n+     * \n+     * @param fileName \n+     */\n+    public static void openGraph(String fileName){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyOTYxNw==", "bodyText": "This should either extend SwingTopComponent<Component or extension> or JavaFxTopComponent<Pane or extension> in order to use the view framework", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537929617", "createdAt": "2020-12-08T00:05:49Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzMDA0Nw==", "bodyText": "I believe it is pass by reference rather than by value. If that is indeed the case, I would either replace subsequent calls on pluginButtons[i] with currentButton (and make currentButton final) or remove currentButton and replace subsequent calls of it with pluginButtons[i]", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537930047", "createdAt": "2020-12-08T00:06:58Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNDA3Nw==", "bodyText": "I assume the 4 is the number of plugin buttons currently being used? If so, I would extract the 4 into a constant in case the number of plugin buttons being used changes. Even better (if possible), I would see if there was a way to calculate the current number of plugin buttons being used so the value doesn't need to be manually changed every time we add or remove a plugin", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537934077", "createdAt": "2020-12-08T00:17:18Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTYwNA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935604", "createdAt": "2020-12-08T00:21:14Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTc2OA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935768", "createdAt": "2020-12-08T00:21:42Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTgwNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935807", "createdAt": "2020-12-08T00:21:48Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {\n+        button.setPrefSize(125, 125);\n+        button.setMaxSize(150, 150);\n+        button.setStyle(\"-fx-background-color: #2e4973;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void createRecentButtons(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 266}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTg1MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935851", "createdAt": "2020-12-08T00:21:55Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {\n+        button.setPrefSize(125, 125);\n+        button.setMaxSize(150, 150);\n+        button.setStyle(\"-fx-background-color: #2e4973;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void createRecentButtons(Button button) {\n+        button.setPrefSize(160, 160);\n+        button.setMaxSize(175, 175);\n+        button.setStyle(\"-fx-background-color: #333333; -fx-background-radius: 10px; -fx-text-fill: white;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void setInfoButtons(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 274}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjE5Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936197", "createdAt": "2020-12-08T00:22:38Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/AddModeWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.opener.GraphOpener;\n+import au.gov.asd.tac.constellation.graph.locking.DualGraph;\n+import au.gov.asd.tac.constellation.graph.schema.Schema;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.visual.concept.VisualConcept;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.text.Font;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The New Graph in Add Mode plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 1)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"AddModeWelcomePlugin=Add Mode Welcome Plugin\")\n+public class AddModeWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String NEW_GRAPH = \"resources/welcome_add_graph.png\";\n+    final ImageView addView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(NEW_GRAPH)));\n+    final Button newButton = new Button();\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Add Graph Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        final Schema schema = SchemaFactoryUtilities.getSchemaFactory(AnalyticSchemaFactory.ANALYTIC_SCHEMA_ID).createSchema();\n+        final StoreGraph sg = new StoreGraph(schema);\n+        schema.newGraph(sg);\n+        int drawModeAttribute = VisualConcept.GraphAttribute.DRAWING_MODE.ensure(sg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjQ0NQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936445", "createdAt": "2020-12-08T00:23:10Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        PluginExecution.withPlugin(CorePluginRegistry.OPEN_IN_BROWSER)\n+            .withParameter(OpenInBrowserPlugin.APPLICATION_PARAMETER_ID, \"Open \" + getName())\n+            .withParameter(OpenInBrowserPlugin.URL_PARAMETER_ID, url)\n+            .executeLater(null);\n+    }\n+\n+    /**\n+     * Determines whether this analytic appear on the Welcome Page \n+     *\n+     * @return true is this analytic should be visible, false otherwise.\n+     */\n+    @Override\n+    public boolean isVisible() {\n+        return true;\n+    }\n+    \n+     /**\n+     * Creates the button object to represent this plugin\n+     * \n+     * @return the button object\n+     */\n+    @Override\n+    public Button getButton(){\n+        started.setFitHeight(25);\n+        started.setFitWidth(25);\n+        final Text title = new Text(\"Getting Started\");\n+        title.setFont(new Font(\"Arial\", 18));\n+        title.setFill(Color.WHITE);\n+        Text subtitle = new Text(\"Guides & Resources\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjUzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936536", "createdAt": "2020-12-08T00:23:23Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that allows the user to join the \n+ * Constellation community\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 8)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"JoinCommWelcomePlugin=Join Comm Welcome Plugin\")\n+public class JoinCommWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String JOIN = \"resources/welcome_join.png\";\n+    final ImageView joinView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(JOIN)));\n+    final Button joinBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(JoinCommWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Join Community Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://gitter.im/constellation-app/community\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjcwNQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936705", "createdAt": "2020-12-08T00:23:53Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to where the user can \n+ * provide feedback for the Constellation app\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 7)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"ProvideFeedbackWelcomePlugin=Provide Feedback Welcome Plugin\")\n+public class ProvideFeedbackWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String FEEDBACK = \"resources/welcome_feedback.png\";\n+    final ImageView feedView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(FEEDBACK)));\n+    final Button feedbackButton = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(ProvideFeedbackWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Provide Feedback Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://github.com/constellation-app/constellation/issues/new\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72218e8a066bc373096e44a55de58f1f9a53bcea", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/72218e8a066bc373096e44a55de58f1f9a53bcea", "committedDate": "2020-12-08T03:30:05Z", "message": "Requested changes implemented"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzExNzAz", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-548711703", "createdAt": "2020-12-09T23:51:26Z", "commit": {"oid": "72218e8a066bc373096e44a55de58f1f9a53bcea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cc2e38e55556270047d7136f3e29d604da446da", "author": {"user": {"login": "Delphinus8821", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/6cc2e38e55556270047d7136f3e29d604da446da", "committedDate": "2020-12-10T00:08:45Z", "message": "Whats new text updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzI2MjM0", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-548726234", "createdAt": "2020-12-10T00:27:24Z", "commit": {"oid": "6cc2e38e55556270047d7136f3e29d604da446da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ba584a112384026df0c292e8bf629352b0b1119", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/9ba584a112384026df0c292e8bf629352b0b1119", "committedDate": "2021-01-11T14:25:39Z", "message": "Resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746088b4bbd23170cc6fa4a1ab55eb34d07db5fe", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/746088b4bbd23170cc6fa4a1ab55eb34d07db5fe", "committedDate": "2021-01-11T14:26:59Z", "message": "Merge branch 'master' into welcome_page_update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1NDAxNzQy", "url": "https://github.com/constellation-app/constellation/pull/623#pullrequestreview-565401742", "createdAt": "2021-01-11T14:27:17Z", "commit": {"oid": "746088b4bbd23170cc6fa4a1ab55eb34d07db5fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3578, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}