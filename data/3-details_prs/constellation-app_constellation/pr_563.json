{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTMyODA1", "number": 563, "title": "Quality Control View Multi-threaded", "bodyText": "Description of the Change\nMove run rule to another thread and take off EDT\nMove saving of state onto plugin\n\nAlternate Designs\nN/A\n\nWhy Should This Be In Core?\nIt speeds up running of rules on large graphs\n\nBenefits\nIt speeds up running of rules on large graphs\nPossible Drawbacks\nNone realized\nVerification Process\nOpen multiple graphs - switch between them\nSwitch Type of elements to trigger a recalculation\n\nApplicable Issues\n#321", "createdAt": "2020-06-04T01:17:40Z", "url": "https://github.com/constellation-app/constellation/pull/563", "merged": true, "mergeCommit": {"oid": "7c5e651ab8a448a5c2bcc19f9432fab850293ce6"}, "closed": true, "closedAt": "2020-06-15T15:44:16Z", "author": {"login": "aldebaran30701"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcniba1gH2gAyNDI3NTMyODA1OmI5NmM2NDViMGFiM2U1ZjY0NTBkYTJmY2Y1NGYzYjEwZWYxYTYyZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrcUHEAFqTQzMDQyMzI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b96c645b0ab3e5f6450da2fcf54f3b10ef1a62e3", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b96c645b0ab3e5f6450da2fcf54f3b10ef1a62e3", "committedDate": "2020-06-03T05:15:51Z", "message": "pull code into plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0d92c31e947cb0e54d0aeab9e554f35e9f24321", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/e0d92c31e947cb0e54d0aeab9e554f35e9f24321", "committedDate": "2020-06-03T23:16:28Z", "message": "correct listener behaviour"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "910c4b889bbe56f34ca8974f6f9318db0d6da46c", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/910c4b889bbe56f34ca8974f6f9318db0d6da46c", "committedDate": "2020-06-04T00:34:18Z", "message": "Merge branch 'master' into QC-threads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1fe89ad3339e11d1563805644f4e39dc0183641", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b1fe89ad3339e11d1563805644f4e39dc0183641", "committedDate": "2020-06-04T00:58:47Z", "message": "format code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538c0508f34ee5712cdb4e0896d84720d5537f31", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/538c0508f34ee5712cdb4e0896d84720d5537f31", "committedDate": "2020-06-04T04:11:02Z", "message": "SQ Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDk5NzY2", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-424099766", "createdAt": "2020-06-04T04:49:04Z", "commit": {"oid": "538c0508f34ee5712cdb4e0896d84720d5537f31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0ODczNjIw", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-424873620", "createdAt": "2020-06-04T22:17:51Z", "commit": {"oid": "538c0508f34ee5712cdb4e0896d84720d5537f31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDUwNTAz", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-425050503", "createdAt": "2020-06-05T07:16:33Z", "commit": {"oid": "538c0508f34ee5712cdb4e0896d84720d5537f31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNjozNFrOGfjAhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxNjozNFrOGfjAhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMjYxNA==", "bodyText": "For some background, there is a quality score available from the data access view near the Go button. An analyst is meant to do their own checks and also double check the quality score before hitting go. The only risk here is that given the plugin runs \"later\", there is no guarantee that it will finish before the analyst decides to press Go.\nThe only advantage of this stuff running on the EDT (though obviously very bad design) is that there is less chance for this race condition to occur because Constellation would effectively lock up until the quality score was updated.\nI will test this out in anger and if you haven't done so already, I will see if there is a way to show a progress or \"thinking\" graphic to the little quality score section to let the analyst know that its not ready for you to press Go.\nHmm, thinking out aloud, perhaps the Go button could also be disabled whilst these jobs run?", "url": "https://github.com/constellation-app/constellation/pull/563#discussion_r435732614", "createdAt": "2020-06-05T07:16:34Z", "author": {"login": "arcturus2"}, "path": "CoreQualityControlView/src/au/gov/asd/tac/constellation/views/qualitycontrol/daemon/QualityControlAutoVetter.java", "diffHunk": "@@ -142,71 +148,20 @@ public void graphChanged(final GraphChangeEvent event) {\n      *\n      * @param graph The graph to vet for quality control, may be null if there\n      * is no current graph.\n-     * @return the current quality control state on the given graph.\n      */\n-    public static QualityControlState updateQualityControlState(final GraphReadMethods graph) {\n-        final List<QualityControlRule> registeredRules = new ArrayList<>();\n-        final List<Integer> vertexList = new ArrayList<>();\n-        final List<String> identifierList = new ArrayList<>();\n-        final List<SchemaVertexType> typeList = new ArrayList<>();\n-\n-        if (graph != null) {\n-            final CountDownLatch countDownLatch = new CountDownLatch(1);\n-            final Thread thread = new Thread(\"Quality Control View: Run Rule\") {\n-                @Override\n-                public void run() {\n-                    final int selectedAttribute = VisualConcept.VertexAttribute.SELECTED.get(graph);\n-                    final int identifierAttribute = VisualConcept.VertexAttribute.IDENTIFIER.get(graph);\n-                    final int typeAttribute = AnalyticConcept.VertexAttribute.TYPE.get(graph);\n-                    if (selectedAttribute != Graph.NOT_FOUND && identifierAttribute != Graph.NOT_FOUND && typeAttribute != Graph.NOT_FOUND) {\n-                        final int vxCount = graph.getVertexCount();\n-                        for (int position = 0; position < vxCount; position++) {\n-                            final int vertex = graph.getVertex(position);\n-                            final String identifier = graph.getStringValue(identifierAttribute, vertex);\n-                            final SchemaVertexType type = graph.getObjectValue(typeAttribute, vertex);\n-\n-                            final boolean selected = graph.getBooleanValue(selectedAttribute, vertex);\n-                            if (selected) {\n-                                vertexList.add(vertex);\n-                                identifierList.add(identifier);\n-                                typeList.add(type);\n-                            }\n-                        }\n-                    }\n-\n-                    // Set up and run each rule.\n-                    if (!vertexList.isEmpty()) {\n-                        for (final QualityControlRule rule : getRules()) {\n-                            rule.clearResults();\n-                            rule.executeRule(graph, vertexList);\n-                            registeredRules.add(rule);\n-                        }\n-                    }\n-\n-                    countDownLatch.countDown();\n-                }\n-            };\n-            thread.start();\n-\n-            try {\n-                countDownLatch.await();\n-            } catch (InterruptedException ex) {\n-                Exceptions.printStackTrace(ex);\n-                Thread.currentThread().interrupt();\n-            }\n-        }\n-\n-        // Build quality control events based on results of rules.\n-        // Sort by descending risk.\n-        final List<QualityControlEvent> qualityControlEvents = new ArrayList<>();\n-        for (int i = 0; i < vertexList.size(); i++) {\n-            final QualityControlEvent qualityControlEvent = new QualityControlEvent(vertexList.get(i), identifierList.get(i), typeList.get(i), Collections.unmodifiableList(registeredRules));\n-            qualityControlEvents.add(qualityControlEvent);\n+    public static void updateQualityControlState(final GraphReadMethods graph) {\n+        final Graph currentGraph = GraphManager.getDefault().getActiveGraph();\n+        Future<?> stateFuture = PluginExecution.withPlugin(new QualityControlViewStateUpdater(graph))\n+                .executeLater(currentGraph);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538c0508f34ee5712cdb4e0896d84720d5537f31"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "312ef19bf228fd079b39f8fddab8f6d793583b5c", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/312ef19bf228fd079b39f8fddab8f6d793583b5c", "committedDate": "2020-06-10T04:41:42Z", "message": "implement observer for run button"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5ca1dddc1170ab5883678f962c171bf4b1f3224", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/e5ca1dddc1170ab5883678f962c171bf4b1f3224", "committedDate": "2020-06-10T05:00:09Z", "message": "SQ Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3Nzg5NDk0", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-427789494", "createdAt": "2020-06-10T07:40:18Z", "commit": {"oid": "e5ca1dddc1170ab5883678f962c171bf4b1f3224"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo0MDoxOFrOGhonuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo0MjoyN1rOGhovjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkyMTcyMA==", "bodyText": "Should this be called something like QualityControlAutoVetterListener to remain consistent with the thing it's listening to?", "url": "https://github.com/constellation-app/constellation/pull/563#discussion_r437921720", "createdAt": "2020-06-10T07:40:18Z", "author": {"login": "cygnus-x-1"}, "path": "CoreQualityControlView/src/au/gov/asd/tac/constellation/views/qualitycontrol/daemon/QualityControlButtonListener.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.qualitycontrol.daemon;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ca1dddc1170ab5883678f962c171bf4b1f3224"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkyMzcyNw==", "bodyText": "The \"stop\" style is also used when a query is running - i'd probably either create a new \"thinking\" style or just disable the button when canRun = false to avoid any confusion.", "url": "https://github.com/constellation-app/constellation/pull/563#discussion_r437923727", "createdAt": "2020-06-10T07:42:27Z", "author": {"login": "cygnus-x-1"}, "path": "CoreDataAccessView/src/au/gov/asd/tac/constellation/views/dataaccess/panes/DataAccessPane.java", "diffHunk": "@@ -1033,6 +1036,23 @@ private void deselectAllPlugins() {\n         });\n     }\n \n+    @Override\n+    public void qualityControlRuleChanged(final boolean canRun) {\n+        if (canRun) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ca1dddc1170ab5883678f962c171bf4b1f3224"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cf8cf50f99e5e5e51972048ce61c22cf0781e3b", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/6cf8cf50f99e5e5e51972048ce61c22cf0781e3b", "committedDate": "2020-06-11T01:02:09Z", "message": "Refactor listener and button style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjQxNDcy", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-429641472", "createdAt": "2020-06-12T10:43:51Z", "commit": {"oid": "6cf8cf50f99e5e5e51972048ce61c22cf0781e3b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cf4d4d82eb591eeac0bc0df3468d17a3c8b4fbf", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/7cf4d4d82eb591eeac0bc0df3468d17a3c8b4fbf", "committedDate": "2020-06-15T05:49:16Z", "message": "correct button state and concurrentmodexception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNDIzMjkz", "url": "https://github.com/constellation-app/constellation/pull/563#pullrequestreview-430423293", "createdAt": "2020-06-15T08:24:08Z", "commit": {"oid": "7cf4d4d82eb591eeac0bc0df3468d17a3c8b4fbf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3548, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}