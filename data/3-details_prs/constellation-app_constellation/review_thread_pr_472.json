{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTA0MjUz", "number": 472, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNDoyMlrOD5MJEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNzo0MVrOD5MMDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjk0MzUyOnYy", "diffSide": "RIGHT", "path": "CoreMapView/src/au/gov/asd/tac/constellation/views/mapview/MapViewTileRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNDoyMlrOGQUoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNDoyMlrOGQUoog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2ODQ4Mg==", "bodyText": "add finals.", "url": "https://github.com/constellation-app/constellation/pull/472#discussion_r419768482", "createdAt": "2020-05-04T22:34:22Z", "author": {"login": "cygnus-x-1"}, "path": "CoreMapView/src/au/gov/asd/tac/constellation/views/mapview/MapViewTileRenderer.java", "diffHunk": "@@ -461,17 +464,46 @@ public void mousePressed(final MouseEvent event) {\n     @Override\n     public void mouseDragged(final MouseEvent event) {\n         assert !SwingUtilities.isEventDispatchThread();\n-\n-        if (event.getButton() == PConstants.CENTER) {\n-            // zoom to box\n-            boxZoomEnabled = true;\n-            boxDeltaX = event.getX();\n-            boxDeltaY = event.getY();\n-        } else if (event.getButton() == PConstants.RIGHT) {\n-            // select markers\n-            boxSelectionEnabled = true;\n-            boxDeltaX = event.getX();\n-            boxDeltaY = event.getY();\n+        \n+        //Checks to see if click was on the map\n+        final boolean ignoreMapInteractions = isIgnoreMapInteractions();\n+        \n+        switch (event.getButton()) {\n+            case PConstants.CENTER:\n+                // zoom to box\n+                boxZoomEnabled = true;\n+                boxDeltaX = event.getX();\n+                boxDeltaY = event.getY();\n+                break;\n+            case PConstants.RIGHT:\n+                // select markers\n+                boxSelectionEnabled = false;\n+                \n+                if (!ignoreMapInteractions) {\n+                    // Triggers a pan event for a right click & drag if within map\n+                    dispatcher.register(map, PanMapEvent.TYPE_PAN, map.getId());\n+                    Location oldLocation = map.getLocation(pmouseX, pmouseY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17a8c7ec89e4a65a38b6c5d43b21beaf70fced2"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjk1MTE2OnYy", "diffSide": "RIGHT", "path": "CoreMapView/src/au/gov/asd/tac/constellation/views/mapview/MapViewTileRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNzo0MVrOGQUtKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozNzo0MVrOGQUtKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2OTY0Mw==", "bodyText": "There should not be any references to specific plugins in the tile renderer if at all possible. Perhaps instead you could add an abstract method to MapOverlay to signal when the overlay has priority on interactions. This way any overlay could take control of interactions when it makes sense for that overlay.", "url": "https://github.com/constellation-app/constellation/pull/472#discussion_r419769643", "createdAt": "2020-05-04T22:37:41Z", "author": {"login": "cygnus-x-1"}, "path": "CoreMapView/src/au/gov/asd/tac/constellation/views/mapview/MapViewTileRenderer.java", "diffHunk": "@@ -461,17 +464,46 @@ public void mousePressed(final MouseEvent event) {\n     @Override\n     public void mouseDragged(final MouseEvent event) {\n         assert !SwingUtilities.isEventDispatchThread();\n-\n-        if (event.getButton() == PConstants.CENTER) {\n-            // zoom to box\n-            boxZoomEnabled = true;\n-            boxDeltaX = event.getX();\n-            boxDeltaY = event.getY();\n-        } else if (event.getButton() == PConstants.RIGHT) {\n-            // select markers\n-            boxSelectionEnabled = true;\n-            boxDeltaX = event.getX();\n-            boxDeltaY = event.getY();\n+        \n+        //Checks to see if click was on the map\n+        final boolean ignoreMapInteractions = isIgnoreMapInteractions();\n+        \n+        switch (event.getButton()) {\n+            case PConstants.CENTER:\n+                // zoom to box\n+                boxZoomEnabled = true;\n+                boxDeltaX = event.getX();\n+                boxDeltaY = event.getY();\n+                break;\n+            case PConstants.RIGHT:\n+                // select markers\n+                boxSelectionEnabled = false;\n+                \n+                if (!ignoreMapInteractions) {\n+                    // Triggers a pan event for a right click & drag if within map\n+                    dispatcher.register(map, PanMapEvent.TYPE_PAN, map.getId());\n+                    Location oldLocation = map.getLocation(pmouseX, pmouseY);\n+                    Location newLocation = map.getLocation(mouseX, mouseY);\n+                    PanMapEvent panMapEvent = new PanMapEvent(this, map.getId(), PanMapEvent.PAN_BY);\n+                    panMapEvent.setFromLocation(oldLocation);\n+                    panMapEvent.setToLocation(newLocation);\n+                    dispatcher.fireMapEvent(panMapEvent);\n+                    dispatcher.unregister(map, PanMapEvent.TYPE_PAN, map.getId());\n+                }   \n+                break;\n+            case PConstants.LEFT:\n+                // select markers\n+                final boolean isMeasuring = overlays.stream().filter( overlay -> \n+                        ToolsOverlay.class.isInstance(overlay) && overlay.isEnabled()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17a8c7ec89e4a65a38b6c5d43b21beaf70fced2"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2320, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}