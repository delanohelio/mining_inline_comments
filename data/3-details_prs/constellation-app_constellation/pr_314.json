{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzI1OTQy", "number": 314, "title": "Lambdas", "bodyText": "Description of the Change\nSuggested by Sonar:\n\nconverted anonymous inner classes to lambdas where possible\nconverted lambdas to method references where possible\n\nAlternate Designs\n\nWhy Should This Be In Core?\n\nBenefits\n\nPossible Drawbacks\n\nVerification Process\n\nApplicable Issues", "createdAt": "2020-03-20T02:54:23Z", "url": "https://github.com/constellation-app/constellation/pull/314", "merged": true, "mergeCommit": {"oid": "be3c568373f2ad88bb5c245bc3d1c53504849c0b"}, "closed": true, "closedAt": "2020-03-23T00:08:57Z", "author": {"login": "antares1470"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPWu5ggH2gAyMzkxMzI1OTQyOmQ2N2RhOWJhYzY4YTk1YjFhODBjOTQxOTg5MzZhZDJhNWFkZmVkYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQRE_7gFqTM3OTA1MjAwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d67da9bac68a95b1a80c94198936ad2a5adfedb0", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d67da9bac68a95b1a80c94198936ad2a5adfedb0", "committedDate": "2020-03-20T02:04:05Z", "message": "converted anonymous inner classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faff7805823ce68e7526150e25233ff88c8b0c8c", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/faff7805823ce68e7526150e25233ff88c8b0c8c", "committedDate": "2020-03-20T02:05:15Z", "message": "Merge branch 'master' into lambdas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f3d881d638f56293babbabea0b4294c8079d2d3", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/5f3d881d638f56293babbabea0b4294c8079d2d3", "committedDate": "2020-03-20T02:12:19Z", "message": "Merge branch 'master-nb11' into lambdas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "975e00f071ad36ea43afd64e679a128cd4489d16", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/975e00f071ad36ea43afd64e679a128cd4489d16", "committedDate": "2020-03-20T02:52:23Z", "message": "converted lambdas to method references"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2", "committedDate": "2020-03-20T03:25:13Z", "message": "removed unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjE4MDU3", "url": "https://github.com/constellation-app/constellation/pull/314#pullrequestreview-378218057", "createdAt": "2020-03-20T03:34:10Z", "commit": {"oid": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzozNDoxMFrOF5G4NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzozNDoxMFrOF5G4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNTg0NQ==", "bodyText": "For some reason I thought you couldn't throw Exceptions from Lambdas...must be dreaming", "url": "https://github.com/constellation-app/constellation/pull/314#discussion_r395425845", "createdAt": "2020-03-20T03:34:10Z", "author": {"login": "arcturus2"}, "path": "CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/flow/Network.java", "diffHunk": "@@ -58,18 +57,15 @@ public Network(final Config config, final GraphReadMethods rg) {\n         Arrays.fill(nodeWeights, 1);\n         sumNodeWeights = rg.getVertexCount();\n \n-        graphConnections = new Iterable<Connection>() {\n-            @Override\n-            public Iterator<Connection> iterator() {\n-                if (config.connectionType == ConnectionType.LINKS) {\n-                    return new LinkIterator(rg);\n-                } else if (config.connectionType == ConnectionType.EDGES) {\n-                    return new EdgeIterator(rg);\n-                } else if (config.connectionType == ConnectionType.TRANSACTIONS) {\n-                    return new TransactionIterator(rg);\n-                } else {\n-                    throw new IllegalStateException(String.format(\"Unexpected connection type %s\", config.connectionType));\n-                }\n+        graphConnections = () -> {\n+            if (config.connectionType == ConnectionType.LINKS) {\n+                return new LinkIterator(rg);\n+            } else if (config.connectionType == ConnectionType.EDGES) {\n+                return new EdgeIterator(rg);\n+            } else if (config.connectionType == ConnectionType.TRANSACTIONS) {\n+                return new TransactionIterator(rg);\n+            } else {\n+                throw new IllegalStateException(String.format(\"Unexpected connection type %s\", config.connectionType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjE5Nzgz", "url": "https://github.com/constellation-app/constellation/pull/314#pullrequestreview-378219783", "createdAt": "2020-03-20T03:43:09Z", "commit": {"oid": "77d9497a2b5ac560de7674f3f6c55cbfdaf64cb2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff", "committedDate": "2020-03-20T13:27:44Z", "message": "Merge branch 'master-nb11' into lambdas"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDUyMDAw", "url": "https://github.com/constellation-app/constellation/pull/314#pullrequestreview-379052000", "createdAt": "2020-03-22T22:01:26Z", "commit": {"oid": "490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjowMToyNlrOF5y2IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjowMToyNlrOF5y2IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NjIwOA==", "bodyText": "I wouldn't suggest doing it now - but this lambda is big enough to be broken up into several functions.", "url": "https://github.com/constellation-app/constellation/pull/314#discussion_r396146208", "createdAt": "2020-03-22T22:01:26Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphNode/src/au/gov/asd/tac/constellation/graph/node/plugins/DefaultPluginEnvironment.java", "diffHunk": "@@ -59,67 +58,52 @@\n     @Override\n     public Future<?> executePluginLater(final Graph graph, final Plugin plugin, final PluginParameters parameters, final boolean interactive, final List<Future<?>> async, final PluginSynchronizer synchronizer) {\n \n-        return pluginExecutor.submit(new Callable<Object>() {\n-            @Override\n-            public Object call() {\n-                Thread.currentThread().setName(THREAD_POOL_NAME);\n-\n-                // If a Future has been specified, don't do anything until the Future has completed.\n-                // A typical use-case is an arrangement followed by a camera reset: obviously doing the reset before the\n-                // vertices have been relocated is not sensible.\n-                if (async != null) {\n-                    for (Future<?> future : async) {\n-                        if (future != null) {\n-                            try {\n-                                future.get();\n-                            } catch (InterruptedException ex) {\n-                                Exceptions.printStackTrace(ex);\n-                                Thread.currentThread().interrupt();\n-                            } catch (ExecutionException ex) {\n-                                Exceptions.printStackTrace(ex);\n-                            }\n+        return pluginExecutor.submit(() -> {\n+            Thread.currentThread().setName(THREAD_POOL_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490f4ee8dc6987b4981d0cab3b3b2d0f9ada2dff"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3828, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}