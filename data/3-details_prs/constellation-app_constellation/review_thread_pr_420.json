{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjIxNTAz", "number": 420, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjozNDowMFrODwRanw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjozNDowMFrODwRanw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTQzNTgzOnYy", "diffSide": "RIGHT", "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjozNDowMFrOGDLT8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODoxMjo1NVrOGFDKGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw==", "bodyText": "Whats up with all these getUTags replacements? That doesn't look to be a real method...", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r405984243", "createdAt": "2020-04-09T06:34:00Z", "author": {"login": "cygnus-x-1"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxOTQxNg==", "bodyText": "I think your correct, getUtags doesn't seem to exist.\nIt would be good to get clarity for the reason behind this change. What is the SQ rule @antares1470 ?\nAlso if we are going to rename methods can you please update CHANGELOG.md @antares1470 ?", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r406519416", "createdAt": "2020-04-09T22:50:48Z", "author": {"login": "arcturus2"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODg0NQ==", "bodyText": "@arcturus2 @cygnus-x-1 check out line 127. The sonar rule was about ensuring that the names of getter functions matched the field they were getting. In this case, there is a field called tags and a field called uTags (the unmodifiable version of tags) and so with the function getTags returning uTags rather than tags, the sonar rule flagged.", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407758845", "createdAt": "2020-04-13T22:33:56Z", "author": {"login": "antares1470"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2MDIyNQ==", "bodyText": "Changelog has now been updated", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407760225", "createdAt": "2020-04-13T22:38:00Z", "author": {"login": "antares1470"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNDAzNQ==", "bodyText": "I don't like this change - the whole uVariable convention seems silly to me. I get and support using modifiable collections where they are not expected to ever change, but why duplicate the variables and store them both in memory? I'd just set variable to the unmodifiable collection - thoughts @arcturus2?", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407804035", "createdAt": "2020-04-14T00:58:34Z", "author": {"login": "cygnus-x-1"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgxNzgyNQ==", "bodyText": "@cygnus-x-1 agreed regarding the increase in memory footprint point.\nSo we have been using this convention is some classes and I was interested in continuing it \ud83d\ude04. The obvious benefit is that it is thread safe.\nI think you will always need both (modifiable and unmodifiable) because if you were to only have the unmodifiable version available to the class then you can't add anything to it? If there is a way then happy to learn.", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407817825", "createdAt": "2020-04-14T01:48:33Z", "author": {"login": "arcturus2"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg0NjYxOA==", "bodyText": "@arcturus2 @cygnus-x-1 What is the preference then for this change?", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407846618", "createdAt": "2020-04-14T03:35:37Z", "author": {"login": "antares1470"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg0Nzg0OQ==", "bodyText": "As I understand it, this pattern is only used where lazy loading happens, and the objects loaded never change after that - so thread safety and additions are non-issues.", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407847849", "createdAt": "2020-04-14T03:40:44Z", "author": {"login": "cygnus-x-1"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk0NzgwMA==", "bodyText": "@cygnus-x-1 so do you mean to say tags won't change after Constellation opens? That's not my understanding though - I thought tags will continue to get added as different plugins run which append respective tags to that ArrayList.", "url": "https://github.com/constellation-app/constellation/pull/420#discussion_r407947800", "createdAt": "2020-04-14T08:12:55Z", "author": {"login": "arcturus2"}, "path": "CorePluginFramework/src/au/gov/asd/tac/constellation/plugins/reporting/GraphReport.java", "diffHunk": "@@ -100,7 +100,7 @@ public PluginReport addPluginReport(Plugin plugin) {\n      * tags recognized by this GraphReport.\n      *\n      * @param pluginReport the specified PluginReport.\n-     * @see GraphReport#getTags()\n+     * @see GraphReport#getUTags()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4NDI0Mw=="}, "originalCommit": {"oid": "2aaca20e3126d1e69696ad9a9179d6ab5d42b381"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2268, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}