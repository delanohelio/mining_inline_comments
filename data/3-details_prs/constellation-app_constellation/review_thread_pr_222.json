{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDkyMzEw", "number": 222, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNTozNVrODc5OUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo0MDowNlrODc5TBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI0MjczOnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/NumberedTextArea.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNTozNVrOFlLtFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNTozNVrOFlLtFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzMzM5OQ==", "bodyText": "This should probably be moved to the CoreUtilities gui package.", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r374533399", "createdAt": "2020-02-04T08:35:35Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/NumberedTextArea.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.visual.opengl.utilities;\n+\n+import java.awt.Color;\n+import javax.swing.JTextArea;\n+import javax.swing.text.Element;\n+\n+/**\n+ *\n+ * @author algol\n+ */\n+public final class NumberedTextArea extends JTextArea {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI0NTY2OnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/DefaultLabelFonts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNjo0NVrOFlLu-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNjo0NVrOFlLu-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzMzg4MQ==", "bodyText": "Even though the font will fall back to Sans Serif, I think there's value in making it explicit here, in particular so that it shows up in the UI.", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r374533881", "createdAt": "2020-02-04T08:36:45Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/DefaultLabelFonts.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.visual.opengl.utilities.glyphs;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The default fonts for use as labels in a graph.\n+ *\n+ * @author cygnus_x-1\n+ */\n+@ServiceProvider(service = ConstellationLabelFonts.class, position = Integer.MAX_VALUE)\n+public class DefaultLabelFonts implements ConstellationLabelFonts {\n+\n+    @Override\n+    public List<String> getFontList() {\n+        final List<String> fontList = new ArrayList<>();\n+//        fontList.add(\"SansSerif\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI0Nzk5OnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/DirectionRun.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNzozMlrOFlLwaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozNzozMlrOFlLwaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzNDI0OQ==", "bodyText": "Can we get rid of all these commented out print statements?", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r374534249", "createdAt": "2020-02-04T08:37:32Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/DirectionRun.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.visual.opengl.utilities.glyphs;\n+\n+import java.awt.Font;\n+import java.awt.font.TextAttribute;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * A run of text that has a single direction (TextAttribute.RUN_DIRECTION_LTR or\n+ * TextAttribute.RUN_DIRECTION_RTL).\n+ *\n+ * @author algol\n+ */\n+class DirectionRun {\n+\n+    final String run;\n+    final Boolean direction;\n+\n+    /**\n+     * A new DirectionRun instance.\n+     *\n+     * @param run Text that has a single direction.\n+     * @param direction One of TextAttribute.RUN_DIRECTION_LTR or\n+     * TextAttribute.RUN_DIRECTION_RTL.\n+     */\n+    private DirectionRun(final String run, final Boolean direction) {\n+        this.run = run;\n+        this.direction = direction;\n+    }\n+\n+    /**\n+     * The corresponding Font layout direction to this run direction.\n+     *\n+     * @return One of Font.LAYOUT_LEFT_TO_RIGHT or Font.LAYOUT_RIGHT_TO_LEFT.\n+     */\n+    int getFontLayoutDirection() {\n+        return direction.equals(TextAttribute.RUN_DIRECTION_LTR)\n+                ? Font.LAYOUT_LEFT_TO_RIGHT\n+                : Font.LAYOUT_RIGHT_TO_LEFT;\n+    }\n+\n+    /**\n+     * Return the direction of the specified codepoint, one of 'L', 'R', 'U'.\n+     * <p>\n+     * Uses Character.getDirectionality() to get the directionality. Codepoints\n+     * with specific directionality become left 'L' or right 'R', all other\n+     * characters are undefined 'U'.\n+     *\n+     * @param codepoint The Unicode codepoint to get the direction of.\n+     *\n+     * @return One of 'L', 'R', 'U' (left, right, undefined).\n+     */\n+    private static char codepointDirection(final int codepoint) {\n+        final byte d = Character.getDirectionality(codepoint);\n+\n+        switch (d) {\n+            case Character.DIRECTIONALITY_RIGHT_TO_LEFT:\n+            case Character.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC:\n+            case Character.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING:\n+            case Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE:\n+                return 'R';\n+\n+            case Character.DIRECTIONALITY_LEFT_TO_RIGHT:\n+            case Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING:\n+            case Character.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE:\n+                return 'L';\n+\n+            default:\n+                return 'U';\n+        }\n+    }\n+\n+    /**\n+     * Find the beginnings and ends of runs of codepoints that have the same\n+     * direction.\n+     * <p>\n+     * If there are any RTL runs, the order of the runs is reversed.\n+     *\n+     * @param text Text to be broken into runs of the same direction.\n+     *\n+     * @return A List<DirectionRun>.\n+     */\n+    static List<DirectionRun> getDirectionRuns(final String text) {\n+        final int length = text.length();\n+\n+        char currDir = ' ';\n+        final ArrayList<DirectionRun> runs = new ArrayList<>();\n+\n+        int start = 0;\n+        for (int offset = 0; offset < length;) {\n+            final int codepoint = text.codePointAt(offset);\n+            final int cc = Character.charCount(codepoint);\n+\n+            final char dir;\n+            final int cptype = Character.getType(codepoint);\n+            /*codepoint==32*/\n+            if ((cptype == Character.SPACE_SEPARATOR || cptype == Character.NON_SPACING_MARK)) {\n+                dir = currDir;\n+            } else {\n+                final char d = codepointDirection(codepoint);\n+                dir = d != 'R' ? 'L' : 'R';\n+            }\n+//            System.out.printf(\"codepoint %d %d %c %c %d %s\\n\", offset, codepoint, currDir, dir, Character.getType(codepoint), Character.UnicodeBlock.of(codepoint));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI1Mjg0OnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozOToxOVrOFlLzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODozOToxOVrOFlLzag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzNTAxOA==", "bodyText": "New classes should at minimum have class-level javadoc describing what they do.", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r374535018", "createdAt": "2020-02-04T08:39:19Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManager.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.visual.opengl.utilities.glyphs;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+\n+/**\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjI1NDc2OnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManagerFX.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo0MDowNlrOFlL0og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozODozOVrOFm1szQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzNTMzMA==", "bodyText": "Sooo... we can just get rid of this now.... right?", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r374535330", "createdAt": "2020-02-04T08:40:06Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManagerFX.java", "diffHunk": "@@ -57,9 +59,9 @@\n  *\n  * @author sirius\n  */\n-public class GlyphManager {\n+public class GlyphManagerFX implements GlyphManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MDAyOQ==", "bodyText": "After speaking with @algol60 it sounds like we should keep this around for a few months as a fallback.", "url": "https://github.com/constellation-app/constellation/pull/222#discussion_r376270029", "createdAt": "2020-02-07T08:38:39Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManagerFX.java", "diffHunk": "@@ -57,9 +59,9 @@\n  *\n  * @author sirius\n  */\n-public class GlyphManager {\n+public class GlyphManagerFX implements GlyphManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUzNTMzMA=="}, "originalCommit": {"oid": "dec5d3f0536a6f2a00bce1fff01591164c859749"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2484, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}