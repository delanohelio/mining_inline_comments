{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MjkxMTIz", "number": 579, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNToyNDo1M1rOEFZJxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNToyNDo1M1rOEFZJxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDkwNDM4OnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNToyNDo1M1rOGjjlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1NDozMVrOGjlTDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjMyNw==", "bodyText": "The idea here was so that we didn't call to update the layer bit masks of Vertices or Transactions when an update to their Id was called. Every other instance that a Vertex or Transaction was altered will result in an update here. Just prevents a loop: update color -> trigger bitmask recalc -> change vertex bitmask -> trigger bitmask recalc. Value is set again and it continues to loop.", "url": "https://github.com/constellation-app/constellation/pull/579#discussion_r439936327", "createdAt": "2020-06-15T05:24:53Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2223,43 +2200,13 @@ private void updateLayerMask(final int attributeId, final GraphElementType eleme\n \n     // update the layer visibility for an element when an attribute changes\n     private void updateLayerMask(final int attributeId, final int elementid) {\n-        if (transactionLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            transactionLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the transaction given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (vertexLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            vertexLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the vertex given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (layerMaskSelectedAttributeId == Graph.NOT_FOUND) {\n-            layerMaskSelectedAttributeId = this.addAttribute(\n-                    GraphElementType.GRAPH,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_SELECTED_ATTRIBUTE_LABEL,\n-                    \"The layers currently enabled for display\", 1, null);\n-        }\n-        if (vertexLayerMaskAttribureId == Graph.NOT_FOUND) {\n-            vertexLayerMaskAttribureId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this vertex belongs to\", 1, null);\n-        }\n-        if (transactionFilterBitmaskAttrId == Graph.NOT_FOUND) {\n-            transactionFilterBitmaskAttrId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this transaction belongs to\", 1, null);\n-        }\n+        layerMaskSelectedAttributeId = LayersConcept.GraphAttribute.LAYER_MASK_SELECTED.get(this);\n+        vertexLayerMaskAttribureId = LayersConcept.VertexAttribute.LAYER_MASK.get(this);\n+        vertexLayerVisibilityAttributeId = LayersConcept.VertexAttribute.LAYER_VISIBILITY.get(this);\n+        transactionLayerMaskAttrId = LayersConcept.TransactionAttribute.LAYER_MASK.get(this);\n+        transactionLayerVisibilityAttributeId = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.get(this);\n+\n+        // TODO: not sure about why we have to keep id's recorded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f230c82b1b1a06538ed243d7fc79fffd7a844fbd"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODU5NA==", "bodyText": "Thanks @aldebaran30701. I updated the PR by removing the TODO comment but you saw it already. In that case a follow up question would be if all you want to do is see if the attribute is the vertex/transaction layer visibility attributes then rather than storing a copy of the attribute can we get it from the attribute description like:\nif (!LAYER_VISIBILITY_ATTRIBUTE_LABEL.equals(getAttributeDescription(attributeId))){\n...\n}", "url": "https://github.com/constellation-app/constellation/pull/579#discussion_r439938594", "createdAt": "2020-06-15T05:34:39Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2223,43 +2200,13 @@ private void updateLayerMask(final int attributeId, final GraphElementType eleme\n \n     // update the layer visibility for an element when an attribute changes\n     private void updateLayerMask(final int attributeId, final int elementid) {\n-        if (transactionLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            transactionLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the transaction given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (vertexLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            vertexLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the vertex given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (layerMaskSelectedAttributeId == Graph.NOT_FOUND) {\n-            layerMaskSelectedAttributeId = this.addAttribute(\n-                    GraphElementType.GRAPH,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_SELECTED_ATTRIBUTE_LABEL,\n-                    \"The layers currently enabled for display\", 1, null);\n-        }\n-        if (vertexLayerMaskAttribureId == Graph.NOT_FOUND) {\n-            vertexLayerMaskAttribureId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this vertex belongs to\", 1, null);\n-        }\n-        if (transactionFilterBitmaskAttrId == Graph.NOT_FOUND) {\n-            transactionFilterBitmaskAttrId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this transaction belongs to\", 1, null);\n-        }\n+        layerMaskSelectedAttributeId = LayersConcept.GraphAttribute.LAYER_MASK_SELECTED.get(this);\n+        vertexLayerMaskAttribureId = LayersConcept.VertexAttribute.LAYER_MASK.get(this);\n+        vertexLayerVisibilityAttributeId = LayersConcept.VertexAttribute.LAYER_VISIBILITY.get(this);\n+        transactionLayerMaskAttrId = LayersConcept.TransactionAttribute.LAYER_MASK.get(this);\n+        transactionLayerVisibilityAttributeId = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.get(this);\n+\n+        // TODO: not sure about why we have to keep id's recorded", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjMyNw=="}, "originalCommit": {"oid": "f230c82b1b1a06538ed243d7fc79fffd7a844fbd"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MDY4Mw==", "bodyText": "That looks like it would work, if i remember correctly I check those Ids in updateLayerMask() somewhere, if that is the case would it be alright if we checked those the same way? Just wondering from a performance standpoint.", "url": "https://github.com/constellation-app/constellation/pull/579#discussion_r439960683", "createdAt": "2020-06-15T06:45:13Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2223,43 +2200,13 @@ private void updateLayerMask(final int attributeId, final GraphElementType eleme\n \n     // update the layer visibility for an element when an attribute changes\n     private void updateLayerMask(final int attributeId, final int elementid) {\n-        if (transactionLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            transactionLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the transaction given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (vertexLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            vertexLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the vertex given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (layerMaskSelectedAttributeId == Graph.NOT_FOUND) {\n-            layerMaskSelectedAttributeId = this.addAttribute(\n-                    GraphElementType.GRAPH,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_SELECTED_ATTRIBUTE_LABEL,\n-                    \"The layers currently enabled for display\", 1, null);\n-        }\n-        if (vertexLayerMaskAttribureId == Graph.NOT_FOUND) {\n-            vertexLayerMaskAttribureId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this vertex belongs to\", 1, null);\n-        }\n-        if (transactionFilterBitmaskAttrId == Graph.NOT_FOUND) {\n-            transactionFilterBitmaskAttrId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this transaction belongs to\", 1, null);\n-        }\n+        layerMaskSelectedAttributeId = LayersConcept.GraphAttribute.LAYER_MASK_SELECTED.get(this);\n+        vertexLayerMaskAttribureId = LayersConcept.VertexAttribute.LAYER_MASK.get(this);\n+        vertexLayerVisibilityAttributeId = LayersConcept.VertexAttribute.LAYER_VISIBILITY.get(this);\n+        transactionLayerMaskAttrId = LayersConcept.TransactionAttribute.LAYER_MASK.get(this);\n+        transactionLayerVisibilityAttributeId = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.get(this);\n+\n+        // TODO: not sure about why we have to keep id's recorded", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjMyNw=="}, "originalCommit": {"oid": "f230c82b1b1a06538ed243d7fc79fffd7a844fbd"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NDQzMQ==", "bodyText": "if that is the case would it be alright if we checked those the same way?\n\nYep we can. Though I'll do this is a separate PR as my focus is to get the unit tests over the line. It will also mean this PR is not making too many changes.\n\nJust wondering from a performance standpoint\n\nGood point to keep in mind. I will do some profiling to compare both cases though I think it will be negligible because it will be looking up arrays, though the String compare will be the only issue.", "url": "https://github.com/constellation-app/constellation/pull/579#discussion_r439964431", "createdAt": "2020-06-15T06:54:31Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2223,43 +2200,13 @@ private void updateLayerMask(final int attributeId, final GraphElementType eleme\n \n     // update the layer visibility for an element when an attribute changes\n     private void updateLayerMask(final int attributeId, final int elementid) {\n-        if (transactionLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            transactionLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the transaction given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (vertexLayerVisibilityAttributeId == Graph.NOT_FOUND) {\n-            vertexLayerVisibilityAttributeId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    FloatAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_VISIBILITY_ATTRIBUTE_LABEL,\n-                    \"The visibility of the vertex given \"\n-                    + \"the layers it belongs to\", 1.0f, null);\n-        }\n-        if (layerMaskSelectedAttributeId == Graph.NOT_FOUND) {\n-            layerMaskSelectedAttributeId = this.addAttribute(\n-                    GraphElementType.GRAPH,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_SELECTED_ATTRIBUTE_LABEL,\n-                    \"The layers currently enabled for display\", 1, null);\n-        }\n-        if (vertexLayerMaskAttribureId == Graph.NOT_FOUND) {\n-            vertexLayerMaskAttribureId = this.addAttribute(\n-                    GraphElementType.VERTEX,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this vertex belongs to\", 1, null);\n-        }\n-        if (transactionFilterBitmaskAttrId == Graph.NOT_FOUND) {\n-            transactionFilterBitmaskAttrId = this.addAttribute(\n-                    GraphElementType.TRANSACTION,\n-                    IntegerAttributeDescription.ATTRIBUTE_NAME,\n-                    LAYER_MASK_ATTRIBUTE_LABEL,\n-                    \"Bitmask identifying the layers this transaction belongs to\", 1, null);\n-        }\n+        layerMaskSelectedAttributeId = LayersConcept.GraphAttribute.LAYER_MASK_SELECTED.get(this);\n+        vertexLayerMaskAttribureId = LayersConcept.VertexAttribute.LAYER_MASK.get(this);\n+        vertexLayerVisibilityAttributeId = LayersConcept.VertexAttribute.LAYER_VISIBILITY.get(this);\n+        transactionLayerMaskAttrId = LayersConcept.TransactionAttribute.LAYER_MASK.get(this);\n+        transactionLayerVisibilityAttributeId = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.get(this);\n+\n+        // TODO: not sure about why we have to keep id's recorded", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjMyNw=="}, "originalCommit": {"oid": "f230c82b1b1a06538ed243d7fc79fffd7a844fbd"}, "originalPosition": 171}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2179, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}