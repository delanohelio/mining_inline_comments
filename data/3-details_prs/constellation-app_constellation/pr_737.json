{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDcxNjEx", "number": 737, "title": "Upgrade Schema Vertex Types - Fixes #730", "bodyText": "Description of the Change\nAdding certain nodes to a v1 graph opened in v2 will introduce duplicate types. This is because the Type have changed (which is the validation and detection regex).\nWe can use the Schema upgrade framework to detect old graphs and then upgrade them. Once this change goes through, the Analytic Schema version will be 4.\nAlternate Designs\n\nWhy Should This Be In Core?\n\nBenefits\nSupporting backwords compatibilty is something we always want to do in Constellation to make it seamless for users to continue working with their graphs and not worry about version upgrades breaking their graphs.\nPossible Drawbacks\n\nVerification Process\n\nI created a graph in v1.3.1 using this script run in the Scripting View. There are 27 nodes.\nOpened the graph in v2 and ran the script again. This showed 13 new nodes. These needed to be upgraded.\n\nAfter adding AnalyticSchemaV4UpdateProvider I re-ran step 2 and observed that there was 27 nodes.\nI decided to use the Scripting View so that I didn't need to write a plugin and have to checkout Constellation v1 to implement it there also. I guess there was only 27 nodes so you could create them by hand...but where is the fun in that?\nApplicable Issues\n#730", "createdAt": "2020-07-23T04:18:53Z", "url": "https://github.com/constellation-app/constellation/pull/737", "merged": true, "mergeCommit": {"oid": "8a0782c8a7fdc1e692cd8ad1d75776ef3e41975f"}, "closed": true, "closedAt": "2020-07-24T13:11:11Z", "author": {"login": "arcturus2"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3nZXLgH2gAyNDU1NDcxNjExOjAzN2Q3MDExYmUyMTUwMzMzMjllYTg4YWY3NjEwMmZkMWM1NDk1NDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4DxeoAH2gAyNDU1NDcxNjExOjBmNzViNTBlNGU4MTFhNGI5NTk0MTA2ZmQ5NWIxMzc2MGU4ZDNhZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "037d7011be215033329ea88af76102fd1c549546", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/037d7011be215033329ea88af76102fd1c549546", "committedDate": "2020-07-23T04:05:55Z", "message": ":bug: Upgrade Schema Vertex Types\n* Adding certain nodes to a v1 graph opened in v2 will introduce duplicate types. This is because the Type have changed (which is the validation and detection regex)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODM4NzMw", "url": "https://github.com/constellation-app/constellation/pull/737#pullrequestreview-453838730", "createdAt": "2020-07-23T05:09:51Z", "commit": {"oid": "037d7011be215033329ea88af76102fd1c549546"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTowOTo1MVrOG18ZKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTowOTo1MVrOG18ZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxNzE5NQ==", "bodyText": "Sonar is identifying using double brace initialisation as a bug. Consequently, it would be good to remove the need to use it", "url": "https://github.com/constellation-app/constellation/pull/737#discussion_r459217195", "createdAt": "2020-07-23T05:09:51Z", "author": {"login": "antares1470"}, "path": "CoreAnalyticSchema/src/au/gov/asd/tac/constellation/graph/schema/analytic/compatibility/AnalyticSchemaV4UpdateProvider.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.schema.analytic.compatibility;\n+\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.concept.AnalyticConcept;\n+import au.gov.asd.tac.constellation.graph.schema.type.SchemaVertexType;\n+import au.gov.asd.tac.constellation.graph.versioning.SchemaUpdateProvider;\n+import au.gov.asd.tac.constellation.graph.versioning.UpdateProvider;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * Upgrade Vertex Types that have changed.\n+ * <p>\n+ * The detection regex and validation regex was reviewed and improved.\n+ *\n+ * @author arcturus\n+ */\n+@ServiceProvider(service = UpdateProvider.class)\n+public class AnalyticSchemaV4UpdateProvider extends SchemaUpdateProvider {\n+\n+    public static final int SCHEMA_VERSION_THIS_UPDATE = 4;\n+\n+    @Override\n+    protected SchemaFactory getSchema() {\n+        return SchemaFactoryUtilities.getSchemaFactory(AnalyticSchemaFactory.ANALYTIC_SCHEMA_ID);\n+    }\n+\n+    @Override\n+    public int getFromVersionNumber() {\n+        return AnalyticSchemaV3UpdateProvider.SCHEMA_VERSION_THIS_UPDATE;\n+    }\n+\n+    @Override\n+    public int getToVersionNumber() {\n+        return SCHEMA_VERSION_THIS_UPDATE;\n+    }\n+\n+    @Override\n+    protected void schemaUpdate(final StoreGraph graph) {\n+        final int typeAttribute = AnalyticConcept.VertexAttribute.TYPE.get(graph);\n+\n+        final Map<String, SchemaVertexType> typesToUpgrade = new HashMap<>() {\n+            {\n+                put(AnalyticConcept.VertexType.MD5.getName(), AnalyticConcept.VertexType.MD5);\n+                put(AnalyticConcept.VertexType.SHA1.getName(), AnalyticConcept.VertexType.SHA1);\n+                put(AnalyticConcept.VertexType.SHA256.getName(), AnalyticConcept.VertexType.SHA256);\n+                put(AnalyticConcept.VertexType.COUNTRY.getName(), AnalyticConcept.VertexType.COUNTRY);\n+                put(AnalyticConcept.VertexType.GEOHASH.getName(), AnalyticConcept.VertexType.GEOHASH);\n+                put(AnalyticConcept.VertexType.MGRS.getName(), AnalyticConcept.VertexType.MGRS);\n+                put(AnalyticConcept.VertexType.MD5.getName(), AnalyticConcept.VertexType.MD5);\n+                put(AnalyticConcept.VertexType.IPV4.getName(), AnalyticConcept.VertexType.IPV4);\n+                put(AnalyticConcept.VertexType.IPV6.getName(), AnalyticConcept.VertexType.IPV6);\n+                put(AnalyticConcept.VertexType.EMAIL_ADDRESS.getName(), AnalyticConcept.VertexType.EMAIL_ADDRESS);\n+                put(AnalyticConcept.VertexType.HOST_NAME.getName(), AnalyticConcept.VertexType.HOST_NAME);\n+                put(AnalyticConcept.VertexType.URL.getName(), AnalyticConcept.VertexType.URL);\n+                put(AnalyticConcept.VertexType.TELEPHONE_IDENTIFIER.getName(), AnalyticConcept.VertexType.TELEPHONE_IDENTIFIER);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037d7011be215033329ea88af76102fd1c549546"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e92213720e735a6c9e53943c71f1d348eed9df9", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8e92213720e735a6c9e53943c71f1d348eed9df9", "committedDate": "2020-07-23T06:28:07Z", "message": ":shirt: Fix a SonarQube warning"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTM0MDI4", "url": "https://github.com/constellation-app/constellation/pull/737#pullrequestreview-454534028", "createdAt": "2020-07-23T22:19:33Z", "commit": {"oid": "8e92213720e735a6c9e53943c71f1d348eed9df9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTQ4NDAy", "url": "https://github.com/constellation-app/constellation/pull/737#pullrequestreview-454548402", "createdAt": "2020-07-23T22:55:25Z", "commit": {"oid": "8e92213720e735a6c9e53943c71f1d348eed9df9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTk1MTc5", "url": "https://github.com/constellation-app/constellation/pull/737#pullrequestreview-454595179", "createdAt": "2020-07-24T01:40:15Z", "commit": {"oid": "8e92213720e735a6c9e53943c71f1d348eed9df9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0MDoxNVrOG2g36Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMTo0MDoxNVrOG2g36Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNDg4OQ==", "bodyText": "This will probably work just fine, but could be improved by comparing more of the type object than just the name.", "url": "https://github.com/constellation-app/constellation/pull/737#discussion_r459814889", "createdAt": "2020-07-24T01:40:15Z", "author": {"login": "cygnus-x-1"}, "path": "CoreAnalyticSchema/src/au/gov/asd/tac/constellation/graph/schema/analytic/compatibility/AnalyticSchemaV4UpdateProvider.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.schema.analytic.compatibility;\n+\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.concept.AnalyticConcept;\n+import au.gov.asd.tac.constellation.graph.schema.type.SchemaVertexType;\n+import au.gov.asd.tac.constellation.graph.versioning.SchemaUpdateProvider;\n+import au.gov.asd.tac.constellation.graph.versioning.UpdateProvider;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * Upgrade Vertex Types that have changed.\n+ * <p>\n+ * The detection regex and validation regex was reviewed and improved.\n+ *\n+ * @author arcturus\n+ */\n+@ServiceProvider(service = UpdateProvider.class)\n+public class AnalyticSchemaV4UpdateProvider extends SchemaUpdateProvider {\n+\n+    public static final int SCHEMA_VERSION_THIS_UPDATE = 4;\n+\n+    @Override\n+    protected SchemaFactory getSchema() {\n+        return SchemaFactoryUtilities.getSchemaFactory(AnalyticSchemaFactory.ANALYTIC_SCHEMA_ID);\n+    }\n+\n+    @Override\n+    public int getFromVersionNumber() {\n+        return AnalyticSchemaV3UpdateProvider.SCHEMA_VERSION_THIS_UPDATE;\n+    }\n+\n+    @Override\n+    public int getToVersionNumber() {\n+        return SCHEMA_VERSION_THIS_UPDATE;\n+    }\n+\n+    @Override\n+    protected void schemaUpdate(final StoreGraph graph) {\n+        final int typeAttribute = AnalyticConcept.VertexAttribute.TYPE.get(graph);\n+\n+        final Map<String, SchemaVertexType> typesToUpgrade = new HashMap<>();\n+        typesToUpgrade.put(AnalyticConcept.VertexType.MD5.getName(), AnalyticConcept.VertexType.MD5);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.SHA1.getName(), AnalyticConcept.VertexType.SHA1);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.SHA256.getName(), AnalyticConcept.VertexType.SHA256);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.COUNTRY.getName(), AnalyticConcept.VertexType.COUNTRY);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.GEOHASH.getName(), AnalyticConcept.VertexType.GEOHASH);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.MGRS.getName(), AnalyticConcept.VertexType.MGRS);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.MD5.getName(), AnalyticConcept.VertexType.MD5);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.IPV4.getName(), AnalyticConcept.VertexType.IPV4);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.IPV6.getName(), AnalyticConcept.VertexType.IPV6);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.EMAIL_ADDRESS.getName(), AnalyticConcept.VertexType.EMAIL_ADDRESS);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.HOST_NAME.getName(), AnalyticConcept.VertexType.HOST_NAME);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.URL.getName(), AnalyticConcept.VertexType.URL);\n+        typesToUpgrade.put(AnalyticConcept.VertexType.TELEPHONE_IDENTIFIER.getName(), AnalyticConcept.VertexType.TELEPHONE_IDENTIFIER);\n+\n+        for (int vertex = 0; vertex < graph.getVertexCount(); vertex++) {\n+            final int vertexId = graph.getVertex(vertex);\n+            final SchemaVertexType oldType = graph.getObjectValue(typeAttribute, vertexId);\n+\n+            if (typesToUpgrade.containsKey(oldType.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e92213720e735a6c9e53943c71f1d348eed9df9"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f75b50e4e811a4b9594106fd95b13760e8d3afa", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/0f75b50e4e811a4b9594106fd95b13760e8d3afa", "committedDate": "2020-07-24T13:09:36Z", "message": ":bug: Upgrade Schema Vertex Types"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3616, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}