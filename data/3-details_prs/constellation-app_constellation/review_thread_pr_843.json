{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODMyODAy", "number": 843, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyMjo1OVrOEhb0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyNTozNlrOEhb3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDk0MzQ1OnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyMjo1OVrOHOv81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjo0MDo0NlrOHolBtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzczMw==", "bodyText": "Should this have an assert to check if it was set correctly?", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227733", "createdAt": "2020-09-08T22:22:59Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMTczMw==", "bodyText": "Updated thanks so much for the feedback", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512311733", "createdAt": "2020-10-26T22:40:46Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzczMw=="}, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDk0NDI5OnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyMzoxNlrOHOv9RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjo0MToxNVrOHolCZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzg0NQ==", "bodyText": "Should this have an assert to check if it was set correctly?", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227845", "createdAt": "2020-09-08T22:23:16Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMTkxMQ==", "bodyText": "Updated", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512311911", "createdAt": "2020-10-26T22:41:15Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzg0NQ=="}, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDk1MDIwOnYy", "diffSide": "RIGHT", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyNTozNlrOHOwAuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjo0Mjo1NVrOHolEwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyODcyOA==", "bodyText": "Should this have an assert to check if it was set correctly?\nQuite a few more it seems, I wont add review for all. If it does need attention then I'd say just go through the tests.", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485228728", "createdAt": "2020-09-08T22:25:36Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);\n+    }\n+\n+    /**\n+     * Test of getByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetByte() {\n+        int id = 0;\n+        byte expResult = 0;\n+        byte result = instance.getByte(id);\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetByte() {\n+        int id = 0;\n+        byte value = 0;\n+        instance.setByte(id, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMjUxNA==", "bodyText": "Yep updated most of them and ready for a review @aldebaran30701. I might continue with more tests down the track but would like to get whats done in if thats ok.", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512312514", "createdAt": "2020-10-26T22:42:55Z", "author": {"login": "arcturus2"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);\n+    }\n+\n+    /**\n+     * Test of getByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetByte() {\n+        int id = 0;\n+        byte expResult = 0;\n+        byte result = instance.getByte(id);\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetByte() {\n+        int id = 0;\n+        byte value = 0;\n+        instance.setByte(id, value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyODcyOA=="}, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 146}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}