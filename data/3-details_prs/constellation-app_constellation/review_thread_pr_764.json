{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzkzMzAy", "number": 764, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo1NDo0M1rOEV7uDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODowMTozNVrOEV73ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDMzOTk3OnYy", "diffSide": "RIGHT", "path": "CoreAnalyticView/nbproject/project.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo1NDo0M1rOG8-OtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDowMToxM1rOG9ICuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NzMxNw==", "bodyText": "So we can't do this @formalhaut69 because it means that the Analytic View becomes tied to the Attribute Editor. This becomes a problem should we decide to replace the Attribute Editor with a different implementation module; we can't because it will want to remove the Analytic View too.\n\nFYI all of the views now are not dependant on one another so we gotta keep it that way.\nPerhaps look at the implementation in RemoveUnusedAttributesPlugin for inspiration and you might need to create a new utility method that could live somewhere in the Core Graph Framework module so it can be used by views and any plugin in the future.", "url": "https://github.com/constellation-app/constellation/pull/764#discussion_r466587317", "createdAt": "2020-08-06T17:54:43Z", "author": {"login": "arcturus2"}, "path": "CoreAnalyticView/nbproject/project.xml", "diffHunk": "@@ -94,6 +94,14 @@\n                         <specification-version>1.0</specification-version>\n                     </run-dependency>\n                 </dependency>\n+                <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9cbe17426d7f5c392eb391287c72ca2cca9adf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc0ODA5MQ==", "bodyText": "Okay, no worries @arcturus2 . I'll try and figure out an alternate way to do this without making any new dependencies.", "url": "https://github.com/constellation-app/constellation/pull/764#discussion_r466748091", "createdAt": "2020-08-07T00:01:13Z", "author": {"login": "formalhaut69"}, "path": "CoreAnalyticView/nbproject/project.xml", "diffHunk": "@@ -94,6 +94,14 @@\n                         <specification-version>1.0</specification-version>\n                     </run-dependency>\n                 </dependency>\n+                <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NzMxNw=="}, "originalCommit": {"oid": "3e9cbe17426d7f5c392eb391287c72ca2cca9adf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDM2NDc0OnYy", "diffSide": "RIGHT", "path": "CoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/analytics/LevenshteinDistanceAnalytic.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODowMTozNVrOG8-emw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODowMTozNVrOG8-emw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5MTM4Nw==", "bodyText": "Please use StringAttributeDescription.ATTRIBUTE_NAME instead of \"string\".", "url": "https://github.com/constellation-app/constellation/pull/764#discussion_r466591387", "createdAt": "2020-08-06T18:01:35Z", "author": {"login": "arcturus2"}, "path": "CoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/analytics/LevenshteinDistanceAnalytic.java", "diffHunk": "@@ -86,12 +86,10 @@ public void onPrerequisiteAttributeChange(final Graph graph, final PluginParamet\n         if (graph != null && graph.getSchema() != null) {\n             final ReadableGraph readableGraph = graph.getReadableGraph();\n             try {\n-                final Map<String, SchemaAttribute> attributes = graph.getSchema().getFactory().getRegisteredAttributes(GraphElementType.VERTEX);\n-                for (final String attributeName : attributes.keySet()) {\n-                    final SchemaAttribute attribute = attributes.get(attributeName);\n-                    final String attributeType = attribute.getAttributeType();\n-                    if (StringAttributeDescription.ATTRIBUTE_NAME.equals(attributeType)) {\n-                        stringAttributes.add(attributeName);\n+                final ArrayList<AttributeData> nodeAttributes = new AttributeReader(graph).refreshAttributes().getAttributeNames().get(GraphElementType.VERTEX);\n+                for (AttributeData nodeAttribute : nodeAttributes) {\n+                    if (nodeAttribute.getDataType().equals(\"string\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9cbe17426d7f5c392eb391287c72ca2cca9adf"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2252, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}