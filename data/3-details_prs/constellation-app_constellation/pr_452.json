{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDI4NDI3", "number": 452, "title": "Fix some bugs running Export Glyph Textures", "bodyText": "Description of the Change\nI looked at this bit of code during my review of #446 and couldn't help but fix the following:\n\nFixed some exceptions seen running Experimental -> Glyph Textures\nRemoved some comments no longer used\nAdded some finals\n\nAlternate Designs\n\nWhy Should This Be In Core?\n\nBenefits\n\nPossible Drawbacks\n\nVerification Process\n\nApplicable Issues", "createdAt": "2020-04-22T17:21:19Z", "url": "https://github.com/constellation-app/constellation/pull/452", "merged": true, "mergeCommit": {"oid": "d5e034b97df4a345446d52e78a1db374dbe9dc63"}, "closed": true, "closedAt": "2020-04-23T12:48:58Z", "author": {"login": "arcturus2"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaLj10gH2gAyNDA3NDI4NDI3OmVmNDZmZTM1Y2NhYzIyOWExZjgwNjExZTgzOWQ2NDViOGE5NjFlNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcacQw9AH2gAyNDA3NDI4NDI3Ojc3ZDk0MjNjMDZiNzZmMjU3MzA5OTY0YmVjNTNjMmE2ZjJhYTFlNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ef46fe35ccac229a1f80611e839d645b8a961e65", "committedDate": "2020-04-22T17:16:13Z", "message": ":bug: Fix some bugs running Export Glyph Textures\n* Fixed some exceptions seen running Experimental -> Glphy Textures\n* Removed some comments no longer used\n* Added some finals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4Njk1MzA5", "url": "https://github.com/constellation-app/constellation/pull/452#pullrequestreview-398695309", "createdAt": "2020-04-23T01:16:48Z", "commit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMToxNjo0OVrOGKSUtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMToxNjo0OVrOGKSUtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzOTE1Ng==", "bodyText": "out can be final, also remove the rogue space.", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413439156", "createdAt": "2020-04-23T01:16:49Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzE1Njc2", "url": "https://github.com/constellation-app/constellation/pull/452#pullrequestreview-398715676", "createdAt": "2020-04-23T02:24:49Z", "commit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjoyNDo1MFrOGKTsQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjoyNDo1MFrOGKTsQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2MTU3MQ==", "bodyText": "is the intention to remove this once developer testing is done?", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413461571", "createdAt": "2020-04-23T02:24:50Z", "author": {"login": "antares1470"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {\n+                        glyphManager.writeGlyphBuffer(page, out);\n+                    } catch (IOException ex) {\n+                        // Nothing to do here - this is just for developer testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzM2OTE5", "url": "https://github.com/constellation-app/constellation/pull/452#pullrequestreview-398736919", "createdAt": "2020-04-23T03:38:41Z", "commit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed814bed5e9d16050912cf0fdfd65876bbf7926f", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ed814bed5e9d16050912cf0fdfd65876bbf7926f", "committedDate": "2020-04-23T12:36:35Z", "message": ":art: Updates based on feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d9423c06b76f257309964bec53c2a6f2aa1e73", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/77d9423c06b76f257309964bec53c2a6f2aa1e73", "committedDate": "2020-04-23T12:43:46Z", "message": ":art: Log the exception rather than ignore it"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3691, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}