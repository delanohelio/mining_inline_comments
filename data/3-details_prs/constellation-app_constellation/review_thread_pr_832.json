{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzYzNTQz", "number": 832, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMTo1OTowNVrOEfJqUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjo0MTozNVrOEgvSbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDk5NjAyOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMTo1OTowNVrOHLPTWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODoxMTozNVrOHNXg5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU0NzA5Ng==", "bodyText": "Since the constructor is private, I would move the instantiation of this constant to the declaration in line 54.\nTo the constructor, I would then add throw new IllegalStateException(\"Utility class\")", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r481547096", "createdAt": "2020-09-02T01:59:05Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -29,11 +36,28 @@\n  */\n public class GraphObjectUtilities {\n \n+    private static final GraphObjectUtilities graphObjectUtilities = new GraphObjectUtilities();\n+\n+    private GraphObjectUtilities() {\n+        //Adding private to remove code smell\n+        COPY_NAME_MATCHER = Pattern.compile(COPY_STRING_PATTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3ODc4OQ==", "bodyText": "I changed the COPY_NAME_MATCHER to static and removed the now empty constructor", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r483778789", "createdAt": "2020-09-04T18:11:35Z", "author": {"login": "GCHQDeveloper601"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -29,11 +36,28 @@\n  */\n public class GraphObjectUtilities {\n \n+    private static final GraphObjectUtilities graphObjectUtilities = new GraphObjectUtilities();\n+\n+    private GraphObjectUtilities() {\n+        //Adding private to remove code smell\n+        COPY_NAME_MATCHER = Pattern.compile(COPY_STRING_PATTERN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU0NzA5Ng=="}, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTA1MDk1OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjoxMzozNlrOHLP2eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODoxMjoxMVrOHNXiDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1NjA4OA==", "bodyText": "Based on what I could see from the usage, I think it would be better to make relevant functions and variables being called static rather than creating a static instance of the class within itself (doing a bit of testing, it seems to work the same).", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r481556088", "createdAt": "2020-09-02T02:13:36Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -29,11 +36,28 @@\n  */\n public class GraphObjectUtilities {\n \n+    private static final GraphObjectUtilities graphObjectUtilities = new GraphObjectUtilities();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3OTA4NA==", "bodyText": "Changed the other methods to static so this isn't needed.", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r483779084", "createdAt": "2020-09-04T18:12:11Z", "author": {"login": "GCHQDeveloper601"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -29,11 +36,28 @@\n  */\n public class GraphObjectUtilities {\n \n+    private static final GraphObjectUtilities graphObjectUtilities = new GraphObjectUtilities();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1NjA4OA=="}, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTA2ODUzOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjoxODoyM1rOHLQB3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODoxMjo1MFrOHNXjMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1OTAwNg==", "bodyText": "if you move the instantiation of COPY_NAME_MATCHER out of the constructor, you should be able to uncomment this line and remove the line above it (you'll probably need to make COPY_NAME_MATCHER  static)", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r481559006", "createdAt": "2020-09-02T02:18:23Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -61,15 +85,54 @@\n      */\n     public static GraphDataObject createMemoryDataObject(final String name, final boolean numbered) {\n         GraphDataObject gdo = null;\n+        final FileObject root = FILE_SYSTEM.getRoot();\n         try {\n-            final String fnam = numbered ? String.format(\"%s%d%s\", name, ++fileCounter, GraphDataObject.FILE_EXTENSION) : String.format(\"%s%s\", name, GraphDataObject.FILE_EXTENSION);\n-            final FileObject root = FILE_SYSTEM.getRoot();\n+            String fnam = graphObjectUtilities.getNewFileName(name, numbered, root);\n+            while (graphObjectUtilities.isFileNameDuplicateInMemory(fnam, root)) {\n+                //If after all of the above the filename already exists in memory, start again.\n+                fnam = graphObjectUtilities.getNewFileName(fnam, numbered, root);\n+            }\n+            while (fnam.length() >= FILENAME_LENGTH_LIMIT) {\n+                fnam = (String) JOptionPane.showInputDialog(null,\n+                        CHOOSE_FILENAME,\n+                        FILENAME_TITLE,\n+                        JOptionPane.INFORMATION_MESSAGE,\n+                        null,\n+                        null,\n+                        fnam);\n+            }\n+            fnam = String.format(\"%s%s\", fnam, GraphDataObject.FILE_EXTENSION);\n             final FileObject fo = FileUtil.createData(root, fnam);\n             gdo = (GraphDataObject) DataObject.find(fo);\n         } catch (IOException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n-\n         return gdo;\n     }\n+\n+    private String getNewFileName(final String name, final boolean numbered, final FileObject root) {\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(name)).collect(Collectors.toList());\n+        if (files.size() > 0) {\n+            if (name.endsWith(COPY_STRING)) {\n+                return String.format(\"%s (%d)\", name, 1);\n+            }\n+\n+            final Matcher matcher = Pattern.compile(COPY_STRING_PATTERN).matcher(name);\n+            //final Matcher matcher =  COPY_NAME_MATCHER.matcher(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3OTM3Nw==", "bodyText": "My bad, I already had it compiled. Bad debug left in the code. Removed :)", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r483779377", "createdAt": "2020-09-04T18:12:50Z", "author": {"login": "GCHQDeveloper601"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -61,15 +85,54 @@\n      */\n     public static GraphDataObject createMemoryDataObject(final String name, final boolean numbered) {\n         GraphDataObject gdo = null;\n+        final FileObject root = FILE_SYSTEM.getRoot();\n         try {\n-            final String fnam = numbered ? String.format(\"%s%d%s\", name, ++fileCounter, GraphDataObject.FILE_EXTENSION) : String.format(\"%s%s\", name, GraphDataObject.FILE_EXTENSION);\n-            final FileObject root = FILE_SYSTEM.getRoot();\n+            String fnam = graphObjectUtilities.getNewFileName(name, numbered, root);\n+            while (graphObjectUtilities.isFileNameDuplicateInMemory(fnam, root)) {\n+                //If after all of the above the filename already exists in memory, start again.\n+                fnam = graphObjectUtilities.getNewFileName(fnam, numbered, root);\n+            }\n+            while (fnam.length() >= FILENAME_LENGTH_LIMIT) {\n+                fnam = (String) JOptionPane.showInputDialog(null,\n+                        CHOOSE_FILENAME,\n+                        FILENAME_TITLE,\n+                        JOptionPane.INFORMATION_MESSAGE,\n+                        null,\n+                        null,\n+                        fnam);\n+            }\n+            fnam = String.format(\"%s%s\", fnam, GraphDataObject.FILE_EXTENSION);\n             final FileObject fo = FileUtil.createData(root, fnam);\n             gdo = (GraphDataObject) DataObject.find(fo);\n         } catch (IOException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n-\n         return gdo;\n     }\n+\n+    private String getNewFileName(final String name, final boolean numbered, final FileObject root) {\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(name)).collect(Collectors.toList());\n+        if (files.size() > 0) {\n+            if (name.endsWith(COPY_STRING)) {\n+                return String.format(\"%s (%d)\", name, 1);\n+            }\n+\n+            final Matcher matcher = Pattern.compile(COPY_STRING_PATTERN).matcher(name);\n+            //final Matcher matcher =  COPY_NAME_MATCHER.matcher(name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1OTAwNg=="}, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTA3MDg4OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMjoxOTowMVrOHLQDaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxODoxMjo1NlrOHNXjVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1OTQwMw==", "bodyText": "Change this to !files.isEmpty(). Should also be able to omit the brackets", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r481559403", "createdAt": "2020-09-02T02:19:01Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -61,15 +85,54 @@\n      */\n     public static GraphDataObject createMemoryDataObject(final String name, final boolean numbered) {\n         GraphDataObject gdo = null;\n+        final FileObject root = FILE_SYSTEM.getRoot();\n         try {\n-            final String fnam = numbered ? String.format(\"%s%d%s\", name, ++fileCounter, GraphDataObject.FILE_EXTENSION) : String.format(\"%s%s\", name, GraphDataObject.FILE_EXTENSION);\n-            final FileObject root = FILE_SYSTEM.getRoot();\n+            String fnam = graphObjectUtilities.getNewFileName(name, numbered, root);\n+            while (graphObjectUtilities.isFileNameDuplicateInMemory(fnam, root)) {\n+                //If after all of the above the filename already exists in memory, start again.\n+                fnam = graphObjectUtilities.getNewFileName(fnam, numbered, root);\n+            }\n+            while (fnam.length() >= FILENAME_LENGTH_LIMIT) {\n+                fnam = (String) JOptionPane.showInputDialog(null,\n+                        CHOOSE_FILENAME,\n+                        FILENAME_TITLE,\n+                        JOptionPane.INFORMATION_MESSAGE,\n+                        null,\n+                        null,\n+                        fnam);\n+            }\n+            fnam = String.format(\"%s%s\", fnam, GraphDataObject.FILE_EXTENSION);\n             final FileObject fo = FileUtil.createData(root, fnam);\n             gdo = (GraphDataObject) DataObject.find(fo);\n         } catch (IOException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n-\n         return gdo;\n     }\n+\n+    private String getNewFileName(final String name, final boolean numbered, final FileObject root) {\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(name)).collect(Collectors.toList());\n+        if (files.size() > 0) {\n+            if (name.endsWith(COPY_STRING)) {\n+                return String.format(\"%s (%d)\", name, 1);\n+            }\n+\n+            final Matcher matcher = Pattern.compile(COPY_STRING_PATTERN).matcher(name);\n+            //final Matcher matcher =  COPY_NAME_MATCHER.matcher(name);\n+            if (matcher.matches()) {\n+                final String fileNamePart = matcher.group(1);\n+                final int copyNum = Integer.parseInt(matcher.group(2));\n+                return String.format(\"%s (%d)\", fileNamePart, copyNum + 1);\n+            }\n+            return String.format(\"%s - Copy\", name);\n+        }\n+        return numbered ? String.format(\"%s%d\", name, ++fileCounter) : String.format(\"%s\", name);\n+    }\n+\n+    private boolean isFileNameDuplicateInMemory(final String name, final FileObject root) {\n+\n+        final String tempName = FilenameUtils.getBaseName(name);\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(tempName)).collect(Collectors.toList());\n+        return (files.size() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3OTQxNA==", "bodyText": "Done", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r483779414", "createdAt": "2020-09-04T18:12:56Z", "author": {"login": "GCHQDeveloper601"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -61,15 +85,54 @@\n      */\n     public static GraphDataObject createMemoryDataObject(final String name, final boolean numbered) {\n         GraphDataObject gdo = null;\n+        final FileObject root = FILE_SYSTEM.getRoot();\n         try {\n-            final String fnam = numbered ? String.format(\"%s%d%s\", name, ++fileCounter, GraphDataObject.FILE_EXTENSION) : String.format(\"%s%s\", name, GraphDataObject.FILE_EXTENSION);\n-            final FileObject root = FILE_SYSTEM.getRoot();\n+            String fnam = graphObjectUtilities.getNewFileName(name, numbered, root);\n+            while (graphObjectUtilities.isFileNameDuplicateInMemory(fnam, root)) {\n+                //If after all of the above the filename already exists in memory, start again.\n+                fnam = graphObjectUtilities.getNewFileName(fnam, numbered, root);\n+            }\n+            while (fnam.length() >= FILENAME_LENGTH_LIMIT) {\n+                fnam = (String) JOptionPane.showInputDialog(null,\n+                        CHOOSE_FILENAME,\n+                        FILENAME_TITLE,\n+                        JOptionPane.INFORMATION_MESSAGE,\n+                        null,\n+                        null,\n+                        fnam);\n+            }\n+            fnam = String.format(\"%s%s\", fnam, GraphDataObject.FILE_EXTENSION);\n             final FileObject fo = FileUtil.createData(root, fnam);\n             gdo = (GraphDataObject) DataObject.find(fo);\n         } catch (IOException ex) {\n             Exceptions.printStackTrace(ex);\n         }\n-\n         return gdo;\n     }\n+\n+    private String getNewFileName(final String name, final boolean numbered, final FileObject root) {\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(name)).collect(Collectors.toList());\n+        if (files.size() > 0) {\n+            if (name.endsWith(COPY_STRING)) {\n+                return String.format(\"%s (%d)\", name, 1);\n+            }\n+\n+            final Matcher matcher = Pattern.compile(COPY_STRING_PATTERN).matcher(name);\n+            //final Matcher matcher =  COPY_NAME_MATCHER.matcher(name);\n+            if (matcher.matches()) {\n+                final String fileNamePart = matcher.group(1);\n+                final int copyNum = Integer.parseInt(matcher.group(2));\n+                return String.format(\"%s (%d)\", fileNamePart, copyNum + 1);\n+            }\n+            return String.format(\"%s - Copy\", name);\n+        }\n+        return numbered ? String.format(\"%s%d\", name, ++fileCounter) : String.format(\"%s\", name);\n+    }\n+\n+    private boolean isFileNameDuplicateInMemory(final String name, final FileObject root) {\n+\n+        final String tempName = FilenameUtils.getBaseName(name);\n+        final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(tempName)).collect(Collectors.toList());\n+        return (files.size() > 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU1OTQwMw=="}, "originalCommit": {"oid": "afac24c30ab2db181567b36af8e5fac0411ad99b"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzY0NjU0OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjo0MTozNVrOHNsenQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjo0MTozNVrOHNsenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMjI2OQ==", "bodyText": "will want !files.isEmpty() here", "url": "https://github.com/constellation-app/constellation/pull/832#discussion_r484122269", "createdAt": "2020-09-06T22:41:35Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphObjectUtilities.java", "diffHunk": "@@ -129,10 +121,10 @@ private String getNewFileName(final String name, final boolean numbered, final F\n         return numbered ? String.format(\"%s%d\", name, ++fileCounter) : String.format(\"%s\", name);\n     }\n \n-    private boolean isFileNameDuplicateInMemory(final String name, final FileObject root) {\n+    private static boolean isFileNameDuplicateInMemory(final String name, final FileObject root) {\n \n         final String tempName = FilenameUtils.getBaseName(name);\n         final List<FileObject> files = Arrays.stream(root.getChildren()).filter(file -> file.getName().equals(tempName)).collect(Collectors.toList());\n-        return (files.size() > 0);\n+        return files.isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81de89a9d099c6eafca43197363d16d800f43204"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2110, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}