{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTQ1MTg4", "number": 534, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNToxMFrOD-aY-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMDozMjoxOFrOD-yudA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcwNjgwOnYy", "diffSide": "RIGHT", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNToxMFrOGYf8nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTo0Njo1NFrOGYjhfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA==", "bodyText": "Does the for loop need to run over the first chained hashmod in the array? If so, you'll need to start at i=0", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428342428", "createdAt": "2020-05-20T22:25:10Z", "author": {"login": "antares1470"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +67,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {\n             if (e.getActionCommand().equals(\"OK\")) {\n                 final Hashmod hashmod1 = hashmodPanel.getHashmod();\n+                final Boolean isChainedHashmods = hashmodPanel.isChainedHashmods();\n+                final boolean createAttributes = hashmodPanel.getCreateAttributes();\n+                final Hashmod[] chainedHashmods = hashmodPanel.getChainedHashmods();\n+                final int numChainedHashmods = hashmodPanel.numChainedHashmods();\n                 final Boolean createNonMatchingKeysVertexes = hashmodPanel.getCreateVertexes();\n                 hashmodPanel.setAttributeNames(hashmod1.getCSVKey(), hashmod1.getCSVHeader(1), hashmod1.getCSVHeader(2));\n \n                 PluginExecution.withPlugin(new SimpleEditPlugin(Bundle.CTL_HashmodAction()) {\n                     @Override\n                     public void edit(final GraphWriteMethods wg, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n                         if (hashmod1 != null) {\n-                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes);\n+                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes, true, createAttributes);\n+                        }\n+                        if (isChainedHashmods && numChainedHashmods >= 2) {\n+                            for (int i = 1; i < numChainedHashmods; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjM0OA==", "bodyText": "The first one (hashmod1) has already been run so it starts from the second (aka chainedHashmods[i])", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428392348", "createdAt": "2020-05-21T01:11:31Z", "author": {"login": "CrucisGamma"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +67,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {\n             if (e.getActionCommand().equals(\"OK\")) {\n                 final Hashmod hashmod1 = hashmodPanel.getHashmod();\n+                final Boolean isChainedHashmods = hashmodPanel.isChainedHashmods();\n+                final boolean createAttributes = hashmodPanel.getCreateAttributes();\n+                final Hashmod[] chainedHashmods = hashmodPanel.getChainedHashmods();\n+                final int numChainedHashmods = hashmodPanel.numChainedHashmods();\n                 final Boolean createNonMatchingKeysVertexes = hashmodPanel.getCreateVertexes();\n                 hashmodPanel.setAttributeNames(hashmod1.getCSVKey(), hashmod1.getCSVHeader(1), hashmod1.getCSVHeader(2));\n \n                 PluginExecution.withPlugin(new SimpleEditPlugin(Bundle.CTL_HashmodAction()) {\n                     @Override\n                     public void edit(final GraphWriteMethods wg, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n                         if (hashmod1 != null) {\n-                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes);\n+                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes, true, createAttributes);\n+                        }\n+                        if (isChainedHashmods && numChainedHashmods >= 2) {\n+                            for (int i = 1; i < numChainedHashmods; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA=="}, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwMTAyMw==", "bodyText": "I figured it would be something like that, just wanted to make sure that was intentional :)", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428401023", "createdAt": "2020-05-21T01:46:54Z", "author": {"login": "antares1470"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +67,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {\n             if (e.getActionCommand().equals(\"OK\")) {\n                 final Hashmod hashmod1 = hashmodPanel.getHashmod();\n+                final Boolean isChainedHashmods = hashmodPanel.isChainedHashmods();\n+                final boolean createAttributes = hashmodPanel.getCreateAttributes();\n+                final Hashmod[] chainedHashmods = hashmodPanel.getChainedHashmods();\n+                final int numChainedHashmods = hashmodPanel.numChainedHashmods();\n                 final Boolean createNonMatchingKeysVertexes = hashmodPanel.getCreateVertexes();\n                 hashmodPanel.setAttributeNames(hashmod1.getCSVKey(), hashmod1.getCSVHeader(1), hashmod1.getCSVHeader(2));\n \n                 PluginExecution.withPlugin(new SimpleEditPlugin(Bundle.CTL_HashmodAction()) {\n                     @Override\n                     public void edit(final GraphWriteMethods wg, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n                         if (hashmod1 != null) {\n-                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes);\n+                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes, true, createAttributes);\n+                        }\n+                        if (isChainedHashmods && numChainedHashmods >= 2) {\n+                            for (int i = 1; i < numChainedHashmods; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA=="}, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcxNTk5OnYy", "diffSide": "RIGHT", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyODozMlrOGYgCGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyODozMlrOGYgCGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MzgzMg==", "bodyText": "StringUtils.isNotBlank(nextAttr) instead of !StringUtils.isBlank(nextAttr)", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428343832", "createdAt": "2020-05-20T22:28:32Z", "author": {"login": "antares1470"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -103,6 +114,13 @@ private static void run(final GraphWriteMethods wg, final PluginInteraction inte\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n+            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzczMTk3OnYy", "diffSide": "RIGHT", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozNToyMFrOGYgL7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozNToyMFrOGYgL7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NjM1MA==", "bodyText": "Instead of \"string\", use StringAttributeDescription.ATTRIBUTE_NAME", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428346350", "createdAt": "2020-05-20T22:35:20Z", "author": {"login": "antares1470"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -103,6 +114,13 @@ private static void run(final GraphWriteMethods wg, final PluginInteraction inte\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n+            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {\n+                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, \"string\", nextAttr, nextAttr, \"\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzczNzQ3OnYy", "diffSide": "RIGHT", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozNzo1OVrOGYgPVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozNzo1OVrOGYgPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NzIyMQ==", "bodyText": "Use the ternary operator here", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428347221", "createdAt": "2020-05-20T22:37:59Z", "author": {"login": "antares1470"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java", "diffHunk": "@@ -55,8 +62,48 @@ public HashmodPanel(final Hashmod hashmod) {\n         initComponents();\n     }\n \n-    public Hashmod getHashmod() {\n-        return new Hashmod(hashmodCSVFileStr);\n+    public final Hashmod getHashmod() {\n+        if (!isChainedHashmods()) {\n+            return new Hashmod(hashmodCSVFileStr);\n+        }\n+        if (numChainedHashmods > 0) {\n+            return chainedHashmods[0];\n+        }\n+        return null;\n+    }\n+\n+    public Boolean isChainedHashmods() {\n+        return isChainedHashmods;\n+    }\n+\n+    public final Hashmod[] getChainedHashmods() {\n+        if (isChainedHashmods()) {\n+            return chainedHashmods;\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTY5Mzk2OnYy", "diffSide": "RIGHT", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMDozMjoxOFrOGZHIDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMToxMToyMVrOGZ9p0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg==", "bodyText": "This panel looks something that could be done using plugin parameters and a standalone plugin. This would allow more flexibility in how the plugin can be used, and not lock the UI elements down to the EDT (Swing thread).", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428984332", "createdAt": "2020-05-22T00:32:18Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +69,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec977c78dd2571a6b4f27efc786e39bbebab8711"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4OTgzOQ==", "bodyText": "I was thinking the same thing when I merged in the original version of Hashmod. I was going to make the changes and put a PR up but have not been able to.\nAs @cygnus-x-1 mentions, there are many advantages to following the plugin framework approach like not having to worry about creating your own GUI for it. Defining the plugin parameters is enough and you can do something like PluginExecution.withPlugin(PluginRegistry.HASHMOD).interactively(true).executeLater(graph); and your GUI is done.\nWould you be able to modify it @CrucisGamma? Like I said, I was going to give it a go but probably won't be able to do that today.", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428989839", "createdAt": "2020-05-22T00:54:49Z", "author": {"login": "arcturus2"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +69,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg=="}, "originalCommit": {"oid": "ec977c78dd2571a6b4f27efc786e39bbebab8711"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NzcxMw==", "bodyText": "Discussed this with @CrucisGamma and given its currently experimental, I'll get this merged in so @CrucisGamma can continue with testing.\nWe agreed that creating custom GUIs is not desirable and it turned out @CrucisGamma did try using plugin parameters but ran into some issues.\nHappy to revisit this again and look to migrate plugins in the experimental menu over to plugin parameters as a separate task.", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r429877713", "createdAt": "2020-05-25T11:11:21Z", "author": {"login": "arcturus2"}, "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +69,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg=="}, "originalCommit": {"oid": "ec977c78dd2571a6b4f27efc786e39bbebab8711"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2355, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}