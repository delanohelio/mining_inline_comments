{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTUzMTgw", "number": 795, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NDoyN1rOEaUwSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjozNTozOVrOEaxV8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM4NDcyOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NDoyN1rOHDroqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NDoyN1rOHDroqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMjY5OA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473622698", "createdAt": "2020-08-20T05:54:27Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -99,24 +106,41 @@\n     private boolean shiftDown;\n     private boolean controlDown;\n     private boolean binCollectionOutOfDate = true;\n+    private final JPopupMenu copyMenu = new JPopupMenu();\n \n     public HistogramDisplay(HistogramTopComponent topComponent) {\n-\n         this.topComponent = topComponent;\n \n         initializeSettings();\n         initializeListeners();\n+        \n+        JMenuItem copyValuesMenuItem = new JMenuItem(\"Copy Selected Property Values\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM4NTkxOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NDo0NVrOHDrpZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NDo0NVrOHDrpZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMjg4NA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473622884", "createdAt": "2020-08-20T05:54:45Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -99,24 +106,41 @@\n     private boolean shiftDown;\n     private boolean controlDown;\n     private boolean binCollectionOutOfDate = true;\n+    private final JPopupMenu copyMenu = new JPopupMenu();\n \n     public HistogramDisplay(HistogramTopComponent topComponent) {\n-\n         this.topComponent = topComponent;\n \n         initializeSettings();\n         initializeListeners();\n+        \n+        JMenuItem copyValuesMenuItem = new JMenuItem(\"Copy Selected Property Values\");\n+        copyValuesMenuItem.addActionListener(e -> {         \n+            copySelectedToClipboard(false);\n+        });\n+        copyMenu.add(copyValuesMenuItem);\n+        \n+        JMenuItem copyValuesAndCountsMenuItem = new JMenuItem(\"Copy Selected Property Values & Counts\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM4ODczOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NToyNVrOHDrrEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NToyNVrOHDrrEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMzMxNQ==", "bodyText": "merge this if statement with the above", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473623315", "createdAt": "2020-08-20T05:55:25Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5MDQ2OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NTo1MVrOHDrsIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NTo1MVrOHDrsIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMzU4Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473623587", "createdAt": "2020-08-20T05:55:51Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {\n+                copyMenu.show(this, e.getX(), e.getY());\n+            }\n+        }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-\n         if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5MjMzOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NjoxN1rOHDrtTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NjoxN1rOHDrtTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyMzg4Nw==", "bodyText": "merge if statement with above", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473623887", "createdAt": "2020-08-20T05:56:17Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {\n+                copyMenu.show(this, e.getX(), e.getY());\n+            }\n+        }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-\n         if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5MzgwOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NjozOFrOHDruMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NjozOFrOHDruMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyNDExMw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473624113", "createdAt": "2020-08-20T05:56:38Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {\n+                copyMenu.show(this, e.getX(), e.getY());\n+            }\n+        }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-\n         if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();\n \n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n+                final Point pointOnHistogram = e.getPoint();\n+                final int bar = getBarAtPoint(pointOnHistogram, false);\n \n-            shiftDown = e.isShiftDown();\n-            controlDown = e.isControlDown();\n+                shiftDown = e.isShiftDown();\n+                controlDown = e.isControlDown();\n \n-            dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-            dragEnd = bar;\n+                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n+                dragEnd = bar;\n \n-            binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n+                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n \n-            repaint();\n+                repaint();\n+            }\n         }\n     }\n \n     @Override\n     public void mouseDragged(MouseEvent e) {\n         if (binCollection != null) {\n-\n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n-            int newDragEnd = bar;\n-            binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n-            dragEnd = newDragEnd;\n-            repaint();\n+            while (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5NTEwOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1Njo1N1rOHDru_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1Njo1N1rOHDru_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyNDMxOA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473624318", "createdAt": "2020-08-20T05:56:57Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {\n+                copyMenu.show(this, e.getX(), e.getY());\n+            }\n+        }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-\n         if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();\n \n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n+                final Point pointOnHistogram = e.getPoint();\n+                final int bar = getBarAtPoint(pointOnHistogram, false);\n \n-            shiftDown = e.isShiftDown();\n-            controlDown = e.isControlDown();\n+                shiftDown = e.isShiftDown();\n+                controlDown = e.isControlDown();\n \n-            dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-            dragEnd = bar;\n+                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n+                dragEnd = bar;\n \n-            binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n+                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n \n-            repaint();\n+                repaint();\n+            }\n         }\n     }\n \n     @Override\n     public void mouseDragged(MouseEvent e) {\n         if (binCollection != null) {\n-\n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n-            int newDragEnd = bar;\n-            binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n-            dragEnd = newDragEnd;\n-            repaint();\n+            while (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();\n+\n+                final Point pointOnHistogram = e.getPoint();\n+                final int bar = getBarAtPoint(pointOnHistogram, false);\n+                int newDragEnd = bar;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5NjE1OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NzoxM1rOHDrvqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NzoxM1rOHDrvqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyNDQ4OA==", "bodyText": "merge if statement with above", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473624488", "createdAt": "2020-08-20T05:57:13Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,60 +510,99 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+\n+        for (Bin bin : binCollection.getBins()) {\n+            // Check if the bar(s) on the Histogram are selected.\n+            if (bin.selectedCount > 0) {\n+                final String label = bin.getLabel() != null ? bin.getLabel() : HistogramDisplay.NO_VALUE;\n+                if (includeCounts) {\n+                    buf.append(String.format(\"%s\\t%d\\n\", label, bin.elementCount));\n+                } else {\n+                    buf.append(String.format(\"%s%s\", label, \"\\n\"));\n+                }\n+            }\n+        }\n \n+        final StringSelection ss = new StringSelection(buf.toString());\n+        final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+        clipboard.setContents(ss, ConstellationClipboardOwner.getOwner());\n+    }\n+    \n     @Override\n     public void mouseClicked(MouseEvent e) {\n+        if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON3) {\n+                copyMenu.show(this, e.getX(), e.getY());\n+            }\n+        }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-\n         if (binCollection != null) {\n+            if (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();\n \n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n+                final Point pointOnHistogram = e.getPoint();\n+                final int bar = getBarAtPoint(pointOnHistogram, false);\n \n-            shiftDown = e.isShiftDown();\n-            controlDown = e.isControlDown();\n+                shiftDown = e.isShiftDown();\n+                controlDown = e.isControlDown();\n \n-            dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-            dragEnd = bar;\n+                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n+                dragEnd = bar;\n \n-            binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n+                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n \n-            repaint();\n+                repaint();\n+            }\n         }\n     }\n \n     @Override\n     public void mouseDragged(MouseEvent e) {\n         if (binCollection != null) {\n-\n-            Bin[] bins = binCollection.getBins();\n-\n-            final Point pointOnHistogram = e.getPoint();\n-            final int bar = getBarAtPoint(pointOnHistogram, false);\n-            int newDragEnd = bar;\n-            binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n-            dragEnd = newDragEnd;\n-            repaint();\n+            while (e.getButton() == MouseEvent.BUTTON1) {\n+                Bin[] bins = binCollection.getBins();\n+\n+                final Point pointOnHistogram = e.getPoint();\n+                final int bar = getBarAtPoint(pointOnHistogram, false);\n+                int newDragEnd = bar;\n+                binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n+                dragEnd = newDragEnd;\n+                repaint();\n+            }\n         }\n     }\n \n     @Override\n     public void mouseReleased(MouseEvent e) {\n         if (binCollection != null) {\n-            binSelectionMode.mouseReleased(shiftDown, controlDown, binCollection.getBins(), dragStart, dragEnd, topComponent);\n-            activeBin = dragStart == dragEnd ? dragStart : -1;\n-            repaint();\n+            if (e.getButton() == MouseEvent.BUTTON1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDM5NzM2OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NzozNFrOHDrwfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNTo1NzozNFrOHDrwfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyNDcwMA==", "bodyText": "merge all these if statements together", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r473624700", "createdAt": "2020-08-20T05:57:34Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -559,7 +622,14 @@ public void keyTyped(KeyEvent e) {\n \n     @Override\n     public void keyPressed(KeyEvent e) {\n-        // Override required, intentionally left blank\n+        if (binCollection != null) {\n+            // Ensure that the Histogram View is focused before allowing Ctrl + C to be registered.\n+            if (this.isFocusOwner()) {\n+                if ((e.isControlDown()) && (e.getKeyCode() == KeyEvent.VK_C)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659a51c2bc062981d3d9b926140811ce58b025e9"}, "originalPosition": 211}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDYzNTY0OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozODo1OVrOHEVmKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozODo1OVrOHEVmKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMDE4Nw==", "bodyText": "Minor but I think we prefer && at the start of the new line rather than the end of the old line", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474310187", "createdAt": "2020-08-20T22:38:59Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -543,66 +540,56 @@ private void copySelectedToClipboard(boolean includeCounts) {\n     \n     @Override\n     public void mouseClicked(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON3) {\n-                copyMenu.show(this, e.getX(), e.getY());\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDYzNTkxOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTowOFrOHEVmVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTowOFrOHEVmVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMDIzMQ==", "bodyText": "same here", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474310231", "createdAt": "2020-08-20T22:39:08Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -543,66 +540,56 @@ private void copySelectedToClipboard(boolean includeCounts) {\n     \n     @Override\n     public void mouseClicked(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON3) {\n-                copyMenu.show(this, e.getX(), e.getY());\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON3) {\n+            copyMenu.show(this, e.getX(), e.getY());\n         }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON1) {\n-                Bin[] bins = binCollection.getBins();\n-\n-                final Point pointOnHistogram = e.getPoint();\n-                final int bar = getBarAtPoint(pointOnHistogram, false);\n-\n-                shiftDown = e.isShiftDown();\n-                controlDown = e.isControlDown();\n-\n-                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-                dragEnd = bar;\n-\n-                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n-\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDYzNjc0OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTozMFrOHEVmzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTozMFrOHEVmzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMDM1MQ==", "bodyText": "same here", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474310351", "createdAt": "2020-08-20T22:39:30Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -543,66 +540,56 @@ private void copySelectedToClipboard(boolean includeCounts) {\n     \n     @Override\n     public void mouseClicked(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON3) {\n-                copyMenu.show(this, e.getX(), e.getY());\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON3) {\n+            copyMenu.show(this, e.getX(), e.getY());\n         }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON1) {\n-                Bin[] bins = binCollection.getBins();\n-\n-                final Point pointOnHistogram = e.getPoint();\n-                final int bar = getBarAtPoint(pointOnHistogram, false);\n-\n-                shiftDown = e.isShiftDown();\n-                controlDown = e.isControlDown();\n-\n-                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-                dragEnd = bar;\n-\n-                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n-\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {\n+            final Point pointOnHistogram = e.getPoint();\n+            final int bar = getBarAtPoint(pointOnHistogram, false);\n+\n+            shiftDown = e.isShiftDown();\n+            controlDown = e.isControlDown();\n+\n+            dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n+            dragEnd = bar;\n+            binSelectionMode.mousePressed(shiftDown, controlDown, binCollection.getBins(), dragStart, dragEnd);\n+            repaint();\n         }\n     }\n \n     @Override\n     public void mouseDragged(MouseEvent e) {\n-        if (binCollection != null) {\n-            while (e.getButton() == MouseEvent.BUTTON1) {\n-                Bin[] bins = binCollection.getBins();\n-\n-                final Point pointOnHistogram = e.getPoint();\n-                final int bar = getBarAtPoint(pointOnHistogram, false);\n-                int newDragEnd = bar;\n-                binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n-                dragEnd = newDragEnd;\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDYzNzI3OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTo0NlrOHEVnJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozOTo0NlrOHEVnJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMDQzNg==", "bodyText": "same here", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474310436", "createdAt": "2020-08-20T22:39:46Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -543,66 +540,56 @@ private void copySelectedToClipboard(boolean includeCounts) {\n     \n     @Override\n     public void mouseClicked(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON3) {\n-                copyMenu.show(this, e.getX(), e.getY());\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON3) {\n+            copyMenu.show(this, e.getX(), e.getY());\n         }\n     }\n \n     @Override\n     public void mousePressed(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON1) {\n-                Bin[] bins = binCollection.getBins();\n-\n-                final Point pointOnHistogram = e.getPoint();\n-                final int bar = getBarAtPoint(pointOnHistogram, false);\n-\n-                shiftDown = e.isShiftDown();\n-                controlDown = e.isControlDown();\n-\n-                dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n-                dragEnd = bar;\n-\n-                binSelectionMode.mousePressed(shiftDown, controlDown, bins, dragStart, dragEnd);\n-\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {\n+            final Point pointOnHistogram = e.getPoint();\n+            final int bar = getBarAtPoint(pointOnHistogram, false);\n+\n+            shiftDown = e.isShiftDown();\n+            controlDown = e.isControlDown();\n+\n+            dragStart = (shiftDown && activeBin >= 0) ? activeBin : bar;\n+            dragEnd = bar;\n+            binSelectionMode.mousePressed(shiftDown, controlDown, binCollection.getBins(), dragStart, dragEnd);\n+            repaint();\n         }\n     }\n \n     @Override\n     public void mouseDragged(MouseEvent e) {\n-        if (binCollection != null) {\n-            while (e.getButton() == MouseEvent.BUTTON1) {\n-                Bin[] bins = binCollection.getBins();\n-\n-                final Point pointOnHistogram = e.getPoint();\n-                final int bar = getBarAtPoint(pointOnHistogram, false);\n-                int newDragEnd = bar;\n-                binSelectionMode.mouseDragged(shiftDown, controlDown, bins, dragStart, dragEnd, newDragEnd);\n-                dragEnd = newDragEnd;\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {\n+            final Point pointOnHistogram = e.getPoint();\n+            final int bar = getBarAtPoint(pointOnHistogram, false);\n+            \n+            final int newDragEnd = bar;\n+            binSelectionMode.mouseDragged(shiftDown, controlDown, binCollection.getBins(), dragStart, dragEnd, newDragEnd);\n+            dragEnd = newDragEnd;\n+            repaint();\n         }\n     }\n \n     @Override\n     public void mouseReleased(MouseEvent e) {\n-        if (binCollection != null) {\n-            if (e.getButton() == MouseEvent.BUTTON1) {\n-                binSelectionMode.mouseReleased(shiftDown, controlDown, binCollection.getBins(), dragStart, dragEnd, topComponent);\n-                activeBin = dragStart == dragEnd ? dragStart : -1;\n-                repaint();\n-            }\n+        if (binCollection != null &&\n+            e.getButton() == MouseEvent.BUTTON1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDYzODI5OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjo0MDowOVrOHEVnug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjo0MDowOVrOHEVnug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMDU4Ng==", "bodyText": "same here", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474310586", "createdAt": "2020-08-20T22:40:09Z", "author": {"login": "antares1470"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -622,13 +609,10 @@ public void keyTyped(KeyEvent e) {\n \n     @Override\n     public void keyPressed(KeyEvent e) {\n-        if (binCollection != null) {\n-            // Ensure that the Histogram View is focused before allowing Ctrl + C to be registered.\n-            if (this.isFocusOwner()) {\n-                if ((e.isControlDown()) && (e.getKeyCode() == KeyEvent.VK_C)) {\n-                    copySelectedToClipboard(false);\n-                }\n-            }\n+        if (binCollection != null &&\n+            this.isFocusOwner() && // Check if Histogram Display is focused before allowing Ctrl + C to be registered.\n+            ((e.isControlDown()) && (e.getKeyCode() == KeyEvent.VK_C))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA2ODIwOnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjozNToyOFrOHEZjNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjozNToyOFrOHEZjNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3NDk2Ng==", "bodyText": "includeCounts can be final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474374966", "createdAt": "2020-08-21T02:35:28Z", "author": {"login": "formalhaut69"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,18 +508,48 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA2ODY2OnYy", "diffSide": "RIGHT", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjozNTozOVrOHEZjbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjozNTozOVrOHEZjbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3NTAyMg==", "bodyText": "Final", "url": "https://github.com/constellation-app/constellation/pull/795#discussion_r474375022", "createdAt": "2020-08-21T02:35:39Z", "author": {"login": "formalhaut69"}, "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/HistogramDisplay.java", "diffHunk": "@@ -486,18 +508,48 @@ private int getBarAtPoint(Point p, boolean bounded) {\n \n         return n;\n     }\n+    \n+    /**\n+     * Copy the values of the selected bars on the Histogram to the clipboard.\n+     * <p>\n+     * Iterates through the current collection of bins, bins representing the bars,\n+     * and determines if they are selected by checking their selectedCount value,\n+     * 1 if selected, 0 if not selected.\n+     * \n+     * @param includeCounts True if the counts corresponding to the values\n+     * are also to be copied to the clipboard.\n+     */\n+    private void copySelectedToClipboard(boolean includeCounts) {\n+        final StringBuilder buf = new StringBuilder();\n+        for (Bin bin : binCollection.getBins()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfa2959672e1f039eccd4be79d3e020ccf514db3"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2096, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}