{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MDYxNzcz", "number": 384, "title": "Static Related Fixes", "bodyText": "Description of the Change\nAs suggested by sonar:\n\nstatic calls are now made via base class instead of derived class\nunnecessary static modifier has been removed from enum declarations\na few rules cleanups missed from previous PR's\n\nAlternate Designs\n\nWhy Should This Be In Core?\n\nBenefits\n\nPossible Drawbacks\n\nVerification Process\n\nApplicable Issues", "createdAt": "2020-03-31T04:29:28Z", "url": "https://github.com/constellation-app/constellation/pull/384", "merged": true, "mergeCommit": {"oid": "bf640966168210e880beddc54814a45498a4404f"}, "closed": true, "closedAt": "2020-03-31T12:31:25Z", "author": {"login": "antares1470"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS6aO8AH2gAyMzk2MDYxNzczOjNiNDVhZGJkNjE1NjI1YTZjOWMzNDc3NTcxZmVjZjNmZDkxMDI0MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTCTDiAFqTM4NDY4MzYyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b45adbd615625a6c9c3477571fecf3fd9102410", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/3b45adbd615625a6c9c3477571fecf3fd9102410", "committedDate": "2020-03-31T03:19:52Z", "message": "static calls now call from base class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23d63a6f2590e3b2d698f60f168f5ee84c961e58", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/23d63a6f2590e3b2d698f60f168f5ee84c961e58", "committedDate": "2020-03-31T03:59:35Z", "message": "fixed some sonar rules missed in previous PRs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "committedDate": "2020-03-31T04:10:48Z", "message": "replaced multiple catches with either multi-catch or removed need for a catch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "committedDate": "2020-03-31T04:26:40Z", "message": "removed static modifier from enums"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDU4Nzgz", "url": "https://github.com/constellation-app/constellation/pull/384#pullrequestreview-384458783", "createdAt": "2020-03-31T07:16:41Z", "commit": {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjgzNjI5", "url": "https://github.com/constellation-app/constellation/pull/384#pullrequestreview-384683629", "createdAt": "2020-03-31T12:31:10Z", "commit": {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjozMToxMFrOF-TbdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjozMToxMFrOF-TbdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg3NDM1Nw==", "bodyText": "@algol60 I'm going to merge this which might effect your open PR.", "url": "https://github.com/constellation-app/constellation/pull/384#discussion_r400874357", "createdAt": "2020-03-31T12:31:10Z", "author": {"login": "arcturus2"}, "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/transport/FileListener.java", "diffHunk": "@@ -208,29 +208,24 @@ public void run() {\n      * @throws Exception because of AutoCloseable\n      */\n     private void parseAndExecute(final String verb, final String endpoint, final String path, final JsonNode args) throws Exception {\n-        switch (endpoint) {\n-            case \"/v2/service\":\n-                final HttpMethod httpMethod = HttpMethod.getValue(verb);\n-                // Get an instance of the service (if it exists).\n-                //\n-                final RestService rs = RestServiceRegistry.get(path, httpMethod);\n-\n-                // Convert the arguments to PluginParameters.\n-                //\n-                final PluginParameters parameters = rs.createParameters();\n-                RestServiceUtilities.parametersFromJson((ObjectNode)args, parameters);\n-\n-                try(final InStream ins = new InStream(restPath, CONTENT_IN, true); final OutputStream out = outStream(restPath, CONTENT_OUT)) {\n-                    rs.callService(parameters, ins.in, out);\n-                } catch(final IOException | RuntimeException ex) {\n-                    throw new RestServiceException(ex);\n-                }\n-\n-                break;\n-\n-            default:\n-                unrec(\"endpoint\", endpoint);\n-                break;\n+        if (\"/v2/service\".equals(endpoint)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3862, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}