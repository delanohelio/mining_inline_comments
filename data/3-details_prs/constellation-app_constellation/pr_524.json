{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NzU0NzA1", "number": 524, "title": "Layers - State/Queries/ContextMenu/BackwardCompatibility", "bodyText": "Description of the Change\nThis Pull request wraps the following outstanding PRs into one.\n#454 #491 #501 #500\nState: #454\nLayers view now keeps state written to graph, and reacts to changes in UI and graph objects to keep pane in sync with graph.\nQueries: #491\nThe queries have test cases and now allow for complete nesting of terms.\nContext Menu: #501\nThe context menu for adding items to the layer now includes a description and clickable sub menu to add elements to.\nBackward Compatibility: #500\nThis includes fixes to attribute fetching to allow older graphs to be used without the need for Layers View specific attributes.\nThe Layers view now adds elements via draw nodes to the current layer which is being viewed.\n\nAlternate Designs\nSee individual PRs\n\nWhy Should This Be In Core?\nIt adds functionality, fixes compatibility bugs and allows for a smoother use of the tool.\n\nBenefits\nIt adds functionality, fixes compatibility bugs and allows for a smoother use of the tool.\n\nPossible Drawbacks\nN/A\n\nVerification Process\nTest cases for queries, step by step UI usage for state, backward compatibility checking done via old V1 graphs. Context menu trialed through usage.\n\nApplicable Issues\n#223", "createdAt": "2020-05-14T05:09:53Z", "url": "https://github.com/constellation-app/constellation/pull/524", "merged": true, "mergeCommit": {"oid": "e0f3d309f97cd41c38e50fd157c472df81059a07"}, "closed": true, "closedAt": "2020-05-15T05:17:15Z", "author": {"login": "aldebaran30701"}, "timelineItems": {"totalCount": 47, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYaTt8AH2gAyNDE3NzU0NzA1OmFmNjZhZTQ5YzZhYzg3MTk1MTM5ZDg5NGU2YzQ0NDhhNjAyYmJjNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchaVwsgH2gAyNDE3NzU0NzA1OjhlZTZkMjllZTg4MTEzYzFiODZhMWU3NmRhZmI2NDBlZTE4YmUyMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af66ae49c6ac87195139d894e6c4448a602bbc76", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/af66ae49c6ac87195139d894e6c4448a602bbc76", "committedDate": "2020-04-17T05:19:20Z", "message": "Switch Layers to GridPane\n\nUpdate UI with Gridpane"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca69474ed0bd3606647483a27a4b7c8b8b11408b", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ca69474ed0bd3606647483a27a4b7c8b8b11408b", "committedDate": "2020-04-21T01:44:54Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8ef7b2876e9c7e41f61d35d352275bed73a59d2", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/a8ef7b2876e9c7e41f61d35d352275bed73a59d2", "committedDate": "2020-04-22T00:02:31Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1ce83dc8ecf3c40fdb69c2cee898e5e835c31d", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/0e1ce83dc8ecf3c40fdb69c2cee898e5e835c31d", "committedDate": "2020-04-23T04:50:08Z", "message": "Implement Layers View State\n\nAdds:\n - New files:\n    - LayersViewConcept\n    - LayersViewState\n    - LayersViewStateAttributeDescription\n    - LayersViewStateIOProvider\n - Connect events to save view state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a1dad79991fac13704da61adadda56f7ef5e9bf", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/4a1dad79991fac13704da61adadda56f7ef5e9bf", "committedDate": "2020-04-23T04:50:44Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45826fad268d7fc4d8dcd19a6277455b42aa14f6", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/45826fad268d7fc4d8dcd19a6277455b42aa14f6", "committedDate": "2020-04-23T13:05:27Z", "message": ":bug: Add a missing dependancy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62c869292837c0daa2d11fb245224de934655380", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/62c869292837c0daa2d11fb245224de934655380", "committedDate": "2020-04-28T01:29:13Z", "message": ":green_heart: Dummy commit to rerun Travis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda3fcf7a138bc5b63b54429237391b49aafc0f4", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/bda3fcf7a138bc5b63b54429237391b49aafc0f4", "committedDate": "2020-04-30T03:43:07Z", "message": "refactor layers state coupling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8f5305f2882b4926e494430661ef053ef65c46a", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/e8f5305f2882b4926e494430661ef053ef65c46a", "committedDate": "2020-04-30T03:43:27Z", "message": "add function operator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ca19f6eb38c1dc17c061e58fe092d9278619ce3", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/5ca19f6eb38c1dc17c061e58fe092d9278619ce3", "committedDate": "2020-04-30T03:45:30Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a62548830b8a2be41e785dce43af1b985b15a8", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/01a62548830b8a2be41e785dce43af1b985b15a8", "committedDate": "2020-04-30T03:45:49Z", "message": "Merge branch 'Layers-UI' of https://github.com/constellation-app/constellation into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a551bbc686e9cd1d78503c78abc82d00a4b88dc", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/4a551bbc686e9cd1d78503c78abc82d00a4b88dc", "committedDate": "2020-04-30T05:58:16Z", "message": "Refactor State Concepts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f97be44a672fd9fa9358f2c78d7b7de16ee1fe9d", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/f97be44a672fd9fa9358f2c78d7b7de16ee1fe9d", "committedDate": "2020-04-30T06:25:59Z", "message": "Fix SQ warnings\n\nprivate contructor added to hide implicit public implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eae71c573e0fbb934b0e831a2b239c123740eb5", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/6eae71c573e0fbb934b0e831a2b239c123740eb5", "committedDate": "2020-04-30T23:10:22Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94cbbb927f73918edb91fc588595cd0059936c1a", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/94cbbb927f73918edb91fc588595cd0059936c1a", "committedDate": "2020-05-05T02:31:05Z", "message": "Add Layers Tests and rework query language"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b518306bab6289eb36c6216817885dc1aafdc30", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/7b518306bab6289eb36c6216817885dc1aafdc30", "committedDate": "2020-05-05T02:32:02Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57258ba256faee4b3606e7721a60f60a6f5ce69c", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/57258ba256faee4b3606e7721a60f60a6f5ce69c", "committedDate": "2020-05-05T05:28:54Z", "message": ":bug: Fix layers view invisibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c1c94e5d20cbed0a3e468136c2fffc26106edb", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/14c1c94e5d20cbed0a3e468136c2fffc26106edb", "committedDate": "2020-05-05T05:29:15Z", "message": "Merge branch 'master' into Layers-UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13d8453262da083b90ef1a71ae1b9ae779e4ca68", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/13d8453262da083b90ef1a71ae1b9ae779e4ca68", "committedDate": "2020-05-05T05:56:01Z", "message": "Refactor and add final modifiers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96075363f072ac7cf635269aae79e3cebdd163c7", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/96075363f072ac7cf635269aae79e3cebdd163c7", "committedDate": "2020-05-06T07:06:38Z", "message": "Add elements to specific layers\n\nFix invisible graph bug\nclean up pane counting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b20647c1ee1ab9acbd60d4005a7801d9add503b0", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b20647c1ee1ab9acbd60d4005a7801d9add503b0", "committedDate": "2020-05-08T03:38:05Z", "message": "Query rework\n\n - add toquery test case and reimplement without split usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fdc31aeeef66f10ce3bb80dc7d8a2c7934045a0", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/2fdc31aeeef66f10ce3bb80dc7d8a2c7934045a0", "committedDate": "2020-05-08T03:40:56Z", "message": "Merge branch 'master' into Layers-nested-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d0b386fd3a9816868aae1c7f181f04d80b9415", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/21d0b386fd3a9816868aae1c7f181f04d80b9415", "committedDate": "2020-05-08T03:58:04Z", "message": "remove space in README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1838f32f0653a9ea22adef4d41424efe192a5384", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/1838f32f0653a9ea22adef4d41424efe192a5384", "committedDate": "2020-05-08T04:44:58Z", "message": "fix Sonarcloud issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b69ed4465459965ce77210e32203c5961fde2b1e", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b69ed4465459965ce77210e32203c5961fde2b1e", "committedDate": "2020-05-08T04:53:04Z", "message": "fix PR Review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d65ce03653a5053d0551103c128bc3587c30e496", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d65ce03653a5053d0551103c128bc3587c30e496", "committedDate": "2020-05-08T06:30:19Z", "message": "Remove TODO comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67fef64de8f5dcb0e358f13fa0df884094202b3f", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/67fef64de8f5dcb0e358f13fa0df884094202b3f", "committedDate": "2020-05-11T01:16:20Z", "message": "Layers context menu improvements\n\nRight click context menu now adds or removes from specific layers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b585d0922d280f809d13e72417b1701c28cdc0dc", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b585d0922d280f809d13e72417b1701c28cdc0dc", "committedDate": "2020-05-12T03:47:54Z", "message": "remove pane from plugin parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bb6ce9eda86788f820cee4684bce281cb0340f3", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/7bb6ce9eda86788f820cee4684bce281cb0340f3", "committedDate": "2020-05-12T05:37:32Z", "message": "Revert State Concept inner class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6538bc67d8919df6cb754f3c3e13893ac478f3f", "author": {"user": {"login": "cygnus-x-1", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d6538bc67d8919df6cb754f3c3e13893ac478f3f", "committedDate": "2020-05-12T08:05:49Z", "message": ":art: refactored layers view state to use graph listening pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6bf58ca54d0779acd7d41b0762eacab6139a5c1", "author": {"user": {"login": "cygnus-x-1", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d6bf58ca54d0779acd7d41b0762eacab6139a5c1", "committedDate": "2020-05-12T08:07:14Z", "message": "Merge branch 'Layers-UI' of https://github.com/constellation-app/constellation into Layers-UI\n\n# Conflicts:\n#\tCoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/state/AnalyticViewConcept.java\n#\tCoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/state/AnalyticViewStateAttributeDescription.java\n#\tCoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/state/AnalyticViewStateIoProvider.java\n#\tCoreLayersView/src/au/gov/asd/tac/constellation/views/layers/state/LayersViewConcept.java\n#\tCoreLayersView/src/au/gov/asd/tac/constellation/views/layers/state/LayersViewState.java\n#\tCoreLayersView/src/au/gov/asd/tac/constellation/views/layers/state/LayersViewStateAttributeDescription.java\n#\tCoreLayersView/src/au/gov/asd/tac/constellation/views/layers/state/LayersViewStateIoProvider.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6008700b378cdccfca1830a2902099ace0b8b6b", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/e6008700b378cdccfca1830a2902099ace0b8b6b", "committedDate": "2020-05-13T00:42:57Z", "message": "Add Layer Description to Context Menu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08b30daba277661a3d1a7a13328e674f579fc3f8", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/08b30daba277661a3d1a7a13328e674f579fc3f8", "committedDate": "2020-05-14T01:01:25Z", "message": "Fix layer formatting issues and bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89354d3a98e63887a5b3bb69a521d471c2bf4d8c", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/89354d3a98e63887a5b3bb69a521d471c2bf4d8c", "committedDate": "2020-05-14T01:48:35Z", "message": "Merge branch 'pr/509' into feature/layers-state-queries-contextmenu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ecaf60ce66b4379790d902927f217877d881306", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/3ecaf60ce66b4379790d902927f217877d881306", "committedDate": "2020-05-14T03:02:49Z", "message": "Merge State with Queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a25a7f766253add35ee40adb25c1094dc0cd2b5", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8a25a7f766253add35ee40adb25c1094dc0cd2b5", "committedDate": "2020-05-14T03:03:04Z", "message": "Merge branch 'Layers-Context-Menu' into feature/layers-state-queries-contextmenu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50addda996358cac5fb5a98b6bae4fc8883a9d8d", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/50addda996358cac5fb5a98b6bae4fc8883a9d8d", "committedDate": "2020-05-14T03:26:28Z", "message": "Add context menu merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a886d5da459ea01c17b8431c712881dbc51c827", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/2a886d5da459ea01c17b8431c712881dbc51c827", "committedDate": "2020-05-14T03:28:51Z", "message": "Merge branch 'master' into feature/layers-state-queries-contextmenu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcdac6a10bf2fc0d769db5f1a9020bfa266c7b5f", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/fcdac6a10bf2fc0d769db5f1a9020bfa266c7b5f", "committedDate": "2020-05-14T04:55:46Z", "message": ":art: Context menu wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/d083134a0471e4d30cbbee15096f3d7903ae2837", "committedDate": "2020-05-14T05:39:47Z", "message": "SQ warning and comment removal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a52a66b584226f0ecb5bf306587e1232aea5238d", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/a52a66b584226f0ecb5bf306587e1232aea5238d", "committedDate": "2020-05-15T00:30:11Z", "message": "If statement logic changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjU5OTU3", "url": "https://github.com/constellation-app/constellation/pull/524#pullrequestreview-412259957", "createdAt": "2020-05-14T23:52:27Z", "commit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMzo1MjoyN1rOGVx8fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDo0NDo1M1rOGVy0iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5MTU4Mw==", "bodyText": "Change the message here to \"Concept class\" or similar (as we don't technically consider concept classes as utility classes)", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425491583", "createdAt": "2020-05-14T23:52:27Z", "author": {"login": "antares1470"}, "path": "CoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/state/AnalyticViewConcept.java", "diffHunk": "@@ -43,13 +42,17 @@ public String getName() {\n     @Override\n     public Set<Class<? extends SchemaConcept>> getParents() {\n         final Set<Class<? extends SchemaConcept>> parentSet = new HashSet<>();\n-        parentSet.add(ConstellationViewsConcept.class);\n+        parentSet.add(SchemaConcept.ConstellationViewsConcept.class);\n         return Collections.unmodifiableSet(parentSet);\n     }\n \n     public static class MetaAttribute {\n \n-        public static final SchemaAttribute ANALYTIC_VIEW_STATE = new SchemaAttribute.Builder(GraphElementType.META, \"analytic_view_state\", \"analytic_view_state\")\n+        private MetaAttribute() {\n+            throw new IllegalStateException(\"Utility class\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5MjE5MA==", "bodyText": "this value doesn't seem to get used and gets changed a couple lines later", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425492190", "createdAt": "2020-05-14T23:54:44Z", "author": {"login": "antares1470"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2179,36 +2168,73 @@ private void updateLayerMask(final int attributeId, final GraphElementType eleme\n                     }\n                 }\n             }\n-        } else if (elementType == GraphElementType.TRANSACTION) {\n-            if (transactionFilterBitmaskAttrId >= 0 && transactionLayerVisibilityAttributeId >= 0) {\n-                if (attributeId != transactionFilterBitmaskAttrId) {\n-                    avoidLayerUpdate = true;\n-                    setIntValue(transactionFilterBitmaskAttrId, elementId, bitmask);\n-                    avoidLayerUpdate = false;\n+        } else if (elementType == GraphElementType.TRANSACTION && \n+                transactionFilterBitmaskAttrId != Graph.NOT_FOUND && \n+                transactionLayerVisibilityAttributeId != Graph.NOT_FOUND) {\n+            if (attributeId != transactionFilterBitmaskAttrId) {\n+                avoidLayerUpdate = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTQ3Mw==", "bodyText": "can be merged with above if statement: if (pane == null || graph == null)", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425499473", "createdAt": "2020-05-15T00:21:27Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -35,64 +42,156 @@\n public class LayersViewController {\n \n     private final LayersViewTopComponent parent;\n-    private LayersViewPane pane = null;\n \n     public LayersViewController(final LayersViewTopComponent parent) {\n         this.parent = parent;\n     }\n \n     /**\n-     * Runs a plugin which updates the bitmask that should be used to show\n-     * elements.\n+     * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         int newBitmask = 0b0;\n-        Label layerIdText = null;\n-        CheckBox visibilityCheckBox = null;\n-        for (Node node : pane.getLayers().getChildren()) {\n-\n-            if (GridPane.getRowIndex(node) > 0) { // skip layer 1\n-                layerIdText = GridPane.getColumnIndex(node) == 0 ? (Label) node : layerIdText;\n-                visibilityCheckBox = GridPane.getColumnIndex(node) == 1 ? (CheckBox) node : visibilityCheckBox;\n-\n-                if (GridPane.getColumnIndex(node) == 2) {\n-                    // only add layer id to list when it is checked\n-                    newBitmask |= visibilityCheckBox.isSelected() ? (1 << Integer.parseInt(layerIdText.getText()) - 1) : 0;\n-                }\n-            }\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n-\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n-        newBitmask = (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).executeLater(GraphManager.getDefault().getActiveGraph());\n+        newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n     /**\n-     * Grab all queries entered into text areas and store them in the qraph's\n-     * queries.\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      */\n     public void submit() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         final List<String> layerQueries = new ArrayList<>();\n-        for (Node node : pane.getLayers().getChildren()) {\n-            if (GridPane.getRowIndex(node) > 0 && GridPane.getColumnIndex(node) == 2) {\n-                final TextArea queryTextArea = (TextArea) node;\n-                layerQueries.add(queryTextArea.getText().isBlank() ? null : queryTextArea.getText());\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n+        }\n+        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+    }\n+\n+    /**\n+     * Reads the graph's layers_view_state attribute and populates the Layers\n+     * View pane.\n+     */\n+    public void readState() {\n+        final LayersViewPane pane = parent.getContent();\n+        if (pane == null) {\n+            return;\n+        }\n+\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if(graph == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTY5Nw==", "bodyText": "can be merged with above if statement: if (pane == null || graph == null)", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425499697", "createdAt": "2020-05-15T00:22:10Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -35,64 +42,156 @@\n public class LayersViewController {\n \n     private final LayersViewTopComponent parent;\n-    private LayersViewPane pane = null;\n \n     public LayersViewController(final LayersViewTopComponent parent) {\n         this.parent = parent;\n     }\n \n     /**\n-     * Runs a plugin which updates the bitmask that should be used to show\n-     * elements.\n+     * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         int newBitmask = 0b0;\n-        Label layerIdText = null;\n-        CheckBox visibilityCheckBox = null;\n-        for (Node node : pane.getLayers().getChildren()) {\n-\n-            if (GridPane.getRowIndex(node) > 0) { // skip layer 1\n-                layerIdText = GridPane.getColumnIndex(node) == 0 ? (Label) node : layerIdText;\n-                visibilityCheckBox = GridPane.getColumnIndex(node) == 1 ? (CheckBox) node : visibilityCheckBox;\n-\n-                if (GridPane.getColumnIndex(node) == 2) {\n-                    // only add layer id to list when it is checked\n-                    newBitmask |= visibilityCheckBox.isSelected() ? (1 << Integer.parseInt(layerIdText.getText()) - 1) : 0;\n-                }\n-            }\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n-\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n-        newBitmask = (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).executeLater(GraphManager.getDefault().getActiveGraph());\n+        newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n     /**\n-     * Grab all queries entered into text areas and store them in the qraph's\n-     * queries.\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      */\n     public void submit() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         final List<String> layerQueries = new ArrayList<>();\n-        for (Node node : pane.getLayers().getChildren()) {\n-            if (GridPane.getRowIndex(node) > 0 && GridPane.getColumnIndex(node) == 2) {\n-                final TextArea queryTextArea = (TextArea) node;\n-                layerQueries.add(queryTextArea.getText().isBlank() ? null : queryTextArea.getText());\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n+        }\n+        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+    }\n+\n+    /**\n+     * Reads the graph's layers_view_state attribute and populates the Layers\n+     * View pane.\n+     */\n+    public void readState() {\n+        final LayersViewPane pane = parent.getContent();\n+        if (pane == null) {\n+            return;\n+        }\n+\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if(graph == null){\n+            return;\n+        }\n+\n+        PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+                .executeLater(graph);\n+    }\n+\n+    /**\n+     * Executes a plugin to write the current layers to the graph's\n+     * layers_view_state Attribute.\n+     */\n+    public void writeState() {\n+        final LayersViewPane pane = parent.getContent();\n+        if (pane == null) {\n+            return;\n+        }\n+\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if(graph == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTkzOQ==", "bodyText": "can be merged with first if statement: if (graph == null || pane == null)", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425499939", "createdAt": "2020-05-15T00:22:59Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -35,64 +42,156 @@\n public class LayersViewController {\n \n     private final LayersViewTopComponent parent;\n-    private LayersViewPane pane = null;\n \n     public LayersViewController(final LayersViewTopComponent parent) {\n         this.parent = parent;\n     }\n \n     /**\n-     * Runs a plugin which updates the bitmask that should be used to show\n-     * elements.\n+     * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         int newBitmask = 0b0;\n-        Label layerIdText = null;\n-        CheckBox visibilityCheckBox = null;\n-        for (Node node : pane.getLayers().getChildren()) {\n-\n-            if (GridPane.getRowIndex(node) > 0) { // skip layer 1\n-                layerIdText = GridPane.getColumnIndex(node) == 0 ? (Label) node : layerIdText;\n-                visibilityCheckBox = GridPane.getColumnIndex(node) == 1 ? (CheckBox) node : visibilityCheckBox;\n-\n-                if (GridPane.getColumnIndex(node) == 2) {\n-                    // only add layer id to list when it is checked\n-                    newBitmask |= visibilityCheckBox.isSelected() ? (1 << Integer.parseInt(layerIdText.getText()) - 1) : 0;\n-                }\n-            }\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n-\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n-        newBitmask = (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).executeLater(GraphManager.getDefault().getActiveGraph());\n+        newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n     /**\n-     * Grab all queries entered into text areas and store them in the qraph's\n-     * queries.\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      */\n     public void submit() {\n-        // ensure pane is set to the content of the parent view.\n-        pane = parent.getContent();\n+        final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n-\n         final List<String> layerQueries = new ArrayList<>();\n-        for (Node node : pane.getLayers().getChildren()) {\n-            if (GridPane.getRowIndex(node) > 0 && GridPane.getColumnIndex(node) == 2) {\n-                final TextArea queryTextArea = (TextArea) node;\n-                layerQueries.add(queryTextArea.getText().isBlank() ? null : queryTextArea.getText());\n+        for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n+        }\n+        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n+                .executeLater(GraphManager.getDefault().getActiveGraph());\n+    }\n+\n+    /**\n+     * Reads the graph's layers_view_state attribute and populates the Layers\n+     * View pane.\n+     */\n+    public void readState() {\n+        final LayersViewPane pane = parent.getContent();\n+        if (pane == null) {\n+            return;\n+        }\n+\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if(graph == null){\n+            return;\n+        }\n+\n+        PluginExecution.withPlugin(new LayersViewStateReader(pane))\n+                .executeLater(graph);\n+    }\n+\n+    /**\n+     * Executes a plugin to write the current layers to the graph's\n+     * layers_view_state Attribute.\n+     */\n+    public void writeState() {\n+        final LayersViewPane pane = parent.getContent();\n+        if (pane == null) {\n+            return;\n+        }\n+\n+        final Graph graph = GraphManager.getDefault().getActiveGraph();\n+        if(graph == null){\n+            return;\n+        }\n+\n+        PluginExecution.withPlugin(new LayersViewStateWriter(pane.getlayers()))\n+                .executeLater(graph);\n+    }\n+\n+    /**\n+     * Read the current state from the graph.\n+     */\n+    private static final class LayersViewStateReader extends SimpleReadPlugin {\n+\n+        private LayersViewPane pane;\n+\n+        public LayersViewStateReader(final LayersViewPane pane) {\n+            this.pane = pane;\n+        }\n+\n+        @Override\n+        public void read(final GraphReadMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+            if (graph == null) {\n+                return;\n+            }\n+\n+            final int layersViewStateAttributeId = LayersViewConcept.MetaAttribute.LAYERS_VIEW_STATE.get(graph);\n+            if (layersViewStateAttributeId == Graph.NOT_FOUND) {\n+                return;\n+            }\n+\n+            final LayersViewState currentState = graph.getObjectValue(layersViewStateAttributeId, 0);\n+            if (currentState == null) {\n+                return;\n+            }\n+\n+            if (pane == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMTA2Mw==", "bodyText": "Curious as to why this is declared as a Node rather than a TextArea (given all the subsequent typecasting)?", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425501063", "createdAt": "2020-05-15T00:26:53Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewPane.java", "diffHunk": "@@ -109,47 +115,101 @@ public LayersViewPane(final LayersViewController controller) {\n         options.prefWidthProperty().bind(layersViewPane.widthProperty());\n \n         this.setCenter(layersViewPane);\n+        controller.writeState();\n     }\n \n-    private void createLayer(final boolean defaultLayer) {\n-        final Label layerIdText = new Label(String.format(\"%02d\", ++currentIndex));\n+    public LayersViewController getController() {\n+        return controller;\n+    }\n+\n+    private int createLayer(final int currentIndex, final boolean checkBoxSelected, final String query, final String description) {\n+        final Label layerIdText = new Label(String.format(\"%02d\", currentIndex));\n         layerIdText.setMinWidth(30);\n         layerIdText.setPrefWidth(40);\n         layerIdText.setTextAlignment(TextAlignment.CENTER);\n         layerIdText.setPadding(new Insets(0, 0, 0, 10));\n \n-        final CheckBox visibilityCheckBox = new CheckBox();\n-        visibilityCheckBox.setMinWidth(60);\n-        visibilityCheckBox.setPadding(new Insets(0, 30, 0, 15));\n-        visibilityCheckBox.selectedProperty().addListener((observable, oldValue, newValue) -> {\n+        final Node visibilityCheckBox = new CheckBox();\n+        ((CheckBox) visibilityCheckBox).setMinWidth(60);\n+        ((CheckBox) visibilityCheckBox).setPadding(new Insets(0, 30, 0, 15));\n+        ((CheckBox) visibilityCheckBox).setSelected(checkBoxSelected);\n+        visibilityCheckBox.setOnMouseClicked(e -> {\n+            final Node source = (Node) e.getSource();\n+            final LayerDescription layer = layers.get(GridPane.getRowIndex(source) - 1);\n+            layer.setCurrentLayerVisibility(!layer.getCurrentLayerVisibility());\n             controller.submit();\n             controller.execute();\n+            controller.writeState();\n         });\n \n-        final TextArea queryTextArea = new TextArea();\n-        queryTextArea.setPrefRowCount(1);\n+        final Node queryTextArea = new TextArea();\n+        ((TextArea) queryTextArea).setPrefRowCount(1);\n+        ((TextArea) queryTextArea).setText(query);\n+        ((TextArea) queryTextArea).focusedProperty().addListener((observable, oldVal, newVal) -> {\n+            if (!newVal) {\n+                final LayerDescription layer = layers.get(currentIndex - 1);\n+                layer.setQueryText(((TextArea) queryTextArea).getText());\n+                controller.writeState();\n+            }\n+        });\n \n-        final TextArea descriptionTextArea = new TextArea();\n-        descriptionTextArea.setPrefRowCount(1);\n+        final Node descriptionTextArea = new TextArea();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMzM0OQ==", "bodyText": "I note that this function as well as the two above it (handleNewGraph, handleGraphOpened) have very similar implementations. Maybe this is something that can be taken advantage of.", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425503349", "createdAt": "2020-05-15T00:35:08Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewTopComponent.java", "diffHunk": "@@ -76,12 +81,25 @@ protected LayersViewPane createContent() {\n \n     @Override\n     protected void handleNewGraph(final Graph graph) {\n-        // Old code - implement new handler if needed\n-//        if (attributeCalculatorPane != null && graph != null) {\n-//            attributeCalculatorPane.updateAttributes(graph);\n-//        }\n+        if (graph != null) {\n+            layersViewPane.setDefaultLayers();\n+            layersViewController.readState();\n+        }\n+    }\n+    \n+    @Override\n+    protected void handleGraphOpened(final Graph graph) {\n+        if (graph != null) {\n+            layersViewPane.setDefaultLayers();\n+            layersViewController.readState();\n+        }\n+    }\n+    \n+    @Override\n+    protected void handleComponentOpened() {\n+        layersViewPane.setDefaultLayers();\n+        layersViewController.readState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMzU4Ng==", "bodyText": "Change message to \"Concept class\" or similar", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425503586", "createdAt": "2020-05-15T00:35:54Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/state/LayersViewConcept.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.layers.state;\n+\n+import au.gov.asd.tac.constellation.graph.GraphElementType;\n+import au.gov.asd.tac.constellation.graph.schema.attribute.SchemaAttribute;\n+import au.gov.asd.tac.constellation.graph.schema.concept.SchemaConcept;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * Attribute provider for attributes specific to the Layers View.\n+ *\n+ * @author aldebaran30701\n+ */\n+@ServiceProvider(service = SchemaConcept.class)\n+public class LayersViewConcept extends SchemaConcept {\n+\n+    @Override\n+    public String getName() {\n+        return \"Layers View\";\n+    }\n+\n+    @Override\n+    public Set<Class<? extends SchemaConcept>> getParents() {\n+        final Set<Class<? extends SchemaConcept>> parentSet = new HashSet<>();\n+        parentSet.add(SchemaConcept.ConstellationViewsConcept.class);\n+        return Collections.unmodifiableSet(parentSet);\n+    }\n+\n+    public static class MetaAttribute {\n+\n+        private MetaAttribute() {\n+            throw new IllegalStateException(\"Utility class\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d083134a0471e4d30cbbee15096f3d7903ae2837"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwNTkyOA==", "bodyText": "There is actually a function StringUtils.isNotBlank. I'd use that instead (and do this for the other instances of this in the file)", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425505928", "createdAt": "2020-05-15T00:44:53Z", "author": {"login": "antares1470"}, "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/query/QueryEvaluator.java", "diffHunk": "@@ -15,110 +15,227 @@\n  */\n package au.gov.asd.tac.constellation.utilities.query;\n \n+import java.util.ArrayDeque;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Deque;\n-import java.util.LinkedList;\n import java.util.List;\n-import java.util.Map;\n import java.util.Stack;\n+import org.apache.commons.lang3.StringUtils;\n \n /**\n  * Evaluates a query expression made up of a chain of operations of the form (a\n  * op1 b op2 c ...).\n  * <p>\n  * Based on\n- * https://www.geeksforgeeks.org/stack-set-4-evaluation-postfix-expression/\n+ * https://www.geeksforgeeks.org/operatorStack-set-4-evaluation-postfix-expression/\n  *\n  * @author aldebaran30701\n  */\n public class QueryEvaluator {\n+\n+    private static final String PARENTHESES_REGEX = \"(?<!(?<![^\\\\\\\\]\\\\\\\\(?:\\\\\\\\\"\n+            + \"{2}){0,10})\\\\\\\\)\\\\)|(?<!(?<![^\\\\\\\\]\\\\\\\\(?:\\\\\\\\{2}){0,10})\\\\\\\\)\\\\(\";\n     \n-    private static final String SPLIT_REGEX = \"(?<!(?<![^\\\\\\\\]\\\\\\\\(?:\\\\\\\\{2}){0,10})\\\\\\\\)\\\\)|(?<!(?<![^\\\\\\\\]\\\\\\\\(?:\\\\\\\\{2}){0,10})\\\\\\\\)\\\\(\";\n-    \n-    private enum Operator {\n-        AND(1),\n-        OR(2);\n+    private QueryEvaluator() {\n+    }\n \n-        final int precedence;\n+    /**\n+     * Tokeniser takes input from the user and breaks it into terms such as\n+     * <ul>\n+     * <li>color == #ffffff</li>\n+     * <li>selected == true</li>\n+     * <li>||</li>\n+     * <li>&&</li>\n+     * <li>(</li>\n+     * <li>)</li>\n+     * </ul>\n+     * <p>\n+     * A backslash can be used to escape one of the terms. eg.\n+     * <ul>\n+     * <li>color == \\(#ffffff\\) - Input by user</li>\n+     * <li>color == (#ffffff) - Evaluated as</li>\n+     * </ul>\n+     * <p>\n+     * iterate all chars in input - check if moreToEscape if (, add term to list\n+     * of tokens if |, and previousChar was | then add || to list of tokens if\n+     * &, and previousChar was & then add && to list of tokens if ), add term to\n+     * list of tokens else, an escaped character or normal input so add to\n+     * currentString\n+     * <p>\n+     * @param input the query as written by the user to tokenise.\n+     * @return List<String> stringTokens is the items within the input string,\n+     * stored as a list.\n+     */\n+    public static List<String> tokeniser(final String input) {\n+        final List<String> stringTokens = new ArrayList<>();\n+        String currentString = \"\";\n+        char prevChar = Character.UNASSIGNED;\n \n-        private Operator(final int precedence) {\n-            this.precedence = precedence;\n+        if (StringUtils.isBlank(input)) {\n+            return Collections.emptyList();\n         }\n-    }\n-    \n-    private static final Map<String, Operator> OPERATORS = Map.ofEntries(Map.entry(\"&&\", Operator.AND),Map.entry(\"||\", Operator.OR));\n \n-    private static boolean isHigerPrecedence(final String operator, final String subOperator) {\n-        return (OPERATORS.containsKey(subOperator) \n-                && OPERATORS.get(subOperator).precedence >= OPERATORS.get(operator).precedence);\n+        for (final char c : input.toCharArray()) {\n+            if (c == '(' && prevChar != '\\\\') {\n+                if (StringUtils.isBlank(currentString)) {\n+                    currentString = \"(\";\n+                }\n+                currentString = StringUtils.trim(currentString);\n+                stringTokens.add(currentString);\n+                currentString = \"\";\n+            } else if (c == '|' && prevChar == '|') {\n+                currentString = currentString.substring(0, currentString.lastIndexOf(prevChar));\n+                if (!StringUtils.isBlank(currentString)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52a66b584226f0ecb5bf306587e1232aea5238d"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjkxMjE1", "url": "https://github.com/constellation-app/constellation/pull/524#pullrequestreview-412291215", "createdAt": "2020-05-15T01:35:25Z", "commit": {"oid": "a52a66b584226f0ecb5bf306587e1232aea5238d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTozNToyNVrOGVzlTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTozNToyNVrOGVzlTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxODQxNQ==", "bodyText": "@aldebaran30701 thanks for including this Wishlist item already. Hope you liked the idea too.\nA minor comment and you don't have to do it now but things like these \"[NO DESCRIPTION]\" strings can be made constants because it makes it easier to update and just stands out more like LAYER_MENU etc.\nIf we want to support multiple languages down the track, it also helps because all of the strings are in one place rather than nested in the code.", "url": "https://github.com/constellation-app/constellation/pull/524#discussion_r425518415", "createdAt": "2020-05-15T01:35:25Z", "author": {"login": "arcturus2"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersAddContextMenu.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.layers.utilities;\n+\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.GraphConstants;\n+import au.gov.asd.tac.constellation.graph.GraphElementType;\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.visual.contextmenu.ContextMenuProvider;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.utilities.graphics.Vector3f;\n+import au.gov.asd.tac.constellation.views.layers.layer.LayerDescription;\n+import au.gov.asd.tac.constellation.views.layers.state.LayersViewConcept;\n+import au.gov.asd.tac.constellation.views.layers.state.LayersViewState;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * Add context menu for Layers View\n+ *\n+ * @author aldebaran30701\n+ */\n+@ServiceProvider(service = ContextMenuProvider.class, position = 210)\n+public class LayersAddContextMenu implements ContextMenuProvider {\n+\n+    private static final String LAYER_MENU = \"Layers\";\n+    private static final String ADD_TO_LAYER = \"Add Selection to Layer...\";\n+\n+    @Override\n+    public List<String> getMenuPath(final GraphElementType elementType) {\n+        return Arrays.asList(LAYER_MENU, ADD_TO_LAYER);\n+    }\n+\n+    @Override\n+    public List<String> getItems(final GraphReadMethods graph, final GraphElementType elementType, final int elementId) {\n+        if (elementType == GraphElementType.VERTEX || elementType == GraphElementType.TRANSACTION) {\n+            final int stateAttributeId = LayersViewConcept.MetaAttribute.LAYERS_VIEW_STATE.get(graph);\n+            final List<String> currentLayers = new ArrayList<>();\n+            if (stateAttributeId != GraphConstants.NOT_FOUND) {\n+                final LayersViewState currentState = graph.getObjectValue(stateAttributeId, 0);\n+                for (final LayerDescription layer : currentState.getLayers()) {\n+                    if (layer.getLayerIndex() > 1) {\n+                        final String description = StringUtils.isBlank(layer.getLayerDescription())\n+                                ? \"[NO DESCRIPTION]\" : layer.getLayerDescription();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52a66b584226f0ecb5bf306587e1232aea5238d"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjkyODAx", "url": "https://github.com/constellation-app/constellation/pull/524#pullrequestreview-412292801", "createdAt": "2020-05-15T01:41:01Z", "commit": {"oid": "a52a66b584226f0ecb5bf306587e1232aea5238d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce66dcc20d42a8cb6935448d1a34590d466a765", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/bce66dcc20d42a8cb6935448d1a34590d466a765", "committedDate": "2020-05-15T02:01:00Z", "message": "PR Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzAzMDYz", "url": "https://github.com/constellation-app/constellation/pull/524#pullrequestreview-412303063", "createdAt": "2020-05-15T02:16:16Z", "commit": {"oid": "bce66dcc20d42a8cb6935448d1a34590d466a765"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee6d29ee88113c1b86a1e76dafb640ee18be209", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8ee6d29ee88113c1b86a1e76dafb640ee18be209", "committedDate": "2020-05-15T04:26:53Z", "message": "Add Deselect All button and handle closed graph"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3760, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}