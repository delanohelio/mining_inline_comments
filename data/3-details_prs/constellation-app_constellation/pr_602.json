{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTc1NjI5", "number": 602, "title": "Modify storage of Layers view queries and preferences", "bodyText": "Description of the Change\nThis change fixes #589 and implements a future on saving of queries to ensure only one selection is needed to have a layer become activated.\nLayerQueries list which used to be stored inside of StoreGraph was causing issues as the DualGraph managed two instances of StoreGraphs which were out of sync - causing odd behaviour like changing of attribute values.\nThe fix stores the list of queries inside a GraphAttribute Object. The same migration process was done to LayerPreferences to fix an issue which arose from the above implementation.\n\nAlternate Designs\nTrigger a commit whenever one StoreGraph layerQueries list was updated, to force the other StoreGraph within the DualGraph to sync with the updated one. I did not get far into this idea before running into problems.\n\nWhy Should This Be In Core?\nBug Fix - enhances the usability of layers view\n\nBenefits\nlayers now work on first click, and react normally because the two graphs are in sync\n\nPossible Drawbacks\nNone realised\n\nVerification Process\nTesting Queries\nAdd color and other attribute queries to each layer, verify correct results\n2.\tselecting a section of the graph, right click context menu -> add to a vacant layer\na.\tEnsure the selection is correct with what is added to the layer\n3.\tSelect more elements and test remove functionality\na.\tEnsure the elements are removed from that layer\n4.\tTest layers with short or long names for visuals and any errors.\nTesting Draw mode\n\nCreate a new graph\na.\tAdd a few elements and transactions on\ni.\tShould appear visible\nb.\tOpen layers view\ni.\tSelect layer 2 only\nii.\tAdd elements (Vertices and Transactions)\niii.\tElements should only appear on layer 2\n\n\nApplicable Issues\n#589", "createdAt": "2020-06-24T23:45:27Z", "url": "https://github.com/constellation-app/constellation/pull/602", "merged": true, "mergeCommit": {"oid": "301bad317c55318aed91435f88cb0aa023371cb0"}, "closed": true, "closedAt": "2020-07-10T16:46:09Z", "author": {"login": "aldebaran30701"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuiowKgH2gAyNDM5NTc1NjI5OjIyYmQwNmZjMDY0OThjOWQ4ZGM5ZjllYTgzZjVhNDA3MGM1NDg0ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczDih3gH2gAyNDM5NTc1NjI5Ojg4YmFiNDJjODk1ODM5OTA0ZDAxNmJkZjI4MmRiMGU0MTE5NzA3NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22bd06fc06498c9d8dc9f9ea83f5a4070c5484d3", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/22bd06fc06498c9d8dc9f9ea83f5a4070c5484d3", "committedDate": "2020-06-24T23:27:53Z", "message": "Add layerQueries and Preferences into attribute objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd11fb9b956b1b08539ab1c4849b1ef30988f6f9", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/cd11fb9b956b1b08539ab1c4849b1ef30988f6f9", "committedDate": "2020-06-24T23:28:38Z", "message": "Merge branch 'master' into layerfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c71b50ba402e2bba59f2b15029857c9271550f59", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c71b50ba402e2bba59f2b15029857c9271550f59", "committedDate": "2020-06-25T00:14:23Z", "message": "SQ Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630f3e7e9c5862e51bb37669696044a0615e978e", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/630f3e7e9c5862e51bb37669696044a0615e978e", "committedDate": "2020-06-26T02:23:19Z", "message": "Merge branch 'master' into layerfix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTk3NDc0", "url": "https://github.com/constellation-app/constellation/pull/602#pullrequestreview-437997474", "createdAt": "2020-06-26T03:55:22Z", "commit": {"oid": "630f3e7e9c5862e51bb37669696044a0615e978e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/876bfbd2126d75e26bdb48d3c24ba55500faebf7", "committedDate": "2020-06-29T00:37:50Z", "message": "ensure attributes on testcase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Njg2NDQ3", "url": "https://github.com/constellation-app/constellation/pull/602#pullrequestreview-439686447", "createdAt": "2020-06-30T05:46:36Z", "commit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo0NjozNlrOGqslnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTo1MjozM1rOGqstag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMzkwMw==", "bodyText": "above 2 could be made final", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447423903", "createdAt": "2020-06-30T05:46:36Z", "author": {"login": "antares1470"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1969,18 +1953,24 @@ public void clearValue(final int attribute, final int id) {\n      * </ul>\n      */\n     private void recalculateLayerVisibilities() {\n-        for (int i = 0; i < layerQueries.size(); i++) {\n+        List<String> queries = getQueries();\n+        List<Byte> preferences = getLayerPreferences();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDQ4Ng==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447424486", "createdAt": "2020-06-30T05:48:23Z", "author": {"login": "antares1470"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1948,6 +1908,30 @@ public void clearValue(final int attribute, final int id) {\n         }\n     }\n \n+    private List<String> getQueries() {\n+        final int queriesId = LayersConcept.GraphAttribute.LAYER_QUERIES.get(this);\n+        if (queriesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object queriesObject = getObjectValue(queriesId, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDU2NA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447424564", "createdAt": "2020-06-30T05:48:39Z", "author": {"login": "antares1470"}, "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1948,6 +1908,30 @@ public void clearValue(final int attribute, final int id) {\n         }\n     }\n \n+    private List<String> getQueries() {\n+        final int queriesId = LayersConcept.GraphAttribute.LAYER_QUERIES.get(this);\n+        if (queriesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object queriesObject = getObjectValue(queriesId, 0);\n+        if (queriesObject == null) {\n+            return Collections.emptyList();\n+        }\n+        return (List<String>) queriesObject;\n+    }\n+\n+    private List<Byte> getLayerPreferences() {\n+        final int preferencesId = LayersConcept.GraphAttribute.LAYER_PREFERENCES.get(this);\n+        if (preferencesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object preferencesObject = getObjectValue(preferencesId, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA==", "bodyText": "Is there an alternative to passing the active graph here? Just wondering about the case of executing this all standalone (e.g. in a unit test). For context, executeLater(null) throws an exception", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447425740", "createdAt": "2020-06-30T05:52:07Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -67,36 +70,27 @@ public void edit(final GraphWriteMethods graph, final PluginInteraction interact\n     }\n \n     /**\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n         final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n+        final List<String> layerQueries = new ArrayList<>();\n         int newBitmask = 0b0;\n         for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n             newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+\n+        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTg5OA==", "bodyText": "same here", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447425898", "createdAt": "2020-06-30T05:52:33Z", "author": {"login": "antares1470"}, "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -67,36 +70,27 @@ public void edit(final GraphWriteMethods graph, final PluginInteraction interact\n     }\n \n     /**\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n         final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n+        final List<String> layerQueries = new ArrayList<>();\n         int newBitmask = 0b0;\n         for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n             newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+\n+        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n-    }\n \n-    /**\n-     * Get all layer queries from the Layer View and store them on the qraph.\n-     */\n-    public void submit() {\n-        final LayersViewPane pane = parent.getContent();\n-        if (pane == null) {\n-            return;\n-        }\n-        final List<String> layerQueries = new ArrayList<>();\n-        for (final LayerDescription layer : pane.getlayers()) {\n-            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n-        }\n-        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).waitingFor(layerQueryFuture)\n                 .executeLater(GraphManager.getDefault().getActiveGraph());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "committedDate": "2020-06-30T06:23:15Z", "message": "add final modifiers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzI1NzQ3", "url": "https://github.com/constellation-app/constellation/pull/602#pullrequestreview-439725747", "createdAt": "2020-06-30T07:05:40Z", "commit": {"oid": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzowNTo0MFrOGqulfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzowNTo0MFrOGqulfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA==", "bodyText": "@aldebaran30701 this is similar to the problem I am presently looking at. In a unit test getActiveGraph() will be null so you will find that this plugin isn't executed. In the edit() if you print something out I think you will find that it isn't appearing.\nThe fix would be to pass in graph.", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447456638", "createdAt": "2020-06-30T07:05:40Z", "author": {"login": "arcturus2"}, "path": "CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java", "diffHunk": "@@ -0,0 +1,318 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.layers.utilities;\n+\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.graph.LayersConcept;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.schema.visual.concept.VisualConcept;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import au.gov.asd.tac.constellation.utilities.color.ConstellationColor;\n+import java.util.ArrayList;\n+import java.util.List;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author aldebaran30701\n+ */\n+public class LayersDualGraphSyncNGTest {\n+\n+    private int layerMaskV, layerMaskT, layerVisibilityV, layerVisibilityT, selectedV, selectedT, colorV, colorT;\n+    private int vxId1, vxId2, vxId3;\n+    private ConstellationColor vx1Color, vx2Color, vx3Color;\n+    private StoreGraph graph;\n+\n+    private final List<String> queries = new ArrayList();\n+\n+    public LayersDualGraphSyncNGTest() {\n+    }\n+\n+    public void setupGraph() {\n+        graph = new StoreGraph();\n+\n+        // Create LayerMask attributes\n+        layerMaskV = LayersConcept.VertexAttribute.LAYER_MASK.ensure(graph);\n+        if (layerMaskV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        layerMaskT = LayersConcept.TransactionAttribute.LAYER_MASK.ensure(graph);\n+        if (layerMaskT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create LayerVisilibity Attributes\n+        layerVisibilityV = LayersConcept.VertexAttribute.LAYER_VISIBILITY.ensure(graph);\n+        if (layerVisibilityV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        layerVisibilityT = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.ensure(graph);\n+        if (layerVisibilityT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create Selected Attributes\n+        selectedV = VisualConcept.VertexAttribute.SELECTED.ensure(graph);\n+        if (selectedV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        selectedT = VisualConcept.TransactionAttribute.SELECTED.ensure(graph);\n+        if (selectedT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create Color Attributes\n+        colorV = VisualConcept.VertexAttribute.COLOR.ensure(graph);\n+        if (colorV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        colorT = VisualConcept.TransactionAttribute.COLOR.ensure(graph);\n+        if (colorT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Adding 2 Vertices layer 1, visible\n+        vxId1 = graph.addVertex();\n+        vxId2 = graph.addVertex();\n+        vxId3 = graph.addVertex();\n+\n+        vx1Color = ConstellationColor.getColorValue(\"#ed76b1\");\n+        vx2Color = ConstellationColor.getColorValue(\"#eb78b2\");\n+        vx3Color = ConstellationColor.getColorValue(\"#ee71b3\");\n+\n+        graph.setObjectValue(colorV, vxId1, vx1Color);\n+        graph.setObjectValue(colorV, vxId2, vx2Color);\n+        graph.setObjectValue(colorV, vxId3, vx3Color);\n+//        graph.setIntValue(layerMaskV, vxId1, 1);\n+//        graph.setFloatValue(layerVisibilityV, vxId1, 1.0f);\n+//        graph.setBooleanValue(selectedV, vxId1, false);\n+//\n+//        vxId2 = graph.addVertex();\n+//        graph.setIntValue(layerMaskV, vxId2, 1);\n+//        graph.setFloatValue(layerVisibilityV, vxId2, 1.0f);\n+//        graph.setBooleanValue(selectedV, vxId2, false);\n+    }\n+\n+    @Test\n+    public void dynamicLayerChangeTest() throws InterruptedException, PluginException {\n+        setupGraph();\n+\n+        // Check Vertex set correctly\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId1));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId1));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId2));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId2));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId3));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId3));\n+        queries.clear();\n+        queries.add(\"Default\");\n+        queries.add(\"color == \" + vx1Color.toString());\n+\n+        LayersConcept.GraphAttribute.LAYER_QUERIES.ensure(graph);\n+        LayersConcept.GraphAttribute.LAYER_PREFERENCES.ensure(graph);\n+\n+        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(queries)).executeNow(graph);\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(0b10)).executeNow(graph);\n+\n+        // Check Vertex set correctly\n+        assertTrue(3 == graph.getIntValue(layerMaskV, vxId1));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId1));\n+        assertTrue(vx1Color.toString().equals(graph.getObjectValue(colorV, vxId1).toString()));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId2));\n+        assertTrue(0.0f == graph.getFloatValue(layerVisibilityV, vxId2));\n+        assertTrue(vx2Color.toString().equals(graph.getObjectValue(colorV, vxId2).toString()));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId3));\n+        assertTrue(0.0f == graph.getFloatValue(layerVisibilityV, vxId3));\n+        assertTrue(vx3Color.toString().equals(graph.getObjectValue(colorV, vxId3).toString()));\n+\n+        // change an attribute to trigger switching of graph object within dual graph\n+        PluginExecution.withPlugin(new SimpleEditPlugin(\"Test: change attribute value\") {\n+            @Override\n+            public void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n+                final int maxTransactionsId = VisualConcept.GraphAttribute.MAX_TRANSACTIONS.ensure(graph);\n+                graph.setIntValue(maxTransactionsId, 0, 9);\n+            }\n+        }).executeNow(GraphManager.getDefault().getActiveGraph());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8"}, "originalPosition": 161}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98454e66c086b38273b1012545e44caa0ce639be", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/98454e66c086b38273b1012545e44caa0ce639be", "committedDate": "2020-07-06T00:39:35Z", "message": ":white_check_mark: Convert the test to use a DualGraph (#625)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzUwMzYx", "url": "https://github.com/constellation-app/constellation/pull/602#pullrequestreview-442750361", "createdAt": "2020-07-06T03:08:35Z", "commit": {"oid": "98454e66c086b38273b1012545e44caa0ce639be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c172f47160c34b667f720903a90aa81d34ed6ac", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/4c172f47160c34b667f720903a90aa81d34ed6ac", "committedDate": "2020-07-07T05:28:58Z", "message": "Merge branch 'master' into layerfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4650a95c79911fb6ad123979cfb087086fe379c9", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/4650a95c79911fb6ad123979cfb087086fe379c9", "committedDate": "2020-07-07T23:52:10Z", "message": "Merge layer update into single plugin\n\n* combines updategraphqueriesplugin with updategraphbitmaskplugin into updatelayerselectionplugin in an attempt to reduce any possible concurrency based bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bdc1b05e8ce7b1462b71a9b838ccdda6324db71", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/1bdc1b05e8ce7b1462b71a9b838ccdda6324db71", "committedDate": "2020-07-08T05:39:17Z", "message": "Merge branch 'master' into layerfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88bab42c895839904d016bdf282db0e411970756", "author": {"user": {"login": "aldebaran30701", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/88bab42c895839904d016bdf282db0e411970756", "committedDate": "2020-07-09T00:03:39Z", "message": "Merge branch 'master' into layerfix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3568, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}