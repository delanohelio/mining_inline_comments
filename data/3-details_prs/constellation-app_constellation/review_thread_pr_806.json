{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMjg4ODMz", "number": 806, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzo1Njo1NFrOEcZxSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMjo1MlrOEefQvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjE3ODAyOnYy", "diffSide": "RIGHT", "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/SourcePane.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzo1Njo1NFrOHG65gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzo1Njo1NFrOHG65gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAxODQ5Ng==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r477018496", "createdAt": "2020-08-26T03:56:54Z", "author": {"login": "antares1470"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/SourcePane.java", "diffHunk": "@@ -302,4 +276,45 @@ void update(final ImportController importController) {\n     public final ImportDestination<?> getDestination() {\n         return graphComboBox.getSelectionModel().getSelectedItem();\n     }\n+\n+    /**\n+     * Helper method to update the destination graph combo box. Also used for\n+     * value loading when this pane is being initialized.\n+     */\n+    public void updateDestinationGraphCombo() {\n+        // previousDestinationObject is the previously selected item in the combobox\n+        ImportDestination<?> previousDestinationObject = graphComboBox.getSelectionModel().getSelectedItem();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e7d8cc4c67d64a6d7d56f0ffa4f5890f0eb3a59"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDA0MjczOnYy", "diffSide": "RIGHT", "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/color/ConstellationColor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMDoxOVrOHKKsFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNTo0NjoxOVrOHKkWMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMjkzMg==", "bodyText": "These methods are great! Can you please document these additional methods in CHANGELOG.md?", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480422932", "createdAt": "2020-08-31T22:00:19Z", "author": {"login": "arcturus2"}, "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/color/ConstellationColor.java", "diffHunk": "@@ -330,6 +330,65 @@ public static ConstellationColor fromHtmlColor(final String color) {\n         return ConstellationColor.getColorValue(red / 255f, green / 255f, blue / 255f, 1f);\n     }\n \n+    /**\n+     * Get a contrasting color based on YIQ values. Will return BLACK if the\n+     * passed in color is null.\n+     *\n+     * @param color HTML color to contrast with\n+     * @return the ConstellationColor which contrasts with color.\n+     */\n+    public static ConstellationColor getContrastHtmlColor(final String color) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NjU5MQ==", "bodyText": "I already had I believe. Do you want me to further expand on this?\nAdded utility methods to ConstellationColor which assist with getting inverse colors.", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480476591", "createdAt": "2020-08-31T23:45:44Z", "author": {"login": "aldebaran30701"}, "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/color/ConstellationColor.java", "diffHunk": "@@ -330,6 +330,65 @@ public static ConstellationColor fromHtmlColor(final String color) {\n         return ConstellationColor.getColorValue(red / 255f, green / 255f, blue / 255f, 1f);\n     }\n \n+    /**\n+     * Get a contrasting color based on YIQ values. Will return BLACK if the\n+     * passed in color is null.\n+     *\n+     * @param color HTML color to contrast with\n+     * @return the ConstellationColor which contrasts with color.\n+     */\n+    public static ConstellationColor getContrastHtmlColor(final String color) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMjkzMg=="}, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg0MzMxNQ==", "bodyText": "I already had I believe. Do you want me to further expand on this?\nAdded utility methods to ConstellationColor which assist with getting inverse colors.\n\nNo that's perfect, I missed it.", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480843315", "createdAt": "2020-09-01T05:46:19Z", "author": {"login": "arcturus2"}, "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/color/ConstellationColor.java", "diffHunk": "@@ -330,6 +330,65 @@ public static ConstellationColor fromHtmlColor(final String color) {\n         return ConstellationColor.getColorValue(red / 255f, green / 255f, blue / 255f, 1f);\n     }\n \n+    /**\n+     * Get a contrasting color based on YIQ values. Will return BLACK if the\n+     * passed in color is null.\n+     *\n+     * @param color HTML color to contrast with\n+     * @return the ConstellationColor which contrasts with color.\n+     */\n+    public static ConstellationColor getContrastHtmlColor(final String color) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMjkzMg=="}, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDA0NzM1OnYy", "diffSide": "RIGHT", "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/resources/delimited-importer.css", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMjoxN1rOHKKu7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo0NDoyMFrOHKN8CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMzY2MA==", "bodyText": "This file is empty so can it be removed?", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480423660", "createdAt": "2020-08-31T22:02:17Z", "author": {"login": "arcturus2"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/resources/delimited-importer.css", "diffHunk": "@@ -0,0 +1 @@\n+/* Delimited Importer */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NjE2OQ==", "bodyText": "Yep I think so.", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480476169", "createdAt": "2020-08-31T23:44:20Z", "author": {"login": "aldebaran30701"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/resources/delimited-importer.css", "diffHunk": "@@ -0,0 +1 @@\n+/* Delimited Importer */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMzY2MA=="}, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDA0OTI3OnYy", "diffSide": "RIGHT", "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/SourcePane.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMjo1MlrOHKKv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMjo1MlrOHKKv_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMzkzMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/constellation-app/constellation/pull/806#discussion_r480423932", "createdAt": "2020-08-31T22:02:52Z", "author": {"login": "arcturus2"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/delimited/SourcePane.java", "diffHunk": "@@ -140,28 +141,29 @@ public SourcePane(final ImportController importController) {\n         });\n \n         fileAddButton.setOnAction((ActionEvent t) -> {\n-            FileChooser fileChooser = new FileChooser();\n+            final FileChooser fileChooser = new FileChooser();\n             fileChooser.setInitialDirectory(DEFAULT_DIRECTORY);\n \n-            ImportFileParser parser = SourcePane.this.importFileParserComboBox.getSelectionModel().getSelectedItem();\n+            final ImportFileParser parser = SourcePane.this.importFileParserComboBox.getSelectionModel().getSelectedItem();\n             if (parser != null) {\n-                ExtensionFilter extensionFilter = parser.getExtensionFilter();\n+                final ExtensionFilter extensionFilter = parser.getExtensionFilter();\n                 if (extensionFilter != null) {\n                     fileChooser.getExtensionFilters().add(extensionFilter);\n                     fileChooser.setSelectedExtensionFilter(extensionFilter);\n                 }\n             }\n             fileChooser.getExtensionFilters().add(new ExtensionFilter(\"All Files\", \"*.*\"));\n \n-            List<File> newFiles = fileChooser.showOpenMultipleDialog(SourcePane.this.getScene().getWindow());\n+            final List<File> newFiles = fileChooser.showOpenMultipleDialog(SourcePane.this.getScene().getWindow());\n \n             if (newFiles != null) {\n                 if (!newFiles.isEmpty()) {\n                     DEFAULT_DIRECTORY = newFiles.get(0).getParentFile();\n                     SourcePane.this.importFileParserComboBox.setDisable(true);\n                 }\n                 final ObservableList<File> files = FXCollections.observableArrayList(fileListView.getItems());\n-                String warningMsg = \"The following files could not be parsed and have been excluded from import set:\";\n+                final StringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec4d70fc91e9129e1f0ca77cdda819d6ac3f2a0"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}