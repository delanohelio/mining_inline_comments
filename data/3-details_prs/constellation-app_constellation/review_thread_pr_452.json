{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDI4NDI3", "number": 452, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMToxNjo0OVrOD1CwJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjoyNDo0OVrOD1Du-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTQ2MjEyOnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMToxNjo0OVrOGKSUtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjozOTozMFrOGKnJRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzOTE1Ng==", "bodyText": "out can be final, also remove the rogue space.", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413439156", "createdAt": "2020-04-23T01:16:49Z", "author": {"login": "cygnus-x-1"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4MDI5Mg==", "bodyText": "Good pickup regarding the final and rogue space. I added the final but the space seems to be part of the auto-formatter. I'd say that's a NB 11.3 bug.", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413780292", "createdAt": "2020-04-23T12:39:30Z", "author": {"login": "arcturus2"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzOTE1Ng=="}, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTYyMjk4OnYy", "diffSide": "RIGHT", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjoyNDo1MFrOGKTsQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjo0NzozMFrOGKnfOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2MTU3MQ==", "bodyText": "is the intention to remove this once developer testing is done?", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413461571", "createdAt": "2020-04-23T02:24:50Z", "author": {"login": "antares1470"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {\n+                        glyphManager.writeGlyphBuffer(page, out);\n+                    } catch (IOException ex) {\n+                        // Nothing to do here - this is just for developer testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4NTkxMw==", "bodyText": "I'd like to keep this plugin around - so I've replaced the comment with a logger call.", "url": "https://github.com/constellation-app/constellation/pull/452#discussion_r413785913", "createdAt": "2020-04-23T12:47:30Z", "author": {"login": "arcturus2"}, "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -129,28 +122,39 @@ private static void init() {\n         }\n     }\n \n-    public static void exportGlyphTextures(File baseFile) {\n+    public static void exportGlyphTextures(final File baseFile) {\n \n         // Ensure that JavaFX is running\n-        Platform.startup(() -> {\n-        });\n-\n-        Platform.runLater(() -> {\n-            String baseFileName = baseFile.getAbsolutePath();\n-            int extensionStart = baseFileName.lastIndexOf('.');\n-            if (extensionStart > 0) {\n-                baseFileName = baseFileName.substring(0, extensionStart);\n-            }\n+        try {\n+            Platform.startup(() -> {\n+            });\n+        } catch (final IllegalStateException ex) {\n+            /**\n+             * there isn't a way to tell whether the JavaFX platform is running\n+             * so we'll absorb this exception and move on.\n+             */\n+        }\n \n-            for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n-                File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n-                try (OutputStream out = new FileOutputStream(outputFile)) {\n-                    glyphManager.writeGlyphBuffer(page, out);\n-                } catch (IOException ex) {\n-                    // Nothing to do here - this is just for developer testing.\n+        if (glyphManager != null) {\n+            Platform.runLater(() -> {\n+                String baseFileName = baseFile.getAbsolutePath();\n+                final int extensionStart = baseFileName.lastIndexOf('.');\n+                if (extensionStart > 0) {\n+                    baseFileName = baseFileName.substring(0, extensionStart);\n                 }\n-            }\n-        });\n+\n+                for (int page = 0; page < glyphManager.getGlyphPageCount(); page++) {\n+                    final File outputFile = new File(baseFileName + SeparatorConstants.UNDERSCORE + page + \".png\");\n+                    try ( OutputStream out = new FileOutputStream(outputFile)) {\n+                        glyphManager.writeGlyphBuffer(page, out);\n+                    } catch (IOException ex) {\n+                        // Nothing to do here - this is just for developer testing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2MTU3MQ=="}, "originalCommit": {"oid": "ef46fe35ccac229a1f80611e839d645b8a961e65"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2302, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}