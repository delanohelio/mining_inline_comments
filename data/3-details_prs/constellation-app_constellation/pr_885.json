{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzQ3OTUz", "number": 885, "title": "Table view export", "bodyText": "Description of the Change\nHave fixed the issue where copying and exporting data from the table view only was applied to the current page.\nAlternate Designs\n\nWhy Should This Be In Core?\nBug fix in Core\nBenefits\nUsers can copy and export the entire table instead of just the page they are currently on.\nPossible Drawbacks\nGetting the selection variants working properly meant a cost in performance for export to excel\nVerification Process\n\nApplicable Issues\n#862", "createdAt": "2020-11-02T02:36:55Z", "url": "https://github.com/constellation-app/constellation/pull/885", "merged": true, "mergeCommit": {"oid": "c9836bba0d0826834e10f883449313941a40a808"}, "closed": true, "closedAt": "2020-11-06T21:26:23Z", "author": {"login": "antares1470"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWcaHPAH2gAyNTEzNzQ3OTUzOmFkOTZiZDk4NjY1ZjA4OTg3ZmE1ZjM2NDczNTM5NjIxM2Y0NGVkNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZX5E1AH2gAyNTEzNzQ3OTUzOmMxNDIyZDU5YzYxMWIzMDJlNzFkODRjM2FiYjg4YjBlM2Y1MmJjZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad96bd98665f08987fa5f364735396213f44ed58", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ad96bd98665f08987fa5f364735396213f44ed58", "committedDate": "2020-10-26T22:49:26Z", "message": "fixed export to csv"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7dfbbb6517713cca5c5ab835da6bebc148f7c60", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c7dfbbb6517713cca5c5ab835da6bebc148f7c60", "committedDate": "2020-10-27T03:38:44Z", "message": "fixed export to excel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7ef9eb7f5c5c8725b66fac0a074f8bfd4f6629", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8d7ef9eb7f5c5c8725b66fac0a074f8bfd4f6629", "committedDate": "2020-11-02T02:27:31Z", "message": "fixed export selection for csv and excel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "committedDate": "2020-11-02T02:33:03Z", "message": "resolved merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzA0NzEw", "url": "https://github.com/constellation-app/constellation/pull/885#pullrequestreview-521304710", "createdAt": "2020-11-02T02:52:12Z", "commit": {"oid": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMjo1MjoxMlrOHr03PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMjo1NTo0NlrOHr06CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNjkyNQ==", "bodyText": "A real minor one but how about calling it updateSelectionFromFxThread?", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515716925", "createdAt": "2020-11-02T02:52:12Z", "author": {"login": "arcturus2"}, "path": "CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java", "diffHunk": "@@ -1239,44 +1234,99 @@ public void updateSelection(final Graph graph, final TableViewState state) {\n                 if (!state.isSelectedOnly()) {\n                     final List<Integer> selectedIds = new ArrayList<>();\n                     final ReadableGraph readableGraph = graph.getReadableGraph();\n-                    try {\n-                        final boolean isVertex = state.getElementType() == GraphElementType.VERTEX;\n-                        final int selectedAttributeId = isVertex\n-                                ? VisualConcept.VertexAttribute.SELECTED.get(readableGraph)\n-                                : VisualConcept.TransactionAttribute.SELECTED.get(readableGraph);\n-                        final int elementCount = isVertex\n-                                ? readableGraph.getVertexCount()\n-                                : readableGraph.getTransactionCount();\n-                        for (int elementPosition = 0; elementPosition < elementCount; elementPosition++) {\n-                            final int elementId = isVertex\n-                                    ? readableGraph.getVertex(elementPosition)\n-                                    : readableGraph.getTransaction(elementPosition);\n-                            boolean isSelected = false;\n-                            if (selectedAttributeId != Graph.NOT_FOUND) {\n-                                isSelected = readableGraph.getBooleanValue(selectedAttributeId, elementId);\n-                            }\n-                            if (isSelected) {\n-                                selectedIds.add(elementId);\n-                            }\n-                        }\n-                    } finally {\n-                        readableGraph.release();\n-                    }\n+                    addToSelectedIds(selectedIds, readableGraph, state);\n \n                     // update table selection\n                     final int[] selectedIndices = selectedIds.stream().map(id -> elementIdToRowIndex.get(id))\n                             .map(row -> table.getItems().indexOf(row)).mapToInt(i -> i).toArray();\n-\n-                    Platform.runLater(() -> {\n+                    \n+                    Platform.runLater(() -> {                        \n                         selectedProperty.removeListener(tableSelectionListener);\n                         table.getSelectionModel().clearSelection();\n                         if (!selectedIds.isEmpty()) {\n                             table.getSelectionModel().selectIndices(selectedIndices[0], selectedIndices);\n                         }\n-                        selectedProperty.addListener(tableSelectionListener);\n+                        selectedProperty.addListener(tableSelectionListener);                            \n                     });\n                 }\n             }\n         }\n     }\n+       \n+    /**\n+     * A version of the updateSelection(Graph, TableViewState) function which is\n+     * to be run on the JavaFX Application Thread\n+     * \n+     * @param graph the graph to read selection from.\n+     * @param state the current table view state.\n+     */\n+    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNzY0MQ==", "bodyText": "So if it is meant to be run on the FX thread, how is this bit passing?", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515717641", "createdAt": "2020-11-02T02:55:46Z", "author": {"login": "arcturus2"}, "path": "CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java", "diffHunk": "@@ -1239,44 +1234,99 @@ public void updateSelection(final Graph graph, final TableViewState state) {\n                 if (!state.isSelectedOnly()) {\n                     final List<Integer> selectedIds = new ArrayList<>();\n                     final ReadableGraph readableGraph = graph.getReadableGraph();\n-                    try {\n-                        final boolean isVertex = state.getElementType() == GraphElementType.VERTEX;\n-                        final int selectedAttributeId = isVertex\n-                                ? VisualConcept.VertexAttribute.SELECTED.get(readableGraph)\n-                                : VisualConcept.TransactionAttribute.SELECTED.get(readableGraph);\n-                        final int elementCount = isVertex\n-                                ? readableGraph.getVertexCount()\n-                                : readableGraph.getTransactionCount();\n-                        for (int elementPosition = 0; elementPosition < elementCount; elementPosition++) {\n-                            final int elementId = isVertex\n-                                    ? readableGraph.getVertex(elementPosition)\n-                                    : readableGraph.getTransaction(elementPosition);\n-                            boolean isSelected = false;\n-                            if (selectedAttributeId != Graph.NOT_FOUND) {\n-                                isSelected = readableGraph.getBooleanValue(selectedAttributeId, elementId);\n-                            }\n-                            if (isSelected) {\n-                                selectedIds.add(elementId);\n-                            }\n-                        }\n-                    } finally {\n-                        readableGraph.release();\n-                    }\n+                    addToSelectedIds(selectedIds, readableGraph, state);\n \n                     // update table selection\n                     final int[] selectedIndices = selectedIds.stream().map(id -> elementIdToRowIndex.get(id))\n                             .map(row -> table.getItems().indexOf(row)).mapToInt(i -> i).toArray();\n-\n-                    Platform.runLater(() -> {\n+                    \n+                    Platform.runLater(() -> {                        \n                         selectedProperty.removeListener(tableSelectionListener);\n                         table.getSelectionModel().clearSelection();\n                         if (!selectedIds.isEmpty()) {\n                             table.getSelectionModel().selectIndices(selectedIndices[0], selectedIndices);\n                         }\n-                        selectedProperty.addListener(tableSelectionListener);\n+                        selectedProperty.addListener(tableSelectionListener);                            \n                     });\n                 }\n             }\n         }\n     }\n+       \n+    /**\n+     * A version of the updateSelection(Graph, TableViewState) function which is\n+     * to be run on the JavaFX Application Thread\n+     * \n+     * @param graph the graph to read selection from.\n+     * @param state the current table view state.\n+     */\n+    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {\n+        synchronized (LOCK) {\n+            if (graph != null && state != null) {\n+\n+                if (!Platform.isFxApplicationThread()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "committedDate": "2020-11-02T03:44:53Z", "message": "renamed function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzc4OTE2", "url": "https://github.com/constellation-app/constellation/pull/885#pullrequestreview-522778916", "createdAt": "2020-11-03T18:40:42Z", "commit": {"oid": "992ac4582525a9e3388beaeedb1a2b73bafc0e6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0daec4e7ba5156db08c61404b71b9274b88728c9", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/0daec4e7ba5156db08c61404b71b9274b88728c9", "committedDate": "2020-11-04T02:37:50Z", "message": "fixed bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7422f7a90ec0b9a05cc03c8a5abef64f9b7328", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/6b7422f7a90ec0b9a05cc03c8a5abef64f9b7328", "committedDate": "2020-11-04T04:28:48Z", "message": "moved some code off the FX thread"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzI1NDkz", "url": "https://github.com/constellation-app/constellation/pull/885#pullrequestreview-523725493", "createdAt": "2020-11-04T20:51:43Z", "commit": {"oid": "6b7422f7a90ec0b9a05cc03c8a5abef64f9b7328"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1422d59c611b302e71d84c3abb88b0e3f52bcee", "author": {"user": {"login": "antares1470", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c1422d59c611b302e71d84c3abb88b0e3f52bcee", "committedDate": "2020-11-05T01:15:30Z", "message": "removed unnecessary sync, edited exception catches"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3514, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}