{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODMyODAy", "number": 843, "title": "Adding unit testing for attribute descriptions", "bodyText": "Description of the Change\nThis is related to #778 Review default values for attribute descriptions. Unit testing has also been added for all attribute descriptions and there where a couple of cases picked up in the unit testing where the actual default values were different for some scenarios. This has also been fixed by updating the attribute descriptions.\nNote that there are some methods I was not sure how to test so they have been commented. The hashCode methods in most attribute descriptions have also been commented because they are hard to test.\nAlternate Designs\n\nWhy Should This Be In Core?\n\nBenefits\nWith the addition of the unit tests we should have a better code coverage on the attribute descriptions which are a fundamental component.\nPossible Drawbacks\n\nVerification Process\n\nApplicable Issues\n#778", "createdAt": "2020-09-08T07:11:41Z", "url": "https://github.com/constellation-app/constellation/pull/843", "merged": true, "mergeCommit": {"oid": "212c644a79ef197e93550aaefe3aae97a94958d2"}, "closed": true, "closedAt": "2020-10-30T09:59:13Z", "author": {"login": "arcturus2"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGyLhQgH2gAyNDgxODMyODAyOjc0OWE2NmRiYjA1NGU5NzQyZWMwNmVjOWZhNjYwY2JmNTVkYjM2ZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXet7ugFqTUyMDM2Mzk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "749a66dbb054e9742ec06ec9fa660cbf55db36d2", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/749a66dbb054e9742ec06ec9fa660cbf55db36d2", "committedDate": "2020-09-08T07:08:37Z", "message": ":green_heart: Adding unit testing for attribute descriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1267f6b4703ecfbd28f42015e1c1295c3478f6e", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/c1267f6b4703ecfbd28f42015e1c1295c3478f6e", "committedDate": "2020-09-08T07:27:17Z", "message": ":green_heart: Adding another test\n* Trying to trigger Travis to kick off a SonarQube job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/b175221c09c87c97e25f0332d8c1aa29b5935809", "committedDate": "2020-09-08T10:31:24Z", "message": ":white_check_mark: Adding more unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMwOTI3", "url": "https://github.com/constellation-app/constellation/pull/843#pullrequestreview-484530927", "createdAt": "2020-09-08T22:22:58Z", "commit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyMjo1OVrOHOv81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMjoyNTozNlrOHOwAuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzczMw==", "bodyText": "Should this have an assert to check if it was set correctly?", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227733", "createdAt": "2020-09-08T22:22:59Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzg0NQ==", "bodyText": "Should this have an assert to check if it was set correctly?", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227845", "createdAt": "2020-09-08T22:23:16Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyODcyOA==", "bodyText": "Should this have an assert to check if it was set correctly?\nQuite a few more it seems, I wont add review for all. If it does need attention then I'd say just go through the tests.", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485228728", "createdAt": "2020-09-08T22:25:36Z", "author": {"login": "aldebaran30701"}, "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);\n+    }\n+\n+    /**\n+     * Test of getByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetByte() {\n+        int id = 0;\n+        byte expResult = 0;\n+        byte result = instance.getByte(id);\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetByte() {\n+        int id = 0;\n+        byte value = 0;\n+        instance.setByte(id, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd062d215420e35145ee83cfb5fdf0989b4c0e72", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/fd062d215420e35145ee83cfb5fdf0989b4c0e72", "committedDate": "2020-10-07T02:47:44Z", "message": "Adding more unit tests to attribute descriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd750e376cf4244b0315b7da162ec5780b16f99", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/8cd750e376cf4244b0315b7da162ec5780b16f99", "committedDate": "2020-10-27T06:50:47Z", "message": "Added some further unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7924ba345a6cca8345eef07553853f320ffcc627", "author": {"user": {"login": "arcturus2", "name": null}}, "url": "https://github.com/constellation-app/constellation/commit/7924ba345a6cca8345eef07553853f320ffcc627", "committedDate": "2020-10-28T01:15:48Z", "message": "Make sure this is a long"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjYzMTg4", "url": "https://github.com/constellation-app/constellation/pull/843#pullrequestreview-518263188", "createdAt": "2020-10-28T01:29:59Z", "commit": {"oid": "7924ba345a6cca8345eef07553853f320ffcc627"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMzYzOTYy", "url": "https://github.com/constellation-app/constellation/pull/843#pullrequestreview-520363962", "createdAt": "2020-10-30T04:04:49Z", "commit": {"oid": "7924ba345a6cca8345eef07553853f320ffcc627"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3494, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}