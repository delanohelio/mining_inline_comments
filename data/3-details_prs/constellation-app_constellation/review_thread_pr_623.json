{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzODYzMzk2", "number": 623, "reviewThreads": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzowNVrOELPGOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzo1M1rOFCDlxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE3MTQ2OnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzowNVrOGsu8DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzowNVrOGsu8DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU1OTU2NA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449559564", "createdAt": "2020-07-03T12:33:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+/**\n+ * A plugin designed to be supported by the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+public abstract class WelcomePageProvider {\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    public String getName() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    public String getLinkDescription() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a link to appear on the Welcome Page\n+     *\n+     * @return a link address\n+     */\n+    public String getLink() {\n+        StringBuilder href = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE3MzI0OnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzo0MFrOGsu9FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozMzo0MFrOGsu9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU1OTgyOA==", "bodyText": "...you could also chain all these appends together.", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449559828", "createdAt": "2020-07-03T12:33:40Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomePageProvider.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+/**\n+ * A plugin designed to be supported by the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+public abstract class WelcomePageProvider {\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    public String getName() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    public String getLinkDescription() {\n+        return null;\n+    }\n+    \n+    /**\n+     * Get a link to appear on the Welcome Page\n+     *\n+     * @return a link address\n+     */\n+    public String getLink() {\n+        StringBuilder href = new StringBuilder();\n+        href.append(\"<a href=\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE3NjEwOnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNDo0NFrOGsu-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNDo0NFrOGsu-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDI3MQ==", "bodyText": "extends JavaFxTopComponent?", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560271", "createdAt": "2020-07-03T12:34:44Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE3NzQ1OnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNTowNVrOGsu_mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNTowNVrOGsu_mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDQ3Mg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560472", "createdAt": "2020-07-03T12:35:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    private static final String WELCOME_WEBVIEW = \"resources/welcome_webview.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            BorderPane root = new BorderPane();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE3Nzk2OnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNToxMlrOGsu_3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNToxMlrOGsu_3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MDU0MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449560540", "createdAt": "2020-07-03T12:35:12Z", "author": {"login": "cygnus-x-1"}, "path": "CoreFunctionality/src/au/gov/asd/tac/constellation/functionality/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.functionality.welcome;\n+\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.text.ParseException;\n+import javafx.application.Platform;\n+import javafx.beans.value.ObservableValue;\n+import javafx.concurrent.Worker;\n+import javafx.concurrent.Worker.State;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.geometry.Orientation;\n+import javafx.scene.Scene;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.web.WebView;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Exceptions;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventListener;\n+import org.w3c.dom.events.EventTarget;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    private static final String WELCOME_WEBVIEW = \"resources/welcome_webview.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create Right VBox to handle Browser and controls,\n+            //or error messages\n+            VBox vbox = new VBox();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4NTUxOnYy", "diffSide": "RIGHT", "path": "CoreTesting/src/au/gov/asd/tac/constellation/testing/SphereGraphWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNzo1M1rOGsvEaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozNzo1M1rOGsvEaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTcwNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561707", "createdAt": "2020-07-03T12:37:53Z", "author": {"login": "cygnus-x-1"}, "path": "CoreTesting/src/au/gov/asd/tac/constellation/testing/SphereGraphWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/* \n+ * Copyright 2010-2020 Australian Signals Directorate \n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \n+ * you may not use this file except in compliance with the License. \n+ * You may obtain a copy of the License at \n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0 \n+ * \n+ * Unless required by applicable law or agreed to in writing, software \n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+ * See the License for the specific language governing permissions and \n+ * limitations under the License. \n+ */\n+package au.gov.asd.tac.constellation.testing;\n+\n+import au.gov.asd.tac.constellation.functionality.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.opener.GraphOpener;\n+import au.gov.asd.tac.constellation.graph.interaction.InteractiveGraphPluginRegistry;\n+import au.gov.asd.tac.constellation.graph.locking.DualGraph;\n+import au.gov.asd.tac.constellation.graph.schema.Schema;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.plugins.PluginExecutor;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import au.gov.asd.tac.constellation.testing.construction.SphereGraphBuilderPlugin;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**  \n+ * The New Graph with a Sphere plugin for the Welcome Page.  \n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = WelcomePageProvider.class)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"SphereGraphWelcomePlugin=Sphere Graph Welcome Plugin\")\n+public class SphereGraphWelcomePlugin extends WelcomePageProvider {\n+\n+    /**  \n+     * Get a unique reference that is used to identify the plugin\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return SphereGraphWelcomePlugin.class.getName();\n+    }\n+\n+    /**   \n+     * Get a description for the link that will appear on the Welcome Page  \n+     * @return a unique reference      \n+     */\n+    @Override\n+    public String getLinkDescription() {\n+        return \"Open up a new graph with a Sphere Network\";\n+    }\n+\n+    /**\n+     * Get an optional textual description that appears on the Welcome Page.\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getDescription() {\n+        StringBuilder buf = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4NjA1OnYy", "diffSide": "RIGHT", "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/DelimitedFileWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODowNVrOGsvE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODowNVrOGsvE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTgxMQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561811", "createdAt": "2020-07-03T12:38:05Z", "author": {"login": "cygnus-x-1"}, "path": "CoreImportExportPlugins/src/au/gov/asd/tac/constellation/plugins/importexport/DelimitedFileWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.plugins.importexport;\n+\n+import au.gov.asd.tac.constellation.functionality.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import au.gov.asd.tac.constellation.plugins.importexport.delimited.DelimitedFileImporterStage;\n+import javafx.application.Platform;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+\n+/**\n+ * The Open Delimited File plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = WelcomePageProvider.class)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"DelimitedFileWelcomePlugin=Delimited File Welcome Plugin\")\n+public class DelimitedFileWelcomePlugin extends WelcomePageProvider {\n+\n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return DelimitedFileWelcomePlugin.class.getName();\n+    }\n+    \n+    /**\n+     * Get a description for the link that will appear on the Welcome Page \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getLinkDescription() {\n+        return \"Open the Delimited File Importer\";\n+    }\n+    \n+    /**\n+     * Get an optional textual description that appears on the Welcome Page.\n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getDescription() {\n+        StringBuilder buf = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4NjU5OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODoxN1rOGsvFJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODoxN1rOGsvFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTg5NQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561895", "createdAt": "2020-07-03T12:38:17Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                DataObject d = activated.getLookup().lookup(DataObject.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4NjkxOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODoyN1rOGsvFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1Mjo1NFrOIBASQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTk0Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449561947", "createdAt": "2020-07-03T12:38:27Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNDE2MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537924160", "createdAt": "2020-12-07T23:52:54Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MTk0Nw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4NzQ5OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODo0MlrOGsvFvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MTo0MVrOIBAQIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA0Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562047", "createdAt": "2020-07-03T12:38:42Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzYxOQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923619", "createdAt": "2020-12-07T23:51:41Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA0Nw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4Nzc1OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODo0N1rOGsvF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MTo0NlrOIBAQRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA5MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562091", "createdAt": "2020-07-03T12:38:47Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzY1Mw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923653", "createdAt": "2020-12-07T23:51:46Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjA5MQ=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4ODAyOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozODo1NlrOGsvGGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MTozM1rOIBAP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjEzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562136", "createdAt": "2020-07-03T12:38:56Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzU0MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923541", "createdAt": "2020-12-07T23:51:33Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjEzNg=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4ODQzOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOTowOFrOGsvGWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MToyMFrOIBAPjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjIwMw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562203", "createdAt": "2020-07-03T12:39:08Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzQ2OA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923468", "createdAt": "2020-12-07T23:51:20Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjIwMw=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE4OTM5OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOToyNVrOGsvG4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOToyNVrOGsvG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjMzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562336", "createdAt": "2020-07-03T12:39:25Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                DataObject d = activated.getLookup().lookup(DataObject.class);\n+                if (d != null) {\n+                    File f = FileUtil.toFile(d.getPrimaryFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE5MDMzOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOTo0NFrOGsvHbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOTo0NFrOGsvHbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjQ3OQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562479", "createdAt": "2020-07-03T12:39:44Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                File[] files;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE5MDg0OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjozOTo1NlrOGsvHwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MTowNFrOIBAPCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjU2MA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562560", "createdAt": "2020-07-03T12:39:56Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyMzMzNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537923337", "createdAt": "2020-12-07T23:51:04Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjU2MA=="}, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE5MTUyOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFileAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0MDoxMFrOGsvIMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0MDoxMFrOGsvIMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MjY3Mg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449562672", "createdAt": "2020-07-03T12:40:10Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFileAction.java", "diffHunk": "@@ -73,101 +71,22 @@\n @ActionReferences({\n     @ActionReference(path = \"Menu/File\", position = 300),\n     @ActionReference(path = \"Shortcuts\", name = \"C-O\")})\n-public class OpenFileAction implements ActionListener {\n+public class OpenFileAction implements ActionListener {   \n \n-    /**\n-     * stores the last current directory of the file chooser\n-     */\n-    private static File currentDirectory = null;\n-\n-    private HelpCtx getHelpCtx() {\n-        return new HelpCtx(this.getClass().getName());\n-    }\n-\n-    /**\n-     * Creates and initializes a file chooser.\n-     *\n-     * @return the initialized file chooser\n-     */\n-    protected JFileChooser prepareFileChooser() {\n-        JFileChooser chooser = new FileChooser();\n-        chooser.setCurrentDirectory(getCurrentDirectory());\n-        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n-\n-        return chooser;\n-    }\n-\n-    /**\n-     * Displays the specified file chooser and returns a list of selected files.\n-     *\n-     * @param chooser file chooser to display\n-     * @return array of selected files,\n-     * @exception org.openide.util.UserCancelException if the user cancelled the\n-     * operation\n-     */\n-    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n-            throws UserCancelException {\n-        File[] files;\n-        do {\n-            int selectedOption = chooser.showOpenDialog(\n-                    WindowManager.getDefault().getMainWindow());\n-\n-            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n-                throw new UserCancelException();\n-            }\n-            files = chooser.getSelectedFiles();\n-        } while (files.length == 0);\n-        return files;\n+    public OpenFileAction() {\n     }\n-    private static boolean running;\n \n     /**\n      * {@inheritDoc} Displays a file chooser dialog and opens the selected\n      * files.\n      */\n     @Override\n     public void actionPerformed(final ActionEvent e) {\n-        if (running) {\n-            return;\n-        }\n+        final StoreGraph sg = new StoreGraph();\n         try {\n-            running = true;\n-            JFileChooser chooser = prepareFileChooser();\n-            File[] files;\n-            try {\n-                files = chooseFilesToOpen(chooser);\n-                currentDirectory = chooser.getCurrentDirectory();\n-            } catch (UserCancelException ex) {\n-                return;\n-            }\n-            for (int i = 0; i < files.length; i++) {\n-                OpenFile.openFile(files[i], -1);\n-            }\n-        } finally {\n-            running = false;\n-        }\n-    }\n-\n-    private static File getCurrentDirectory() {\n-        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n-            // Prefer to open from parent of active editor, if any.\n-            TopComponent activated = TopComponent.getRegistry().getActivated();\n-            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n-                DataObject d = activated.getLookup().lookup(DataObject.class);\n-                if (d != null) {\n-                    File f = FileUtil.toFile(d.getPrimaryFile());\n-                    if (f != null) {\n-                        return f.getParentFile();\n-                    }\n-                }\n-            }\n-        }\n-        // Otherwise, use last-selected directory, if any.\n-        if (currentDirectory != null && currentDirectory.exists()) {\n-            return currentDirectory;\n+            PluginExecution.withPlugin(GraphPluginRegistry.OPEN_FILE).executeNow(sg);\n+        } catch (InterruptedException | PluginException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjE5NzIyOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphPluginRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0MjoxMVrOGsvLuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo0MjoxMVrOGsvLuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU2MzU3Nw==", "bodyText": "While there isn't a GraphPluginRegistry yet, that name should probably be reserved for the Graph Framework module and this class should probably be GraphFilePluginRegistry", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r449563577", "createdAt": "2020-07-03T12:42:11Z", "author": {"login": "cygnus-x-1"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/GraphPluginRegistry.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.OpenFilePlugin;\n+\n+/**\n+ * List of all core actions/plugins\n+ *\n+ * @author canis_majoris\n+ */\n+public final class GraphPluginRegistry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a25cdd81bb5aa6b00f15c069c927214800acbc3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjAxOTk0OnYy", "diffSide": "RIGHT", "path": "CoreInteractiveGraph/src/au/gov/asd/tac/constellation/graph/interaction/plugins/io/screenshot/RecentGraphScreenshotUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzozNzowNFrOIAUn7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzozNzowNFrOIAUn7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwODgxNQ==", "bodyText": "are you able throw an illegal argument exception here:\nthrow new IllegalArgumentException(\"Utility class\")", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537208815", "createdAt": "2020-12-07T03:37:04Z", "author": {"login": "antares1470"}, "path": "CoreInteractiveGraph/src/au/gov/asd/tac/constellation/graph/interaction/plugins/io/screenshot/RecentGraphScreenshotUtilities.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot;\n+\n+import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.node.GraphNode;\n+import au.gov.asd.tac.constellation.preferences.ApplicationPreferenceKeys;\n+import au.gov.asd.tac.constellation.utilities.visual.VisualManager;\n+import java.io.File;\n+import java.util.logging.Logger;\n+import java.util.prefs.Preferences;\n+import org.openide.util.NbPreferences;\n+\n+/**\n+ * Recent Graph Screenshot Utilities\n+ *\n+ * @author arcturus\n+ */\n+public class RecentGraphScreenshotUtilities {\n+\n+    private static final String SCREENSHOTS_DIR = \"Screenshots\";\n+    private static final Logger LOGGER = Logger.getLogger(RecentGraphScreenshotUtilities.class.getName());\n+    \n+    private RecentGraphScreenshotUtilities() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjAzMjkxOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo0Mjo1M1rOIAUueA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo0Mjo1M1rOIAUueA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMDQ4OA==", "bodyText": "this looks like the old package name so not sure whether or not this needs to be changed to the new one", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537210488", "createdAt": "2020-12-07T03:42:53Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2019 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.functionality.welcome.WelcomeTopComponent\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA1MzMzOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1MjozNVrOIAU41A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1MjozNVrOIAU41A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzE0MA==", "bodyText": "Would be good to change this to a String like \"Getting Started Welcome\"", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213140", "createdAt": "2020-12-07T03:52:35Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return GettingStartedWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA1MzcxOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1Mjo1MFrOIAU5Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1Mjo1MFrOIAU5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzE5NQ==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213195", "createdAt": "2020-12-07T03:52:50Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that allows the user to join the \n+ * Constellation community\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 8)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"JoinCommWelcomePlugin=Join Comm Welcome Plugin\")\n+public class JoinCommWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String JOIN = \"resources/welcome_join.png\";\n+    ImageView joinView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(JOIN)));\n+    Button joinBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(JoinCommWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return JoinCommWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA1NDg3OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/OpenGraphWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1MzozNlrOIAU5rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1MzozNlrOIAU5rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzM1Ng==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213356", "createdAt": "2020-12-07T03:53:36Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/OpenGraphWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.GraphFilePluginRegistry;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.text.Font;\n+import org.openide.util.Exceptions;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The Open Graph plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 3)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"OpenGraphWelcomePlugin=Open Graph Welcome Plugin\")\n+public class OpenGraphWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String OPEN = \"resources/welcome_open_folder.png\";\n+    ImageView openImage = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(OPEN)));\n+    Button openFile = new Button();\n+    \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return OpenGraphWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA1NTg2OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1NDowOFrOIAU6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1NDowOFrOIAU6Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxMzQ5OA==", "bodyText": "similar to above", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537213498", "createdAt": "2020-12-07T03:54:08Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to where the user can \n+ * provide feedback for the Constellation app\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 7)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"ProvideFeedbackWelcomePlugin=Provide Feedback Welcome Plugin\")\n+public class ProvideFeedbackWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String FEEDBACK = \"resources/welcome_feedback.png\";\n+    ImageView feedView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(FEEDBACK)));\n+    Button feedbackButton = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(ProvideFeedbackWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return ProvideFeedbackWelcomePlugin.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA2NDk1OnYy", "diffSide": "RIGHT", "path": "CoreFunctionality/nbproject/project.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1ODo0OFrOIAU_IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzo1ODo0OFrOIAU_IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNDc1Mg==", "bodyText": "These 2 additions can be removed since they've been moved to their own module", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537214752", "createdAt": "2020-12-07T03:58:48Z", "author": {"login": "antares1470"}, "path": "CoreFunctionality/nbproject/project.xml", "diffHunk": "@@ -290,9 +290,10 @@\n                 <package>au.gov.asd.tac.constellation.functionality.browser</package>\n                 <package>au.gov.asd.tac.constellation.functionality.dialog</package>\n                 <package>au.gov.asd.tac.constellation.functionality.email</package>\n-                <package>au.gov.asd.tac.constellation.functionality.genericjsonio</package>\n                 <package>au.gov.asd.tac.constellation.functionality.startup</package>\n                 <package>au.gov.asd.tac.constellation.functionality.tutorial</package>\n+                <package>au.gov.asd.tac.constellation.functionality.welcome</package>\n+                <package>au.gov.asd.tac.constellation.functionality.welcome.plugins</package>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjA3MjM4OnYy", "diffSide": "RIGHT", "path": "CoreImportExportPlugins/nbproject/project.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDowMjozNVrOIAVC_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDowMjozNVrOIAVC_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIxNTc0MQ==", "bodyText": "if this dependency was added as a result of the welcome page then it can probably be removed", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537215741", "createdAt": "2020-12-07T04:02:35Z", "author": {"login": "antares1470"}, "path": "CoreImportExportPlugins/nbproject/project.xml", "diffHunk": "@@ -14,6 +14,14 @@\n                         <specification-version>1.0</specification-version>\n                     </run-dependency>\n                 </dependency>\n+                <dependency>\n+                    <code-name-base>au.gov.asd.tac.constellation.functionality</code-name-base>\n+                    <build-prerequisite/>\n+                    <compile-dependency/>\n+                    <run-dependency>\n+                        <specification-version>1.0.7</specification-version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078845a3cc7d6435febb4a7b01de059f5a8bf626"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjEzMzExOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoyOTo1M1rOIA5Xew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoyOTo1M1rOIA5Xew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMDgxMQ==", "bodyText": "Following on from my comment #623 (review) I was able to resolve this by running the open link command in a different thread. Actually, we also have a plugin that I'd prefer to use to open links and I replaced the above code with this and it worked.\nPluginExecution.withPlugin(CorePluginRegistry.OPEN_IN_BROWSER)\n                    .withParameter(OpenInBrowserPlugin.APPLICATION_PARAMETER_ID, \"Open \" + getName())\n                    .withParameter(OpenInBrowserPlugin.URL_PARAMETER_ID, url)\n                    .executeLater(null);", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537810811", "createdAt": "2020-12-07T20:29:53Z", "author": {"login": "arcturus2"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        if(Desktop.isDesktopSupported()){\n+            Desktop desktop = Desktop.getDesktop();\n+            try {\n+                desktop.browse(new URI(url));\n+            } catch (IOException | URISyntaxException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjE0MzY4OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDozMjozMVrOIA5djQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDozMjozMVrOIA5djQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMjM2NQ==", "bodyText": "I'm wondering if we want this or whether we not bother. If we can't open the link in a browser from what the Desktop utility provides then I feel we shouldn't worry about running it from the command line like this. If you agree, can we remove these blocks from the different WelcomeProvider plugins?", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537812365", "createdAt": "2020-12-07T20:32:31Z", "author": {"login": "arcturus2"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        if(Desktop.isDesktopSupported()){\n+            Desktop desktop = Desktop.getDesktop();\n+            try {\n+                desktop.browse(new URI(url));\n+            } catch (IOException | URISyntaxException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }\n+        } else {\n+            Runtime runtime = Runtime.getRuntime();\n+            try {\n+                runtime.exec(\"xdg-open \" + url);\n+            } catch (IOException e) {\n+                LOGGER.log(Level.WARNING, e.getMessage());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c361b736ca371379358230f19f98435b86829d2"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjkyNDkwOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1Njo0NVrOIBAYtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1Njo0NVrOIBAYtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNTgxNA==", "bodyText": "This could potentially be simplified to:\nif (currentDirectory == null || !currentDirectory.exists()) {\n    currentDirectory = new File(System.getProperty(\"user.home\"));\n}\nreturn currentDirectory;", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537925814", "createdAt": "2020-12-07T23:56:45Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/OpenFilePlugin.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.plugins.Plugin;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.SwingUtilities;\n+import org.openide.filesystems.FileUtil;\n+import org.openide.loaders.DataObject;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.util.UserCancelException;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.openide.windows.TopComponent;\n+import org.openide.windows.WindowManager;\n+\n+/**\n+ * Open a file\n+ *\n+ * @author canis_majoris\n+ */\n+@ServiceProvider(service = Plugin.class)\n+@Messages(\"OpenFilePlugin=Open File\")\n+public class OpenFilePlugin extends SimpleEditPlugin {\n+\n+    private static boolean running;\n+    private static File currentDirectory = null;\n+    \n+    @Override\n+    protected void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException, PluginException {\n+        SwingUtilities.invokeLater(() -> {\n+            if (running) {\n+                return;\n+            }\n+            try {\n+                running = true;\n+                JFileChooser chooser = prepareFileChooser();\n+                final File[] files;\n+                try {\n+                    files = chooseFilesToOpen(chooser);\n+                    currentDirectory = chooser.getCurrentDirectory();\n+                } catch (UserCancelException ex) {\n+                    return;\n+                }\n+                for (int i = 0; i < files.length; i++) {\n+                    OpenFile.openFile(files[i], -1);\n+                }\n+            } finally {\n+                running = false;\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates and initializes a file chooser.\n+     *\n+     * @return the initialized file chooser\n+     */\n+    protected JFileChooser prepareFileChooser() {\n+        JFileChooser chooser = new FileChooser();\n+        chooser.setCurrentDirectory(getCurrentDirectory());\n+        HelpCtx.setHelpIDString(chooser, getHelpCtx().getHelpID());\n+\n+        return chooser;\n+    }\n+    \n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return new HelpCtx(this.getClass().getName());\n+    }\n+\n+    /**\n+     * Displays the specified file chooser and returns a list of selected files.\n+     *\n+     * @param chooser file chooser to display\n+     * @return array of selected files,\n+     * @exception org.openide.util.UserCancelException if the user cancelled the\n+     * operation\n+     */\n+    public static File[] chooseFilesToOpen(final JFileChooser chooser)\n+            throws UserCancelException {\n+        File[] files;\n+        do {\n+            int selectedOption = chooser.showOpenDialog(\n+                    WindowManager.getDefault().getMainWindow());\n+\n+            if (selectedOption != JFileChooser.APPROVE_OPTION) {\n+                throw new UserCancelException();\n+            }\n+            files = chooser.getSelectedFiles();\n+        } while (files.length == 0);\n+        return files;\n+    }\n+    \n+    private static File getCurrentDirectory() {\n+        if (Boolean.getBoolean(\"netbeans.openfile.197063\")) {\n+            // Prefer to open from parent of active editor, if any.\n+            TopComponent activated = TopComponent.getRegistry().getActivated();\n+            if (activated != null && WindowManager.getDefault().isOpenedEditorTopComponent(activated)) {\n+                final DataObject d = activated.getLookup().lookup(DataObject.class);\n+                if (d != null) {\n+                    final File f = FileUtil.toFile(d.getPrimaryFile());\n+                    if (f != null) {\n+                        return f.getParentFile();\n+                    }\n+                }\n+            }\n+        }\n+        // Otherwise, use last-selected directory, if any.\n+        if (currentDirectory != null && currentDirectory.exists()) {\n+            return currentDirectory;\n+        }\n+        // Fall back to default location ($HOME or similar).\n+        currentDirectory = new File(System.getProperty(\"user.home\"));  // algol\n+        return currentDirectory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjkzMzE3OnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1OTowMlrOIBAdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1OTowMlrOIBAdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNjkzNQ==", "bodyText": "can probably omit the variable here and just add files.size() in the for loop condition", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537926935", "createdAt": "2020-12-07T23:59:02Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.openide.filesystems.FileObject;\n+import org.openide.filesystems.FileUtil;\n+\n+\n+/**\n+ * Get the recent files for the welcome page \n+ * \n+ * @author Delphinus8821\n+ */\n+\n+public class RecentFilesWelcomePage { \n+    \n+    static final List<RecentFiles.HistoryItem> files = RecentFiles.getRecentFiles();\n+    static final List<String> fileNames = new ArrayList<>();\n+    \n+    \n+    private RecentFilesWelcomePage() {\n+    }\n+    \n+    /**\n+     * Gets the names of the files that were recently saved\n+     * \n+     * @return list of recent file names\n+     */\n+    public static List<String> getFileNames(){\n+        RecentFiles.init(); \n+        int num = files.size();\n+        for (int i = 0; i < num; i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjkzNjQwOnYy", "diffSide": "RIGHT", "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowMDowOVrOIBAe3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowMDowOVrOIBAe3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzM4OQ==", "bodyText": "filename can be final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537927389", "createdAt": "2020-12-08T00:00:09Z", "author": {"login": "antares1470"}, "path": "CoreGraphFile/src/au/gov/asd/tac/constellation/graph/file/open/RecentFilesWelcomePage.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package au.gov.asd.tac.constellation.graph.file.open;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.openide.filesystems.FileObject;\n+import org.openide.filesystems.FileUtil;\n+\n+\n+/**\n+ * Get the recent files for the welcome page \n+ * \n+ * @author Delphinus8821\n+ */\n+\n+public class RecentFilesWelcomePage { \n+    \n+    static final List<RecentFiles.HistoryItem> files = RecentFiles.getRecentFiles();\n+    static final List<String> fileNames = new ArrayList<>();\n+    \n+    \n+    private RecentFilesWelcomePage() {\n+    }\n+    \n+    /**\n+     * Gets the names of the files that were recently saved\n+     * \n+     * @return list of recent file names\n+     */\n+    public static List<String> getFileNames(){\n+        RecentFiles.init(); \n+        int num = files.size();\n+        for (int i = 0; i < num; i++){\n+            final FileObject fo = RecentFiles.convertPath2File(files.get(i).getPath());\n+            if (fo != null && !fileNames.contains(files.get(i).getFileName())){\n+                fileNames.add(files.get(i).getFileName());  \n+            }   \n+        } \n+        return fileNames;\n+    }\n+    \n+    /**\n+     * Opens the file that matches the name of the parameter\n+     * \n+     * @param fileName \n+     */\n+    public static void openGraph(String fileName){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk1MjI3OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowNTo0OVrOIBAnkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowNTo0OVrOIBAnkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyOTYxNw==", "bodyText": "This should either extend SwingTopComponent<Component or extension> or JavaFxTopComponent<Pane or extension> in order to use the view framework", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537929617", "createdAt": "2020-12-08T00:05:49Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk1NTQxOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowNjo1OFrOIBApPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDowNjo1OFrOIBApPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzMDA0Nw==", "bodyText": "I believe it is pass by reference rather than by value. If that is indeed the case, I would either replace subsequent calls on pluginButtons[i] with currentButton (and make currentButton final) or remove currentButton and replace subsequent calls of it with pluginButtons[i]", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537930047", "createdAt": "2020-12-08T00:06:58Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk4NDQ2OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoxNzoxOFrOIBA4_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoxNzoxOFrOIBA4_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNDA3Nw==", "bodyText": "I assume the 4 is the number of plugin buttons currently being used? If so, I would extract the 4 into a constant in case the number of plugin buttons being used changes. Even better (if possible), I would see if there was a way to calculate the current number of plugin buttons being used so the value doesn't need to be manually changed every time we add or remove a plugin", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537934077", "createdAt": "2020-12-08T00:17:18Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk5NDk5OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMToxNFrOIBA-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMToxNFrOIBA-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTYwNA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935604", "createdAt": "2020-12-08T00:21:14Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 224}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk5NjE5OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo0MlrOIBA_mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo0MlrOIBA_mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTc2OA==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935768", "createdAt": "2020-12-08T00:21:42Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 258}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk5NjQ1OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo0OFrOIBA_vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo0OFrOIBA_vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTgwNw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935807", "createdAt": "2020-12-08T00:21:48Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {\n+        button.setPrefSize(125, 125);\n+        button.setMaxSize(150, 150);\n+        button.setStyle(\"-fx-background-color: #2e4973;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void createRecentButtons(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk5NjgwOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo1NVrOIBA_6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMTo1NVrOIBA_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNTg1MQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537935851", "createdAt": "2020-12-08T00:21:55Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/WelcomeTopComponent.java", "diffHunk": "@@ -0,0 +1,360 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome;\n+\n+import au.gov.asd.tac.constellation.graph.file.open.RecentFilesWelcomePage;\n+import au.gov.asd.tac.constellation.graph.interaction.plugins.io.screenshot.RecentGraphScreenshotUtilities;\n+import au.gov.asd.tac.constellation.security.ConstellationSecurityManager;\n+import au.gov.asd.tac.constellation.security.proxy.ProxyUtilities;\n+import au.gov.asd.tac.constellation.utilities.BrandingUtilities;\n+import au.gov.asd.tac.constellation.utilities.font.FontUtilities;\n+import java.awt.BorderLayout;\n+import java.io.File;\n+import java.util.List;\n+import javafx.application.Platform;\n+import javafx.embed.swing.JFXPanel;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Orientation;\n+import javafx.geometry.Pos;\n+import javafx.geometry.Rectangle2D;\n+import javafx.scene.Cursor;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.ContentDisplay;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.SplitPane;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.FlowPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Priority;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import org.netbeans.api.settings.ConvertAsProperties;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle.Messages;\n+import org.openide.windows.TopComponent;\n+\n+/**\n+ *\n+ * WelcomeTopComponent is designed to inform users of news about Constellation.\n+ *\n+ * @author canis_majoris\n+ */\n+@ConvertAsProperties(\n+        dtd = \"-//au.gov.asd.tac.constellation.visual.welcome//Welcome//EN\",\n+        autostore = false\n+)\n+@TopComponent.Description(\n+        preferredID = \"WelcomeTopComponent\",\n+        iconBase = \"org/netbeans/modules/autoupdate/ui/info_icon.png\",\n+        persistenceType = TopComponent.PERSISTENCE_NEVER\n+)\n+@TopComponent.Registration(\n+        mode = \"editor\",\n+        openAtStartup = false\n+)\n+@ActionID(\n+        category = \"Window\",\n+        id = \"au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent\"\n+)\n+@ActionReferences({\n+    @ActionReference(path = \"Menu/Help\", position = 0)\n+})\n+@TopComponent.OpenActionRegistration(\n+        displayName = \"#CTL_WelcomeTopComponentAction\",\n+        preferredID = \"WelcomeTopComponent\"\n+)\n+@Messages({\n+    \"CTL_WelcomeTopComponentAction=Welcome Page\",\n+    \"CTL_WelcomeTopComponentTopComponent=Welcome Page\",\n+    \"HINT_WelcomeTopComponentTopComponent=Welcome Page\"\n+})\n+public final class WelcomeTopComponent extends TopComponent {\n+\n+    private JFXPanel panel = new JFXPanel();\n+    private static final String WELCOME_THEME = \"resources/welcome_theme.css\";\n+    public static final String ERROR_BUTTON_MESSAGE = String.format(\"%s Information\", BrandingUtilities.APPLICATION_NAME);\n+    public static final String WELCOME_TEXT = \"Welcome to Constellation\";\n+    public static final double SPLIT_POS = 0.2;\n+\n+    //Place holder images\n+    public static final String LOGO = \"resources/constellation-logo.png\";\n+\n+    protected static final Button[] pluginButtons = new Button[10];\n+    protected static final Button[] recentGraphButtons = new Button[10];\n+\n+    public WelcomeTopComponent() {\n+        setName(Bundle.CTL_WelcomeTopComponentTopComponent());\n+        setToolTipText(Bundle.HINT_WelcomeTopComponentTopComponent());\n+        setLayout(new BorderLayout());\n+\n+        ProxyUtilities.setProxySelector(null);\n+\n+        // Add the JavaFX container to this topcomponent (this enables JavaFX and Swing interoperability):\n+        add(panel, BorderLayout.CENTER);\n+\n+        ConstellationSecurityManager.startSecurityLaterFX(() -> {\n+            Platform.setImplicitExit(false);\n+\n+            //The root swing object to be inseted into a JFX Panel\n+            final BorderPane root = new BorderPane();\n+\n+            final SplitPane splitPane = new SplitPane();\n+            splitPane.setOrientation(Orientation.HORIZONTAL);\n+\n+            splitPane.setStyle(\"-fx-background-color: transparent;\");\n+            root.setCenter(splitPane);\n+\n+            //Create VBox to handle Browser and controls,\n+            //or error messages\n+            final VBox leftVBox = new VBox();\n+            splitPane.getItems().add(leftVBox);\n+            leftVBox.setSpacing(20);\n+            leftVBox.setMinWidth(350);\n+            leftVBox.setPrefWidth(400);\n+            leftVBox.setMaxWidth(450);\n+\n+            final HBox logoHBox = new HBox();\n+            logoHBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"white\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            ImageView logoView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(LOGO)));\n+            logoView.setFitHeight(100);\n+            logoView.setFitWidth(150);\n+            logoHBox.getChildren().add(logoView);\n+            logoHBox.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(logoHBox);\n+\n+            //Create the labels for the left pane\n+            final Label welcome = new Label(WELCOME_TEXT);\n+            welcome.setFont(new Font(\"Arial Unicode MS\", 26));\n+            welcome.setAlignment(Pos.CENTER);\n+            leftVBox.getChildren().add(welcome);\n+\n+            //Create right VBox for graph controls\n+            final VBox rightVBox = new VBox();\n+            rightVBox.setPadding(new Insets(50, 50, 50, 50));\n+            rightVBox.setBackground(new Background(new BackgroundFill(Color.valueOf(\"#14161a\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+            splitPane.getItems().add(rightVBox);\n+\n+            //Create HBoxes for the right_vbox\n+            final HBox topHBox = new HBox();\n+            final HBox bottomHBox = new HBox();\n+\n+            //hbox formatting\n+            topHBox.setPadding(new Insets(50, 0, 50, 0));\n+            topHBox.setSpacing(10);\n+            bottomHBox.setPadding(new Insets(50, 0, 50, 0));\n+            bottomHBox.setSpacing(10);\n+\n+            getWelcomeContent();\n+\n+            for (int i = 0; i < 10; i++) {\n+                if (pluginButtons[i] != null) {\n+                    Button currentButton = pluginButtons[i];\n+                    pluginButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                        @Override\n+                        public void handle(ActionEvent e) {\n+                            Lookup.getDefault().lookupAll(WelcomePageProvider.class).forEach(plugin -> {\n+                                if (currentButton == plugin.getButton()) {\n+                                    plugin.run();\n+                                }\n+                            });\n+                        }\n+                    });\n+                    if (i < 4) {\n+                        setButtonProps(pluginButtons[i]);\n+                        topHBox.getChildren().add(pluginButtons[i]);\n+                    } else {\n+                        setInfoButtons(pluginButtons[i]);\n+                        leftVBox.getChildren().add(pluginButtons[i]);\n+                    }\n+                }\n+            }\n+\n+            leftVBox.setAlignment(Pos.TOP_CENTER);\n+\n+            //formatting for bottom hbox\n+            final Label recent = new Label(\"Recent\");\n+            recent.setFont(new Font(\"Arial Unicode MS\", 24));\n+\n+            rightVBox.getChildren().add(topHBox);\n+            rightVBox.getChildren().add(recent);\n+            rightVBox.getChildren().add(bottomHBox);\n+\n+            final FlowPane flow = new FlowPane();\n+            flow.setPrefWrapLength(1000);\n+            flow.setHgap(20);\n+            flow.setVgap(20);\n+\n+            //Create the buttons for the recent page\n+            final List<String> fileNames = RecentFilesWelcomePage.getFileNames();\n+            for (int i = 0; i < 10; i++) {\n+                recentGraphButtons[i] = new Button();\n+                //if the user has recent files get the names\n+                //and make them the text of the buttons\n+                createRecentButtons(recentGraphButtons[i]);\n+                if (i < fileNames.size()) {\n+                    recentGraphButtons[i].setText(fileNames.get(i));\n+                }\n+                final String text = recentGraphButtons[i].getText();\n+                \n+                Rectangle2D value = new Rectangle2D(700, 150, 500, 500);\n+                final String screenshotFilename = RecentGraphScreenshotUtilities.getScreenshotsDir() + File.separator + text + \".png\";\n+                if (new File(screenshotFilename).exists()) {\n+                    final ImageView imageView = new ImageView(new Image(\"File:/\" + screenshotFilename));\n+                    imageView.setViewport(value);\n+                    imageView.setFitHeight(145);\n+                    imageView.setFitWidth(145);\n+                    recentGraphButtons[i].setGraphic(imageView);\n+                }\n+\n+                //Calls the method for the recent graphs to open\n+                // on the button action\n+                recentGraphButtons[i].setOnAction(new EventHandler<ActionEvent>() {\n+                    @Override\n+                    public void handle(ActionEvent e) {\n+                        RecentFilesWelcomePage.openGraph(text);\n+                    }\n+                });\n+                flow.getChildren().add(recentGraphButtons[i]);\n+            }\n+\n+            bottomHBox.getChildren().add(flow);\n+            splitPane.getDividers().get(0).setPosition(SPLIT_POS);\n+            VBox.setVgrow(rightVBox, Priority.ALWAYS);\n+\n+            //Finally, insert the root object into a scene, and insert the\n+            //scene into the JavaFX panel.\n+            final Scene scene = new Scene(root, Color.web(\"1d1d1d\"));\n+            scene.rootProperty().get().setStyle(String.format(\"-fx-font-size:%d;\", FontUtilities.getOutputFontSize()));\n+            scene.getStylesheets().add(WelcomeTopComponent.class.getResource(WELCOME_THEME).toExternalForm());\n+            panel.setScene(scene);\n+        });\n+    }\n+\n+    public void setButtonProps(Button button) {\n+        button.setPrefSize(125, 125);\n+        button.setMaxSize(150, 150);\n+        button.setStyle(\"-fx-background-color: #2e4973;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void createRecentButtons(Button button) {\n+        button.setPrefSize(160, 160);\n+        button.setMaxSize(175, 175);\n+        button.setStyle(\"-fx-background-color: #333333; -fx-background-radius: 10px; -fx-text-fill: white;\");\n+        button.setCursor(Cursor.HAND);\n+        button.setContentDisplay(ContentDisplay.TOP);\n+    }\n+\n+    public void setInfoButtons(Button button) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 274}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njk5OTMxOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/AddModeWelcomePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMjozOFrOIBBBRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMjozOFrOIBBBRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjE5Nw==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936197", "createdAt": "2020-12-08T00:22:38Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/AddModeWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.file.opener.GraphOpener;\n+import au.gov.asd.tac.constellation.graph.locking.DualGraph;\n+import au.gov.asd.tac.constellation.graph.schema.Schema;\n+import au.gov.asd.tac.constellation.graph.schema.SchemaFactoryUtilities;\n+import au.gov.asd.tac.constellation.graph.schema.analytic.AnalyticSchemaFactory;\n+import au.gov.asd.tac.constellation.graph.schema.visual.concept.VisualConcept;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.text.Font;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The New Graph in Add Mode plugin for the Welcome Page.\n+ *\n+ * @author canis_majoris\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 1)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"AddModeWelcomePlugin=Add Mode Welcome Plugin\")\n+public class AddModeWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String NEW_GRAPH = \"resources/welcome_add_graph.png\";\n+    final ImageView addView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(NEW_GRAPH)));\n+    final Button newButton = new Button();\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Add Graph Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        final Schema schema = SchemaFactoryUtilities.getSchemaFactory(AnalyticSchemaFactory.ANALYTIC_SCHEMA_ID).createSchema();\n+        final StoreGraph sg = new StoreGraph(schema);\n+        schema.newGraph(sg);\n+        int drawModeAttribute = VisualConcept.GraphAttribute.DRAWING_MODE.ensure(sg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzAwMTIxOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzoxMFrOIBBCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzoxMFrOIBBCPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjQ0NQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936445", "createdAt": "2020-12-08T00:23:10Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/GettingStartedWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Logger;\n+import java.util.logging.Level;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to the Getting Started guides and resources\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 5)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"GettingStartedWelcomePlugin=Getting Started Welcome Plugin\")\n+public class GettingStartedWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String GETTING_STARTED = \"resources/welcome_getting_started.png\";\n+    final ImageView started = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(GETTING_STARTED)));\n+    final Button startedBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(GettingStartedWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Getting Started Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://constellation.readthedocs.io/en/latest/\";\n+\n+        PluginExecution.withPlugin(CorePluginRegistry.OPEN_IN_BROWSER)\n+            .withParameter(OpenInBrowserPlugin.APPLICATION_PARAMETER_ID, \"Open \" + getName())\n+            .withParameter(OpenInBrowserPlugin.URL_PARAMETER_ID, url)\n+            .executeLater(null);\n+    }\n+\n+    /**\n+     * Determines whether this analytic appear on the Welcome Page \n+     *\n+     * @return true is this analytic should be visible, false otherwise.\n+     */\n+    @Override\n+    public boolean isVisible() {\n+        return true;\n+    }\n+    \n+     /**\n+     * Creates the button object to represent this plugin\n+     * \n+     * @return the button object\n+     */\n+    @Override\n+    public Button getButton(){\n+        started.setFitHeight(25);\n+        started.setFitWidth(25);\n+        final Text title = new Text(\"Getting Started\");\n+        title.setFont(new Font(\"Arial\", 18));\n+        title.setFill(Color.WHITE);\n+        Text subtitle = new Text(\"Guides & Resources\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzAwMTg3OnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzoyM1rOIBBCmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzoyM1rOIBBCmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjUzNg==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936536", "createdAt": "2020-12-08T00:23:23Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/JoinCommWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that allows the user to join the \n+ * Constellation community\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 8)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"JoinCommWelcomePlugin=Join Comm Welcome Plugin\")\n+public class JoinCommWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String JOIN = \"resources/welcome_join.png\";\n+    final ImageView joinView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(JOIN)));\n+    final Button joinBtn = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(JoinCommWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Join Community Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://gitter.im/constellation-app/community\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzAwMjkzOnYy", "diffSide": "RIGHT", "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzo1M1rOIBBDQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMDoyMzo1M1rOIBBDQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkzNjcwNQ==", "bodyText": "final", "url": "https://github.com/constellation-app/constellation/pull/623#discussion_r537936705", "createdAt": "2020-12-08T00:23:53Z", "author": {"login": "antares1470"}, "path": "CoreWelcomeView/src/au/gov/asd/tac/constellation/views/welcome/plugins/ProvideFeedbackWelcomePlugin.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.welcome.plugins;\n+\n+import au.gov.asd.tac.constellation.functionality.CorePluginRegistry;\n+import au.gov.asd.tac.constellation.functionality.browser.OpenInBrowserPlugin;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomePageProvider;\n+import au.gov.asd.tac.constellation.views.welcome.WelcomeTopComponent;\n+import au.gov.asd.tac.constellation.plugins.PluginInfo;\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javafx.geometry.Pos;\n+import javafx.scene.control.Button;\n+import javafx.scene.image.Image;\n+import javafx.scene.image.ImageView;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Color;\n+import javafx.scene.text.Font;\n+import javafx.scene.text.Text;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The plugin for the Welcome Page that leads to where the user can \n+ * provide feedback for the Constellation app\n+ *\n+ * @author Delphinus8821\n+ */\n+\n+@ServiceProvider(service = WelcomePageProvider.class, position = 7)\n+@PluginInfo(tags = {\"WELCOME\"})\n+@NbBundle.Messages(\"ProvideFeedbackWelcomePlugin=Provide Feedback Welcome Plugin\")\n+public class ProvideFeedbackWelcomePlugin extends WelcomePageProvider {\n+    \n+    public static final String FEEDBACK = \"resources/welcome_feedback.png\";\n+    final ImageView feedView = new ImageView(new Image(WelcomeTopComponent.class.getResourceAsStream(FEEDBACK)));\n+    final Button feedbackButton = new Button();\n+    \n+    private static final Logger LOGGER = Logger.getLogger(ProvideFeedbackWelcomePlugin.class.getName());\n+        \n+    /**\n+     * Get a unique reference that is used to identify the plugin \n+     *\n+     * @return a unique reference\n+     */\n+    @Override\n+    public String getName() {\n+        return \"Provide Feedback Welcome\";\n+    }\n+    \n+    /**\n+     * This method describes what action should be taken when the \n+     * link is clicked on the Welcome Page\n+     *\n+     */\n+    @Override\n+    public void run() {\n+        String url = \"https://github.com/constellation-app/constellation/issues/new\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed18c1138d6cc5b7c00708c1bb250444c5f2b982"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2198, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}