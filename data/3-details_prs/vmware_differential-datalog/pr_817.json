{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjM4Mzg2", "number": 817, "title": "jooq-ddlog: migrate away from dumpTables and use incremental API", "bodyText": "This patch materializes records in Java and uses ddlog's incremental API instead of dumpTables.\nSigned-off-by: Lalith Suresh lsuresh@vmware.com", "createdAt": "2020-11-17T19:09:19Z", "url": "https://github.com/vmware/differential-datalog/pull/817", "merged": true, "mergeCommit": {"oid": "07b5e23a42f25e5a0a1a4dc68db46240c53dd3b0"}, "closed": true, "closedAt": "2020-11-18T18:08:06Z", "author": {"login": "lalithsuresh"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddeVmXgH2gAyNTIyNjM4Mzg2Ojc0YjBlZTNlYzFkNWQ5MDdlOTZkYTI0NDRjMTM4MDkzZjE4OWMyYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddez6zAFqTUzMjc0MjQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "74b0ee3ec1d5d907e96da2444c138093f189c2a5", "author": {"user": {"login": "lalithsuresh", "name": "Lalith Suresh"}}, "url": "https://github.com/vmware/differential-datalog/commit/74b0ee3ec1d5d907e96da2444c138093f189c2a5", "committedDate": "2020-11-17T19:01:47Z", "message": "jooq-ddlog: migrate away from dumpTables and use incremental API\n\nSigned-off-by: Lalith Suresh <lsuresh@vmware.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f12ecf9c4134b0110fe97a72782bb924b4e995d3", "author": {"user": {"login": "lalithsuresh", "name": "Lalith Suresh"}}, "url": "https://github.com/vmware/differential-datalog/commit/f12ecf9c4134b0110fe97a72782bb924b4e995d3", "committedDate": "2020-11-17T19:10:54Z", "message": "jooq-ddlog: handle nulls in structToValue\n\nSigned-off-by: Lalith Suresh <lsuresh@vmware.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d", "author": {"user": {"login": "lalithsuresh", "name": "Lalith Suresh"}}, "url": "https://github.com/vmware/differential-datalog/commit/e0e62987378b8eb045c0e3b55557843d1b74796d", "committedDate": "2020-11-17T19:27:12Z", "message": "jooq-ddlog: use a relationNameToTableName() helper method\n\nSigned-off-by: Lalith Suresh <lsuresh@vmware.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNzQyNDk5", "url": "https://github.com/vmware/differential-datalog/pull/817#pullrequestreview-532742499", "createdAt": "2020-11-17T19:32:58Z", "commit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozMjo1OFrOH1F3SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozNDo0OVrOH1F-SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMjY0OA==", "bodyText": "I think these should become methods in the compiler.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525432648", "createdAt": "2020-11-17T19:32:58Z", "author": {"login": "mbudiu-vmw"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -343,6 +358,13 @@ private static String ddlogRelationName(final String tableName) {\n         return \"R\" + tableName.toLowerCase();\n     }\n \n+    /*\n+     * This corresponds to the naming convention followed by the SQL -> DDlog compiler\n+     */\n+    private static String relationNameToTableName(final String relationName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNDQ0MQ==", "bodyText": "Reflection is bound to be very slow. This will probably dominate the other conversion costs.\nYou should consider caching the field types map.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525434441", "createdAt": "2020-11-17T19:34:49Z", "author": {"login": "mbudiu-vmw"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -362,23 +384,37 @@ private static DDlogRecord maybeOption(final Boolean isNullable, final DDlogReco\n     }\n \n     @Nullable\n-    private static Object structToValue(final Field<?> field, final DDlogRecord record) {\n-        final Class<?> cls = field.getType();\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_NONE)) {\n-            return null;\n-        }\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_SOME)) {\n-            return structToValue(field, record.getStructField(0));\n+    private static void structToValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final boolean isStruct = record.isStruct();\n+        if (isStruct) {\n+            final String structName = record.getStructName();\n+            if (structName.equals(DDLOG_NONE)) {\n+                jooqRecord.setValue(field,null);\n+                return;\n+            }\n+            if (structName.equals(DDLOG_SOME)) {\n+                toValue(field, record.getStructField(0), jooqRecord);\n+                return;\n+            }\n         }\n+        toValue(field, record, jooqRecord);\n+    }\n+\n+    private static void toValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final Class<?> cls = field.getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4441, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}