{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODc4ODM1", "number": 758, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxNjowNVrOEfC44w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxODo1MFrOEfC8OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTg4NjQzOnYy", "diffSide": "RIGHT", "path": "doc/tutorial/tutorial.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxNjowNVrOHLExbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMTozNjowN1rOHLJH2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NDU3Mg==", "bodyText": "I am not sure this is a good idea. I think it will trip a lot of people who come from a C-like language.\nI think it should be a warning.", "url": "https://github.com/vmware/differential-datalog/pull/758#discussion_r481374572", "createdAt": "2020-09-01T19:16:05Z", "author": {"login": "mbudiu-vmw"}, "path": "doc/tutorial/tutorial.md", "diffHunk": "@@ -734,7 +734,15 @@ function addr_port(ip: ip_addr_t, proto: string, preferred_port: bit<16>): strin\n \n The result computed by a function is the value of the last expression evaluated\n or the value produced by the first `return` statement encountered when\n-evaluating the function.  If the `else` is missing the value `()` (empty tuple)\n+evaluating the function.  A semicolon at the end of a sequence of expressions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1111837e4ecc3daeb5f371ad13b5993f22d8eb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ0MzU2Nw==", "bodyText": "There is no room for confusion here.  If the expression is expected to return a type that is not an empty tuple, you will get a type error.  If it returns (), then discarding it is a no-op.", "url": "https://github.com/vmware/differential-datalog/pull/758#discussion_r481443567", "createdAt": "2020-09-01T21:30:55Z", "author": {"login": "ryzhyk"}, "path": "doc/tutorial/tutorial.md", "diffHunk": "@@ -734,7 +734,15 @@ function addr_port(ip: ip_addr_t, proto: string, preferred_port: bit<16>): strin\n \n The result computed by a function is the value of the last expression evaluated\n or the value produced by the first `return` statement encountered when\n-evaluating the function.  If the `else` is missing the value `()` (empty tuple)\n+evaluating the function.  A semicolon at the end of a sequence of expressions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NDU3Mg=="}, "originalCommit": {"oid": "0d1111837e4ecc3daeb5f371ad13b5993f22d8eb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ0NTg0OA==", "bodyText": "the type error may be confusing, especially if it involves some form of unification.", "url": "https://github.com/vmware/differential-datalog/pull/758#discussion_r481445848", "createdAt": "2020-09-01T21:36:07Z", "author": {"login": "mbudiu-vmw"}, "path": "doc/tutorial/tutorial.md", "diffHunk": "@@ -734,7 +734,15 @@ function addr_port(ip: ip_addr_t, proto: string, preferred_port: bit<16>): strin\n \n The result computed by a function is the value of the last expression evaluated\n or the value produced by the first `return` statement encountered when\n-evaluating the function.  If the `else` is missing the value `()` (empty tuple)\n+evaluating the function.  A semicolon at the end of a sequence of expressions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NDU3Mg=="}, "originalCommit": {"oid": "0d1111837e4ecc3daeb5f371ad13b5993f22d8eb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTg5NDk3OnYy", "diffSide": "RIGHT", "path": "src/Language/DifferentialDatalog/Syntax.hs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxODo1MFrOHLE21g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxODo1MFrOHLE21g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTk1OA==", "bodyText": "the sql compiler may need to change because of this too.", "url": "https://github.com/vmware/differential-datalog/pull/758#discussion_r481375958", "createdAt": "2020-09-01T19:18:50Z", "author": {"login": "mbudiu-vmw"}, "path": "src/Language/DifferentialDatalog/Syntax.hs", "diffHunk": "@@ -799,7 +799,7 @@ instance PP e => PP (ExprNode e) where\n                                $$\n                                \"}\"\n     pp (EVarDecl _ v)        = \"var\" <+> pp v\n-    pp (ESeq _ l r)          = parens $ (pp l <> semi) $$ pp r\n+    pp (ESeq _ l r)          = braces $ (pp l <> semi) $$ pp r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1111837e4ecc3daeb5f371ad13b5993f22d8eb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4836, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}