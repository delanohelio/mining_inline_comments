{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjM4Mzg2", "number": 817, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozMjo1OFrOE6LyFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozNDo0OVrOE6L2UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDQ1OTExOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozMjo1OFrOH1F3SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo1NzoyMFrOH1Hpnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMjY0OA==", "bodyText": "I think these should become methods in the compiler.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525432648", "createdAt": "2020-11-17T19:32:58Z", "author": {"login": "mbudiu-vmw"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -343,6 +358,13 @@ private static String ddlogRelationName(final String tableName) {\n         return \"R\" + tableName.toLowerCase();\n     }\n \n+    /*\n+     * This corresponds to the naming convention followed by the SQL -> DDlog compiler\n+     */\n+    private static String relationNameToTableName(final String relationName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ2MTkxOQ==", "bodyText": "In the sql-ddlog compiler right? I'll send a separate PR for that.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525461919", "createdAt": "2020-11-17T19:57:20Z", "author": {"login": "lalithsuresh"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -343,6 +358,13 @@ private static String ddlogRelationName(final String tableName) {\n         return \"R\" + tableName.toLowerCase();\n     }\n \n+    /*\n+     * This corresponds to the naming convention followed by the SQL -> DDlog compiler\n+     */\n+    private static String relationNameToTableName(final String relationName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMjY0OA=="}, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDQ2OTkyOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozNDo0OVrOH1F-SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTozNzoyN1rOH1GKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNDQ0MQ==", "bodyText": "Reflection is bound to be very slow. This will probably dominate the other conversion costs.\nYou should consider caching the field types map.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525434441", "createdAt": "2020-11-17T19:34:49Z", "author": {"login": "mbudiu-vmw"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -362,23 +384,37 @@ private static DDlogRecord maybeOption(final Boolean isNullable, final DDlogReco\n     }\n \n     @Nullable\n-    private static Object structToValue(final Field<?> field, final DDlogRecord record) {\n-        final Class<?> cls = field.getType();\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_NONE)) {\n-            return null;\n-        }\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_SOME)) {\n-            return structToValue(field, record.getStructField(0));\n+    private static void structToValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final boolean isStruct = record.isStruct();\n+        if (isStruct) {\n+            final String structName = record.getStructName();\n+            if (structName.equals(DDLOG_NONE)) {\n+                jooqRecord.setValue(field,null);\n+                return;\n+            }\n+            if (structName.equals(DDLOG_SOME)) {\n+                toValue(field, record.getStructField(0), jooqRecord);\n+                return;\n+            }\n         }\n+        toValue(field, record, jooqRecord);\n+    }\n+\n+    private static void toValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final Class<?> cls = field.getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNzQ3Mw==", "bodyText": "This is not using reflection. This returns a member of type Class<?> from JOOQ's Field<> type.", "url": "https://github.com/vmware/differential-datalog/pull/817#discussion_r525437473", "createdAt": "2020-11-17T19:37:27Z", "author": {"login": "lalithsuresh"}, "path": "sql/src/main/java/com/vmware/ddlog/DDlogJooqProvider.java", "diffHunk": "@@ -362,23 +384,37 @@ private static DDlogRecord maybeOption(final Boolean isNullable, final DDlogReco\n     }\n \n     @Nullable\n-    private static Object structToValue(final Field<?> field, final DDlogRecord record) {\n-        final Class<?> cls = field.getType();\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_NONE)) {\n-            return null;\n-        }\n-        if (record.isStruct() && record.getStructName().equals(DDLOG_SOME)) {\n-            return structToValue(field, record.getStructField(0));\n+    private static void structToValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final boolean isStruct = record.isStruct();\n+        if (isStruct) {\n+            final String structName = record.getStructName();\n+            if (structName.equals(DDLOG_NONE)) {\n+                jooqRecord.setValue(field,null);\n+                return;\n+            }\n+            if (structName.equals(DDLOG_SOME)) {\n+                toValue(field, record.getStructField(0), jooqRecord);\n+                return;\n+            }\n         }\n+        toValue(field, record, jooqRecord);\n+    }\n+\n+    private static void toValue(final Field<?> field, final DDlogRecord record, final Record jooqRecord) {\n+        final Class<?> cls = field.getType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzNDQ0MQ=="}, "originalCommit": {"oid": "e0e62987378b8eb045c0e3b55557843d1b74796d"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4660, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}