{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDE2MTUz", "number": 661, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozMDo0NlrOD6xUFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozMjo0OVrOD6xWJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTUxOTU3OnYy", "diffSide": "RIGHT", "path": "src/Language/DifferentialDatalog/OVSDB/Compile.hs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozMDo0NlrOGSyt0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozMDo0NlrOGSyt0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1ODQ4MQ==", "bodyText": "Since you went to the trouble of defining a type you could probably have defined one with named fields; this would make it easier to read the code. But this is fine, since it's not used that much.", "url": "https://github.com/vmware/differential-datalog/pull/661#discussion_r422358481", "createdAt": "2020-05-08T20:30:46Z", "author": {"login": "mbudiu-vmw"}, "path": "src/Language/DifferentialDatalog/OVSDB/Compile.hs", "diffHunk": "@@ -85,11 +88,15 @@ data TableKind = TableInput\n                | TableDeltaUpdate\n                deriving(Eq)\n \n+-- | Output relation configuration:\n+-- (name, Left <set_of_readonly_columns> or Right <Set of rw columns>)\n+type OutputRelConfig = (String, Either [String] [String])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89457f17ffe7ccc0ed37b24c6f1b5320f1d0398c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTUyNDg2OnYy", "diffSide": "RIGHT", "path": "src/Language/DifferentialDatalog/OVSDB/Compile.hs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDozMjo0OVrOGSyxGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDo0ODozNVrOGSzNXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1OTMyMA==", "bodyText": "this thing about uuid does not seem to be documented.\nAlso, the name of this function has a negation, it would be nicer if it was GetRWCols instead.", "url": "https://github.com/vmware/differential-datalog/pull/661#discussion_r422359320", "createdAt": "2020-05-08T20:32:49Z", "author": {"login": "mbudiu-vmw"}, "path": "src/Language/DifferentialDatalog/OVSDB/Compile.hs", "diffHunk": "@@ -306,10 +316,11 @@ uuidCol = TableColumn { columnPos       = nopos\n                       , columnMutable   = Nothing\n                       }\n \n-tableGetNonROCols :: (?outputs::[(String, [String])]) => Table -> [TableColumn]\n+tableGetNonROCols :: (?outputs::[OutputRelConfig]) => Table -> [TableColumn]\n tableGetNonROCols t =\n     case lookup (name t) ?outputs of\n-         Nothing -> ovscols\n-         Just ro -> filter (\\col -> notElem (name col) ro) ovscols\n+         Nothing         -> ovscols\n+         Just (Left ro)  -> filter (\\col -> notElem (name col) ro) ovscols\n+         Just (Right rw) -> filter (\\col -> elem (name col) rw || (name col == \"_uuid\")) ovscols", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89457f17ffe7ccc0ed37b24c6f1b5320f1d0398c"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM2NjU1OA==", "bodyText": "this thing about uuid does not seem to be documented.\n\ndone\n\nAlso, the name of this function has a negation, it would be nicer if it was GetRWCols instead.\n\nthere's actually a subtle difference in this case: NonRO means that the column is not labeled as read-only. It can still be read-only if it comes from a read-only table.", "url": "https://github.com/vmware/differential-datalog/pull/661#discussion_r422366558", "createdAt": "2020-05-08T20:48:35Z", "author": {"login": "ryzhyk"}, "path": "src/Language/DifferentialDatalog/OVSDB/Compile.hs", "diffHunk": "@@ -306,10 +316,11 @@ uuidCol = TableColumn { columnPos       = nopos\n                       , columnMutable   = Nothing\n                       }\n \n-tableGetNonROCols :: (?outputs::[(String, [String])]) => Table -> [TableColumn]\n+tableGetNonROCols :: (?outputs::[OutputRelConfig]) => Table -> [TableColumn]\n tableGetNonROCols t =\n     case lookup (name t) ?outputs of\n-         Nothing -> ovscols\n-         Just ro -> filter (\\col -> notElem (name col) ro) ovscols\n+         Nothing         -> ovscols\n+         Just (Left ro)  -> filter (\\col -> notElem (name col) ro) ovscols\n+         Just (Right rw) -> filter (\\col -> elem (name col) rw || (name col == \"_uuid\")) ovscols", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1OTMyMA=="}, "originalCommit": {"oid": "89457f17ffe7ccc0ed37b24c6f1b5320f1d0398c"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4751, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}