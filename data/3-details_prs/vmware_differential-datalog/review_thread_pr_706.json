{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNzEwMTY3", "number": 706, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMDozOFrOEPnfjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMToxMFrOEPngFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODExMTUxOnYy", "diffSide": "RIGHT", "path": "doc/language_reference/language_reference.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMDozOFrOGzbULA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMDozOFrOGzbULA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3ODA5Mg==", "bodyText": "breaking change", "url": "https://github.com/vmware/differential-datalog/pull/706#discussion_r456578092", "createdAt": "2020-07-17T17:30:38Z", "author": {"login": "mbudiu-vmw"}, "path": "doc/language_reference/language_reference.md", "diffHunk": "@@ -70,7 +70,7 @@ The `import` statement makes type, function, relation, and constructor declarati\n imported module available in the importing module.\n \n ```EBNF\n-module_path ::= identifier [\".\" identifier]*\n+module_path ::= identifier [\"::\" identifier]*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80e4854a634733aa9e949626eb6083344976b8a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODExMjg0OnYy", "diffSide": "RIGHT", "path": "doc/tutorial/tutorial.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMToxMFrOGzbVCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzozMToxMFrOGzbVCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3ODMxNQ==", "bodyText": "typo?", "url": "https://github.com/vmware/differential-datalog/pull/706#discussion_r456578315", "createdAt": "2020-07-17T17:31:10Z", "author": {"login": "mbudiu-vmw"}, "path": "doc/tutorial/tutorial.md", "diffHunk": "@@ -424,10 +424,22 @@ output relation Pow2(p: string)\n Pow2(\"The square of ${x} is ${x*x}\") :- Number(x).\n ```\n \n-Built-in types have built-in conversions to strings.  To convert a\n-user-defined type (such as `Category` above) the user can implement a\n-function named `category2string` that returns a `string` given a category\n-(functions are described [below](#functions)).\n+Built-in types (`bool`, `bit<>`, `signed<>`, `bigint`, `string`, `float`, `double`)\n+have built-in conversions to strings.  To enable the compiler to automatically convert\n+a user-defined type to a string, the user must implement a\n+function named `to_string` that takes an instance of the type and returns a `string`\n+(functions are described [below](#functions)):\n+\n+```\n+funtion to_string(x: Category): string {\n+    match (x) {\n+        CategoryStarWars -> \"Star Wars\",\n+        CategoryOther -> \"other\"\n+    }\n+}\n+```\n+\n+structs and extern types, but not tuples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80e4854a634733aa9e949626eb6083344976b8a"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4797, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}