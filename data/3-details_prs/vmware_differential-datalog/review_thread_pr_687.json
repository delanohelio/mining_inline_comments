{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTM3NTU2", "number": 687, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0NzozM1rOEHMaag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowM1rOEHMb9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTc4ODU4OnYy", "diffSide": "RIGHT", "path": "rust/template/ddlog.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0NzozM1rOGmc1Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0NzozM1rOGmc1Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MTQxMA==", "bodyText": "typo", "url": "https://github.com/vmware/differential-datalog/pull/687#discussion_r442971410", "createdAt": "2020-06-19T17:47:33Z", "author": {"login": "mbudiu-vmw"}, "path": "rust/template/ddlog.h", "diffHunk": "@@ -409,6 +409,26 @@ extern int ddlog_apply_updates_from_flatbuf(ddlog_prog prog,\n                                             const unsigned char *buf,\n                                             size_t n);\n \n+/*\n+ * Query index by key.\n+ *\n+ * `idxid` - id of the index to dump.\n+ * `key` - query key.\n+ *     NOTE: the caller keeps ownership of `key` after the call and\n+ *     must deallocate it usin `ddlog_free()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29df5d3eb6a578c820afd98d4ea949a1dd1094d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTc4OTIxOnYy", "diffSide": "RIGHT", "path": "rust/template/ddlog.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0Nzo0N1rOGmc1ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0Nzo0N1rOGmc1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MTUxNQ==", "bodyText": "misplaced quotes?", "url": "https://github.com/vmware/differential-datalog/pull/687#discussion_r442971515", "createdAt": "2020-06-19T17:47:47Z", "author": {"login": "mbudiu-vmw"}, "path": "rust/template/ddlog.h", "diffHunk": "@@ -409,6 +409,26 @@ extern int ddlog_apply_updates_from_flatbuf(ddlog_prog prog,\n                                             const unsigned char *buf,\n                                             size_t n);\n \n+/*\n+ * Query index by key.\n+ *\n+ * `idxid` - id of the index to dump.\n+ * `key` - query key.\n+ *     NOTE: the caller keeps ownership of `key` after the call and\n+ *     must deallocate it usin `ddlog_free()`.\n+ * `cb` - callback invoked for each returned record.\n+ * `cb_arg` - opaque handle passed to each `cb invocation`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29df5d3eb6a578c820afd98d4ea949a1dd1094d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTc5MjU1OnYy", "diffSide": "RIGHT", "path": "rust/template/src/api.rs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowM1rOGmc3lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowM1rOGmc3lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjA1NA==", "bodyText": "no message written here", "url": "https://github.com/vmware/differential-datalog/pull/687#discussion_r442972054", "createdAt": "2020-06-19T17:49:03Z", "author": {"login": "mbudiu-vmw"}, "path": "rust/template/src/api.rs", "diffHunk": "@@ -959,14 +953,68 @@ pub unsafe extern \"C\" fn ddlog_query_index_from_flatbuf(\n     if prog.is_null() {\n         return -1;\n     };\n-    let prog = Arc::from_raw(prog);\n+    let prog = &*prog;\n     prog.eprintln(\n         \"ddlog_query_index_from_flatbuf(): error: DDlog was compiled without FlatBuffers support\",\n     );\n-    Arc::into_raw(prog);\n     -1\n }\n \n+#[no_mangle]\n+pub unsafe extern \"C\" fn ddlog_dump_index(\n+    prog: *const HDDlog,\n+    idxid: libc::size_t,\n+    cb: Option<extern \"C\" fn(arg: libc::uintptr_t, rec: *const record::Record)>,\n+    cb_arg: libc::uintptr_t,\n+) -> raw::c_int {\n+    if prog.is_null() {\n+        return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29df5d3eb6a578c820afd98d4ea949a1dd1094d"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4769, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}