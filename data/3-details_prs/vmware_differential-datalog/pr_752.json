{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDkyNzgz", "number": 752, "title": "Worked on std", "bodyText": "Fixed some clippy lints on the std's rust code", "createdAt": "2020-08-25T21:20:43Z", "url": "https://github.com/vmware/differential-datalog/pull/752", "merged": true, "mergeCommit": {"oid": "a0c7d9d5952ded9f921b47c89f39db05cecba57d"}, "closed": true, "closedAt": "2020-08-25T23:56:05Z", "author": {"login": "Kixiron"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCbMrTAH2gAyNDczNDkyNzgzOjMyMjNkMDJkZDY0YWE4ZjU3NmMxZWNiNWIwYmY1M2E0ODUzZWRlYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCgLatgFqTQ3NTA2MTE1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3223d02dd64aa8f576c1ecb5b0bf53a4853edec4", "author": {"user": {"login": "Kixiron", "name": "Chase Wilson"}}, "url": "https://github.com/vmware/differential-datalog/commit/3223d02dd64aa8f576c1ecb5b0bf53a4853edec4", "committedDate": "2020-08-25T18:06:22Z", "message": "Worked on std"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDYxMTUx", "url": "https://github.com/vmware/differential-datalog/pull/752#pullrequestreview-475061151", "createdAt": "2020-08-25T23:54:31Z", "commit": {"oid": "3223d02dd64aa8f576c1ecb5b0bf53a4853edec4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzo1NDozMVrOHGyrOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzo1NDozMVrOHGyrOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg4Mzc2OA==", "bodyText": "I was a bit paranoid about doing this.  This type is designed for use in auto-generated code where we usually don't want any magic conversions.  I cannot think of a specific scenario where this would cause problems though, so I guess it's ok.", "url": "https://github.com/vmware/differential-datalog/pull/752#discussion_r476883768", "createdAt": "2020-08-25T23:54:31Z", "author": {"login": "ryzhyk"}, "path": "lib/internment.rs", "diffHunk": "@@ -54,7 +54,13 @@ impl<A: Eq + Hash + Send + Sync + 'static> internment_Intern<A> {\n             intern: arc_interner::ArcIntern::new(x),\n         }\n     }\n-    pub fn as_ref(&self) -> &A {\n+}\n+\n+impl<A> AsRef<A> for internment_Intern<A>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3223d02dd64aa8f576c1ecb5b0bf53a4853edec4"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4601, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}