{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjIyMDcx", "number": 506, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDoyOTo1N1rODdh0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDoyOTo1N1rODdh0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjg5MzUyOnYy", "diffSide": "RIGHT", "path": "test/datalog_tests/simple.dl", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDoyOTo1N1rOFmL0-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDo1MzowMlrOFmMMuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4Mzk5Mg==", "bodyText": "I don't think I have seen this kind of stuff before in any language.\nPeople may find it confusing, but if it works as expected for the \"normal\" cases perhaps it's fine.", "url": "https://github.com/vmware/differential-datalog/pull/506#discussion_r375583992", "createdAt": "2020-02-06T00:29:57Z", "author": {"login": "mbudiu-vmw"}, "path": "test/datalog_tests/simple.dl", "diffHunk": "@@ -1151,6 +1152,16 @@ function any(xs: Vec<bool>): bool =\n     return res\n }\n \n+// A weird implementation of any using continue inside return.\n+function weird_any(xs: Vec<bool>): bool =\n+{\n+    var res = false;\n+    for (x in xs) {\n+        return if (x == true) { true } else { continue }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406e1cb99fd5a57814f95d70c3a0d256c49289de"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU5MDA3NQ==", "bodyText": "Rust is ok with this. We can of course restrict the use of constructs that interrupt normal control flow (continue, break, and return) to avoid weird cases, but \"weird\" is hard to define, and oftentimes proves useful in practice...", "url": "https://github.com/vmware/differential-datalog/pull/506#discussion_r375590075", "createdAt": "2020-02-06T00:53:02Z", "author": {"login": "ryzhyk"}, "path": "test/datalog_tests/simple.dl", "diffHunk": "@@ -1151,6 +1152,16 @@ function any(xs: Vec<bool>): bool =\n     return res\n }\n \n+// A weird implementation of any using continue inside return.\n+function weird_any(xs: Vec<bool>): bool =\n+{\n+    var res = false;\n+    for (x in xs) {\n+        return if (x == true) { true } else { continue }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4Mzk5Mg=="}, "originalCommit": {"oid": "406e1cb99fd5a57814f95d70c3a0d256c49289de"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4858, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}