{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDIwNTI0", "number": 581, "title": "Cleanup stack test", "bodyText": "", "createdAt": "2020-03-28T00:32:32Z", "url": "https://github.com/vmware/differential-datalog/pull/581", "merged": true, "mergeCommit": {"oid": "264b4419ae4740b2225ace7f1e4fdf04e1cc50b6"}, "closed": true, "closedAt": "2020-03-31T02:30:51Z", "author": {"login": "mbudiu-vmw"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcR6vlmABqjMxNzQ1MDU4ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS21bYgBqjMxODA4MzkyMjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "716fb013c2ab2343640b31c96ff111c88a15809e", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/716fb013c2ab2343640b31c96ff111c88a15809e", "committedDate": "2020-03-28T00:30:33Z", "message": "Cleanup stack test"}, "afterCommit": {"oid": "e412e9fdeb5bbd837f85fd6aad56746e0e8ea5b2", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/e412e9fdeb5bbd837f85fd6aad56746e0e8ea5b2", "committedDate": "2020-03-28T01:09:02Z", "message": "Cleanup stack test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjg3MTY4", "url": "https://github.com/vmware/differential-datalog/pull/581#pullrequestreview-383287168", "createdAt": "2020-03-28T06:03:59Z", "commit": {"oid": "d1ef5c585abab8dc81bc75f3dd4641f186e5260c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowMzo1OVrOF9HMDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjowMzo1OVrOF9HMDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyNTIyOQ==", "bodyText": "Are we going too far here? For programs that fail compilation \".ast\" files actually contain error messages, which we want to check.", "url": "https://github.com/vmware/differential-datalog/pull/581#discussion_r399625229", "createdAt": "2020-03-28T06:03:59Z", "author": {"login": "ryzhyk"}, "path": "test/Spec.hs", "diffHunk": "@@ -168,18 +128,19 @@ parseValidate file java program = do\n     return (d', rs_code, toml_code)\n \n -- compile a program that is supposed to fail compilation\n-compileFailingProgram :: String -> String -> IO String\n-compileFailingProgram file program =\n-    (show <$> parseValidate file False program) `catch`\n-             (\\e -> return $ show (e::SomeException))\n+compileFailingProgram :: String -> String -> IO()\n+compileFailingProgram file program = do\n+   prog <- (show <$> parseValidate file False program) `catch`\n+               (\\e -> let _ = (e :: SomeException) in return \"\")\n+   assertBool \"Compilation should have failed\" (\"\" == prog)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ef5c585abab8dc81bc75f3dd4641f186e5260c"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MTQwODI2", "url": "https://github.com/vmware/differential-datalog/pull/581#pullrequestreview-384140826", "createdAt": "2020-03-30T18:56:02Z", "commit": {"oid": "d1ef5c585abab8dc81bc75f3dd4641f186e5260c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODo1NjowM1rOF93v4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODo1NjowM1rOF93v4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyMDgzNA==", "bodyText": "This line should be updated, following #587 (comment)\n\n-> os.equals(\"mac os x\")\n-> \"dylib\", not \"dynlib\"", "url": "https://github.com/vmware/differential-datalog/pull/581#discussion_r400420834", "createdAt": "2020-03-30T18:56:03Z", "author": {"login": "lalithsuresh"}, "path": "java/ddlogapi/DDlogAPI.java", "diffHunk": "@@ -468,4 +470,134 @@ static public synchronized void logSetDefaultCallback(ObjIntConsumer<String> cb,\n             defaultLogCBInfo = new Long(new_cbinfo);\n         }\n     }\n+\n+    /******************************************/\n+\n+    /**\n+     * Get the path where DDlog is installed. This queries the DDLOG_HOME\n+     * environment variable. This throws if the variable is not set.\n+     */\n+    public static String ddlogInstallationPath() throws DDlogException {\n+        String ddlogHome = System.getenv(\"DDLOG_HOME\");\n+        if (ddlogHome == null)\n+            throw new DDlogException(\"No DDLOG_HOME\");\n+        return ddlogHome;\n+    }\n+\n+    /**\n+     * Run an external process by executing the specified command.\n+     * @param commands        Command and arguments.\n+     * @param workdirectory   If not null the working directory.\n+     * @return                The exit code of the process.  On error prints\n+     *                        the process stderr on stderr.\n+     */\n+    private static int runProcess(List<String> commands, String workdirectory) {\n+        try {\n+            System.out.println(\"Running \" + String.join(\" \", commands) +\n+                (workdirectory != null ? \" in \" + workdirectory : \"\"));\n+            ProcessBuilder pb = new ProcessBuilder(commands);\n+            pb.redirectErrorStream(true);\n+            if (workdirectory != null) {\n+                pb.directory(new File(workdirectory));\n+            }\n+            Process process = pb.start();\n+\n+            StringBuilder out = new StringBuilder();\n+            BufferedReader br = new BufferedReader(new InputStreamReader(process.getErrorStream()));\n+            String line;\n+            while ((line = br.readLine()) != null) {\n+                out.append(line).append('\\n');\n+            }\n+\n+            int exitCode = process.waitFor();\n+            if (exitCode != 0) {\n+                System.err.println(\"Error running \" + String.join(\" \", commands));\n+                System.err.println(out.toString());\n+            }\n+            return exitCode;\n+        } catch (Exception ex) {\n+            System.err.println(\"Error running \" + String.join(\" \", commands));\n+            System.err.println(ex.getMessage());\n+            return 1;\n+        }\n+    }\n+\n+    public static String libName(String lib) {\n+        String os = System.getProperty(\"os.name\").toLowerCase();\n+        if (os.equals(\"darwin\"))\n+            return \"lib\" + lib + \".dynlib\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ef5c585abab8dc81bc75f3dd4641f186e5260c"}, "originalPosition": 97}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7329b7c9ab9d883078eb391879cc87b92a1ed37f", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/7329b7c9ab9d883078eb391879cc87b92a1ed37f", "committedDate": "2020-03-30T22:13:02Z", "message": "Cleanup stack test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91fa17436225d9d900719c4f2effb7a8b279c1f0", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/91fa17436225d9d900719c4f2effb7a8b279c1f0", "committedDate": "2020-03-30T22:13:02Z", "message": "Forgot one file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8800323e09a9c8820aa120bf49686e1d1bc8ae25", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/8800323e09a9c8820aa120bf49686e1d1bc8ae25", "committedDate": "2020-03-30T23:09:31Z", "message": "Save reference outputs for failing programs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1ef5c585abab8dc81bc75f3dd4641f186e5260c", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/d1ef5c585abab8dc81bc75f3dd4641f186e5260c", "committedDate": "2020-03-28T01:10:01Z", "message": "Forgot one file"}, "afterCommit": {"oid": "8800323e09a9c8820aa120bf49686e1d1bc8ae25", "author": {"user": {"login": "mbudiu-vmw", "name": "Mihai Budiu"}}, "url": "https://github.com/vmware/differential-datalog/commit/8800323e09a9c8820aa120bf49686e1d1bc8ae25", "committedDate": "2020-03-30T23:09:31Z", "message": "Save reference outputs for failing programs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}