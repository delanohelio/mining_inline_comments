{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMDc5ODQ5", "number": 872, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQyMjo0NjoxNFrOFHntSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQyMjo0NjoxNFrOFHntSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTM0OTIxOnYy", "diffSide": "RIGHT", "path": "rust/template/differential_datalog/record/arrays.rs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQyMjo0NjoxNFrOIJIfyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQyMjo0NjoxNFrOIJIfyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ0NzMwNg==", "bodyText": "This requires Rust 1.48 (https://doc.rust-lang.org/std/primitive.array.html#impl-TryFrom%3CVec%3CT%3E%3E).\nI will roll this back to the old implementation.", "url": "https://github.com/vmware/differential-datalog/pull/872#discussion_r546447306", "createdAt": "2020-12-20T22:46:14Z", "author": {"login": "ryzhyk"}, "path": "rust/template/differential_datalog/record/arrays.rs", "diffHunk": "@@ -0,0 +1,44 @@\n+//! Implementing `Record`-related traits for Rust arrays\n+\n+use crate::record::{CollectionKind, FromRecord, IntoRecord, Mutator, Record};\n+use std::convert::TryInto;\n+\n+/// Implements `FromRecord`, `IntoRecord` and `Mutator` for arrays\n+// FIXME: Replace this with `min_const_generics` after Rust v1.50\n+//        https://github.com/rust-lang/rust/issues/74878\n+macro_rules! ddlog_array_traits {\n+    ($($length:literal),* $(,)?) => {\n+        $(\n+            impl<T: FromRecord> FromRecord for [T; $length] {\n+                fn from_record(val: &Record) -> Result<Self, String> {\n+                    Vec::from_record(val)?.try_into().map_err(|_| {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39fed97998e778593dee433e7a965e8b649c230d"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4718, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}