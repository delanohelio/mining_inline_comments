{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODY0Mzc1", "number": 576, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo0ODozNFrODrbXwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo0ODozNFrODrbXwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODYzODA5OnYy", "diffSide": "RIGHT", "path": "lib/regex.dl", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo0ODozNFrOF7xRIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMDoyMTo0NlrOF7zKDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxNzUwNg==", "bodyText": "I wonder whether you may want to have an extern type for regex, which is a compiled regular expression.\nIf you want to use a regex in a rule it would be nice to be able to compile it.", "url": "https://github.com/vmware/differential-datalog/pull/576#discussion_r398217506", "createdAt": "2020-03-25T22:48:34Z", "author": {"login": "mbudiu-vmw"}, "path": "lib/regex.dl", "diffHunk": "@@ -11,4 +11,17 @@\n  * Returns false if `regex` is not a valid regular expression or if no match was\n  * found.\n  */\n-extern function regex_match(regex: string, str: string): bool\n+extern function regex_match(regex: string, text: string): bool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI0ODMxMw==", "bodyText": "The current API is a convenience API that combines regex compilation and matching. It works nicely for our existing use cases when we are porting, e.g., Groovy code like str =~ /^[\\d\\.v]+/.\nI agree that a complete regex library would have the API that separates compilation from matching.", "url": "https://github.com/vmware/differential-datalog/pull/576#discussion_r398248313", "createdAt": "2020-03-26T00:21:19Z", "author": {"login": "ryzhyk"}, "path": "lib/regex.dl", "diffHunk": "@@ -11,4 +11,17 @@\n  * Returns false if `regex` is not a valid regular expression or if no match was\n  * found.\n  */\n-extern function regex_match(regex: string, str: string): bool\n+extern function regex_match(regex: string, text: string): bool", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxNzUwNg=="}, "originalCommit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI0ODQ2Mw==", "bodyText": "(and we should build this library at some point)", "url": "https://github.com/vmware/differential-datalog/pull/576#discussion_r398248463", "createdAt": "2020-03-26T00:21:46Z", "author": {"login": "ryzhyk"}, "path": "lib/regex.dl", "diffHunk": "@@ -11,4 +11,17 @@\n  * Returns false if `regex` is not a valid regular expression or if no match was\n  * found.\n  */\n-extern function regex_match(regex: string, str: string): bool\n+extern function regex_match(regex: string, text: string): bool", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxNzUwNg=="}, "originalCommit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}