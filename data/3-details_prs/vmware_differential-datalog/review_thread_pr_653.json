{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDU4Mjgy", "number": 653, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyNDoxNlrOD5HBwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo0NDo0MFrOD7VzYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjEwNTYwOnYy", "diffSide": "RIGHT", "path": "src/Language/DifferentialDatalog/NS.hs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyNDoxNlrOGQMmWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyNDoxNlrOGQMmWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzNjgyNA==", "bodyText": "The timestamp type is actually more complex.  For a non-recursive rule, the timestamp is indeed just u64. For a rule that is part of a recursive fragment, it is a pair of two timestamps: the global timestamp, which is the same as in the non-recursive case and the inner timestamp, which represents iteration of the fixed point computation.  There are two ways we can handle this. The RFC suggests:\ntypedef DDTimestamp = DDTSGlobal{epoch: u64}\n                    | DDTSNested{epoch: u64, iteration: u64}\n\nNow I am thinking that a better way would be to use different types depending on the context.  We can add a method to check if the rule is recursive and use the appropriate type based on that.", "url": "https://github.com/vmware/differential-datalog/pull/653#discussion_r419636824", "createdAt": "2020-05-04T18:24:16Z", "author": {"login": "ryzhyk"}, "path": "src/Language/DifferentialDatalog/NS.hs", "diffHunk": "@@ -147,6 +147,7 @@ ctxMVars d ctx =\n          CtxRuleRAtom rl i        -> ([], map f2mf $ ruleRHSVars d rl i)\n          CtxRuleRCond rl i        -> ([], map f2mf $ ruleRHSVars d rl i)\n          CtxRuleRFlatMap rl i     -> ([], map f2mf $ ruleRHSVars d rl i)\n+         CtxRuleRInspect rl i     -> ([], (map f2mf $ ruleRHSVars d rl i) ++ [(\"ddlog_weight\", Just $ tBit 64), (\"ddlog_timestamp\", Just $ tBit 64)])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640e388857e924be6fd16daf74bea49936daff27"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjEyMDc3OnYy", "diffSide": "RIGHT", "path": "test/datalog_tests/simple2.dl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyODowMlrOGQMvYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODoyODowMlrOGQMvYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYzOTEzOA==", "bodyText": "You may want to also test the use of timestamp and weight variables.", "url": "https://github.com/vmware/differential-datalog/pull/653#discussion_r419639138", "createdAt": "2020-05-04T18:28:02Z", "author": {"login": "ryzhyk"}, "path": "test/datalog_tests/simple2.dl", "diffHunk": "@@ -106,3 +106,15 @@ function weird_zero(x: 'A): usize {\n function zero_test(): usize {\n     weird_zero(32'd0)\n }\n+\n+/* See #618. New Inspect operator syntax. */\n+output relation InspectSimpleSum(x: bit<32>, total: bit<32>)\n+\n+input relation InputTuples(x: bit<32>, y: bit<32>)\n+\n+InspectSimpleSum(x, total) :-\n+    InputTuples(x, y),\n+    var total = Aggregate((x), group_sum(y)),\n+    Inspect {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640e388857e924be6fd16daf74bea49936daff27"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ1MDUxOnYy", "diffSide": "RIGHT", "path": "lib/std.dl", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozMToxNFrOGTmRgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozMToxNFrOGTmRgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMzIwMw==", "bodyText": "We need to provide a string conversion function for this type so that timestamps can be easily printed. The function must have the following signature: dDTimestamp2string(ts: DDTimestamp): string", "url": "https://github.com/vmware/differential-datalog/pull/653#discussion_r423203203", "createdAt": "2020-05-11T17:31:14Z", "author": {"login": "ryzhyk"}, "path": "lib/std.dl", "diffHunk": "@@ -19,6 +19,12 @@ typedef s128 = signed<128>\n \n typedef usize = u64\n \n+typedef DDWeight = s64\n+typedef DDEpoch = u64\n+typedef DDIteration = u64\n+typedef DDTimestamp = DDTSGlobal{epoch: DDEpoch}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2f82fd1313d636602385ca70f895a47e453f5cf"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ5MzUwOnYy", "diffSide": "RIGHT", "path": "src/Language/DifferentialDatalog/Syntax.hs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo0MzoyNVrOGTmsyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo0MzoyNVrOGTmsyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMDE4NQ==", "bodyText": "The last three must occur after all atoms. - I don't remember when I wrote this, but this comment is wrong and must be removed.", "url": "https://github.com/vmware/differential-datalog/pull/653#discussion_r423210185", "createdAt": "2020-05-11T17:43:25Z", "author": {"login": "ryzhyk"}, "path": "src/Language/DifferentialDatalog/Syntax.hs", "diffHunk": "@@ -521,13 +521,14 @@ instance Show Atom where\n     show = render . pp\n \n -- The RHS of a rule consists of relational atoms with\n--- positive/negative polarity, Boolean conditions, aggregation and\n--- disaggregation (flatmap) operations.  The last two must occur after\n+-- positive/negative polarity, Boolean conditions, aggregation,\n+-- disaggregation (flatmap), inspect operations.  The last three must occur after\n -- all atoms.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2f82fd1313d636602385ca70f895a47e453f5cf"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ5NzkzOnYy", "diffSide": "RIGHT", "path": "test/Spec.hs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo0NDo0MFrOGTmvoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo0NDo0MFrOGTmvoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMDkxMg==", "bodyText": "Nice!", "url": "https://github.com/vmware/differential-datalog/pull/653#discussion_r423210912", "createdAt": "2020-05-11T17:44:40Z", "author": {"login": "ryzhyk"}, "path": "test/Spec.hs", "diffHunk": "@@ -74,41 +74,56 @@ allTests progress = do\n         let datFile = replaceExtension dlFile \"dat\"\n         -- If there's a gzipped reference file, use that\n         let gzFile = replaceExtension dlFile \"dump.expected.gz\"\n+        -- If there's a .log.expected file, also verify log output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2f82fd1313d636602385ca70f895a47e453f5cf"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4746, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}