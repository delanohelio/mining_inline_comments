{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTkyNjQz", "number": 615, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMTo1Mzo1M1rODvXkYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMTo1NDoyOFrODvXkwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTk1ODExOnYy", "diffSide": "RIGHT", "path": "go/pkg/ddlog/ddlog.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMTo1Mzo1M1rOGBwKKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMjoxNDo1MlrOGBwfrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5MDc5Mw==", "bodyText": "@ryzhyk I am assuming that there is no need to call ddlog_free_record_updates in that case", "url": "https://github.com/vmware/differential-datalog/pull/615#discussion_r404490793", "createdAt": "2020-04-07T01:53:53Z", "author": {"login": "antoninbas"}, "path": "go/pkg/ddlog/ddlog.go", "diffHunk": "@@ -32,6 +32,18 @@ static int ddlogTransactionCommitDumpChanges(ddlog_prog hprog, uintptr_t arg) {\n     return ddlog_transaction_commit_dump_changes(hprog, dumpChangesCb, arg);\n }\n \n+extern void handleOutRecordArray(uintptr_t progIdx, ddlog_record_update *changes, size_t num_changes);\n+\n+static int ddlogTransactionCommitDumpChangesAsArray(ddlog_prog hprog, uintptr_t progIdx) {\n+    ddlog_record_update *changes;\n+    size_t num_changes;\n+    int rc = ddlog_transaction_commit_dump_changes_as_array(hprog, &changes, &num_changes);\n+    if (rc != 0 || num_changes == 0) return rc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b75b3986c65a8200a3561981e544bbe5b524b6"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5NjMwMw==", "bodyText": "correct", "url": "https://github.com/vmware/differential-datalog/pull/615#discussion_r404496303", "createdAt": "2020-04-07T02:14:52Z", "author": {"login": "ryzhyk"}, "path": "go/pkg/ddlog/ddlog.go", "diffHunk": "@@ -32,6 +32,18 @@ static int ddlogTransactionCommitDumpChanges(ddlog_prog hprog, uintptr_t arg) {\n     return ddlog_transaction_commit_dump_changes(hprog, dumpChangesCb, arg);\n }\n \n+extern void handleOutRecordArray(uintptr_t progIdx, ddlog_record_update *changes, size_t num_changes);\n+\n+static int ddlogTransactionCommitDumpChangesAsArray(ddlog_prog hprog, uintptr_t progIdx) {\n+    ddlog_record_update *changes;\n+    size_t num_changes;\n+    int rc = ddlog_transaction_commit_dump_changes_as_array(hprog, &changes, &num_changes);\n+    if (rc != 0 || num_changes == 0) return rc;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5MDc5Mw=="}, "originalCommit": {"oid": "29b75b3986c65a8200a3561981e544bbe5b524b6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTk1OTA1OnYy", "diffSide": "RIGHT", "path": "go/pkg/ddlog/ddlog.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMTo1NDoyOVrOGBwKxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMTo1NDoyOVrOGBwKxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5MDk1MQ==", "bodyText": "for the record, I tried batching callbacks as this level as well and I didn't observe any improvement", "url": "https://github.com/vmware/differential-datalog/pull/615#discussion_r404490951", "createdAt": "2020-04-07T01:54:29Z", "author": {"login": "antoninbas"}, "path": "go/pkg/ddlog/ddlog.go", "diffHunk": "@@ -302,6 +314,19 @@ func (p *Program) CommitTransaction() error {\n \treturn nil\n }\n \n+// CommitTransactionChangesAsArray commits a transaction. It uses a different implementation from\n+// CommitTransaction, which may yield better performance when many output records are\n+// generated. Unlike with CommitTransaction, DDlog will not generate one callback for each output\n+// record, but will return an array of output records (with polarity). Note that we still generate\n+// one OutRecordHandler callback for each output record.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b75b3986c65a8200a3561981e544bbe5b524b6"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4729, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}