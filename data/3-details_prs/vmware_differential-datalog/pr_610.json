{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NzYzNTkx", "number": 610, "title": "New syntax for functions.", "bodyText": "(Addresses #603)\nThis code\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n\nfails to compile with:\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the = between function\ndeclaration and body is bad aesthetically in most cases.\nWe introduce new, more conventional, syntax without = and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it.", "createdAt": "2020-04-04T21:16:59Z", "url": "https://github.com/vmware/differential-datalog/pull/610", "merged": true, "mergeCommit": {"oid": "93b20bbe6ff8a8898c9c191a50e9db3df4ee7d7a"}, "closed": true, "closedAt": "2020-04-05T05:04:40Z", "author": {"login": "ryzhyk"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUcc6CgFqTM4Nzc2MDY3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUdv3nABqjMyMDA2NTM3NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzYwNjc0", "url": "https://github.com/vmware/differential-datalog/pull/610#pullrequestreview-387760674", "createdAt": "2020-04-04T21:31:56Z", "commit": {"oid": "05eb945df48b19f41d0a3de130650fe2313f974a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTozMTo1N1rOGA1KuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTozMTo1N1rOGA1KuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUyNDI4MQ==", "bodyText": "Just take it out of the doc if you want to deprecate it", "url": "https://github.com/vmware/differential-datalog/pull/610#discussion_r403524281", "createdAt": "2020-04-04T21:31:57Z", "author": {"login": "mbudiu-vmw"}, "path": "doc/language_reference/language_reference.md", "diffHunk": "@@ -217,7 +217,7 @@ body.\n ```EBNF\n function ::= \"function\" func_name \"(\" [arg(,arg)*]\")\"\n               \":\" simple_type_spec (* return type *)\n-              [\"=\" expr]\n+              (\"{\" expr \"} | \"=\" expr) (* body of the function *)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eb945df48b19f41d0a3de130650fe2313f974a"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05eb945df48b19f41d0a3de130650fe2313f974a", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/05eb945df48b19f41d0a3de130650fe2313f974a", "committedDate": "2020-04-04T21:00:52Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}, "afterCommit": {"oid": "f1dc7425010f7ff46a72754fad9281d82e376f5d", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/f1dc7425010f7ff46a72754fad9281d82e376f5d", "committedDate": "2020-04-04T21:41:24Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1dc7425010f7ff46a72754fad9281d82e376f5d", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/f1dc7425010f7ff46a72754fad9281d82e376f5d", "committedDate": "2020-04-04T21:41:24Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}, "afterCommit": {"oid": "cc76174d874b4c06f1e60761b5ad8fa35e91e35f", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/cc76174d874b4c06f1e60761b5ad8fa35e91e35f", "committedDate": "2020-04-04T22:05:47Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzY0NzU3", "url": "https://github.com/vmware/differential-datalog/pull/610#pullrequestreview-387764757", "createdAt": "2020-04-04T22:43:37Z", "commit": {"oid": "cc76174d874b4c06f1e60761b5ad8fa35e91e35f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da535c0e345fd7a03b1a9107a63fe8edd3a237f6", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/da535c0e345fd7a03b1a9107a63fe8edd3a237f6", "committedDate": "2020-04-04T23:03:20Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc76174d874b4c06f1e60761b5ad8fa35e91e35f", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/cc76174d874b4c06f1e60761b5ad8fa35e91e35f", "committedDate": "2020-04-04T22:05:47Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}, "afterCommit": {"oid": "da535c0e345fd7a03b1a9107a63fe8edd3a237f6", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/da535c0e345fd7a03b1a9107a63fe8edd3a237f6", "committedDate": "2020-04-04T23:03:20Z", "message": "New syntax for function.\n\n(Addresses #603)\n\nThis code\n\n```\nrelation &X(x: string)\nfunction myfunc(x: string): string = { x }\n&X(\"foo\").\n```\n\nfails to compile with:\n\n```\nddlog: Failed to parse input file: \"playpen3.dl\" (line 3, column 3):\nunexpected '('\nexpecting \"#\", \"import\", \"typedef\", \"extern\", \"input\", \"output\", \"relation\", \"index\", \"function\", \"transformer\", variable name, \"&\", relation name, \"apply\", \"for\" or end of input\n```\n\nThe problem is that the syntax with optional curly braces is\ninherently ambiguous.  In addition, the `=` between function\ndeclaration and body is bad aesthetically in most cases.\n\nWe introduce new, more conventional, syntax without `=` and with\nmandatory braces.  It eliminates the ambiguity and looks better imo.\n\nWe still support the old syntax to avoid breaking people's code.  We may\nphase it out in the future, but I don't see much harm in it."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4689, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}