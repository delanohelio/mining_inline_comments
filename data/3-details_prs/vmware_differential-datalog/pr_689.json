{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjk3OTE5", "number": 689, "title": "Update debugging hooks function and format of inputs/outputs", "bodyText": "Include operator type in the debug event\nConvert the inputs and outputs into record before writing to file.", "createdAt": "2020-06-25T22:59:53Z", "url": "https://github.com/vmware/differential-datalog/pull/689", "merged": true, "mergeCommit": {"oid": "142ec3850fb1888921e6b645e79642c1a74a9968"}, "closed": true, "closedAt": "2020-06-26T02:38:10Z", "author": {"login": "haroldlim"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu3OPgAH2gAyNDQwMjk3OTE5OjZmOGFiMzUyNjVlNDVmZDRmYzAxYzQ4OWQwODM1YjQ1NjY5Yjk1MGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcu56c_AFqTQzNzk3NjcyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f8ab35265e45fd4fc01c489d0835b45669b950d", "author": {"user": null}, "url": "https://github.com/vmware/differential-datalog/commit/6f8ab35265e45fd4fc01c489d0835b45669b950d", "committedDate": "2020-06-25T23:26:56Z", "message": "Use record format when outputting input and output of debug event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1485dc63e67f1664e36ba3c512bd54e882d064bd", "author": {"user": null}, "url": "https://github.com/vmware/differential-datalog/commit/1485dc63e67f1664e36ba3c512bd54e882d064bd", "committedDate": "2020-06-25T23:26:56Z", "message": "Include operator type in the events generated by the debug hooks\n\nThis will make it easier for the debugger tool to parse the event."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955", "author": {"user": null}, "url": "https://github.com/vmware/differential-datalog/commit/cf2d197a5473c324bb15abb7a7e35958486c6955", "committedDate": "2020-06-25T23:26:56Z", "message": "Update expected transformed test program files\n\nThe debug function has been updated to also include the operator\ntype. Update the test expectation accordingly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00fc9b2f227795e57ba0563a5dd7115585c349da", "author": {"user": null}, "url": "https://github.com/vmware/differential-datalog/commit/00fc9b2f227795e57ba0563a5dd7115585c349da", "committedDate": "2020-06-25T22:56:24Z", "message": "Update expected transformed test program files\n\nThe debug function has been updated to also include the operator\ntype. Update the test expectation accordingly."}, "afterCommit": {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955", "author": {"user": null}, "url": "https://github.com/vmware/differential-datalog/commit/cf2d197a5473c324bb15abb7a7e35958486c6955", "committedDate": "2020-06-25T23:26:56Z", "message": "Update expected transformed test program files\n\nThe debug function has been updated to also include the operator\ntype. Update the test expectation accordingly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTc2NzIy", "url": "https://github.com/vmware/differential-datalog/pull/689#pullrequestreview-437976722", "createdAt": "2020-06-26T02:30:07Z", "commit": {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjozMDowN1rOGpRy6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjozNDo1OFrOGpR3Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNjM2MA==", "bodyText": "Let's do\nrhs -> error $ \"generateInspectDebug \" ++ show rhs\n\nto catch potential compiler bugs that violate this.", "url": "https://github.com/vmware/differential-datalog/pull/689#discussion_r445936360", "createdAt": "2020-06-26T02:30:07Z", "author": {"login": "ryzhyk"}, "path": "src/Language/DifferentialDatalog/Debug.hs", "diffHunk": "@@ -123,11 +123,20 @@ generateInspectDebug d ruleIdx rule index =\n     input1 = if index == 0\n                 then eVar $ exprVar $ enode $ atomVal $ rhsAtom $ head $ ruleRHS rule\n                 else head $ Compile.recordAfterPrefix d rule (index - 1)\n+    opType = if index == 0\n+                then \"Map\"\n+                else case (ruleRHS rule) !! index of\n+                     RHSLiteral{rhsPolarity=False} -> \"Antijoin\"\n+                     RHSInspect{} -> \"Inspect\"\n+                     RHSFlatMap{} -> \"Flatmap\"\n+                     RHSCondition{} -> \"Condition\"\n+                     _ -> \"Undefined\" -- Should not reach this case", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNzQ1MQ==", "bodyText": "In one of future commits, can we add a typedef to debug.dl, e.g.,\ntypedef DDlogOpId = DDlogOpId {\n  rel: u32,\n  rule: u32,\n  op: u32\n}", "url": "https://github.com/vmware/differential-datalog/pull/689#discussion_r445937451", "createdAt": "2020-06-26T02:34:58Z", "author": {"login": "ryzhyk"}, "path": "lib/debug.dl", "diffHunk": "@@ -2,7 +2,9 @@\n  * an external debugger tool.\n  */\n \n-extern function debug_event(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1, input1: 'A1, out: 'A2): ()\n-extern function debug_event_join(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1, input1: 'A1, input2: 'A2, out: 'A3): ()\n+extern function debug_event(operator_id: (u32, u32, u32), w: DDWeight, ts: 'T1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2d197a5473c324bb15abb7a7e35958486c6955"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4548, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}