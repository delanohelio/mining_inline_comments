{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODY0Mzc1", "number": 576, "title": "lib/regex.dl: Two new functions.", "bodyText": "Also added tests for this library in test/datalog_tests/regex_test.dl.\n/*\n * Returns the leftmost-first match in `text`. If `regex` is not a valid regular\n * expression or no match exists, then `None` is returned.\n */\nextern function regex_first_match(regex: string, text: string): Option<string>\n\n/*\n * Returns all successive non-overlapping matches in `text`.\n * If `regex` is not a valid regular expression or no match exists,\n * an empty vector is returned.\n */\nextern function regex_all_matches(regex: string, text: string): Vec<string>", "createdAt": "2020-03-25T22:42:41Z", "url": "https://github.com/vmware/differential-datalog/pull/576", "merged": true, "mergeCommit": {"oid": "256404dbde45450ad5d0205e6be6a2af6ee5c361"}, "closed": true, "closedAt": "2020-03-26T00:49:35Z", "author": {"login": "ryzhyk"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRPkKOAFqTM4MTU5MzA3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRQyi0gBqjMxNjYyMTk4MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTkzMDc0", "url": "https://github.com/vmware/differential-datalog/pull/576#pullrequestreview-381593074", "createdAt": "2020-03-25T22:48:33Z", "commit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo0ODozNFrOF7xRIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjo0ODozNFrOF7xRIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxNzUwNg==", "bodyText": "I wonder whether you may want to have an extern type for regex, which is a compiled regular expression.\nIf you want to use a regex in a rule it would be nice to be able to compile it.", "url": "https://github.com/vmware/differential-datalog/pull/576#discussion_r398217506", "createdAt": "2020-03-25T22:48:34Z", "author": {"login": "mbudiu-vmw"}, "path": "lib/regex.dl", "diffHunk": "@@ -11,4 +11,17 @@\n  * Returns false if `regex` is not a valid regular expression or if no match was\n  * found.\n  */\n-extern function regex_match(regex: string, str: string): bool\n+extern function regex_match(regex: string, text: string): bool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1749e64a07bd14d79ff4019c13e3cc00977d4428", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/1749e64a07bd14d79ff4019c13e3cc00977d4428", "committedDate": "2020-03-26T00:15:28Z", "message": "lib/regex.dl: Two new functions.\n\nAlso added tests for this library in `test/datalog_tests/regex_test.dl`.\n\n```\n/*\n * Returns the leftmost-first match in `text`. If `regex` is not a valid regular\n * expression or no match exists, then `None` is returned.\n */\nextern function regex_first_match(regex: string, text: string): Option<string>\n\n/*\n * Returns all successive non-overlapping matches in `text`.\n * If `regex` is not a valid regular expression or no match exists,\n * an empty vector is returned.\n */\nextern function regex_all_matches(regex: string, text: string): Vec<string>\n```"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02bd349542b8d3abf5f214a2fc47a342d6299fd0", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/02bd349542b8d3abf5f214a2fc47a342d6299fd0", "committedDate": "2020-03-25T22:03:31Z", "message": "lib/regex.dl: Two new functions.\n\nAlso added tests for this library in `test/datalog_tests/regex_test.dl`.\n\n```\n/*\n * Returns the leftmost-first match in `text`. If `regex` is not a valid regular\n * expression or no match exists, then `None` is returned.\n */\nextern function regex_first_match(regex: string, text: string): Option<string>\n\n/*\n * Returns all successive non-overlapping matches in `text`.\n * If `regex` is not a valid regular expression or no match exists,\n * an empty vector is returned.\n */\nextern function regex_all_matches(regex: string, text: string): Vec<string>\n```"}, "afterCommit": {"oid": "1749e64a07bd14d79ff4019c13e3cc00977d4428", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/1749e64a07bd14d79ff4019c13e3cc00977d4428", "committedDate": "2020-03-26T00:15:28Z", "message": "lib/regex.dl: Two new functions.\n\nAlso added tests for this library in `test/datalog_tests/regex_test.dl`.\n\n```\n/*\n * Returns the leftmost-first match in `text`. If `regex` is not a valid regular\n * expression or no match exists, then `None` is returned.\n */\nextern function regex_first_match(regex: string, text: string): Option<string>\n\n/*\n * Returns all successive non-overlapping matches in `text`.\n * If `regex` is not a valid regular expression or no match exists,\n * an empty vector is returned.\n */\nextern function regex_all_matches(regex: string, text: string): Vec<string>\n```"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4680, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}