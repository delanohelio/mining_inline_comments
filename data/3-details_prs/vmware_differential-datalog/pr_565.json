{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwODMxMDUw", "number": 565, "title": "Fixed bigint to signed<N> conversion.", "bodyText": "This code was untested and had multiple issues.  Most importantly, even\nafter truncating bigint to the right width, it cannot be safely\nconverted using .to_sN, as truncated negative number is interpreted as\na positive and may not fit in the signed<N> range, so we convert to\nbit<N> first and then coerce to signed<N>.", "createdAt": "2020-03-19T06:58:24Z", "url": "https://github.com/vmware/differential-datalog/pull/565", "merged": true, "mergeCommit": {"oid": "f12bd6ae668ce7ea9d59c2dcfcdcca7f4961519a"}, "closed": true, "closedAt": "2020-03-19T18:08:19Z", "author": {"login": "ryzhyk"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPNHSGABqjMxNDU4OTY3MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPPWkBABqjMxNDY1NTYwMDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec3ae4b65037c6b8eab8b819e10942e1882690e8", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/ec3ae4b65037c6b8eab8b819e10942e1882690e8", "committedDate": "2020-03-19T06:27:57Z", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`."}, "afterCommit": {"oid": "84aff4905600e124616993e9695e4b16b18566e9", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/84aff4905600e124616993e9695e4b16b18566e9", "committedDate": "2020-03-19T14:51:26Z", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTA2Mjc0", "url": "https://github.com/vmware/differential-datalog/pull/565#pullrequestreview-377906274", "createdAt": "2020-03-19T16:48:19Z", "commit": {"oid": "84aff4905600e124616993e9695e4b16b18566e9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjo0ODoxOVrOF43WCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjo0ODo0NlrOF43XYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTMzOA==", "bodyText": "you could also uncomment this in the souffle_lib.dl file", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395171338", "createdAt": "2020-03-19T16:48:19Z", "author": {"login": "mbudiu-vmw"}, "path": "test/datalog_tests/simple2.dl", "diffHunk": "@@ -42,3 +45,18 @@ output relation TArrng1Arrng2(x: bigint)\n TArrng1Arrng2(x.f2.f2) :-\n     TArrng1[t],\n     TArrng2[(x, t.0.f2.f2)].\n+\n+\n+function ftoi_(l: double): signed<32> = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84aff4905600e124616993e9695e4b16b18566e9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE3MTY4Mw==", "bodyText": "this is very obscure", "url": "https://github.com/vmware/differential-datalog/pull/565#discussion_r395171683", "createdAt": "2020-03-19T16:48:46Z", "author": {"login": "mbudiu-vmw"}, "path": ".gitlab-ci.yml", "diffHunk": "@@ -71,7 +71,7 @@ test-simple:\n     tags:\n         - ddlog-ci-1\n     script:\n-    - stack --no-terminal test --ta \"-p simple\"\n+    - stack --no-terminal test --ta '-p \"$(NF) == \\\"generate simple\\\" || ($(NF-1) == \\\"compiler tests\\\" && $(NF) == \\\"simple\\\")\"'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84aff4905600e124616993e9695e4b16b18566e9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fd15e3f5f490789056aa2f3b900a54a2804eacd", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/6fd15e3f5f490789056aa2f3b900a54a2804eacd", "committedDate": "2020-03-19T17:27:58Z", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84aff4905600e124616993e9695e4b16b18566e9", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/84aff4905600e124616993e9695e4b16b18566e9", "committedDate": "2020-03-19T14:51:26Z", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`."}, "afterCommit": {"oid": "6fd15e3f5f490789056aa2f3b900a54a2804eacd", "author": {"user": {"login": "ryzhyk", "name": "Leonid Ryzhyk"}}, "url": "https://github.com/vmware/differential-datalog/commit/6fd15e3f5f490789056aa2f3b900a54a2804eacd", "committedDate": "2020-03-19T17:27:58Z", "message": "Fixed bigint to signed<N> conversion.\n\nThis code was untested and had multiple issues.  Most importantly, even\nafter truncating `bigint` to the right width, it cannot be safely\nconverted using `.to_sN`, as truncated negative number is interpreted as\na positive and may not fit in the `signed<N>` range, so we convert to\n`bit<N>` first and then coerce to `signed<N>`."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4672, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}