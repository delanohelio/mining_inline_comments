{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzU3NzE5", "number": 5497, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNTo0NFrODh6k6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNTo0NFrODh6k6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2ODg5MzIxOnYy", "diffSide": "RIGHT", "path": "frameworks/C++/ffead-cpp/te-benchmark-um/src/TeBkUm.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNTo0NFrOFs6ogw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNTo0NFrOFs6ogw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MjMwNw==", "bodyText": "If the randomNumber is 1, this will set it to 0 and cause an error in the verification. This would be rare, but it could happen during an official run.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5497#discussion_r382642307", "createdAt": "2020-02-21T15:25:44Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/ffead-cpp/te-benchmark-um/src/TeBkUm.cpp", "diffHunk": "@@ -0,0 +1,312 @@\n+/*\n+ * TeBkUmUm.cpp\n+ *\n+ *  Created on: 03-Feb-2020\n+ *      Author: sumeetc\n+ */\n+#include \"TeBkUm.h\"\n+\n+int TeBkUmFortune::getId() const {\n+\treturn id;\n+}\n+\n+void TeBkUmFortune::setId(int id) {\n+\tthis->id = id;\n+}\n+\n+const std::string& TeBkUmFortune::getMessage() const {\n+\treturn message;\n+}\n+\n+void TeBkUmFortune::setMessage(const std::string& message) {\n+\tthis->message = message;\n+}\n+\n+TeBkUmFortune::TeBkUmFortune() {\n+\tid = 0;\n+}\n+\n+TeBkUmFortune::~TeBkUmFortune() {\n+}\n+\n+bool TeBkUmFortune::operator < (const TeBkUmFortune& other) const {\n+\treturn message.compare(other.message)<0;\n+}\n+\n+TeBkUmMessage::~TeBkUmMessage() {\n+}\n+\n+const std::string& TeBkUmMessage::getMessage() const {\n+\treturn message;\n+}\n+\n+void TeBkUmMessage::setMessage(const std::string& message) {\n+\tthis->message = message;\n+}\n+\n+const std::string TeBkUmRouter::HELLO_WORLD = \"Hello, World!\";\n+std::string TeBkUmRouter::WORLD = \"world\";\n+\n+void TeBkUmRouter::db(TeBkUmWorld& w) {\n+\tDataSourceInterface* sqli = DataSourceManager::getImpl();\n+\tint rid = rand() % 10000 + 1;\n+\tGenericObject id;\n+\tid << rid;\n+\ttry {\n+\t\tw = sqli->get<TeBkUmWorld>(id);\n+\t\tdelete sqli;\n+\t} catch(const std::exception& e) {\n+\t\tdelete sqli;\n+\t\tthrow e;\n+\t}\n+}\n+\n+void TeBkUmRouter::queries(const char* q, int ql, std::vector<TeBkUmWorld>& wlst) {\n+\tint queryCount = 0;\n+\tstrToNum(q, ql, queryCount);\n+\tif(queryCount<1)queryCount=1;\n+\telse if(queryCount>500)queryCount=500;\n+\n+\tDataSourceInterface* sqli = DataSourceManager::getImpl();\n+\n+\ttry {\n+\t\tsqli->startSession(&WORLD);\n+\t\tfor (int c = 0; c < queryCount; ++c) {\n+\t\t\tint rid = rand() % 10000 + 1;\n+\t\t\tGenericObject id;\n+\t\t\tid << rid;\n+\t\t\tTeBkUmWorld w = sqli->get<TeBkUmWorld>(id);\n+\t\t\twlst.push_back(w);\n+\t\t}\n+\t\tsqli->endSession();\n+\t\tdelete sqli;\n+\t} catch(const std::exception& e) {\n+\t\tdelete sqli;\n+\t\tthrow e;\n+\t}\n+}\n+\n+void TeBkUmRouter::updates(const char* q, int ql, std::vector<TeBkUmWorld>& wlst) {\n+\tint queryCount = 0;\n+\tstrToNum(q, ql, queryCount);\n+\tif(queryCount<1)queryCount=1;\n+\telse if(queryCount>500)queryCount=500;\n+\n+\tDataSourceInterface* sqli = DataSourceManager::getImpl();\n+\n+\ttry {\n+\t\tsqli->startSession(&WORLD);\n+\t\tfor (int c = 0; c < queryCount; ++c) {\n+\t\t\tint rid = rand() % 10000 + 1;\n+\t\t\tGenericObject id;\n+\t\t\tid << rid;\n+\t\t\tTeBkUmWorld w = sqli->get<TeBkUmWorld>(id);\n+\t\t\tint newRandomNumber = rand() % 10000 + 1;\n+\t\t\tif(w.getRandomNumber() == newRandomNumber) {\n+\t\t\t\tnewRandomNumber -= 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04dcc52cda030588beaac0d7c3a8e31cec5dd92d"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2708, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}