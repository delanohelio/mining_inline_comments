{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MzA2NDAz", "number": 5867, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo0MDozNlrOEN5lJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo0MDozNlrOEN5lJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDEwMzQwOnYy", "diffSide": "RIGHT", "path": "frameworks/FSharp/falco/src/App/Value.fs", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo0MDozNlrOGwwu3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1MzozNFrOGxOicg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MzI2Mg==", "bodyText": "Can you explain how this works? It doesn't look to me like this would be instantiating and serializing a new object on every request. It looks like it's doing it once and the route /json is just getting this constant value.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5867#discussion_r453783262", "createdAt": "2020-07-13T16:40:36Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/FSharp/falco/src/App/Value.fs", "diffHunk": "@@ -3,14 +3,12 @@\n open Falco \n \n type JsonOutputModel = { message : string }\n-    \n-module Controller =\n-    let defaultMsg = \"Hello, World!\"\n \n-    let handleJson : HttpHandler =\n-        fun next ctx ->\n-            let json = { message = defaultMsg }\n-            (jsonOut json) next ctx\n+let defaultMsg = \"Hello, World!\"\n+\n+let handleJson : HttpHandler =\n+    { message = defaultMsg }\n+    |> Response.ofJson", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692ebb139993ffe19b9e0c5e7865a2802b273e83"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTIzNw==", "bodyText": "Great question. It does look like a static value. But the HttpContext is thread through it implicitly, so it is recomputed each request. You can see it being transformed into a RequestDelegate here.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5867#discussion_r454011237", "createdAt": "2020-07-13T23:41:58Z", "author": {"login": "pimbrouwers"}, "path": "frameworks/FSharp/falco/src/App/Value.fs", "diffHunk": "@@ -3,14 +3,12 @@\n open Falco \n \n type JsonOutputModel = { message : string }\n-    \n-module Controller =\n-    let defaultMsg = \"Hello, World!\"\n \n-    let handleJson : HttpHandler =\n-        fun next ctx ->\n-            let json = { message = defaultMsg }\n-            (jsonOut json) next ctx\n+let defaultMsg = \"Hello, World!\"\n+\n+let handleJson : HttpHandler =\n+    { message = defaultMsg }\n+    |> Response.ofJson", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MzI2Mg=="}, "originalCommit": {"oid": "692ebb139993ffe19b9e0c5e7865a2802b273e83"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAyNTQxOA==", "bodyText": "@pimbrouwers That doesn't appear to be working the way you say. To prove this out, I've changed the handleJson HttpHandler to the following:\nlet handleJson : HttpHandler =\n    {\n        message =  System.DateTime.Now.ToLongTimeString()\n    }\n    |> Response.ofJson\nStarting the server in debug mode ./tfb --mode debug --test falco and hitting the following endpoint over the course of a few minutes:\ncurl http://localhost:8080/json\n{\"message\":\"00:13:40\"}\n{\"message\":\"00:13:40\"}\n{\"message\":\"00:13:40\"}\n\nOf course, I would expect to see a new system date on every request.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5867#discussion_r454025418", "createdAt": "2020-07-14T00:29:24Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/FSharp/falco/src/App/Value.fs", "diffHunk": "@@ -3,14 +3,12 @@\n open Falco \n \n type JsonOutputModel = { message : string }\n-    \n-module Controller =\n-    let defaultMsg = \"Hello, World!\"\n \n-    let handleJson : HttpHandler =\n-        fun next ctx ->\n-            let json = { message = defaultMsg }\n-            (jsonOut json) next ctx\n+let defaultMsg = \"Hello, World!\"\n+\n+let handleJson : HttpHandler =\n+    { message = defaultMsg }\n+    |> Response.ofJson", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MzI2Mg=="}, "originalCommit": {"oid": "692ebb139993ffe19b9e0c5e7865a2802b273e83"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MTYwMg==", "bodyText": "Fascinating!  I wouldn't have expected a partially applied function to behave this way. Will update this PR today!", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5867#discussion_r454271602", "createdAt": "2020-07-14T10:53:34Z", "author": {"login": "pimbrouwers"}, "path": "frameworks/FSharp/falco/src/App/Value.fs", "diffHunk": "@@ -3,14 +3,12 @@\n open Falco \n \n type JsonOutputModel = { message : string }\n-    \n-module Controller =\n-    let defaultMsg = \"Hello, World!\"\n \n-    let handleJson : HttpHandler =\n-        fun next ctx ->\n-            let json = { message = defaultMsg }\n-            (jsonOut json) next ctx\n+let defaultMsg = \"Hello, World!\"\n+\n+let handleJson : HttpHandler =\n+    { message = defaultMsg }\n+    |> Response.ofJson", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MzI2Mg=="}, "originalCommit": {"oid": "692ebb139993ffe19b9e0c5e7865a2802b273e83"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2637, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}