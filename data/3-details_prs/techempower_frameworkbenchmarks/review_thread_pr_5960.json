{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MzkzNTcx", "number": 5960, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDozNjozNlrOEeVahg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDozNjozNlrOEeVahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjQzNTkwOnYy", "diffSide": "RIGHT", "path": "frameworks/C++/lithium/lithium.cc", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDozNjozNlrOHJ7fKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo1Njo1OFrOHKEvAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mzg2Nw==", "bodyText": "This isn't acceptable to cover the dynamic sizing rule of the fortunes test and won't pass the new verification step we're working on where we verify dynamic sizing by adding a large number of fortunes during that step", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5960#discussion_r480173867", "createdAt": "2020-08-31T14:36:36Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/lithium/lithium.cc", "diffHunk": "@@ -191,7 +190,7 @@ int main(int argc, char* argv[]) {\n     std::sort(table.begin(), table.end(),\n               [] (const fortune& a, const fortune& b) { return a.message < b.message; });\n \n-    char b[100000];\n+    char b[2000];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e02a91049806601f86262d3569ad5c6f26d1df9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyMzY1MA==", "bodyText": "Ok. I'll work on a dynamic sizing implementation.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5960#discussion_r480223650", "createdAt": "2020-08-31T15:51:48Z", "author": {"login": "matt-42"}, "path": "frameworks/C++/lithium/lithium.cc", "diffHunk": "@@ -191,7 +190,7 @@ int main(int argc, char* argv[]) {\n     std::sort(table.begin(), table.end(),\n               [] (const fortune& a, const fortune& b) { return a.message < b.message; });\n \n-    char b[100000];\n+    char b[2000];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mzg2Nw=="}, "originalCommit": {"oid": "6e02a91049806601f86262d3569ad5c6f26d1df9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxNjc5Nw==", "bodyText": "@nbrady-techempower This is fixed in my last commit.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5960#discussion_r480316797", "createdAt": "2020-08-31T18:40:59Z", "author": {"login": "matt-42"}, "path": "frameworks/C++/lithium/lithium.cc", "diffHunk": "@@ -191,7 +190,7 @@ int main(int argc, char* argv[]) {\n     std::sort(table.begin(), table.end(),\n               [] (const fortune& a, const fortune& b) { return a.message < b.message; });\n \n-    char b[100000];\n+    char b[2000];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mzg2Nw=="}, "originalCommit": {"oid": "6e02a91049806601f86262d3569ad5c6f26d1df9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNTM3OA==", "bodyText": "thanks @matt-42!", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5960#discussion_r480325378", "createdAt": "2020-08-31T18:56:58Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/lithium/lithium.cc", "diffHunk": "@@ -191,7 +190,7 @@ int main(int argc, char* argv[]) {\n     std::sort(table.begin(), table.end(),\n               [] (const fortune& a, const fortune& b) { return a.message < b.message; });\n \n-    char b[100000];\n+    char b[2000];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3Mzg2Nw=="}, "originalCommit": {"oid": "6e02a91049806601f86262d3569ad5c6f26d1df9"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2605, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}