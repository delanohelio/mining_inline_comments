{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTE1Njc1", "number": 5602, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo0NjowNFrODx5yAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo0NjowNFrODx5yAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjUzNTA2OnYy", "diffSide": "RIGHT", "path": "toolset/benchmark/benchmarker.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo0NjowNFrOGFovZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo0ODozNFrOGFoxpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2MzU1OQ==", "bodyText": "Even if it's the only one to run?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5602#discussion_r408563559", "createdAt": "2020-04-15T03:46:04Z", "author": {"login": "msmith-techempower"}, "path": "toolset/benchmark/benchmarker.py", "diffHunk": "@@ -92,6 +92,9 @@ def __exit_test(self, success, prefix, file, message=None):\n                 file=file,\n                 color=Fore.RED if success else '')\n         self.time_logger.log_test_end(log_prefix=prefix, file=file)\n+        # Sleep for 60 seconds to ensure all host connects are closed\n+        log(\"Clean up: Sleep 60 seconds...\", prefix=prefix, file=file)\n+        time.sleep(60)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf51e53874f38a7df1e07e975c7ba508907237b4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2NDAwMA==", "bodyText": "Feel free to crtl-C if it's the only one run. Really, I just care about getting this on citrine and seeing if it solves the issues. Then I'll worry about QoL stuff.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5602#discussion_r408564000", "createdAt": "2020-04-15T03:48:00Z", "author": {"login": "nbrady-techempower"}, "path": "toolset/benchmark/benchmarker.py", "diffHunk": "@@ -92,6 +92,9 @@ def __exit_test(self, success, prefix, file, message=None):\n                 file=file,\n                 color=Fore.RED if success else '')\n         self.time_logger.log_test_end(log_prefix=prefix, file=file)\n+        # Sleep for 60 seconds to ensure all host connects are closed\n+        log(\"Clean up: Sleep 60 seconds...\", prefix=prefix, file=file)\n+        time.sleep(60)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2MzU1OQ=="}, "originalCommit": {"oid": "bf51e53874f38a7df1e07e975c7ba508907237b4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2NDEzMg==", "bodyText": "Fair enough.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5602#discussion_r408564132", "createdAt": "2020-04-15T03:48:34Z", "author": {"login": "msmith-techempower"}, "path": "toolset/benchmark/benchmarker.py", "diffHunk": "@@ -92,6 +92,9 @@ def __exit_test(self, success, prefix, file, message=None):\n                 file=file,\n                 color=Fore.RED if success else '')\n         self.time_logger.log_test_end(log_prefix=prefix, file=file)\n+        # Sleep for 60 seconds to ensure all host connects are closed\n+        log(\"Clean up: Sleep 60 seconds...\", prefix=prefix, file=file)\n+        time.sleep(60)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2MzU1OQ=="}, "originalCommit": {"oid": "bf51e53874f38a7df1e07e975c7ba508907237b4"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2669, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}