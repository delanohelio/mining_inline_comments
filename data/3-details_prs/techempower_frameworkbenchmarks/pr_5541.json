{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Nzk4Mjc0", "number": 5541, "title": "Yii2: enable the ORM cache on the DB schema", "bodyText": "This PR gets better performance from the Yii2 application.\nThe 5 commits are independent of each other. The most important one enables the cache of the DB schema, which provides a huge boost in performances when requests use the DB.\nOther changes are documented in their respective commit messages. The first commit is a simple cleanup from a past renaming that was incomplete. The other commits provide small performance gains. They were tested in my local instance.", "createdAt": "2020-03-11T16:35:23Z", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541", "merged": true, "mergeCommit": {"oid": "c01cf640067bdf1409e01856cd6318b7b9f0ff7e"}, "closed": true, "closedAt": "2020-03-13T05:37:55Z", "author": {"login": "mytskine"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMpLhcAH2gAyMzg2Nzk4Mjc0OjNjNTQyY2M2NzNjMmUxMTM2ZjgyZTBiN2FkM2I4NDJjNmNhMzY0Yzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNiDiYAFqTM3NDQ2NjUxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3c542cc673c2e1136f82e0b7ad3b842c6ca364c8", "author": {"user": null}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/3c542cc673c2e1136f82e0b7ad3b842c6ca364c8", "committedDate": "2020-03-11T15:51:52Z", "message": "yii2: replace PHP 7.3 references by 7.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e5ce22c43f7c549fb466be1a9472d7405e8b0d5", "author": {"user": null}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/4e5ce22c43f7c549fb466be1a9472d7405e8b0d5", "committedDate": "2020-03-11T15:54:11Z", "message": "yii2 fortunes: sorting with anonymous function was slower\n\nMy micro-bencharks showed that using an anonymous function\nas a callable parameter was about twice slower than using\na named function or a static method.\n\nThe gain is minor but visible, about 0.5 \u00b5s/call,\nso theorically about 300 \u00b5s/request."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "445a9114265c3cc749ce1546997e7d22291c8ccd", "author": {"user": null}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/445a9114265c3cc749ce1546997e7d22291c8ccd", "committedDate": "2020-03-11T16:01:54Z", "message": "yii2 updates: skip model validation\n\nNo visible gain, but it makes sense to skip the call to\nFortune::validate() when the data is not an user input."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75912ac2bd48291eed848a417c142279a88c405c", "author": {"user": null}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/75912ac2bd48291eed848a417c142279a88c405c", "committedDate": "2020-03-11T16:03:17Z", "message": "yii2: cache the DB schema\n\nWithout this, Yii2 analyzes the DB schema at the beginning of\neach request. This caused warnings in `tfb` about the surpringly\nlarge number of SQL queries.\n\nThe gain is huge. For instance, in yii2-fortunes it was more than \u00d77,\nfrom 387 req/s to 2824 req/s on my system."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "695595c12e4672b7cb4d169ba7e0fccf339bb191", "author": {"user": null}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/695595c12e4672b7cb4d169ba7e0fccf339bb191", "committedDate": "2020-03-11T16:09:06Z", "message": "yii2: do not install Bootstrap CSS components\n\nMinimal performance gain (less classes for the autoloader),\nso this change is mostly a sensible cleanup."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDY2NTEx", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#pullrequestreview-374466511", "createdAt": "2020-03-13T17:01:33Z", "commit": {"oid": "4e5ce22c43f7c549fb466be1a9472d7405e8b0d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowMTozNFrOF2LhFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowMTozNFrOF2LhFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NjExOA==", "bodyText": "Good point \ud83d\udc4d\nAnd a good recommendation to optimize the OPCache with anonymous functions.\nPerhaps, it's better to use directly 'Fortune::cmp', as it's a static method.\nmmm, but the other way you get the complete namespace. OK", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5541#discussion_r392356118", "createdAt": "2020-03-13T17:01:34Z", "author": {"login": "joanhey"}, "path": "frameworks/PHP/yii2/app/controllers/SiteController.php", "diffHunk": "@@ -57,9 +57,7 @@ public function actionFortunes()\n \n         $fortunes[] = $runtimeFortune;\n \n-        usort($fortunes, function ($left, $right) {\n-            return strcmp($left->message, $right->message);\n-        });\n+        usort($fortunes, [Fortune::class, 'cmp']);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e5ce22c43f7c549fb466be1a9472d7405e8b0d5"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3897, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}