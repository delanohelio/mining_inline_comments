{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODI0ODAy", "number": 5407, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMzo0NTo1OFrODYtQ-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMzo0NTo1OFrODYtQ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjM0MDQxOnYy", "diffSide": "RIGHT", "path": "frameworks/Rust/warp-rust/src/main.rs", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMzo0NTo1OFrOFeuJcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxNzo0MVrOFe8MKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc1NzY4Mw==", "bodyText": "What's the difference between the method path and the macro path! in this context? I'd like to know what rust code gets generated from this macro. Will the resulting code still instantiate and serialize the JSON response on every call?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5407#discussion_r367757683", "createdAt": "2020-01-17T03:45:58Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/Rust/warp-rust/src/main.rs", "diffHunk": "@@ -7,15 +7,16 @@ struct Message {\n     message: &'static str,\n }\n \n-fn main() {\n-    let json = warp::path(\"json\").map(|| {\n+#[tokio::main]\n+async fn main() {\n+    let json = warp::path!(\"json\").map(|| {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7a97df0b303e36b8af74453254098f5bf6cb365"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4MzE0MQ==", "bodyText": "In short, it's a syntactic sugar for warp::path(\"json\").and(warp::end()). Nothing to do with performance, just a correctness fix (previous implementation allowed paths like /json/abc/def.\nSee https://docs.rs/warp/0.2.0/warp/filters/path/fn.end.html and https://docs.rs/warp/0.2.0/warp/macro.path.html for documentation.\nI can remove ! if that's an issue.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5407#discussion_r367783141", "createdAt": "2020-01-17T06:15:14Z", "author": {"login": "xfix"}, "path": "frameworks/Rust/warp-rust/src/main.rs", "diffHunk": "@@ -7,15 +7,16 @@ struct Message {\n     message: &'static str,\n }\n \n-fn main() {\n-    let json = warp::path(\"json\").map(|| {\n+#[tokio::main]\n+async fn main() {\n+    let json = warp::path!(\"json\").map(|| {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc1NzY4Mw=="}, "originalCommit": {"oid": "c7a97df0b303e36b8af74453254098f5bf6cb365"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Nzc1Mg==", "bodyText": "No, that's fine. Thanks for the explanation.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5407#discussion_r367987752", "createdAt": "2020-01-17T15:17:41Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/Rust/warp-rust/src/main.rs", "diffHunk": "@@ -7,15 +7,16 @@ struct Message {\n     message: &'static str,\n }\n \n-fn main() {\n-    let json = warp::path(\"json\").map(|| {\n+#[tokio::main]\n+async fn main() {\n+    let json = warp::path!(\"json\").map(|| {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc1NzY4Mw=="}, "originalCommit": {"oid": "c7a97df0b303e36b8af74453254098f5bf6cb365"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2736, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}