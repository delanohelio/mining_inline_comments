{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTA1NjM4", "number": 6215, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDo0ODowOFrOFGd2gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMzoxNjozOVrOFG8nnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzI0ODY3OnYy", "diffSide": "RIGHT", "path": "frameworks/Julia/Http.jl/Project.toml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDo0ODowOFrOIHfk0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDo0ODowOFrOIHfk0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyODI3NA==", "bodyText": "Maybe include a [compat] section here?\nSo can use ]up to update manifest while respecting semver", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r544728274", "createdAt": "2020-12-17T00:48:08Z", "author": {"login": "oxinabox"}, "path": "frameworks/Julia/Http.jl/Project.toml", "diffHunk": "@@ -0,0 +1,3 @@\n+[deps]\n+HTTP = \"cd3eb016-35fb-5094-929b-558a96fad6f3\"\n+JSON3 = \"0f8b85d8-7281-11e9-16c2-39a750bddbf1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d03ff21037c99ad01cc27a178c8adc8930b466"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzcxNzYzOnYy", "diffSide": "RIGHT", "path": "frameworks/Julia/Http.jl/run.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDoyODoxNlrOIIHiqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMzoxMDoyMlrOIIMirA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM4MzA4Mw==", "bodyText": "Does this make a difference in this benchmark, btw?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545383083", "createdAt": "2020-12-17T20:28:16Z", "author": {"login": "cmcaine"}, "path": "frameworks/Julia/Http.jl/run.sh", "diffHunk": "@@ -1,6 +1,7 @@\n #!/bin/sh\n \n for i in $(seq 0 $(($(nproc --all)-1))); do\n-\tjulia server.jl\n+\tjulia --threads auto server.jl &", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyMjc0Nw==", "bodyText": "The running multiple in processes in the background makes a big difference.  The threads might make some difference, but it's less pronounced if at all (no harm in having them though?).", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545422747", "createdAt": "2020-12-17T21:44:03Z", "author": {"login": "mcmcgrath13"}, "path": "frameworks/Julia/Http.jl/run.sh", "diffHunk": "@@ -1,6 +1,7 @@\n #!/bin/sh\n \n for i in $(seq 0 $(($(nproc --all)-1))); do\n-\tjulia server.jl\n+\tjulia --threads auto server.jl &", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM4MzA4Mw=="}, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2NTAwNA==", "bodyText": "I would have expected that either would do (threads or multiprocess) if HTTP.jl is multithreaded.\nAs far as I can see in the code, tho, I think HTTP.jl doesn't start its own threads, but is expected to work if you call listen in multiple threads, so I wouldn't expect --threads auto to do much unless you change server.jl to use threads. OTOH, there's no point launching loads of threads if you're doing multiprocessing anyway (you probably want one thread or process  per core, not more).", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545465004", "createdAt": "2020-12-17T23:10:22Z", "author": {"login": "cmcaine"}, "path": "frameworks/Julia/Http.jl/run.sh", "diffHunk": "@@ -1,6 +1,7 @@\n #!/bin/sh\n \n for i in $(seq 0 $(($(nproc --all)-1))); do\n-\tjulia server.jl\n+\tjulia --threads auto server.jl &", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM4MzA4Mw=="}, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODI4NTg2OnYy", "diffSide": "RIGHT", "path": "frameworks/Julia/Http.jl/server.jl", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMzoxNToxM1rOIIMqcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMTozMjowOVrOIIPlkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2Njk5NQ==", "bodyText": "FWIW, I think this is all you need to make this multithreaded:\nThreads.@threads for _ in 1:Threads.nthreads()\n    HTTP.listen(\"0.0.0.0\", 8080, reuseaddr=true) do http\n        # blah\n    end\nend", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545466995", "createdAt": "2020-12-17T23:15:13Z", "author": {"login": "cmcaine"}, "path": "frameworks/Julia/Http.jl/server.jl", "diffHunk": "@@ -1,7 +1,13 @@\n+using Pkg\n+\n+Pkg.activate(@__DIR__)\n+\n using HTTP\n-using JSON\n+import JSON3\n using Dates\n+using Sockets\n \n+@info \"starting listener\"\n HTTP.listen(\"0.0.0.0\", 8080, reuseaddr=true) do http", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUwNzkyMA==", "bodyText": "Thanks! I tried this both with the multiple processes and without and both were significantly slower than the current state - any theories as to why?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545507920", "createdAt": "2020-12-18T01:10:14Z", "author": {"login": "mcmcgrath13"}, "path": "frameworks/Julia/Http.jl/server.jl", "diffHunk": "@@ -1,7 +1,13 @@\n+using Pkg\n+\n+Pkg.activate(@__DIR__)\n+\n using HTTP\n-using JSON\n+import JSON3\n using Dates\n+using Sockets\n \n+@info \"starting listener\"\n HTTP.listen(\"0.0.0.0\", 8080, reuseaddr=true) do http", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2Njk5NQ=="}, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUxNDg5Ng==", "bodyText": "Sorry for the bad steer! I'm just skimming the code in HTTP.jl, but nothing is screaming out to me.\nIf you're doing multiprocess with SO_REUSEPORT (which you are if reuseaddr=true and you're on a *nix), then the kernel can handle all the shared state (working out which stream is for which listener) for you, and maybe whatever Julia is doing in threaded mode is getting in the way of that?\nOr it could be something to do with your OS. Maybe the process ulimits aren't high enough, so 8 threads sharing the same limits are losing out when compared to 8 processes with independent ulimits. No real idea. Just guesses.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545514896", "createdAt": "2020-12-18T01:32:09Z", "author": {"login": "cmcaine"}, "path": "frameworks/Julia/Http.jl/server.jl", "diffHunk": "@@ -1,7 +1,13 @@\n+using Pkg\n+\n+Pkg.activate(@__DIR__)\n+\n using HTTP\n-using JSON\n+import JSON3\n using Dates\n+using Sockets\n \n+@info \"starting listener\"\n HTTP.listen(\"0.0.0.0\", 8080, reuseaddr=true) do http", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2Njk5NQ=="}, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODI4OTU2OnYy", "diffSide": "RIGHT", "path": "frameworks/Julia/Http.jl/server.jl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMzoxNjozOVrOIIMskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMzoxNjozOVrOIIMskw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2NzUzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            using Sockets\n          \n      \n    \n    \n  \n\nThis import is unused. Maybe you intended to use the @ip_str macro below?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6215#discussion_r545467539", "createdAt": "2020-12-17T23:16:39Z", "author": {"login": "cmcaine"}, "path": "frameworks/Julia/Http.jl/server.jl", "diffHunk": "@@ -1,7 +1,13 @@\n+using Pkg\n+\n+Pkg.activate(@__DIR__)\n+\n using HTTP\n-using JSON\n+import JSON3\n using Dates\n+using Sockets", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aa61ea0ce7fd24c78701fe36c0cc8f8b4855ee"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2547, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}