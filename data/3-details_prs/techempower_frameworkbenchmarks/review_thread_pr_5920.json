{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMTY2Nzc0", "number": 5920, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxMToyMlrOEVWT4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxMToyMlrOEVWT4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODIxMDkwOnYy", "diffSide": "RIGHT", "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxMToyMlrOG8DKQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwOToyODoyOVrOG9xB9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxOTUyMQ==", "bodyText": "Please, use objects to maintain the full ORM.\nNow it's using arrays.\nhttps://github.com/TechEmpower/FrameworkBenchmarks/wiki/Project-Information-Framework-Tests-Overview#fortunes", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5920#discussion_r465619521", "createdAt": "2020-08-05T10:11:22Z", "author": {"login": "joanhey"}, "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "diffHunk": "@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Controllers;\n+\n+use App\\Model\\Fortune;\n+use App\\Model\\World;\n+use One\\Http\\Controller;\n+\n+class IndexController extends Controller\n+{\n+\n+    protected function json($data)\n+    {\n+        $this->response->header('Content-type', 'application/json; charset=UTF-8');\n+        return json_encode($data);\n+    }\n+\n+    public function toJson()\n+    {\n+        return $this->json(['message' => 'Hello, World!']);\n+    }\n+\n+    public function plaintext()\n+    {\n+        $this->response->header('Content-Type', 'text/plain');\n+        return 'Hello, World!';\n+    }\n+\n+    public function db()\n+    {\n+        return $this->json(World::find(mt_rand(1, 10000)));\n+    }\n+\n+    public function fortunes()\n+    {\n+        $arr   = Fortune::findAll()->toArray();\n+        $rs    = [];\n+        $rs[0] = 'Additional fortune added at request time.';\n+        foreach ($arr as $item) {\n+            $rs[$item['id']] = $item['message'];\n+        }\n+        asort($rs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2e7f3a9f548716728068da4aec2acb664514471"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY1NDAzMQ==", "bodyText": "Fortune::findAll()  is objects to maintain the full ORM", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5920#discussion_r465654031", "createdAt": "2020-08-05T11:16:29Z", "author": {"login": "lizhichao"}, "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "diffHunk": "@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Controllers;\n+\n+use App\\Model\\Fortune;\n+use App\\Model\\World;\n+use One\\Http\\Controller;\n+\n+class IndexController extends Controller\n+{\n+\n+    protected function json($data)\n+    {\n+        $this->response->header('Content-type', 'application/json; charset=UTF-8');\n+        return json_encode($data);\n+    }\n+\n+    public function toJson()\n+    {\n+        return $this->json(['message' => 'Hello, World!']);\n+    }\n+\n+    public function plaintext()\n+    {\n+        $this->response->header('Content-Type', 'text/plain');\n+        return 'Hello, World!';\n+    }\n+\n+    public function db()\n+    {\n+        return $this->json(World::find(mt_rand(1, 10000)));\n+    }\n+\n+    public function fortunes()\n+    {\n+        $arr   = Fortune::findAll()->toArray();\n+        $rs    = [];\n+        $rs[0] = 'Additional fortune added at request time.';\n+        foreach ($arr as $item) {\n+            $rs[$item['id']] = $item['message'];\n+        }\n+        asort($rs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxOTUyMQ=="}, "originalCommit": {"oid": "f2e7f3a9f548716728068da4aec2acb664514471"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkwNjU4MA==", "bodyText": "For me, I don't see any object.\nAll is managed like array and the asort only order arrays.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5920#discussion_r465906580", "createdAt": "2020-08-05T18:00:48Z", "author": {"login": "joanhey"}, "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "diffHunk": "@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Controllers;\n+\n+use App\\Model\\Fortune;\n+use App\\Model\\World;\n+use One\\Http\\Controller;\n+\n+class IndexController extends Controller\n+{\n+\n+    protected function json($data)\n+    {\n+        $this->response->header('Content-type', 'application/json; charset=UTF-8');\n+        return json_encode($data);\n+    }\n+\n+    public function toJson()\n+    {\n+        return $this->json(['message' => 'Hello, World!']);\n+    }\n+\n+    public function plaintext()\n+    {\n+        $this->response->header('Content-Type', 'text/plain');\n+        return 'Hello, World!';\n+    }\n+\n+    public function db()\n+    {\n+        return $this->json(World::find(mt_rand(1, 10000)));\n+    }\n+\n+    public function fortunes()\n+    {\n+        $arr   = Fortune::findAll()->toArray();\n+        $rs    = [];\n+        $rs[0] = 'Additional fortune added at request time.';\n+        foreach ($arr as $item) {\n+            $rs[$item['id']] = $item['message'];\n+        }\n+        asort($rs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxOTUyMQ=="}, "originalCommit": {"oid": "f2e7f3a9f548716728068da4aec2acb664514471"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2NDc2Mw==", "bodyText": "0e78a78 commits , The parameter of asort is not Fortune::findAll()", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5920#discussion_r466064763", "createdAt": "2020-08-05T23:46:33Z", "author": {"login": "lizhichao"}, "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "diffHunk": "@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Controllers;\n+\n+use App\\Model\\Fortune;\n+use App\\Model\\World;\n+use One\\Http\\Controller;\n+\n+class IndexController extends Controller\n+{\n+\n+    protected function json($data)\n+    {\n+        $this->response->header('Content-type', 'application/json; charset=UTF-8');\n+        return json_encode($data);\n+    }\n+\n+    public function toJson()\n+    {\n+        return $this->json(['message' => 'Hello, World!']);\n+    }\n+\n+    public function plaintext()\n+    {\n+        $this->response->header('Content-Type', 'text/plain');\n+        return 'Hello, World!';\n+    }\n+\n+    public function db()\n+    {\n+        return $this->json(World::find(mt_rand(1, 10000)));\n+    }\n+\n+    public function fortunes()\n+    {\n+        $arr   = Fortune::findAll()->toArray();\n+        $rs    = [];\n+        $rs[0] = 'Additional fortune added at request time.';\n+        foreach ($arr as $item) {\n+            $rs[$item['id']] = $item['message'];\n+        }\n+        asort($rs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxOTUyMQ=="}, "originalCommit": {"oid": "f2e7f3a9f548716728068da4aec2acb664514471"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQxOTYzNg==", "bodyText": "@lizhichao Using usort directly on the $arr array of objects and removing the $rs key value map would fit the requirement. Here is an example:\nhttps://github.com/TechEmpower/FrameworkBenchmarks/blob/master/frameworks/PHP/kumbiaphp/bench/app/controllers/fortunes_controller.php#L10", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5920#discussion_r467419636", "createdAt": "2020-08-08T09:28:29Z", "author": {"login": "matt-42"}, "path": "frameworks/PHP/one/App/Controllers/IndexController.php", "diffHunk": "@@ -0,0 +1,80 @@\n+<?php\n+\n+namespace App\\Controllers;\n+\n+use App\\Model\\Fortune;\n+use App\\Model\\World;\n+use One\\Http\\Controller;\n+\n+class IndexController extends Controller\n+{\n+\n+    protected function json($data)\n+    {\n+        $this->response->header('Content-type', 'application/json; charset=UTF-8');\n+        return json_encode($data);\n+    }\n+\n+    public function toJson()\n+    {\n+        return $this->json(['message' => 'Hello, World!']);\n+    }\n+\n+    public function plaintext()\n+    {\n+        $this->response->header('Content-Type', 'text/plain');\n+        return 'Hello, World!';\n+    }\n+\n+    public function db()\n+    {\n+        return $this->json(World::find(mt_rand(1, 10000)));\n+    }\n+\n+    public function fortunes()\n+    {\n+        $arr   = Fortune::findAll()->toArray();\n+        $rs    = [];\n+        $rs[0] = 'Additional fortune added at request time.';\n+        foreach ($arr as $item) {\n+            $rs[$item['id']] = $item['message'];\n+        }\n+        asort($rs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYxOTUyMQ=="}, "originalCommit": {"oid": "f2e7f3a9f548716728068da4aec2acb664514471"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2594, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}