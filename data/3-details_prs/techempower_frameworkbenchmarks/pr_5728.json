{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjA0MzE2", "number": 5728, "title": "Improved the Quarkus benchmark and added a pgclient variant", "bodyText": "This upgrades the Quarkus benchmark to the latest release, and updates its code to be more idiomatic and performant.\nWe also added a reactive variant using pg-client.", "createdAt": "2020-06-03T13:32:12Z", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728", "merged": true, "mergeCommit": {"oid": "ef0905588a4b10d332ad49c67ca41b796abadc19"}, "closed": true, "closedAt": "2020-06-16T19:53:16Z", "author": {"login": "FroMage"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnrBprgFqTQyMzY0NTQ1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrw2PjgBqjM0NDc4MDIwNzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjQ1NDU4", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#pullrequestreview-423645458", "createdAt": "2020-06-03T15:01:57Z", "commit": {"oid": "e86f670a22bf01360b0e028e0b9573888a05d2b3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTowMTo1N1rOGegDrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTowNDo1N1rOGegMXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzNTY5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"webserver\": \"Undertow\",\n          \n          \n            \n                    \"webserver\": \"None\",\n          \n      \n    \n    \n  \n\nthe pgclient implementation is using reactive routes from from vert.x-web. This should not be Undertow", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r434635693", "createdAt": "2020-06-03T15:01:57Z", "author": {"login": "johnaohara"}, "path": "frameworks/Java/quarkus/benchmark_config.json", "diffHunk": "@@ -55,7 +41,7 @@\n         \"flavor\": \"None\",\n         \"orm\": \"Micro\",\n         \"platform\": \"JAX-RS\",\n-        \"webserver\": \"None\",\n+        \"webserver\": \"Undertow\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86f670a22bf01360b0e028e0b9573888a05d2b3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzNzkxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                sudo podman run --ulimit memlock=-1:-1 -it --rm=true --network host --memory-swappiness=0 --name HibernateTestingPGSQL -e POSTGRES_USER=benchmarkdbuser -e POSTGRES_PASSWORD=benchmarkdbpass -e POSTGRES_DB=hello_world -p 5432:5432 postgres:12\n          \n          \n            \n            Using podman;\n          \n          \n            \n            \n          \n          \n            \n                    podman run --ulimit memlock=-1:-1 -it --rm=true --network host --memory-swappiness=0 --name HibernateTestingPGSQL -e POSTGRES_USER=benchmarkdbuser -e POSTGRES_PASSWORD=benchmarkdbpass -e POSTGRES_DB=hello_world -p 5432:5432 postgres:12\n          \n          \n            \n            \n          \n          \n            \n            Using docker;\n          \n          \n            \n            \n          \n          \n            \n                    sudo docker run --ulimit memlock=-1:-1 -it --rm=true --network host --memory-swappiness=0 --name HibernateTestingPGSQL -e POSTGRES_USER=benchmarkdbuser -e POSTGRES_PASSWORD=benchmarkdbpass -e POSTGRES_DB=hello_world -p 5432:5432 postgres:12\n          \n      \n    \n    \n  \n\npodman should run as the current user, also provide an alternative for using docker", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r434637917", "createdAt": "2020-06-03T15:04:57Z", "author": {"login": "johnaohara"}, "path": "frameworks/Java/quarkus/hibernate/README.md", "diffHunk": "@@ -0,0 +1,69 @@\n+# Local development\n+\n+During development it might be easier to start a PostgreSQL instance directly:\n+\n+    sudo podman run --ulimit memlock=-1:-1 -it --rm=true --network host --memory-swappiness=0 --name HibernateTestingPGSQL -e POSTGRES_USER=benchmarkdbuser -e POSTGRES_PASSWORD=benchmarkdbpass -e POSTGRES_DB=hello_world -p 5432:5432 postgres:12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86f670a22bf01360b0e028e0b9573888a05d2b3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODQzNzAw", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#pullrequestreview-423843700", "createdAt": "2020-06-03T19:00:54Z", "commit": {"oid": "af116a29ebabba790e6ec76651085ae89f49440e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowMDo1NFrOGepXAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowMDo1NFrOGepXAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4ODA5Ng==", "bodyText": "Instantiating a new object for each request is one of the requirements.\n\ni. For each request, an object mapping the key message to Hello, World! must be instantiated.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r434788096", "createdAt": "2020-06-03T19:00:54Z", "author": {"login": "michaelhixson"}, "path": "frameworks/Java/quarkus/hibernate/src/main/java/io/quarkus/benchmark/resource/JsonResource.java", "diffHunk": "@@ -1,22 +1,22 @@\n package io.quarkus.benchmark.resource;\n \n-import java.util.Map;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.CompletionStage;\n-\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import java.util.Collections;\n+import java.util.Map;\n \n @Path(\"/json\")\n public class JsonResource {\n     private static final String MESSAGE = \"message\";\n     private static final String HELLO = \"Hello, World!\";\n+    private static final Map<String, String> map = Collections.singletonMap( MESSAGE, HELLO );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af116a29ebabba790e6ec76651085ae89f49440e"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af116a29ebabba790e6ec76651085ae89f49440e", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/af116a29ebabba790e6ec76651085ae89f49440e", "committedDate": "2020-06-03T15:19:40Z", "message": "Update frameworks/Java/quarkus/hibernate/README.md\n\nCo-authored-by: John O'Hara <johara@redhat.com>"}, "afterCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/b862ee66d9c41b9e4eec37f440ba1785fc14bd2d", "committedDate": "2020-06-03T19:45:23Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzY0MTUw", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#pullrequestreview-425764150", "createdAt": "2020-06-06T19:42:40Z", "commit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxOTo0Mjo0MFrOGgFW8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxOTo0NjoxMVrOGgFXxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTQwOA==", "bodyText": "should flight recorder be enabled for benchmarks?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r436295408", "createdAt": "2020-06-06T19:42:40Z", "author": {"login": "kenyee"}, "path": "frameworks/Java/quarkus/hibernate/start-app.sh", "diffHunk": "@@ -0,0 +1 @@\n+java -XX:+FlightRecorder -XX:+UseParallelGC -Dquarkus.datasource.url=jdbc:postgresql://localhost:5432/hello_world?loggerLevel=OFF\\&disableColumnSanitiser=true\\&assumeMinServerVersion=12\\&sslmode=disable -Dquarkus.http.host=127.0.0.1 -Djava.lang.Integer.IntegerCache.high=10000 -Dvertx.disableHttpHeadersValidation=true -Dvertx.disableMetrics=true -Dvertx.disableH2c=true -Dvertx.disableWebsockets=true -Dvertx.flashPolicyHandler=false -Dvertx.threadChecks=false -Dvertx.disableContextTimings=true -Dvertx.disableTCCL=true -Dhibernate.allow_update_outside_transaction=true -Djboss.threads.eqe.statistics=false -jar target/hibernate-1.0-SNAPSHOT-runner.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTUwMw==", "bodyText": "would be nice for these to be constants for readability", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r436295503", "createdAt": "2020-06-06T19:44:27Z", "author": {"login": "kenyee"}, "path": "frameworks/Java/quarkus/pgclient/src/main/java/io/quarkus/benchmark/repository/pgclient/PgClientFactory.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.quarkus.benchmark.repository.pgclient;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+import io.vertx.mutiny.core.Vertx;\n+import io.vertx.mutiny.pgclient.PgPool;\n+import io.vertx.pgclient.PgConnectOptions;\n+import io.vertx.sqlclient.PoolOptions;\n+\n+@ApplicationScoped\n+public class PgClientFactory {\n+\n+\t@ConfigProperty(name = \"quarkus.datasource.url\")\n+\tString url;\n+\n+\t@ConfigProperty(name = \"quarkus.datasource.username\")\n+\tString user;\n+\n+\t@ConfigProperty(name = \"quarkus.datasource.password\")\n+\tString pass;\n+\n+\t@Inject\n+\tVertx vertx;\n+\n+\t@Produces\n+\t@ApplicationScoped\n+\tpublic PgClients pgClients() {\n+\t    return new PgClients(this);\n+\t}\n+\n+\n+\tPgPool sqlClient(int size) {\n+\t\tPoolOptions options = new PoolOptions();\n+\t\tPgConnectOptions connectOptions = new PgConnectOptions();\n+\t\t// vertx-reactive:postgresql://tfb-database:5432/hello_world\n+\t\tMatcher matcher = Pattern.compile(\"vertx-reactive:postgresql://([-a-zA-Z]+):([0-9]+)/(.*)\").matcher(url);\n+\t\tmatcher.matches();\n+\t\tconnectOptions.setDatabase(matcher.group(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTU1MQ==", "bodyText": "would be nice for the 4 to be a constant for readability", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r436295551", "createdAt": "2020-06-06T19:45:07Z", "author": {"login": "kenyee"}, "path": "frameworks/Java/quarkus/pgclient/src/main/java/io/quarkus/benchmark/repository/pgclient/PgClients.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.benchmark.repository.pgclient;\n+\n+import io.vertx.mutiny.pgclient.PgPool;\n+import io.vertx.mutiny.sqlclient.SqlClient;\n+\n+class PgClients {\n+    private ThreadLocal<SqlClient> sqlClient = new ThreadLocal<>();\n+    private ThreadLocal<PgPool> pool = new ThreadLocal<>();\n+    private PgClientFactory pgClientFactory;\n+\n+\t// for ArC\n+\tpublic PgClients() {\n+\t}\n+\n+\tpublic PgClients(PgClientFactory pgClientFactory) {\n+\t    this.pgClientFactory = pgClientFactory;\n+    }\n+\n+    SqlClient getClient() {\n+        SqlClient ret = sqlClient.get();\n+        if(ret == null) {\n+            ret = pgClientFactory.sqlClient(1);\n+            sqlClient.set(ret);\n+        }\n+\t\treturn ret;\n+\t}\n+\n+\tsynchronized PgPool getPool() {\n+        PgPool ret = pool.get();\n+        if(ret == null) {\n+            ret = pgClientFactory.sqlClient(4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTYyMw==", "bodyText": "isn't specifying the column names explicitly faster than using *?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r436295623", "createdAt": "2020-06-06T19:46:11Z", "author": {"login": "kenyee"}, "path": "frameworks/Java/quarkus/pgclient/src/main/java/io/quarkus/benchmark/repository/pgclient/WorldRepository.java", "diffHunk": "@@ -1,46 +1,38 @@\n package io.quarkus.benchmark.repository.pgclient;\n \n-import java.util.concurrent.Executors;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n \n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n import io.quarkus.benchmark.model.World;\n-import io.reactivex.Maybe;\n-import io.reactivex.Scheduler;\n-import io.reactivex.Single;\n-import io.reactivex.schedulers.Schedulers;\n-import io.vertx.reactivex.pgclient.PgPool;\n-import io.vertx.reactivex.sqlclient.RowIterator;\n-import io.vertx.reactivex.sqlclient.RowSet;\n-import io.vertx.reactivex.sqlclient.Tuple;\n+import io.smallrye.mutiny.Uni;\n+import io.vertx.mutiny.sqlclient.Row;\n+import io.vertx.mutiny.sqlclient.Tuple;\n \n @ApplicationScoped\n public class WorldRepository {\n \n-    private static Logger LOG = LoggerFactory.getLogger(WorldRepository.class);\n-\n     @Inject\n-    PgPool client;\n-\n-    private final Scheduler scheduler = Schedulers.from(Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors() * 2));\n-\n-    public Maybe<World> find(int id) {\n-        return client.rxPreparedQuery(\"SELECT id, randomnumber FROM world WHERE id = $1\", Tuple.of(id))\n-                .map(RowSet::iterator)\n-                .filter(RowIterator::hasNext)\n-                .map(RowIterator::next)\n-                .map(row -> new World(row.getInteger(0), row.getInteger(1)))\n-                .subscribeOn(scheduler);\n+    PgClients clients;\n+\n+    public Uni<World> find(int id) {\n+        return clients.getClient().preparedQuery(\"SELECT * FROM World WHERE id = $1\", Tuple.of(id))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b862ee66d9c41b9e4eec37f440ba1785fc14bd2d", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/b862ee66d9c41b9e4eec37f440ba1785fc14bd2d", "committedDate": "2020-06-03T19:45:23Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}, "afterCommit": {"oid": "28e83d9d2d342cb931e925580b35f50ed891b7ca", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/28e83d9d2d342cb931e925580b35f50ed891b7ca", "committedDate": "2020-06-08T08:26:20Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODEyNzA0", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#pullrequestreview-429812704", "createdAt": "2020-06-12T14:58:43Z", "commit": {"oid": "28e83d9d2d342cb931e925580b35f50ed891b7ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDo1ODo0M1rOGjHObA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDo1ODo0M1rOGjHObA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ3MTcyNA==", "bodyText": "As of right now, you need a test named \"default\" or the toolset spits up a bunch of warnings. You'll have to change this and rename the quarkus-hibernate.dockerfile to quarkus.dockerfile", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/5728#discussion_r439471724", "createdAt": "2020-06-12T14:58:43Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/Java/quarkus/benchmark_config.json", "diffHunk": "@@ -2,8 +2,12 @@\n   \"framework\": \"quarkus\",\n   \"tests\": [\n     {\n-      \"default\": {\n+      \"hibernate\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28e83d9d2d342cb931e925580b35f50ed891b7ca"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c464c0296f71ce67ba4d2f38ac280c0d0ce6554", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/0c464c0296f71ce67ba4d2f38ac280c0d0ce6554", "committedDate": "2020-06-16T08:14:38Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28e83d9d2d342cb931e925580b35f50ed891b7ca", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/28e83d9d2d342cb931e925580b35f50ed891b7ca", "committedDate": "2020-06-08T08:26:20Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}, "afterCommit": {"oid": "0c464c0296f71ce67ba4d2f38ac280c0d0ce6554", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/TechEmpower/FrameworkBenchmarks/commit/0c464c0296f71ce67ba4d2f38ac280c0d0ce6554", "committedDate": "2020-06-16T08:14:38Z", "message": "Improved the Quarkus benchmark and added a pgclient variant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3874, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}