{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5OTY5Njc5", "number": 6020, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjowNDo1MlrOErrytA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjowNDo1MlrOErrytA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjQxNzE2OnYy", "diffSide": "RIGHT", "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjowNDo1MlrOHelxbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDo1MjoyOFrOHfYSzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA==", "bodyText": "Should be selecting id and randomNumber from the db on each query\nEdit: Looks like you did it on the others, but just missed this one", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501838188", "createdAt": "2020-10-08T16:04:52Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3MTI4MA==", "bodyText": "Well I re-read the requirements and was unsure if that was needed, after all the where is already selecting the id, if it ok if I do select id, random from... but doesn't use the id from the query?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501871280", "createdAt": "2020-10-08T16:56:56Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3Mjk1MQ==", "bodyText": "What I mean is that as you can see I'm building the json before because I already know how it's going to be, doesn't make much sense to build it later.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501872951", "createdAt": "2020-10-08T16:59:28Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxMjI0Mg==", "bodyText": "where is already selecting the id\n\nWhat we mean by selecting the id is that it will be returned from the database. Without the id in the select clause, fewer bytes are returned:\nhello_world=# select randomNumber from world where id=1;\n randomnumber\n--------------\n         5703\n(1 row)\n\nhello_world=# select id, randomNumber from world where id=1;\n id | randomnumber\n----+--------------\n  1 |         5703\n(1 row)", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501912242", "createdAt": "2020-10-08T18:02:33Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyMzY3Mw==", "bodyText": "Ok, look:\nAt least the randomNumber field must be read from the database result set.\nThat's on the wiki requirements page, so I'm ok right?", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501923673", "createdAt": "2020-10-08T18:20:53Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyMzg3NA==", "bodyText": "vi -> https://github.com/TechEmpower/FrameworkBenchmarks/wiki/Project-Information-Framework-Tests-Overview#database-updates", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501923874", "createdAt": "2020-10-08T18:21:13Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk2MzcwMQ==", "bodyText": "No. That is \"read from the result set\" meaning you must access that field of the object that's returned from the database.\n\nEach row must be selected randomly using one query in the same fashion as the single database query test.\n\nAnd then from the single database query test:\n\n\nFor every request, a single row from a World table must be retrieved from a database table. It is not acceptable to read just the randomNumber.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501963701", "createdAt": "2020-10-08T19:31:05Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk2NzU4OQ==", "bodyText": "If you feel like this is unclear, that is fine. I will update all of the rules to make it clearer that is not acceptable to read just the randomNumber field from the World table for any of the database query / update tests.\nEdit: Updated the wiki", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r501967589", "createdAt": "2020-10-08T19:38:22Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0NzkyMw==", "bodyText": "No. That is \"read from the result set\" meaning you must access that field of the object that's returned from the database.\n\nhmm how should I \"access\" it, because if I don't have an use for it the compiler will simply optimize the code and remove the retrieval.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r502047923", "createdAt": "2020-10-08T22:30:13Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYxMDMxMA==", "bodyText": "The compiler is smart enough to remove the \"id\" from the prepared select statement? that's impressive, if that's what's happening. this is fine for now, but something i'd be interested in looking into further at some point.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r502610310", "createdAt": "2020-10-09T18:41:22Z", "author": {"login": "nbrady-techempower"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY2NTkzMw==", "bodyText": "Nope, what I was saying was about the access the current random number returned by the database.", "url": "https://github.com/TechEmpower/FrameworkBenchmarks/pull/6020#discussion_r502665933", "createdAt": "2020-10-09T20:52:28Z", "author": {"login": "dantti"}, "path": "frameworks/C++/cutelyst/src/databaseupdatestest.cpp", "diffHunk": "@@ -13,6 +17,47 @@ DatabaseUpdatesTest::DatabaseUpdatesTest(QObject *parent) : Controller(parent)\n \n }\n \n+void DatabaseUpdatesTest::updatep(Context *c)\n+{\n+    int queries = c->request()->queryParam(QStringLiteral(\"queries\"), QStringLiteral(\"1\")).toInt();\n+    if (queries < 1) {\n+        queries = 1;\n+    } else if (queries > 500) {\n+        queries = 500;\n+    }\n+\n+    QJsonArray array;\n+    ASync async(c);\n+    static thread_local auto db = APool::database();\n+    for (int i = 0; i < queries; ++i) {\n+        int id = (qrand() % 10000) + 1;\n+\n+        int randomNumber = (qrand() % 10000) + 1;\n+\n+        array.append(QJsonObject{\n+                         {QStringLiteral(\"id\"), id},\n+                         {QStringLiteral(\"randomNumber\"), randomNumber}\n+                     });\n+\n+        db.execPrepared(APreparedQueryLiteral(\"SELECT randomNumber FROM world WHERE id=$1\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODE4OA=="}, "originalCommit": {"oid": "e2a80d302fed5770b46870b5492d4f304f5c377c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2556, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}