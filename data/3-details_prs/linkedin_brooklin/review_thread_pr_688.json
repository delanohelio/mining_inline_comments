{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDE5NDk4", "number": 688, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDoxMjo1M1rODlodAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDoxMjo1M1rODlodAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzg2Njg5OnYy", "diffSide": "RIGHT", "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaTransportProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDoxMjo1M1rOFyolyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNToxNzo1N1rOF-FrKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzODE1NA==", "bodyText": "I understand you're trying to minimize changes but I think the code would be slightly clearer/better if we avoid the redundant assignment, i.e.\nif (record.getPartitionKey().isPresent()) {\n    keyValue = record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8);\n}", "url": "https://github.com/linkedin/brooklin/pull/688#discussion_r388638154", "createdAt": "2020-03-06T00:12:53Z", "author": {"login": "ahmedahamid"}, "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaTransportProvider.java", "diffHunk": "@@ -119,7 +119,7 @@ public KafkaTransportProvider(DatastreamTask datastreamTask, List<KafkaProducerW\n       // If the partition is not specified. We use the partitionKey as the key. Kafka will use the hash of that\n       // to determine the partition. If partitionKey does not exist, use the key value.\n       keyValue = record.getPartitionKey().isPresent()\n-          ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : null;\n+              ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : keyValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b904be470c32691d0f4b0b996e484e45353ef83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc4NTQ0MQ==", "bodyText": "Thanks for the review @ahmedahamid. I agree with your feedback.\nI was trying to make the code look as it was prior to this commit.\nLet me know if you feel strongly about the code style. I can make that change and run a quick round of tests.", "url": "https://github.com/linkedin/brooklin/pull/688#discussion_r389785441", "createdAt": "2020-03-09T15:55:42Z", "author": {"login": "sdomalap"}, "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaTransportProvider.java", "diffHunk": "@@ -119,7 +119,7 @@ public KafkaTransportProvider(DatastreamTask datastreamTask, List<KafkaProducerW\n       // If the partition is not specified. We use the partitionKey as the key. Kafka will use the hash of that\n       // to determine the partition. If partitionKey does not exist, use the key value.\n       keyValue = record.getPartitionKey().isPresent()\n-          ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : null;\n+              ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : keyValue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzODE1NA=="}, "originalCommit": {"oid": "7b904be470c32691d0f4b0b996e484e45353ef83"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0OTAwMg==", "bodyText": "Thanks for your contribution, @sdomalap", "url": "https://github.com/linkedin/brooklin/pull/688#discussion_r400649002", "createdAt": "2020-03-31T05:17:57Z", "author": {"login": "ahmedahamid"}, "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaTransportProvider.java", "diffHunk": "@@ -119,7 +119,7 @@ public KafkaTransportProvider(DatastreamTask datastreamTask, List<KafkaProducerW\n       // If the partition is not specified. We use the partitionKey as the key. Kafka will use the hash of that\n       // to determine the partition. If partitionKey does not exist, use the key value.\n       keyValue = record.getPartitionKey().isPresent()\n-          ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : null;\n+              ? record.getPartitionKey().get().getBytes(StandardCharsets.UTF_8) : keyValue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzODE1NA=="}, "originalCommit": {"oid": "7b904be470c32691d0f4b0b996e484e45353ef83"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 961, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}