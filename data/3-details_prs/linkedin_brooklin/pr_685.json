{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjAwOTY2", "number": 685, "title": " Verify/Clean orphan tasks under connector in zookeeper by leader coordinator", "bodyText": "Important: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md\nThis PR addresses the verification/cleanup of orphan tasks under connector in ZooKeeper which is not assigned to any instance. Any exception in Coordinator during CleanupOfOldInstances and unused tasks can result in orphan nodes under connector. In this PR, the leader coordinator after becoming leader and finishing the assignment process for the first time, will verify if there is any orphan tasks and if there is a config to clean them, it will delete it from the zookeeper.", "createdAt": "2020-02-14T22:34:12Z", "url": "https://github.com/linkedin/brooklin/pull/685", "merged": true, "mergeCommit": {"oid": "0574b236f60ba9cd0e149688aadf0f1cf0722152"}, "closed": true, "closedAt": "2020-02-25T23:25:05Z", "author": {"login": "vmaheshw"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABboAf5CAH2gAyMzc1NjAwOTY2OmMzMWNkNGExNWNjOGRkNjliMGE2NTNkYmU0MjAxZGU5MzRlYTZkNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH6m3jAFqTM2NDUyMTkxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "author": {"user": {"login": "vmaheshw", "name": "Vaibhav Maheshwari"}}, "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "committedDate": "2019-11-18T20:06:44Z", "message": "Merge pull request #1 from linkedin/master\n\nPull latest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea601106044c12d556139cb3ab37f6d3e05b90bb", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/ea601106044c12d556139cb3ab37f6d3e05b90bb", "committedDate": "2020-02-11T23:52:17Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin into HEAD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/3588deb6266ebdcedb8cc8c890589de184abb967", "committedDate": "2020-02-14T22:24:46Z", "message": "Verify/Clean orphan tasks under connector in zookeeper by leader coordinator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MjU5ODUy", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-359259852", "createdAt": "2020-02-14T22:42:11Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjo0MjoxMVrOFqFqbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjo0MjoxMVrOFqFqbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3NzI5NQ==", "bodyText": "Just a clarifying question: Any reason this shouldn't be done as part of cleaning up dead tasks in the original LEADER_DO_ASSIGNMENT event? Might be a good idea to add clear documentation around why this should only be performed afterwards.", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r379677295", "createdAt": "2020-02-14T22:42:11Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -875,6 +890,44 @@ public void cleanupOldUnusedTasks(Map<String, Set<DatastreamTask>> previousAssig\n     unusedTasks.forEach(t -> deleteConnectorTask(t.getConnectorType(), t.getDatastreamTaskName()));\n   }\n \n+  /**\n+   * Remove orphan connector task nodes which are not assigned to any instance (live or pause).\n+   *\n+   * NOTE: this should only be called after the valid tasks have been\n+   * reassigned or become safe to discard per strategy requirement.\n+   * This can be a costly operation. So, it should be call once the leader get elected and has finished\n+   * the assignment and cleaned up dead Tasks. Ideally, we should not find anything in this check to clean up.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjQwNDAz", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-361240403", "createdAt": "2020-02-19T16:29:33Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjoyOTozM1rOFruNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjoyOTozM1rOFruNcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MDE5NQ==", "bodyText": "I remember reading this at some point and thinking I am going to see this in this the logs somewhere and assume something bad happened, and that exactly happened yesterday. Awesome that you fixed it.", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r381390195", "createdAt": "2020-02-19T16:29:33Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1222,9 +1275,10 @@ public ZkBackedLiveInstanceListProvider() {\n       List<String> liveInstances = new ArrayList<>();\n       for (String n : nodes) {\n         String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n-        if (hostname != null) {\n+        if (hostname == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 102}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjQxMDg3", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-361241087", "createdAt": "2020-02-19T16:30:20Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMDoyMFrOFruPVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMDoyMFrOFruPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MDY3Nw==", "bodyText": "typo: live or paused", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r381390677", "createdAt": "2020-02-19T16:30:20Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -875,6 +890,44 @@ public void cleanupOldUnusedTasks(Map<String, Set<DatastreamTask>> previousAssig\n     unusedTasks.forEach(t -> deleteConnectorTask(t.getConnectorType(), t.getDatastreamTaskName()));\n   }\n \n+  /**\n+   * Remove orphan connector task nodes which are not assigned to any instance (live or pause).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjQxNzky", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-361241792", "createdAt": "2020-02-19T16:31:09Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMTowOVrOFruRYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMTowOVrOFruRYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MTIwMQ==", "bodyText": "nit: Can you format the comment lines to be of approximately the same length?", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r381391201", "createdAt": "2020-02-19T16:31:09Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -875,6 +890,44 @@ public void cleanupOldUnusedTasks(Map<String, Set<DatastreamTask>> previousAssig\n     unusedTasks.forEach(t -> deleteConnectorTask(t.getConnectorType(), t.getDatastreamTaskName()));\n   }\n \n+  /**\n+   * Remove orphan connector task nodes which are not assigned to any instance (live or pause).\n+   *\n+   * NOTE: this should only be called after the valid tasks have been", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjQzNjgw", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-361243680", "createdAt": "2020-02-19T16:33:12Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMzoxMlrOFruW3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMzoxMlrOFruW3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MjYwNw==", "bodyText": "nit: typos:\n\nshould be called; 2. leader gets elected", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r381392607", "createdAt": "2020-02-19T16:33:12Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -875,6 +890,44 @@ public void cleanupOldUnusedTasks(Map<String, Set<DatastreamTask>> previousAssig\n     unusedTasks.forEach(t -> deleteConnectorTask(t.getConnectorType(), t.getDatastreamTaskName()));\n   }\n \n+  /**\n+   * Remove orphan connector task nodes which are not assigned to any instance (live or pause).\n+   *\n+   * NOTE: this should only be called after the valid tasks have been\n+   * reassigned or become safe to discard per strategy requirement.\n+   * This can be a costly operation. So, it should be call once the leader get elected and has finished", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMzE3Mjgx", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-361317281", "createdAt": "2020-02-19T18:07:51Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODowNzo1MVrOFrx5rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODowNzo1MVrOFrx5rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MDY3MQ==", "bodyText": "Can we add a metric for this so we can monitor it?", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r381450671", "createdAt": "2020-02-19T18:07:51Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -875,6 +890,44 @@ public void cleanupOldUnusedTasks(Map<String, Set<DatastreamTask>> previousAssig\n     unusedTasks.forEach(t -> deleteConnectorTask(t.getConnectorType(), t.getDatastreamTaskName()));\n   }\n \n+  /**\n+   * Remove orphan connector task nodes which are not assigned to any instance (live or pause).\n+   *\n+   * NOTE: this should only be called after the valid tasks have been\n+   * reassigned or become safe to discard per strategy requirement.\n+   * This can be a costly operation. So, it should be call once the leader get elected and has finished\n+   * the assignment and cleaned up dead Tasks. Ideally, we should not find anything in this check to clean up.\n+   * @param cleanUpOrphanTasksInConnector Boolean whether orphan tasks should be removed from zookeeper or just print\n+   *                                      warning logs.\n+   */\n+  public void cleanUpOrphanConnectorTasks(boolean cleanUpOrphanTasksInConnector) {\n+    if (!_isLeader) {\n+      return;\n+    }\n+\n+    Map<String, Set<DatastreamTask>> assignmentsByInstance = getAllAssignedDatastreamTasks();\n+\n+    Set<DatastreamTask> validTasks =\n+        assignmentsByInstance.values().stream().flatMap(Collection::stream).collect(Collectors.toSet());\n+\n+    List<String> allConnectors = getAllConnectors();\n+    for (String connector : allConnectors) {\n+      Set<String> connectorTaskList = getConnectorTasks(connector);\n+\n+      connectorTaskList.removeAll(validTasks.stream()\n+          .filter(x -> x.getConnectorType().equals(connector))\n+          .map(DatastreamTask::getDatastreamTaskName)\n+          .collect(Collectors.toSet()));\n+\n+      if (connectorTaskList.size() > 0) {\n+        LOG.warn(\"Found orphan tasks: {} in connector: {}\", connectorTaskList, connector);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b37469f0b0f91fb94fb54cadbfa578b857e5f3", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/80b37469f0b0f91fb94fb54cadbfa578b857e5f3", "committedDate": "2020-02-20T23:45:42Z", "message": "Add Metrics for orphanConnectorTasks and minor fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzQzNzcz", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-362743773", "createdAt": "2020-02-21T16:13:44Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxMzo0NFrOFs8W_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxMzo0NFrOFs8W_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MDU4OQ==", "bodyText": "should we test with false first after updateInstanceAssignments and see 2 left as well?", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r382670589", "createdAt": "2020-02-21T16:13:44Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java", "diffHunk": "@@ -759,6 +759,26 @@ public void testDeleteTasksWithPrefix() {\n     List<String> leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n     Assert.assertEquals(leftOverTasks.size(), 2);\n \n+    adapter.cleanUpOrphanConnectorTasks(false);\n+\n+    leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n+    Assert.assertEquals(leftOverTasks.size(), 2);\n+\n+    adapter.cleanUpOrphanConnectorTasks(true);\n+\n+    leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n+    Assert.assertEquals(leftOverTasks.size(), 2);\n+\n+    updateInstanceAssignment(adapter, adapter.getInstanceName(), new ArrayList<DatastreamTask>());\n+\n+    leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n+    Assert.assertEquals(leftOverTasks.size(), 2);\n+\n+    adapter.cleanUpOrphanConnectorTasks(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzQ5NzI5", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-362749729", "createdAt": "2020-02-21T16:22:01Z", "commit": {"oid": "3588deb6266ebdcedb8cc8c890589de184abb967"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzUyODY4", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-362752868", "createdAt": "2020-02-21T16:26:15Z", "commit": {"oid": "80b37469f0b0f91fb94fb54cadbfa578b857e5f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoyNjoxNlrOFs8yuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoyNjoxNlrOFs8yuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3NzY5MQ==", "bodyText": "It's really hard to come up with a name for this.. not happy with this because it suggests action with DO but doesnt specify the action. I am unable to come up with any better though. Will post if I do.", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r382677691", "createdAt": "2020-02-21T16:26:16Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -722,6 +732,10 @@ protected synchronized void handleEvent(CoordinatorEvent event) {\n           performPartitionMovement((Long) event.getEventMetadata());\n           break;\n \n+        case LEADER_DO_POST_BECOMING_LEADER:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80b37469f0b0f91fb94fb54cadbfa578b857e5f3"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c983e969c54e65157200cfd4bd9f377cce1746d8", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/c983e969c54e65157200cfd4bd9f377cce1746d8", "committedDate": "2020-02-21T18:57:46Z", "message": "Enhance TestZkAdapter test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzQxNTg4", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-363741588", "createdAt": "2020-02-24T22:17:26Z", "commit": {"oid": "c983e969c54e65157200cfd4bd9f377cce1746d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxNzoyN1rOFtx5vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoxNzoyN1rOFtx5vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU0NzgzNg==", "bodyText": "If you plan to rename \"performTaskPostBecomingLeader\", can you also add a static constant for this string literal?", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r383547836", "createdAt": "2020-02-24T22:17:27Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -1243,6 +1257,13 @@ private void performPartitionMovement(Long notifyTimestamp) {\n     return newAssignmentsByInstance;\n   }\n \n+  void performTaskPostBecomingLeader() {\n+    _log.info(\"performTaskPostBecomingLeader called\");\n+    int orphanCount = _adapter.cleanUpOrphanConnectorTasks(_config.getZkCleanUpOrphanConnectorTask());\n+    _dynamicMetricsManager.createOrUpdateMeter(MODULE, \"performTaskPostBecomingLeader\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c983e969c54e65157200cfd4bd9f377cce1746d8"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzQ0MzAw", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-363744300", "createdAt": "2020-02-24T22:22:24Z", "commit": {"oid": "c983e969c54e65157200cfd4bd9f377cce1746d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoyMjoyNVrOFtyCUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMjoyMjoyNVrOFtyCUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU1MDAzNA==", "bodyText": "nit: can we make the comment style consistent in this function? some comments have an extra // before and after, other's don't. And it is not exactly clear if this is only because of differentiating steps? If so, maybe number the steps instead to make it clear that those are step related comments?", "url": "https://github.com/linkedin/brooklin/pull/685#discussion_r383550034", "createdAt": "2020-02-24T22:22:25Z", "author": {"login": "somandal"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/TestCoordinator.java", "diffHunk": "@@ -2443,6 +2450,115 @@ public void testDatastreamDedupeMetadataCopy() throws Exception {\n     Assert.assertEquals(datastreams[1].getMetadata().get(destMetaKey), destMetaVal);\n   }\n \n+  private class TestCoordinatorWithSpyZkAdapter extends Coordinator {\n+\n+    TestCoordinatorWithSpyZkAdapter(CachedDatastreamReader testDatastreamCache, Properties testConfig) throws DatastreamException {\n+      super(testDatastreamCache, testConfig);\n+    }\n+\n+    @Override\n+    ZkAdapter createZkAdapter() {\n+      return spy(new ZkAdapter(getConfig().getZkAddress(), getConfig().getCluster(),\n+          getConfig().getDefaultTransportProviderName(), getConfig().getZkSessionTimeout(),\n+          getConfig().getZkConnectionTimeout(), this));\n+    }\n+  }\n+\n+  @Test\n+  public void testCoordinatorPerformPostBecomingLeaderTasks() throws Exception {\n+    String testCluster = \"testCoordinationSmoke3\";\n+    String testConnectorType = \"testConnectorType\";\n+    String datastreamName1 = \"datastream1\";\n+\n+    Properties props = new Properties();\n+    props.put(CoordinatorConfig.CONFIG_CLUSTER, testCluster);\n+    props.put(CoordinatorConfig.CONFIG_ZK_ADDRESS, _zkConnectionString);\n+    props.put(CoordinatorConfig.CONFIG_ZK_SESSION_TIMEOUT, String.valueOf(ZkClient.DEFAULT_SESSION_TIMEOUT));\n+    props.put(CoordinatorConfig.CONFIG_ZK_CONNECTION_TIMEOUT, String.valueOf(ZkClient.DEFAULT_CONNECTION_TIMEOUT));\n+\n+    ZkClient zkClient = new ZkClient(_zkConnectionString);\n+    _cachedDatastreamReader = new CachedDatastreamReader(zkClient, testCluster);\n+    Coordinator instance1 = new TestCoordinatorWithSpyZkAdapter(_cachedDatastreamReader, props);\n+    ZkAdapter spyZkAdapter1 = instance1.getZkAdapter();\n+    instance1.addTransportProvider(DummyTransportProviderAdminFactory.PROVIDER_NAME,\n+        new DummyTransportProviderAdminFactory().createTransportProviderAdmin(\n+            DummyTransportProviderAdminFactory.PROVIDER_NAME, new Properties()));\n+\n+    TestHookConnector connector1 = new TestHookConnector(\"connector1\", testConnectorType);\n+    instance1.addConnector(testConnectorType, connector1, new BroadcastStrategy(Optional.empty()), false,\n+        new SourceBasedDeduper(), null);\n+    instance1.start();\n+\n+    String isLeaderMetricName = \"Coordinator.isLeader\";\n+    Gauge<Integer> isLeader = DynamicMetricsManager.getInstance().getMetric(isLeaderMetricName);\n+\n+    Assert.assertEquals(isLeader.getValue().intValue(), 1);\n+\n+    //\n+    // create datastream definitions under /testAssignmentBasic/datastream/datastream1\n+    //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c983e969c54e65157200cfd4bd9f377cce1746d8"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26691234a293d494ed08f6579435f47c37e784f8", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/26691234a293d494ed08f6579435f47c37e784f8", "committedDate": "2020-02-25T19:09:45Z", "message": "Fix Coordinator Event"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0Mzc3NTI4", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-364377528", "createdAt": "2020-02-25T19:13:36Z", "commit": {"oid": "26691234a293d494ed08f6579435f47c37e784f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTIxOTE2", "url": "https://github.com/linkedin/brooklin/pull/685#pullrequestreview-364521916", "createdAt": "2020-02-25T23:20:30Z", "commit": {"oid": "26691234a293d494ed08f6579435f47c37e784f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 378, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}