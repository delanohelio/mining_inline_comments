{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Nzc0Mzg0", "number": 721, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0ODozN1rOEFsPXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0OTozNlrOEFsQiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAzMTY3OnYy", "diffSide": "RIGHT", "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0ODozN1rOGkCNIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTozNjoyNFrOGkDmkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ==", "bodyText": "can  datastreamName be null?", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440438049", "createdAt": "2020-06-15T20:48:37Z", "author": {"login": "somandal"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -761,6 +761,14 @@ public CreateResponse create(Datastream datastream) {\n         metadataMap.put(DatastreamMetadataConstants.IS_USER_MANAGED_DESTINATION_KEY, \"true\");\n       }\n \n+      String datastreamName = datastream.getName();\n+      String trimmedDatastreamName = (datastreamName == null) ? datastreamName : datastreamName.trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MTk4Ng==", "bodyText": "Not in production, yes otherwise (tests, manually constructed datastream objects)", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440441986", "createdAt": "2020-06-15T20:56:26Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -761,6 +761,14 @@ public CreateResponse create(Datastream datastream) {\n         metadataMap.put(DatastreamMetadataConstants.IS_USER_MANAGED_DESTINATION_KEY, \"true\");\n       }\n \n+      String datastreamName = datastream.getName();\n+      String trimmedDatastreamName = (datastreamName == null) ? datastreamName : datastreamName.trim();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ=="}, "originalCommit": {"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2MDk0Ng==", "bodyText": "Removed the null check. Turns out this is already covered by this call performed at the beginning of this method:\nDatastreamUtils.validateNewDatastream(datastream);", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440460946", "createdAt": "2020-06-15T21:36:24Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -761,6 +761,14 @@ public CreateResponse create(Datastream datastream) {\n         metadataMap.put(DatastreamMetadataConstants.IS_USER_MANAGED_DESTINATION_KEY, \"true\");\n       }\n \n+      String datastreamName = datastream.getName();\n+      String trimmedDatastreamName = (datastreamName == null) ? datastreamName : datastreamName.trim();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODA0OQ=="}, "originalCommit": {"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAzNDY0OnYy", "diffSide": "RIGHT", "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/dms/TestDatastreamResources.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0OTozNlrOGkCO_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1OTo0OFrOGkCjyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODUyNw==", "bodyText": "nit and feel free to ignore\" add this as its own test. easy to spot perhaps?", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440438527", "createdAt": "2020-06-15T20:49:36Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/dms/TestDatastreamResources.java", "diffHunk": "@@ -559,11 +559,19 @@ public void testCreateDatastream() throws Exception {\n     Set<String> missingFields = new HashSet<>();\n \n     // happy path\n-    Datastream fullDatastream = generateDatastream(1);\n+    Datastream fullDatastream = generateDatastream(0);\n     CreateResponse response = resource.create(fullDatastream);\n     Assert.assertNull(response.getError());\n     Assert.assertEquals(response.getStatus(), HttpStatus.S_201_CREATED);\n \n+    Datastream whitespaceDatastream = generateDatastream(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0Mzg1MQ==", "bodyText": "You're right. I'll add a comment to make it stand out instead because this test method contains all the datastream creation test cases.", "url": "https://github.com/linkedin/brooklin/pull/721#discussion_r440443851", "createdAt": "2020-06-15T20:59:48Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/dms/TestDatastreamResources.java", "diffHunk": "@@ -559,11 +559,19 @@ public void testCreateDatastream() throws Exception {\n     Set<String> missingFields = new HashSet<>();\n \n     // happy path\n-    Datastream fullDatastream = generateDatastream(1);\n+    Datastream fullDatastream = generateDatastream(0);\n     CreateResponse response = resource.create(fullDatastream);\n     Assert.assertNull(response.getError());\n     Assert.assertEquals(response.getStatus(), HttpStatus.S_201_CREATED);\n \n+    Datastream whitespaceDatastream = generateDatastream(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzODUyNw=="}, "originalCommit": {"oid": "e76d90e04b6b09d4e24337d06c86057ba7e74abd"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1018, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}