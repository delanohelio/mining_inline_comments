{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0ODMzMDk2", "number": 717, "title": "Throw if rewind to last checkpoint fails in AbstractKafkaBasedConnectorTask", "bodyText": "The AbstractKafkaBasedConnectorTask attempts to rewind TopicPartitions to the last checkpoint if any send failures are seen. To avoid data loss, we should thrown an exception if rewind fails, since we may accidentally commit newer offsets for data we were not able to send successfully (e.g. calling KafkaConsumer pause() and then calling commitSync() will commit offsets for paused TopicPartitions).\nImportant: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md", "createdAt": "2020-05-29T01:20:46Z", "url": "https://github.com/linkedin/brooklin/pull/717", "merged": true, "mergeCommit": {"oid": "2ecbba4266dd3d36e6109f01a71bfcf84cacbcd2"}, "closed": true, "closedAt": "2020-06-02T21:14:10Z", "author": {"login": "somandal"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl32-DAH2gAyNDI0ODMzMDk2OjhhNTEwZDMxODVkMzdmY2JhM2I4ODJhMTEyNzdkNDE0NGNkN2I1YWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnbeYagFqTQyMzA1OTY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a510d3185d37fcba3b882a11277d4144cd7b5aa", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/8a510d3185d37fcba3b882a11277d4144cd7b5aa", "committedDate": "2020-05-29T01:06:06Z", "message": "Throw if rewind to last checkpoint fails in AbstractKafkaBasedConnectorTask"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODY0MzQx", "url": "https://github.com/linkedin/brooklin/pull/717#pullrequestreview-422864341", "createdAt": "2020-06-02T16:41:25Z", "commit": {"oid": "8a510d3185d37fcba3b882a11277d4144cd7b5aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjo0MToyNlrOGd6h5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjo0MToyNlrOGd6h5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAyMDgzNw==", "bodyText": "nit: wondering if the setter can take true/false to allow for stop failing send failures also.", "url": "https://github.com/linkedin/brooklin/pull/717#discussion_r434020837", "createdAt": "2020-06-02T16:41:26Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -344,12 +345,24 @@ protected void postShutdownHook() {\n       try {\n         super.postShutdownHook();\n       } catch (Exception e) {\n-        postShutdownHookExceptionCaught = true;\n+        _postShutdownHookExceptionCaught = true;\n       }\n     }\n \n+    @Override\n+    protected void seekToLastCheckpoint(Set<TopicPartition> topicPartitions) {\n+      if (_failOnSeekToLastCheckpoint) {\n+        throw new KafkaException(\"KafkaException: failed to seek\");\n+      }\n+      super.seekToLastCheckpoint(topicPartitions);\n+    }\n+\n+    void setFailOnSeekToLastCheckpoint() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a510d3185d37fcba3b882a11277d4144cd7b5aa"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODY1MjAy", "url": "https://github.com/linkedin/brooklin/pull/717#pullrequestreview-422865202", "createdAt": "2020-06-02T16:42:29Z", "commit": {"oid": "8a510d3185d37fcba3b882a11277d4144cd7b5aa"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d", "committedDate": "2020-06-02T17:10:35Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTU3MDM3", "url": "https://github.com/linkedin/brooklin/pull/717#pullrequestreview-422957037", "createdAt": "2020-06-02T18:38:19Z", "commit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODozODoxOVrOGd_OsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODo0MzozNFrOGd_ZqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5Nzg0MQ==", "bodyText": "nit: do you need both ',' and 'and'", "url": "https://github.com/linkedin/brooklin/pull/717#discussion_r434097841", "createdAt": "2020-06-02T18:38:19Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -282,15 +284,21 @@ protected void rewindAndPausePartitionOnException(TopicPartition srcTopicPartiti\n   }\n \n   protected void rewindAndPausePartitionsOnSendException() {\n-    // For all topic partitions which have seen send exceptions, attempt to rewind them to the last checkpoint\n+    // For all topic partitions which have seen send exceptions, attempt to rewind them to the last checkpoint.\n+    // The outcome of the rewind can fall into three categories:\n+    // 1) The rewind is successful and the Exception returned by the SendCallback is transient. This TopicPartition is\n+    //    not added to the auto-pause list.\n+    // 2) The rewind is successful and the Exception returned by the SendCallback is non-transient. This TopicPartition\n+    //    is added to the auto-pause list with SEND_ERROR as the reason.\n+    // 3) The rewind itself failed. An exception is thrown, and the connector task is brought down to avoid wrongfully", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5ODczMA==", "bodyText": "also, can you rephrase this comment may be: the connector task is brought down to avoid committing wrong checkpoints.", "url": "https://github.com/linkedin/brooklin/pull/717#discussion_r434098730", "createdAt": "2020-06-02T18:40:02Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -282,15 +284,21 @@ protected void rewindAndPausePartitionOnException(TopicPartition srcTopicPartiti\n   }\n \n   protected void rewindAndPausePartitionsOnSendException() {\n-    // For all topic partitions which have seen send exceptions, attempt to rewind them to the last checkpoint\n+    // For all topic partitions which have seen send exceptions, attempt to rewind them to the last checkpoint.\n+    // The outcome of the rewind can fall into three categories:\n+    // 1) The rewind is successful and the Exception returned by the SendCallback is transient. This TopicPartition is\n+    //    not added to the auto-pause list.\n+    // 2) The rewind is successful and the Exception returned by the SendCallback is non-transient. This TopicPartition\n+    //    is added to the auto-pause list with SEND_ERROR as the reason.\n+    // 3) The rewind itself failed. An exception is thrown, and the connector task is brought down to avoid wrongfully", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5Nzg0MQ=="}, "originalCommit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5OTcwNw==", "bodyText": "nit, can you merge the two lines", "url": "https://github.com/linkedin/brooklin/pull/717#discussion_r434099707", "createdAt": "2020-06-02T18:41:53Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnectorTestUtils.java", "diffHunk": "@@ -132,9 +132,15 @@ static KafkaMirrorMakerConnectorTask createFlushlessKafkaMirrorMakerConnectorTas\n \n   static Thread runKafkaMirrorMakerConnectorTask(KafkaMirrorMakerConnectorTask connectorTask)\n       throws InterruptedException {\n+    return runKafkaMirrorMakerConnectorTask(connectorTask, (t, e) -> Assert.fail(\"connector thread died\", e));\n+  }\n+\n+  static Thread runKafkaMirrorMakerConnectorTask(KafkaMirrorMakerConnectorTask connectorTask,\n+      Thread.UncaughtExceptionHandler exceptionHandler)\n+      throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEwMDY0OQ==", "bodyText": "typo zkAdatper", "url": "https://github.com/linkedin/brooklin/pull/717#discussion_r434100649", "createdAt": "2020-06-02T18:43:34Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -821,6 +834,56 @@ public void testAutoPauseAndResumeOnSendFailure() throws Exception {\n         \"did not shut down on time\");\n   }\n \n+  @Test\n+  public void testValidateTaskDiesOnRewindFailure() throws InterruptedException {\n+    String yummyTopic = \"YummyPizza\";\n+    createTopic(_zkUtils, yummyTopic);\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"pizzaStream\", _broker, \"\\\\w+Pizza\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    // create event producer that fails on 3rd event (of 5)\n+    MockDatastreamEventProducer datastreamProducer =\n+        new MockDatastreamEventProducer((r) -> new String((byte[]) r.getEvents().get(0).key().get()).equals(\"key-2\"));\n+    task.setEventProducer(datastreamProducer);\n+\n+    ZkAdapter zkAdatper = new ZkAdapter(_kafkaCluster.getZkConnection(), \"testCluster\", null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b1e1f19c1eeabedc25a5a17c8a97a91de7cc88d"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06a98ce5aa3424d3d624bd5014510dd106128c05", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/06a98ce5aa3424d3d624bd5014510dd106128c05", "committedDate": "2020-06-02T20:11:33Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a939410f552f78bfe149b3c02487a9262825e2", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/b2a939410f552f78bfe149b3c02487a9262825e2", "committedDate": "2020-06-02T20:14:47Z", "message": "Fix all typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDQ0NjQ2", "url": "https://github.com/linkedin/brooklin/pull/717#pullrequestreview-423044646", "createdAt": "2020-06-02T20:46:11Z", "commit": {"oid": "b2a939410f552f78bfe149b3c02487a9262825e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDU5Njc2", "url": "https://github.com/linkedin/brooklin/pull/717#pullrequestreview-423059676", "createdAt": "2020-06-02T21:09:46Z", "commit": {"oid": "b2a939410f552f78bfe149b3c02487a9262825e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 867, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}