{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NTcxNTAy", "number": 785, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoxODoxOVrOFDnhfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoxODoxOVrOFDnhfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzM3NTk5OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoxODoxOVrOIDXA-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTozMjowNVrOIDZ4aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5MzcyMA==", "bodyText": "ConcurrentHashMap will not throw ConcurrentModificationException. You can get rid of it.", "url": "https://github.com/linkedin/brooklin/pull/785#discussion_r540393720", "createdAt": "2020-12-10T18:18:19Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -272,20 +273,28 @@ private void performSlaRelatedLogging(DatastreamRecordMetadata metadata, long ev\n     }\n \n     if (_numEventsOutsideAltSlaLogEnabled) {\n-      if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n-        TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n-        int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n-        _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n-      }\n+      try {\n+        if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n+          TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n+          int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n+          _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n+        }\n \n-      long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n-      if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n-        _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) ->\n-            _logger.warn(\"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n-                    + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs,\n-                timeSinceLastLog, getDatastreamName()));\n-        _trackEventsOutsideAltSlaMap.clear();\n-        _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n+        if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n+          _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) -> _logger.warn(\n+              \"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n+                  + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs, timeSinceLastLog,\n+              getDatastreamName()));\n+          _trackEventsOutsideAltSlaMap.clear();\n+          _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        }\n+      } catch (ConcurrentModificationException | NullPointerException | IllegalArgumentException | ClassCastException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a056756df28623ed09b6f0b13e444a0cbf80e26"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0MDY4MA==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/785#discussion_r540440680", "createdAt": "2020-12-10T19:32:05Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -272,20 +273,28 @@ private void performSlaRelatedLogging(DatastreamRecordMetadata metadata, long ev\n     }\n \n     if (_numEventsOutsideAltSlaLogEnabled) {\n-      if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n-        TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n-        int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n-        _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n-      }\n+      try {\n+        if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n+          TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n+          int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n+          _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n+        }\n \n-      long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n-      if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n-        _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) ->\n-            _logger.warn(\"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n-                    + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs,\n-                timeSinceLastLog, getDatastreamName()));\n-        _trackEventsOutsideAltSlaMap.clear();\n-        _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n+        if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n+          _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) -> _logger.warn(\n+              \"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n+                  + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs, timeSinceLastLog,\n+              getDatastreamName()));\n+          _trackEventsOutsideAltSlaMap.clear();\n+          _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        }\n+      } catch (ConcurrentModificationException | NullPointerException | IllegalArgumentException | ClassCastException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5MzcyMA=="}, "originalCommit": {"oid": "8a056756df28623ed09b6f0b13e444a0cbf80e26"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 933, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}