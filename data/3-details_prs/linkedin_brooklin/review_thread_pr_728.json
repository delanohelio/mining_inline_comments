{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTI1NTY1", "number": 728, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzozOToxOVrOEO6HxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo1Nzo0MFrOEPWKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDY3NzgxOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzozOToxOVrOGyU-VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzozNToxMVrOGy1XNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNTYyMQ==", "bodyText": "Instead of repeating this check in multiple handle methods, I think it would be better to have just a single check in handleEvent(). This would also allow us to identify all leader-only events by looking at that one method.\nI suggest caching _adapter.isLeader() in a local instead of calling it twice to avoid situations where the value of the underlying variable might have changed between the two calls.", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r455425621", "createdAt": "2020-07-15T23:39:19Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -777,6 +777,10 @@ private boolean isDeletingOrExpired(Datastream stream) {\n    * either. Also, expired streams are excluded from any future task assignments.\n    */\n   private void handleDatastreamAddOrDelete() {\n+    if (!_adapter.isLeader()) {\n+      _log.warn(\"skipping handleDatastreamAddOrDelete isLeader {}\", _adapter.isLeader());\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93964fe1e0be60e0e3194d71c06069033e4b216"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjI3OQ==", "bodyText": "done.", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r455956279", "createdAt": "2020-07-16T17:35:11Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -777,6 +777,10 @@ private boolean isDeletingOrExpired(Datastream stream) {\n    * either. Also, expired streams are excluded from any future task assignments.\n    */\n   private void handleDatastreamAddOrDelete() {\n+    if (!_adapter.isLeader()) {\n+      _log.warn(\"skipping handleDatastreamAddOrDelete isLeader {}\", _adapter.isLeader());\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNTYyMQ=="}, "originalCommit": {"oid": "e93964fe1e0be60e0e3194d71c06069033e4b216"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTI3MjIyOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzo1Nzo0MFrOGzAu9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMTozNToxOFrOGzCYhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MjU4Mw==", "bodyText": "nit: I think this'd be more intuitive/straightforward if expressed as:\nif (isLeaderEvent(event) && !isLeader) {\n  _log.info(...);\n  return;\n}", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r456142583", "createdAt": "2020-07-16T23:57:40Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -663,7 +663,11 @@ private void assignSerdes(DatastreamTaskImpl datastreamTask) {\n \n   protected synchronized void handleEvent(CoordinatorEvent event) {\n     _log.info(\"START: Handle event \" + event.getType() + \", Instance: \" + _adapter.getInstanceName());\n-\n+    boolean isLeader = _adapter.isLeader();\n+    if (skipLeaderEvent(event.getType(), isLeader)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aada93492b910d1a22becad6008793e1c5d2457f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2OTYwNg==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r456169606", "createdAt": "2020-07-17T01:35:18Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -663,7 +663,11 @@ private void assignSerdes(DatastreamTaskImpl datastreamTask) {\n \n   protected synchronized void handleEvent(CoordinatorEvent event) {\n     _log.info(\"START: Handle event \" + event.getType() + \", Instance: \" + _adapter.getInstanceName());\n-\n+    boolean isLeader = _adapter.isLeader();\n+    if (skipLeaderEvent(event.getType(), isLeader)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MjU4Mw=="}, "originalCommit": {"oid": "aada93492b910d1a22becad6008793e1c5d2457f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1026, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}