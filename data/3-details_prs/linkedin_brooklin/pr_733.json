{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjAyMjE3", "number": 733, "title": "Log and explicitly send 404 in get datastream rest call", "bodyText": "DatastreamResources get call does not log an error when stream is not\nfound. This is not consistent with other APIs. Make it consistent with\nthe rest of the APIs which allows for also logging in case stream is not\nfound and can be helpful with debugging. Change also removes the logging\nof time it takes for the get for consistency. It is not a batch operation and\ndoesn't seem like it warrants a log for execution time.", "createdAt": "2020-07-21T16:03:17Z", "url": "https://github.com/linkedin/brooklin/pull/733", "merged": true, "mergeCommit": {"oid": "62fa6ced07c8c4703d93e25a767f12e73cb4319e"}, "closed": true, "closedAt": "2020-07-22T16:08:08Z", "author": {"login": "DEEPTHIKORAT"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3CTYnAH2gAyNDU0NjAyMjE3OjQ1MWMyODQ5NmYxYTExOWM2MjViNGQ3ZDY4MjhjMTc1ZmEwMTg3OWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3dHNHAFqTQ1MzQ2NjcwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "451c28496f1a119c625b4d7d6828c175fa01879f", "author": {"user": {"login": "DEEPTHIKORAT", "name": "Deepthi Sridharan"}}, "url": "https://github.com/linkedin/brooklin/commit/451c28496f1a119c625b4d7d6828c175fa01879f", "committedDate": "2020-07-21T08:52:54Z", "message": "Log and explicitly send 404 in get datastream call\n\nDatastreamResources get call doesnt not log an error when stream is not\nfound. This is not consistent with other APIs. Make it consistent with\nthe rest of the APIs which allows for also logging in case stream is not\nfound and can be helpful with debugging. Change also removes the logging\nof time it takes for the get also for consistency. It is not a batch\noperation and doesn't seem like it warrants a log for execution time."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjIyMDUx", "url": "https://github.com/linkedin/brooklin/pull/733#pullrequestreview-452622051", "createdAt": "2020-07-21T16:19:00Z", "commit": {"oid": "451c28496f1a119c625b4d7d6828c175fa01879f"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxOTowMFrOG0_wMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxOTowMFrOG0_wMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMzY2Ng==", "bodyText": "nit: maybe we should keep this log? That Get was called? I know that I've used this log for other operations we perform (stop, resume, pause, etc), and it may be helpful to know if the server is receiving Get requests or not if we see some failures.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458223666", "createdAt": "2020-07-21T16:19:00Z", "author": {"login": "somandal"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,22 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n-      LOG.info(\"Get datastream called for datastream {}\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451c28496f1a119c625b4d7d6828c175fa01879f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa", "author": {"user": {"login": "DEEPTHIKORAT", "name": "Deepthi Sridharan"}}, "url": "https://github.com/linkedin/brooklin/commit/2126bbd80a2ccc4bb27c39f3008284f91050c6aa", "committedDate": "2020-07-21T16:59:02Z", "message": "Bring back log accidentally removed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU4NDE3", "url": "https://github.com/linkedin/brooklin/pull/733#pullrequestreview-452658417", "createdAt": "2020-07-21T17:02:45Z", "commit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzgxMzAx", "url": "https://github.com/linkedin/brooklin/pull/733#pullrequestreview-452781301", "createdAt": "2020-07-21T19:53:54Z", "commit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo1Mzo1NFrOG1HdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo1Mzo1NFrOG1HdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw==", "bodyText": "I scoured Rest.li's docs and source code to see if throwing an exception was idiomatic for 404s. The javadocs of this method in one of the parent types of DatastreamResources, i.e. CollectionResource, states that null is expected in case the resource isn't found:\n  /**\n   * Gets this resource.\n   *\n   * @param key resource key\n   * @return null if resource was not found\n   */\n  V get(K key);\n\nThrowing a RestLiServiceException seems to be intended for unexpected server errors.\nI think we can just adjust logging in the current code to print whether a datastream was found or not.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458349847", "createdAt": "2020-07-21T19:53:54Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDY2NzAz", "url": "https://github.com/linkedin/brooklin/pull/733#pullrequestreview-453466703", "createdAt": "2020-07-22T16:07:02Z", "commit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 891, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}