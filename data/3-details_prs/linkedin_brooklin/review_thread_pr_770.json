{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDg3NTYy", "number": 770, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozNTo1MFrOE1da1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MDo0N1rOE2SY6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NDkxOTg5OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozNTo1MFrOHtvxCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozNTo1MFrOHtvxCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMDU2OQ==", "bodyText": "Can this API be meaningfully split? I am yet to fully understand all the parts, but if can be logically split to be closerLeaderSpecificListeners or closeListnersOnDisconnect.. or whatever is logical, it will make following code much easier.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r517730569", "createdAt": "2020-11-05T01:35:50Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -295,11 +307,15 @@ private void onBecomeFollower() {\n \n     LOG.info(\"Instance \" + _instanceName + \" becomes follower\");\n \n-    closeZkListener(false);\n+    closeZkListeners(false);\n     _isLeader = false;\n   }\n \n-  private void closeZkListener(boolean isDisconnect) {\n+  private void closeZkListeners(boolean isDisconnect) {\n+    closeZkListeners(isDisconnect, false);\n+  }\n+\n+  private void closeZkListeners(boolean isDisconnect, boolean isSessionExpired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NDkyNzM0OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozOTozNVrOHtv1TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozOTozNVrOHtv1TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMTY2MQ==", "bodyText": "nit: not sure if this comment is relevant to this code path. Also since this is overlap with start, should this eventQueue work be moved to a method.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r517731661", "createdAt": "2020-11-05T01:39:35Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -521,6 +522,22 @@ boolean isZkSessionExpired() {\n     return _zkSessionExpired;\n   }\n \n+  @Override\n+  public void onNewSession() {\n+    createEventThread();\n+    startEventThread();\n+    _adapter.connect();\n+    // now that instance is started, make sure it doesn't miss any assignment created during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODU1NDgwOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxODozMVrOHuSnoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MTowMlrOHvCDZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMTYwMA==", "bodyText": "nit: Reword to Task lock node might have been deleted\nIf we got ZkNoNodeException doesn't that mean lockPath doesn't exist or is that a more generic exception?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r518301600", "createdAt": "2020-11-05T19:18:31Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1378,13 +1395,17 @@ public void releaseTask(DatastreamTaskImpl task) {\n       return;\n     }\n \n-    String owner = _zkclient.ensureReadData(lockPath);\n-    if (!owner.equals(_instanceName)) {\n-      LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n-          task.getDatastreamTaskName());\n+    try {\n+      String owner = _zkclient.ensureReadData(lockPath);\n+      if (!owner.equals(_instanceName)) {\n+        LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n+            task.getDatastreamTaskName());\n+        return;\n+      }\n+    } catch (ZkNoNodeException e) {\n+      LOG.info(\"Task lock node may be got deleted. exists: {}\", _zkclient.exists(lockPath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3ODc1Nw==", "bodyText": "+1\nCan we also make this a warn log?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r519078757", "createdAt": "2020-11-07T01:41:02Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1378,13 +1395,17 @@ public void releaseTask(DatastreamTaskImpl task) {\n       return;\n     }\n \n-    String owner = _zkclient.ensureReadData(lockPath);\n-    if (!owner.equals(_instanceName)) {\n-      LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n-          task.getDatastreamTaskName());\n+    try {\n+      String owner = _zkclient.ensureReadData(lockPath);\n+      if (!owner.equals(_instanceName)) {\n+        LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n+            task.getDatastreamTaskName());\n+        return;\n+      }\n+    } catch (ZkNoNodeException e) {\n+      LOG.info(\"Task lock node may be got deleted. exists: {}\", _zkclient.exists(lockPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMTYwMA=="}, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODU2ODY4OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToyMTowMFrOHuSwjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToyMTowMFrOHuSwjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMzg4NQ==", "bodyText": "Can you please reword this? Node dying is a bit confusing to read. The actual event might be helpful as in.. instance's session expired or something like that. Same for the exception below.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r518303885", "createdAt": "2020-11-05T19:21:00Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1554,12 +1580,16 @@ public ZkBackedLiveInstanceListProvider() {\n     private List<String> getLiveInstanceNames(List<String> nodes) {\n       List<String> liveInstances = new ArrayList<>();\n       for (String n : nodes) {\n-        String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n-        if (hostname == null) {\n-          // hostname can be null if a node dies immediately after reading all live instances\n-          LOG.error(\"Node {} is dead. Likely cause it dies after reading list of nodes.\", n);\n-        } else {\n-          liveInstances.add(formatZkInstance(hostname, n));\n+        try {\n+          String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n+          if (hostname == null) {\n+            // hostname can be null if a node dies immediately after reading all live instances\n+            LOG.error(\"Node {} is dead. It died after the list of nodes were read.\", n);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzU5ODQ5OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MDo0N1rOHvCDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MDo0N1rOHvCDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3ODczMA==", "bodyText": "can we make this a warn log?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r519078730", "createdAt": "2020-11-07T01:40:47Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1554,12 +1580,16 @@ public ZkBackedLiveInstanceListProvider() {\n     private List<String> getLiveInstanceNames(List<String> nodes) {\n       List<String> liveInstances = new ArrayList<>();\n       for (String n : nodes) {\n-        String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n-        if (hostname == null) {\n-          // hostname can be null if a node dies immediately after reading all live instances\n-          LOG.error(\"Node {} is dead. Likely cause it dies after reading list of nodes.\", n);\n-        } else {\n-          liveInstances.add(formatZkInstance(hostname, n));\n+        try {\n+          String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n+          if (hostname == null) {\n+            // hostname can be null if a node dies immediately after reading all live instances\n+            LOG.error(\"Node {} is dead. It died after the list of nodes were read.\", n);\n+          } else {\n+            liveInstances.add(formatZkInstance(hostname, n));\n+          }\n+        } catch (ZkNoNodeException e) {\n+          LOG.info(\"Node {} is dead. It died after the list of nodes were read.\", n);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 166}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 905, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}