{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NTc0Mjc3", "number": 758, "title": "Added committed offsets in KafkaTopicPartitionTracker and diag endpoint response", "bodyText": "Important: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md", "createdAt": "2020-10-01T22:11:27Z", "url": "https://github.com/linkedin/brooklin/pull/758", "merged": true, "mergeCommit": {"oid": "344380d7fc23318ad41d7e6d9fbcab978261afb1"}, "closed": true, "closedAt": "2020-10-13T19:28:46Z", "author": {"login": "jzakaryan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_3DeSgH2gAyNDk2NTc0Mjc3OjQ2NzFkZTVlMjlhNmI2NDRjN2MxZmE5NjIxYTljMGM1YjVjZDgwMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ5euFAFqTUwNTg1NjIxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4671de5e29a6b644c7c1fa9621a9c0c5b5cd8010", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/4671de5e29a6b644c7c1fa9621a9c0c5b5cd8010", "committedDate": "2020-08-17T18:51:53Z", "message": "Passing Kafka headers to downstream systems in KafkaConnectorTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dea3a4c5ec340a7527b81ae0ece76fa8feb19b80", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/dea3a4c5ec340a7527b81ae0ece76fa8feb19b80", "committedDate": "2020-09-23T20:17:06Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9b2d68cdd0dc6b6e6810b9fe0468b5b024f6400", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/e9b2d68cdd0dc6b6e6810b9fe0468b5b024f6400", "committedDate": "2020-10-01T22:06:54Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/cbc0df9f198f4c83954877bddf094a81771d0824", "committedDate": "2020-10-01T22:07:40Z", "message": "Added committed offsets in KafkaTopicPartitionTracker and diag endpoint response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzU0NzY4", "url": "https://github.com/linkedin/brooklin/pull/758#pullrequestreview-500754768", "createdAt": "2020-10-01T22:16:03Z", "commit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoxNjowM1rOHbca7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMjoxNjowM1rOHbca7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzOTI0NA==", "bodyText": "I was considering adding a separate ConsumerOffsets class to hold both consumed offset and committed offset and use that in the nested dictionary. But synchronizing the writes to the nested dictionaries was a not easy. onPartitionsPolled and onOffsetsCommitted calls would hold locks on the dictionaries and it would make this code bug prone and non-efficient. So I thought it would be better for the client-side to merge these dictionaries (if necessary for presentation purposes).", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r498539244", "createdAt": "2020-10-01T22:16:03Z", "author": {"login": "jzakaryan"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaTopicPartitionTracker.java", "diffHunk": "@@ -32,8 +33,8 @@\n   private final String _consumerGroupId;\n \n   private final Map<String, Set<Integer>> _topicPartitions = new ConcurrentHashMap<>();\n-\n-  private final Map<String, Map<Integer, Long>> _consumerOffsets = new ConcurrentHashMap<>();\n+  private final Map<String, Map<Integer, Long>> _consumedOffsets = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzk0ODk0", "url": "https://github.com/linkedin/brooklin/pull/758#pullrequestreview-501394894", "createdAt": "2020-10-02T19:29:42Z", "commit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOToyOTo0MlrOHb5P_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOToyOTo0MlrOHb5P_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMTU4MA==", "bodyText": "Nitpick. May be you need to call this just offsets since its being used by both _consumedOffsets and _committedOffsets", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r499011580", "createdAt": "2020-10-02T19:29:42Z", "author": {"login": "vishwajith-s"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaTopicPartitionTracker.java", "diffHunk": "@@ -75,22 +76,30 @@ public void onPartitionsRevoked(@NotNull Collection<TopicPartition> topicPartiti\n       }\n     });\n \n-    // Remove consumer offsets for partitions that have been revoked. The reason to remove the consumer offsets\n+    // Remove consumed offsets for partitions that have been revoked. The reason to remove the consumed offsets\n     // here is that another host may handle these partitions due to rebalance, and we don't want to have duplicate\n     // consumer offsets for affected partitions (even though the ones with larger offsets wins).\n+    removeOffsetsForTopicPartition(topicPartitions, _consumedOffsets);\n+\n+    // Remove committed offsets for partitions that have been revoked.\n+    removeOffsetsForTopicPartition(topicPartitions, _committedOffsets);\n+  }\n+\n+  private void removeOffsetsForTopicPartition(@NotNull Collection<TopicPartition> topicPartitions,\n+      Map<String, Map<Integer, Long>> committedOffsets) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODU2MjE0", "url": "https://github.com/linkedin/brooklin/pull/758#pullrequestreview-505856214", "createdAt": "2020-10-09T17:15:23Z", "commit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzoxNToyNFrOHfSULw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzoxNToyNFrOHfSULw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2Nzk4Mw==", "bodyText": "+1 make this generic. We also intend to add end offsets to this list.", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r502567983", "createdAt": "2020-10-09T17:15:24Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaTopicPartitionTracker.java", "diffHunk": "@@ -75,22 +76,30 @@ public void onPartitionsRevoked(@NotNull Collection<TopicPartition> topicPartiti\n       }\n     });\n \n-    // Remove consumer offsets for partitions that have been revoked. The reason to remove the consumer offsets\n+    // Remove consumed offsets for partitions that have been revoked. The reason to remove the consumed offsets\n     // here is that another host may handle these partitions due to rebalance, and we don't want to have duplicate\n     // consumer offsets for affected partitions (even though the ones with larger offsets wins).\n+    removeOffsetsForTopicPartition(topicPartitions, _consumedOffsets);\n+\n+    // Remove committed offsets for partitions that have been revoked.\n+    removeOffsetsForTopicPartition(topicPartitions, _committedOffsets);\n+  }\n+\n+  private void removeOffsetsForTopicPartition(@NotNull Collection<TopicPartition> topicPartitions,\n+      Map<String, Map<Integer, Long>> committedOffsets) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMTU4MA=="}, "originalCommit": {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 296, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}