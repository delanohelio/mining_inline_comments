{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNjM0ODAw", "number": 766, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowNTo1M1rOEtqXNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjoyMzozMlrOEtsItQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE1NDQ2OnYy", "diffSide": "RIGHT", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaConnectorTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowNTo1NFrOHhlChA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowOToyNFrOHhlJNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MTkwOA==", "bodyText": "I wonder if metadata.put(\"kafka-origin-partition\", partitionStr); from line 129 is being used anywhere", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504971908", "createdAt": "2020-10-14T21:05:54Z", "author": {"login": "celiakung"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaConnectorTask.java", "diffHunk": "@@ -141,6 +141,7 @@ protected DatastreamProducerRecord translate(ConsumerRecord<?, ?> fromKafka, Ins\n       metadata.put(BrooklinEnvelopeMetadataConstants.EVENT_TIMESTAMP, String.valueOf(readTime.toEpochMilli()));\n       eventsSourceTimestamp = fromKafka.timestamp();\n     }\n+    metadata.put(BrooklinEnvelopeMetadataConstants.SOURCE_PARTITION, partitionStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzYyMQ==", "bodyText": "@celiakung at the moment I don't see it being used. Also, since metadata isn't propagated to the downstream Kafka, this data is lost (I remember seeing a few asks from users). I did consider using \"kafka-origin-partition\", but since these are declared only for the Kafka connectors, I thought it'll make more sense to add a Metadata field which can be used by any connector that wants this  feature. Let me know if you think it may make sense to move out these metadata fields (all origin fields) to the common metadata constants. I wasn't sure since I wasn't sure why these are present.", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504973621", "createdAt": "2020-10-14T21:09:24Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaConnectorTask.java", "diffHunk": "@@ -141,6 +141,7 @@ protected DatastreamProducerRecord translate(ConsumerRecord<?, ?> fromKafka, Ins\n       metadata.put(BrooklinEnvelopeMetadataConstants.EVENT_TIMESTAMP, String.valueOf(readTime.toEpochMilli()));\n       eventsSourceTimestamp = fromKafka.timestamp();\n     }\n+    metadata.put(BrooklinEnvelopeMetadataConstants.SOURCE_PARTITION, partitionStr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MTkwOA=="}, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE2MDk3OnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowODowOVrOHhlGmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxNDozM1rOHhlSeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3Mjk1Mg==", "bodyText": "Suggest to update param docs & clarify that \"partition\" is destination Kafka topic partition", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504972952", "createdAt": "2020-10-14T21:08:09Z", "author": {"login": "celiakung"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -14,9 +14,10 @@\n   private final int _partition;\n   private final String _checkpoint;\n   private final int _eventIndex;\n+  private final int _sourcePartition;\n \n   /**\n-   * Construct an instance of DatastreamRecordMetadata. Defaults the event index to 0.\n+   * Construct an instance of DatastreamRecordMetadata. Defaults the event index to 0 and source partition to -1.\n    * @param  checkpoint checkpoint string\n    * @param topic Kafka topic name\n    * @param partition Kafka topic partition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NTk5Mg==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504975992", "createdAt": "2020-10-14T21:14:33Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -14,9 +14,10 @@\n   private final int _partition;\n   private final String _checkpoint;\n   private final int _eventIndex;\n+  private final int _sourcePartition;\n \n   /**\n-   * Construct an instance of DatastreamRecordMetadata. Defaults the event index to 0.\n+   * Construct an instance of DatastreamRecordMetadata. Defaults the event index to 0 and source partition to -1.\n    * @param  checkpoint checkpoint string\n    * @param topic Kafka topic name\n    * @param partition Kafka topic partition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3Mjk1Mg=="}, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE2MTc1OnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowODoyNFrOHhlHEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxNDozOVrOHhlSrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzA3NQ==", "bodyText": "Suggest clarifying this is destination", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504973075", "createdAt": "2020-10-14T21:08:24Z", "author": {"login": "celiakung"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -34,12 +36,14 @@ public DatastreamRecordMetadata(String checkpoint, String topic, int partition)\n    * @param topic Kafka topic name\n    * @param partition Kafka topic partition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NjA0NQ==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504976045", "createdAt": "2020-10-14T21:14:39Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -34,12 +36,14 @@ public DatastreamRecordMetadata(String checkpoint, String topic, int partition)\n    * @param topic Kafka topic name\n    * @param partition Kafka topic partition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzA3NQ=="}, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE2MjM3OnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowODozNFrOHhlHaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMToxNDo0M1rOHhlSzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzE2MA==", "bodyText": "Partition -> Destination Partition ?", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504973160", "createdAt": "2020-10-14T21:08:34Z", "author": {"login": "celiakung"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -71,9 +75,16 @@ public int getEventIndex() {\n     return _eventIndex;\n   }\n \n+  /**\n+   * Partition number from which the record was consumed.\n+   */\n+  public int getSourcePartition() {\n+    return _sourcePartition;\n+  }\n+\n   @Override\n   public String toString() {\n-    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d\", _checkpoint, _topic, _partition,\n-        _eventIndex);\n+    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d, Source Partition: %d\", _checkpoint,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NjA3OA==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r504976078", "createdAt": "2020-10-14T21:14:43Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -71,9 +75,16 @@ public int getEventIndex() {\n     return _eventIndex;\n   }\n \n+  /**\n+   * Partition number from which the record was consumed.\n+   */\n+  public int getSourcePartition() {\n+    return _sourcePartition;\n+  }\n+\n   @Override\n   public String toString() {\n-    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d\", _checkpoint, _topic, _partition,\n-        _eventIndex);\n+    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d, Source Partition: %d\", _checkpoint,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzE2MA=="}, "originalCommit": {"oid": "4e60a18511605d3e3d87712173fcd1cfb85e2354"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzQzMDk5OnYy", "diffSide": "RIGHT", "path": "datastream-common/src/main/java/com/linkedin/datastream/common/BrooklinEnvelopeMetadataConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjoyMDoxNFrOHhn0wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMzowNDo0MVrOHhpvkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxNzUzNw==", "bodyText": "Nit: Is it possible to merge this constant with \"kafka-origin-offset\"? It feels like we have some redundancy in metadata fields otherwise.", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r505017537", "createdAt": "2020-10-14T22:20:14Z", "author": {"login": "jzakaryan"}, "path": "datastream-common/src/main/java/com/linkedin/datastream/common/BrooklinEnvelopeMetadataConstants.java", "diffHunk": "@@ -36,4 +36,7 @@\n \n   // Timestamp of the event when it was written in the last leg (i.e. the Source of the connector)\n   public static final String SOURCE_TIMESTAMP = \"SourceTimestamp\";\n+\n+  // Source partition number from where the event was generated\n+  public static final String SOURCE_PARTITION = \"SourcePartition\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13cec012ba224c4ce7dc24e4dfa92bddda893a70"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA0ODk3Nw==", "bodyText": "Discussed this a little bit. One problem with reconciling this with \"kafka-origin-partition\" and even moving all \"kafka-origin-*\" constants into this file is that these are very specific to Kafka based sources. Want to have a generic field that isn't tied to Kafka, as this concept of \"partition\" is generic and can even mean a database partitioning scheme. Plus need the constant to be accessible in the transport layers which ideally shouldn't be tied to the source connector type.", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r505048977", "createdAt": "2020-10-14T23:04:41Z", "author": {"login": "somandal"}, "path": "datastream-common/src/main/java/com/linkedin/datastream/common/BrooklinEnvelopeMetadataConstants.java", "diffHunk": "@@ -36,4 +36,7 @@\n \n   // Timestamp of the event when it was written in the last leg (i.e. the Source of the connector)\n   public static final String SOURCE_TIMESTAMP = \"SourceTimestamp\";\n+\n+  // Source partition number from where the event was generated\n+  public static final String SOURCE_PARTITION = \"SourcePartition\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxNzUzNw=="}, "originalCommit": {"oid": "13cec012ba224c4ce7dc24e4dfa92bddda893a70"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzQ0NTAxOnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjoyMzozMlrOHhn-Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMzowMjoxNlrOHhppEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxOTk1MQ==", "bodyText": "Nit: It may be worth renaming partition to destinationPartition to make it explicit to the users.", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r505019951", "createdAt": "2020-10-14T22:23:32Z", "author": {"login": "jzakaryan"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -71,9 +75,16 @@ public int getEventIndex() {\n     return _eventIndex;\n   }\n \n+  /**\n+   * Partition number from which the record was consumed.\n+   */\n+  public int getSourcePartition() {\n+    return _sourcePartition;\n+  }\n+\n   @Override\n   public String toString() {\n-    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d\", _checkpoint, _topic, _partition,\n-        _eventIndex);\n+    return String.format(\"Checkpoint: %s, Topic: %s, Destination Partition: %d, Event Index: %d, Source Partition: %d\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13cec012ba224c4ce7dc24e4dfa92bddda893a70"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA0NzMxNQ==", "bodyText": "Discussed offline and decided leave partition as is for now, since this is touched in many places and has some integration effort. Will open a ticket to fix this later.", "url": "https://github.com/linkedin/brooklin/pull/766#discussion_r505047315", "createdAt": "2020-10-14T23:02:16Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/api/transport/DatastreamRecordMetadata.java", "diffHunk": "@@ -71,9 +75,16 @@ public int getEventIndex() {\n     return _eventIndex;\n   }\n \n+  /**\n+   * Partition number from which the record was consumed.\n+   */\n+  public int getSourcePartition() {\n+    return _sourcePartition;\n+  }\n+\n   @Override\n   public String toString() {\n-    return String.format(\"Checkpoint: %s, Topic: %s, Partition: %d, Event Index: %d\", _checkpoint, _topic, _partition,\n-        _eventIndex);\n+    return String.format(\"Checkpoint: %s, Topic: %s, Destination Partition: %d, Event Index: %d, Source Partition: %d\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxOTk1MQ=="}, "originalCommit": {"oid": "13cec012ba224c4ce7dc24e4dfa92bddda893a70"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 898, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}