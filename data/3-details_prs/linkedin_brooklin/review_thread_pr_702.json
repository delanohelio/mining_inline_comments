{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzc4ODkw", "number": 702, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTozODozN1rODx1SAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo0ODozMlrOD1-_6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTc5Nzc4OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTozODozN1rOGFh64g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoxNDo0MlrOGFi5RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1MTgxMA==", "bodyText": "nit: alternative --> alternate everywhere.", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408451810", "createdAt": "2020-04-14T21:38:37Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -90,11 +96,17 @@\n   private final boolean _warnLogLatencyEnabled;\n   // Latency threshold at which to log a warning message\n   private final long _warnLogLatencyThresholdMs;\n+  // Whether to enable logging the list of TopicPartitions with events outside alternative SLA", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc4MA==", "bodyText": "good catch \ud83e\udd23somehow my brain deduped the two words into one", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408467780", "createdAt": "2020-04-14T22:14:42Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -90,11 +96,17 @@\n   private final boolean _warnLogLatencyEnabled;\n   // Latency threshold at which to log a warning message\n   private final long _warnLogLatencyThresholdMs;\n+  // Whether to enable logging the list of TopicPartitions with events outside alternative SLA", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1MTgxMA=="}, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTgwNjk2OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTo0MTo0MFrOGFiAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo0Nzo1MlrOGLoqiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1MzIzNw==", "bodyText": "is the move inside of _logger.isDebugEnabled() intentional?", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408453237", "createdAt": "2020-04-14T21:41:40Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -286,6 +325,10 @@ private void reportMetrics(DatastreamRecordMetadata metadata, long eventsSourceT\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, AGGREGATE, TOTAL_EVENTS_PRODUCED, 1);\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, _datastreamTask.getConnectorType(), TOTAL_EVENTS_PRODUCED,\n           1);\n+\n+      // Log information about events if either warn logging is enabled or logging for topic partitions outside\n+      // alternative SLA is enabled\n+      performSlaRelatedLogging(metadata, eventsSourceTimestamp, sourceToDestinationLatencyMs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzk4MQ==", "bodyText": "this is not within the if block, the diff just swallowed the rest of the if block.", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408467981", "createdAt": "2020-04-14T22:15:15Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -286,6 +325,10 @@ private void reportMetrics(DatastreamRecordMetadata metadata, long eventsSourceT\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, AGGREGATE, TOTAL_EVENTS_PRODUCED, 1);\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, _datastreamTask.getConnectorType(), TOTAL_EVENTS_PRODUCED,\n           1);\n+\n+      // Log information about events if either warn logging is enabled or logging for topic partitions outside\n+      // alternative SLA is enabled\n+      performSlaRelatedLogging(metadata, eventsSourceTimestamp, sourceToDestinationLatencyMs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1MzIzNw=="}, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1Mzc2OQ==", "bodyText": "Ah sorry, got confused with the indent.", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r414853769", "createdAt": "2020-04-24T20:47:52Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -286,6 +325,10 @@ private void reportMetrics(DatastreamRecordMetadata metadata, long eventsSourceT\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, AGGREGATE, TOTAL_EVENTS_PRODUCED, 1);\n       _dynamicMetricsManager.createOrUpdateCounter(MODULE, _datastreamTask.getConnectorType(), TOTAL_EVENTS_PRODUCED,\n           1);\n+\n+      // Log information about events if either warn logging is enabled or logging for topic partitions outside\n+      // alternative SLA is enabled\n+      performSlaRelatedLogging(metadata, eventsSourceTimestamp, sourceToDestinationLatencyMs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1MzIzNw=="}, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTgzMjYzOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTo0OTo1OFrOGFiPuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoxNjoxNlrOGFi7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NzE0NQ==", "bodyText": "Why do we need this special class when kafka has TopicPartition class?", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408457145", "createdAt": "2020-04-14T21:49:58Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -413,4 +456,39 @@ private String getDatastreamName() {\n \n     return Collections.unmodifiableList(metrics);\n   }\n+\n+  /**\n+   * This class encapsulates the topic and partition information for a given event\n+   */\n+  static class TopicPartitionInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2ODM3Ng==", "bodyText": "yeah, was debating whether to add a dependency on kafka or not for this module so I implemented my own. But you're right, it's just silly code duplication. I'll fix this to use Kafka's TopicPartition.", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r408468376", "createdAt": "2020-04-14T22:16:16Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -413,4 +456,39 @@ private String getDatastreamName() {\n \n     return Collections.unmodifiableList(metrics);\n   }\n+\n+  /**\n+   * This class encapsulates the topic and partition information for a given event\n+   */\n+  static class TopicPartitionInfo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ1NzE0NQ=="}, "originalCommit": {"oid": "ff8dabddfb40aacaa2d13dfd2e74e4d94c570bd3"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTMzMjg5OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo0ODozMlrOGLrw4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTo1MzozMlrOGLukNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNDU0NQ==", "bodyText": ".toString() is extraneous", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r414904545", "createdAt": "2020-04-24T22:48:32Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -235,6 +253,31 @@ private void reportSLAMetrics(String topicOrDatastreamName, boolean isWithinSLA,\n         outsideSLAValue);\n   }\n \n+  private void performSlaRelatedLogging(DatastreamRecordMetadata metadata, long eventsSourceTimestamp,\n+      long sourceToDestinationLatencyMs) {\n+    if (_warnLogLatencyEnabled && (sourceToDestinationLatencyMs > _warnLogLatencyThresholdMs)) {\n+      _logger.warn(\"Source to destination latency {} ms is higher than {} ms, Source Timestamp: {}, Metadata: {}\",\n+          sourceToDestinationLatencyMs, _warnLogLatencyThresholdMs, eventsSourceTimestamp, metadata.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984bb03c0d4d646921fb9c5dcc27c48cd751746a"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1MDQ1Mg==", "bodyText": "removed", "url": "https://github.com/linkedin/brooklin/pull/702#discussion_r414950452", "createdAt": "2020-04-25T01:53:32Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -235,6 +253,31 @@ private void reportSLAMetrics(String topicOrDatastreamName, boolean isWithinSLA,\n         outsideSLAValue);\n   }\n \n+  private void performSlaRelatedLogging(DatastreamRecordMetadata metadata, long eventsSourceTimestamp,\n+      long sourceToDestinationLatencyMs) {\n+    if (_warnLogLatencyEnabled && (sourceToDestinationLatencyMs > _warnLogLatencyThresholdMs)) {\n+      _logger.warn(\"Source to destination latency {} ms is higher than {} ms, Source Timestamp: {}, Metadata: {}\",\n+          sourceToDestinationLatencyMs, _warnLogLatencyThresholdMs, eventsSourceTimestamp, metadata.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNDU0NQ=="}, "originalCommit": {"oid": "984bb03c0d4d646921fb9c5dcc27c48cd751746a"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 989, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}