{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODcxODg0", "number": 764, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1MzowN1rOEtIr7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1Njo0MFrOEtIxEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzYzNjkzOnYy", "diffSide": "RIGHT", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1MzowN1rOHgwj4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1MTozN1rOHgyrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMjA5Ng==", "bodyText": "IMO, Splitting this in two lines will make the search easier while debugging.", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504112096", "createdAt": "2020-10-13T16:53:07Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            List<String> removedTopicPartitions = _subscribedPartitions\n+                .stream()\n+                .filter(topicPartition -> !newPartitionInfo.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            LOG.info(\"TopicPartitions for {} that are to be added: {} and that are to be removed: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0Njc4MA==", "bodyText": "done", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504146780", "createdAt": "2020-10-13T17:51:37Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            List<String> removedTopicPartitions = _subscribedPartitions\n+                .stream()\n+                .filter(topicPartition -> !newPartitionInfo.contains(topicPartition))\n+                .collect(Collectors.toList());\n+            LOG.info(\"TopicPartitions for {} that are to be added: {} and that are to be removed: {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMjA5Ng=="}, "originalCommit": {"oid": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY1MDA5OnYy", "diffSide": "RIGHT", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1Njo0MFrOHgwsfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1MjoyMFrOHgytAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNDMwMg==", "bodyText": "Converting these list into set, cache the set as well and doing:\nadded = NewSet - ExistingSet or NewSet.removeall(existingSet)\nremoved = ExistingSet - NewSet or ExistingSet.removeall(NewSet)\nwill make this operation faster. Right now its O(N^2) complexity.", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504114302", "createdAt": "2020-10-13T16:56:40Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NzIwMA==", "bodyText": "Modified to use a set, found the intersection of the two sets and removed the intersection from each.", "url": "https://github.com/linkedin/brooklin/pull/764#discussion_r504147200", "createdAt": "2020-10-13T17:52:20Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/mirrormaker/KafkaMirrorMakerConnector.java", "diffHunk": "@@ -313,12 +313,23 @@ public void run() {\n       while (!isInterrupted() && !_shutdown) {\n         try {\n           List<String> newPartitionInfo = getPartitionsInfo(consumer);\n-          LOG.debug(\"Fetch partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-              , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+          LOG.debug(\"Fetch Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+              datastream.getName(), _subscribedPartitions, newPartitionInfo);\n \n           if (!ListUtils.isEqualList(newPartitionInfo, _subscribedPartitions)) {\n-            LOG.info(\"Get updated partition info for {}, oldPartitionInfo: {}, new Partition info: {}\"\n-                , datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+            LOG.info(\"Get updated Partitions Info for {}, old Partitions Info: {}, new Partitions Info: {}\",\n+                datastream.getName(), _subscribedPartitions, newPartitionInfo);\n+\n+            List<String> addedTopicPartitions = newPartitionInfo\n+                .stream()\n+                .filter(topicPartition -> !_subscribedPartitions.contains(topicPartition))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNDMwMg=="}, "originalCommit": {"oid": "4e9d265d91f4ab8e4e0ba93731b4c7d822d5e24c"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 893, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}