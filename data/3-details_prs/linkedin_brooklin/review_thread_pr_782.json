{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyOTU5OTQ0", "number": 782, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozMjo0OVrOE6z2eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozNjoxMlrOE6z51Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTAyMzkyOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozMjo0OVrOH2GihQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjo0NDo0MFrOH2O03g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MjI5Mw==", "bodyText": "Nit: this check is not really necessary here. limit() will work on foundDatastreamTasks with size <= numTasks", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526492293", "createdAt": "2020-11-18T23:32:49Z", "author": {"login": "jzakaryan"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java", "diffHunk": "@@ -128,6 +128,9 @@ public StickyMulticastStrategy(Optional<Integer> maxTasks, Optional<Integer> imb\n         allAliveTasks.addAll(foundDatastreamTasks);\n \n         if (!foundDatastreamTasks.isEmpty()) {\n+          if (foundDatastreamTasks.size() > numTasks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYyODA2Mg==", "bodyText": "Keeping this check, so that we don't stream() and limit() every time and do it when necessary. Also, added a log on Sonam's recommendation, so that we can debug if something goes wrong in partition managed.", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526628062", "createdAt": "2020-11-19T06:44:40Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java", "diffHunk": "@@ -128,6 +128,9 @@ public StickyMulticastStrategy(Optional<Integer> maxTasks, Optional<Integer> imb\n         allAliveTasks.addAll(foundDatastreamTasks);\n \n         if (!foundDatastreamTasks.isEmpty()) {\n+          if (foundDatastreamTasks.size() > numTasks) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MjI5Mw=="}, "originalCommit": {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTAzMjUzOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzozNjoxM1rOH2Gnpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODozMTozMVrOH3cP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw==", "bodyText": "Nit: spacing missing from line.", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526493607", "createdAt": "2020-11-18T23:36:13Z", "author": {"login": "jzakaryan"}, "path": "datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java", "diffHunk": "@@ -475,6 +475,31 @@ public void testTriggerRebalanceWhenDeletingDatastream() {\n         newAssignment.get(instancesBySize.get(instances.size() - 1)).size());\n   }\n \n+  @Test\n+  public void testExtraTasksAreNotAssignedDuringReassignment() {\n+    String[] instances = new String[]{\"instance1\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYyNzcyMg==", "bodyText": "sorry, not able to figure out where is space missing?", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526627722", "createdAt": "2020-11-19T06:43:47Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java", "diffHunk": "@@ -475,6 +475,31 @@ public void testTriggerRebalanceWhenDeletingDatastream() {\n         newAssignment.get(instancesBySize.get(instances.size() - 1)).size());\n   }\n \n+  @Test\n+  public void testExtraTasksAreNotAssignedDuringReassignment() {\n+    String[] instances = new String[]{\"instance1\"};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw=="}, "originalCommit": {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg5NjU0Mw==", "bodyText": "After the opening curly brace and before the closing curly brace.", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r527896543", "createdAt": "2020-11-20T18:31:31Z", "author": {"login": "jzakaryan"}, "path": "datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java", "diffHunk": "@@ -475,6 +475,31 @@ public void testTriggerRebalanceWhenDeletingDatastream() {\n         newAssignment.get(instancesBySize.get(instances.size() - 1)).size());\n   }\n \n+  @Test\n+  public void testExtraTasksAreNotAssignedDuringReassignment() {\n+    String[] instances = new String[]{\"instance1\"};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw=="}, "originalCommit": {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 932, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}