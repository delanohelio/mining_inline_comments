{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzM2Mzkw", "number": 786, "title": "Pre-commit and post-commit hooks in AbstractKafkaMirrorMakerConnectorTask", "bodyText": "Sometimes it's necessary to perform pre-commit or post-commit operations in BMM connectors tasks. One could override/extend abstract method maybeCommitOffsets() for that purpose, but that method is called each time messages are polled and sent, and not always a call to maybeCommitOffsets results in offsets actually being committed.\nThe changes in this pull request introduce dedicated pre-commit and post-commit hooks that are called before and after a commit attempt. The default implementation of preCommitHook() is a no-op, while the default implementation of postCommitHook() logs an error if the commit failed and throws an exception. Please note that the latter behavior was previously part of the commitWithRetries() method.\nUpdate: Post-commit hook has been removed after discussing with @vmaheshw and @somandal. There's no use case for it now and it can be added back when there is one.", "createdAt": "2020-12-14T19:07:13Z", "url": "https://github.com/linkedin/brooklin/pull/786", "merged": true, "mergeCommit": {"oid": "474dd098ef75a580be9feb3dadbc4a075e8c4669"}, "closed": true, "closedAt": "2021-01-04T22:43:47Z", "author": {"login": "jzakaryan"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmKaBjAH2gAyNTM5NzM2MzkwOjYyYzRjNjU4YWU5NWZhNTNhYjNmOWE2OWZhNThmNWViZWU4Yzk1OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds-FyGAFqTU2MTM5Mzc2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62c4c658ae95fa53ab3f9a69fa58f5ebee8c9599", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/62c4c658ae95fa53ab3f9a69fa58f5ebee8c9599", "committedDate": "2020-12-14T18:53:50Z", "message": "Added pre-commit and post-commit hooks in AbstractKafkaMirrorMakerConnectorTask"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxODM1MTA2", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-551835106", "createdAt": "2020-12-14T19:44:23Z", "commit": {"oid": "62c4c658ae95fa53ab3f9a69fa58f5ebee8c9599"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTo0NDoyM1rOIFjwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTo0NjoxNlrOIFj39g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5OTUyOQ==", "bodyText": "It'll be good if the postCommitHook() can get hold of the exception causing the commit to fail.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r542699529", "createdAt": "2020-12-14T19:44:23Z", "author": {"login": "abhishekmendhekar"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -774,6 +770,23 @@ protected void preConsumerPollHook() {\n     }\n   }\n \n+  /**\n+   * Pre commit hook for all operations that need to be performed before committing offsets.\n+   */\n+  protected void preCommitHook() { }\n+\n+  /**\n+   * Post commit hook for all operations that need to be performed after committing offsets.\n+   * @param success Indicates whether the commit attempt was successful or not.\n+   */\n+  protected void postCommitHook(boolean success) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62c4c658ae95fa53ab3f9a69fa58f5ebee8c9599"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcwMTU1OA==", "bodyText": "I think the postCommitHook() should not throw the exception because if the method is overridden the derived class and it fails to implement this logic then ab exception will never be thrown.\nInstead the logic should remain the same as before and this operation can remain as a no-op.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r542701558", "createdAt": "2020-12-14T19:46:16Z", "author": {"login": "abhishekmendhekar"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -774,6 +770,23 @@ protected void preConsumerPollHook() {\n     }\n   }\n \n+  /**\n+   * Pre commit hook for all operations that need to be performed before committing offsets.\n+   */\n+  protected void preCommitHook() { }\n+\n+  /**\n+   * Post commit hook for all operations that need to be performed after committing offsets.\n+   * @param success Indicates whether the commit attempt was successful or not.\n+   */\n+  protected void postCommitHook(boolean success) {\n+    if (!success) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62c4c658ae95fa53ab3f9a69fa58f5ebee8c9599"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20d280afce29a4a4938ca84402a3caec7cb9ed5a", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/20d280afce29a4a4938ca84402a3caec7cb9ed5a", "committedDate": "2020-12-14T21:35:45Z", "message": "Propagating last kafka exception in a commit attempt to post-commit hook"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTE1MjI5", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-551915229", "createdAt": "2020-12-14T21:39:33Z", "commit": {"oid": "20d280afce29a4a4938ca84402a3caec7cb9ed5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTozOTozM1rOIFrOvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTozOTozM1rOIFrOvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgyMjA3OA==", "bodyText": "I think there are many other exceptions that can be thrown here, other than KafkaException. (check documentation for commitSync())\nI'd suggest adding a catch block for those exceptions too, where you just cache the exception.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r542822078", "createdAt": "2020-12-14T21:39:33Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -618,6 +621,7 @@ protected void commitWithRetries(Consumer<?, ?> consumer, Optional<Map<TopicPart\n         }\n         _logger.info(\"Commit succeeded.\");\n       } catch (KafkaException e) {\n+        lastKafkaExceptionRef.set(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d280afce29a4a4938ca84402a3caec7cb9ed5a"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb64c11ff076a7f4c5ffde48b12e3814dead4802", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/cb64c11ff076a7f4c5ffde48b12e3814dead4802", "committedDate": "2020-12-14T22:13:52Z", "message": "Fixed styling issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTQyMTQ1", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-551942145", "createdAt": "2020-12-14T22:20:17Z", "commit": {"oid": "20d280afce29a4a4938ca84402a3caec7cb9ed5a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0OTg0NjU5", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-554984659", "createdAt": "2020-12-17T21:01:36Z", "commit": {"oid": "cb64c11ff076a7f4c5ffde48b12e3814dead4802"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTowMTozNlrOIIIpPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMToxMDowOVrOIII6ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQwMTE0OA==", "bodyText": "During shutdown, if it hits KafkaException, it returns true, which does not really mean success. This can impact the postCommit hook.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r545401148", "createdAt": "2020-12-17T21:01:36Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -618,6 +621,7 @@ protected void commitWithRetries(Consumer<?, ?> consumer, Optional<Map<TopicPart\n         }\n         _logger.info(\"Commit succeeded.\");\n       } catch (KafkaException e) {\n+        lastKafkaExceptionRef.set(e);\n         if (_shutdown) {\n           _logger.info(\"Caught KafkaException in commitWithRetries while shutting down, so exiting.\", e);\n           return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb64c11ff076a7f4c5ffde48b12e3814dead4802"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQwMjAxOQ==", "bodyText": "Since, we don't have a concrete usage for this hook in open source and we currently have identified only the need for preCommit hook, will it be okay to postpone it, till either we identify the use for it or we get any pull/feature request. This will help us in avoiding an unnecessary tech debt to keep on maintaining.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r545402019", "createdAt": "2020-12-17T21:03:20Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -774,6 +780,22 @@ protected void preConsumerPollHook() {\n     }\n   }\n \n+  /**\n+   * Pre commit hook for all operations that need to be performed before committing offsets.\n+   */\n+  protected void preCommitHook() { }\n+\n+  /**\n+   * Post commit hook for all operations that need to be performed after committing offsets.\n+   * <p>\n+   *     Note: A commit attempt can be declared successful even when there's an exception. This can happen when a commit\n+   *     exception is thrown during task shutdown.\n+   * </p>\n+   * @param success Indicates whether the commit attempt was successful or not.\n+   * @param exception Exception caught during a commit attempt.\n+   */\n+  protected void postCommitHook(boolean success, KafkaException exception) { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb64c11ff076a7f4c5ffde48b12e3814dead4802"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQwNTYyNg==", "bodyText": "If preCommitHook() threw exception, the commit will not go through. Your current use-case to have audit related drain in the preCommitHook() also adds a dependency that if there is any failure in audit, the commits will not go through. Is this really expected ? Is it possible to have the audit system throwing errors while the regular producers are working fine.", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r545405626", "createdAt": "2020-12-17T21:10:09Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -608,6 +609,8 @@ protected void maybeCommitOffsetsInternal(Consumer<?, ?> consumer, boolean force\n \n   protected void commitWithRetries(Consumer<?, ?> consumer, Optional<Map<TopicPartition, OffsetAndMetadata>> offsets)\n       throws DatastreamRuntimeException {\n+    preCommitHook();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb64c11ff076a7f4c5ffde48b12e3814dead4802"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cee0e986d31ac1437a4b1900bc43f98b7e1e86e5", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/cee0e986d31ac1437a4b1900bc43f98b7e1e86e5", "committedDate": "2020-12-21T23:56:02Z", "message": "Removed post-commit hook. Added a note in javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NzYwNjkx", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-556760691", "createdAt": "2020-12-22T01:23:26Z", "commit": {"oid": "cee0e986d31ac1437a4b1900bc43f98b7e1e86e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMToyMzoyN1rOIJrHbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMToyMzoyN1rOIJrHbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAxNDUwOA==", "bodyText": "Can we remove this now that we no longer need to pass it to the postCommitHook()?", "url": "https://github.com/linkedin/brooklin/pull/786#discussion_r547014508", "createdAt": "2020-12-22T01:23:27Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -608,6 +609,8 @@ protected void maybeCommitOffsetsInternal(Consumer<?, ?> consumer, boolean force\n \n   protected void commitWithRetries(Consumer<?, ?> consumer, Optional<Map<TopicPartition, OffsetAndMetadata>> offsets)\n       throws DatastreamRuntimeException {\n+    preCommitHook();\n+    AtomicReference<KafkaException> lastKafkaExceptionRef = new AtomicReference<>(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cee0e986d31ac1437a4b1900bc43f98b7e1e86e5"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f375926b84889a701e69d8ba07036728605a1c", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/40f375926b84889a701e69d8ba07036728605a1c", "committedDate": "2021-01-04T20:13:34Z", "message": "Removed unnecessary code\n\nRemoved unnecessary reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzg2ODgy", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-561386882", "createdAt": "2021-01-04T22:17:00Z", "commit": {"oid": "40f375926b84889a701e69d8ba07036728605a1c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzkzNzY5", "url": "https://github.com/linkedin/brooklin/pull/786#pullrequestreview-561393769", "createdAt": "2021-01-04T22:30:20Z", "commit": {"oid": "40f375926b84889a701e69d8ba07036728605a1c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 349, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}