{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNjI0NTAw", "number": 731, "title": "Separated test for auto pause and fixed a potential race condition", "bodyText": "This pull request addresses the flakiness of testInFlightMessageCount(). That test is simulating errors while producing messages to a few topics and asserts that the messages are reported as being in-flight (i.e. send executed but not the send callback). The flakiness was due to the assertion that checked if the topics that failed to send a message had their partitions paused.\nThat assertion has been separated into a test method of its own to have more granular tests and localize flaky tests/test failures around a feature. Also, the assertion didn't poll for the condition, and I think there could be a race condition between test method and connector pausing partitions.\nImportant: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md", "createdAt": "2020-07-17T00:22:44Z", "url": "https://github.com/linkedin/brooklin/pull/731", "merged": true, "mergeCommit": {"oid": "ec506c4e15e494d5bde46bcd660f4ce8dcc87b54"}, "closed": true, "closedAt": "2020-07-21T16:33:16Z", "author": {"login": "jzakaryan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1oeb_gH2gAyNDUwNjI0NTAwOmU1OTAxM2M0Y2Y1YmUwNWViNTBjZWNkODQyNzQ4ZGJhOWY2ZjhiNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2_g-pAFqTQ1MjEzOTE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/e59013c4cf5be05eb50cecd842748dba9f6f8b63", "committedDate": "2020-07-17T00:13:31Z", "message": "Separated test for auto pause and fixed a potential race condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzAxNDMy", "url": "https://github.com/linkedin/brooklin/pull/731#pullrequestreview-450301432", "createdAt": "2020-07-17T00:31:01Z", "commit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDozMTowMVrOGzBUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDozNzo0NVrOGzBbIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjE1Ng==", "bodyText": "nit: space between topic and :\nString topic : cookieTopics", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456152156", "createdAt": "2020-07-17T00:31:01Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjM3NQ==", "bodyText": "nit: fix comment to discuss cookie instead of Pizza", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456152375", "createdAt": "2020-07-17T00:31:50Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzEyMQ==", "bodyText": "I'd still add the following assertion:\n// verify that none of the events were sent because of send error Assert.assertTrue(datastreamProducer.getEvents().isEmpty(), \"No events should have been successfully sent\");", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153121", "createdAt": "2020-07-17T00:34:54Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {\n+      KafkaMirrorMakerConnectorTestUtils.produceEvents(topic, 1, _kafkaCluster);\n+    }\n+\n+    Assert.assertTrue(PollUtils.poll(() -> connectorTask.getAutoPausedSourcePartitions().size() == cookieTopics.length, POLL_PERIOD_MS, POLL_TIMEOUT_MS),\n+        \"All topics should have had auto-paused partitions\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMyMg==", "bodyText": "nit: space between topic and :\nString topic : cookieTopics", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153322", "createdAt": "2020-07-17T00:35:35Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzU1Ng==", "bodyText": "can you print the list of topics in the auto pause list when printing the reason for failure? Will be easier to compare which topics were auto-paused and which weren't", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153556", "createdAt": "2020-07-17T00:36:25Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {\n+      KafkaMirrorMakerConnectorTestUtils.produceEvents(topic, 1, _kafkaCluster);\n+    }\n+\n+    Assert.assertTrue(PollUtils.poll(() -> connectorTask.getAutoPausedSourcePartitions().size() == cookieTopics.length, POLL_PERIOD_MS, POLL_TIMEOUT_MS),\n+        \"All topics should have had auto-paused partitions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1Mzg5MA==", "bodyText": "\ud83d\ude0b", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153890", "createdAt": "2020-07-17T00:37:45Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzA4MjA5", "url": "https://github.com/linkedin/brooklin/pull/731#pullrequestreview-450308209", "createdAt": "2020-07-17T00:55:38Z", "commit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDo1NTozOFrOGzBuIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDo1NTozOFrOGzBuIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1ODc1Mg==", "bodyText": "While you're at it, can you also fix these logs? They all print \"yummyTopic\" even though we check for the other topics.", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456158752", "createdAt": "2020-07-17T00:55:38Z", "author": {"login": "somandal"}, "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1184,8 +1221,6 @@ public void testInFlightMessageCount() throws Exception {\n \n     // verify the states response returned by diagnostics endpoint contains correct counts\n     KafkaDatastreamStatesResponse statesResponse = connectorTask.getKafkaDatastreamStatesResponse();\n-    Assert.assertEquals(statesResponse.getAutoPausedPartitions().size(), 3,\n-        \"All topics should have had auto-paused partitions\");\n     Assert.assertEquals(\n         statesResponse.getInFlightMessageCounts().get(new FlushlessEventProducerHandler.SourcePartition(yummyTopic, 0)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "author": {"user": {"login": "jzakaryan", "name": "Jhora Zakaryan"}}, "url": "https://github.com/linkedin/brooklin/commit/51d185ba77d2b58fe539c35af2a75150dcee46b9", "committedDate": "2020-07-17T16:47:00Z", "message": "Minor fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODY2NDM0", "url": "https://github.com/linkedin/brooklin/pull/731#pullrequestreview-450866434", "createdAt": "2020-07-17T18:18:34Z", "commit": {"oid": "51d185ba77d2b58fe539c35af2a75150dcee46b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTM5MTc2", "url": "https://github.com/linkedin/brooklin/pull/731#pullrequestreview-452139176", "createdAt": "2020-07-21T05:38:02Z", "commit": {"oid": "51d185ba77d2b58fe539c35af2a75150dcee46b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 886, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}