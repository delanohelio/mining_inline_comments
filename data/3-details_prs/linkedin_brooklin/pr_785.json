{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NTcxNTAy", "number": 785, "title": "Fix the ConcurrentModificationException on the _trackEventsOutsideAltSlaMap in the EventProducer", "bodyText": "On enabling the additional warning log to track TopicPartitions seeing events outside alternate SLA, we saw an instance of STALLED partitions. Further investigation showed that the logging function in the EventProducer was throwing a ConcurrentModificationException under certain circumstances. When this occurs, the caller's onCompletion send callback isn't called. This can cause an issue where we never acknowledge the successful send, and the BMM flushless producer never commits a newer offset.\nThis PR fixes this in two ways:\n\nMake the _trackEventsOutsideAltSlaMap a ConcurrentHashMap\nCatch all exceptions that can be thrown by hashmap operations and log them rather than throwing.\n\nImportant: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md", "createdAt": "2020-12-10T01:23:28Z", "url": "https://github.com/linkedin/brooklin/pull/785", "merged": true, "mergeCommit": {"oid": "6b3b44a8187aa148bc9e8bcf87a2e374a82d3563"}, "closed": true, "closedAt": "2020-12-15T18:35:46Z", "author": {"login": "somandal"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkoGToAH2gAyNTM1NTcxNTAyOjhhMDU2NzU2ZGYyODYyM2VkMDliNmYwYjEzZTQ0NGEwY2JmODBlMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmesKmgFqTU1Mjc1MDQ4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a056756df28623ed09b6f0b13e444a0cbf80e26", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/8a056756df28623ed09b6f0b13e444a0cbf80e26", "committedDate": "2020-12-10T00:21:36Z", "message": "Fix eventProducer warning log to fix ConcurrentModificationException on the _trackEventsOutsideAltSlaMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDc4MDA3", "url": "https://github.com/linkedin/brooklin/pull/785#pullrequestreview-549478007", "createdAt": "2020-12-10T18:18:19Z", "commit": {"oid": "8a056756df28623ed09b6f0b13e444a0cbf80e26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoxODoxOVrOIDXA-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoxODoxOVrOIDXA-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5MzcyMA==", "bodyText": "ConcurrentHashMap will not throw ConcurrentModificationException. You can get rid of it.", "url": "https://github.com/linkedin/brooklin/pull/785#discussion_r540393720", "createdAt": "2020-12-10T18:18:19Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/EventProducer.java", "diffHunk": "@@ -272,20 +273,28 @@ private void performSlaRelatedLogging(DatastreamRecordMetadata metadata, long ev\n     }\n \n     if (_numEventsOutsideAltSlaLogEnabled) {\n-      if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n-        TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n-        int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n-        _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n-      }\n+      try {\n+        if (sourceToDestinationLatencyMs > _availabilityThresholdAlternateSlaMs) {\n+          TopicPartition topicPartition = new TopicPartition(metadata.getTopic(), metadata.getSourcePartition());\n+          int numEvents = _trackEventsOutsideAltSlaMap.getOrDefault(topicPartition, 0);\n+          _trackEventsOutsideAltSlaMap.put(topicPartition, numEvents + 1);\n+        }\n \n-      long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n-      if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n-        _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) ->\n-            _logger.warn(\"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n-                    + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs,\n-                timeSinceLastLog, getDatastreamName()));\n-        _trackEventsOutsideAltSlaMap.clear();\n-        _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        long timeSinceLastLog = System.currentTimeMillis() - _lastEventsOutsideAltSlaLogTimeMs;\n+        if (timeSinceLastLog >= _numEventsOutsideAltSlaFrequencyMs) {\n+          _trackEventsOutsideAltSlaMap.forEach((topicPartition, numEvents) -> _logger.warn(\n+              \"{} had {} event(s) with latency greater than alternate SLA of {} ms in the last {} ms for \"\n+                  + \"datastream {}\", topicPartition, numEvents, _availabilityThresholdAlternateSlaMs, timeSinceLastLog,\n+              getDatastreamName()));\n+          _trackEventsOutsideAltSlaMap.clear();\n+          _lastEventsOutsideAltSlaLogTimeMs = System.currentTimeMillis();\n+        }\n+      } catch (ConcurrentModificationException | NullPointerException | IllegalArgumentException | ClassCastException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a056756df28623ed09b6f0b13e444a0cbf80e26"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60bc23f356339d7a2832105695218178b25c8b9f", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/60bc23f356339d7a2832105695218178b25c8b9f", "committedDate": "2020-12-10T19:31:34Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTQ3MTcw", "url": "https://github.com/linkedin/brooklin/pull/785#pullrequestreview-549547170", "createdAt": "2020-12-10T19:49:11Z", "commit": {"oid": "60bc23f356339d7a2832105695218178b25c8b9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzUwNDgy", "url": "https://github.com/linkedin/brooklin/pull/785#pullrequestreview-552750482", "createdAt": "2020-12-15T18:31:45Z", "commit": {"oid": "60bc23f356339d7a2832105695218178b25c8b9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 346, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}