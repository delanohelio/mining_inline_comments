{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjYyMTYx", "number": 716, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToxMDo1OVrOEArUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMTo0MFrOEArgew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTQ1MTI4OnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToxMDo1OVrOGcG3MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1Njo0NFrOGcJd4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNTc0NA==", "bodyText": "Can you add a comment explaining this field comes from the Kafka header? Also my mistake, we probably shouldn't have the word \"audit\" in the name. How about renaming it to: _eventsKafkaHeaderTimestamp?", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432125744", "createdAt": "2020-05-28T21:10:59Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -31,6 +31,8 @@\n   // timestamp of when the record was sent to transport provider\n   private Optional<Long> _eventsSendTimestamp = Optional.empty();\n \n+  private Optional<Long> _eventsAuditTimestamp = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODQxOQ==", "bodyText": "I was kind of reluctant to add the word audit here too. I guess you're right. Will try to rephrase everything in more generic terms.", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432168419", "createdAt": "2020-05-28T22:56:44Z", "author": {"login": "jzakaryan"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -31,6 +31,8 @@\n   // timestamp of when the record was sent to transport provider\n   private Optional<Long> _eventsSendTimestamp = Optional.empty();\n \n+  private Optional<Long> _eventsAuditTimestamp = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNTc0NA=="}, "originalCommit": {"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTQ4MDQxOnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMDo0OFrOGcHJpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMDo0OFrOGcHJpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDQ2OQ==", "bodyText": "nit: can you rephrase this:\nGet saved Kafka header timestamp in Epoch-millis\nor something along those lines?", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130469", "createdAt": "2020-05-28T21:20:48Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -93,6 +95,20 @@ public void setEventsSendTimestamp(long timestamp) {\n     _eventsSendTimestamp = Optional.of(timestamp);\n   }\n \n+  /**\n+   * Get timestamp in Epoch-millis for when the events have been audited", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTQ4MjE4OnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMToyN1rOGcHK1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMToyN1rOGcHK1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDc3NQ==", "bodyText": "nit: can you rephrase this:\nSet the timestamp from the Kafka header in Epoch-millis\nor something along those lines?", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130775", "createdAt": "2020-05-28T21:21:27Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -93,6 +95,20 @@ public void setEventsSendTimestamp(long timestamp) {\n     _eventsSendTimestamp = Optional.of(timestamp);\n   }\n \n+  /**\n+   * Get timestamp in Epoch-millis for when the events have been audited\n+   */\n+  public Optional<Long> getEventsAuditTimestamp() {\n+    return _eventsAuditTimestamp;\n+  }\n+\n+  /**\n+   * Set timestamp in Epoch-millis for when the events have been audited", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTQ4MjgzOnYy", "diffSide": "RIGHT", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMTo0MFrOGcHLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMToyMTo0MFrOGcHLRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDg4Nw==", "bodyText": "nit: remove extra space", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130887", "createdAt": "2020-05-28T21:21:40Z", "author": {"login": "somandal"}, "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -149,4 +165,5 @@ public String getCheckpoint() {\n   public Optional<String> getDestination() {\n     return _destination;\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1007, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}