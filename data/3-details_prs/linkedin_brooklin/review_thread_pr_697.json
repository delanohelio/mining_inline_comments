{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Nzc5OTgy", "number": 697, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NDoyMFrODvPLsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNzo0NVrODvTjuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODU4NDE5OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NDoyMFrOGBi8_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxMzo1OVrOGBmK4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDQyOQ==", "bodyText": "I think more context is necessary here for when _partitions vs. _partitionsV2 is used. Partition managed uses _partitionsV2 and puts in the full name of the Topic-Partition, due to which the log cannot be reduced in this way.\nI'd also question whether we should avoid populating _partitionsV2 altogether for any tasks that are not Partition managed. This can be explored as part of another PR though (maybe open a ticket for this)", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404274429", "createdAt": "2020-04-06T17:44:20Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzEzOQ==", "bodyText": "Added comments. Also created ticket to investigate.", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327139", "createdAt": "2020-04-06T19:13:59Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDQyOQ=="}, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODU5MjgzOnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo0NjozMlrOGBjCRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxNDozMlrOGBmMEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTc4MA==", "bodyText": "The format string is used in 3 places now. Create a local variable/member constant FORMAT_STRING?", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404275780", "createdAt": "2020-04-06T17:46:32Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzQ0MQ==", "bodyText": "Redid the logic. Format string is in 1 place now.", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327441", "createdAt": "2020-04-06T19:14:32Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTc4MA=="}, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODYzNDM2OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1NzoxNlrOGBjb7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxOToxNDoxMlrOGBmLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjM0OQ==", "bodyText": "Remove the return log from here. It's the same as the one outside the if() block. Let it drop into the return outside the if() block.", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404282349", "createdAt": "2020-04-06T17:57:16Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n+            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n+            _dependencies);\n+      } catch (NumberFormatException e) {\n+        LOG.error(e.getMessage());\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzI4NA==", "bodyText": "Redid the logic.", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327284", "createdAt": "2020-04-06T19:14:12Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n+            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n+            _dependencies);\n+      } catch (NumberFormatException e) {\n+        LOG.error(e.getMessage());\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjM0OQ=="}, "originalCommit": {"oid": "adecb62138b4751e0a735c8f83487729d6be346f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTMwMTA0OnYy", "diffSide": "RIGHT", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNzo0NVrOGBp8AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMToxMzozMFrOGBqHFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4ODg2NQ==", "bodyText": "can this check be (if (!StringUtils.isBlank(_partitionsV2)) since only v2 is being referenced within the conditional statement?", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404388865", "createdAt": "2020-04-06T21:07:45Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +438,21 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n+    if (_partitions.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "266df6749cb8df13ad455464534cd9a323aa02fe"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5MTcwMA==", "bodyText": "Thanks for the explanation. ParititonsV2 is topic-partitions or stringified partitions based on low-level or high-level tasks.", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404391700", "createdAt": "2020-04-06T21:13:30Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +438,21 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n+    if (_partitions.size() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4ODg2NQ=="}, "originalCommit": {"oid": "266df6749cb8df13ad455464534cd9a323aa02fe"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 973, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}