{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjMzODAz", "number": 725, "title": "Add support for Producer flush() with a configurable timeout", "bodyText": "This PR adds support for Kafka Producer flush with a timeout which can be configured via config. It also involves some refactoring.", "createdAt": "2020-06-25T03:25:56Z", "url": "https://github.com/linkedin/brooklin/pull/725", "merged": true, "mergeCommit": {"oid": "da7349cdfb876c9ba94e211ee6d2232a8bfa2df4"}, "closed": true, "closedAt": "2020-06-29T20:30:48Z", "author": {"login": "somandal"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcul-jwgH2gAyNDM5NjMzODAzOjRlZWI0MGEwNWVkYjYwMjAyYTgzNmQ0ZjE4MGRiOTFhZDgxMTk2MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwG-UogFqTQzOTQ3MTMyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/4eeb40a05edb60202a836d4f180db91ad8119635", "committedDate": "2020-06-25T03:21:25Z", "message": "Add support Producer flush with a timeout configurable via config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzkyNTIz", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439392523", "createdAt": "2020-06-29T18:22:08Z", "commit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoyMjowOFrOGqcy6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoyMjowOFrOGqcy6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2NTE2MA==", "bodyText": "Since you did the refactoring, can you please take of this as well ? May be move down after all private static final.", "url": "https://github.com/linkedin/brooklin/pull/725#discussion_r447165160", "createdAt": "2020-06-29T18:22:08Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaProducerWrapper.java", "diffHunk": "@@ -60,15 +60,30 @@\n   @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mzk0MDUx", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439394051", "createdAt": "2020-06-29T18:24:24Z", "commit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoyNDoyNFrOGqc4DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoyNDoyNFrOGqc4DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2NjQ3Nw==", "bodyText": "Do you see a value in adding a test to ensure that flush timeout is honored?", "url": "https://github.com/linkedin/brooklin/pull/725#discussion_r447166477", "createdAt": "2020-06-29T18:24:24Z", "author": {"login": "vmaheshw"}, "path": "datastream-kafka/src/test/java/com/linkedin/datastream/kafka/TestKafkaProducerWrapper.java", "diffHunk": "@@ -150,7 +151,7 @@ void verifySend(int numExpected) {\n     }\n \n     void verifyFlush(int numExpected) {\n-      verify(_mockProducer, times(numExpected)).flush();\n+      verify(_mockProducer, times(numExpected)).flush(anyInt(), any(TimeUnit.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mzk4MTYw", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439398160", "createdAt": "2020-06-29T18:30:11Z", "commit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDAwNTQ1", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439400545", "createdAt": "2020-06-29T18:33:44Z", "commit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODozMzo0NFrOGqdNxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODozMzo0NFrOGqdNxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE3MjAzNw==", "bodyText": "Not your fault nit: TIMEOUT", "url": "https://github.com/linkedin/brooklin/pull/725#discussion_r447172037", "createdAt": "2020-06-29T18:33:44Z", "author": {"login": "ahmedahamid"}, "path": "datastream-kafka/src/main/java/com/linkedin/datastream/kafka/KafkaProducerWrapper.java", "diffHunk": "@@ -60,15 +60,30 @@\n   @VisibleForTesting\n   static final String PRODUCER_COUNT = \"producerCount\";\n \n+  // Default producer configuration for no data loss pipeline.\n+  private static final String DEFAULT_PRODUCER_ACKS_CONFIG_VALUE = \"all\";\n+  private static final String DEFAULT_MAX_BLOCK_MS_CONFIG_VALUE = String.valueOf(Integer.MAX_VALUE);\n+  private static final String DEFAULT_MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION_VALUE = \"1\";\n+\n+  private static final long DEFAULT_SEND_FAILURE_RETRY_WAIT_MS = Duration.ofSeconds(5).toMillis();\n+  private static final int DEFAULT_PRODUCER_FLUSH_TIMEOUT_MS = Integer.MAX_VALUE;\n+  private static final Double DEFAULT_RATE_LIMITER = 0.1;\n+\n+  private static final String CFG_SEND_FAILURE_RETRY_WAIT_MS = \"send.failure.retry.wait.time.ms\";\n+  private static final String CFG_KAFKA_PRODUCER_FACTORY = \"kafkaProducerFactory\";\n+  private static final String CFG_RATE_LIMITER_CFG = \"producerRateLimiter\";\n+  private static final String CFG_PRODUCER_FLUSH_TIMEOUT_MS = \"producerFlushTimeoutMs\";\n+\n   private static final AtomicInteger NUM_PRODUCERS = new AtomicInteger();\n   private static final Supplier<Integer> PRODUCER_GAUGE = NUM_PRODUCERS::get;\n \n-  private static final int TIME_OUT = 2000;\n+  private static final int CLOSE_TIME_OUT_MS = 2000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eeb40a05edb60202a836d4f180db91ad8119635"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed323313acdffdb5977abb7b14db5d3ee1449714", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/ed323313acdffdb5977abb7b14db5d3ee1449714", "committedDate": "2020-06-29T19:27:17Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDQ0Mzc4", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439444378", "createdAt": "2020-06-29T19:39:54Z", "commit": {"oid": "ed323313acdffdb5977abb7b14db5d3ee1449714"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDcxMzIz", "url": "https://github.com/linkedin/brooklin/pull/725#pullrequestreview-439471323", "createdAt": "2020-06-29T20:21:57Z", "commit": {"oid": "ed323313acdffdb5977abb7b14db5d3ee1449714"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 880, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}