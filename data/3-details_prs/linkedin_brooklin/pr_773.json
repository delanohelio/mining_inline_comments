{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MzkxNTI5", "number": 773, "title": "Add a configurable max tasks per instance threshold", "bodyText": "We've run into issues where too many tasks get assigned to a given instance resulting in OOMs. This PR adds a configurable option to limit the number of tasks per instance at the cluster level. This works the same way irrespective of the assignment strategy used, and is at a global level for all tasks (across multiple connector types). A value of 0 indicates that this is disabled.\nImportant: DO NOT REPORT SECURITY ISSUES DIRECTLY ON GITHUB.\nFor reporting security issues and contributing security fixes,\nplease, email security@linkedin.com instead, as described in\nthe contribution guidelines.\nPlease, take a minute to review the contribution guidelines at:\nhttps://github.com/linkedin/Brooklin/blob/master/CONTRIBUTING.md", "createdAt": "2020-11-02T23:27:43Z", "url": "https://github.com/linkedin/brooklin/pull/773", "merged": true, "mergeCommit": {"oid": "a2817eaffff4fbf2cdf98f3cded37fa97688f81c"}, "closed": true, "closedAt": "2020-11-05T20:13:39Z", "author": {"login": "somandal"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYtGw4AH2gAyNTE0MzkxNTI5OjY0OGRiYWJmMDhlNWZiNjc0NmE0ZWI2ODQ2NWY4NzFjYThiODkxMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZn3VogFqTUyNDYxNTU3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/648dbabf08e5fb6746a4eb68465f871ca8b89135", "committedDate": "2020-11-02T23:24:32Z", "message": "Add a configurable max tasks per instance threshold"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzk4ODQ1", "url": "https://github.com/linkedin/brooklin/pull/773#pullrequestreview-523798845", "createdAt": "2020-11-04T23:01:16Z", "commit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzowMToxNlrOHtszKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMzoyMzo1NVrOHttRoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4MTk2MA==", "bodyText": "nit:  when the tasks per instance exceeds the configured threshold", "url": "https://github.com/linkedin/brooklin/pull/773#discussion_r517681960", "createdAt": "2020-11-04T23:01:16Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/TestCoordinator.java", "diffHunk": "@@ -656,6 +657,86 @@ public void testCoordinationWithStickyMulticastStrategy() throws Exception {\n     zkClient.close();\n   }\n \n+  /**\n+   * testCoordinationWithStickyMulticastStrategyAndMaxTaskLimit is a test to verify that assignment cannot complete\n+   * when the tasks per instance is exceeded by the configured threshold", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4MjU1Ng==", "bodyText": "Is the comment a todo that you had to remove?", "url": "https://github.com/linkedin/brooklin/pull/773#discussion_r517682556", "createdAt": "2020-11-04T23:02:56Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/TestCoordinator.java", "diffHunk": "@@ -656,6 +657,86 @@ public void testCoordinationWithStickyMulticastStrategy() throws Exception {\n     zkClient.close();\n   }\n \n+  /**\n+   * testCoordinationWithStickyMulticastStrategyAndMaxTaskLimit is a test to verify that assignment cannot complete\n+   * when the tasks per instance is exceeded by the configured threshold\n+   * <ul>\n+   *     <li>Create a coordinator with CoordinatorConfig.CONFIG_MAX_DATASTREAM_TASKS_PER_INSTANCE set to 5</li>\n+   *     <li>create 3 instances and 4 datastreams, verify assignment cannot complete</li>\n+   *     <li>create another instance, verify assignment completes now</li>\n+   * </ul>\n+   */\n+  @Test\n+  public void testCoordinationWithStickyMulticastStrategyAndMaxTaskLimit() throws Exception {\n+    String testCluster = \"testCoordinationMaxTasksPerInstance\";\n+    String testConnectorType = \"testConnectorType\";\n+    Properties properties = new Properties();\n+    // Set max tasks per instance to 5, since some instances will get 6 tasks if 4 datastreams with 4 tasks each are\n+    // created across 3 instances. With 4 instances, the tasks per instance will be less than 5.\n+    properties.put(CoordinatorConfig.CONFIG_MAX_DATASTREAM_TASKS_PER_INSTANCE, \"5\");\n+    Coordinator instance1 = createCoordinator(_zkConnectionString, testCluster, properties);\n+\n+    TestHookConnector connector1 = new TestHookConnector(\"connector1\", testConnectorType);\n+    //Question why the multicast strategy is within one coordinator rather than shared between list of coordinators", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTA0Nw==", "bodyText": "Is there are way to make this test more unit-test like? Just test validateNewAssignment I mean? My concern is that if assignment fails for any other reason, it would still look the same for the reader of waitTillAssignmentIsComplete's output even though it actually did not fail due to max tax limit if I am reading this correct", "url": "https://github.com/linkedin/brooklin/pull/773#discussion_r517689047", "createdAt": "2020-11-04T23:21:44Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/test/java/com/linkedin/datastream/server/TestCoordinator.java", "diffHunk": "@@ -656,6 +657,86 @@ public void testCoordinationWithStickyMulticastStrategy() throws Exception {\n     zkClient.close();\n   }\n \n+  /**\n+   * testCoordinationWithStickyMulticastStrategyAndMaxTaskLimit is a test to verify that assignment cannot complete\n+   * when the tasks per instance is exceeded by the configured threshold\n+   * <ul>\n+   *     <li>Create a coordinator with CoordinatorConfig.CONFIG_MAX_DATASTREAM_TASKS_PER_INSTANCE set to 5</li>\n+   *     <li>create 3 instances and 4 datastreams, verify assignment cannot complete</li>\n+   *     <li>create another instance, verify assignment completes now</li>\n+   * </ul>\n+   */\n+  @Test\n+  public void testCoordinationWithStickyMulticastStrategyAndMaxTaskLimit() throws Exception {\n+    String testCluster = \"testCoordinationMaxTasksPerInstance\";\n+    String testConnectorType = \"testConnectorType\";\n+    Properties properties = new Properties();\n+    // Set max tasks per instance to 5, since some instances will get 6 tasks if 4 datastreams with 4 tasks each are\n+    // created across 3 instances. With 4 instances, the tasks per instance will be less than 5.\n+    properties.put(CoordinatorConfig.CONFIG_MAX_DATASTREAM_TASKS_PER_INSTANCE, \"5\");\n+    Coordinator instance1 = createCoordinator(_zkConnectionString, testCluster, properties);\n+\n+    TestHookConnector connector1 = new TestHookConnector(\"connector1\", testConnectorType);\n+    //Question why the multicast strategy is within one coordinator rather than shared between list of coordinators\n+    instance1.addConnector(testConnectorType, connector1, new StickyMulticastStrategy(Optional.of(4), Optional.of(2)), false,\n+        new SourceBasedDeduper(), null);\n+    instance1.start();\n+\n+    Coordinator instance2 = createCoordinator(_zkConnectionString, testCluster);\n+    TestHookConnector connector2 = new TestHookConnector(\"connector2\", testConnectorType);\n+    instance2.addConnector(testConnectorType, connector2, new StickyMulticastStrategy(Optional.of(4), Optional.of(2)), false,\n+        new SourceBasedDeduper(), null);\n+    instance2.start();\n+\n+    Coordinator instance3 = createCoordinator(_zkConnectionString, testCluster);\n+    TestHookConnector connector3 = new TestHookConnector(\"connector3\", testConnectorType);\n+    instance3.addConnector(testConnectorType, connector3, new StickyMulticastStrategy(Optional.of(4), Optional.of(2)), false,\n+        new SourceBasedDeduper(), null);\n+    instance3.start();\n+\n+    ZkClient zkClient = new ZkClient(_zkConnectionString);\n+    List<TestHookConnector> connectors = new ArrayList<>();\n+    connectors.add(connector1);\n+    connectors.add(connector2);\n+    connectors.add(connector3);\n+    List<String> datastreamNames = ImmutableList.of(\"datastream1\", \"datastream2\", \"datastream3\", \"datastream4\");\n+\n+    for (String name : datastreamNames) {\n+      DatastreamTestUtils.createAndStoreDatastreams(zkClient, testCluster, testConnectorType, name);\n+    }\n+    boolean assignmentComplete = waitTillAssignmentIsComplete(16, WAIT_TIMEOUT_MS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4OTc2MQ==", "bodyText": "Should we also consider doing assignments only if a \"quorum\" number of instances are participating in the membership? I also find it a bi t odd to have an across the connector max task limit somehow. Seeing as how some connector tasks might take more memory than others.", "url": "https://github.com/linkedin/brooklin/pull/773#discussion_r517689761", "createdAt": "2020-11-04T23:23:55Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -1322,6 +1323,23 @@ private void performPartitionMovement(Long notifyTimestamp) {\n     }\n   }\n \n+  private void validateNewAssignment(Map<String, List<DatastreamTask>> newAssignmentsByInstance) {\n+    if (_config.getMaxDatastreamTasksPerInstance() > 0) {\n+      // If the cluster was configured to limit the max tasks per instance, check if any instances have a higher\n+      // number of tasks than expected, and fail the leader assignment on violation of this limit. This can be useful\n+      // to prevent other issues such as OOMs due to high memory usage which may be seen if we exceed the supportable\n+      // number of tasks per instance.\n+      Map<String, Integer> instancesWithTaskCountAboveThreshold = newAssignmentsByInstance.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648dbabf08e5fb6746a4eb68465f871ca8b89135"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d65ca74d7997042f5caa96510aa83a96ae60462", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/7d65ca74d7997042f5caa96510aa83a96ae60462", "committedDate": "2020-11-05T15:55:55Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc032298947ac4828ca6c49b40e4122f7f52ebd3", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/bc032298947ac4828ca6c49b40e4122f7f52ebd3", "committedDate": "2020-11-05T15:59:45Z", "message": "Add back accidentally deleted comment and remove the right comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTU0MTA1", "url": "https://github.com/linkedin/brooklin/pull/773#pullrequestreview-524554105", "createdAt": "2020-11-05T18:35:45Z", "commit": {"oid": "bc032298947ac4828ca6c49b40e4122f7f52ebd3"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODozNTo0NVrOHuRCaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODozNTo0NVrOHuRCaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NTY4OQ==", "bodyText": "nit: If the cluster is configured.", "url": "https://github.com/linkedin/brooklin/pull/773#discussion_r518275689", "createdAt": "2020-11-05T18:35:45Z", "author": {"login": "vmaheshw"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -1322,6 +1323,24 @@ private void performPartitionMovement(Long notifyTimestamp) {\n     }\n   }\n \n+  @VisibleForTesting\n+  void validateNewAssignment(Map<String, List<DatastreamTask>> newAssignmentsByInstance) {\n+    if (_config.getMaxDatastreamTasksPerInstance() > 0) {\n+      // If the cluster was configured to limit the max tasks per instance, check if any instances have a higher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc032298947ac4828ca6c49b40e4122f7f52ebd3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3960b57660fe8bbb812c6d6d2be159f7cdf7f18", "author": {"user": {"login": "somandal", "name": "Sonam Mandal"}}, "url": "https://github.com/linkedin/brooklin/commit/d3960b57660fe8bbb812c6d6d2be159f7cdf7f18", "committedDate": "2020-11-05T19:22:44Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTk1ODAw", "url": "https://github.com/linkedin/brooklin/pull/773#pullrequestreview-524595800", "createdAt": "2020-11-05T19:24:22Z", "commit": {"oid": "d3960b57660fe8bbb812c6d6d2be159f7cdf7f18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjE1NTc3", "url": "https://github.com/linkedin/brooklin/pull/773#pullrequestreview-524615577", "createdAt": "2020-11-05T19:52:05Z", "commit": {"oid": "d3960b57660fe8bbb812c6d6d2be159f7cdf7f18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 321, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}