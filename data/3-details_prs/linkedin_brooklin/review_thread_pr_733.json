{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjAyMjE3", "number": 733, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxOTowMFrOEQsubA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo1Mzo1NFrOEQxfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTQ1NDUyOnYy", "diffSide": "LEFT", "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxOTowMFrOG0_wMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMDoxN1rOG1BYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMzY2Ng==", "bodyText": "nit: maybe we should keep this log? That Get was called? I know that I've used this log for other operations we perform (stop, resume, pause, etc), and it may be helpful to know if the server is receiving Get requests or not if we see some failures.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458223666", "createdAt": "2020-07-21T16:19:00Z", "author": {"login": "somandal"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,22 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n-      LOG.info(\"Get datastream called for datastream {}\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451c28496f1a119c625b4d7d6828c175fa01879f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDQwNQ==", "bodyText": "Sorry, wasn't intended. Fixed it.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458250405", "createdAt": "2020-07-21T17:00:17Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,22 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n-      LOG.info(\"Get datastream called for datastream {}\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMzY2Ng=="}, "originalCommit": {"oid": "451c28496f1a119c625b4d7d6828c175fa01879f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDIzNjE2OnYy", "diffSide": "RIGHT", "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo1Mzo1NFrOG1HdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMjoyNVrOG1pShg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw==", "bodyText": "I scoured Rest.li's docs and source code to see if throwing an exception was idiomatic for 404s. The javadocs of this method in one of the parent types of DatastreamResources, i.e. CollectionResource, states that null is expected in case the resource isn't found:\n  /**\n   * Gets this resource.\n   *\n   * @param key resource key\n   * @return null if resource was not found\n   */\n  V get(K key);\n\nThrowing a RestLiServiceException seems to be intended for unexpected server errors.\nI think we can just adjust logging in the current code to print whether a datastream was found or not.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458349847", "createdAt": "2020-07-21T19:53:54Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQxOTEzOA==", "bodyText": "Makes sense. I reverted the change to throw. But what counts for unexpected server errors? For example the delete API doc says\n   * Deletes this resource.\n   *\n   * @param key resource key\n   * @return the status or null if for a default, 204 No Content response\n   */\n\nDoes that mean, other APIs also should be returning a null when the look up of the stream to operate on fails?", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458419138", "createdAt": "2020-07-21T22:12:34Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw=="}, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0ODk4MQ==", "bodyText": "But what counts for unexpected server errors?\n\nGetting a network exception, interrupted exception, failing to find a required file on disk, no permission to access resource ... etc \u2014 situations where your web-app is running into an unexpected problem.\n\nDoes that mean, other APIs also should be returning a null when the look up of the stream to operate on fails?\n\nRest.li seems to interpret null differently for the different HTTP verbs. In the case of delete for instance, returning null actually indicates success. 204 is a success code. This is why the method you referenced offers the convenience of returning null if you want to say deletion was successful, instead of having to construct an UpdateResponse with a 204 status code yourself.\nAccordingly, our DatastreamResources.delete(), for example, should just return an UpdateResponse with a 404 status code if a datastream isn't found instead of throwing; there's no service error in this case.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458448981", "createdAt": "2020-07-21T23:36:47Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw=="}, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0ODQwNg==", "bodyText": "I looked into Rest.li's source code and here is what I found:\n\nRest.li translates a null return value into a 200 (OK) response for methods whose HTTP method is POST\nIt also translates a null return value into a 404 (NOT FOUND) response for methods whose HTTP method is GET\n\nHowever, it does not translate null for methods whose HTTP method is DELETE (e.g. DatastreamResources.delete()). So, we can't return null to indicate success from a delete method. We'd have to return UpdateResponse(HttpStatus.S_404_NOT_FOUND).\nBut everything we've discussed so far still holds.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458548406", "createdAt": "2020-07-22T05:46:13Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw=="}, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNDE5OA==", "bodyText": "Just documenting a conversation you and I had offline in case anyone refers to this thread in the future.\nYou brought it to my attention that the the same piece of code I referenced did actually throw a RestLiServiceException when translating null from GET methods into 404 (code). I looked further and found that Rest.li translates all thrown RestLiServiceExceptions (code) for all HTTP verbs according to the status codes they carry, which invalidates the assumption I was making that these exceptions were reserved for internal server errors.\nOut of consistency with our existing DatastreamResources.delete(), which throws if a datastream isn't found, we decided to keep the current logic in your PR as is.\nPlease, excuse the back and forth. I am learning about Rest.li as we go.", "url": "https://github.com/linkedin/brooklin/pull/733#discussion_r458904198", "createdAt": "2020-07-22T16:02:25Z", "author": {"login": "ahmedahamid"}, "path": "datastream-server-restli/src/main/java/com/linkedin/datastream/server/dms/DatastreamResources.java", "diffHunk": "@@ -666,21 +666,23 @@ public UpdateResponse delete(String datastreamName) {\n \n   @Override\n   public Datastream get(String name) {\n+    Datastream stream = null;\n     try {\n       LOG.info(\"Get datastream called for datastream {}\", name);\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, GET_CALL, 1);\n-      Instant startTime = Instant.now();\n-      Datastream stream = _store.getDatastream(name);\n-      LOG.info(\"Get datastream call took {} ms\", Duration.between(startTime, Instant.now()).toMillis());\n-      return stream;\n+      stream = _store.getDatastream(name);\n     } catch (Exception e) {\n       _dynamicMetricsManager.createOrUpdateMeter(CLASS_NAME, CALL_ERROR, 1);\n       _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_500_INTERNAL_SERVER_ERROR,\n           \"Get datastream failed for datastream: \" + name, e);\n     }\n \n-    // Returning null will automatically trigger a 404 Not Found response\n-    return null;\n+    if (stream == null) {\n+      _errorLogger.logAndThrowRestLiServiceException(HttpStatus.S_404_NOT_FOUND,\n+          \"Datastream not found: \" + name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0OTg0Nw=="}, "originalCommit": {"oid": "2126bbd80a2ccc4bb27c39f3008284f91050c6aa"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1033, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}