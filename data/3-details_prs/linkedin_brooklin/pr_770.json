{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDg3NTYy", "number": 770, "title": "Handle the new session after session expiry", "bodyText": "This is the final change to handle new session after session expiry. In this change, we have re-initialized all the local states, listeners, event threads and made the node re-join the cluster.", "createdAt": "2020-10-20T05:40:42Z", "url": "https://github.com/linkedin/brooklin/pull/770", "merged": true, "mergeCommit": {"oid": "457ac6006c8a613ba78adaded680b76f56451802"}, "closed": true, "closedAt": "2021-08-03T05:50:58Z", "author": {"login": "vmaheshw"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABboAf5CAH2gAyNTA2NDg3NTYyOmMzMWNkNGExNWNjOGRkNjliMGE2NTNkYmU0MjAxZGU5MzRlYTZkNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeeeaXaAFqTY3NzcyMDIwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "author": {"user": {"login": "vmaheshw", "name": "Vaibhav Maheshwari"}}, "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "committedDate": "2019-11-18T20:06:44Z", "message": "Merge pull request #1 from linkedin/master\n\nPull latest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28d2d11372814b122c6e62c2a3309f275b1f7f84", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/28d2d11372814b122c6e62c2a3309f275b1f7f84", "committedDate": "2020-09-21T19:21:30Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0653c15d870615a5d6619f0dc745c66abd8bd43e", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/0653c15d870615a5d6619f0dc745c66abd8bd43e", "committedDate": "2020-09-30T06:26:06Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e36f2f18291458014a22836d876c0f6ca25703", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/84e36f2f18291458014a22836d876c0f6ca25703", "committedDate": "2020-10-05T19:16:43Z", "message": "Handle session expiry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e808651ebf09ba23d713bed936d86544cac33b71", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/e808651ebf09ba23d713bed936d86544cac33b71", "committedDate": "2020-10-14T21:34:20Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin into reinitNewSession"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93058c747b97beec9c4027cbbdfd562a98f0e995", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/93058c747b97beec9c4027cbbdfd562a98f0e995", "committedDate": "2020-10-20T05:38:55Z", "message": "Update test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/6fd12e3275f2d09edf0bf729d389165acda61b0b", "committedDate": "2020-10-20T05:43:56Z", "message": "Fix test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODU1ODI0", "url": "https://github.com/linkedin/brooklin/pull/770#pullrequestreview-523855824", "createdAt": "2020-11-05T01:35:50Z", "commit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozNTo1MFrOHtvxCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMTozOTozNVrOHtv1TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMDU2OQ==", "bodyText": "Can this API be meaningfully split? I am yet to fully understand all the parts, but if can be logically split to be closerLeaderSpecificListeners or closeListnersOnDisconnect.. or whatever is logical, it will make following code much easier.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r517730569", "createdAt": "2020-11-05T01:35:50Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -295,11 +307,15 @@ private void onBecomeFollower() {\n \n     LOG.info(\"Instance \" + _instanceName + \" becomes follower\");\n \n-    closeZkListener(false);\n+    closeZkListeners(false);\n     _isLeader = false;\n   }\n \n-  private void closeZkListener(boolean isDisconnect) {\n+  private void closeZkListeners(boolean isDisconnect) {\n+    closeZkListeners(isDisconnect, false);\n+  }\n+\n+  private void closeZkListeners(boolean isDisconnect, boolean isSessionExpired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMTY2MQ==", "bodyText": "nit: not sure if this comment is relevant to this code path. Also since this is overlap with start, should this eventQueue work be moved to a method.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r517731661", "createdAt": "2020-11-05T01:39:35Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -521,6 +522,22 @@ boolean isZkSessionExpired() {\n     return _zkSessionExpired;\n   }\n \n+  @Override\n+  public void onNewSession() {\n+    createEventThread();\n+    startEventThread();\n+    _adapter.connect();\n+    // now that instance is started, make sure it doesn't miss any assignment created during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTkxNjE4", "url": "https://github.com/linkedin/brooklin/pull/770#pullrequestreview-524591618", "createdAt": "2020-11-05T19:18:31Z", "commit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToxODozMVrOHuSnoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOToyMTowMFrOHuSwjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMTYwMA==", "bodyText": "nit: Reword to Task lock node might have been deleted\nIf we got ZkNoNodeException doesn't that mean lockPath doesn't exist or is that a more generic exception?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r518301600", "createdAt": "2020-11-05T19:18:31Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1378,13 +1395,17 @@ public void releaseTask(DatastreamTaskImpl task) {\n       return;\n     }\n \n-    String owner = _zkclient.ensureReadData(lockPath);\n-    if (!owner.equals(_instanceName)) {\n-      LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n-          task.getDatastreamTaskName());\n+    try {\n+      String owner = _zkclient.ensureReadData(lockPath);\n+      if (!owner.equals(_instanceName)) {\n+        LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n+            task.getDatastreamTaskName());\n+        return;\n+      }\n+    } catch (ZkNoNodeException e) {\n+      LOG.info(\"Task lock node may be got deleted. exists: {}\", _zkclient.exists(lockPath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMzg4NQ==", "bodyText": "Can you please reword this? Node dying is a bit confusing to read. The actual event might be helpful as in.. instance's session expired or something like that. Same for the exception below.", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r518303885", "createdAt": "2020-11-05T19:21:00Z", "author": {"login": "DEEPTHIKORAT"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1554,12 +1580,16 @@ public ZkBackedLiveInstanceListProvider() {\n     private List<String> getLiveInstanceNames(List<String> nodes) {\n       List<String> liveInstances = new ArrayList<>();\n       for (String n : nodes) {\n-        String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n-        if (hostname == null) {\n-          // hostname can be null if a node dies immediately after reading all live instances\n-          LOG.error(\"Node {} is dead. Likely cause it dies after reading list of nodes.\", n);\n-        } else {\n-          liveInstances.add(formatZkInstance(hostname, n));\n+        try {\n+          String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n+          if (hostname == null) {\n+            // hostname can be null if a node dies immediately after reading all live instances\n+            LOG.error(\"Node {} is dead. It died after the list of nodes were read.\", n);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTc5NzEw", "url": "https://github.com/linkedin/brooklin/pull/770#pullrequestreview-525579710", "createdAt": "2020-11-07T01:40:47Z", "commit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MDo0N1rOHvCDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTo0MTowMlrOHvCDZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3ODczMA==", "bodyText": "can we make this a warn log?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r519078730", "createdAt": "2020-11-07T01:40:47Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1554,12 +1580,16 @@ public ZkBackedLiveInstanceListProvider() {\n     private List<String> getLiveInstanceNames(List<String> nodes) {\n       List<String> liveInstances = new ArrayList<>();\n       for (String n : nodes) {\n-        String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n-        if (hostname == null) {\n-          // hostname can be null if a node dies immediately after reading all live instances\n-          LOG.error(\"Node {} is dead. Likely cause it dies after reading list of nodes.\", n);\n-        } else {\n-          liveInstances.add(formatZkInstance(hostname, n));\n+        try {\n+          String hostname = _zkclient.ensureReadData(KeyBuilder.liveInstance(_cluster, n));\n+          if (hostname == null) {\n+            // hostname can be null if a node dies immediately after reading all live instances\n+            LOG.error(\"Node {} is dead. It died after the list of nodes were read.\", n);\n+          } else {\n+            liveInstances.add(formatZkInstance(hostname, n));\n+          }\n+        } catch (ZkNoNodeException e) {\n+          LOG.info(\"Node {} is dead. It died after the list of nodes were read.\", n);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3ODc1Nw==", "bodyText": "+1\nCan we also make this a warn log?", "url": "https://github.com/linkedin/brooklin/pull/770#discussion_r519078757", "createdAt": "2020-11-07T01:41:02Z", "author": {"login": "somandal"}, "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/ZkAdapter.java", "diffHunk": "@@ -1378,13 +1395,17 @@ public void releaseTask(DatastreamTaskImpl task) {\n       return;\n     }\n \n-    String owner = _zkclient.ensureReadData(lockPath);\n-    if (!owner.equals(_instanceName)) {\n-      LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n-          task.getDatastreamTaskName());\n+    try {\n+      String owner = _zkclient.ensureReadData(lockPath);\n+      if (!owner.equals(_instanceName)) {\n+        LOG.warn(\"{} does not have the lock on {}-{}/{}\", _instanceName, task.getConnectorType(), task.getTaskPrefix(),\n+            task.getDatastreamTaskName());\n+        return;\n+      }\n+    } catch (ZkNoNodeException e) {\n+      LOG.info(\"Task lock node may be got deleted. exists: {}\", _zkclient.exists(lockPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMwMTYwMA=="}, "originalCommit": {"oid": "6fd12e3275f2d09edf0bf729d389165acda61b0b"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a8030f80af9627ba69c0d46eab8adb237a9f988", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/3a8030f80af9627ba69c0d46eab8adb237a9f988", "committedDate": "2021-01-25T18:30:25Z", "message": "Merge commits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1429ce1d5eafb588c90a5764d310c72b9ef543f7", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/1429ce1d5eafb588c90a5764d310c72b9ef543f7", "committedDate": "2021-04-26T21:55:05Z", "message": "Merge branch 'master' of github.com:vmaheshw/Brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301bde30fb8eeb5b65cf4e4805c446062a232e7a", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/301bde30fb8eeb5b65cf4e4805c446062a232e7a", "committedDate": "2021-05-06T06:03:16Z", "message": "Merge branch 'master' of github.com:linkedin/brooklin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a968e3fcaf81aae70695be6f313ade10ad6beb9c", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/a968e3fcaf81aae70695be6f313ade10ad6beb9c", "committedDate": "2021-05-07T06:24:50Z", "message": "Rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37dc9f70c2a2d5f443005904dc3f375d30c73a5a", "author": {"user": null}, "url": "https://github.com/linkedin/brooklin/commit/37dc9f70c2a2d5f443005904dc3f375d30c73a5a", "committedDate": "2021-05-07T18:44:25Z", "message": "Add knob to enable session expiry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4Mzg5MTYz", "url": "https://github.com/linkedin/brooklin/pull/770#pullrequestreview-668389163", "createdAt": "2021-05-25T21:32:51Z", "commit": {"oid": "37dc9f70c2a2d5f443005904dc3f375d30c73a5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc3NzIwMjAy", "url": "https://github.com/linkedin/brooklin/pull/770#pullrequestreview-677720202", "createdAt": "2021-06-07T17:52:04Z", "commit": {"oid": "37dc9f70c2a2d5f443005904dc3f375d30c73a5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 316, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}