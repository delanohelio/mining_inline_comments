{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzQ4MzQ4", "number": 6842, "title": "Add error dialog \"Problem finding files\"", "bodyText": "I added an Error Dialog in AutoSetFileLinks. #5890\nI decided to open a pull request in order to get feedback on what I've done.\nThis is my first contribution to OpenSource ever, so beware of stupid mistakes.\nI am currently trying to go through the motions of contributing. However, I have run into a\nfew issues:\n `ERROR org.jabref.logic.l10n.Localization - Messages are not initialized before accessing key: Your current Java version (%0) is not supported. Please install version %1 or higher. - `\n\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-09-02T11:16:21Z", "url": "https://github.com/JabRef/jabref/pull/6842", "merged": true, "mergeCommit": {"oid": "574ca59beaee0ee7dad830dc14be7ed49e44f6d3"}, "closed": true, "closedAt": "2020-12-24T13:03:25Z", "author": {"login": "IfIWantedTo"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE5zPCgH2gAyNDc3NzQ4MzQ4OmQ0YmQ1OTQxZDc5MWUzMGZhMDdlMmU5MjM0Y2JlNmUzZGFkMTc3OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnvhQugFqTU1NTk1MzU3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d4bd5941d791e30fa07e2e9234cbe6e3dad17793", "author": {"user": {"login": "IfIWantedTo", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/d4bd5941d791e30fa07e2e9234cbe6e3dad17793", "committedDate": "2020-09-02T10:53:29Z", "message": "#5890 added Error Dialog\n\nAutoSetFileLinksUtil:\n-> imported JabRefDialogService and Localization\n->showErrorDialogAndWait(...)\n\nI am currently having trouble writing a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d77abb04b5f289c5c8e826a5b75afd3c3245417", "author": {"user": {"login": "IfIWantedTo", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/5d77abb04b5f289c5c8e826a5b75afd3c3245417", "committedDate": "2020-09-02T11:24:48Z", "message": "Merge branch 'master' into fix-issue-5890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a3175657aa473db22a66e536fa1a9d49f1bfd8", "author": {"user": {"login": "IfIWantedTo", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/f8a3175657aa473db22a66e536fa1a9d49f1bfd8", "committedDate": "2020-09-03T11:04:18Z", "message": "Fix errorDialog AutoSetFileLinks\n\nFixed mistake in first commit.\n\n.lists all exceptions\n.notifies user of error via DialogService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzQxMTAz", "url": "https://github.com/JabRef/jabref/pull/6842#pullrequestreview-481741103", "createdAt": "2020-09-03T11:21:06Z", "commit": {"oid": "f8a3175657aa473db22a66e536fa1a9d49f1bfd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyMTowNlrOHMiDVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyMTowNlrOHMiDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwMjg2OQ==", "bodyText": "I would propose to move this into the succeeded methoid here :\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java\n    \n    \n        Lines 60 to 68\n      in\n      5ab494e\n    \n    \n    \n    \n\n        \n          \n           Task<List<BibEntry>> linkFilesTask = new Task<>() { \n        \n\n        \n          \n            \n        \n\n        \n          \n               @Override \n        \n\n        \n          \n               protected List<BibEntry> call() { \n        \n\n        \n          \n                   return util.linkAssociatedFiles(entries, nc); \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               @Override \n        \n\n        \n          \n               protected void succeeded() {", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r482902869", "createdAt": "2020-09-03T11:21:06Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtil.java", "diffHunk": "@@ -48,16 +52,24 @@ private AutoSetFileLinksUtil(List<Path> directories, AutoLinkPreferences autoLin\n \n     public List<BibEntry> linkAssociatedFiles(List<BibEntry> entries, NamedCompound ce) {\n         List<BibEntry> changedEntries = new ArrayList<>();\n+\n+        List<IOException> fileExceptions = new ArrayList<>(); //change\n         for (BibEntry entry : entries) {\n \n             List<LinkedFile> linkedFiles = new ArrayList<>();\n             try {\n                 linkedFiles = findAssociatedNotLinkedFiles(entry);\n             } catch (IOException e) {\n+                fileExceptions.add(e); //change\n                 LOGGER.error(\"Problem finding files\", e);\n+\n             }\n \n             if (ce != null) {\n+                if (!fileExceptions.isEmpty()) { // is this where it goes? find out!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a3175657aa473db22a66e536fa1a9d49f1bfd8"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8d70d2d054bce726f548b4d16e0657a7d16851b", "author": {"user": {"login": "IfIWantedTo", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/d8d70d2d054bce726f548b4d16e0657a7d16851b", "committedDate": "2020-09-04T10:13:07Z", "message": "Fix notifying in AutoSetFileLinksAction\n\n- add  returnFileExceptions() in AutoSetFileLinksUtil\n- add if ( 'there are exceptions' ) -> notify user in AutoSetFileLinkAction (placement still unclear, might be changed later)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTQwNTA2", "url": "https://github.com/JabRef/jabref/pull/6842#pullrequestreview-498140506", "createdAt": "2020-09-29T06:47:00Z", "commit": {"oid": "d8d70d2d054bce726f548b4d16e0657a7d16851b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo0NzowMFrOHZdLAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo0NzowMFrOHZdLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1NDQwMg==", "bodyText": "You need to add another else case when the exceptions are not empty:\nProblem finding files.  Errors occured See log for details", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r496454402", "createdAt": "2020-09-29T06:47:00Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java", "diffHunk": "@@ -66,14 +66,19 @@ public void execute() {\n \n             @Override\n             protected void succeeded() {\n-                if (!getValue().isEmpty()) {\n-                    if (nc.hasEdits()) {\n-                        nc.end();\n-                        undoManager.addEdit(nc);\n+                if (util.returnFileExceptions().isEmpty()) { //change\n+                    if (!getValue().isEmpty()) {\n+                        if (nc.hasEdits()) {\n+                            nc.end();\n+                            undoManager.addEdit(nc);\n+                        }\n+                        dialogService.notify(Localization.lang(\"Finished automatically setting external links.\"));\n+                    } else {\n+                        dialogService.notify(Localization.lang(\"Finished automatically setting external links.\") + \" \" + Localization.lang(\"No files found.\"));\n                     }\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\"));\n                 } else {\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\") + \" \" + Localization.lang(\"No files found.\"));\n+\n+                    dialogService.notify(Localization.lang(\"Problem finding files\")); //change", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8d70d2d054bce726f548b4d16e0657a7d16851b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ab47808d153ab838fdbf46d1a21e30d273cb24", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/90ab47808d153ab838fdbf46d1a21e30d273cb24", "committedDate": "2020-09-29T06:47:26Z", "message": "Fixed checkstyle error in AutoSetFileLinksUtilTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee5e7cf85576d4ced8b98c938dbc77a8da3c006e", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/ee5e7cf85576d4ced8b98c938dbc77a8da3c006e", "committedDate": "2020-09-29T06:49:54Z", "message": "Fixed import order in JabRefFrame"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355f6ff3debb8a811cea1423eaaf855f4df3c9b2", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/355f6ff3debb8a811cea1423eaaf855f4df3c9b2", "committedDate": "2020-09-29T06:50:20Z", "message": "Update JabRefFrame.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e765f264a4206f5ca861aebc6df0c297b9cdb7ca", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/e765f264a4206f5ca861aebc6df0c297b9cdb7ca", "committedDate": "2020-12-12T17:55:01Z", "message": "Merge branch 'fix-issue-5890' of https://github.com/IfIWantedTo/jabref into IfIWantedTo-fix-issue-5890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbedcde7835663000b06444ab5f02407ad0c5caa", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/dbedcde7835663000b06444ab5f02407ad0c5caa", "committedDate": "2020-12-12T17:55:45Z", "message": "Merge remote-tracking branch 'upstream/master' into IfIWantedTo-fix-issue-5890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "445ca394b1900dce02c1a18a8365b16c585f5eb6", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/445ca394b1900dce02c1a18a8365b16c585f5eb6", "committedDate": "2020-12-15T15:58:57Z", "message": "Merge remote-tracking branch 'upstream/master' into IfIWantedTo-fix-issue-5890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac9c37c1b98b5aed279a4a161c036c7743435e8", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/fac9c37c1b98b5aed279a4a161c036c7743435e8", "committedDate": "2020-12-15T23:00:21Z", "message": "Refactored to fail fast"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/c351314ae60722a858447fa0c81e554eb99df801", "committedDate": "2020-12-15T23:21:31Z", "message": "Update JabRef_en.properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDUzNDE3", "url": "https://github.com/JabRef/jabref/pull/6842#pullrequestreview-554053417", "createdAt": "2020-12-16T20:21:35Z", "commit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoyMTozNVrOIHXk6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoyODowNFrOIHXzpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NzIyNQ==", "bodyText": "entries.stream().anyMatch(entry -> !entries.getFiles().isEmpty()) is probably easier to understand.", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r544597225", "createdAt": "2020-12-16T20:21:35Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java", "diffHunk": "@@ -34,47 +33,62 @@\n     private final UndoManager undoManager;\n     private final TaskExecutor taskExecutor;\n \n-    public AutoLinkFilesAction(JabRefFrame frame, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n-        this.dialogService = frame.getDialogService();\n+    public AutoLinkFilesAction(DialogService dialogService, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n+        this.dialogService = dialogService;\n         this.preferences = preferences;\n         this.stateManager = stateManager;\n         this.undoManager = undoManager;\n         this.taskExecutor = taskExecutor;\n \n         this.executable.bind(needsDatabase(this.stateManager).and(needsEntriesSelected(stateManager)));\n         this.statusMessage.bind(BindingsHelper.ifThenElse(executable, \"\", Localization.lang(\"This operation requires one or more entries to be selected.\")));\n-\n     }\n \n     @Override\n     public void execute() {\n-        BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n-        List<BibEntry> entries = stateManager.getSelectedEntries();\n-\n-        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n-        AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n+        final BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n+        final List<BibEntry> entries = stateManager.getSelectedEntries();\n+        final AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n                 database,\n                 preferences.getFilePreferences(),\n                 preferences.getAutoLinkPreferences(),\n                 ExternalFileTypes.getInstance());\n-        Task<List<BibEntry>> linkFilesTask = new Task<>() {\n+        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n+\n+        if (entries.stream().mapToInt(entry -> entry.getFiles().size()).sum() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5ODkxNQ==", "bodyText": "But why is this check added in the first place? The autolinkfiles feature tries to find and link new files, so I don't understand why the entry already needs to have a file linked?", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r544598915", "createdAt": "2020-12-16T20:24:26Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java", "diffHunk": "@@ -34,47 +33,62 @@\n     private final UndoManager undoManager;\n     private final TaskExecutor taskExecutor;\n \n-    public AutoLinkFilesAction(JabRefFrame frame, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n-        this.dialogService = frame.getDialogService();\n+    public AutoLinkFilesAction(DialogService dialogService, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n+        this.dialogService = dialogService;\n         this.preferences = preferences;\n         this.stateManager = stateManager;\n         this.undoManager = undoManager;\n         this.taskExecutor = taskExecutor;\n \n         this.executable.bind(needsDatabase(this.stateManager).and(needsEntriesSelected(stateManager)));\n         this.statusMessage.bind(BindingsHelper.ifThenElse(executable, \"\", Localization.lang(\"This operation requires one or more entries to be selected.\")));\n-\n     }\n \n     @Override\n     public void execute() {\n-        BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n-        List<BibEntry> entries = stateManager.getSelectedEntries();\n-\n-        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n-        AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n+        final BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n+        final List<BibEntry> entries = stateManager.getSelectedEntries();\n+        final AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n                 database,\n                 preferences.getFilePreferences(),\n                 preferences.getAutoLinkPreferences(),\n                 ExternalFileTypes.getInstance());\n-        Task<List<BibEntry>> linkFilesTask = new Task<>() {\n+        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n+\n+        if (entries.stream().mapToInt(entry -> entry.getFiles().size()).sum() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NzIyNQ=="}, "originalCommit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5OTYzOQ==", "bodyText": "maybe rename to getChangedEntries ?", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r544599639", "createdAt": "2020-12-16T20:25:43Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoSetFileLinksUtil.java", "diffHunk": "@@ -31,10 +31,31 @@\n \n public class AutoSetFileLinksUtil {\n \n+    public static class LinkFilesResult {\n+        private final List<BibEntry> changedEntries = new ArrayList<>();\n+        private final List<IOException> fileExceptions = new ArrayList<>();\n+\n+        protected void addBibEntry(BibEntry bibEntry) {\n+            changedEntries.add(bibEntry);\n+        }\n+\n+        protected void addFileException(IOException exception) {\n+            fileExceptions.add(exception);\n+        }\n+\n+        public List<BibEntry> getBibEntries() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMDMyMw==", "bodyText": "I think this should be a normal dialog. I would reserve notify for \"everything went well\"-messages.", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r544600323", "createdAt": "2020-12-16T20:26:52Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java", "diffHunk": "@@ -34,47 +33,62 @@\n     private final UndoManager undoManager;\n     private final TaskExecutor taskExecutor;\n \n-    public AutoLinkFilesAction(JabRefFrame frame, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n-        this.dialogService = frame.getDialogService();\n+    public AutoLinkFilesAction(DialogService dialogService, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n+        this.dialogService = dialogService;\n         this.preferences = preferences;\n         this.stateManager = stateManager;\n         this.undoManager = undoManager;\n         this.taskExecutor = taskExecutor;\n \n         this.executable.bind(needsDatabase(this.stateManager).and(needsEntriesSelected(stateManager)));\n         this.statusMessage.bind(BindingsHelper.ifThenElse(executable, \"\", Localization.lang(\"This operation requires one or more entries to be selected.\")));\n-\n     }\n \n     @Override\n     public void execute() {\n-        BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n-        List<BibEntry> entries = stateManager.getSelectedEntries();\n-\n-        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n-        AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n+        final BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n+        final List<BibEntry> entries = stateManager.getSelectedEntries();\n+        final AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n                 database,\n                 preferences.getFilePreferences(),\n                 preferences.getAutoLinkPreferences(),\n                 ExternalFileTypes.getInstance());\n-        Task<List<BibEntry>> linkFilesTask = new Task<>() {\n+        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n+\n+        if (entries.stream().mapToInt(entry -> entry.getFiles().size()).sum() == 0) {\n+            dialogService.notify(Localization.lang(\"The selected entries do not have any file links attached.\"));\n+            return;\n+        }\n \n+        Task<AutoSetFileLinksUtil.LinkFilesResult> linkFilesTask = new Task<>() {\n             @Override\n-            protected List<BibEntry> call() {\n+            protected AutoSetFileLinksUtil.LinkFilesResult call() {\n                 return util.linkAssociatedFiles(entries, nc);\n             }\n \n             @Override\n             protected void succeeded() {\n-                if (!getValue().isEmpty()) {\n-                    if (nc.hasEdits()) {\n-                        nc.end();\n-                        undoManager.addEdit(nc);\n-                    }\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\"));\n-                } else {\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\") + \" \" + Localization.lang(\"No files found.\"));\n+                AutoSetFileLinksUtil.LinkFilesResult result = getValue();\n+\n+                if (!result.getFileExceptions().isEmpty()) {\n+                    dialogService.notify(Localization.lang(\"Problem finding files. See error log for details.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMDk5OQ==", "bodyText": "Reuse Localization.lang(\"Finished automatically setting external links.\") from above by splitting the Localization.lang(...) here.", "url": "https://github.com/JabRef/jabref/pull/6842#discussion_r544600999", "createdAt": "2020-12-16T20:28:04Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/externalfiles/AutoLinkFilesAction.java", "diffHunk": "@@ -34,47 +33,62 @@\n     private final UndoManager undoManager;\n     private final TaskExecutor taskExecutor;\n \n-    public AutoLinkFilesAction(JabRefFrame frame, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n-        this.dialogService = frame.getDialogService();\n+    public AutoLinkFilesAction(DialogService dialogService, PreferencesService preferences, StateManager stateManager, UndoManager undoManager, TaskExecutor taskExecutor) {\n+        this.dialogService = dialogService;\n         this.preferences = preferences;\n         this.stateManager = stateManager;\n         this.undoManager = undoManager;\n         this.taskExecutor = taskExecutor;\n \n         this.executable.bind(needsDatabase(this.stateManager).and(needsEntriesSelected(stateManager)));\n         this.statusMessage.bind(BindingsHelper.ifThenElse(executable, \"\", Localization.lang(\"This operation requires one or more entries to be selected.\")));\n-\n     }\n \n     @Override\n     public void execute() {\n-        BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n-        List<BibEntry> entries = stateManager.getSelectedEntries();\n-\n-        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n-        AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n+        final BibDatabaseContext database = stateManager.getActiveDatabase().orElseThrow(() -> new NullPointerException(\"Database null\"));\n+        final List<BibEntry> entries = stateManager.getSelectedEntries();\n+        final AutoSetFileLinksUtil util = new AutoSetFileLinksUtil(\n                 database,\n                 preferences.getFilePreferences(),\n                 preferences.getAutoLinkPreferences(),\n                 ExternalFileTypes.getInstance());\n-        Task<List<BibEntry>> linkFilesTask = new Task<>() {\n+        final NamedCompound nc = new NamedCompound(Localization.lang(\"Automatically set file links\"));\n+\n+        if (entries.stream().mapToInt(entry -> entry.getFiles().size()).sum() == 0) {\n+            dialogService.notify(Localization.lang(\"The selected entries do not have any file links attached.\"));\n+            return;\n+        }\n \n+        Task<AutoSetFileLinksUtil.LinkFilesResult> linkFilesTask = new Task<>() {\n             @Override\n-            protected List<BibEntry> call() {\n+            protected AutoSetFileLinksUtil.LinkFilesResult call() {\n                 return util.linkAssociatedFiles(entries, nc);\n             }\n \n             @Override\n             protected void succeeded() {\n-                if (!getValue().isEmpty()) {\n-                    if (nc.hasEdits()) {\n-                        nc.end();\n-                        undoManager.addEdit(nc);\n-                    }\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\"));\n-                } else {\n-                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\") + \" \" + Localization.lang(\"No files found.\"));\n+                AutoSetFileLinksUtil.LinkFilesResult result = getValue();\n+\n+                if (!result.getFileExceptions().isEmpty()) {\n+                    dialogService.notify(Localization.lang(\"Problem finding files. See error log for details.\"));\n+                    return;\n                 }\n+\n+                if (result.getBibEntries().isEmpty()) {\n+                    dialogService.notify(Localization.lang(\"Finished automatically setting external links.\")\n+                            + \" \" + Localization.lang(\"No files found.\"));\n+                    return;\n+                }\n+\n+                if (nc.hasEdits()) {\n+                    nc.end();\n+                    undoManager.addEdit(nc);\n+                }\n+\n+                dialogService.notify(Localization.lang(\n+                        \"Finished automatically setting external links. Changed %0 entries.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c351314ae60722a858447fa0c81e554eb99df801"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d8140fcd00c6591fc1f89b4ae1eab8d08bd485", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/36d8140fcd00c6591fc1f89b4ae1eab8d08bd485", "committedDate": "2020-12-18T13:43:06Z", "message": "Included remarks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc07f289b2d7370d1fcab43f554a4354ebfb8955", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/fc07f289b2d7370d1fcab43f554a4354ebfb8955", "committedDate": "2020-12-18T13:47:25Z", "message": "Merge remote-tracking branch 'IfIWantedTo/fix-issue-5890' into IfIWantedTo-fix-issue-5890"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12fefda8b78bdf58af00c0765a9a70e12bd6049f", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/12fefda8b78bdf58af00c0765a9a70e12bd6049f", "committedDate": "2020-12-18T13:50:50Z", "message": "Merge error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTUzNTcz", "url": "https://github.com/JabRef/jabref/pull/6842#pullrequestreview-555953573", "createdAt": "2020-12-19T16:42:09Z", "commit": {"oid": "12fefda8b78bdf58af00c0765a9a70e12bd6049f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 135, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}