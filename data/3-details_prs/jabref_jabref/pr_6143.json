{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTk1MDI3", "number": 6143, "title": "Add APS Fetcher (refactored)", "bodyText": "Fixes #818, part of #2581.\nFollow up from #6026\n\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for bigger UI changes)\n Checked documentation: Is the information available and up to date? If not: Issue created at https://github.com/JabRef/user-documentation/issues.", "createdAt": "2020-03-17T18:07:56Z", "url": "https://github.com/JabRef/jabref/pull/6143", "merged": true, "mergeCommit": {"oid": "99183e1680fc7dfaa7b3b3f1628fa1331a041594"}, "closed": true, "closedAt": "2020-03-18T19:28:37Z", "author": {"login": "Siedlerchr"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIJjmBAH2gAyMzg5OTk1MDI3OjViYTIzYzc0MWNlMWVlY2FkNzY5MGE2OWRlMWM4Yzk5ZmVmZDUyMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO7GqhAH2gAyMzg5OTk1MDI3OmQ2Mjk5YjBjMTFiY2Q3NDZlMmM0MTk4MTA3Y2MyZDgyMDY1OWI1NDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5ba23c741ce1eecad7690a69de1c8c99fefd5206", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/5ba23c741ce1eecad7690a69de1c8c99fefd5206", "committedDate": "2020-02-26T16:45:30Z", "message": "Add APS fetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d9e7e70aa9a0b998c98aa1ce5a1d22a48d6077", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/33d9e7e70aa9a0b998c98aa1ce5a1d22a48d6077", "committedDate": "2020-02-26T16:45:30Z", "message": "Fix case sensitivity bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b88570f41d2b756700a9aa9af347fa64737268f7", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/b88570f41d2b756700a9aa9af347fa64737268f7", "committedDate": "2020-02-26T16:45:30Z", "message": "Refactor ApsFetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4df8aae99e00bc1adaeefde56ff92f2f79eed87", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/d4df8aae99e00bc1adaeefde56ff92f2f79eed87", "committedDate": "2020-02-26T16:52:36Z", "message": "Add note about APS fetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "827434c16736f165d6f1873a1eb350b41e3849af", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/827434c16736f165d6f1873a1eb350b41e3849af", "committedDate": "2020-02-27T10:43:54Z", "message": "Refactor findFulltext()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ff30beb3926408fa20044cf6e67d75a099f7106", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/5ff30beb3926408fa20044cf6e67d75a099f7106", "committedDate": "2020-02-27T10:56:48Z", "message": "Refactor getId()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f11a5c4b27f4a34fba9ece9aef161c3ed3d47c0", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/5f11a5c4b27f4a34fba9ece9aef161c3ed3d47c0", "committedDate": "2020-02-27T12:00:03Z", "message": "Parameterize ApsFetcherTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a855dc0fc28df6ac546ae289367522c47dad643", "author": {"user": {"login": "augustjanse", "name": "August Janse"}}, "url": "https://github.com/JabRef/jabref/commit/7a855dc0fc28df6ac546ae289367522c47dad643", "committedDate": "2020-02-27T12:00:18Z", "message": "Add link to APS changelog entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b7a4f865bc79030f978127580b6dac36c424f7", "author": {"user": {"login": "Siedlerchr", "name": "Christoph"}}, "url": "https://github.com/JabRef/jabref/commit/e1b7a4f865bc79030f978127580b6dac36c424f7", "committedDate": "2020-03-17T17:19:39Z", "message": "Merge branch 'aps-fetcher' of https://github.com/augustjanse/jabref into adsfetcher\n\n* 'aps-fetcher' of https://github.com/augustjanse/jabref:\n  Add link to APS changelog entry\n  Parameterize ApsFetcherTest\n  Refactor getId()\n  Refactor findFulltext()\n  Add note about APS fetcher\n  Refactor ApsFetcher\n  Fix case sensitivity bug\n  Add APS fetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81", "author": {"user": {"login": "Siedlerchr", "name": "Christoph"}}, "url": "https://github.com/JabRef/jabref/commit/f6bd3b0fd41dba4105c08d5c789a8785c6a11d81", "committedDate": "2020-03-17T18:06:54Z", "message": "Refactor APS Fetcher"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzAzODEz", "url": "https://github.com/JabRef/jabref/pull/6143#pullrequestreview-376303813", "createdAt": "2020-03-17T18:34:48Z", "commit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODozNDo0OFrOF3pIDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0MTowM1rOF3pWcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4OTgwNQ==", "bodyText": "This is a duplicate.", "url": "https://github.com/JabRef/jabref/pull/6143#discussion_r393889805", "createdAt": "2020-03-17T18:34:48Z", "author": {"login": "tobiasdiez"}, "path": "CHANGELOG.md", "diffHunk": "@@ -40,6 +40,8 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n - Filenames of external files can no longer contain curly braces. [#5926](https://github.com/JabRef/jabref/pull/5926)\n - We made the filters more easily accessible in the integrity check dialog. [#5955](https://github.com/JabRef/jabref/pull/5955)\n - We reimplemented and improved the dialog \"Customize entry types\". [#4719](https://github.com/JabRef/jabref/issues/4719)\n+- We reimplemented and improved the dialog \"Customize entry types\" [#4719](https://github.com/JabRef/jabref/issues/4719)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MDkzOQ==", "bodyText": "This should be debug or warn", "url": "https://github.com/JabRef/jabref/pull/6143#discussion_r393890939", "createdAt": "2020-03-17T18:36:40Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/ApsFetcher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.jabref.logic.importer.fetcher;\n+\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.jabref.logic.importer.FulltextFetcher;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.entry.identifier.DOI;\n+\n+import kong.unirest.Unirest;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * FulltextFetcher implementation that attempts to find a PDF URL at APS. Also see the <a\n+ * href=\"https://harvest.aps.org/docs/harvest-api\">API</a>, although it isn't currently used.\n+ */\n+public class ApsFetcher implements FulltextFetcher {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ApsFetcher.class);\n+\n+    // The actual API needs either an API key or a header. This is a workaround.\n+    private static final String DOI_URL = \"https://www.doi.org/\";\n+    private static final String PDF_URL = \"https://journals.aps.org/prl/pdf/\";\n+\n+    @Override\n+    public Optional<URL> findFullText(BibEntry entry) throws IOException {\n+        Objects.requireNonNull(entry);\n+\n+        Optional<DOI> doi = entry.getField(StandardField.DOI).flatMap(DOI::parse);\n+\n+        if (!doi.isPresent()) {\n+            return Optional.empty();\n+        }\n+\n+        Optional<String> id = getId(doi.get().getDOI());\n+\n+        if (id.isPresent()) {\n+\n+            String pdfRequestUrl = PDF_URL + id.get();\n+            int code = Unirest.head(pdfRequestUrl).asJson().getStatus();\n+\n+            if (code == 200) {\n+                LOGGER.info(\"Fulltext PDF found @ APS.\");\n+                try {\n+                    return Optional.of(new URL(pdfRequestUrl));\n+                } catch (MalformedURLException e) {\n+                    LOGGER.info(\"APS returned malformed URL, cannot find PDF.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MTA2Mg==", "bodyText": "I guess debug level suffices", "url": "https://github.com/JabRef/jabref/pull/6143#discussion_r393891062", "createdAt": "2020-03-17T18:36:54Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/ApsFetcher.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.jabref.logic.importer.fetcher;\n+\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.jabref.logic.importer.FulltextFetcher;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.entry.identifier.DOI;\n+\n+import kong.unirest.Unirest;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * FulltextFetcher implementation that attempts to find a PDF URL at APS. Also see the <a\n+ * href=\"https://harvest.aps.org/docs/harvest-api\">API</a>, although it isn't currently used.\n+ */\n+public class ApsFetcher implements FulltextFetcher {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ApsFetcher.class);\n+\n+    // The actual API needs either an API key or a header. This is a workaround.\n+    private static final String DOI_URL = \"https://www.doi.org/\";\n+    private static final String PDF_URL = \"https://journals.aps.org/prl/pdf/\";\n+\n+    @Override\n+    public Optional<URL> findFullText(BibEntry entry) throws IOException {\n+        Objects.requireNonNull(entry);\n+\n+        Optional<DOI> doi = entry.getField(StandardField.DOI).flatMap(DOI::parse);\n+\n+        if (!doi.isPresent()) {\n+            return Optional.empty();\n+        }\n+\n+        Optional<String> id = getId(doi.get().getDOI());\n+\n+        if (id.isPresent()) {\n+\n+            String pdfRequestUrl = PDF_URL + id.get();\n+            int code = Unirest.head(pdfRequestUrl).asJson().getStatus();\n+\n+            if (code == 200) {\n+                LOGGER.info(\"Fulltext PDF found @ APS.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MzQ5MQ==", "bodyText": "To be honest, I don't see any need to have a parameterized test. As the comments indicate the tests actually check different cases and behaviours. It just happens that the test code is almost the same. Since the code reusage of the parameterized test is minimal, I would prefer if the tests could be split.", "url": "https://github.com/JabRef/jabref/pull/6143#discussion_r393893491", "createdAt": "2020-03-17T18:41:03Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/ApsFetcherTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.logic.importer.fetcher;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.testutils.category.FetcherTest;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@FetcherTest\n+class ApsFetcherTest {\n+\n+    private ApsFetcher finder;\n+\n+    @BeforeEach\n+    void setUp() {\n+        finder = new ApsFetcher();\n+    }\n+\n+    private static Stream<Arguments> provideBibEntriesWithDois() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6bd3b0fd41dba4105c08d5c789a8785c6a11d81"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30063369b144c88bbad62787e7c7368066f30c5a", "author": {"user": {"login": "Siedlerchr", "name": "Christoph"}}, "url": "https://github.com/JabRef/jabref/commit/30063369b144c88bbad62787e7c7368066f30c5a", "committedDate": "2020-03-18T11:30:42Z", "message": "Merge remote-tracking branch 'upstream/master' into adsfetcher\n\n* upstream/master:\n  Squashed 'src/main/resources/csl-styles/' changes from 268df9ebc7..db8bd334bd"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c06781e426bffe0f8d87d945f6585a66409eef7a", "author": {"user": {"login": "Siedlerchr", "name": "Christoph"}}, "url": "https://github.com/JabRef/jabref/commit/c06781e426bffe0f8d87d945f6585a66409eef7a", "committedDate": "2020-03-18T17:30:44Z", "message": "Merge remote-tracking branch 'upstream/master' into adsfetcher\n\n* upstream/master:\n  trigger build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6299b0c11bcd746e2c4198107cc2d820659b548", "author": {"user": {"login": "Siedlerchr", "name": "Christoph"}}, "url": "https://github.com/JabRef/jabref/commit/d6299b0c11bcd746e2c4198107cc2d820659b548", "committedDate": "2020-03-18T17:52:42Z", "message": "make separate tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 426, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}