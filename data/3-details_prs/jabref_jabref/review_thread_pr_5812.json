{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzI1NTQz", "number": 5812, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNToxNlrODWYzmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNjozMVrODWY04g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODAxNjkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNToxNlrOFbHrnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNToxNlrOFbHrnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MTcyNQ==", "bodyText": "I think, this should be \"Convert\" instead of \"Coerce\"?", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363981725", "createdAt": "2020-01-07T22:25:16Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "diffHunk": "@@ -213,25 +213,30 @@ private boolean checkForBibEntryExistence(BibEntry bibEntry) {\n     private void insertIntoFieldTable(BibEntry bibEntry) {\n         try {\n             // Inserting into FIELD table\n-            for (Field field : bibEntry.getFields()) {\n-                StringBuilder insertFieldQuery = new StringBuilder()\n-                        .append(\"INSERT INTO \")\n-                        .append(escape(\"FIELD\"))\n-                        .append(\"(\")\n-                        .append(escape(\"ENTRY_SHARED_ID\"))\n-                        .append(\", \")\n-                        .append(escape(\"NAME\"))\n-                        .append(\", \")\n-                        .append(escape(\"VALUE\"))\n-                        .append(\") VALUES(?, ?, ?)\");\n-\n-                try (PreparedStatement preparedFieldStatement = connection.prepareStatement(insertFieldQuery.toString())) {\n+            // Coerce to ArrayList in order to use List.get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODAxNzU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNTozMlrOFbHsAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNTozMlrOFbHsAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MTgyNQ==", "bodyText": "Can't we use the repeat() thing there, too?", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363981825", "createdAt": "2020-01-07T22:25:32Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "diffHunk": "@@ -213,25 +213,30 @@ private boolean checkForBibEntryExistence(BibEntry bibEntry) {\n     private void insertIntoFieldTable(BibEntry bibEntry) {\n         try {\n             // Inserting into FIELD table\n-            for (Field field : bibEntry.getFields()) {\n-                StringBuilder insertFieldQuery = new StringBuilder()\n-                        .append(\"INSERT INTO \")\n-                        .append(escape(\"FIELD\"))\n-                        .append(\"(\")\n-                        .append(escape(\"ENTRY_SHARED_ID\"))\n-                        .append(\", \")\n-                        .append(escape(\"NAME\"))\n-                        .append(\", \")\n-                        .append(escape(\"VALUE\"))\n-                        .append(\") VALUES(?, ?, ?)\");\n-\n-                try (PreparedStatement preparedFieldStatement = connection.prepareStatement(insertFieldQuery.toString())) {\n+            // Coerce to ArrayList in order to use List.get()\n+            List<Field> fields = new ArrayList<>(bibEntry.getFields());\n+            StringBuilder insertFieldQuery = new StringBuilder()\n+                    .append(\"INSERT INTO \")\n+                    .append(escape(\"FIELD\"))\n+                    .append(\"(\")\n+                    .append(escape(\"ENTRY_SHARED_ID\"))\n+                    .append(\", \")\n+                    .append(escape(\"NAME\"))\n+                    .append(\", \")\n+                    .append(escape(\"VALUE\"))\n+                    .append(\") VALUES(?, ?, ?)\");\n+            // Number of commas is fields.size() - 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODAxOTEyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNjowMlrOFbHs2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNjowMlrOFbHs2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MjA0Mw==", "bodyText": "\"eventually\" is a false friend. Please translate it to \"possibly\" or \"maybe\"", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363982043", "createdAt": "2020-01-07T22:26:02Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -95,6 +95,59 @@ void testInsertEntry() throws SQLException {\n         assertEquals(expectedFieldMap, actualFieldMap);\n     }\n \n+    @Test\n+    void testInsertMultipleEntries() throws SQLException {\n+        BibEntry firstEntry = getBibEntryExample();\n+        String firstId = firstEntry.getId();\n+        BibEntry secondEntry = getBibEntryExample2();\n+        String secondId = secondEntry.getId();\n+        BibEntry thirdEntry = getBibEntryExample3();\n+        String thirdId = thirdEntry.getId();\n+\n+        // This must eventually be changed to insertEntries() once that method is implemented", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODAyMDE4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNjozMVrOFbHthQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMjoyNjozMVrOFbHthQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk4MjIxMw==", "bodyText": "Please give the method a more meaningful name. For instance getShelahBibEntry.", "url": "https://github.com/JabRef/jabref/pull/5812#discussion_r363982213", "createdAt": "2020-01-07T22:26:31Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -311,6 +364,24 @@ private static BibEntry getBibEntryExample() {\n                 .withCiteKey(\"nanoproc1994\");\n     }\n \n+    private static BibEntry getBibEntryExample2() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931ccad7ab27f0340b7ee06073dca9b76ecbf63b"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2081, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}