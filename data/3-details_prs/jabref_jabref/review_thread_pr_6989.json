{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MzYwMjE0", "number": 6989, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyNDoyOFrOEsyIXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyNDoyOFrOEsyIXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mzk0MTQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToyNDoyOFrOHgNmFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjozODowOFrOHgPXlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzOTIyMQ==", "bodyText": "Possible exception if fieldParts is empty? Can this happen", "url": "https://github.com/JabRef/jabref/pull/6989#discussion_r503539221", "createdAt": "2020-10-12T21:24:28Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java", "diffHunk": "@@ -172,6 +172,43 @@ public String expand(BibEntry bibentry, Character keywordDelimiter, BibDatabase\n     public static String expandBrackets(String pattern, Character keywordDelimiter, BibEntry entry, BibDatabase database) {\n         Objects.requireNonNull(pattern);\n         Objects.requireNonNull(entry);\n+        return expandBrackets(pattern, expandBracketContent(keywordDelimiter, entry, database));\n+    }\n+\n+    /**\n+     * Utility method creating a function taking the string representation of the content of a bracketed expression and\n+     * expanding it.\n+     *\n+     * @param keywordDelimiter The keyword delimiter to use\n+     * @param entry            The {@link BibEntry} to use for expansion\n+     * @param database         The {@link BibDatabase} for field resolving. May be null.\n+     * @return a function accepting a bracketed expression and returning the result of expanding it\n+     */\n+    private static Function<String, String> expandBracketContent(Character keywordDelimiter, BibEntry entry, BibDatabase database) {\n+        return (String bracket) -> {\n+            String expandedPattern;\n+            List<String> fieldParts = parseFieldAndModifiers(bracket);\n+            // check whether there is a modifier on the end such as\n+            // \":lower\":\n+            expandedPattern = getFieldValue(entry, fieldParts.get(0), keywordDelimiter, database);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c67128ccbd69550e5d4a3f4c6ceef04649e99440"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2ODI3OQ==", "bodyText": "It will be an exception if fieldsPart is empty, which cannot happen. current is a StringBuilder, so parseFieldAndModifiers should at least return a list containing one empty String.\n\n  \n    \n      jabref/src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java\n    \n    \n        Lines 1130 to 1131\n      in\n      c67128c\n    \n    \n    \n    \n\n        \n          \n           parts.add(current.toString()); \n        \n\n        \n          \n           return parts; \n        \n    \n  \n\n\nNow that you have pointed it out though, it does make me nervous. I'll a test case since I do believe this is the correct behaviour, and I can't find a test for it (an empty bracketed expression []).", "url": "https://github.com/JabRef/jabref/pull/6989#discussion_r503568279", "createdAt": "2020-10-12T22:38:08Z", "author": {"login": "k3KAW8Pnf7mkmdSMPHz27"}, "path": "src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java", "diffHunk": "@@ -172,6 +172,43 @@ public String expand(BibEntry bibentry, Character keywordDelimiter, BibDatabase\n     public static String expandBrackets(String pattern, Character keywordDelimiter, BibEntry entry, BibDatabase database) {\n         Objects.requireNonNull(pattern);\n         Objects.requireNonNull(entry);\n+        return expandBrackets(pattern, expandBracketContent(keywordDelimiter, entry, database));\n+    }\n+\n+    /**\n+     * Utility method creating a function taking the string representation of the content of a bracketed expression and\n+     * expanding it.\n+     *\n+     * @param keywordDelimiter The keyword delimiter to use\n+     * @param entry            The {@link BibEntry} to use for expansion\n+     * @param database         The {@link BibDatabase} for field resolving. May be null.\n+     * @return a function accepting a bracketed expression and returning the result of expanding it\n+     */\n+    private static Function<String, String> expandBracketContent(Character keywordDelimiter, BibEntry entry, BibDatabase database) {\n+        return (String bracket) -> {\n+            String expandedPattern;\n+            List<String> fieldParts = parseFieldAndModifiers(bracket);\n+            // check whether there is a modifier on the end such as\n+            // \":lower\":\n+            expandedPattern = getFieldValue(entry, fieldParts.get(0), keywordDelimiter, database);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzOTIyMQ=="}, "originalCommit": {"oid": "c67128ccbd69550e5d4a3f4c6ceef04649e99440"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1605, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}