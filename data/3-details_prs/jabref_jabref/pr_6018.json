{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzgxOTYz", "number": 6018, "title": "Add ShortScience integration", "bodyText": "This PR introduces a simple integration towards ShortScience as tracked by #6015. The integration is in the form of an additional context menu item called Search ShortScience which, if clicked, will open the user's web browser to the search results for the selected entry's title.\nI experimented with generating a direct link to the ShortScience page for the article instead of linking to the search results, but the URI scheme is not entirely consistent nor predictable at ShortScience so it was deemed more effort than it was worth.\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for bigger UI changes)\n Checked documentation: Is the information available and up to date? If not: Issue created at https://github.com/JabRef/user-documentation/issues.\n Port right click menu to new style as in #5958\n\n\nThere are a few things I'm uncertain about implementation-wise. I implemented this in what I believe is the same way as the other menu actions, which is through the use of the deprecated class OldCommandWrapper. I'm not sure if this is the best place to put the functionality, nor if the deprecated class is still the correct approach. I'm also still working on a testing strategy.", "createdAt": "2020-02-25T20:23:03Z", "url": "https://github.com/JabRef/jabref/pull/6018", "merged": true, "mergeCommit": {"oid": "7fda4cc791eb43d5f5f15371829724bae9d813c9"}, "closed": true, "closedAt": "2020-03-06T09:49:16Z", "author": {"login": "stevensdavid"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHxkKcAH2gAyMzc5NzgxOTYzOjUzMWI3ZjMzZTYyMGJhNGViM2E5NmE2ZWFlODZmOWY2NGUzZmU5ZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK8-7nAH2gAyMzc5NzgxOTYzOjQ4ODgyZWFiMjU4ZWY5NDljYmZjZTFkOGEyN2M3OGRjN2VjYjA0NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "531b7f33e620ba4eb3a96a6eae86f9f64e3fe9ff", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/531b7f33e620ba4eb3a96a6eae86f9f64e3fe9ff", "committedDate": "2020-02-25T12:48:24Z", "message": "[feat] Implement mockup of ShortScience integration\n\nThis commit adds a simple integration of ShortScience.org\nin the form of an additional context menu action when an\nentry is selected. This action opens the user's web browser\nto the search page of ShortScience with the title of the\npaper entered. Essentially, this is our MVP for the\nintegration towards ShortScience bar some testing.\n\n[Issue: #3]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f949a008725c7d885949ab5fe00b8ecd0a00cc75", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/f949a008725c7d885949ab5fe00b8ecd0a00cc75", "committedDate": "2020-02-25T15:54:50Z", "message": "[fix] Rename menu item for searching ShortScience"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7303b233d681c7941e0738ee5ba3943e93a06fe7", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/7303b233d681c7941e0738ee5ba3943e93a06fe7", "committedDate": "2020-02-25T19:59:30Z", "message": "[refactor] Use URIBuilder for constructing URI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDUyODAw", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-364452800", "createdAt": "2020-02-25T21:14:48Z", "commit": {"oid": "7303b233d681c7941e0738ee5ba3943e93a06fe7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxNDo0OFrOFuVblA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxNDo0OFrOFuVblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyOTk0MA==", "bodyText": "Please implement a Fetcher (as the DOIFetcher or other fetchers do). --> Then, you can easily write test cases for the different shortscience urls etc.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384129940", "createdAt": "2020-02-25T21:14:48Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/BasePanel.java", "diffHunk": "@@ -1200,6 +1204,37 @@ public void action() {\n         }\n     }\n \n+    private class OpenShortScienceAction implements BaseAction {\n+        private static final String BASIC_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+\n+        @Override\n+        public void action() {\n+            final List<BibEntry> bes = mainTable.getSelectedEntries();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7303b233d681c7941e0738ee5ba3943e93a06fe7"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617d853ad05aedfe91a27185493f2183b934f716", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/617d853ad05aedfe91a27185493f2183b934f716", "committedDate": "2020-02-26T08:33:49Z", "message": "[refactor] Use new JavaFX style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c42c5c3335e46b94fb08cb33f7b8f253fa6d353", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/3c42c5c3335e46b94fb08cb33f7b8f253fa6d353", "committedDate": "2020-02-26T09:59:06Z", "message": "Merge branch 'replace_deprecated' of github.com:calixtus/jabref into issue/3-new-style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a0f0f0a8000236af948deae4c2968e82a78a11", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/31a0f0f0a8000236af948deae4c2968e82a78a11", "committedDate": "2020-02-26T13:12:04Z", "message": "Add localization strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172e0ef15f633bcdc7e08d70041b0b861ada1ea9", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/172e0ef15f633bcdc7e08d70041b0b861ada1ea9", "committedDate": "2020-02-26T13:12:31Z", "message": "Port to new context menu style\n\nThe new context menu style that is proposed in #5958 is now used for\nthe ShortScience integration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbe8ce6dbdadb6e1f93a29312a2860b52c031c68", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/fbe8ce6dbdadb6e1f93a29312a2860b52c031c68", "committedDate": "2020-02-26T13:26:08Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/a4363b22f33e6fd3609ce4223b85e83bb688d43f", "committedDate": "2020-02-26T16:04:58Z", "message": "Fix checkstyle compliance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDM1ODUy", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-365435852", "createdAt": "2020-02-27T06:17:13Z", "commit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjoxNzoxM1rOFvGW1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozNTowM1rOFvGo7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMTU0Mg==", "bodyText": "Use\nreturn entry.getField(StandardField.TITLE).map(title -> {\n  ...\n  return uriBuilder.toString();\n});", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384931542", "createdAt": "2020-02-27T06:17:13Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/maintable/OpenShortScienceAction.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.jabref.gui.maintable;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javafx.beans.binding.BooleanExpression;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.apache.http.client.utils.URIBuilder;\n+\n+import static org.jabref.gui.actions.ActionHelper.isFieldSetForSelectedEntry;\n+import static org.jabref.gui.actions.ActionHelper.needsEntriesSelected;\n+\n+public class OpenShortScienceAction extends SimpleCommand {\n+    private static final String BASIC_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+    private final DialogService dialogService;\n+    private final StateManager stateManager;\n+\n+    public OpenShortScienceAction(DialogService dialogService, StateManager stateManager) {\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+\n+        BooleanExpression fieldIsSet = isFieldSetForSelectedEntry(StandardField.TITLE, stateManager);\n+        this.executable.bind(needsEntriesSelected(1, stateManager).and(fieldIsSet));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        stateManager.getActiveDatabase().ifPresent(databaseContext -> {\n+            final List<BibEntry> bibEntries = stateManager.getSelectedEntries();\n+\n+            if (bibEntries.size() != 1) {\n+                dialogService.notify(Localization.lang(\"This operation requires exactly one item to be selected.\"));\n+                return;\n+            }\n+            getShortScienceSearchURL(bibEntries.get(0)).ifPresent(url -> {\n+                try {\n+                    JabRefDesktop.openExternalViewer(databaseContext, url, StandardField.URL);\n+                } catch (IOException ex) {\n+                    dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open ShortScience.\"), ex);\n+                }\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get a URL to the search results of ShortScience for the BibEntry's title\n+     * @param entry The entry to search for. Expects TITLE to be set for successful return.\n+     * @return The URL if it was successfully created\n+     */\n+    public static Optional<String> getShortScienceSearchURL(BibEntry entry) {\n+        Optional<String> title = entry.getField(StandardField.TITLE);\n+        if (!title.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMjAxMQ==", "bodyText": "This code should reside in the logic package somewhere - this is not user interaction, but some functionality. - it should also be tested in JUnit.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384932011", "createdAt": "2020-02-27T06:19:07Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/maintable/OpenShortScienceAction.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.jabref.gui.maintable;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javafx.beans.binding.BooleanExpression;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.apache.http.client.utils.URIBuilder;\n+\n+import static org.jabref.gui.actions.ActionHelper.isFieldSetForSelectedEntry;\n+import static org.jabref.gui.actions.ActionHelper.needsEntriesSelected;\n+\n+public class OpenShortScienceAction extends SimpleCommand {\n+    private static final String BASIC_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+    private final DialogService dialogService;\n+    private final StateManager stateManager;\n+\n+    public OpenShortScienceAction(DialogService dialogService, StateManager stateManager) {\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+\n+        BooleanExpression fieldIsSet = isFieldSetForSelectedEntry(StandardField.TITLE, stateManager);\n+        this.executable.bind(needsEntriesSelected(1, stateManager).and(fieldIsSet));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        stateManager.getActiveDatabase().ifPresent(databaseContext -> {\n+            final List<BibEntry> bibEntries = stateManager.getSelectedEntries();\n+\n+            if (bibEntries.size() != 1) {\n+                dialogService.notify(Localization.lang(\"This operation requires exactly one item to be selected.\"));\n+                return;\n+            }\n+            getShortScienceSearchURL(bibEntries.get(0)).ifPresent(url -> {\n+                try {\n+                    JabRefDesktop.openExternalViewer(databaseContext, url, StandardField.URL);\n+                } catch (IOException ex) {\n+                    dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open ShortScience.\"), ex);\n+                }\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get a URL to the search results of ShortScience for the BibEntry's title\n+     * @param entry The entry to search for. Expects TITLE to be set for successful return.\n+     * @return The URL if it was successfully created\n+     */\n+    public static Optional<String> getShortScienceSearchURL(BibEntry entry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMjE2OQ==", "bodyText": "Good to have test caes. They should also reside in th elogic package.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384932169", "createdAt": "2020-02-27T06:19:41Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/gui/maintable/OpenShortScienceActionTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.gui.maintable;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import static org.jabref.gui.maintable.OpenShortScienceAction.getShortScienceSearchURL;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class OpenShortScienceActionTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMjQ2Ng==", "bodyText": "Can't we use assertEquals(Optional.empty(), getShortScienceSearchURL(entry));? In a case of a failure, IntelliJ can show the diff between the returned URL and the empty one. -- Not that important in that place, but this is a general testing style", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384932466", "createdAt": "2020-02-27T06:20:49Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/gui/maintable/OpenShortScienceActionTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.gui.maintable;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import static org.jabref.gui.maintable.OpenShortScienceAction.getShortScienceSearchURL;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class OpenShortScienceActionTest {\n+\n+    /**\n+     * Validates URL conformance to RFC2396. Does not perform complex checks such as opening connections.\n+     */\n+    private boolean urlIsValid(String url) {\n+        try {\n+            // This will throw on non-compliance to RFC2396.\n+            new URL(url).toURI();\n+            return true;\n+        } catch (MalformedURLException | URISyntaxException e) {\n+            return false;\n+        }\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLEncodesSpecialCharacters() {\n+        BibEntry entry = new BibEntry();\n+        String rfc3986ReservedCharacters = \"!*'();:@&=+$,/?#[]\";\n+        entry.setField(StandardField.TITLE, rfc3986ReservedCharacters);\n+        Optional<String> url = getShortScienceSearchURL(entry);\n+        assertTrue(url.isPresent() && urlIsValid(url.get()));\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLReturnsEmptyOnMissingTitle() {\n+        BibEntry entry = new BibEntry();\n+        assertTrue(getShortScienceSearchURL(entry).isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMjY2NA==", "bodyText": "&& is an indicator of strange test clauses. Maybe split up into two asserts.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384932664", "createdAt": "2020-02-27T06:21:36Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/gui/maintable/OpenShortScienceActionTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.gui.maintable;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import static org.jabref.gui.maintable.OpenShortScienceAction.getShortScienceSearchURL;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class OpenShortScienceActionTest {\n+\n+    /**\n+     * Validates URL conformance to RFC2396. Does not perform complex checks such as opening connections.\n+     */\n+    private boolean urlIsValid(String url) {\n+        try {\n+            // This will throw on non-compliance to RFC2396.\n+            new URL(url).toURI();\n+            return true;\n+        } catch (MalformedURLException | URISyntaxException e) {\n+            return false;\n+        }\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLEncodesSpecialCharacters() {\n+        BibEntry entry = new BibEntry();\n+        String rfc3986ReservedCharacters = \"!*'();:@&=+$,/?#[]\";\n+        entry.setField(StandardField.TITLE, rfc3986ReservedCharacters);\n+        Optional<String> url = getShortScienceSearchURL(entry);\n+        assertTrue(url.isPresent() && urlIsValid(url.get()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNDQ1MA==", "bodyText": "You can use\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BibEntry entry = new BibEntry();\n          \n          \n            \n                    BibEntry entry = new BibEntry()\n          \n          \n            \n                      .withField(tandardField.TITLE, \"JabRef bibliography management\");", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384934450", "createdAt": "2020-02-27T06:28:39Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/gui/maintable/OpenShortScienceActionTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.gui.maintable;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import static org.jabref.gui.maintable.OpenShortScienceAction.getShortScienceSearchURL;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class OpenShortScienceActionTest {\n+\n+    /**\n+     * Validates URL conformance to RFC2396. Does not perform complex checks such as opening connections.\n+     */\n+    private boolean urlIsValid(String url) {\n+        try {\n+            // This will throw on non-compliance to RFC2396.\n+            new URL(url).toURI();\n+            return true;\n+        } catch (MalformedURLException | URISyntaxException e) {\n+            return false;\n+        }\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLEncodesSpecialCharacters() {\n+        BibEntry entry = new BibEntry();\n+        String rfc3986ReservedCharacters = \"!*'();:@&=+$,/?#[]\";\n+        entry.setField(StandardField.TITLE, rfc3986ReservedCharacters);\n+        Optional<String> url = getShortScienceSearchURL(entry);\n+        assertTrue(url.isPresent() && urlIsValid(url.get()));\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLReturnsEmptyOnMissingTitle() {\n+        BibEntry entry = new BibEntry();\n+        assertTrue(getShortScienceSearchURL(entry).isEmpty());\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLLinksToSearchResults() {\n+        BibEntry entry = new BibEntry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNDY0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(url.isPresent() && url.get().equals(\"https://www.shortscience.org/internalsearch?q=JabRef+bibliography+management\"));\n          \n          \n            \n                    assertEquals(Optional.of(\"https://www.shortscience.org/internalsearch?q=JabRef+bibliography+management\"), url);", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384934642", "createdAt": "2020-02-27T06:29:27Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/gui/maintable/OpenShortScienceActionTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.jabref.gui.maintable;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import static org.jabref.gui.maintable.OpenShortScienceAction.getShortScienceSearchURL;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class OpenShortScienceActionTest {\n+\n+    /**\n+     * Validates URL conformance to RFC2396. Does not perform complex checks such as opening connections.\n+     */\n+    private boolean urlIsValid(String url) {\n+        try {\n+            // This will throw on non-compliance to RFC2396.\n+            new URL(url).toURI();\n+            return true;\n+        } catch (MalformedURLException | URISyntaxException e) {\n+            return false;\n+        }\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLEncodesSpecialCharacters() {\n+        BibEntry entry = new BibEntry();\n+        String rfc3986ReservedCharacters = \"!*'();:@&=+$,/?#[]\";\n+        entry.setField(StandardField.TITLE, rfc3986ReservedCharacters);\n+        Optional<String> url = getShortScienceSearchURL(entry);\n+        assertTrue(url.isPresent() && urlIsValid(url.get()));\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLReturnsEmptyOnMissingTitle() {\n+        BibEntry entry = new BibEntry();\n+        assertTrue(getShortScienceSearchURL(entry).isEmpty());\n+    }\n+\n+    @Test\n+    void getShortScienceSearchURLLinksToSearchResults() {\n+        BibEntry entry = new BibEntry();\n+        // Take an arbitrary article name\n+        String title = \"JabRef bibliography management\";\n+        entry.setField(StandardField.TITLE, title);\n+        Optional<String> url = getShortScienceSearchURL(entry);\n+        // Expected behaviour is to link to the search results page, /internalsearch\n+        assertTrue(url.isPresent() && url.get().equals(\"https://www.shortscience.org/internalsearch?q=JabRef+bibliography+management\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTgxNA==", "bodyText": "Place it into org.jabref.logic.util (as new class). I did not find a petter place.\norg.jabref.logic.importer could also fit, but not that well.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384935814", "createdAt": "2020-02-27T06:33:59Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/maintable/OpenShortScienceAction.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.jabref.gui.maintable;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javafx.beans.binding.BooleanExpression;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.apache.http.client.utils.URIBuilder;\n+\n+import static org.jabref.gui.actions.ActionHelper.isFieldSetForSelectedEntry;\n+import static org.jabref.gui.actions.ActionHelper.needsEntriesSelected;\n+\n+public class OpenShortScienceAction extends SimpleCommand {\n+    private static final String BASIC_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+    private final DialogService dialogService;\n+    private final StateManager stateManager;\n+\n+    public OpenShortScienceAction(DialogService dialogService, StateManager stateManager) {\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+\n+        BooleanExpression fieldIsSet = isFieldSetForSelectedEntry(StandardField.TITLE, stateManager);\n+        this.executable.bind(needsEntriesSelected(1, stateManager).and(fieldIsSet));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        stateManager.getActiveDatabase().ifPresent(databaseContext -> {\n+            final List<BibEntry> bibEntries = stateManager.getSelectedEntries();\n+\n+            if (bibEntries.size() != 1) {\n+                dialogService.notify(Localization.lang(\"This operation requires exactly one item to be selected.\"));\n+                return;\n+            }\n+            getShortScienceSearchURL(bibEntries.get(0)).ifPresent(url -> {\n+                try {\n+                    JabRefDesktop.openExternalViewer(databaseContext, url, StandardField.URL);\n+                } catch (IOException ex) {\n+                    dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open ShortScience.\"), ex);\n+                }\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get a URL to the search results of ShortScience for the BibEntry's title\n+     * @param entry The entry to search for. Expects TITLE to be set for successful return.\n+     * @return The URL if it was successfully created\n+     */\n+    public static Optional<String> getShortScienceSearchURL(BibEntry entry) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMjAxMQ=="}, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNjE3NA==", "bodyText": "Please add an empty line above.\nPlease use BibEntry's title in both lines (title vs. TITLE) - or use StandardFields.TITLE here.", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r384936174", "createdAt": "2020-02-27T06:35:03Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/maintable/OpenShortScienceAction.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.jabref.gui.maintable;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javafx.beans.binding.BooleanExpression;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.desktop.JabRefDesktop;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.apache.http.client.utils.URIBuilder;\n+\n+import static org.jabref.gui.actions.ActionHelper.isFieldSetForSelectedEntry;\n+import static org.jabref.gui.actions.ActionHelper.needsEntriesSelected;\n+\n+public class OpenShortScienceAction extends SimpleCommand {\n+    private static final String BASIC_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+    private final DialogService dialogService;\n+    private final StateManager stateManager;\n+\n+    public OpenShortScienceAction(DialogService dialogService, StateManager stateManager) {\n+        this.dialogService = dialogService;\n+        this.stateManager = stateManager;\n+\n+        BooleanExpression fieldIsSet = isFieldSetForSelectedEntry(StandardField.TITLE, stateManager);\n+        this.executable.bind(needsEntriesSelected(1, stateManager).and(fieldIsSet));\n+    }\n+\n+    @Override\n+    public void execute() {\n+        stateManager.getActiveDatabase().ifPresent(databaseContext -> {\n+            final List<BibEntry> bibEntries = stateManager.getSelectedEntries();\n+\n+            if (bibEntries.size() != 1) {\n+                dialogService.notify(Localization.lang(\"This operation requires exactly one item to be selected.\"));\n+                return;\n+            }\n+            getShortScienceSearchURL(bibEntries.get(0)).ifPresent(url -> {\n+                try {\n+                    JabRefDesktop.openExternalViewer(databaseContext, url, StandardField.URL);\n+                } catch (IOException ex) {\n+                    dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open ShortScience.\"), ex);\n+                }\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get a URL to the search results of ShortScience for the BibEntry's title\n+     * @param entry The entry to search for. Expects TITLE to be set for successful return.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4363b22f33e6fd3609ce4223b85e83bb688d43f"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "436a1766bb7c2d13dee5f3855f2f9aa7a0e7163c", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/436a1766bb7c2d13dee5f3855f2f9aa7a0e7163c", "committedDate": "2020-02-27T08:40:44Z", "message": "[refactor] Adjust code according to feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b21b543f3f79c36fd94d8cfb30faeda367bfed3e", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/b21b543f3f79c36fd94d8cfb30faeda367bfed3e", "committedDate": "2020-02-27T08:51:28Z", "message": "Add changelog note about shortscience"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9d305383b431aa06b7d8bc7f022df3cbda7de0b", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/d9d305383b431aa06b7d8bc7f022df3cbda7de0b", "committedDate": "2020-02-27T08:56:20Z", "message": "Fix import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a68d38b63ca27dd8e664b0176fa2f200da89b19a", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/a68d38b63ca27dd8e664b0176fa2f200da89b19a", "committedDate": "2020-02-27T10:58:47Z", "message": "Rename ExternalLinkGenerator to ExternalLinkCreator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1240cd104e203c685fb379cdf416db9d76adafa6", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/1240cd104e203c685fb379cdf416db9d76adafa6", "committedDate": "2020-02-27T12:59:11Z", "message": "Merge branch 'replace_deprecated' into issue/3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb90e80dcf2f84a756d198b25640d34c898c8c74", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/eb90e80dcf2f84a756d198b25640d34c898c8c74", "committedDate": "2020-02-27T14:57:21Z", "message": "Move test to proper location and file name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODkyODA2", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-365892806", "createdAt": "2020-02-27T18:23:08Z", "commit": {"oid": "eb90e80dcf2f84a756d198b25640d34c898c8c74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoyMzowOFrOFvcKIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoyMzowOFrOFvcKIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4ODczNg==", "bodyText": "Rename the key? Is it open or Search?", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r385288736", "createdAt": "2020-02-27T18:23:08Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/actions/StandardActions.java", "diffHunk": "@@ -33,6 +33,7 @@\n     SEND_AS_EMAIL(Localization.lang(\"Send as email\"), IconTheme.JabRefIcons.EMAIL),\n     OPEN_EXTERNAL_FILE(Localization.lang(\"Open file\"), IconTheme.JabRefIcons.FILE, KeyBinding.OPEN_FILE),\n     OPEN_URL(Localization.lang(\"Open URL or DOI\"), IconTheme.JabRefIcons.WWW, KeyBinding.OPEN_URL_OR_DOI),\n+    OPEN_SHORTSCIENCE(Localization.lang(\"Search ShortScience\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb90e80dcf2f84a756d198b25640d34c898c8c74"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODkzNDk3", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-365893497", "createdAt": "2020-02-27T18:24:04Z", "commit": {"oid": "eb90e80dcf2f84a756d198b25640d34c898c8c74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoyNDowNVrOFvcMVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoyNDowNVrOFvcMVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4OTMwMg==", "bodyText": "Please also pass the original exception as parameter. Just in case", "url": "https://github.com/JabRef/jabref/pull/6018#discussion_r385289302", "createdAt": "2020-02-27T18:24:05Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/util/ExternalLinkCreator.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.jabref.logic.util;\n+\n+import java.net.URISyntaxException;\n+import java.util.Optional;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.apache.http.client.utils.URIBuilder;\n+\n+public class ExternalLinkCreator {\n+    private static final String SHORTSCIENCE_SEARCH_URL = \"https://www.shortscience.org/internalsearch\";\n+\n+    /**\n+     * Get a URL to the search results of ShortScience for the BibEntry's title\n+     *\n+     * @param entry The entry to search for. Expects the BibEntry's title to be set for successful return.\n+     * @return The URL if it was successfully created\n+     */\n+    public static Optional<String> getShortScienceSearchURL(BibEntry entry) {\n+        return entry.getField(StandardField.TITLE).map(title -> {\n+            URIBuilder uriBuilder;\n+            try {\n+                uriBuilder = new URIBuilder(SHORTSCIENCE_SEARCH_URL);\n+            } catch (URISyntaxException e) {\n+                // This should never be able to happen as it would require the field to be misconfigured.\n+                throw new AssertionError(\"ShortScience URL is invalid.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb90e80dcf2f84a756d198b25640d34c898c8c74"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9abcb14ae3946fa0d75f3860313a7ccd91276e3e", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/9abcb14ae3946fa0d75f3860313a7ccd91276e3e", "committedDate": "2020-02-27T20:11:36Z", "message": "Fix inconsistent naming and add exception cause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "742dc5eb77f7f5d345f978ad42bd225301205b08", "author": {"user": {"login": "stevensdavid", "name": "David Stevens"}}, "url": "https://github.com/JabRef/jabref/commit/742dc5eb77f7f5d345f978ad42bd225301205b08", "committedDate": "2020-02-27T20:15:59Z", "message": "Rename missed references to Search Shortscience"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDU1MjU4", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-366055258", "createdAt": "2020-02-27T22:48:43Z", "commit": {"oid": "742dc5eb77f7f5d345f978ad42bd225301205b08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Mjk5ODE0", "url": "https://github.com/JabRef/jabref/pull/6018#pullrequestreview-366299814", "createdAt": "2020-02-28T10:32:07Z", "commit": {"oid": "742dc5eb77f7f5d345f978ad42bd225301205b08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48882eab258ef949cbfce1d8a27c78dc7ecb0451", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/48882eab258ef949cbfce1d8a27c78dc7ecb0451", "committedDate": "2020-03-06T09:48:22Z", "message": "Merge branch 'replace_deprecated' into issue/3"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}