{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODIxMDAx", "number": 6790, "title": "Fix more fetchers", "bodyText": "This PR fixes fetchers (refs #6369):\n\nAdd cleanup for Library of Congress\nSpringerLink now uses the SpringerNature API key (same key can be used) - refs #6729\nAdd URL logger for IEEE (and other fetchers)\n\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-08-24T22:31:49Z", "url": "https://github.com/JabRef/jabref/pull/6790", "merged": true, "mergeCommit": {"oid": "d05217092ef7ae28fdbbd98fd5f6b5e323191f23"}, "closed": true, "closedAt": "2020-08-26T20:03:53Z", "author": {"login": "koppor"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCJHSDgH2gAyNDcyODIxMDAxOjk2MzQ5ZGVhZThlODJhMzRjMTFhNTM2ODRmZDFmZjg4YjNiMjhhZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCxVQbgH2gAyNDcyODIxMDAxOmJiYzk5NGE3ZDdlNDRjMWFiZGNlOTM0MmI5MWI1N2QzZmJjMWY1ZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96349deae8e82a34c11a53684fd1ff88b3b28af2", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/96349deae8e82a34c11a53684fd1ff88b3b28af2", "committedDate": "2020-08-24T21:02:11Z", "message": "Refine Google Scholar\n\n- Remove broken URL for title search\n- Switch to google.ch (maybe that's better?)\n- Add more LOGGER statements to Google Scho"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4207ada6d61951f93549f9211f805d0e2c1afe96", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/4207ada6d61951f93549f9211f805d0e2c1afe96", "committedDate": "2020-08-24T21:52:47Z", "message": "Fix the bad data of MODS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5dfdc78b8ae202438148c5361618c33b3a886a", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/6a5dfdc78b8ae202438148c5361618c33b3a886a", "committedDate": "2020-08-24T22:03:50Z", "message": "Add failed URL to logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f69f78239b2acc1734dd2d9626016f17b2f1c67b", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/f69f78239b2acc1734dd2d9626016f17b2f1c67b", "committedDate": "2020-08-24T22:23:45Z", "message": "Log used URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab731d12a9025c33b7c4269e706741aa5ff1c17", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/cab731d12a9025c33b7c4269e706741aa5ff1c17", "committedDate": "2020-08-24T22:23:52Z", "message": "Refine comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1ff139afafe6788deccaa2136d4584e45fdd41e", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/e1ff139afafe6788deccaa2136d4584e45fdd41e", "committedDate": "2020-08-24T22:24:08Z", "message": "Disable the test for a non-working capability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe4713468033cd2add6a18769ac39a6b1dad9454", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/fe4713468033cd2add6a18769ac39a6b1dad9454", "committedDate": "2020-08-24T22:27:44Z", "message": "SpringerLink also uses Springer API key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a1026808d7db4161c287605a786757e1cdbb97", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/b5a1026808d7db4161c287605a786757e1cdbb97", "committedDate": "2020-08-25T04:12:46Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf6346ac3c4991c2d8acdfc30bbe6bb063ab15f", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/ddf6346ac3c4991c2d8acdfc30bbe6bb063ab15f", "committedDate": "2020-08-25T05:00:42Z", "message": "Identifiers in CCSB are now put as key/value fields (instead of flat CSV field)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4306332e6a3b2b02d314fb33791752167b2cfa93", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/4306332e6a3b2b02d314fb33791752167b2cfa93", "committedDate": "2020-08-25T05:12:16Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/770a6c27b8d11863213420a6ca71396909f6e538", "committedDate": "2020-08-25T05:28:55Z", "message": "Adapt CiteSeerTest to new CiteSeer capabilities"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTU2Nzk5", "url": "https://github.com/JabRef/jabref/pull/6790#pullrequestreview-474156799", "createdAt": "2020-08-25T06:00:00Z", "commit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowMDowMFrOHGItdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowMDowMFrOHGItdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5NjIxMw==", "bodyText": "Extract to constant to be consistent with other code:\n    private static final Logger LOGGER = LoggerFactory.getLogger(SearchBasedParserFetcher.java .class);", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476196213", "createdAt": "2020-08-25T06:00:00Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/SearchBasedParserFetcher.java", "diffHunk": "@@ -39,16 +41,22 @@\n             return Collections.emptyList();\n         }\n \n-        try (InputStream stream = getUrlDownload(getURLForQuery(query)).asInputStream()) {\n+        URL urlForQuery;\n+        try {\n+            urlForQuery = getURLForQuery(query);\n+        } catch (URISyntaxException | MalformedURLException e) {\n+            LoggerFactory.getLogger(this.getClass()).info(\"Search URL {} is malformed\", query);\n+            throw new FetcherException(\"Search URI is malformed\", e);\n+        }\n+        try (InputStream stream = getUrlDownload(urlForQuery).asInputStream()) {\n             List<BibEntry> fetchedEntries = getParser().parseEntries(stream);\n \n             // Post-cleanup\n             fetchedEntries.forEach(this::doPostCleanup);\n \n             return fetchedEntries;\n-        } catch (URISyntaxException e) {\n-            throw new FetcherException(\"Search URI is malformed\", e);\n         } catch (IOException e) {\n+            LoggerFactory.getLogger(this.getClass()).info(\"IOException at URL {}\", urlForQuery.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTU3MTY1", "url": "https://github.com/JabRef/jabref/pull/6790#pullrequestreview-474157165", "createdAt": "2020-08-25T06:00:54Z", "commit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzA0OTU5", "url": "https://github.com/JabRef/jabref/pull/6790#pullrequestreview-474304959", "createdAt": "2020-08-25T09:31:44Z", "commit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzcyMjI2", "url": "https://github.com/JabRef/jabref/pull/6790#pullrequestreview-474372226", "createdAt": "2020-08-25T11:08:27Z", "commit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTowODoyN1rOHGTBjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMTozNDo1MlrOHGT2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2NTE5Ng==", "bodyText": "Since you rethrow the exception anyway, I don't think you need to add a logger statement here. It's the job of the caller to decide how to handle (i.e. log / show to user) the exception.", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476365196", "createdAt": "2020-08-25T11:08:27Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/SearchBasedParserFetcher.java", "diffHunk": "@@ -39,16 +41,22 @@\n             return Collections.emptyList();\n         }\n \n-        try (InputStream stream = getUrlDownload(getURLForQuery(query)).asInputStream()) {\n+        URL urlForQuery;\n+        try {\n+            urlForQuery = getURLForQuery(query);\n+        } catch (URISyntaxException | MalformedURLException e) {\n+            LoggerFactory.getLogger(this.getClass()).info(\"Search URL {} is malformed\", query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2OTkxMA==", "bodyText": "Is it really necessary to extract this from the try (...) statement? I found the previous version easier to understand.", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476369910", "createdAt": "2020-08-25T11:18:11Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/SearchBasedParserFetcher.java", "diffHunk": "@@ -39,16 +41,22 @@\n             return Collections.emptyList();\n         }\n \n-        try (InputStream stream = getUrlDownload(getURLForQuery(query)).asInputStream()) {\n+        URL urlForQuery;\n+        try {\n+            urlForQuery = getURLForQuery(query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MDg3OQ==", "bodyText": "Isn't a regex better / more flexible than this manual string splitting?", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476370879", "createdAt": "2020-08-25T11:20:05Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/CollectionOfComputerScienceBibliographiesFetcher.java", "diffHunk": "@@ -53,5 +56,29 @@ public void doPostCleanup(BibEntry entry) {\n         new FieldFormatterCleanup(StandardField.ABSTRACT, new ReplaceTabsBySpaceFormater()).cleanup(entry);\n         new FieldFormatterCleanup(StandardField.ABSTRACT, new RemoveRedundantSpacesFormatter()).cleanup(entry);\n         new FieldFormatterCleanup(StandardField.EDITOR, new RemoveDigitsFormatter()).cleanup(entry);\n+        // identifier fields is a key-value field\n+        // example: \"urn:isbn:978-1-4503-5217-8; doi:10.1145/3129790.3129810; ISI:000505046100032; Scopus 2-s2.0-85037741580\"\n+        // thus, key can contain multiple \":\"; sometimes value seaprated by \" \" instead of \":\"\n+        UnknownField identifierField = new UnknownField(\"identifier\");\n+        entry.getField(identifierField)\n+             .stream()\n+             .flatMap(value -> Arrays.stream(value.split(\"; \")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MDk4Mg==", "bodyText": "only set the field when it's empty?", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476370982", "createdAt": "2020-08-25T11:20:17Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/CollectionOfComputerScienceBibliographiesFetcher.java", "diffHunk": "@@ -53,5 +56,29 @@ public void doPostCleanup(BibEntry entry) {\n         new FieldFormatterCleanup(StandardField.ABSTRACT, new ReplaceTabsBySpaceFormater()).cleanup(entry);\n         new FieldFormatterCleanup(StandardField.ABSTRACT, new RemoveRedundantSpacesFormatter()).cleanup(entry);\n         new FieldFormatterCleanup(StandardField.EDITOR, new RemoveDigitsFormatter()).cleanup(entry);\n+        // identifier fields is a key-value field\n+        // example: \"urn:isbn:978-1-4503-5217-8; doi:10.1145/3129790.3129810; ISI:000505046100032; Scopus 2-s2.0-85037741580\"\n+        // thus, key can contain multiple \":\"; sometimes value seaprated by \" \" instead of \":\"\n+        UnknownField identifierField = new UnknownField(\"identifier\");\n+        entry.getField(identifierField)\n+             .stream()\n+             .flatMap(value -> Arrays.stream(value.split(\"; \")))\n+             .forEach(identifierKeyValue -> {\n+                 // check for pattern \"Scopus 2-...\"\n+                 String[] identifierKeyValueSplit = identifierKeyValue.split(\" \");\n+                 if (identifierKeyValueSplit.length == 1) {\n+                     // check for pattern \"doi:...\"\n+                     identifierKeyValueSplit = identifierKeyValue.split(\":\");\n+                 }\n+                 int length = identifierKeyValueSplit.length;\n+                 if (length < 2) {\n+                     return;\n+                 }\n+                 // in the case \"urn:isbn:\", just \"isbn\" is used\n+                 String key = identifierKeyValueSplit[length - 2];\n+                 String value = identifierKeyValueSplit[length - 1];\n+                 entry.setField(FieldFactory.parseField(key), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MjAwOQ==", "bodyText": "Similar to above, why did you moved the try block?", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476372009", "createdAt": "2020-08-25T11:22:26Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/GoogleScholar.java", "diffHunk": "@@ -131,33 +130,36 @@ public String getName() {\n     public List<BibEntry> performSearch(String query) throws FetcherException {\n         try {\n             obtainAndModifyCookie();\n-            List<BibEntry> foundEntries = new ArrayList<>(10);\n+            List<BibEntry> foundEntries = new ArrayList<>(20);\n \n             URIBuilder uriBuilder = new URIBuilder(BASIC_SEARCH_URL);\n             uriBuilder.addParameter(\"hl\", \"en\");\n             uriBuilder.addParameter(\"btnG\", \"Search\");\n             uriBuilder.addParameter(\"q\", query);\n \n-            addHitsFromQuery(foundEntries, uriBuilder.toString());\n-\n-            if (foundEntries.size() == 10) {\n-                uriBuilder.addParameter(\"start\", \"10\");\n+            try {\n                 addHitsFromQuery(foundEntries, uriBuilder.toString());\n+\n+                if (foundEntries.size() == 10) {\n+                    uriBuilder.addParameter(\"start\", \"10\");\n+                    addHitsFromQuery(foundEntries, uriBuilder.toString());\n+                }\n+            } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MjU3Nw==", "bodyText": "Given the problems with the google fetcher, is it really wise to query it a second time for the next 10 results?", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476372577", "createdAt": "2020-08-25T11:23:41Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/GoogleScholar.java", "diffHunk": "@@ -131,33 +130,36 @@ public String getName() {\n     public List<BibEntry> performSearch(String query) throws FetcherException {\n         try {\n             obtainAndModifyCookie();\n-            List<BibEntry> foundEntries = new ArrayList<>(10);\n+            List<BibEntry> foundEntries = new ArrayList<>(20);\n \n             URIBuilder uriBuilder = new URIBuilder(BASIC_SEARCH_URL);\n             uriBuilder.addParameter(\"hl\", \"en\");\n             uriBuilder.addParameter(\"btnG\", \"Search\");\n             uriBuilder.addParameter(\"q\", query);\n \n-            addHitsFromQuery(foundEntries, uriBuilder.toString());\n-\n-            if (foundEntries.size() == 10) {\n-                uriBuilder.addParameter(\"start\", \"10\");\n+            try {\n                 addHitsFromQuery(foundEntries, uriBuilder.toString());\n+\n+                if (foundEntries.size() == 10) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mjg0Mg==", "bodyText": "Can also be removed in my opinion.", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476372842", "createdAt": "2020-08-25T11:24:12Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/GoogleScholar.java", "diffHunk": "@@ -215,6 +219,7 @@ private void addHitsFromQuery(List<BibEntry> entryList, String queryURL) throws\n         String content = new URLDownload(queryURL).asString();\n \n         if (needsCaptcha(content)) {\n+            LOGGER.info(\"Captcha hit at {}\", queryURL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3Mzc4OQ==", "bodyText": "Comments can be deleted in my opinion", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476373789", "createdAt": "2020-08-25T11:25:57Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/CollectionOfComputerScienceBibliographiesFetcherTest.java", "diffHunk": "@@ -66,7 +67,12 @@ public void performSearchReturnsMatchingMultipleEntries() throws FetcherExceptio\n \n         BibEntry secondBibEntry = new BibEntry(StandardEntryType.Article)\n                 .withCiteKey(\"oai:DiVA.org:lnu-68408\")\n-                .withField(new UnknownField(\"identifier\"), \"urn:isbn:978-1-4503-5217-8; doi:10.1145/3129790.3129810; ISI:000426556400034; Scopus 2-s2.0-85037741580\")\n+                // instead of the plain \"identifier\" field, the converter maps that field to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3ODcxNw==", "bodyText": "I'm a bit split between adding disabled here or not. The fetcher doesn't adhere to the interface tested here, so it's correct that the test is failing, or not? I'm a bit afraid that once you mark tests as disabled, no one will try to fix it because well there are no failing tests, right?", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476378717", "createdAt": "2020-08-25T11:34:52Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/SpringerFetcherTest.java", "diffHunk": "@@ -80,6 +80,12 @@ void searchByEmptyQueryFindsNothing() throws Exception {\n         assertEquals(Collections.emptyList(), fetcher.performSearch(\"\"));\n     }\n \n+    @Test\n+    @Disabled(\"Year search is currently broken, because the API returns mutliple years.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "770a6c27b8d11863213420a6ca71396909f6e538"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "404251ab7a945348e9dcd04fdff6814e6426c094", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/404251ab7a945348e9dcd04fdff6814e6426c094", "committedDate": "2020-08-25T18:23:14Z", "message": "Address commetn ins SearchBasedParserFetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43e022f926b7d8cfebd9c2c8b3bada3552da4282", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/43e022f926b7d8cfebd9c2c8b3bada3552da4282", "committedDate": "2020-08-25T18:31:39Z", "message": "Address CCSB issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2eb1c6651b48e2d3107fcc1d5511f07e8fe975", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/bb2eb1c6651b48e2d3107fcc1d5511f07e8fe975", "committedDate": "2020-08-25T18:31:53Z", "message": "Adress Google Scholar Fetcher comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "214d0072c71b1044eaf3c7cb28d1b0378391640f", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/214d0072c71b1044eaf3c7cb28d1b0378391640f", "committedDate": "2020-08-25T19:03:41Z", "message": "Final fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad9eb48c892577aa5418e7c6e9695fdcbe3048c2", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/ad9eb48c892577aa5418e7c6e9695fdcbe3048c2", "committedDate": "2020-08-25T19:04:41Z", "message": "Merge remote-tracking branch 'origin/master' into fix-fetchers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5cc4dd0a1eaa1902fd61a8b4c6fef9528ea5338", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/f5cc4dd0a1eaa1902fd61a8b4c6fef9528ea5338", "committedDate": "2020-08-25T19:28:49Z", "message": "Keep structure, but include URL in exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "776220d5a04672766bbcde9c0b75652074097263", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/776220d5a04672766bbcde9c0b75652074097263", "committedDate": "2020-08-25T19:29:47Z", "message": "Fix copy'n'paste error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTY3NDAx", "url": "https://github.com/JabRef/jabref/pull/6790#pullrequestreview-474967401", "createdAt": "2020-08-25T22:19:07Z", "commit": {"oid": "776220d5a04672766bbcde9c0b75652074097263"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMjoxOTowN1rOHGtKdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMjoxOTowN1rOHGtKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc5MzQ2MQ==", "bodyText": "Do you really think we need to show the url to the user? What is the additional value of this? They cannot click on it anyway, and mostly likely the error is not in the url but in their configuration or because their internet is down.", "url": "https://github.com/JabRef/jabref/pull/6790#discussion_r476793461", "createdAt": "2020-08-25T22:19:07Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/SearchBasedParserFetcher.java", "diffHunk": "@@ -73,9 +85,19 @@\n             throw new FetcherException(\"Search URI is malformed\", e);\n         } catch (IOException e) {\n             // TODO: Catch HTTP Response 401/403 errors and report that user has no rights to access resource\n-            throw new FetcherException(\"A network error occurred\", e);\n+            try {\n+                throw new FetcherException(\"A network error occurred while fetching from \" + getComplexQueryURL(complexSearchQuery), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "776220d5a04672766bbcde9c0b75652074097263"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90e21abae63b1ed8652c6bbe10fce2e27286028", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/a90e21abae63b1ed8652c6bbe10fce2e27286028", "committedDate": "2020-08-26T11:08:51Z", "message": "Add ADR on logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faeb0d517936967441d5b9f06f216fec65363e90", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/faeb0d517936967441d5b9f06f216fec65363e90", "committedDate": "2020-08-26T11:13:12Z", "message": "Add forgotten code (and another \"Bad, because\" statement)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf77fd3a4e3d81bceb388de3b467b997720d9cd7", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/bf77fd3a4e3d81bceb388de3b467b997720d9cd7", "committedDate": "2020-08-26T11:13:55Z", "message": "Fix code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc994a7d7e44c1abdce9342b91b57d3fbc1f5e1", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/bbc994a7d7e44c1abdce9342b91b57d3fbc1f5e1", "committedDate": "2020-08-26T19:53:39Z", "message": "Finalize SearchbasedParserFetcher"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 116, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}