{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NDM0NzA0", "number": 6868, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNToyOFrOElbr3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNTozMDo1MlrOElbtbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2MzY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNToyOFrOHU7HCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNToyOFrOHU7HCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjAyNg==", "bodyText": "Minor: checkstyle: No empty line at method begin", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702026", "createdAt": "2020-09-20T15:25:28Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -17,34 +17,23 @@\n \n     private final BibDatabaseContext context;\n     private final EventBus eventBus = new EventBus();\n-    private final DelayTaskThrottler delayPost;\n \n     private Optional<Field> lastFieldChanged;\n     private int totalDelta;\n \n     public CoarseChangeFilter(BibDatabaseContext bibDatabaseContext) {\n         // Listen for change events\n-        bibDatabaseContext.getDatabase().registerListener(this);\n-        bibDatabaseContext.getMetaData().registerListener(this);\n         this.context = bibDatabaseContext;\n-        // Delay event post by 5 seconds\n-        this.delayPost = new DelayTaskThrottler(5000);\n+        context.getDatabase().registerListener(this);\n+        context.getMetaData().registerListener(this);\n         this.lastFieldChanged = Optional.empty();\n         this.totalDelta = 0;\n     }\n \n     @Subscribe\n     public synchronized void listen(BibDatabaseContextChangedEvent event) {\n-        Runnable eventPost = () -> {\n-            // Reset total change delta\n-            totalDelta = 0;\n-            // Post event\n-            eventBus.post(event);\n-        };\n-\n-        if (!(event instanceof FieldChangedEvent)) {\n-            eventPost.run();\n-        } else {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2Mzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNTo1NVrOHU7HKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjozNjo0MFrOHYK0qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw==", "bodyText": "Minor: checkstyle: } else {. Doesn't the IntelliJ auto formatter fix that automatically?", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702057", "createdAt": "2020-09-20T15:25:55Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0NjAyNA==", "bodyText": "I'm sorry for that... I just tried it all again with CheckStyle but could not get to proper else wrapping.\nEdit: Now it suddenly works.", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r494846024", "createdAt": "2020-09-25T08:54:58Z", "author": {"login": "m-mauersberger"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw=="}, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwNTE5NA==", "bodyText": "Just put it on the same line: } else {", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495105194", "createdAt": "2020-09-25T16:36:40Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw=="}, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2NDE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNjoyN1rOHU7HUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo1MDo1NFrOHYEgbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA5Ng==", "bodyText": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702096", "createdAt": "2020-09-20T15:26:27Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMTcxMA==", "bodyText": "I removed the method eventPost because it has become obsolete.", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495001710", "createdAt": "2020-09-25T13:50:54Z", "author": {"login": "m-mauersberger"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA5Ng=="}, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2NDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNjozNFrOHU7HXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo1MTowMVrOHYEgyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjEwOA==", "bodyText": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702108", "createdAt": "2020-09-20T15:26:34Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta\n+        totalDelta = 0;\n+        // Reset last field that changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMTgwMA==", "bodyText": "See above", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495001800", "createdAt": "2020-09-25T13:51:01Z", "author": {"login": "m-mauersberger"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta\n+        totalDelta = 0;\n+        // Reset last field that changed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjEwOA=="}, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2NDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNjo0OVrOHU7Hfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyNjo0OVrOHU7Hfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjE0Mg==", "bodyText": "This comment can be deleted, because it is just stating what happens in the next line", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702142", "createdAt": "2020-09-20T15:26:49Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta\n+        totalDelta = 0;\n+        // Reset last field that changed\n+        lastFieldChanged = Optional.empty();\n+        // Post event", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2NTU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNToyODozM1rOHU7H-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo0OTozOFrOHYEdIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjI2Nw==", "bodyText": "Can you state why the magic number 30 has been chosen?\n(Java by Comparison: \"Replace Comments with Constants\")", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702267", "createdAt": "2020-09-20T15:28:33Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMDg2NA==", "bodyText": "My idea was to collect changes when I manually typing in character by character. Then you only have delta = 1 for each event. Now I restored it to 1 (as it was before #6663): delta is greater than 1 if you paste or delete something. That was my wrong interpretation of a major change happening when delta > 1...", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495000864", "createdAt": "2020-09-25T13:49:38Z", "author": {"login": "m-mauersberger"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjI2Nw=="}, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Njg2NzY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNTozMDo1MlrOHU7I4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNTozMDo1MlrOHU7I4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjQ5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Post every FieldChangedEvent, but some have been marked (filtered)\n          \n          \n            \n                        // Post each FieldChangedEvent - even the ones being marked as \"filtered\"", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702498", "createdAt": "2020-09-20T15:30:52Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1726, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}