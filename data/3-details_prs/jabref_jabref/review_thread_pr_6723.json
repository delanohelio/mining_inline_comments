{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDk2MDY5", "number": 6723, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NzowN1rOETGBSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1ODo1MVrOETGCZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDU3MDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NzowN1rOG4ok_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NzowN1rOG4ok_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzODI2OA==", "bodyText": "There is no ifPresent and orElse code here. - Can't we use int and -1? - This would be closer to the data model of linkedFiles.", "url": "https://github.com/JabRef/jabref/pull/6723#discussion_r462038268", "createdAt": "2020-07-29T04:57:07Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -427,7 +427,22 @@ public void download() {\n             BackgroundTask<Path> downloadTask = prepareDownloadTask(targetDirectory.get(), urlDownload);\n             downloadTask.onSuccess(destination -> {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n-                entry.addFile(0, newLinkedFile);\n+\n+                var linkedFiles = entry.getFiles();\n+                // The file type changes as part of download process (see prepareDownloadTask), thus we only compare by link\n+                Optional<Integer> oldFileIndex = Optional.empty();\n+                for (int i = 0; i < linkedFiles.size(); i++) {\n+                    LinkedFile file = linkedFiles.get(i);\n+                    if (file.getLink().equalsIgnoreCase(linkedFile.getLink())) {\n+                        oldFileIndex = Optional.of(i);\n+                    }\n+                }\n+                if (oldFileIndex.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc742593aeca6200550b0a2ddb02cf7da615bc5d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDU3MjY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1ODozOFrOG4omdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1ODozOFrOG4omdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzODY0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            for (int i = 0; i < linkedFiles.size(); i++) {\n          \n          \n            \n                           int oldFileIndex = -1;\n          \n          \n            \n                            int i = 0;\n          \n          \n            \n                            while (i < linkedFiles.size() && oldFileIndex == -1) {", "url": "https://github.com/JabRef/jabref/pull/6723#discussion_r462038645", "createdAt": "2020-07-29T04:58:38Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -427,7 +427,22 @@ public void download() {\n             BackgroundTask<Path> downloadTask = prepareDownloadTask(targetDirectory.get(), urlDownload);\n             downloadTask.onSuccess(destination -> {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n-                entry.addFile(0, newLinkedFile);\n+\n+                var linkedFiles = entry.getFiles();\n+                // The file type changes as part of download process (see prepareDownloadTask), thus we only compare by link\n+                Optional<Integer> oldFileIndex = Optional.empty();\n+                for (int i = 0; i < linkedFiles.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc742593aeca6200550b0a2ddb02cf7da615bc5d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDU3MzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1ODo1MVrOG4omuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1ODo1MVrOG4omuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzODcxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            }\n          \n          \n            \n                              i++;\n          \n          \n            \n                            }", "url": "https://github.com/JabRef/jabref/pull/6723#discussion_r462038713", "createdAt": "2020-07-29T04:58:51Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -427,7 +427,22 @@ public void download() {\n             BackgroundTask<Path> downloadTask = prepareDownloadTask(targetDirectory.get(), urlDownload);\n             downloadTask.onSuccess(destination -> {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n-                entry.addFile(0, newLinkedFile);\n+\n+                var linkedFiles = entry.getFiles();\n+                // The file type changes as part of download process (see prepareDownloadTask), thus we only compare by link\n+                Optional<Integer> oldFileIndex = Optional.empty();\n+                for (int i = 0; i < linkedFiles.size(); i++) {\n+                    LinkedFile file = linkedFiles.get(i);\n+                    if (file.getLink().equalsIgnoreCase(linkedFile.getLink())) {\n+                        oldFileIndex = Optional.of(i);\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc742593aeca6200550b0a2ddb02cf7da615bc5d"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1644, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}