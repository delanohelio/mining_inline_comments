{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTE2NDIz", "number": 7207, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxNDowMDo0MFrOFHdKWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxNDowMDo0MFrOFHdKWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzYyMTM2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/importer/fileformat/PdfContentImporterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxNDowMDo0MFrOII78OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMTozMTozOFrOII_34Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI0MTU5Mg==", "bodyText": "Even with a test case. Thank you!", "url": "https://github.com/JabRef/jabref/pull/7207#discussion_r546241592", "createdAt": "2020-12-19T14:00:40Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/importer/fileformat/PdfContentImporterTest.java", "diffHunk": "@@ -88,4 +88,26 @@ void testParsingEditorWithoutPagesorSeriesInformation() {\n \n         assertEquals(Optional.of(entry), importer.getEntryFromPDFContent(firstPageContents, \"\\n\"));\n     }\n+\n+    @Test\n+    void testParsingWithoutActualDOINumber() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f05e26694ba4e2657f05f694a54b1c8b98abb3e2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMwNjAxNw==", "bodyText": "\u2764\ufe0f", "url": "https://github.com/JabRef/jabref/pull/7207#discussion_r546306017", "createdAt": "2020-12-20T01:31:38Z", "author": {"login": "koobs"}, "path": "src/test/java/org/jabref/logic/importer/fileformat/PdfContentImporterTest.java", "diffHunk": "@@ -88,4 +88,26 @@ void testParsingEditorWithoutPagesorSeriesInformation() {\n \n         assertEquals(Optional.of(entry), importer.getEntryFromPDFContent(firstPageContents, \"\\n\"));\n     }\n+\n+    @Test\n+    void testParsingWithoutActualDOINumber() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI0MTU5Mg=="}, "originalCommit": {"oid": "f05e26694ba4e2657f05f694a54b1c8b98abb3e2"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2137, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}