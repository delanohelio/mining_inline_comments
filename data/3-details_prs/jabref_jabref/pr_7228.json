{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MzUxMzIw", "number": 7228, "title": "Fixes miss-parsed names in `AutomaticPersonsGroup`", "bodyText": "Fixes #5833.\nThis fixes the parsing and matching of authors' last names. It is much slower than the previous solution, and uses more RAM, but I think that is hard/impossible to avoid. However, it is possible that the caching solution can be made smarter, but I leave the decision if it should, to the reviewers \ud83d\ude01\nAn alternative solution is moving the caching to AuthorList, it will make it easier to modify/improve at a later point in time. It will make this PR take quite a bit of more time as I'd like to make AuthorList extend List in that case. See #6552 (comment) for a much longer discussion on that topic.\nGiven that the only thing that should be cached are the last names (and always latex-free), perhaps it has more in common with the autocomplete functionality. I have not looked into that.\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-12-22T20:26:44Z", "url": "https://github.com/JabRef/jabref/pull/7228", "merged": true, "mergeCommit": {"oid": "31ced14ef8411cc092a812c843cc08ba8d0eec93"}, "closed": true, "closedAt": "2021-01-18T19:48:13Z", "author": {"login": "k3KAW8Pnf7mkmdSMPHz27"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdowLfaAH2gAyNTQ0MzUxMzIwOmU4MmYwMWU5MGI2ZDJkOTUzMGNkM2YwMWQ2ZWM1ZmU2NjhiMGQyMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxcJtIAH2gAyNTQ0MzUxMzIwOjgwNTE4N2M1NGIwMGUzNmNhNWJjNmI3NjgzNjc2YjA2M2Y5YjJmM2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e82f01e90b6d2d9530cd3f01d6ec5fe668b0d232", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/e82f01e90b6d2d9530cd3f01d6ec5fe668b0d232", "committedDate": "2020-12-22T20:02:12Z", "message": "Add SearchStrategy injection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0117f9dc44ebd7f7d16f9addf77552cae7483e62", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/0117f9dc44ebd7f7d16f9addf77552cae7483e62", "committedDate": "2020-12-22T20:03:13Z", "message": "Fix caching, parsing and matching last names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc187ee8ba7e708b6fbbff99e9c01d12e60d91c0", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/cc187ee8ba7e708b6fbbff99e9c01d12e60d91c0", "committedDate": "2020-12-29T14:27:12Z", "message": "Add test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f87503ac3a9baa88a8ef02cec3ecbe20da608d39", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/f87503ac3a9baa88a8ef02cec3ecbe20da608d39", "committedDate": "2020-12-29T17:30:02Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d749e626373562ff7f8310b856feb0e6ac37295", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/7d749e626373562ff7f8310b856feb0e6ac37295", "committedDate": "2020-12-29T17:30:42Z", "message": "Merge branch 'master' into fix-for-issue-5833"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTA3MjEw", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560107210", "createdAt": "2020-12-30T16:04:30Z", "commit": {"oid": "7d749e626373562ff7f8310b856feb0e6ac37295"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNjowNDozMFrOIMwPbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNjoxNTo1N1rOIMwdmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0NDIwNg==", "bodyText": "It's better to construct a list of expected elements by hand and compare to that. For example, if the code happens to return 3 elements, you now only get a message saying \"expected 2 but got 3\" - not very helpful. But if you do\nexpected = Arrays.asList(new Keywordgroup(...), ...); assertEquals(expected, subgroups) you get a nice message, showing you which additional group is there.", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r550244206", "createdAt": "2020-12-30T16:04:30Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/model/groups/AutomaticPersonsGroupTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.jabref.model.groups;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class AutomaticPersonsGroupTest {\n+    @Test\n+    void createSubgroupsFromCommaSeparatedLastNames() {\n+        BibEntry bibEntry = new BibEntry().withField(StandardField.AUTHOR, \"Turing, Alan and Hopper, Grace\");\n+        var subgroups = new AutomaticPersonsGroup(\"\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR).createSubgroups(bibEntry);\n+        assertEquals(2, subgroups.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d749e626373562ff7f8310b856feb0e6ac37295"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI0NzgzNA==", "bodyText": "It's better to construct a list of expected elements by hand and compare to that. For example, if the code happens to return 3 elements, you now only get a message saying \"expected 2 but got 3\" - not very helpful. But if you do\nexpected = Arrays.asList(new Keywordgroup(...), ...); assertEquals(expected, subgroups) you get a nice message, showing you which additional group is there.", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r550247834", "createdAt": "2020-12-30T16:15:57Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/model/groups/AutomaticPersonsGroupTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.jabref.model.groups;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class AutomaticPersonsGroupTest {\n+    @Test\n+    void createSubgroupsFromCommaSeparatedLastNames() {\n+        BibEntry bibEntry = new BibEntry().withField(StandardField.AUTHOR, \"Turing, Alan and Hopper, Grace\");\n+        var subgroups = new AutomaticPersonsGroup(\"\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR).createSubgroups(bibEntry);\n+        assertEquals(2, subgroups.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d749e626373562ff7f8310b856feb0e6ac37295"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de08b356fe19698f4cb29825ae8bd298eae893d5", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/de08b356fe19698f4cb29825ae8bd298eae893d5", "committedDate": "2020-12-30T19:02:34Z", "message": "Add LastNameGroup as a standalone group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a9fe92c03b81741767756707af1e32306bade6", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b2a9fe92c03b81741767756707af1e32306bade6", "committedDate": "2020-12-30T19:21:31Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7566fa48cc2d88a2c318fea3dac4b63e1dd95fbe", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/7566fa48cc2d88a2c318fea3dac4b63e1dd95fbe", "committedDate": "2020-12-30T19:43:40Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a77d4ebc01d89bf8bb6aaaca7911889079b553b", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/8a77d4ebc01d89bf8bb6aaaca7911889079b553b", "committedDate": "2020-12-30T19:44:10Z", "message": "Add caching of last name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a907243a07b8a8847b808b2f7fedcb6a84de7db", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/5a907243a07b8a8847b808b2f7fedcb6a84de7db", "committedDate": "2020-12-30T19:45:45Z", "message": "Fix usage of latex free last names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e185f92b20fde786a0e408d517115e700d78f89", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/8e185f92b20fde786a0e408d517115e700d78f89", "committedDate": "2020-12-30T19:57:11Z", "message": "Fix mistake in latex free caching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d7f5cd740b4c72b8eb636d1885cdee7e0328aca", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/0d7f5cd740b4c72b8eb636d1885cdee7e0328aca", "committedDate": "2020-12-30T22:26:04Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d13452160d1468db75ce0f677f17c5ce00dc7c10", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/d13452160d1468db75ce0f677f17c5ce00dc7c10", "committedDate": "2020-12-30T22:27:30Z", "message": "Fix LastNameGroup for last name containing latex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29", "committedDate": "2020-12-30T22:27:41Z", "message": "Readability and JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzQ1NTAz", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560345503", "createdAt": "2020-12-31T12:59:30Z", "commit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMjo1OTozMFrOIM-i0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMjo1OTozMFrOIM-i0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3ODU0NA==", "bodyText": "if you add flatmap already here, it allows to chain everything nicely I think", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r550478544", "createdAt": "2020-12-31T12:59:30Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/model/groups/LastNameGroup.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jabref.model.groups;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.model.entry.Author;\n+import org.jabref.model.entry.AuthorList;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.strings.LatexToUnicodeAdapter;\n+\n+/**\n+ * Matches based on a latex free last name in a specified field. The field is parsed as an author list and the last names are resolved of latex.\n+ */\n+public class LastNameGroup extends KeywordGroup {\n+    public LastNameGroup(String groupName, GroupHierarchyType context, Field searchField, String lastName) {\n+        super(groupName, context, searchField, LatexToUnicodeAdapter.format(lastName), true);\n+    }\n+\n+    static List<String> getAsLastNamesLatexFree(Field field, BibEntry bibEntry) {\n+        return bibEntry.getField(field)\n+                       .map(AuthorList::parse)\n+                       .map(AuthorList::getAuthors)\n+                       .map(authors ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzQ1OTcz", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560345973", "createdAt": "2020-12-31T13:01:58Z", "commit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzowMTo1OFrOIM-kPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzowMTo1OFrOIM-kPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3ODkxMQ==", "bodyText": "please remove distinct and the latextounicode part here. The tests should be a as stupid as possible, e.g. if you want to test that the code transforms latex to unicode, you better do it by hand.", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r550478911", "createdAt": "2020-12-31T13:01:58Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/model/groups/AutomaticPersonsGroupTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jabref.model.groups;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.strings.LatexToUnicodeAdapter;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+class AutomaticPersonsGroupTest {\n+    private static Set<GroupTreeNode> createPersonSubGroupFrom(String... lastNames) {\n+        return Arrays.stream(lastNames)\n+                     .distinct()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMzQ2MTc5", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560346179", "createdAt": "2020-12-31T13:03:13Z", "commit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzowMzoxM1rOIM-k8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzowMzoxM1rOIM-k8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3OTA4OQ==", "bodyText": "godelEntry is not used, right? (here and in the following test)", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r550479089", "createdAt": "2020-12-31T13:03:13Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/model/groups/AutomaticPersonsGroupTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jabref.model.groups;\n+\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.strings.LatexToUnicodeAdapter;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+class AutomaticPersonsGroupTest {\n+    private static Set<GroupTreeNode> createPersonSubGroupFrom(String... lastNames) {\n+        return Arrays.stream(lastNames)\n+                     .distinct()\n+                     .map(LatexToUnicodeAdapter::format)\n+                     .map(lastName ->\n+                             new LastNameGroup(lastName, GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, lastName))\n+                     .map(GroupTreeNode::new)\n+                     .collect(Collectors.toSet());\n+    }\n+\n+    @Test\n+    void createSubgroupsFromCommaSeparatedLastNames() {\n+        BibEntry bibEntry = new BibEntry().withField(StandardField.AUTHOR, \"Turing, Alan and Hopper, Grace\");\n+        var subgroups = new AutomaticPersonsGroup(\"\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR).createSubgroups(bibEntry);\n+        var expectedSubgroups = createPersonSubGroupFrom(\"Turing\", \"Hopper\");\n+        assertEquals(expectedSubgroups, subgroups);\n+    }\n+\n+    @Test\n+    void createSubgroupsContainingCommaSeparatedLastNames() {\n+        BibEntry bibEntry = new BibEntry().withField(StandardField.AUTHOR, \"Turing, Alan and Hopper, Grace\");\n+        var subgroups = new AutomaticPersonsGroup(\"\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR).createSubgroups(bibEntry);\n+        var expectedSubgroups = createPersonSubGroupFrom(\"Turing\", \"Hopper\");\n+        assertEquals(expectedSubgroups, subgroups);\n+    }\n+\n+    @Test\n+    void createSubgroupFromLatexAndCheckForUnicodeLastName() {\n+        BibEntry bibEntry = new BibEntry().withField(StandardField.AUTHOR, \"Kurt G{\\\\\\\"{o}}del\");\n+        BibEntry godelEntry = new BibEntry().withField(StandardField.AUTHOR, \"Kurt G\u00f6del\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ccb3ae23264eb8e20dbdae2b12bf75b9230ca29"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbe3325ea24f3a9b3ff63280bd1a2fc453530b0c", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/fbe3325ea24f3a9b3ff63280bd1a2fc453530b0c", "committedDate": "2020-12-31T15:01:36Z", "message": "Remove unused BibEntry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56cca39113f326c9a8693c971c579f0842005e0c", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/56cca39113f326c9a8693c971c579f0842005e0c", "committedDate": "2020-12-31T15:02:29Z", "message": "Flatten Stream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTkyNDU4", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560592458", "createdAt": "2021-01-01T15:39:25Z", "commit": {"oid": "56cca39113f326c9a8693c971c579f0842005e0c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6315c61b840027a0363948fa36fafc18197e1e82", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/6315c61b840027a0363948fa36fafc18197e1e82", "committedDate": "2021-01-03T14:40:36Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30282373fe039365f809b8878cc7a52061de2641", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/30282373fe039365f809b8878cc7a52061de2641", "committedDate": "2021-01-03T14:43:39Z", "message": "Remove duplicated test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODk4MjU4", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560898258", "createdAt": "2021-01-04T09:50:59Z", "commit": {"oid": "30282373fe039365f809b8878cc7a52061de2641"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTE5NDc3", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-560919477", "createdAt": "2021-01-04T10:22:31Z", "commit": {"oid": "30282373fe039365f809b8878cc7a52061de2641"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDoyMjozMVrOINsWpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDoyMjozMVrOINsWpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIyOTA5Mw==", "bodyText": "You can easily use instanceof here that should also check for supertypes.\nhttp://www.angelikalanger.com/Articles/JavaSolutions/SecretsOfEquals/Equals.html\nAnd tip: Use Objects.equals(getSearchField, otherGroup.getSearchField)", "url": "https://github.com/JabRef/jabref/pull/7228#discussion_r551229093", "createdAt": "2021-01-04T10:22:31Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/model/groups/LastNameGroup.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.jabref.model.groups;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.jabref.model.entry.Author;\n+import org.jabref.model.entry.AuthorList;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.strings.LatexToUnicodeAdapter;\n+\n+/**\n+ * Matches based on a latex free last name in a specified field. The field is parsed as an author list and the last names are resolved of latex.\n+ */\n+public class LastNameGroup extends KeywordGroup {\n+    public LastNameGroup(String groupName, GroupHierarchyType context, Field searchField, String lastName) {\n+        super(groupName, context, searchField, LatexToUnicodeAdapter.format(lastName), true);\n+    }\n+\n+    static List<String> getAsLastNamesLatexFree(Field field, BibEntry bibEntry) {\n+        return bibEntry.getField(field).stream()\n+                       .map(AuthorList::parse)\n+                       .map(AuthorList::getAuthors)\n+                       .flatMap(Collection::stream)\n+                       .map(Author::getLastLatexFree)\n+                       .flatMap(Optional::stream)\n+                       .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public boolean contains(BibEntry entry) {\n+        return getAsLastNamesLatexFree(getSearchField(), entry).stream().anyMatch(name -> name.equals(getSearchExpression()));\n+    }\n+\n+    @Override\n+    public AbstractGroup deepCopy() {\n+        return new LastNameGroup(getName(), getHierarchicalContext(), getSearchField(), getSearchExpression());\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        if (super.equals(other)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30282373fe039365f809b8878cc7a52061de2641"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990fb34021cd0a03e7d3b190dd540e51cb59ac17", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/990fb34021cd0a03e7d3b190dd540e51cb59ac17", "committedDate": "2021-01-04T13:25:52Z", "message": "Fix use of Objects.equals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88dea226c663f3b4c70382e1fd933fff5423ee13", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/88dea226c663f3b4c70382e1fd933fff5423ee13", "committedDate": "2021-01-04T13:46:05Z", "message": "Merge branch 'master' into fix-for-issue-5833"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43da991c0c094d183064c0b6bf52b9dd4d849af", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/c43da991c0c094d183064c0b6bf52b9dd4d849af", "committedDate": "2021-01-04T20:52:08Z", "message": "Fix equality check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "450ba106cb833cf4e8e044914102a4cb79e0dfa0", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/450ba106cb833cf4e8e044914102a4cb79e0dfa0", "committedDate": "2021-01-04T21:04:11Z", "message": "Optimized imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd24bdb004f3447fba938eab3318dbb6c0b8e83", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/edd24bdb004f3447fba938eab3318dbb6c0b8e83", "committedDate": "2021-01-12T22:28:04Z", "message": "Add intellij generated equal and hashCode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODEyMzU3", "url": "https://github.com/JabRef/jabref/pull/7228#pullrequestreview-566812357", "createdAt": "2021-01-13T00:41:32Z", "commit": {"oid": "edd24bdb004f3447fba938eab3318dbb6c0b8e83"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba3ac4359190b490561e233ec6427fa92c0d7b03", "author": {"user": {"login": "koppor", "name": "Oliver Kopp"}}, "url": "https://github.com/JabRef/jabref/commit/ba3ac4359190b490561e233ec6427fa92c0d7b03", "committedDate": "2021-01-18T19:46:24Z", "message": "Merge branch 'master' into fix-for-issue-5833"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "805187c54b00e36ca5bc6b7683676b063f9b2f3e", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/805187c54b00e36ca5bc6b7683676b063f9b2f3e", "committedDate": "2021-01-18T19:47:28Z", "message": "Fixed merge error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4933, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}