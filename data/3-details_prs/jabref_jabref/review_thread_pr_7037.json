{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MDE5NzUx", "number": 7037, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1NDo0M1rOExThTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzozMToxNVrOExrpnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTM1NTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1NDo0M1rOHnX3UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1NDo0M1rOHnX3UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0NzUwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.error(\"Open operation not successful: \" + e.getMessage());\n          \n          \n            \n                                LOGGER.error(\"Open operation not successful\", e);\n          \n      \n    \n    \n  \n\nLogger error has an overload which directly accepts an throwable/eception", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511047505", "createdAt": "2020-10-23T17:54:43Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -20,23 +21,39 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        if (Desktop.isDesktopSupported()) {\n+            new Thread(() -> {\n+                try {\n+                    File file = new File(filePath);\n+                    Desktop.getDesktop().open(file);\n+                    LOGGER.info(\"Opened file with Desktop integration\");\n+                } catch (Exception e) {\n+                    LOGGER.error(\"Open operation not successful: \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f923ccde50e70151d4ee75675ae34650c3bd0b2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTI4Mjg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzowMTozMFrOHn69SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzowNzo1OVrOHn6_4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new Thread(() -> {\n          \n          \n            \n                    JabRefExecutorService.INSTANCE.execute(() -> {", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622472", "createdAt": "2020-10-25T17:01:30Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjY5Mw==", "bodyText": "This wouldn't close the PDF right?", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622693", "createdAt": "2020-10-25T17:04:05Z", "author": {"login": "LyzardKing"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg=="}, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMzEzOQ==", "bodyText": "No, the behaviour should be the same, it's just that it's using a Thraed from the Threadpool instead of a new one.", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511623139", "createdAt": "2020-10-25T17:07:59Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ3Mg=="}, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTI4MzA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzowMTo0MVrOHn69YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzowMTo0MVrOHn69YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyMjQ5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }).start();\n          \n          \n            \n                    });", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511622496", "createdAt": "2020-10-25T17:01:41Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n+                try {\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n+                }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        }).start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTMwODQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzozMToxNVrOHn7Jtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNzo0NjozNVrOHn7P9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNTY1NA==", "bodyText": "@Siedlerchr\nCan we not remove this part and replace it with\nRuntime.getRuntime().exec?\nThe code would be a lot cleaner..both here and in the openFileWithApplication methods..", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511625654", "createdAt": "2020-10-25T17:31:15Z", "author": {"login": "LyzardKing"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n+                try {\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n+                }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        }).start();\n+    }\n+\n     @Override\n     public void openFile(String filePath, String fileType) throws IOException {\n         Optional<ExternalFileType> type = ExternalFileTypes.getInstance().getExternalFileTypeByExt(fileType);\n         String viewer;\n \n         if (type.isPresent() && !type.get().getOpenWithApplication().isEmpty()) {\n             viewer = type.get().getOpenWithApplication();\n+            ProcessBuilder processBuilder = new ProcessBuilder(viewer, filePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNzI1Mg==", "bodyText": "This method is used when you have defined a specific app in JabRef (Manage external file types in the Settings dialog -> External programs)\nAt least we need this StreamGobblers which read the input and error streams, otherwise it could lead to hanging\nhttps://www.infoworld.com/article/2071275/when-runtime-exec---won-t.html", "url": "https://github.com/JabRef/jabref/pull/7037#discussion_r511627252", "createdAt": "2020-10-25T17:46:35Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -16,27 +18,48 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@AllowedToUseAwt(\"Requires AWT to open a file with the native method\")\n public class Linux implements NativeDesktop {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);\n \n+    private void nativeOpenFile(String filePath) {\n+        new Thread(() -> {\n+            try {\n+                File file = new File(filePath);\n+                Desktop.getDesktop().open(file);\n+                System.out.println(\"Open file in default application with Desktop integration\");\n+            } catch (IllegalArgumentException e) {\n+                System.out.println(\"Fail back to xdg-open\");\n+                try {\n+                    String cmd = \"xdg-open \" + filePath;\n+                    Runtime.getRuntime().exec(cmd);\n+                } catch (Exception e2) {\n+                    System.out.println(\"Open operation not successful: \" + e2);\n+                }\n+            } catch (IOException e) {\n+                System.out.println(\"Native open operation not successful: \" + e);\n+            }\n+        }).start();\n+    }\n+\n     @Override\n     public void openFile(String filePath, String fileType) throws IOException {\n         Optional<ExternalFileType> type = ExternalFileTypes.getInstance().getExternalFileTypeByExt(fileType);\n         String viewer;\n \n         if (type.isPresent() && !type.get().getOpenWithApplication().isEmpty()) {\n             viewer = type.get().getOpenWithApplication();\n+            ProcessBuilder processBuilder = new ProcessBuilder(viewer, filePath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNTY1NA=="}, "originalCommit": {"oid": "41a4936ac60a2f406f14c6eba3bc16d298fa0be0"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2166, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}