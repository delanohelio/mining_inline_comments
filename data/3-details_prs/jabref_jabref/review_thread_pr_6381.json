{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzA2Mjg3", "number": 6381, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzoxMDozOVrOD4Ib5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTo1OTozMlrOD5Dd2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTg1MDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/importer/ImportEntriesDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzoxMDozOVrOGOyk7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNzoxMDozOVrOGOyk7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2MTkwMA==", "bodyText": "As JabRef uses the MVVM approach, the ideal solution would be to add a property for the checkbox in the viewmodel and bind that to the checkbox's selected item property. That should have ideally also be already the case for the checkedItems.. Don't know why it's not done.\nhttps://devdocs.jabref.org/readings-on-coding/javafx", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r418161900", "createdAt": "2020-04-30T17:10:39Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/importer/ImportEntriesDialog.java", "diffHunk": "@@ -79,7 +81,7 @@ public ImportEntriesDialog(BibDatabaseContext database, BackgroundTask<ParserRes\n \n         setResultConverter(button -> {\n             if (button == importButton) {\n-                viewModel.importEntries(entriesListView.getCheckModel().getCheckedItems());\n+                viewModel.importEntries(entriesListView.getCheckModel().getCheckedItems(), downloadLinkedOnlineFiles.isSelected());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "526099e2117f6bef2494c3f087908a2403d3fe08"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE2MDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/importer/ImportEntriesDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMToxM1rOGPR5lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODozNDoxNFrOGP3H9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NTA5Mg==", "bodyText": "If you like, you could also inject PreferencesService by the constructor. We are currently trying to get rid of the singleton pattern whereever possible.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r418675092", "createdAt": "2020-05-01T18:31:13Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/importer/ImportEntriesDialog.java", "diffHunk": "@@ -77,9 +80,11 @@ public ImportEntriesDialog(BibDatabaseContext database, BackgroundTask<ParserRes\n         Button btn = (Button) this.getDialogPane().lookupButton(importButton);\n         btn.disableProperty().bind(booleanBind);\n \n+        downloadLinkedOnlineFiles.setSelected(JabRefPreferences.getInstance().getFilePreferences().getDownloadLinkedFiles());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb743f0f6f5b6302772d60c0c0ac9fe2df4d4aa2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4NDk4Mw==", "bodyText": "Sounds very reasonable, especially considered the service was already injected.\nI resolved it in 50d2731", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r419284983", "createdAt": "2020-05-04T08:34:14Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/importer/ImportEntriesDialog.java", "diffHunk": "@@ -77,9 +80,11 @@ public ImportEntriesDialog(BibDatabaseContext database, BackgroundTask<ParserRes\n         Button btn = (Button) this.getDialogPane().lookupButton(importButton);\n         btn.disableProperty().bind(booleanBind);\n \n+        downloadLinkedOnlineFiles.setSelected(JabRefPreferences.getInstance().getFilePreferences().getDownloadLinkedFiles());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NTA5Mg=="}, "originalCommit": {"oid": "eb743f0f6f5b6302772d60c0c0ac9fe2df4d4aa2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTUyMjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "isResolved": false, "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTo1OTozMlrOGQG9vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoyNjo1MVrOGSIwXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA==", "bodyText": "@btut Thanks for your implementation. I fear this addition here now duplicates the file if you right-click an online link and select \"Download\". Can you please double check this.\n(In case this is really an issue, one option would be to use prepareDownloadTask below in the importer. Then you can also display a nice progress window for the downloads.)", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r419544508", "createdAt": "2020-05-04T15:59:32Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0MzUxOQ==", "bodyText": "Good point @tobiasdiez. I checked, and this does indeed duplicate the entry.\nthe progress-bar next to the link entry does look very nice indeed and would probably be good to have when working with large files or slow connections. I can imagine people thinking it didn't work because the file doesn't show up immediately.\nI don't understand your suggestion of using prepareDownloadTask, though. Isn't that implicitly used by the download() method anyway?\nAs far as I can tell the right-click -> download menu item just calls the download-function of the LinkedFileViewModel. In that case, the LInkedFileViewModel is the one that is actually displayed. Therefore the progress bar can be shown. However; I have no access to that object, correct? I have the LinkedFileViewModel that I use for the download, but I cannot add it to any LinkedFilesEditorViewModel to be displayed.\nOne quick fix I could think of would be to keep the online-link even for right-click->download actions or delete the link for both methods. There would still be no progress bar for the imported files, but at least it stops duplication.\nThe best fix (IMO) would be to gain somehow access to the actual LinkedFileViewModel of the online link after the import and call download from there, basically imitating a user right-clicking the item and selecting download. I would need some pointers on how to get that access though.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r419943519", "createdAt": "2020-05-05T08:27:33Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwMTcwOQ==", "bodyText": "I guess it would work if I moved the downloadProgressProperty from LinkedFileViewModel to LinkedFile. That object lives in the BibEntry and (AFAICT) and would be the same both for the importer and the LinkedFileViewModel.\nWould moving that property be an acceptable option?", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420001709", "createdAt": "2020-05-05T10:12:49Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAzNDIzMw==", "bodyText": "@btut Have a look at the method addLinkedFileFromURL in DownloadFullTextAction, that solves a similar case\nIn the importer you would create a progressbar/dialog and bind it to the prepareDownloadTask.progressProperty", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420034233", "createdAt": "2020-05-05T11:18:34Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0MzUyMQ==", "bodyText": "That method just notifies the user after a successful download. I see no progress bar. My issue is not in getting the progress of the download, but where to display the progress bar. Just popping up a dialogue with a bar is no viable solution in my opinion. When I import an entry I don't want to watch a progress bar while most of the entry is already there, I want to start working with the entry.\nAs I said, a progress bar would be very helpful, but I don't think popping a dialogue (or remaining in the import dialogue as long as the files are not ready, if that is what you mean) would be a good idea. I like how the right-click -> download action puts a small progress bar in the file entry itself. I can work with the bib entry, and if I try to open up the file, I see the progress bar.\nHowever, since there is no access to the linked files editor from the importer, I cannot add the progress bar there. I think moving the download-related properties to LinkedFile would work quite well; I just don't know if it is compliant with how JabRef is developed.\nOne more thought on that addLinkedFileFromURL method you mentioned. It seems to share a lot of code with the download method of LinkedFileViewModel. If we move the properties I was talking about to the LinkedFile class; the LinkedFilesEditorViewModel would always correctly display the progress no matter where the download() method of LinkedFileViewModel would be called from. In that case, I would suggest calling the download Method from addLinkedFileFromURL to reduce code duplication and have a unique way of handling file downloads and showing it's progress.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420043521", "createdAt": "2020-05-05T11:38:12Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MjI2OQ==", "bodyText": "Because it is a small change I just wanted to try it out and unfortunately it does not seem to work. You can check it out in my fork, I guess once this pull request is reopened due to the file-duplication issue this would show up here as well.\nThe right-click -> download action still works fine and shows the progress. The file is now not duplicated, but the original online link is kept.\nAs I said, the progress for the imported files still does not show. I added some log messages in the LinkedFile constructor and noticed that after clicking import, it is called twice. I guess the one showed is not the one I bind the download-properties and therefore the progress is not shown. Why are there multiple LinkedFile objects for the same file?", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420062269", "createdAt": "2020-05-05T12:14:47Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3Mjk0NQ==", "bodyText": "To me this looks like the LinkedFile object from the Import Dialogue is not the same LinkedFile object that is then displayed, can somebody confirm?", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420072945", "createdAt": "2020-05-05T12:33:48Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwMjEzNQ==", "bodyText": "I will take a look at it later", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420102135", "createdAt": "2020-05-05T13:19:48Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwMzE0NA==", "bodyText": "The latest commit in my branch now deletes the online file after the download. As @Siedlerchr said removing the online link is not a good idea but the right-click -> download action did that all along, I guess it is best to create a preference for this after all.\nThis also works only when downloaded using the right-click -> download action. If the file is downloaded using the import dialogue, the online link is not deleted.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420103144", "createdAt": "2020-05-05T13:21:16Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExMzQ2OQ==", "bodyText": "@Siedlerchr thank you!\nI guess the progress bar is not really that important though. We can go the addLinkedFileFromURL way and just display a message once done.\nI just found the progress bar very neat.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420113469", "createdAt": "2020-05-05T13:35:38Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzMzgwOQ==", "bodyText": "Thanks @btut for having a second look at this problem.\nMoving the download progress properties to the LinkedFile class feels a bit inconvenient. This class should represent a real linked file (or web link) while the download action is something related to an UI action which is better placed in the LinkedFileViewModel  (which is the UI-wrapper of LinkedFile).\nAs Christoph said, I would do it similar to the following:\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/externalfiles/DownloadFullTextAction.java\n    \n    \n        Lines 159 to 168\n      in\n      3d24714\n    \n    \n    \n    \n\n        \n          \n           BackgroundTask<Path> downloadTask = onlineFile.prepareDownloadTask(targetDirectory, urlDownload); \n        \n\n        \n          \n           downloadTask.onSuccess(destination -> { \n        \n\n        \n          \n               LinkedFile downloadedFile = LinkedFilesEditorViewModel.fromFile( \n        \n\n        \n          \n                       destination, \n        \n\n        \n          \n                       databaseContext.getFileDirectoriesAsPaths(preferences.getFilePreferences()), \n        \n\n        \n          \n                       ExternalFileTypes.getInstance()); \n        \n\n        \n          \n               entry.addFile(downloadedFile); \n        \n\n        \n          \n               dialogService.notify(Localization.lang(\"Finished downloading full text document for entry %0.\", \n        \n\n        \n          \n                       entry.getCiteKeyOptional().orElse(Localization.lang(\"undefined\")))); \n        \n\n        \n          \n           }); \n        \n    \n  \n\n\nThe progress can be displayed by disabling the \"Import\" button but not yet closing the dialog as in the\nhttps://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/EntryTypeView.java#L76\nYou said you don't like to use the dialag to show the progress. Why is this? If the dialog is closed but the download is still going on in the background, than we have to handle a couple of situations that are complex. E.g. user closes JabRef before all downloads are done, user removes online link before they are downloaded, etc.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420333809", "createdAt": "2020-05-05T18:53:07Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1NjkzMg==", "bodyText": "Hi,\n\nThis class should represent a real linked file (or web link) while the download action is something related to a UI action which is better placed in the LinkedFileViewModel (which is the UI-wrapper of LinkedFile).\n\nAs I said, I am not very familiar with GUI programming so I have no idea how such things are usually done. From an outsiders view though it seems logical to me to place the download-progress properties in the linked files. As I see it, they are more related to the status of the actual file than with the UI action and therefore belong with the model. Just my thoughts though and since it does not fix anything I don't really care at all.\n\nYou said you don't like to use the dialogue to show the progress. Why is this?\n\nIt just seems disruptive to me. If I had to choose between waiting in the import dialogue and having no progress bar, I would definitely choose the second option. I like how these background tasks are handled in JabRef and I think it would be a shame to have a background task which blocks the UI.\n\nIf the dialogue is closed but the download is still going on in the background then we have to handle a couple of situations that are complex.\n\nIsn't that already the case with the right-click -> download action though?\n\nE.g. user closes JabRef before all downloads are done\n\nI didn't try this out, but I think the current implementation would then leave the bib-entry as it was, as it is only changed after the download is finished. The file would be corrupt but still there and the user might link it manually the next time as it already has the correct name and JabRef would pick it up easily. This could be a problem.\n\nuser removes online link before they are downloaded, etc\n\nI think this would be fine. The download would still go on and when it's done the new entry is added (as my code does not overwrite the online-link entry but add a new one). If one would then close JabRef during the download, the next time there would be neither an online-link nor a file entry, which I guess would be fine as the user explicitly deleted the link.\nI noticed in the code (never while running JabRef and I cannot find any piece of code where it is actually used and even setting it's visibility to true does not show anything, maybe it's just dead code) that there is a progress bar in the right end of the status line at the bottom of the frame. What about using that one? The user is not disrupted in his flow and upon closing, we could pop a dialogue warning about ongoing downloads.\nIf that progress bar is dead code, I guess there was one at some point which was then removed, so you probably didn't like it. In that case, what do you think about having a small loading circle or a download icon in the top right, next to the menu bar? It could be turning/greyed out while downloading and a tooltip could display the progress of single files.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420556932", "createdAt": "2020-05-06T05:45:57Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzNTU0Ng==", "bodyText": "Ok, you convinced me, let's continue trying to do it in the background. If users experience problems, then we can investigate of how to best solve them and maybe go back to the blocking-ui strategy if nothing else works.\n\nI noticed in the code (never while running JabRef and I cannot find any piece of code where it is actually used and even setting it's visibility to true does not show anything, maybe it's just dead code) that there is a progress bar in the right end of the status line\n\nThe old JabRef 3.x contained a status bar, which was removed since it wasn't used that much. So if there is still code related to this in the code base, then it is definitely dead code and can safely be removed. May I ask you to open a PR removing it? Thanks!\n\nIf that progress bar is dead code, I guess there was one at some point which was then removed, so you probably didn't like it. In that case, what do you think about having a small loading circle or a download icon in the top right, next to the menu bar? It could be turning/greyed out while downloading and a tooltip could display the progress of single files.\n\nI like it! Very good idea. Might also be helpful to show progress for other actions as well (e.g. cleanup). One possibility to implement this would be adding an ObservableList of open tasks (including their progress) in StatusManager.\nI guess the most pressing thing would be to fix the download right-click, and then afterwards worry about a nice progress display.", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r420935546", "createdAt": "2020-05-06T16:42:35Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ0MTUxNA==", "bodyText": "I like it! Very good idea. Might also be helpful to show progress for other actions as well (e.g. cleanup). One possibility to implement this would be adding an ObservableList of open tasks (including their progress) in StatusManager.\n\nThat was the basic idea. BackgroundTask already has a workDonePercentageProperty, so all thats left to do is build a list of them and display it.\nI have a couple of questions though:\n\n\nThe list of tasks would consist of a text label and a progress bar. BackgroundTask has a StringProperty message, I would use that one for the label. Unfortunately, the message does not seem to be set by the file downloaders. It is only set by the UnlinkedFilesCrawler. Did I miss something? If not, I would add a message (something like \"Downloading file from \"). For other tasks that use BackgroundTask we could either add a message parameter to the Background-Task constructor to force users to provide a sensible message, or we could set the default message to \" in progress\", so at the very least it says \"BackgroundTask\" in progress, for child-classes it would take the child's name and produce a somewhat usable label.\n\n\nI can't seem to find the fxml file for the main JabRef frame where I would add the status wheel. Could you please help me out here?", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r421441514", "createdAt": "2020-05-07T11:45:32Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ3MDcxNA==", "bodyText": "@btut  The StringProperty is as the name implies a property that you can set for the task.In the File Download task you can simply set it to (calling setValue) on it with a text. e.g. \"Downloading files\".\nAs this property is exposed you can bind a label to it.\nFor a quick understanding what those properties are and how they work:\nhttps://www.dummies.com/programming/java/javafx-binding-properties/\nJabRefFrame has no fxml. Have a look at the init/ initLayout Method().\nYou can always add", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r421470714", "createdAt": "2020-05-07T12:38:56Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2MzU2OA==", "bodyText": "Thanks for the input. I already started drafting some code and came by the properties and did some reading.\nI implemented a simple dialog using the TaskProgressView from javafx control. That looks pretty nice IMO. Unfortunately (and quite obviously) it works on a list of javafx tasks, not JabRef BackgroundTasks.\nI noticed that BackgroundTasks are converted to javafx tasks anyways, so when that is done I enlist them in an ObservableList I created in StateManager. The tasks show up, but the bindings do not seem to work, I still have to figure out why. So right now, one can see a list of tasks, but the tasks have no title, no message and an infinite progress bar.\nIf you don't mind I would like to open a WIP PR and if I need some help I would start a discussion there. Is that ok?", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r421563568", "createdAt": "2020-05-07T14:46:35Z", "author": {"login": "btut"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MTAwNA==", "bodyText": "Yes, go ahead with a PR, makes it easier to help for specific questions", "url": "https://github.com/JabRef/jabref/pull/6381#discussion_r421671004", "createdAt": "2020-05-07T17:26:51Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFileViewModel.java", "diffHunk": "@@ -415,6 +416,7 @@ public void download() {\n                 LinkedFile newLinkedFile = LinkedFilesEditorViewModel.fromFile(destination, databaseContext.getFileDirectoriesAsPaths(filePreferences), externalFileTypes);\n                 linkedFile.setLink(newLinkedFile.getLink());\n                 linkedFile.setFileType(newLinkedFile.getFileType());\n+                entry.addFile(0, newLinkedFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU0NDUwOA=="}, "originalCommit": {"oid": "d2f3c6999bb037e4e5665bc4fe5515776b6432e8"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1791, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}