{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzgzMjkz", "number": 5814, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozMDowOVrODdFR2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozMDowOVrODdFR2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODIxNzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/shared/OracleProcessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozMDowOVrOFley8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwODo0MDo1MlrOFrfPRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NjE5NQ==", "bodyText": "I am not sure, but this looks odd to me with the String[]", "url": "https://github.com/JabRef/jabref/pull/5814#discussion_r374846195", "createdAt": "2020-02-04T18:30:09Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/shared/OracleProcessor.java", "diffHunk": "@@ -118,7 +118,8 @@ protected void insertIntoEntryTable(List<BibEntry> entries) {\n             }\n             insertEntryQuery.append(\" SELECT * FROM DUAL\");\n             LOGGER.info(insertEntryQuery.toString());\n-            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString())) {\n+            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString(),\n+                    new String[]{\"SHARED_ID\"})) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "245c48e233a53defd1097b1706cf32a17784eb05"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1NDQwMQ==", "bodyText": "This just indicates the column where we want to put the auto-generated keys. See https://docs.oracle.com/javase/7/docs/api/java/sql/Connection.html#prepareStatement(java.lang.String,%20int[])", "url": "https://github.com/JabRef/jabref/pull/5814#discussion_r375254401", "createdAt": "2020-02-05T13:30:27Z", "author": {"login": "abepolk"}, "path": "src/main/java/org/jabref/logic/shared/OracleProcessor.java", "diffHunk": "@@ -118,7 +118,8 @@ protected void insertIntoEntryTable(List<BibEntry> entries) {\n             }\n             insertEntryQuery.append(\" SELECT * FROM DUAL\");\n             LOGGER.info(insertEntryQuery.toString());\n-            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString())) {\n+            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString(),\n+                    new String[]{\"SHARED_ID\"})) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NjE5NQ=="}, "originalCommit": {"oid": "245c48e233a53defd1097b1706cf32a17784eb05"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMDM4Mg==", "bodyText": "I looked into Stack Overflow and the Oracle JDBC driver source code and it looks like the Oracle JDBC doesn't support getGeneratedKeys on INSERT ALL statements. So I'll have to find another way of getting the shared IDs.", "url": "https://github.com/JabRef/jabref/pull/5814#discussion_r379120382", "createdAt": "2020-02-13T21:11:06Z", "author": {"login": "abepolk"}, "path": "src/main/java/org/jabref/logic/shared/OracleProcessor.java", "diffHunk": "@@ -118,7 +118,8 @@ protected void insertIntoEntryTable(List<BibEntry> entries) {\n             }\n             insertEntryQuery.append(\" SELECT * FROM DUAL\");\n             LOGGER.info(insertEntryQuery.toString());\n-            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString())) {\n+            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString(),\n+                    new String[]{\"SHARED_ID\"})) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NjE5NQ=="}, "originalCommit": {"oid": "245c48e233a53defd1097b1706cf32a17784eb05"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE0NDkwMA==", "bodyText": "OMG. This sounds like we should really drop Oracle support. There is no need for Oracle in 2020, is it? - Postgres is the way to go, isn't it?\nWe should IMHO also drop MySQL support as it does not offer automatic updates on changes on the server.", "url": "https://github.com/JabRef/jabref/pull/5814#discussion_r381144900", "createdAt": "2020-02-19T08:40:52Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/shared/OracleProcessor.java", "diffHunk": "@@ -118,7 +118,8 @@ protected void insertIntoEntryTable(List<BibEntry> entries) {\n             }\n             insertEntryQuery.append(\" SELECT * FROM DUAL\");\n             LOGGER.info(insertEntryQuery.toString());\n-            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString())) {\n+            try (PreparedStatement preparedEntryStatement = connection.prepareStatement(insertEntryQuery.toString(),\n+                    new String[]{\"SHARED_ID\"})) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NjE5NQ=="}, "originalCommit": {"oid": "245c48e233a53defd1097b1706cf32a17784eb05"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2084, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}