{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NjgzNDE5", "number": 6300, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDoyODo1MFrODyqcdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxNDoyNVrOD5z1dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDUwODA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDoyODo1MFrOGG1-Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo1ODoyNFrOGG4pLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyODkxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n          \n          \n            \n                private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),=\\\\\\\"#%~'`\u02b9\";\n          \n      \n    \n    \n  \n\nI read the linked issues and especially https://tex.stackexchange.com/a/408548/9075. I adaopted the list accordingly (added % and =; removed ^). Additionally, I left the quotes at the end.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r409828911", "createdAt": "2020-04-16T20:28:50Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3MjY4NA==", "bodyText": "This update fixes #6257.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r409872684", "createdAt": "2020-04-16T21:58:24Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyODkxMQ=="}, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDUwOTMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDoyOTowN1rOGG1-2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoxMDozM1rOGHbomQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyOTA4Mw==", "bodyText": "Why didn't you remove the - it here?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r409829083", "createdAt": "2020-04-16T20:29:07Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n     private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwNTg5Mg==", "bodyText": "According to the recommendation in the README, I thought it was a mistake to include a dash in illegal signs, not those not recommended.\n\nSome characters should not be used in bibtexkey as they are not compatible or not recommended: { } ( ) , \\ \" - # ~ ^ : '", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r409905892", "createdAt": "2020-04-16T23:27:15Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n     private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyOTA4Mw=="}, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzMzM5OA==", "bodyText": "@koppor so should i remove dash from unwanted characters and make update on READEME file?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410233398", "createdAt": "2020-04-17T13:46:33Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n     private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyOTA4Mw=="}, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0ODM1NQ==", "bodyText": "Remove it from illegal, but keep it in unwanted.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410248355", "createdAt": "2020-04-17T14:09:32Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n     private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyOTA4Mw=="}, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NTk3Nw==", "bodyText": "I checked the usage of KEY_UNWANTED_CHARACTERS.\nThe code comment reads as follows:\n// User doesn't want us to enforce legal characters. We must still look\n// for whitespace and some characters such as commas, since these would\n// interfere with parsing:\nThus, the KEY_UNWANTED_CHARACTERS clearly is a subset of KEY_ILLEGAL_CHARACTERS. Not sure, whether KEY_ILLEGAL_CHARACTERS makes sense at all. Maybe because of tool interopability.\nI see three options:\nA) Remove KEY_UNWANTED_CHARACTERS completely - and also the preference for it.\nB) Set KEY_UNWANTED_CHARACTERS to a minimum - as indicated in the comment. I would propose {}\" since these are the characters causing issues at parsing. I would not add space since this did not cause any issues until now (at list that I am aware of)\nC) Just remove - from KEY_UNWANTED_CHARACTERS\nPlease do option B). Please rename KEY_UNWANTED_CHARACTERS to KEY_CHARACTERS_CAUSING_PARSING_ERRORS. Please add a comment above that this is a subset of KEY_ILLEGAL_CHARACTERS.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410445977", "createdAt": "2020-04-17T20:10:33Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,7 +27,7 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"#~^:'`\u02b9\";\n     private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyOTA4Mw=="}, "originalCommit": {"oid": "2b7fad5386054ce91f0b9faa8e1f0bedefe8e8d5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODM2NjkzOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoxMToyMVrOGHbpwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoxMToyMVrOGHbpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NjI3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n          \n          \n            \n            - We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410446274", "createdAt": "2020-04-17T20:11:21Z", "author": {"login": "koppor"}, "path": "CHANGELOG.md", "diffHunk": "@@ -28,6 +28,8 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n \n ### Fixed\n \n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d9720dc7673a7a541b284a400a97318c35190d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODM2ODI4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoxMTo1MlrOGHbqkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDoxMTo1MlrOGHbqkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NjQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - We fixed an issue where dash was reported as illegal BibTeX-Key [#6295](https://github.com/JabRef/jabref/issues/6295)\n          \n          \n            \n            - We fixed an issue where dash (`-`) was reported as illegal BibTeX key [#6295](https://github.com/JabRef/jabref/issues/6295)", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410446480", "createdAt": "2020-04-17T20:11:52Z", "author": {"login": "koppor"}, "path": "CHANGELOG.md", "diffHunk": "@@ -28,6 +28,8 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n \n ### Fixed\n \n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue where dash was reported as illegal BibTeX-Key [#6295](https://github.com/JabRef/jabref/issues/6295)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d9720dc7673a7a541b284a400a97318c35190d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODg3MjMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMDozNjoyNVrOGHge_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMDozNjoyNVrOGHge_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUyNTQzOQ==", "bodyText": "Could you please add a comment here referencing https://tex.stackexchange.com/a/408548/9075?\nProposal:\n// Source of illegal characters: https://tex.stackexchange.com/a/408548/9075", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410525439", "createdAt": "2020-04-18T00:36:25Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -24,11 +24,12 @@\n public class BibtexKeyGenerator extends BracketedPattern {\n     /*\n      * All single characters that we can use for extending a key to make it unique.\n+     * KEY_CHARACTERS_CAUSING_PARSING_ERRORS is a subset of KEY_ILLEGAL_CHARACTERS\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n-    private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),=\\\\\\\"#%~'`\u02b9\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc964554b037782dd23338097c236c37ef71416"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODg3MjY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMDozNjo0M1rOGHgfMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMDozNjo0M1rOGHgfMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUyNTQ4OQ==", "bodyText": "Please remove - here, too. Otherwise, the subset property does not hold.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r410525489", "createdAt": "2020-04-18T00:36:43Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -24,11 +24,12 @@\n public class BibtexKeyGenerator extends BracketedPattern {\n     /*\n      * All single characters that we can use for extending a key to make it unique.\n+     * KEY_CHARACTERS_CAUSING_PARSING_ERRORS is a subset of KEY_ILLEGAL_CHARACTERS\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n-    private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";\n+    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),=\\\\\\\"#%~'`\u02b9\";\n+    private static final String KEY_CHARACTERS_CAUSING_PARSING_ERRORS = \"{}(),\\\\\\\"-\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fc964554b037782dd23338097c236c37ef71416"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk0OTYzOnYy", "diffSide": "LEFT", "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1MDowN1rOGKWb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQyMDoxMjozOFrOGL51Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNjUxNQ==", "bodyText": "Oh, wow, did not expect that. See my review comment on allowing characters breaking the parsing of a .bib file.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r413506515", "createdAt": "2020-04-23T04:50:07Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -943,14 +943,14 @@ void crossrefkeywordsNKeywordsSeparatedBySpace() {\n     @Test\n     void testCheckLegalKeyEnforceLegal() {\n         assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", true));\n-        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", true));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,\", true));\n         assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", true));\n     }\n \n     @Test\n     void testCheckLegalKeyDoNotEnforceLegal() {\n         assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", false));\n-        assertEquals(\"SPECIALCHARS#~^\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e39cca3362f88101a488c638aaf5c90217ae90a5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNTA3NA==", "bodyText": "Following your comment should i add { and } and \" to KEY ILLEGAL CHARACTERS then test result after cleaning key will be less about characters which can be cause parsing errors?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r415135074", "createdAt": "2020-04-25T20:12:38Z", "author": {"login": "dextep"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -943,14 +943,14 @@ void crossrefkeywordsNKeywordsSeparatedBySpace() {\n     @Test\n     void testCheckLegalKeyEnforceLegal() {\n         assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", true));\n-        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", true));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,\", true));\n         assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", true));\n     }\n \n     @Test\n     void testCheckLegalKeyDoNotEnforceLegal() {\n         assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", false));\n-        assertEquals(\"SPECIALCHARS#~^\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNjUxNQ=="}, "originalCommit": {"oid": "e39cca3362f88101a488c638aaf5c90217ae90a5"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk1NTk0OnYy", "diffSide": "LEFT", "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1Mjo0NlrOGKWfPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQyMDowNzozNVrOGL5yGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzM4OQ==", "bodyText": "This change is strange. Arn read better than A\u00b4r. Unsure, what the other reviewers think here. -- On the one hand, this is an example that keeping as much characters as possible might not be good. On the other hand, we have the cleanup funtionality for BibTeX keys, which can be used by users.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r413507389", "createdAt": "2020-04-23T04:52:46Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -239,7 +239,7 @@ void testMakeLabelAndCheckLegalKeysAccentGrave() throws ParseException {\n \n         entry0 = BibtexParser.singleFromString(\"@ARTICLE{kohn, author={Andr\u00e9s A\u02b9rnold}, year={2000}}\",\n                 importFormatPreferences, fileMonitor);\n-        assertEquals(\"Arn\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e39cca3362f88101a488c638aaf5c90217ae90a5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDIzNA==", "bodyText": "I think in this case should we stay with Arn, but when we removed \u02b9 from KEY_ILLEGAL_CHARACTERS this test was going fail. I wasn't sure what to do with that so that's why i change to A\u00b4r.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r415134234", "createdAt": "2020-04-25T20:07:35Z", "author": {"login": "dextep"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -239,7 +239,7 @@ void testMakeLabelAndCheckLegalKeysAccentGrave() throws ParseException {\n \n         entry0 = BibtexParser.singleFromString(\"@ARTICLE{kohn, author={Andr\u00e9s A\u02b9rnold}, year={2000}}\",\n                 importFormatPreferences, fileMonitor);\n-        assertEquals(\"Arn\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzM4OQ=="}, "originalCommit": {"oid": "e39cca3362f88101a488c638aaf5c90217ae90a5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MzE0NDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNTo0Mzo0OVrOGMGPgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNTo0Mzo0OVrOGMGPgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMzODM3MA==", "bodyText": "Can you please convert this into a List<Character>. Should be slightly more readable as the characters are then clearly distinguishable from each other.\nAlso the KEY prefix seems unnecessary as we are in the KeyGenerator class anyway.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r415338370", "createdAt": "2020-04-26T15:43:49Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -27,8 +27,9 @@\n      */\n     public static final String APPENDIX_CHARACTERS = \"abcdefghijklmnopqrstuvwxyz\";\n     private static final Logger LOGGER = LoggerFactory.getLogger(BibtexKeyGenerator.class);\n-    private static final String KEY_ILLEGAL_CHARACTERS = \"{}(),\\\\\\\"-#~^:'`\u02b9\";\n-    private static final String KEY_UNWANTED_CHARACTERS = \"{}(),\\\\\\\"-\";\n+    // Source of DISALLOWED characters: https://tex.stackexchange.com/a/408548/9075\n+    private static final String KEY_DISALLOWED_CHARACTERS = \"{}(),=\\\\\\\"#%~'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e39cca3362f88101a488c638aaf5c90217ae90a5"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTA4MzYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODowMzozOFrOGPRJnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1MzowNlrOGPWtWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2MjgxMw==", "bodyText": "How should i pass UnwantedCharacters here?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418662813", "createdAt": "2020-05-01T18:03:38Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -54,7 +54,8 @@ static String generateKey(BibEntry entry, String pattern) {\n     static String generateKey(BibEntry entry, String pattern, BibDatabase database) {\n         GlobalBibtexKeyPattern keyPattern = new GlobalBibtexKeyPattern(Collections.emptyList());\n         keyPattern.setDefaultValue(\"[\" + pattern + \"]\");\n-        return new BibtexKeyGenerator(keyPattern, database, new BibtexKeyPatternPreferences(\"\", \"\", false, true, true, keyPattern, ','))\n+        String unwantedCharacters = \"-`\u02b9:!;?^+\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1Mzg4MQ==", "bodyText": "It's a bit ugly, but I guess it's ok to leave it like that because the two static methods shouldn't be used anyway. If you could be so nice, please add a @Deprecated annotation to them.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418753881", "createdAt": "2020-05-01T21:53:06Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -54,7 +54,8 @@ static String generateKey(BibEntry entry, String pattern) {\n     static String generateKey(BibEntry entry, String pattern, BibDatabase database) {\n         GlobalBibtexKeyPattern keyPattern = new GlobalBibtexKeyPattern(Collections.emptyList());\n         keyPattern.setDefaultValue(\"[\" + pattern + \"]\");\n-        return new BibtexKeyGenerator(keyPattern, database, new BibtexKeyPatternPreferences(\"\", \"\", false, true, true, keyPattern, ','))\n+        String unwantedCharacters = \"-`\u02b9:!;?^+\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2MjgxMw=="}, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTEwMjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/integrity/ValidBibtexKeyChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODoxMDoyMlrOGPRVVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1ODozOFrOGPW0Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2NTgxMg==", "bodyText": "Here ValidBibtexKeyChecker cannot depend on org.jabref.Globals, but if i pass it using be BibtexKeyPatternPreferences.java, FieldCheckers class have to take BibtexKeyPatternPreferences instance also. would this solution be correct?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418665812", "createdAt": "2020-05-01T18:10:22Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/integrity/ValidBibtexKeyChecker.java", "diffHunk": "@@ -17,7 +18,7 @@\n             return Optional.of(Localization.lang(\"empty BibTeX key\"));\n         }\n \n-        String cleaned = BibtexKeyGenerator.cleanKey(value);\n+        String cleaned = BibtexKeyGenerator.cleanKey(value, Globals.prefs.getUnwantedCharacters());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTY1NQ==", "bodyText": "Luckily, you can simply pass an empty string here since the integrity check shouldn't warn about unwanted characters. (This is what I meant with my somewhat cryptic text the other day).", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418755655", "createdAt": "2020-05-01T21:58:38Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/integrity/ValidBibtexKeyChecker.java", "diffHunk": "@@ -17,7 +18,7 @@\n             return Optional.of(Localization.lang(\"empty BibTeX key\"));\n         }\n \n-        String cleaned = BibtexKeyGenerator.cleanKey(value);\n+        String cleaned = BibtexKeyGenerator.cleanKey(value, Globals.prefs.getUnwantedCharacters());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY2NTgxMg=="}, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTY2MzEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fileformat/EndnoteImporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1Njo0OFrOGPWyCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1Njo0OFrOGPWyCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTA4Mw==", "bodyText": "I think you should use preferences.getBibtexKeyPatternPreferences().getUnwantedCharacters() here as the second argument, right?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418755083", "createdAt": "2020-05-01T21:56:48Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fileformat/EndnoteImporter.java", "diffHunk": "@@ -232,8 +232,7 @@ public ParserResult importDatabase(BufferedReader reader) throws IOException {\n                         type = StandardEntryType.MastersThesis;\n                     }\n                 } else if (\"F\".equals(prefix)) {\n-                    hm.put(InternalField.KEY_FIELD, BibtexKeyGenerator.cleanKey(val,\n-                            preferences.getBibtexKeyPatternPreferences().isEnforceLegalKey()));\n+                    hm.put(InternalField.KEY_FIELD, BibtexKeyGenerator.cleanKey(val, \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTY2OTE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/preferences/JabRefPreferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1OTozN1rOGPW1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1OTozN1rOGPW1lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTk5MQ==", "bodyText": "Can you please remove the DEFAULT prefix (as it is not a default value for something, but the real thing).", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418755991", "createdAt": "2020-05-01T21:59:37Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/preferences/JabRefPreferences.java", "diffHunk": "@@ -214,6 +214,7 @@\n     // Currently, it is not possible to specify defaults for specific entry types\n     // When this should be made possible, the code to inspect is org.jabref.gui.preferences.BibtexKeyPatternPrefTab.storeSettings() -> LabelPattern keypatterns = getCiteKeyPattern(); etc\n     public static final String DEFAULT_BIBTEX_KEY_PATTERN = \"defaultBibtexKeyPattern\";\n+    public static final String DEFAULT_UNWANTED_BIBTEX_KEY_CHARACTERS = \"defaultUnwantedBibtexKeyCharacters\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTY3MTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customizefields/CustomizeGeneralFieldsDialogViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowMDo0NVrOGPW25A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowMDo0NVrOGPW25A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjMyNA==", "bodyText": "I think the second argument can be replaced by preferences.getUnwantedCharacters().", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r418756324", "createdAt": "2020-05-01T22:00:45Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customizefields/CustomizeGeneralFieldsDialogViewModel.java", "diffHunk": "@@ -57,12 +58,13 @@ public void saveFields() {\n                 return;\n             }\n \n-            String testString = BibtexKeyGenerator.cleanKey(parts[1], preferences.getEnforceLegalKeys());\n+            String testString = BibtexKeyGenerator.cleanKey(parts[1], Globals.prefs.get(JabRefPreferences.DEFAULT_UNWANTED_BIBTEX_KEY_CHARACTERS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e0879bd99349e48b3fb0e9c761b753e615795d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk0OTkwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozMzoxMlrOGQdnHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozMzoxMlrOGQdnHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTU1MQ==", "bodyText": "This line is a duplicate.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419915551", "createdAt": "2020-05-05T07:33:12Z", "author": {"login": "tobiasdiez"}, "path": "CHANGELOG.md", "diffHunk": "@@ -33,6 +33,9 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n ### Fixed\n \n - We fixed wrong button order (Apply and Cancel) in ManageProtectedTermsDialog.\n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk1Mjk3OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozNDowN1rOGQdo5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNTo1Njo1NVrOGRE8hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNjAwNQ==", "bodyText": "Please add the removal of the \"enforce legal key\" option under \"Removed\".", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419916005", "createdAt": "2020-05-05T07:34:07Z", "author": {"login": "tobiasdiez"}, "path": "CHANGELOG.md", "diffHunk": "@@ -33,6 +33,9 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n ### Fixed\n \n - We fixed wrong button order (Apply and Cancel) in ManageProtectedTermsDialog.\n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue where dash (`-`) was reported as illegal BibTeX key [#6295](https://github.com/JabRef/jabref/issues/6295)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNTIxMw==", "bodyText": "Should i also add as 'Added' that unwanted characters can be user-specified in preferences?", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420125213", "createdAt": "2020-05-05T13:51:38Z", "author": {"login": "dextep"}, "path": "CHANGELOG.md", "diffHunk": "@@ -33,6 +33,9 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n ### Fixed\n \n - We fixed wrong button order (Apply and Cancel) in ManageProtectedTermsDialog.\n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue where dash (`-`) was reported as illegal BibTeX key [#6295](https://github.com/JabRef/jabref/issues/6295)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNjAwNQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNDEwNQ==", "bodyText": "yes, please!", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420414105", "createdAt": "2020-05-05T21:21:41Z", "author": {"login": "tobiasdiez"}, "path": "CHANGELOG.md", "diffHunk": "@@ -33,6 +33,9 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n ### Fixed\n \n - We fixed wrong button order (Apply and Cancel) in ManageProtectedTermsDialog.\n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue where dash (`-`) was reported as illegal BibTeX key [#6295](https://github.com/JabRef/jabref/issues/6295)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNjAwNQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MDAwNg==", "bodyText": "I miss this addition.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420560006", "createdAt": "2020-05-06T05:56:55Z", "author": {"login": "koppor"}, "path": "CHANGELOG.md", "diffHunk": "@@ -33,6 +33,9 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n ### Fixed\n \n - We fixed wrong button order (Apply and Cancel) in ManageProtectedTermsDialog.\n+- We fixed an issue with incompatible characters at BibTeX-Key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue with incompatible characters at BibTeX key [#6257](https://github.com/JabRef/jabref/issues/6257)\n+- We fixed an issue where dash (`-`) was reported as illegal BibTeX key [#6295](https://github.com/JabRef/jabref/issues/6295)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNjAwNQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk2MTgwOnYy", "diffSide": "RIGHT", "path": "src/main/resources/journals/journalList.csv", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozNzoxNVrOGQducA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MzowOVrOGQqexQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNzQyNA==", "bodyText": "I think the changes in this file needs to be reverted, as they don't seem to be related to this PR (probably a merge problem).", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419917424", "createdAt": "2020-05-05T07:37:15Z", "author": {"login": "tobiasdiez"}, "path": "src/main/resources/journals/journalList.csv", "diffHunk": "@@ -3310,7 +3308,7 @@ Climate Dynamics;Climate Dyn.;;\n Climate of the Past;Clim. Past;;\n Climate of the Past Discussion;Clim. Past Discuss.;;\n Climate Risk Management;Clim. Risk Manage.;;\n-Climatic Change;Clim. Change;;\n+Climatic Change;Climatic Change;;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNjQwNQ==", "bodyText": "Yes, that was result of incorrect branch update.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420126405", "createdAt": "2020-05-05T13:53:09Z", "author": {"login": "dextep"}, "path": "src/main/resources/journals/journalList.csv", "diffHunk": "@@ -3310,7 +3308,7 @@ Climate Dynamics;Climate Dyn.;;\n Climate of the Past;Clim. Past;;\n Climate of the Past Discussion;Clim. Past Discuss.;;\n Climate Risk Management;Clim. Risk Manage.;;\n-Climatic Change;Clim. Change;;\n+Climatic Change;Climatic Change;;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNzQyNA=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk2NjE2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzozODo0NFrOGQdxRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMToyMjo0N1rOGQ8Ecg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxODE0OQ==", "bodyText": "Please extract \"-\u02b9:!;?^+\"to a public constantDEFAULT_UNWANTED_CHARACTERSinBibtexKeyGenerator` and use it everywhere.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419918149", "createdAt": "2020-05-05T07:38:44Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -73,7 +73,7 @@ void testCrossrefAndInAuthorNames() throws Exception {\n \n         assertEquals(\"Holland\",\n                 BibtexKeyGenerator.cleanKey(BibtexKeyGenerator.generateKey(entry1, \"auth\",\n-                        database), true));\n+                        database), \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEzMzM5MA==", "bodyText": "I wasn't sure it was correct, thanks!", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420133390", "createdAt": "2020-05-05T14:02:01Z", "author": {"login": "dextep"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -73,7 +73,7 @@ void testCrossrefAndInAuthorNames() throws Exception {\n \n         assertEquals(\"Holland\",\n                 BibtexKeyGenerator.cleanKey(BibtexKeyGenerator.generateKey(entry1, \"auth\",\n-                        database), true));\n+                        database), \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxODE0OQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNDU3OA==", "bodyText": "It's usually a good idea to don't have duplication of code or magic strings. Makes it harder to maintain in the future.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420414578", "createdAt": "2020-05-05T21:22:47Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -73,7 +73,7 @@ void testCrossrefAndInAuthorNames() throws Exception {\n \n         assertEquals(\"Holland\",\n                 BibtexKeyGenerator.cleanKey(BibtexKeyGenerator.generateKey(entry1, \"auth\",\n-                        database), true));\n+                        database), \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxODE0OQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk3MDkyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo0MDoxNFrOGQd0Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo0MDoxNFrOGQd0Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxODg5MA==", "bodyText": "These tests need to be adapted, at least there names.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419918890", "createdAt": "2020-05-05T07:40:14Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -942,22 +942,22 @@ void crossrefkeywordsNKeywordsSeparatedBySpace() {\n \n     @Test\n     void testCheckLegalKeyEnforceLegal() {\n-        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", true));\n-        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", true));\n-        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", true));\n+        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 337}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzk3NDU4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo0MToyN1rOGQd2dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NjoyMFrOGQqoTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxOTQ3OQ==", "bodyText": "I think it's better to use an empty string as the unwanted characters here, instead of changing the expected value. Otherwise this test is exactly the same as the previous.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r419919479", "createdAt": "2020-05-05T07:41:27Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -942,22 +942,22 @@ void crossrefkeywordsNKeywordsSeparatedBySpace() {\n \n     @Test\n     void testCheckLegalKeyEnforceLegal() {\n-        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", true));\n-        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", true));\n-        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", true));\n+        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", \"-`\u02b9:!;?^+\"));\n     }\n \n     @Test\n     void testCheckLegalKeyDoNotEnforceLegal() {\n-        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", false));\n-        assertEquals(\"SPECIALCHARS#~^\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", false));\n-        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", false));\n+        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 348}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyODg0Nw==", "bodyText": "Of course, I don't know why I didn't pay attention for this. Thank you very much for your helpful review!", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420128847", "createdAt": "2020-05-05T13:56:20Z", "author": {"login": "dextep"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -942,22 +942,22 @@ void crossrefkeywordsNKeywordsSeparatedBySpace() {\n \n     @Test\n     void testCheckLegalKeyEnforceLegal() {\n-        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", true));\n-        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", true));\n-        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", true));\n+        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", \"-`\u02b9:!;?^+\"));\n     }\n \n     @Test\n     void testCheckLegalKeyDoNotEnforceLegal() {\n-        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", false));\n-        assertEquals(\"SPECIALCHARS#~^\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", false));\n-        assertEquals(\"\", BibtexKeyGenerator.cleanKey(\"\\n\\t\\r\", false));\n+        assertEquals(\"AAAA\", BibtexKeyGenerator.cleanKey(\"AA AA\", \"-`\u02b9:!;?^+\"));\n+        assertEquals(\"SPECIALCHARS\", BibtexKeyGenerator.cleanKey(\"SPECIAL CHARS#{\\\\\\\"}~,^\", \"-`\u02b9:!;?^+\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxOTQ3OQ=="}, "originalCommit": {"oid": "3f5b2e58ba99ee3acd7d068d9dff14ddbd3fdc00"}, "originalPosition": 348}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODIxMTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzowMDozNlrOGRGQtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxNjozMlrOGRScKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4MTU1Ng==", "bodyText": "Please replace the code:\n        String newKey = key.chars()\n                .filter(c -> unwantedCharacters.indexOf(c) == -1)\n                .filter(c -> !DISALLOWED_CHARACTERS.contains((char) c))\n                .collect(StringBuilder::new,\n                        StringBuilder::appendCodePoint, StringBuilder::append)\n                .toString();\n\nI came up while thinking as follows (and stack-overflow-ing for String filter characters, ...). Used answer: https://stackoverflow.com/a/20268845/873282\nWhy not a simple indexOf thing?\n\"abcdef\".indexOf('c') != -1;\nSee https://stackoverflow.com/a/506107/873282.\nSecond reason: Conversion into the list is IMHO more CPU consuming than the indexOf call. I know, that it is not critical, but I think, the conversion (plus the readble !unwantedChars.contains(c)) is less readable then a simple (unwantedChars.indexOf(c) >= 0)", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420581556", "createdAt": "2020-05-06T07:00:36Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -73,36 +77,26 @@ private static String getAppendix(int number) {\n         }\n     }\n \n-    public static String removeUnwantedCharacters(String key, boolean enforceLegalKey) {\n-        if (!enforceLegalKey) {\n-            // User doesn't want us to enforce legal characters. We must still look\n-            // for whitespace and some characters such as commas, since these would\n-            // interfere with parsing:\n-            StringBuilder newKey = new StringBuilder();\n-            for (int i = 0; i < key.length(); i++) {\n-                char c = key.charAt(i);\n-                if (KEY_UNWANTED_CHARACTERS.indexOf(c) == -1) {\n-                    newKey.append(c);\n-                }\n-            }\n-            return newKey.toString();\n+    public static String removeUnwantedCharacters(String key, String unwantedCharacters) {\n+        List<Character> unwantedChars = new ArrayList<>();\n+        for (char ch : unwantedCharacters.toCharArray()) {\n+            unwantedChars.add(ch);\n         }\n \n         StringBuilder newKey = new StringBuilder();\n         for (int i = 0; i < key.length(); i++) {\n             char c = key.charAt(i);\n-            if (KEY_ILLEGAL_CHARACTERS.indexOf(c) == -1) {\n+            if (!DISALLOWED_CHARACTERS.contains(c) && !unwantedChars.contains(c)) {\n                 newKey.append(c);\n             }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6db1344b410eb133c436951df8211353fa66c633"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MzM1Ng==", "bodyText": "I didn't think of it that way, thank you for your review @koppor \ud83d\udc4d!", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420773356", "createdAt": "2020-05-06T13:04:49Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -73,36 +77,26 @@ private static String getAppendix(int number) {\n         }\n     }\n \n-    public static String removeUnwantedCharacters(String key, boolean enforceLegalKey) {\n-        if (!enforceLegalKey) {\n-            // User doesn't want us to enforce legal characters. We must still look\n-            // for whitespace and some characters such as commas, since these would\n-            // interfere with parsing:\n-            StringBuilder newKey = new StringBuilder();\n-            for (int i = 0; i < key.length(); i++) {\n-                char c = key.charAt(i);\n-                if (KEY_UNWANTED_CHARACTERS.indexOf(c) == -1) {\n-                    newKey.append(c);\n-                }\n-            }\n-            return newKey.toString();\n+    public static String removeUnwantedCharacters(String key, String unwantedCharacters) {\n+        List<Character> unwantedChars = new ArrayList<>();\n+        for (char ch : unwantedCharacters.toCharArray()) {\n+            unwantedChars.add(ch);\n         }\n \n         StringBuilder newKey = new StringBuilder();\n         for (int i = 0; i < key.length(); i++) {\n             char c = key.charAt(i);\n-            if (KEY_ILLEGAL_CHARACTERS.indexOf(c) == -1) {\n+            if (!DISALLOWED_CHARACTERS.contains(c) && !unwantedChars.contains(c)) {\n                 newKey.append(c);\n             }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4MTU1Ng=="}, "originalCommit": {"oid": "6db1344b410eb133c436951df8211353fa66c633"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MTA5Nw==", "bodyText": "You're welcome. Plese note that I used multiline comments:\n\nThus, more code can be deleted. See also my new review comment.\nSorry for being picky here. I hope with these tough comments here we won't need to touch this code the next months again \ud83c\udf88", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420781097", "createdAt": "2020-05-06T13:16:32Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -73,36 +77,26 @@ private static String getAppendix(int number) {\n         }\n     }\n \n-    public static String removeUnwantedCharacters(String key, boolean enforceLegalKey) {\n-        if (!enforceLegalKey) {\n-            // User doesn't want us to enforce legal characters. We must still look\n-            // for whitespace and some characters such as commas, since these would\n-            // interfere with parsing:\n-            StringBuilder newKey = new StringBuilder();\n-            for (int i = 0; i < key.length(); i++) {\n-                char c = key.charAt(i);\n-                if (KEY_UNWANTED_CHARACTERS.indexOf(c) == -1) {\n-                    newKey.append(c);\n-                }\n-            }\n-            return newKey.toString();\n+    public static String removeUnwantedCharacters(String key, String unwantedCharacters) {\n+        List<Character> unwantedChars = new ArrayList<>();\n+        for (char ch : unwantedCharacters.toCharArray()) {\n+            unwantedChars.add(ch);\n         }\n \n         StringBuilder newKey = new StringBuilder();\n         for (int i = 0; i < key.length(); i++) {\n             char c = key.charAt(i);\n-            if (KEY_ILLEGAL_CHARACTERS.indexOf(c) == -1) {\n+            if (!DISALLOWED_CHARACTERS.contains(c) && !unwantedChars.contains(c)) {\n                 newKey.append(c);\n             }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4MTU1Ng=="}, "originalCommit": {"oid": "6db1344b410eb133c436951df8211353fa66c633"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTQ0NjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoxNDoyNVrOGRSWng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzoyMjo0OFrOGRStew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3OTY3OA==", "bodyText": "We don't need the unwantedChars variable, do we? Can you please delete that for loop and the variable? --> the code on line 86 directly accesses the method parameter unwantedChararacters!\nSide note: This is an example why similar variable names can be mixed up.", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420779678", "createdAt": "2020-05-06T13:14:25Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -82,17 +82,15 @@ public static String removeUnwantedCharacters(String key, String unwantedCharact\n         for (char ch : unwantedCharacters.toCharArray()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1ec4add7fa8992d79185f0230329ee904bb6227"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4NTUzMQ==", "bodyText": "Of course, we don't need it, I'm sorry. Every time I get the impression that I didn't notice something. \ud83d\udc1e", "url": "https://github.com/JabRef/jabref/pull/6300#discussion_r420785531", "createdAt": "2020-05-06T13:22:48Z", "author": {"login": "dextep"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGenerator.java", "diffHunk": "@@ -82,17 +82,15 @@ public static String removeUnwantedCharacters(String key, String unwantedCharact\n         for (char ch : unwantedCharacters.toCharArray()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3OTY3OA=="}, "originalCommit": {"oid": "c1ec4add7fa8992d79185f0230329ee904bb6227"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1924, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}