{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTM5OTU4", "number": 7121, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxMDoxMDowN1rOFBatgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowNDowOFrOFE7Tnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MDMwNTMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/crawler/StudyRepository.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxMDoxMDowN1rOIAIM6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzoxMDo0OFrOIAmDTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAwNTI5MA==", "bodyText": "The keyword separator and delimiter are different the delimiter is groups related", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r537005290", "createdAt": "2020-12-06T10:10:07Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/crawler/StudyRepository.java", "diffHunk": "@@ -280,7 +279,7 @@ private String findQueryIDByQueryString(String query) {\n      * @param crawlResults The results that shall be persisted.\n      */\n     private void persistResults(List<QueryResult> crawlResults) throws IOException {\n-        DatabaseMerger merger = new DatabaseMerger(keywordDelimiter);\n+        DatabaseMerger merger = new DatabaseMerger(importFormatPreferences.getKeywordSeparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb7e49990216eb9b8c6b85a9495bce77cf685b12"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAwOTc3Mw==", "bodyText": "Oh ok, I see. Think I was a little bit too sloppy here... Thanks", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r537009773", "createdAt": "2020-12-06T10:36:16Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/crawler/StudyRepository.java", "diffHunk": "@@ -280,7 +279,7 @@ private String findQueryIDByQueryString(String query) {\n      * @param crawlResults The results that shall be persisted.\n      */\n     private void persistResults(List<QueryResult> crawlResults) throws IOException {\n-        DatabaseMerger merger = new DatabaseMerger(keywordDelimiter);\n+        DatabaseMerger merger = new DatabaseMerger(importFormatPreferences.getKeywordSeparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAwNTI5MA=="}, "originalCommit": {"oid": "fb7e49990216eb9b8c6b85a9495bce77cf685b12"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4NzI2MA==", "bodyText": "Ok, I checked it, it's a bit confusing, but I think, this is correct here:\nimportFormatPreferences.getKeywordSeparator() returns prefs.getKeywordDelimiter(), which is by default ,. In this case, keywordDelimiter was originally initialized with an argument in the constructor in StudyRepository.java, which is called in StartLiteratureReviewAction.java, which is called by JabRefFrame.java with the argument prefs.getKeywordDelimiter(). As prefs.getImportExportPreferences().getKeywordSeparator() returns the same as `prefs.getKeywordDelimiter(), this should be right here: can you please doublecheck this?", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r537487260", "createdAt": "2020-12-07T12:59:28Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/crawler/StudyRepository.java", "diffHunk": "@@ -280,7 +279,7 @@ private String findQueryIDByQueryString(String query) {\n      * @param crawlResults The results that shall be persisted.\n      */\n     private void persistResults(List<QueryResult> crawlResults) throws IOException {\n-        DatabaseMerger merger = new DatabaseMerger(keywordDelimiter);\n+        DatabaseMerger merger = new DatabaseMerger(importFormatPreferences.getKeywordSeparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAwNTI5MA=="}, "originalCommit": {"oid": "fb7e49990216eb9b8c6b85a9495bce77cf685b12"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ5NDM0OQ==", "bodyText": "Ah yeah, it's indeed the same. I overlooked that it's the same as in the ImportFormatPreferences, I thought it were two different ones.", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r537494349", "createdAt": "2020-12-07T13:10:48Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/crawler/StudyRepository.java", "diffHunk": "@@ -280,7 +279,7 @@ private String findQueryIDByQueryString(String query) {\n      * @param crawlResults The results that shall be persisted.\n      */\n     private void persistResults(List<QueryResult> crawlResults) throws IOException {\n-        DatabaseMerger merger = new DatabaseMerger(keywordDelimiter);\n+        DatabaseMerger merger = new DatabaseMerger(importFormatPreferences.getKeywordSeparator());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzAwNTI5MA=="}, "originalCommit": {"oid": "fb7e49990216eb9b8c6b85a9495bce77cf685b12"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzIzNTM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/ClipBoardManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzo0Njo0MFrOIDVt6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoxMjo0MVrOIE6G-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MjQ1OA==", "bodyText": "I guees Tobi or Olli will complain about the empty space ;)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r540372458", "createdAt": "2020-12-10T17:46:40Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/ClipBoardManager.java", "diffHunk": "@@ -47,15 +48,18 @@\n     private static Clipboard clipboard;\n     private static java.awt.datatransfer.Clipboard primary;\n     private static ImportFormatReader importFormatReader;\n+    private final PreferencesService preferencesService;\n \n-    public ClipBoardManager() {\n-        this(Clipboard.getSystemClipboard(), Toolkit.getDefaultToolkit().getSystemSelection(), Globals.IMPORT_FORMAT_READER);\n+    public ClipBoardManager(PreferencesService preferencesService) {\n+        this(Clipboard.getSystemClipboard(), Toolkit.getDefaultToolkit().getSystemSelection(), Globals.IMPORT_FORMAT_READER, preferencesService);\n     }\n \n-    public ClipBoardManager(Clipboard clipboard, java.awt.datatransfer.Clipboard primary, ImportFormatReader importFormatReader) {\n+    public ClipBoardManager(Clipboard clipboard, java.awt.datatransfer.Clipboard primary, ImportFormatReader importFormatReader, PreferencesService preferencesService) {\n         ClipBoardManager.clipboard = clipboard;\n         ClipBoardManager.primary = primary;\n         ClipBoardManager.importFormatReader = importFormatReader;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d509d6676b6aad75619f34e920af3b586ed2af"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNzI3NA==", "bodyText": "No here it's fine...just don't add empty lines at the beginning or end of a method", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r542017274", "createdAt": "2020-12-13T22:12:41Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/ClipBoardManager.java", "diffHunk": "@@ -47,15 +48,18 @@\n     private static Clipboard clipboard;\n     private static java.awt.datatransfer.Clipboard primary;\n     private static ImportFormatReader importFormatReader;\n+    private final PreferencesService preferencesService;\n \n-    public ClipBoardManager() {\n-        this(Clipboard.getSystemClipboard(), Toolkit.getDefaultToolkit().getSystemSelection(), Globals.IMPORT_FORMAT_READER);\n+    public ClipBoardManager(PreferencesService preferencesService) {\n+        this(Clipboard.getSystemClipboard(), Toolkit.getDefaultToolkit().getSystemSelection(), Globals.IMPORT_FORMAT_READER, preferencesService);\n     }\n \n-    public ClipBoardManager(Clipboard clipboard, java.awt.datatransfer.Clipboard primary, ImportFormatReader importFormatReader) {\n+    public ClipBoardManager(Clipboard clipboard, java.awt.datatransfer.Clipboard primary, ImportFormatReader importFormatReader, PreferencesService preferencesService) {\n         ClipBoardManager.clipboard = clipboard;\n         ClipBoardManager.primary = primary;\n         ClipBoardManager.importFormatReader = importFormatReader;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3MjQ1OA=="}, "originalCommit": {"oid": "14d509d6676b6aad75619f34e920af3b586ed2af"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzEwMzAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/JabRefFrame.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowNDowOFrOIFLPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowNDowOFrOIFLPPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5NzkxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            //factory.createMenuItem(StandardActions.START_SYSTEMATIC_LITERATURE_REVIEW,\n          \n          \n            \n                            // factory.createMenuItem(StandardActions.START_SYSTEMATIC_LITERATURE_REVIEW,", "url": "https://github.com/JabRef/jabref/pull/7121#discussion_r542297919", "createdAt": "2020-12-14T11:04:08Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/JabRefFrame.java", "diffHunk": "@@ -817,7 +817,7 @@ private MenuBar createMenu() {\n                 new SeparatorMenuItem(),\n \n                 factory.createMenuItem(StandardActions.SEND_AS_EMAIL, new SendAsEMailAction(dialogService, prefs, stateManager)),\n-                pushToApplicationMenuItem,\n+                pushToApplicationMenuItem\n                 // Disabled until PR #7126 can be merged\n                 // new SeparatorMenuItem(),\n                 //factory.createMenuItem(StandardActions.START_SYSTEMATIC_LITERATURE_REVIEW,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abe7f4f6d54ba90b0319500c3683f44881f81bce"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2108, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}