{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzE1Mjg4", "number": 6768, "title": "Merge identical group color indicators", "bodyText": "fixes #6175\nThis PR finishes the PRs of @WangAooa (see #6566 ) and does some cleanup in the MainTableColumnFactory: LinkedIdentifierColumn, FileColumn and SpecialFieldColumn is now extracted in separate classes.\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-08-18T20:02:07Z", "url": "https://github.com/JabRef/jabref/pull/6768", "merged": true, "mergeCommit": {"oid": "bd03fd0476fd17c44c3121741f563823dd8d2a9b"}, "closed": true, "closedAt": "2020-08-19T16:57:02Z", "author": {"login": "calixtus"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclubEogH2gAyNDY5NzE1Mjg4OmQ0N2M5MGRhNGY4MmFlOWU5MWRmYWEwZTY1NGI3YThkNTk4YzNhMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAeNBwgH2gAyNDY5NzE1Mjg4OjkzMWEwZThkMTk1OTAwMWZkYjQzOTc3OGMxM2I5MDlhNzJhZDFlZDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d47c90da4f82ae9e91dfaa0e654b7a8d598c3a02", "author": {"user": {"login": "WangAooa", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/d47c90da4f82ae9e91dfaa0e654b7a8d598c3a02", "committedDate": "2020-05-28T14:06:29Z", "message": "Merge pull request #1 from JabRef/master\n\nupdata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a90c01d2e3e68623fffcbc34b8b46902c9411e4", "author": {"user": {"login": "WangAooa", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/2a90c01d2e3e68623fffcbc34b8b46902c9411e4", "committedDate": "2020-05-31T08:32:02Z", "message": "Merge pull request #3 from JabRef/master\n\nupdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02acf8ed15ac6c285ba7a6403c2bb1e45fd7dc4f", "author": {"user": {"login": "WangAooa", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/02acf8ed15ac6c285ba7a6403c2bb1e45fd7dc4f", "committedDate": "2020-05-31T09:06:53Z", "message": "Update MainTableColumnFactory.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbee189dfff7917424067d577f5aa6db61f27443", "author": {"user": {"login": "WangAooa", "name": null}}, "url": "https://github.com/JabRef/jabref/commit/dbee189dfff7917424067d577f5aa6db61f27443", "committedDate": "2020-05-31T09:09:48Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1005a802f059d1271993e2237fc1f0314e9c1a", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/7d1005a802f059d1271993e2237fc1f0314e9c1a", "committedDate": "2020-08-18T17:01:18Z", "message": "Merge branch 'fix-6175' of git://github.com/WangAooa/jabref into WangAooa-fix-6175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90531490064281b29921e2df33daffd8b89623f", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/f90531490064281b29921e2df33daffd8b89623f", "committedDate": "2020-08-18T17:28:00Z", "message": "Finished regarding comments in PR #6491"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f0ef9fd9ec169c7b700612322d69ca0c49a3cb", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/59f0ef9fd9ec169c7b700612322d69ca0c49a3cb", "committedDate": "2020-08-18T19:51:42Z", "message": "Refactored for heavy clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed465ec62ee8efbc7baa2745bf73e64fd318b167", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/ed465ec62ee8efbc7baa2745bf73e64fd318b167", "committedDate": "2020-08-18T20:25:11Z", "message": "Merge remote-tracking branch 'upstream/master' into WangAooa-fix-6175"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMTQ2NDQz", "url": "https://github.com/JabRef/jabref/pull/6768#pullrequestreview-470146443", "createdAt": "2020-08-19T06:01:02Z", "commit": {"oid": "ed465ec62ee8efbc7baa2745bf73e64fd318b167"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzM5NjEw", "url": "https://github.com/JabRef/jabref/pull/6768#pullrequestreview-470339610", "createdAt": "2020-08-19T10:47:46Z", "commit": {"oid": "ed465ec62ee8efbc7baa2745bf73e64fd318b167"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo0Nzo0N1rOHDBzGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDo0Nzo0N1rOHDBzGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzNzI0Mw==", "bodyText": "I think all the single-line create methods can now be inlined.\nFor the FieldColumn, it might make sense to remove the second argument (as this is also extracted from the columnModel, and thus can be done in the constructor (or maybe move the field parsing to the columnModel and replace the getQualifier by getFields).", "url": "https://github.com/JabRef/jabref/pull/6768#discussion_r472937243", "createdAt": "2020-08-19T10:47:47Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/maintable/columns/MainTableColumnFactory.java", "diffHunk": "@@ -0,0 +1,241 @@\n+package org.jabref.gui.maintable.columns;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import javax.swing.undo.UndoManager;\n+\n+import javafx.beans.property.ReadOnlyObjectWrapper;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Node;\n+import javafx.scene.control.TableColumn;\n+import javafx.scene.control.Tooltip;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.Pane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Rectangle;\n+import javafx.scene.text.Text;\n+\n+import org.jabref.gui.DialogService;\n+import org.jabref.gui.externalfiletype.ExternalFileTypes;\n+import org.jabref.gui.icon.IconTheme;\n+import org.jabref.gui.maintable.BibEntryTableViewModel;\n+import org.jabref.gui.maintable.CellFactory;\n+import org.jabref.gui.maintable.ColumnPreferences;\n+import org.jabref.gui.maintable.MainTableColumnModel;\n+import org.jabref.gui.specialfields.SpecialFieldValueViewModel;\n+import org.jabref.gui.util.ValueTableCellFactory;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.jabref.model.entry.LinkedFile;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.entry.field.FieldFactory;\n+import org.jabref.model.entry.field.SpecialField;\n+import org.jabref.model.groups.AbstractGroup;\n+import org.jabref.model.util.OptionalUtil;\n+import org.jabref.preferences.PreferencesService;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class MainTableColumnFactory {\n+\n+    public static final String STYLE_ICON_COLUMN = \"column-icon\";\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(MainTableColumnFactory.class);\n+\n+    private final PreferencesService preferencesService;\n+    private final ColumnPreferences columnPreferences;\n+    private final ExternalFileTypes externalFileTypes;\n+    private final BibDatabaseContext database;\n+    private final CellFactory cellFactory;\n+    private final UndoManager undoManager;\n+    private final DialogService dialogService;\n+\n+    public MainTableColumnFactory(BibDatabaseContext database,\n+                                  PreferencesService preferencesService,\n+                                  ExternalFileTypes externalFileTypes,\n+                                  UndoManager undoManager,\n+                                  DialogService dialogService) {\n+        this.database = Objects.requireNonNull(database);\n+        this.preferencesService = Objects.requireNonNull(preferencesService);\n+        this.columnPreferences = preferencesService.getColumnPreferences();\n+        this.externalFileTypes = Objects.requireNonNull(externalFileTypes);\n+        this.dialogService = dialogService;\n+        this.cellFactory = new CellFactory(externalFileTypes, undoManager);\n+        this.undoManager = undoManager;\n+    }\n+\n+    public List<TableColumn<BibEntryTableViewModel, ?>> createColumns() {\n+        List<TableColumn<BibEntryTableViewModel, ?>> columns = new ArrayList<>();\n+\n+        columnPreferences.getColumns().forEach(column -> {\n+\n+            switch (column.getType()) {\n+                case INDEX:\n+                    columns.add(createIndexColumn(column));\n+                    break;\n+                case GROUPS:\n+                    columns.add(createGroupColumn(column));\n+                    break;\n+                case FILES:\n+                    columns.add(createFilesColumn(column));\n+                    break;\n+                case LINKED_IDENTIFIER:\n+                    columns.add(createIdentifierColumn(column));\n+                    break;\n+                case EXTRAFILE:\n+                    if (!column.getQualifier().isBlank()) {\n+                        columns.add(createExtraFileColumn(column));\n+                    }\n+                    break;\n+                case SPECIALFIELD:\n+                    if (!column.getQualifier().isBlank()) {\n+                        Field field = FieldFactory.parseField(column.getQualifier());\n+                        if (field instanceof SpecialField) {\n+                            columns.add(createSpecialFieldColumn(column));\n+                        } else {\n+                            LOGGER.warn(Localization.lang(\"Special field type %0 is unknown. Using normal column type.\", column.getQualifier()));\n+                            columns.add(createFieldColumn(column));\n+                        }\n+                    }\n+                    break;\n+                default:\n+                case NORMALFIELD:\n+                    if (!column.getQualifier().isBlank()) {\n+                        columns.add(createFieldColumn(column));\n+                    }\n+                    break;\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    static void setExactWidth(TableColumn<?, ?> column, double width) {\n+        column.setMinWidth(width);\n+        column.setPrefWidth(width);\n+        column.setMaxWidth(width);\n+    }\n+\n+    /**\n+     * Creates a column with a continous number\n+     */\n+    private TableColumn<BibEntryTableViewModel, String> createIndexColumn(MainTableColumnModel columnModel) {\n+        TableColumn<BibEntryTableViewModel, String> column = new MainTableColumn<>(columnModel);\n+        Node header = new Text(\"#\");\n+        Tooltip.install(header, new Tooltip(MainTableColumnModel.Type.INDEX.getDisplayName()));\n+        column.setGraphic(header);\n+        column.setStyle(\"-fx-alignment: CENTER-RIGHT;\");\n+        column.setCellValueFactory(cellData -> new ReadOnlyObjectWrapper<>(\n+                String.valueOf(cellData.getTableView().getItems().indexOf(cellData.getValue()) + 1)));\n+        new ValueTableCellFactory<BibEntryTableViewModel, String>()\n+                .withText(text -> text)\n+                .install(column);\n+        column.setSortable(false);\n+        return column;\n+    }\n+\n+    /**\n+     * Creates a column for group color bars.\n+     */\n+    private TableColumn<BibEntryTableViewModel, ?> createGroupColumn(MainTableColumnModel columnModel) {\n+        TableColumn<BibEntryTableViewModel, List<AbstractGroup>> column = new MainTableColumn<>(columnModel);\n+        Node headerGraphic = IconTheme.JabRefIcons.DEFAULT_GROUP_ICON.getGraphicNode();\n+        Tooltip.install(headerGraphic, new Tooltip(Localization.lang(\"Group color\")));\n+        column.setGraphic(headerGraphic);\n+        column.getStyleClass().add(STYLE_ICON_COLUMN);\n+        setExactWidth(column, ColumnPreferences.ICON_COLUMN_WIDTH);\n+        column.setResizable(false);\n+        column.setCellValueFactory(cellData -> cellData.getValue().getMatchedGroups());\n+        new ValueTableCellFactory<BibEntryTableViewModel, List<AbstractGroup>>()\n+                .withGraphic(this::createGroupColorRegion)\n+                .install(column);\n+        column.setStyle(\"-fx-padding: 0 0 0 0;\");\n+        column.setSortable(true);\n+        return column;\n+    }\n+\n+    private Node createGroupColorRegion(BibEntryTableViewModel entry, List<AbstractGroup> matchedGroups) {\n+        List<Color> groupColors = matchedGroups.stream()\n+                                               .flatMap(group -> OptionalUtil.toStream(group.getColor()))\n+                                               .collect(Collectors.toList());\n+\n+        if (!groupColors.isEmpty()) {\n+            HBox container = new HBox();\n+            container.setSpacing(2);\n+            container.setMinWidth(10);\n+            container.setAlignment(Pos.CENTER_LEFT);\n+            container.setPadding(new Insets(0, 2, 0, 2));\n+\n+            groupColors.stream().distinct().forEach(groupColor -> {\n+                Rectangle groupRectangle = new Rectangle();\n+                groupRectangle.getStyleClass().add(\"groupColumnBackground\");\n+                groupRectangle.setWidth(3);\n+                groupRectangle.setHeight(18);\n+                groupRectangle.setFill(groupColor);\n+                groupRectangle.setStrokeWidth(1);\n+                container.getChildren().add(groupRectangle);\n+            });\n+\n+            String matchedGroupsString = matchedGroups.stream()\n+                                                      .distinct()\n+                                                      .map(AbstractGroup::getName)\n+                                                      .collect(Collectors.joining(\", \"));\n+            Tooltip tooltip = new Tooltip(Localization.lang(\"Entry is contained in the following groups:\") + \"\\n\" + matchedGroupsString);\n+            Tooltip.install(container, tooltip);\n+            return container;\n+        }\n+        return new Pane();\n+    }\n+\n+    /**\n+     * Creates a text column to display any standard field.\n+     */\n+    private TableColumn<BibEntryTableViewModel, ?> createFieldColumn(MainTableColumnModel columnModel) {\n+        return new FieldColumn(columnModel, FieldFactory.parseOrFields(columnModel.getQualifier()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed465ec62ee8efbc7baa2745bf73e64fd318b167"}, "originalPosition": 201}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef3290418a273d31269f73099d5f0da25b55f52a", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/ef3290418a273d31269f73099d5f0da25b55f52a", "committedDate": "2020-08-19T14:08:53Z", "message": "Refactored for the remarks in PR and a bit more cleanup in MainTable.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjM0Mjk3", "url": "https://github.com/JabRef/jabref/pull/6768#pullrequestreview-470634297", "createdAt": "2020-08-19T16:25:04Z", "commit": {"oid": "ef3290418a273d31269f73099d5f0da25b55f52a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "931a0e8d1959001fdb439778c13b909a72ad1ed7", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/931a0e8d1959001fdb439778c13b909a72ad1ed7", "committedDate": "2020-08-19T16:28:37Z", "message": "Fixed JavaDoc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 103, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}