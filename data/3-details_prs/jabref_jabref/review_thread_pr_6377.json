{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTk1NDY0", "number": 6377, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozMDowMFrOD37M1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNDoxNlrOD37SfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTY4MjE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/model/metadata/FilePreferences.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozMDowMFrOGOdHhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozMDowMFrOGOdHhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxMDMxMA==", "bodyText": "JavaDoc indicates, that Paths::get will be deprecated soon. Use Path::of instead.\nhttps://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/nio/file/Paths.html", "url": "https://github.com/JabRef/jabref/pull/6377#discussion_r417810310", "createdAt": "2020-04-30T07:30:00Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/model/metadata/FilePreferences.java", "diffHunk": "@@ -34,24 +30,14 @@ public String getUser() {\n         return user;\n     }\n \n-    public Optional<Path> getFileDirectory(Field field) {\n-        try {\n-            String value = fieldFileDirectories.get(field);\n-            // filter empty paths\n-            if ((value != null) && !value.isEmpty()) {\n-                Path path = Paths.get(value);\n-                return Optional.of(path);\n-            }\n-            return Optional.empty();\n-        } catch (InvalidPathException ex) {\n+    public Optional<Path> getFileDirectory() {\n+        if (StringUtil.isBlank(mainFileDirectory)) {\n             return Optional.empty();\n+        } else {\n+            return Optional.of(Paths.get(mainFileDirectory));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "885ddbb99e9a62b3e16fc75586871420aaf78fa3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTY5NjYxOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/model/database/BibDatabaseContextTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNDoxNlrOGOdQTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNzozNDoxNlrOGOdQTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgxMjU1OQ==", "bodyText": "Path::of and also below", "url": "https://github.com/JabRef/jabref/pull/6377#discussion_r417812559", "createdAt": "2020-04-30T07:34:16Z", "author": {"login": "calixtus"}, "path": "src/test/java/org/jabref/model/database/BibDatabaseContextTest.java", "diffHunk": "@@ -15,61 +17,104 @@\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n-public class BibDatabaseContextTest {\n+class BibDatabaseContextTest {\n \n     private Path currentWorkingDir;\n \n-    // Store the minimal preferences for the\n-    // BibDatabaseContext.getFileDirectories(File,\n-    // FilePreferences) incocation:\n     private FilePreferences fileDirPrefs;\n \n     @BeforeEach\n-    public void setUp() {\n+    void setUp() {\n         fileDirPrefs = mock(FilePreferences.class);\n         currentWorkingDir = Paths.get(System.getProperty(\"user.dir\"));\n         when(fileDirPrefs.isBibLocationAsPrimary()).thenReturn(true);\n     }\n \n     @Test\n-    public void getFileDirectoriesWithEmptyDbParent() {\n-        BibDatabaseContext dbContext = new BibDatabaseContext();\n-        dbContext.setDatabasePath(Paths.get(\"biblio.bib\"));\n-        List<String> fileDirectories = dbContext.getFileDirectories(StandardField.FILE, fileDirPrefs);\n-        assertEquals(Collections.singletonList(currentWorkingDir.toString()),\n-                fileDirectories);\n+    void getFileDirectoriesWithEmptyDbParent() {\n+        BibDatabaseContext database = new BibDatabaseContext();\n+        database.setDatabasePath(Paths.get(\"biblio.bib\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "885ddbb99e9a62b3e16fc75586871420aaf78fa3"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1952, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}