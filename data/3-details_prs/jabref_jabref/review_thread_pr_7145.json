{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTg1NzMx", "number": 7145, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTowNjowNVrOE-sg1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNjo0MjozMVrOE--JDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTc2NDcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTowNjowNVrOH7_RNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjo0MjozMFrOH8Dwlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2NDYyOQ==", "bodyText": "What did you had to change relative to the standard implementation?", "url": "https://github.com/JabRef/jabref/pull/7145#discussion_r532664629", "createdAt": "2020-11-30T15:06:05Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "diffHunk": "@@ -82,6 +84,46 @@ public URL getURLForQuery(ComplexSearchQuery query) throws URISyntaxException, M\n         return uriBuilder.build().toURL();\n     }\n \n+    @Override\n+    public URL getUrlForIdentifier(String identifier) throws FetcherException {\n+        String start = \"https://www.jstor.org/citation/text/\";\n+        if (identifier.startsWith(\"http\")) {\n+            identifier = identifier.replace(\"https://www.jstor.org/stable\", \"\");\n+            identifier = identifier.replace(\"http://www.jstor.org/stable\", \"\");\n+        }\n+        identifier = identifier.replaceAll(URL_QUERY_REGEX, \"\");\n+\n+        try {\n+            if (identifier.contains(\"/\")) {\n+                // if identifier links to a entry with a valid doi\n+                return new URL(start + identifier);\n+            }\n+            // else use default doi start.\n+            return new URL(start + \"10.2307/\" + identifier);\n+        } catch (IOException e) {\n+            throw new FetcherException(\"could not construct url for jstor\", e);\n+        }\n+    }\n+\n+    // overwriting default behaviour as that seems to always results in a 403", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "288c2aa8d5eafcb3233ee24641061cd796a28dfc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczODE5OQ==", "bodyText": "getParser was already written to only work for search so I simply overwrote this method to use a bibtex parser.\nI did have another look at the code, removed this part and added the required logic to getParser.", "url": "https://github.com/JabRef/jabref/pull/7145#discussion_r532738199", "createdAt": "2020-11-30T16:42:30Z", "author": {"login": "joethei"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "diffHunk": "@@ -82,6 +84,46 @@ public URL getURLForQuery(ComplexSearchQuery query) throws URISyntaxException, M\n         return uriBuilder.build().toURL();\n     }\n \n+    @Override\n+    public URL getUrlForIdentifier(String identifier) throws FetcherException {\n+        String start = \"https://www.jstor.org/citation/text/\";\n+        if (identifier.startsWith(\"http\")) {\n+            identifier = identifier.replace(\"https://www.jstor.org/stable\", \"\");\n+            identifier = identifier.replace(\"http://www.jstor.org/stable\", \"\");\n+        }\n+        identifier = identifier.replaceAll(URL_QUERY_REGEX, \"\");\n+\n+        try {\n+            if (identifier.contains(\"/\")) {\n+                // if identifier links to a entry with a valid doi\n+                return new URL(start + identifier);\n+            }\n+            // else use default doi start.\n+            return new URL(start + \"10.2307/\" + identifier);\n+        } catch (IOException e) {\n+            throw new FetcherException(\"could not construct url for jstor\", e);\n+        }\n+    }\n+\n+    // overwriting default behaviour as that seems to always results in a 403", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY2NDYyOQ=="}, "originalCommit": {"oid": "288c2aa8d5eafcb3233ee24641061cd796a28dfc"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDY1Mjk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNjo0MjozMVrOH8aIJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxODoyOFrOH8a8RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEwNDY3OA==", "bodyText": "Why did you overwrite this?", "url": "https://github.com/JabRef/jabref/pull/7145#discussion_r533104678", "createdAt": "2020-12-01T06:42:31Z", "author": {"login": "DominikVoigt"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "diffHunk": "@@ -133,4 +169,9 @@ public String getName() {\n     public TrustLevel getTrustLevel() {\n         return TrustLevel.META_SEARCH;\n     }\n+\n+    @Override\n+    public void doPostCleanup(BibEntry entry) {\n+        // do nothing\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e248249b6d4880849ccf59920c905551269ee8d"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODAyMQ==", "bodyText": "as both SearchBased and IdBased Fetchers have a doPostCleanup default impl, the compiler is not sure which one to call", "url": "https://github.com/JabRef/jabref/pull/7145#discussion_r533118021", "createdAt": "2020-12-01T07:18:28Z", "author": {"login": "joethei"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/JstorFetcher.java", "diffHunk": "@@ -133,4 +169,9 @@ public String getName() {\n     public TrustLevel getTrustLevel() {\n         return TrustLevel.META_SEARCH;\n     }\n+\n+    @Override\n+    public void doPostCleanup(BibEntry entry) {\n+        // do nothing\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEwNDY3OA=="}, "originalCommit": {"oid": "1e248249b6d4880849ccf59920c905551269ee8d"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2118, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}