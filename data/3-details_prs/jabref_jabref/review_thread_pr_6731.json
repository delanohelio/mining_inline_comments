{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODY0MTk1", "number": 6731, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODoxMTowOVrOEUgkqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODoxMTowOVrOEUgkqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTQwNjQ5OnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODoxMTowOVrOG6wGLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwODoxMTowOVrOG6wGLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI1ODYwNA==", "bodyText": "You can also run the processResources before a normal run with intellj (automatically in the run config). That works like a charm for me.", "url": "https://github.com/JabRef/jabref/pull/6731#discussion_r464258604", "createdAt": "2020-08-03T08:11:09Z", "author": {"login": "tobiasdiez"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -0,0 +1,39 @@\n+# Working on fetchers\n+\n+Fetchers are the implementation of the [search using online services](https://docs.jabref.org/collect/import-using-online-bibliographic-database).\n+Some fetchers require API keys to get them working.\n+To get the fetchers running in a JabRef development setup, the keys need to be placed in the respective enviornment variable.\n+The following table lists the respective fetchers, where to get the key from and the environment variable where the key has to be placed.\n+\n+| Service | Key Source | Environment Variable | Rate Limit |\n+| -- | -- | -- | -- |\n+| [IEEEXplore](https://docs.jabref.org/collect/import-using-online-bibliographic-database/ieeexplore) | [IEEE Xplore API portal](https://developer.ieee.org/) | `IEEEAPIKey` | 200 calls/day |\n+| [SAO/NASA Astrophysics Data System](https://docs.jabref.org/collect/import-using-online-bibliographic-database/ads) | [ADS UI](https://ui.adsabs.harvard.edu/user/settings/token) | `AstrophysicsDataSystemAPIKey` | 5000 calls/day |\n+| [Springer Nature](https://docs.jabref.org/collect/import-using-online-bibliographic-database/springer) | [Springer Nature API Portal](https://dev.springernature.com/) | `SpringerNatureAPIKey`| 5000 calls/day |\n+\n+On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change.\n+Now, the fetcher tests should run without issues.\n+\n+## Background on embedding the keys in JabRef\n+\n+The keys are placed into the `build.properties` file.\n+\n+```properties\n+springerNatureAPIKey=${springerNatureAPIKey}\n+```\n+\n+In `build.gradle`, these variables are filled:\n+\n+```groovy\n+\"springerNatureAPIKey\": System.getenv('SpringerNatureAPIKey')\n+```\n+\n+The `BuildInfo` class reads from that file.\n+\n+```java\n+new BuildInfo().springerNatureAPIKey\n+```\n+\n+When executing `./gradlewrun`, gradle executes `processResources` and populates `build.properties` accordingly.\n+However, when working directly in the IDE, IntelliJ keeps reading `build.properties` from `src/main/resources`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "504bc203ec76877bf9eb6b57974d5678fa9a7476"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1650, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}