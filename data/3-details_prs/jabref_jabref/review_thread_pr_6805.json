{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDQ1MDkz", "number": 6805, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjozNzoyNFrOEef-fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjozNzoyNFrOEef-fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDE2NjM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjozNzoyNFrOHKLymQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjozNzoyNFrOHKLymQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0MDk4NQ==", "bodyText": "Pseudo-classes could be used instead of hardcoding the colors here. See gui/util/ViewModelListCellFactory", "url": "https://github.com/JabRef/jabref/pull/6805#discussion_r480440985", "createdAt": "2020-08-31T22:37:24Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/importer/fetcher/WebSearchPaneViewModel.java", "diffHunk": "@@ -91,13 +104,40 @@ public void search() {\n \n         SearchBasedFetcher activeFetcher = getSelectedFetcher();\n \n-        BackgroundTask<ParserResult> task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performSearch(getQuery().trim())))\n-                                                          .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n-\n+        BackgroundTask<ParserResult> task;\n+        QueryParser queryParser = new QueryParser();\n+        Optional<ComplexSearchQuery> generatedQuery = queryParser.parseQueryStringIntoComplexQuery(getQuery());\n+        if (generatedQuery.isPresent()) {\n+            task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performComplexSearch(generatedQuery.get())))\n+                                 .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n+        } else {\n+            task = BackgroundTask.wrap(() -> new ParserResult(activeFetcher.performSearch(getQuery().trim())))\n+                                 .withInitialMessage(Localization.lang(\"Processing %0\", getQuery()));\n+        }\n         task.onFailure(dialogService::showErrorDialogAndWait);\n \n         ImportEntriesDialog dialog = new ImportEntriesDialog(frame.getCurrentBasePanel().getBibDatabaseContext(), task);\n         dialog.setTitle(activeFetcher.getName());\n         dialog.showAndWait();\n     }\n+\n+    public void validateQueryStringAndGiveColorFeedback(TextField querySource, String queryString) {\n+        Matcher queryValidation = queryPattern.matcher(queryString.strip());\n+        if (queryValidation.matches()) {\n+            if (containsYearAndYearRange(queryString)) {\n+                querySource.setStyle(\"-fx-background-color: rgba(240, 128, 128, 0.5);\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8b79a0b039ea01722258c8c6be42ee253f256f"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1698, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}