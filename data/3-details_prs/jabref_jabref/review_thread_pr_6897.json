{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODkwODkz", "number": 6897, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTo0ODo1MFrOEh9cPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyMDo0MFrOEjcGSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDQ1MTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNTo0ODo1MFrOHPj_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjo0NDozNlrOHYhVwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MDMyMw==", "bodyText": "@KunAndrew  I think you need to adjust the DOI regex pattern:\nOne CrossRef test fails, because of the missing underscore:\nThe DOI cannot be resolved wihtout underscore\norg.opentest4j.AssertionFailedError: expected: <10.1007/11538394_20> but was: <10.1007/1153839420>", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r486080323", "createdAt": "2020-09-10T05:48:50Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -108,12 +108,12 @@ public DOI(String doi) {\n         Matcher matcher = EXACT_DOI_PATT.matcher(trimmedDoi);\n         if (matcher.find()) {\n             // match only group \\1\n-            this.doi = matcher.group(1);\n+            this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NDYxNg==", "bodyText": "There should be a comment added which characters are removed and why. Without any comment, this is a \"magic number\" which should be extraced to a constant.", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r486574616", "createdAt": "2020-09-10T19:10:13Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -108,12 +108,12 @@ public DOI(String doi) {\n         Matcher matcher = EXACT_DOI_PATT.matcher(trimmedDoi);\n         if (matcher.find()) {\n             // match only group \\1\n-            this.doi = matcher.group(1);\n+            this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MDMyMw=="}, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NDExNA==", "bodyText": "I removed this addtional regex because it was not really making sense. The DOI class already trims DOIs and also removes other encoding components.", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r495474114", "createdAt": "2020-09-26T16:44:36Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -108,12 +108,12 @@ public DOI(String doi) {\n         Matcher matcher = EXACT_DOI_PATT.matcher(trimmedDoi);\n         if (matcher.find()) {\n             // match only group \\1\n-            this.doi = matcher.group(1);\n+            this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA4MDMyMw=="}, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzU1MTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/database/DuplicateCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTowODoyMlrOHQCGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTowODoyMlrOHQCGFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3MzU4OQ==", "bodyText": "I think, using org.jabref.model.entry.identifier.DOI#equals makes more sense.\nFurthermore, Objects.equals should be used\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return oneDOI.get().getDOI().equalsIgnoreCase(twoDOI.get().getDOI());\n          \n          \n            \n                        return Objects.equals(oneDOI, twoDOI);", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r486573589", "createdAt": "2020-09-10T19:08:22Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/database/DuplicateCheck.java", "diffHunk": "@@ -303,6 +308,19 @@ public boolean isDuplicate(final BibEntry one, final BibEntry two, final BibData\n             return true;\n         }\n \n+        // check DOI\n+        Optional<DOI> oneDOI = one.getDOI();\n+        Optional<DOI> twoDOI = two.getDOI();\n+        if (oneDOI.isPresent() && twoDOI.isPresent()) {\n+            return oneDOI.get().getDOI().equalsIgnoreCase(twoDOI.get().getDOI());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzU1MjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/database/DuplicateCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTowODo0MlrOHQCG2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTowODo0MlrOHQCG2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3Mzc4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return oneISBN.get().equals(twoISBN.get());\n          \n          \n            \n                        return Objects.equals(oneISBN, twoISBN);", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r486573786", "createdAt": "2020-09-10T19:08:42Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/database/DuplicateCheck.java", "diffHunk": "@@ -303,6 +308,19 @@ public boolean isDuplicate(final BibEntry one, final BibEntry two, final BibData\n             return true;\n         }\n \n+        // check DOI\n+        Optional<DOI> oneDOI = one.getDOI();\n+        Optional<DOI> twoDOI = two.getDOI();\n+        if (oneDOI.isPresent() && twoDOI.isPresent()) {\n+            return oneDOI.get().getDOI().equalsIgnoreCase(twoDOI.get().getDOI());\n+        }\n+        // check ISBN\n+        Optional<ISBN> oneISBN = one.getISBN();\n+        Optional<ISBN> twoISBN = two.getISBN();\n+        if (oneISBN.isPresent() && twoISBN.isPresent()) {\n+            return oneISBN.get().equals(twoISBN.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzU1ODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOToxMDoyNlrOHQCKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOToxMDoyNlrOHQCKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3NDczMA==", "bodyText": "This is the same pattern than above --> please use a constant.", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r486574730", "createdAt": "2020-09-10T19:10:26Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -108,12 +108,12 @@ public DOI(String doi) {\n         Matcher matcher = EXACT_DOI_PATT.matcher(trimmedDoi);\n         if (matcher.find()) {\n             // match only group \\1\n-            this.doi = matcher.group(1);\n+            this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");\n         } else {\n             // Short DOI\n             Matcher shortDoiMatcher = EXACT_SHORT_DOI_PATT.matcher(trimmedDoi);\n             if (shortDoiMatcher.find()) {\n-                this.doi = shortDoiMatcher.group(1);\n+                this.doi = shortDoiMatcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTk1OTc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyMDo0MFrOHRyZHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyMDo0MFrOHRyZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxMzQ2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");\n          \n          \n            \n                        this.doi = matcher.group(1).replaceAll(\"[^\\\\w/:-.-_]\", \"\");\n          \n      \n    \n    \n  \n\nVariable name: ILLEGAL_DOI_CHARACTERS --> Pattern.compile?\n(devcall)", "url": "https://github.com/JabRef/jabref/pull/6897#discussion_r488413469", "createdAt": "2020-09-15T06:20:40Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/model/entry/identifier/DOI.java", "diffHunk": "@@ -108,12 +108,12 @@ public DOI(String doi) {\n         Matcher matcher = EXACT_DOI_PATT.matcher(trimmedDoi);\n         if (matcher.find()) {\n             // match only group \\1\n-            this.doi = matcher.group(1);\n+            this.doi = matcher.group(1).replaceAll(\"[^\\\\w,/,:,-,.,-]|[_]\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc1ffa2516e9f417bc929d98df77273a257597a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1559, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}