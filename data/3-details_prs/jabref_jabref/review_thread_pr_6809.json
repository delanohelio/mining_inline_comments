{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODY5NDc5", "number": 6809, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToyOToyN1rOEeWvgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMToyODowNlrOEeepdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjY1MzQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/maintable/CellFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToyOToyN1rOHJ9i6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOToxMzozNlrOHKtWuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNzU5Mg==", "bodyText": "please remove this newline", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480207592", "createdAt": "2020-08-31T15:29:27Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/maintable/CellFactory.java", "diffHunk": "@@ -94,6 +98,7 @@ public CellFactory(ExternalFileTypes externalFileTypes, UndoManager undoManager)\n         icon = printedViewModel.getIcon();\n         // icon.setToolTipText(printedViewModel.getLocalization());\n         TABLE_ICONS.put(SpecialField.PRINTED, icon);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MDkwNw==", "bodyText": "removed this line", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480990907", "createdAt": "2020-09-01T09:13:36Z", "author": {"login": "hemantgs"}, "path": "src/main/java/org/jabref/gui/maintable/CellFactory.java", "diffHunk": "@@ -94,6 +98,7 @@ public CellFactory(ExternalFileTypes externalFileTypes, UndoManager undoManager)\n         icon = printedViewModel.getIcon();\n         // icon.setToolTipText(printedViewModel.getLocalization());\n         TABLE_ICONS.put(SpecialField.PRINTED, icon);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNzU5Mg=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjY4NjA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTozNzo1MlrOHJ922g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOToxMzo0NlrOHKtXJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxMjY5OA==", "bodyText": "The old code .withGraphic(this::createIdentifierGraphic) should still work.", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480212698", "createdAt": "2020-08-31T15:37:52Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "diffHunk": "@@ -49,17 +50,31 @@ public LinkedIdentifierColumn(MainTableColumnModel model,\n         this.setResizable(false);\n         this.setCellValueFactory(cellData -> cellData.getValue().getLinkedIdentifiers());\n         new ValueTableCellFactory<BibEntryTableViewModel, Map<Field, String>>()\n-                .withGraphic(this::createIdentifierGraphic)\n+                .withGraphic(values -> createIdentifierGraphic(values))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MTAxMg==", "bodyText": "reverted this", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480991012", "createdAt": "2020-09-01T09:13:46Z", "author": {"login": "hemantgs"}, "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "diffHunk": "@@ -49,17 +50,31 @@ public LinkedIdentifierColumn(MainTableColumnModel model,\n         this.setResizable(false);\n         this.setCellValueFactory(cellData -> cellData.getValue().getLinkedIdentifiers());\n         new ValueTableCellFactory<BibEntryTableViewModel, Map<Field, String>>()\n-                .withGraphic(this::createIdentifierGraphic)\n+                .withGraphic(values -> createIdentifierGraphic(values))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxMjY5OA=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzkyNzU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMToyMDozMlrOHKJoWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOToyNToyNVrOHKtxXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNTU5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (values.size() > 1) {\n          \n          \n            \n                        return cellFactory.getTableIcon(StandardField.URLS);\n          \n          \n            \n                    } else if (values.size() == 1) {\n          \n          \n            \n                        return cellFactory.getTableIcon(StandardField.URL);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return null;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (values.size() > 1) {\n          \n          \n            \n                        return IconTheme.JabRefIcons.MULTIPLE_LINKS.getGraphicNode();\n          \n          \n            \n                    } else if (values.size() == 1) {\n          \n          \n            \n                        return IconTheme.JabRefIcons.LINK.getGraphicNode();\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return null;\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nWe talked in JabCon2020 a bit about this and we think that it would be better to directly load the icons here instead of introducing a new field URLS in StandardFields in the model package for a ui feature.", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480405593", "createdAt": "2020-08-31T21:20:32Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "diffHunk": "@@ -49,17 +50,31 @@ public LinkedIdentifierColumn(MainTableColumnModel model,\n         this.setResizable(false);\n         this.setCellValueFactory(cellData -> cellData.getValue().getLinkedIdentifiers());\n         new ValueTableCellFactory<BibEntryTableViewModel, Map<Field, String>>()\n-                .withGraphic(this::createIdentifierGraphic)\n+                .withGraphic(values -> createIdentifierGraphic(values))\n                 .withTooltip(this::createIdentifierTooltip)\n                 .withMenu(this::createIdentifierMenu)\n+                .withOnMouseClickedEvent((entry, linkedFiles) -> event -> {\n+                    if ((event.getButton() == MouseButton.PRIMARY) && (linkedFiles.size() == 1)) {\n+                        // Open linked identifier directly only if 1 entry is preset\n+                        try {\n+                            for (Field field : linkedFiles.keySet()) {\n+                                JabRefDesktop.openExternalViewer(database, linkedFiles.get(field), field);\n+                            }\n+                        } catch (IOException e) {\n+                            dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open link.\"), e);\n+                        }\n+                    }\n+                })\n                 .install(this);\n     }\n \n     private Node createIdentifierGraphic(Map<Field, String> values) {\n-        if (values.isEmpty()) {\n-            return null;\n-        } else {\n+        if (values.size() > 1) {\n+            return cellFactory.getTableIcon(StandardField.URLS);\n+        } else if (values.size() == 1) {\n             return cellFactory.getTableIcon(StandardField.URL);\n+        } else {\n+            return null;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5Mzk0Mg==", "bodyText": "@calixtus Yeah , that makes sense too , I have changed it to use JabRefIcons directly", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480993942", "createdAt": "2020-09-01T09:19:04Z", "author": {"login": "hemantgs"}, "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "diffHunk": "@@ -49,17 +50,31 @@ public LinkedIdentifierColumn(MainTableColumnModel model,\n         this.setResizable(false);\n         this.setCellValueFactory(cellData -> cellData.getValue().getLinkedIdentifiers());\n         new ValueTableCellFactory<BibEntryTableViewModel, Map<Field, String>>()\n-                .withGraphic(this::createIdentifierGraphic)\n+                .withGraphic(values -> createIdentifierGraphic(values))\n                 .withTooltip(this::createIdentifierTooltip)\n                 .withMenu(this::createIdentifierMenu)\n+                .withOnMouseClickedEvent((entry, linkedFiles) -> event -> {\n+                    if ((event.getButton() == MouseButton.PRIMARY) && (linkedFiles.size() == 1)) {\n+                        // Open linked identifier directly only if 1 entry is preset\n+                        try {\n+                            for (Field field : linkedFiles.keySet()) {\n+                                JabRefDesktop.openExternalViewer(database, linkedFiles.get(field), field);\n+                            }\n+                        } catch (IOException e) {\n+                            dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open link.\"), e);\n+                        }\n+                    }\n+                })\n                 .install(this);\n     }\n \n     private Node createIdentifierGraphic(Map<Field, String> values) {\n-        if (values.isEmpty()) {\n-            return null;\n-        } else {\n+        if (values.size() > 1) {\n+            return cellFactory.getTableIcon(StandardField.URLS);\n+        } else if (values.size() == 1) {\n             return cellFactory.getTableIcon(StandardField.URL);\n+        } else {\n+            return null;\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNTU5Mw=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5NzcyNg==", "bodyText": "I could not find a multiple links icon , so for now I have left it as a such , with link and link-variant\nsome other alternatives are\nfor single link\n\nfor multiple", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480997726", "createdAt": "2020-09-01T09:25:25Z", "author": {"login": "hemantgs"}, "path": "src/main/java/org/jabref/gui/maintable/columns/LinkedIdentifierColumn.java", "diffHunk": "@@ -49,17 +50,31 @@ public LinkedIdentifierColumn(MainTableColumnModel model,\n         this.setResizable(false);\n         this.setCellValueFactory(cellData -> cellData.getValue().getLinkedIdentifiers());\n         new ValueTableCellFactory<BibEntryTableViewModel, Map<Field, String>>()\n-                .withGraphic(this::createIdentifierGraphic)\n+                .withGraphic(values -> createIdentifierGraphic(values))\n                 .withTooltip(this::createIdentifierTooltip)\n                 .withMenu(this::createIdentifierMenu)\n+                .withOnMouseClickedEvent((entry, linkedFiles) -> event -> {\n+                    if ((event.getButton() == MouseButton.PRIMARY) && (linkedFiles.size() == 1)) {\n+                        // Open linked identifier directly only if 1 entry is preset\n+                        try {\n+                            for (Field field : linkedFiles.keySet()) {\n+                                JabRefDesktop.openExternalViewer(database, linkedFiles.get(field), field);\n+                            }\n+                        } catch (IOException e) {\n+                            dialogService.showErrorDialogAndWait(Localization.lang(\"Unable to open link.\"), e);\n+                        }\n+                    }\n+                })\n                 .install(this);\n     }\n \n     private Node createIdentifierGraphic(Map<Field, String> values) {\n-        if (values.isEmpty()) {\n-            return null;\n-        } else {\n+        if (values.size() > 1) {\n+            return cellFactory.getTableIcon(StandardField.URLS);\n+        } else if (values.size() == 1) {\n             return cellFactory.getTableIcon(StandardField.URL);\n+        } else {\n+            return null;\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNTU5Mw=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzkyODI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/model/entry/field/StandardField.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMToyMDo0N1rOHKJouQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOToxNDoxN1rOHKtYLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNTY4OQ==", "bodyText": "See above.", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480405689", "createdAt": "2020-08-31T21:20:47Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/model/entry/field/StandardField.java", "diffHunk": "@@ -123,6 +123,7 @@\n     TYPE(\"type\", FieldProperty.TYPE),\n     URI(\"uri\", \"URI\"),\n     URL(\"url\", \"URL\", FieldProperty.EXTERNAL, FieldProperty.VERBATIM),\n+    URLS(\"urls\", \"URLS\", FieldProperty.VERBATIM),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MTI3Nw==", "bodyText": "removed this", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480991277", "createdAt": "2020-09-01T09:14:17Z", "author": {"login": "hemantgs"}, "path": "src/main/java/org/jabref/model/entry/field/StandardField.java", "diffHunk": "@@ -123,6 +123,7 @@\n     TYPE(\"type\", FieldProperty.TYPE),\n     URI(\"uri\", \"URI\"),\n     URL(\"url\", \"URL\", FieldProperty.EXTERNAL, FieldProperty.VERBATIM),\n+    URLS(\"urls\", \"URLS\", FieldProperty.VERBATIM),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNTY4OQ=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzk0ODcxOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMToyODowNlrOHKJ1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOToxNDoyNVrOHKtYhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwODg2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - We fixed linked identifier icon inconsistency[#6705](https://github.com/JabRef/jabref/issues/6705)\n          \n          \n            \n            - We fixed the linked identifier icon inconsistency[#6705](https://github.com/JabRef/jabref/issues/6705)", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480408861", "createdAt": "2020-08-31T21:28:06Z", "author": {"login": "calixtus"}, "path": "CHANGELOG.md", "diffHunk": "@@ -108,7 +109,7 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n - We fixed an issue with the Science Direct fetcher where PDFs could not be downloaded. Fixes [#5860](https://github.com/JabRef/jabref/issues/5860)\n - We fixed an issue with the Library of Congress importer.\n - We fixed the [link to the external libraries listing](https://github.com/JabRef/jabref/blob/master/external-libraries.md) in the about dialog\n-\n+- We fixed linked identifier icon inconsistency[#6705](https://github.com/JabRef/jabref/issues/6705)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MTM2NQ==", "bodyText": "fixed", "url": "https://github.com/JabRef/jabref/pull/6809#discussion_r480991365", "createdAt": "2020-09-01T09:14:25Z", "author": {"login": "hemantgs"}, "path": "CHANGELOG.md", "diffHunk": "@@ -108,7 +109,7 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n - We fixed an issue with the Science Direct fetcher where PDFs could not be downloaded. Fixes [#5860](https://github.com/JabRef/jabref/issues/5860)\n - We fixed an issue with the Library of Congress importer.\n - We fixed the [link to the external libraries listing](https://github.com/JabRef/jabref/blob/master/external-libraries.md) in the about dialog\n-\n+- We fixed linked identifier icon inconsistency[#6705](https://github.com/JabRef/jabref/issues/6705)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwODg2MQ=="}, "originalCommit": {"oid": "f8e2ed809c8b4faca6e0a2a66b13b719df823661"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1703, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}