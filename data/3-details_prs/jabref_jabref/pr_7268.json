{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjYxMjU2", "number": 7268, "title": "Added eye candy in entry editor context menus", "bodyText": "This PR adds some eye candy in the entry editor editors context menu.\n\nSadly, the TextField in the FXChipView is not accessible, so this one lacks eye candy.\nStill WIP, I'll see if I can fix some misplaced other menu entries.\nRefs #5352\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-12-28T22:46:22Z", "url": "https://github.com/JabRef/jabref/pull/7268", "merged": true, "mergeCommit": {"oid": "0f3b01696a610f4b0b319d6253c7f71ed35843c8"}, "closed": true, "closedAt": "2021-01-04T09:43:16Z", "author": {"login": "calixtus"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdquEQOAH2gAyNTQ2MjYxMjU2OjJhODhhYTYwYzRlOWU0MTZlNjMyNDA1YjZiMmI3MGFjOWNiODNlNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdszHXBAFqTU2MDg5MzE2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a88aa60c4e9e416e632405b6b2b70ac9cb83e4f", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/2a88aa60c4e9e416e632405b6b2b70ac9cb83e4f", "committedDate": "2020-12-28T22:42:20Z", "message": "Added eye candy in entry editor context menus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd356c37a2d574ccafb653d883ae04964818277", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/fcd356c37a2d574ccafb653d883ae04964818277", "committedDate": "2020-12-31T20:47:06Z", "message": "Refactor ProtectedTermsMenu"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTQ3ODA3", "url": "https://github.com/JabRef/jabref/pull/7268#pullrequestreview-560547807", "createdAt": "2020-12-31T20:53:09Z", "commit": {"oid": "fcd356c37a2d574ccafb653d883ae04964818277"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDo1MzowOVrOINLZ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDo1NDoyMVrOINLa1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTI0MQ==", "bodyText": "The SELECT_ALL case was originally disabled, if SHOW_HANDLES was false. Why?", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550689241", "createdAt": "2020-12-31T20:53:09Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/fieldeditors/contextmenu/EditorContextAction.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.jabref.gui.fieldeditors.contextmenu;\n+\n+import java.util.List;\n+\n+import javafx.beans.binding.Bindings;\n+import javafx.beans.binding.BooleanBinding;\n+import javafx.beans.property.BooleanProperty;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextInputControl;\n+import javafx.scene.input.Clipboard;\n+\n+import org.jabref.gui.actions.ActionFactory;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.gui.keyboard.KeyBindingRepository;\n+import org.jabref.gui.util.BindingsHelper;\n+import org.jabref.logic.util.OS;\n+\n+import com.sun.javafx.scene.control.Properties;\n+\n+public class EditorContextAction extends SimpleCommand {\n+\n+    private static final boolean SHOW_HANDLES = Properties.IS_TOUCH_SUPPORTED && !OS.OS_X;\n+\n+    private final StandardActions command;\n+    private final TextInputControl textInputControl;\n+\n+    public EditorContextAction(StandardActions command, TextInputControl textInputControl) {\n+        this.command = command;\n+        this.textInputControl = textInputControl;\n+\n+        BooleanProperty editableBinding = textInputControl.editableProperty();\n+        BooleanBinding hasTextBinding = Bindings.createBooleanBinding(() -> textInputControl.getLength() > 0, textInputControl.textProperty());\n+        BooleanBinding hasStringInClipboardBinding = (BooleanBinding) BindingsHelper.constantOf(Clipboard.getSystemClipboard().hasString());\n+        BooleanBinding hasSelectionBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() > 0, textInputControl.selectionProperty());\n+        BooleanBinding allSelectedBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() == textInputControl.getLength());\n+        BooleanBinding maskTextBinding = (BooleanBinding) BindingsHelper.constantOf(textInputControl instanceof PasswordField); // (maskText(\"A\") != \"A\");\n+\n+        if (SHOW_HANDLES) {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not());\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        } else {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not()); // why was this disabled before?\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd356c37a2d574ccafb653d883ae04964818277"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4OTQ5Mw==", "bodyText": "What does that property mean? Is this somehow related to the select all option above?", "url": "https://github.com/JabRef/jabref/pull/7268#discussion_r550689493", "createdAt": "2020-12-31T20:54:21Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/fieldeditors/contextmenu/EditorContextAction.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.jabref.gui.fieldeditors.contextmenu;\n+\n+import java.util.List;\n+\n+import javafx.beans.binding.Bindings;\n+import javafx.beans.binding.BooleanBinding;\n+import javafx.beans.property.BooleanProperty;\n+import javafx.scene.control.MenuItem;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextInputControl;\n+import javafx.scene.input.Clipboard;\n+\n+import org.jabref.gui.actions.ActionFactory;\n+import org.jabref.gui.actions.SimpleCommand;\n+import org.jabref.gui.actions.StandardActions;\n+import org.jabref.gui.keyboard.KeyBindingRepository;\n+import org.jabref.gui.util.BindingsHelper;\n+import org.jabref.logic.util.OS;\n+\n+import com.sun.javafx.scene.control.Properties;\n+\n+public class EditorContextAction extends SimpleCommand {\n+\n+    private static final boolean SHOW_HANDLES = Properties.IS_TOUCH_SUPPORTED && !OS.OS_X;\n+\n+    private final StandardActions command;\n+    private final TextInputControl textInputControl;\n+\n+    public EditorContextAction(StandardActions command, TextInputControl textInputControl) {\n+        this.command = command;\n+        this.textInputControl = textInputControl;\n+\n+        BooleanProperty editableBinding = textInputControl.editableProperty();\n+        BooleanBinding hasTextBinding = Bindings.createBooleanBinding(() -> textInputControl.getLength() > 0, textInputControl.textProperty());\n+        BooleanBinding hasStringInClipboardBinding = (BooleanBinding) BindingsHelper.constantOf(Clipboard.getSystemClipboard().hasString());\n+        BooleanBinding hasSelectionBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() > 0, textInputControl.selectionProperty());\n+        BooleanBinding allSelectedBinding = Bindings.createBooleanBinding(() -> textInputControl.getSelection().getLength() == textInputControl.getLength());\n+        BooleanBinding maskTextBinding = (BooleanBinding) BindingsHelper.constantOf(textInputControl instanceof PasswordField); // (maskText(\"A\") != \"A\");\n+\n+        if (SHOW_HANDLES) {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not());\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        } else {\n+            this.executable.bind(\n+                    switch (command) {\n+                        case COPY -> editableBinding.and(maskTextBinding.not()).and(hasSelectionBinding);\n+                        case CUT -> maskTextBinding.not().and(hasSelectionBinding);\n+                        case PASTE -> editableBinding.and(hasStringInClipboardBinding);\n+                        case DELETE -> editableBinding.and(hasSelectionBinding);\n+                        case SELECT_ALL -> hasTextBinding.and(allSelectedBinding.not()); // why was this disabled before?\n+                        default -> BindingsHelper.constantOf(true);\n+                    });\n+        }\n+    }\n+\n+    @Override\n+    public void execute() {\n+        switch (command) {\n+            case COPY -> textInputControl.copy();\n+            case CUT -> textInputControl.cut();\n+            case PASTE -> textInputControl.paste();\n+            case DELETE -> textInputControl.deleteText(textInputControl.getSelection());\n+            case SELECT_ALL -> textInputControl.selectAll();\n+        }\n+        textInputControl.requestFocus();\n+    }\n+\n+    /**\n+     * Returns the default context menu items (except undo/redo)\n+     */\n+    public static List<MenuItem> getDefaultContextMenuItems(TextInputControl textInputControl,\n+                                                            KeyBindingRepository keyBindingRepository) {\n+        ActionFactory factory = new ActionFactory(keyBindingRepository);\n+\n+        MenuItem selectAllMenuItem = factory.createMenuItem(StandardActions.SELECT_ALL,\n+                new EditorContextAction(StandardActions.SELECT_ALL, textInputControl));\n+        if (SHOW_HANDLES) {\n+            selectAllMenuItem.getProperties().put(\"refreshMenu\", Boolean.TRUE); // what does that mean?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd356c37a2d574ccafb653d883ae04964818277"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4905d4370f5956fd9177aaa76d260a4b040422df", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/4905d4370f5956fd9177aaa76d260a4b040422df", "committedDate": "2021-01-03T16:29:47Z", "message": "Rafactored small cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eb8941a689f52ad6f7a6b91cc4bd82f2ab215a0", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/6eb8941a689f52ad6f7a6b91cc4bd82f2ab215a0", "committedDate": "2021-01-03T16:33:15Z", "message": "Merge remote-tracking branch 'upstream/master' into entry-editor-eye-candy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "178b71b3122c22fb4f420f9c0736a57994b2694d", "author": {"user": {"login": "calixtus", "name": "Carl Christian Snethlage"}}, "url": "https://github.com/JabRef/jabref/commit/178b71b3122c22fb4f420f9c0736a57994b2694d", "committedDate": "2021-01-03T16:39:11Z", "message": "CHANGELOG.md and l10n"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNzE4MjEx", "url": "https://github.com/JabRef/jabref/pull/7268#pullrequestreview-560718211", "createdAt": "2021-01-03T18:53:58Z", "commit": {"oid": "178b71b3122c22fb4f420f9c0736a57994b2694d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODkzMTY5", "url": "https://github.com/JabRef/jabref/pull/7268#pullrequestreview-560893169", "createdAt": "2021-01-04T09:43:06Z", "commit": {"oid": "178b71b3122c22fb4f420f9c0736a57994b2694d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4850, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}