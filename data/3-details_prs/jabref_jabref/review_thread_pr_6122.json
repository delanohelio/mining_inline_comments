{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MzI2MzA2", "number": 6122, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNTozMDoyOVrODoD1AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNjoxODowMFrODoD-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzMyMzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNTozMDoyOVrOF2aMXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNTozMDoyOVrOF2aMXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjU3NA==", "bodyText": "The binding shouldn't refer to the currently selected entry because this might change in the future and then the binding needs to be reevaluated. The following should work\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BibEntry entry = selectedEntries.get(0);\n          \n          \n            \n                    ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n          \n          \n            \n                    return Bindings.createBooleanBinding(() -> {\n          \n          \n            \n                        if (entry.get() == null)\n          \n          \n            \n                            return false;\n          \n          \n            \n                        else\n          \n          \n            \n                           return entry.get().getFields().stream().anyMatch(fields::contains);\n          \n          \n            \n                    }, entry, entry.getFieldsObserable());", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392596574", "createdAt": "2020-03-14T15:30:29Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +31,18 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        // binding should be recreated on every right click\n+        // not sure why selectedEntries might be empty, see https://github.com/JabRef/jabref/issues/6085\n+        if (selectedEntries.isEmpty()) {\n+            return Bindings.createBooleanBinding(() -> false, selectedEntries);\n+        }\n+\n+        BibEntry entry = selectedEntries.get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e27a9f623a8ac97a18a799e7676764a290e7b2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzM0ODQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNjoxODowMFrOF2aZQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMTo1MToyNFrOF2hgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ==", "bodyText": "I'm missing entry.getFieldsObserable() here. Is this intended?", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392599875", "createdAt": "2020-03-14T16:18:00Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwMDUxOA==", "bodyText": "Good catch. This is a problem - it might not be available (that's why I need the complex code above). I'm not sure what side effects this might have, I need you guys' expertise here.", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392600518", "createdAt": "2020-03-14T16:27:13Z", "author": {"login": "stefan-kolb"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, "originalCommit": {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMzkyNA==", "bodyText": "Not sure but maybe the following works:\nEasyBind.monadic(entry)\n             .flatMap(BibEntry:getFieldsObservable)\n             .map(entryFields -> entryFields.anyMatch(...))", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392613924", "createdAt": "2020-03-14T19:43:11Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, "originalCommit": {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NzczMA==", "bodyText": "When does this situation occur? I.e. the fields of the entry change dynamically?", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392697730", "createdAt": "2020-03-15T18:05:56Z", "author": {"login": "stefan-kolb"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, "originalCommit": {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNjM0MA==", "bodyText": "This binding should update in the case when the selected entry changes as well as when the fields of the currently selected entry change", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392716340", "createdAt": "2020-03-15T21:51:24Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, "originalCommit": {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2002, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}