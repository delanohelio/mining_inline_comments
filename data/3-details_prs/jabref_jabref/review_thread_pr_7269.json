{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDY3NDE4", "number": 7269, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0MDoyNFrOFJ0RgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0Mjo1MVrOFJ0Tfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM3OTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0MDoyNFrOIMTYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMDowMjo1OFrOIMXALA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTM4MA==", "bodyText": "The MOVE_FILE_TO_FOLDER_AND_RENAME should still be enabled if the file is already in the correct folder, but not of the correct name, or not?", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549771380", "createdAt": "2020-12-29T16:40:24Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java", "diffHunk": "@@ -275,7 +275,7 @@ public ContextAction(StandardActions command, LinkedFileViewModel linkedFile, Pr\n                         case MOVE_FILE_TO_FOLDER_AND_RENAME, MOVE_FILE_TO_FOLDER -> Bindings.createBooleanBinding(\n                                 () -> !linkedFile.getFile().isOnlineLink()\n                                         && linkedFile.getFile().findIn(databaseContext, preferencesService.getFilePreferences()).isPresent()\n-                                        && linkedFile.isGeneratedPathSameAsOriginal(),\n+                                        && !linkedFile.isGeneratedPathSameAsOriginal(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57887baac14fd9102e10f009b4eb45439f735f36"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgzMDcwMA==", "bodyText": "Changed that.", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549830700", "createdAt": "2020-12-29T20:02:58Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/fieldeditors/LinkedFilesEditor.java", "diffHunk": "@@ -275,7 +275,7 @@ public ContextAction(StandardActions command, LinkedFileViewModel linkedFile, Pr\n                         case MOVE_FILE_TO_FOLDER_AND_RENAME, MOVE_FILE_TO_FOLDER -> Bindings.createBooleanBinding(\n                                 () -> !linkedFile.getFile().isOnlineLink()\n                                         && linkedFile.getFile().findIn(databaseContext, preferencesService.getFilePreferences()).isPresent()\n-                                        && linkedFile.isGeneratedPathSameAsOriginal(),\n+                                        && !linkedFile.isGeneratedPathSameAsOriginal(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTM4MA=="}, "originalCommit": {"oid": "57887baac14fd9102e10f009b4eb45439f735f36"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM4NDYzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0Mjo1MVrOIMTbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxNDozNVrOIMUEYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MjExNA==", "bodyText": "If it's hard to write tests, then it's a good indication that some refactoring should be done. Indeed, we use the mvvm pattern to make testing easy. Could you thus please add a constructor in the viewmodel that accepts a linkedFileHandler .", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549772114", "createdAt": "2020-12-29T16:42:51Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java", "diffHunk": "@@ -170,4 +168,28 @@ void downloadDoesNotOverwriteFileTypeExtension() throws MalformedURLException {\n         task.onFailure(Assertions::fail);\n         new CurrentThreadTaskExecutor().execute(task);\n     }\n+\n+    @Test\n+    void isNotSamePath() {\n+        linkedFile = new LinkedFile(\"desc\", tempFile, \"pdf\");\n+        databaseContext = mock(BibDatabaseContext.class);\n+        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\"); // use this variant, as we cannot mock the linkedFileHandler cause it's initialized inside the viewModel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57887baac14fd9102e10f009b4eb45439f735f36"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MjYyNQ==", "bodyText": "Actually, it's just the comment which is obsolete here, as the linkedFilesHandler is not required and can be tested separately (and already is). Would need the same mocking, so no difference.", "url": "https://github.com/JabRef/jabref/pull/7269#discussion_r549782625", "createdAt": "2020-12-29T17:14:35Z", "author": {"login": "Siedlerchr"}, "path": "src/test/java/org/jabref/gui/fieldeditors/LinkedFileViewModelTest.java", "diffHunk": "@@ -170,4 +168,28 @@ void downloadDoesNotOverwriteFileTypeExtension() throws MalformedURLException {\n         task.onFailure(Assertions::fail);\n         new CurrentThreadTaskExecutor().execute(task);\n     }\n+\n+    @Test\n+    void isNotSamePath() {\n+        linkedFile = new LinkedFile(\"desc\", tempFile, \"pdf\");\n+        databaseContext = mock(BibDatabaseContext.class);\n+        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\"); // use this variant, as we cannot mock the linkedFileHandler cause it's initialized inside the viewModel", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MjExNA=="}, "originalCommit": {"oid": "57887baac14fd9102e10f009b4eb45439f735f36"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}