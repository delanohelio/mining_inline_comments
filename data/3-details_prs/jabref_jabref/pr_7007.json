{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjE5NDQx", "number": 7007, "title": "Support for exporting to YAML format", "bodyText": "Support for exporting to YAML , fixes #6974\n\n\nFixed deleteBlankLines parameter in TemplateExporter not working.\n\n\nEnabled deleteBlankLines for the RIS Exporter, which used to have that enabled.\n\n\n Change in CHANGELOG.md described (if applicable)\n\n\n Tests created for changes (if applicable)\n\n\n Manually tested changed features in running JabRef (always required)\n\n\n Screenshots added in PR description (for UI changes)\n\n\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-10-12T14:35:17Z", "url": "https://github.com/JabRef/jabref/pull/7007", "merged": true, "mergeCommit": {"oid": "7f4c36c03629498db8e56281906241a82846e1e3"}, "closed": true, "closedAt": "2020-10-22T01:13:12Z", "author": {"login": "joethei"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRzbRvAH2gAyNTAxNjE5NDQxOjZkYTdjMDUyZDUwZmQxODNiNTQ0ZGQ2ZGI2NjBiNDE1MjZkY2FjYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUo3F_AH2gAyNTAxNjE5NDQxOmExMTA3ZWQ4OTBiYjU2MmNhNmY1YjY0ZjI2YWU3YWVjY2ViNmY5MmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6da7c052d50fd183b544dd6db660b41526dcaca6", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/6da7c052d50fd183b544dd6db660b41526dcaca6", "committedDate": "2020-10-12T12:48:54Z", "message": "added support for exporting CSL in YAML format."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c40d595ef5834959679c67afd81d7915fa2b804", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/4c40d595ef5834959679c67afd81d7915fa2b804", "committedDate": "2020-10-12T14:36:33Z", "message": "added changes in Changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b1538661137df2b5eaac91abb5c6627689e2174", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/9b1538661137df2b5eaac91abb5c6627689e2174", "committedDate": "2020-10-12T14:37:34Z", "message": "Merge branch 'master' into yaml-exporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "048259336f0a8b8d2a427a1c0f708f294e416245", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/048259336f0a8b8d2a427a1c0f708f294e416245", "committedDate": "2020-10-12T14:45:48Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/34545cb81ed1be05e76b166e59a89d22f3e5dd8d", "committedDate": "2020-10-12T17:17:54Z", "message": "remove one trailing space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTA4Mzcx", "url": "https://github.com/JabRef/jabref/pull/7007#pullrequestreview-506908371", "createdAt": "2020-10-12T20:49:35Z", "commit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo0OTozNVrOHgMuiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo1NzoyOFrOHgM8lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNTAwMA==", "bodyText": "Not sure why a lower case i is used, although all the other @param fields start with a capital letter.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param deleteBlankLines  if blank lines should be removed (default: false)\n          \n          \n            \n                 * @param deleteBlankLines  If blank lines should be removed (default: false)", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503525000", "createdAt": "2020-10-12T20:49:35Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -112,27 +100,33 @@ public TemplateExporter(String displayName, String consoleName, String lfFileNam\n     }\n \n     /**\n-     * Initialize another export format based on templates stored in dir with\n-     * layoutFile lfFilename.\n-     * The display name is automatically derived from the FileType\n+     * Initialize another export format based on templates stored in dir with layoutFile lfFilename.\n      *\n+     * @param displayName       Name to display to the user.\n      * @param consoleName       Name to call this format in the console.\n      * @param lfFileName        Name of the main layout file.\n      * @param directory         Directory in which to find the layout file.\n      * @param extension         Should contain the . (for instance .txt).\n      * @param layoutPreferences Preferences for layout\n      * @param savePreferences   Preferences for saving\n-     * @param deleteBlankLines  If blank lines should be remove (default: false)\n+     * @param deleteBlankLines  if blank lines should be removed (default: false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNjQ4OQ==", "bodyText": "Double check: Does this work on Windows and Linux equally well? Mayybe OS.NEW_LINE should be used?", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503526489", "createdAt": "2020-10-12T20:52:55Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -278,8 +269,12 @@ public void export(final BibDatabaseContext databaseContext, final Path file,\n                 // Write the entry\n                 if (layout != null) {\n                     if (deleteBlankLines) {\n-                        String withoutBlankLines = BLANK_LINE_MATCHER.matcher(layout.doLayout(entry, databaseContext.getDatabase())).replaceAll(\"\");\n-                        ps.write(withoutBlankLines);\n+                        String[] lines = layout.doLayout(entry, databaseContext.getDatabase()).split(\"\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNzAzNQ==", "bodyText": "The alternative implementation could have been to update the regular expression. I am really not sure why it stopped working.", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503527035", "createdAt": "2020-10-12T20:54:10Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -278,8 +269,12 @@ public void export(final BibDatabaseContext databaseContext, final Path file,\n                 // Write the entry\n                 if (layout != null) {\n                     if (deleteBlankLines) {\n-                        String withoutBlankLines = BLANK_LINE_MATCHER.matcher(layout.doLayout(entry, databaseContext.getDatabase())).replaceAll(\"\");\n-                        ps.write(withoutBlankLines);\n+                        String[] lines = layout.doLayout(entry, databaseContext.getDatabase()).split(\"\\n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNjQ4OQ=="}, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNzUxOA==", "bodyText": "This is not the date format shown in #6974 (comment), is it?", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503527518", "createdAt": "2020-10-12T20:55:05Z", "author": {"login": "koppor"}, "path": "src/main/resources/resource/layout/yaml.layout", "diffHunk": "@@ -0,0 +1,14 @@\n+- id: \\citationkey\n+\\begin{type}  type: \\type\\end{type}\n+\\begin{author}\n+  author:\n+  - literal: \"\\author\"\n+\\end{author}\n+\\begin{title}  title: \"\\title\"\\end{title}\n+\\begin{shorttitle}  title-short: \"\\shorttitle\"\\end{shorttitle}\n+\\begin{date}  issued: \\date\\end{date}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNzk2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BibEntry entry = new BibEntry(StandardEntryType.Article);\n          \n          \n            \n                    entry.withCitationKey(\"test\");\n          \n          \n            \n                    entry.withField(StandardField.AUTHOR, \"Test Author\");\n          \n          \n            \n                    entry.withField(StandardField.TITLE, \"Test Title\");\n          \n          \n            \n                    entry.withField(StandardField.URL, \"http://example.com\");\n          \n          \n            \n                    entry.withField(StandardField.YEAR, \"2020\");\n          \n          \n            \n                    BibEntry entry = new BibEntry(StandardEntryType.Article)\n          \n          \n            \n                      .withCitationKey(\"test\")\n          \n          \n            \n                      .withField(StandardField.AUTHOR, \"Test Author\")\n          \n          \n            \n                      .withField(StandardField.TITLE, \"Test Title\")\n          \n          \n            \n                      .withField(StandardField.URL, \"http://example.com\")\n          \n          \n            \n                      .withField(StandardField.YEAR, \"2020\");", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503527962", "createdAt": "2020-10-12T20:55:56Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/exporter/YamlExporterTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.jabref.logic.exporter;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.jabref.logic.layout.LayoutFormatterPreferences;\n+import org.jabref.logic.xmp.XmpPreferences;\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.entry.types.StandardEntryType;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.mockito.Answers;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+public class YamlExporterTest {\n+\n+    public Charset charset;\n+    private Exporter yamlExporter;\n+    private BibDatabaseContext databaseContext;\n+\n+    @BeforeEach\n+    public void setUp() throws Exception {\n+        List<TemplateExporter> customFormats = new ArrayList<>();\n+        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n+        SavePreferences savePreferences = mock(SavePreferences.class);\n+        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n+        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n+\n+        databaseContext = new BibDatabaseContext();\n+        charset = StandardCharsets.UTF_8;\n+        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n+    }\n+\n+    @Test\n+    public final void exportForNoEntriesWritesNothing(@TempDir Path tempFile) throws Exception {\n+        Path file = tempFile.resolve(\"ThisIsARandomlyNamedFile\");\n+        Files.createFile(file);\n+        yamlExporter.export(databaseContext, tempFile, charset, Collections.emptyList());\n+        assertEquals(Collections.emptyList(), Files.readAllLines(file));\n+    }\n+\n+    @Test\n+    public final void exportCorrectContent(@TempDir Path tempFile) throws Exception {\n+        BibEntry entry = new BibEntry(StandardEntryType.Article);\n+        entry.withCitationKey(\"test\");\n+        entry.withField(StandardField.AUTHOR, \"Test Author\");\n+        entry.withField(StandardField.TITLE, \"Test Title\");\n+        entry.withField(StandardField.URL, \"http://example.com\");\n+        entry.withField(StandardField.YEAR, \"2020\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyODU5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> lines = new ArrayList<>();\n          \n          \n            \n                    lines.add(\"---\");\n          \n          \n            \n                    lines.add(\"references:\");\n          \n          \n            \n                    lines.add(\"- id: test\");\n          \n          \n            \n                    lines.add(\"  author:\");\n          \n          \n            \n                    lines.add(\"  - literal: \\\"Test Author\\\"\");\n          \n          \n            \n                    lines.add(\"  title: \\\"Test Title\\\"\");\n          \n          \n            \n                    lines.add(\"  issued: 2020\");\n          \n          \n            \n                    lines.add(\"  url: http://example.com\");\n          \n          \n            \n                    lines.add(\"---\");\n          \n          \n            \n                    List<String> lines = List.of(\n          \n          \n            \n                      \"---\",\n          \n          \n            \n                     \"references:\",\n          \n          \n            \n                     \"- id: test\",\n          \n          \n            \n                     \"  author:\",\n          \n          \n            \n                     \"  - literal: \\\"Test Author\\\"\",\n          \n          \n            \n                     \"  title: \\\"Test Title\\\"\",\n          \n          \n            \n                     \"  issued: 2020\",\n          \n          \n            \n                     \"  url: http://example.com\",\n          \n          \n            \n                     \"---\");", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r503528599", "createdAt": "2020-10-12T20:57:28Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/exporter/YamlExporterTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.jabref.logic.exporter;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.jabref.logic.layout.LayoutFormatterPreferences;\n+import org.jabref.logic.xmp.XmpPreferences;\n+import org.jabref.model.database.BibDatabaseContext;\n+import org.jabref.model.entry.BibEntry;\n+import org.jabref.model.entry.field.StandardField;\n+import org.jabref.model.entry.types.StandardEntryType;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.mockito.Answers;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+public class YamlExporterTest {\n+\n+    public Charset charset;\n+    private Exporter yamlExporter;\n+    private BibDatabaseContext databaseContext;\n+\n+    @BeforeEach\n+    public void setUp() throws Exception {\n+        List<TemplateExporter> customFormats = new ArrayList<>();\n+        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n+        SavePreferences savePreferences = mock(SavePreferences.class);\n+        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n+        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n+\n+        databaseContext = new BibDatabaseContext();\n+        charset = StandardCharsets.UTF_8;\n+        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n+    }\n+\n+    @Test\n+    public final void exportForNoEntriesWritesNothing(@TempDir Path tempFile) throws Exception {\n+        Path file = tempFile.resolve(\"ThisIsARandomlyNamedFile\");\n+        Files.createFile(file);\n+        yamlExporter.export(databaseContext, tempFile, charset, Collections.emptyList());\n+        assertEquals(Collections.emptyList(), Files.readAllLines(file));\n+    }\n+\n+    @Test\n+    public final void exportCorrectContent(@TempDir Path tempFile) throws Exception {\n+        BibEntry entry = new BibEntry(StandardEntryType.Article);\n+        entry.withCitationKey(\"test\");\n+        entry.withField(StandardField.AUTHOR, \"Test Author\");\n+        entry.withField(StandardField.TITLE, \"Test Title\");\n+        entry.withField(StandardField.URL, \"http://example.com\");\n+        entry.withField(StandardField.YEAR, \"2020\");\n+\n+        Path file = tempFile.resolve(\"RandomFileName\");\n+        Files.createFile(file);\n+        yamlExporter.export(databaseContext, file, charset, Collections.singletonList(entry));\n+\n+        List<String> lines = new ArrayList<>();\n+        lines.add(\"---\");\n+        lines.add(\"references:\");\n+        lines.add(\"- id: test\");\n+        lines.add(\"  author:\");\n+        lines.add(\"  - literal: \\\"Test Author\\\"\");\n+        lines.add(\"  title: \\\"Test Title\\\"\");\n+        lines.add(\"  issued: 2020\");\n+        lines.add(\"  url: http://example.com\");\n+        lines.add(\"---\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34545cb81ed1be05e76b166e59a89d22f3e5dd8d"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd22cba7d32f3b181c18a164c878bf004a7ca7d3", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/fd22cba7d32f3b181c18a164c878bf004a7ca7d3", "committedDate": "2020-10-13T05:31:04Z", "message": "Update src/test/java/org/jabref/logic/exporter/YamlExporterTest.java\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27dce7e71ebfbbe9bad655f2c771a78d947cbcc5", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/27dce7e71ebfbbe9bad655f2c771a78d947cbcc5", "committedDate": "2020-10-13T05:31:23Z", "message": "Update src/test/java/org/jabref/logic/exporter/YamlExporterTest.java\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "977bc6e1a1a40ba5ce249d94f3afa7373fd168cb", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/977bc6e1a1a40ba5ce249d94f3afa7373fd168cb", "committedDate": "2020-10-13T05:31:41Z", "message": "Update src/main/java/org/jabref/logic/exporter/TemplateExporter.java\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a38c665fd45643f50e5cb831735215b540c37dd", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/6a38c665fd45643f50e5cb831735215b540c37dd", "committedDate": "2020-10-13T09:23:27Z", "message": "Merge branch 'master' into yaml-exporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58eea460893e275b3dd6e1f70823675d657f3afa", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/58eea460893e275b3dd6e1f70823675d657f3afa", "committedDate": "2020-10-15T09:18:19Z", "message": "added conversion from bibtex entrytype to csl type\nfixed blank line removal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/55481e5dd8369b6b1931e0616308ade124db4cce", "committedDate": "2020-10-15T11:35:11Z", "message": "Merge branch 'master' into yaml-exporter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Mjg3OTk3", "url": "https://github.com/JabRef/jabref/pull/7007#pullrequestreview-509287997", "createdAt": "2020-10-15T11:42:30Z", "commit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMTY3MjAx", "url": "https://github.com/JabRef/jabref/pull/7007#pullrequestreview-511167201", "createdAt": "2020-10-18T18:00:11Z", "commit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODowMDoxMVrOHjsnlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoxMzo1N1rOHjsttQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MzIzOQ==", "bodyText": "Checkstyle linting error. Only one white line allowed", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r507193239", "createdAt": "2020-10-18T18:00:11Z", "author": {"login": "calixtus"}, "path": "CHANGELOG.md", "diffHunk": "@@ -52,8 +53,10 @@ inserting new citations in a OpenOffic/LibreOffice document. [#6957](https://git\n - We fixed an issue where it was impossible to connect to OpenOffice/LibreOffice on Mac OSX. [#6970](https://github.com/JabRef/jabref/pull/6970)\n - We fixed an issue with the python script used by browser plugins that failed to locate JabRef if not installed in its default location. [#6963](https://github.com/JabRef/jabref/pull/6963/files)\n - We fixed an issue where identity column header had incorrect foreground color in the  Dark theme. [#6796](https://github.com/JabRef/jabref/issues/6796)\n+- We fixed an issue where the RIS exporter added extra blank lines.[#7007](https://github.com/JabRef/jabref/pull/7007/files)\n - We fixed an issue where clicking on Collapse All button in the Search for Unlinked Local Files expanded the directory structure erroneously [#6848](https://github.com/JabRef/jabref/issues/6848)\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MzcxMQ==", "bodyText": "Can you make boolean deleteBlankLines an enum? KEEP_BLANKS or DELETE_BLANKS is way more intuitive as true and false at the caller side.", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r507193711", "createdAt": "2020-10-18T18:04:36Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -112,27 +102,33 @@ public TemplateExporter(String displayName, String consoleName, String lfFileNam\n     }\n \n     /**\n-     * Initialize another export format based on templates stored in dir with\n-     * layoutFile lfFilename.\n-     * The display name is automatically derived from the FileType\n+     * Initialize another export format based on templates stored in dir with layoutFile lfFilename.\n      *\n+     * @param displayName       Name to display to the user.\n      * @param consoleName       Name to call this format in the console.\n      * @param lfFileName        Name of the main layout file.\n      * @param directory         Directory in which to find the layout file.\n      * @param extension         Should contain the . (for instance .txt).\n      * @param layoutPreferences Preferences for layout\n      * @param savePreferences   Preferences for saving\n-     * @param deleteBlankLines  If blank lines should be remove (default: false)\n+     * @param deleteBlankLines  If blank lines should be removed (default: false)\n      */\n-    public TemplateExporter(String consoleName, String lfFileName, String directory, StandardFileType extension, LayoutFormatterPreferences layoutPreferences, SavePreferences savePreferences, boolean deleteBlankLines) {\n-        this(consoleName, consoleName, lfFileName, directory, extension, layoutPreferences, savePreferences);\n+    public TemplateExporter(String displayName, String consoleName, String lfFileName, String directory, FileType extension,\n+                            LayoutFormatterPreferences layoutPreferences, SavePreferences savePreferences, boolean deleteBlankLines) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NDgwNQ==", "bodyText": "Please wrap the comments after 120 characters, to keep it readable in github", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r507194805", "createdAt": "2020-10-18T18:13:57Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -112,27 +102,33 @@ public TemplateExporter(String displayName, String consoleName, String lfFileNam\n     }\n \n     /**\n-     * Initialize another export format based on templates stored in dir with\n-     * layoutFile lfFilename.\n-     * The display name is automatically derived from the FileType\n+     * Initialize another export format based on templates stored in dir with layoutFile lfFilename.\n      *\n+     * @param displayName       Name to display to the user.\n      * @param consoleName       Name to call this format in the console.\n      * @param lfFileName        Name of the main layout file.\n      * @param directory         Directory in which to find the layout file.\n      * @param extension         Should contain the . (for instance .txt).\n      * @param layoutPreferences Preferences for layout\n      * @param savePreferences   Preferences for saving\n-     * @param deleteBlankLines  If blank lines should be remove (default: false)\n+     * @param deleteBlankLines  If blank lines should be removed (default: false)\n      */\n-    public TemplateExporter(String consoleName, String lfFileName, String directory, StandardFileType extension, LayoutFormatterPreferences layoutPreferences, SavePreferences savePreferences, boolean deleteBlankLines) {\n-        this(consoleName, consoleName, lfFileName, directory, extension, layoutPreferences, savePreferences);\n+    public TemplateExporter(String displayName, String consoleName, String lfFileName, String directory, FileType extension,\n+                            LayoutFormatterPreferences layoutPreferences, SavePreferences savePreferences, boolean deleteBlankLines) {\n+        super(consoleName, displayName, extension);\n+        if (Objects.requireNonNull(lfFileName).endsWith(LAYOUT_EXTENSION)) {\n+            this.lfFileName = lfFileName.substring(0, lfFileName.length() - LAYOUT_EXTENSION.length());\n+        } else {\n+            this.lfFileName = lfFileName;\n+        }\n+        this.directory = directory;\n+        this.layoutPreferences = layoutPreferences;\n+        this.savePreferences = savePreferences;\n         this.deleteBlankLines = deleteBlankLines;\n     }\n \n     /**\n-     * Indicate whether this is a custom export. A custom export looks for its\n-     * layout files using a normal file path, while a built-in export looks in\n-     * the classpath.\n+     * Indicate whether this is a custom export. A custom export looks for its layout files using a normal file path, while a built-in export looks in the classpath.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55481e5dd8369b6b1931e0616308ade124db4cce"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e45019a6ee094778e716c6b27fad549b8306f8", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/92e45019a6ee094778e716c6b27fad549b8306f8", "committedDate": "2020-10-19T14:46:29Z", "message": "change deleteBlankLines boolean to use new enum BlankLineBehaviour\nwrap comments correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf000bf7ba5cc79cc6b9f9f026ad9aec5aa8e9f", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/baf000bf7ba5cc79cc6b9f9f026ad9aec5aa8e9f", "committedDate": "2020-10-19T14:48:25Z", "message": "Merge branch 'yaml-exporter' of https://github.com/joethei/jabref into yaml-exporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a366a7e5a52bc53b5bb225e098eb7c23886575", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/12a366a7e5a52bc53b5bb225e098eb7c23886575", "committedDate": "2020-10-19T15:15:31Z", "message": "Update BlankLineBehaviour.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTc3ODQ1", "url": "https://github.com/JabRef/jabref/pull/7007#pullrequestreview-512177845", "createdAt": "2020-10-19T21:36:57Z", "commit": {"oid": "12a366a7e5a52bc53b5bb225e098eb7c23886575"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c3636d84113445dc1f09484d1ac8dc1cecf4959", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/0c3636d84113445dc1f09484d1ac8dc1cecf4959", "committedDate": "2020-10-20T16:57:10Z", "message": "Merge branch 'master' into yaml-exporter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTQyNTIz", "url": "https://github.com/JabRef/jabref/pull/7007#pullrequestreview-513142523", "createdAt": "2020-10-20T21:19:35Z", "commit": {"oid": "0c3636d84113445dc1f09484d1ac8dc1cecf4959"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMToxOTozNVrOHlRhUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMToyNDoxOFrOHlRqeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0NjQxNw==", "bodyText": "Full JavaDoc \ud83d\ude07\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             this enum represents the behaviour for blank lines in {@link TemplateExporter}\n          \n          \n            \n             * This enum represents the behaviour for blank lines in {@link TemplateExporter}", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r508846417", "createdAt": "2020-10-20T21:19:35Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/exporter/BlankLineBehaviour.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.jabref.logic.exporter;\n+\n+/**\n+ this enum represents the behaviour for blank lines in {@link TemplateExporter}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c3636d84113445dc1f09484d1ac8dc1cecf4959"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0NjY1MA==", "bodyText": "Please do not add two empty lines - I wonder why checkstyle did not complain", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r508846650", "createdAt": "2020-10-20T21:20:00Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/exporter/TemplateExporter.java", "diffHunk": "@@ -33,20 +33,14 @@\n  */\n public class TemplateExporter extends Exporter {\n \n+    private static final String BLANK_LINE_PATTERN = \"\\\\r\\\\n|\\\\n\";\n     private static final String LAYOUT_PREFIX = \"/resource/layout/\";\n-\n-    /**\n-     * A regular expression that matches blank lines\n-     *\n-     * ?m activates \"multimode\", which makes ^ match line starts/ends.\n-     * \\\\s simply marks any whitespace character\n-     */\n-    private static final Pattern BLANK_LINE_MATCHER = Pattern.compile(\"(?m)^\\\\s\");\n     private static final String LAYOUT_EXTENSION = \".layout\";\n     private static final String FORMATTERS_EXTENSION = \".formatters\";\n     private static final String BEGIN_INFIX = \".begin\";\n     private static final String END_INFIX = \".end\";\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c3636d84113445dc1f09484d1ac8dc1cecf4959"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0ODc2MA==", "bodyText": "A simple  switch was not possible\n  return switch(value) {\n     case StandardEntryType.Article.getDisplayName() -> \"article\",\n     ...\n     case StandardEntryType.Conference.getDisplayName() -> \"paper-conference\",\n     ...\n     default -> \"no-type\";\n  }", "url": "https://github.com/JabRef/jabref/pull/7007#discussion_r508848760", "createdAt": "2020-10-20T21:24:18Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/layout/format/CSLType.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.jabref.logic.layout.format;\n+\n+import java.util.Map;\n+\n+import org.jabref.logic.layout.LayoutFormatter;\n+import org.jabref.model.entry.types.StandardEntryType;\n+\n+public class CSLType implements LayoutFormatter {\n+\n+    @Override\n+    public String format(String value) {\n+        Map<String, String> map = Map.of(StandardEntryType.Article.getDisplayName(), \"article\",\n+                StandardEntryType.Book.getDisplayName(), \"book\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c3636d84113445dc1f09484d1ac8dc1cecf4959"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1107ed890bb562ca6f5b64f26ae7aecceb6f92d", "author": {"user": {"login": "joethei", "name": "Johannes Theiner"}}, "url": "https://github.com/JabRef/jabref/commit/a1107ed890bb562ca6f5b64f26ae7aecceb6f92d", "committedDate": "2020-10-21T08:12:06Z", "message": "small updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 47, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}