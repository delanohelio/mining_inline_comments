{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTgzOTE1", "number": 6489, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjoxMjo1MVrOD9QKwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo0MDozN1rOD-jXZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTU0NjI0OnYy", "diffSide": "LEFT", "path": "src/main/java/org/jabref/logic/net/ProxyRegisterer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjoxMjo1MVrOGWouRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNzoxNzowN1rOGWqPOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTA2Mg==", "bodyText": "Probably wrong name?", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r426389062", "createdAt": "2020-05-18T06:12:51Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/net/ProxyRegisterer.java", "diffHunk": "@@ -7,14 +7,14 @@ private ProxyRegisterer() {\n \n     public static void register(ProxyPreferences proxyPrefs) {\n         if (proxyPrefs.isUseProxy()) {\n-            // NetworkTabView.java ensures that proxyHostname and proxyPort are not null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb29c41362a714b116f2d31f844367aecba30262"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxMzg4Mw==", "bodyText": "Yes. Very strange, apparently the tab was called NetworkTab once, so changing the name back and forth in the process of decisionmaking revealed this comment...", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r426413883", "createdAt": "2020-05-18T07:17:07Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/net/ProxyRegisterer.java", "diffHunk": "@@ -7,14 +7,14 @@ private ProxyRegisterer() {\n \n     public static void register(ProxyPreferences proxyPrefs) {\n         if (proxyPrefs.isUseProxy()) {\n-            // NetworkTabView.java ensures that proxyHostname and proxyPort are not null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTA2Mg=="}, "originalCommit": {"oid": "bb29c41362a714b116f2d31f844367aecba30262"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjEwMTU5OnYy", "diffSide": "LEFT", "path": "src/main/java/org/jabref/preferences/JabRefPreferences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjozMTowNlrOGXownQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowODoxNFrOGXsjaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzODIzNw==", "bodyText": "Probably it makes sense to add a migration to it", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r427438237", "createdAt": "2020-05-19T16:31:06Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/preferences/JabRefPreferences.java", "diffHunk": "@@ -245,8 +245,6 @@\n     public static final String ALLOW_FILE_AUTO_OPEN_BROWSE = \"allowFileAutoOpenBrowse\";\n     public static final String CUSTOM_TAB_NAME = \"customTabName_\";\n     public static final String CUSTOM_TAB_FIELDS = \"customTabFields_\";\n-    public static final String USE_UNIT_FORMATTER_ON_SEARCH = \"useUnitFormatterOnSearch\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMDM5Mw==", "bodyText": "I believe there is nothing to migrate to. This preference is not used anymore. It was abandoned long ago and I don't know when. It is no more, has ceased to be and met it's maker. This is an ex preference.", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r427500393", "createdAt": "2020-05-19T18:08:14Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/preferences/JabRefPreferences.java", "diffHunk": "@@ -245,8 +245,6 @@\n     public static final String ALLOW_FILE_AUTO_OPEN_BROWSE = \"allowFileAutoOpenBrowse\";\n     public static final String CUSTOM_TAB_NAME = \"customTabName_\";\n     public static final String CUSTOM_TAB_FIELDS = \"customTabFields_\";\n-    public static final String USE_UNIT_FORMATTER_ON_SEARCH = \"useUnitFormatterOnSearch\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzODIzNw=="}, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTEzNjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/preferences/NetworkTab.fxml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyNToxNFrOGYt2qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyNToxNFrOGYt2qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3MDI4Mg==", "bodyText": "Please add a changelog entry for this change.", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428570282", "createdAt": "2020-05-21T10:25:14Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/preferences/NetworkTab.fxml", "diffHunk": "@@ -12,8 +12,8 @@\n <?import org.controlsfx.control.textfield.CustomPasswordField?>\n <fx:root prefWidth=\"650.0\" spacing=\"10.0\" type=\"VBox\"\n          xmlns=\"http://javafx.com/javafx/8.0.212\" xmlns:fx=\"http://javafx.com/fxml/1\"\n-         fx:controller=\"org.jabref.gui.preferences.AdvancedTabView\">\n-    <Label styleClass=\"titleHeader\" text=\"%Advanced\"/>\n+         fx:controller=\"org.jabref.gui.preferences.NetworkTabView\">\n+    <Label styleClass=\"titleHeader\" text=\"%Network\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE0NTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/bibtexkeypattern/BibtexKeyPatternDialog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDoyODoyMlrOGYt8WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjoxMDo1MlrOGY5Rlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3MTczNg==", "bodyText": "What do you think about renaming BibtexKeyPattern to CiteKeyPattern to be consistent with the naming in the metadata class?", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428571736", "createdAt": "2020-05-21T10:28:22Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/bibtexkeypattern/BibtexKeyPatternDialog.java", "diffHunk": "@@ -19,7 +19,7 @@ public BibtexKeyPatternDialog(BasePanel panel) {\n         this.bibtexKeyPatternPanel = new BibtexKeyPatternPanel(panel);\n         this.panel = panel;\n         this.metaData = panel.getBibDatabaseContext().getMetaData();\n-        AbstractBibtexKeyPattern keyPattern = metaData.getCiteKeyPattern(Globals.prefs.getKeyPattern());\n+        AbstractBibtexKeyPattern keyPattern = metaData.getCiteKeyPattern(Globals.prefs.getGlobalBibtexKeyPattern());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1NzM5OA==", "bodyText": "I'm really not sure about this. On one hand it would make sense, because it would abstract this preference beyond bibtex and biblatex.  On the other hand, it is closely tangled to the term bibtexKey, which has already become a fixed technical term in JabRef.\nI measured the amount of files affected by a refactor of this. About 43 files would change.", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428757398", "createdAt": "2020-05-21T16:10:52Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/bibtexkeypattern/BibtexKeyPatternDialog.java", "diffHunk": "@@ -19,7 +19,7 @@ public BibtexKeyPatternDialog(BasePanel panel) {\n         this.bibtexKeyPatternPanel = new BibtexKeyPatternPanel(panel);\n         this.panel = panel;\n         this.metaData = panel.getBibDatabaseContext().getMetaData();\n-        AbstractBibtexKeyPattern keyPattern = metaData.getCiteKeyPattern(Globals.prefs.getKeyPattern());\n+        AbstractBibtexKeyPattern keyPattern = metaData.getCiteKeyPattern(Globals.prefs.getGlobalBibtexKeyPattern());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3MTczNg=="}, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE1OTYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/preferences/BibtexKeyPatternTabViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozMzozNFrOGYuFAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozMzozNFrOGYuFAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3Mzk1Mw==", "bodyText": "I think the should prefix is better here: shouldAvoidOverwriting, shouldWarnBeforeOverwrite and shouldGenerateKeysBeforeSaving.\nhttps://stackoverflow.com/a/5326487/873661", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428573953", "createdAt": "2020-05-21T10:33:34Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/preferences/BibtexKeyPatternTabViewModel.java", "diffHunk": "@@ -16,46 +16,51 @@\n import org.jabref.gui.DialogService;\n import org.jabref.gui.commonfxcontrols.BibtexKeyPatternPanelItemModel;\n import org.jabref.gui.commonfxcontrols.BibtexKeyPatternPanelViewModel;\n+import org.jabref.logic.bibtexkeypattern.BibtexKeyPatternPreferences;\n import org.jabref.model.bibtexkeypattern.GlobalBibtexKeyPattern;\n import org.jabref.preferences.JabRefPreferences;\n \n public class BibtexKeyPatternTabViewModel implements PreferenceTabViewModel {\n \n-    private BooleanProperty overwriteAllowProperty = new SimpleBooleanProperty();\n-    private BooleanProperty overwriteWarningProperty = new SimpleBooleanProperty();\n-    private BooleanProperty generateOnSaveProperty = new SimpleBooleanProperty();\n-    private BooleanProperty letterStartAProperty = new SimpleBooleanProperty();\n-    private BooleanProperty letterStartBProperty = new SimpleBooleanProperty();\n-    private BooleanProperty letterAlwaysAddProperty = new SimpleBooleanProperty();\n-    private StringProperty keyPatternRegexProperty = new SimpleStringProperty();\n-    private StringProperty keyPatternReplacementProperty = new SimpleStringProperty();\n-    private StringProperty unwantedCharactersProperty = new SimpleStringProperty();\n+    private final BooleanProperty overwriteAllowProperty = new SimpleBooleanProperty();\n+    private final BooleanProperty overwriteWarningProperty = new SimpleBooleanProperty();\n+    private final BooleanProperty generateOnSaveProperty = new SimpleBooleanProperty();\n+    private final BooleanProperty letterStartAProperty = new SimpleBooleanProperty();\n+    private final BooleanProperty letterStartBProperty = new SimpleBooleanProperty();\n+    private final BooleanProperty letterAlwaysAddProperty = new SimpleBooleanProperty();\n+    private final StringProperty keyPatternRegexProperty = new SimpleStringProperty();\n+    private final StringProperty keyPatternReplacementProperty = new SimpleStringProperty();\n+    private final StringProperty unwantedCharactersProperty = new SimpleStringProperty();\n \n     // The list and the default properties are being overwritten by the bound properties of the tableView, but to\n     // prevent an NPE on storing the preferences before lazy-loading of the setValues, they need to be initialized.\n-    private ListProperty<BibtexKeyPatternPanelItemModel> patternListProperty = new SimpleListProperty<>(FXCollections.observableArrayList());\n-    private ObjectProperty<BibtexKeyPatternPanelItemModel> defaultKeyPatternProperty = new SimpleObjectProperty<>(\n+    private final ListProperty<BibtexKeyPatternPanelItemModel> patternListProperty = new SimpleListProperty<>(FXCollections.observableArrayList());\n+    private final ObjectProperty<BibtexKeyPatternPanelItemModel> defaultKeyPatternProperty = new SimpleObjectProperty<>(\n             new BibtexKeyPatternPanelItemModel(new BibtexKeyPatternPanelViewModel.DefaultEntryType(), \"\"));\n \n     private final DialogService dialogService;\n     private final JabRefPreferences preferences;\n+    private final BibtexKeyPatternPreferences initialBibtexKeyPatternPreferences;\n \n     public BibtexKeyPatternTabViewModel(DialogService dialogService, JabRefPreferences preferences) {\n         this.dialogService = dialogService;\n         this.preferences = preferences;\n+        this.initialBibtexKeyPatternPreferences = preferences.getBibtexKeyPatternPreferences();\n     }\n \n     @Override\n     public void setValues() {\n-        overwriteAllowProperty.setValue(!preferences.getBoolean(JabRefPreferences.AVOID_OVERWRITING_KEY));\n-        overwriteWarningProperty.setValue(preferences.getBoolean(JabRefPreferences.WARN_BEFORE_OVERWRITING_KEY));\n-        generateOnSaveProperty.setValue(preferences.getBoolean(JabRefPreferences.GENERATE_KEYS_BEFORE_SAVING));\n+        overwriteAllowProperty.setValue(!initialBibtexKeyPatternPreferences.avoidOverwritingCiteKey());\n+        overwriteWarningProperty.setValue(initialBibtexKeyPatternPreferences.isWarningBeforeOverwrite());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE3NDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternPreferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozOToyMlrOGYuNzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozOToyMlrOGYuNzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjIwNA==", "bodyText": "Maybe rename to KeySuffix?", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428576204", "createdAt": "2020-05-21T10:39:22Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BibtexKeyPatternPreferences.java", "diffHunk": "@@ -4,48 +4,65 @@\n \n public class BibtexKeyPatternPreferences {\n \n+    public enum KeyLetters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE3NzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/exporter/SavePreferences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo0MDozN1rOGYuPwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDo0NTowMVrOGY1lpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjcwNQ==", "bodyText": "The globalCiteKeyPattern is now also included in the bibtexKeyPatternPreferences right?", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428576705", "createdAt": "2020-05-21T10:40:37Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/exporter/SavePreferences.java", "diffHunk": "@@ -37,15 +36,14 @@ private SavePreferences(Boolean saveInOriginalOrder, SaveOrderConfig saveOrder,\n         this.reformatFile = reformatFile;\n         this.fieldWriterPreferences = fieldWriterPreferences;\n         this.globalCiteKeyPattern = globalCiteKeyPattern;\n-        this.generateBibtexKeysBeforeSaving = generateBibtexKeysBeforeSaving;\n         this.bibtexKeyPatternPreferences = bibtexKeyPatternPreferences;\n     }\n \n     public SavePreferences(Boolean saveInOriginalOrder, SaveOrderConfig saveOrder, Charset encoding,\n                            DatabaseSaveType saveType, Boolean takeMetadataSaveOrderInAccount, Boolean reformatFile,\n                            FieldWriterPreferences fieldWriterPreferences, GlobalBibtexKeyPattern globalCiteKeyPattern,\n-                           Boolean generateBibtexKeysBeforeSaving, BibtexKeyPatternPreferences bibtexKeyPatternPreferences) {\n-        this(saveInOriginalOrder, saveOrder, encoding, true, saveType, takeMetadataSaveOrderInAccount, reformatFile, fieldWriterPreferences, globalCiteKeyPattern, generateBibtexKeysBeforeSaving, bibtexKeyPatternPreferences);\n+                           BibtexKeyPatternPreferences bibtexKeyPatternPreferences) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY5Njk5Ng==", "bodyText": "Thanks, I totally overlooked this one.\nGlobalCiteKeyPattern was in fact part of BibtexKeyPatternPreferences already before. I removed it now.", "url": "https://github.com/JabRef/jabref/pull/6489#discussion_r428696996", "createdAt": "2020-05-21T14:45:01Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/exporter/SavePreferences.java", "diffHunk": "@@ -37,15 +36,14 @@ private SavePreferences(Boolean saveInOriginalOrder, SaveOrderConfig saveOrder,\n         this.reformatFile = reformatFile;\n         this.fieldWriterPreferences = fieldWriterPreferences;\n         this.globalCiteKeyPattern = globalCiteKeyPattern;\n-        this.generateBibtexKeysBeforeSaving = generateBibtexKeysBeforeSaving;\n         this.bibtexKeyPatternPreferences = bibtexKeyPatternPreferences;\n     }\n \n     public SavePreferences(Boolean saveInOriginalOrder, SaveOrderConfig saveOrder, Charset encoding,\n                            DatabaseSaveType saveType, Boolean takeMetadataSaveOrderInAccount, Boolean reformatFile,\n                            FieldWriterPreferences fieldWriterPreferences, GlobalBibtexKeyPattern globalCiteKeyPattern,\n-                           Boolean generateBibtexKeysBeforeSaving, BibtexKeyPatternPreferences bibtexKeyPatternPreferences) {\n-        this(saveInOriginalOrder, saveOrder, encoding, true, saveType, takeMetadataSaveOrderInAccount, reformatFile, fieldWriterPreferences, globalCiteKeyPattern, generateBibtexKeysBeforeSaving, bibtexKeyPatternPreferences);\n+                           BibtexKeyPatternPreferences bibtexKeyPatternPreferences) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjcwNQ=="}, "originalCommit": {"oid": "7a5531598f8d069a011110582cb98bbd52269928"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1842, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}