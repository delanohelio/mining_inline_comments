{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4Mjc0MDQ0", "number": 7036, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTozNjoyOFrOEw04NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToxNTozMVrOEw8oRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjMzNDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTozNjoyOFrOHmn3XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTozNjoyOFrOHmn3XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2MTA4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.error(\"ISBN \" + identifier + \" not found at ottobib\");\n          \n          \n            \n                        LOGGER.error(\"ISBN { } not found at ottobib\", identifier);\n          \n      \n    \n    \n  \n\nThis is the recommended way", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510261084", "createdAt": "2020-10-22T15:36:28Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java", "diffHunk": "@@ -58,6 +58,13 @@ public URL getUrlForIdentifier(String identifier) throws URISyntaxException, Mal\n             throw new FetcherException(\"Could not \", e);\n         }\n         Element textArea = html.select(\"textarea\").first();\n+\n+        // inspect the \"no results\" error message (if there is one)\n+        Element potentialErrorMessageDiv = html.select(\"div#flash-notice.notice.add-bottom\").first();\n+        if (potentialErrorMessageDiv.hasText() && potentialErrorMessageDiv.text().contains(\"No Results\")) {\n+            LOGGER.error(\"ISBN \" + identifier + \" not found at ottobib\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31a2d3abb14697427438e6b25944fd842884efd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM2MDQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0MjoxNFrOHmoICw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo1MjoxNlrOHmrFZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ==", "bodyText": "This is not the right place. You cannot put GUI code into logic/model classes.\nSee https://devdocs.jabref.org/getting-into-the-code/high-level-documentation\nThe right place to check if the results are empty would be here: Than you have it generic as well for all kind of fetchers\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/EntryTypeViewModel.java\n    \n    \n         Line 147\n      in\n      7f4c36c\n    \n    \n    \n    \n\n        \n          \n           Optional<BibEntry> result = fetcherWorker.getValue();", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510265355", "createdAt": "2020-10-22T15:42:14Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "diffHunk": "@@ -59,6 +62,13 @@ public String getName() {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n+        // nothing found at ebook.de and ottobib\n+        if (!bibEntry.isPresent()) {\n+            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f31a2d3abb14697427438e6b25944fd842884efd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwMjk0OQ==", "bodyText": "oops, my mistake. I'll fix it later today. I have another question about the ottobib fetcher though, should getting no results throw an exception? Ottobib seems like a special case since supplying an ISBN that leads to no entry doesn't give a 404 but instead leads to a special page with an error message.", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510302949", "createdAt": "2020-10-22T16:35:13Z", "author": {"login": "tmrd993"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "diffHunk": "@@ -59,6 +62,13 @@ public String getName() {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n+        // nothing found at ebook.de and ottobib\n+        if (!bibEntry.isPresent()) {\n+            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}, "originalCommit": {"oid": "f31a2d3abb14697427438e6b25944fd842884efd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMDIzMA==", "bodyText": "I thought about throwing a fetcher exception as well. But on the other hand we have optional for those cases.\nSo I would not throw an exception.\n@tobiasdiez", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510310230", "createdAt": "2020-10-22T16:46:34Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "diffHunk": "@@ -59,6 +62,13 @@ public String getName() {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n+        // nothing found at ebook.de and ottobib\n+        if (!bibEntry.isPresent()) {\n+            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}, "originalCommit": {"oid": "f31a2d3abb14697427438e6b25944fd842884efd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMzgyOA==", "bodyText": "Thanks for your work so far.\nExceptions are only for exceptional program states. An unkown ISBN is a possible case in Ottobib. Thats probably why Ottobib does not show 404, but a page saying: unkown ISBN.\nSee: https://github.com/HugoMatilla/Effective-JAVA-Summary#57-use-exceptions-only-for-exceptional-conditions", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510313828", "createdAt": "2020-10-22T16:52:16Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "diffHunk": "@@ -59,6 +62,13 @@ public String getName() {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n+        // nothing found at ebook.de and ottobib\n+        if (!bibEntry.isPresent()) {\n+            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}, "originalCommit": {"oid": "f31a2d3abb14697427438e6b25944fd842884efd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzMyMjYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/EntryTypeViewModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTo1MzoyN1rOHmxdwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToxMDoyMFrOHmz9dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxODM2OQ==", "bodyText": "Can I leave this error message or should it be unique?", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510418369", "createdAt": "2020-10-22T19:53:27Z", "author": {"login": "tmrd993"}, "path": "src/main/java/org/jabref/gui/EntryTypeViewModel.java", "diffHunk": "@@ -176,6 +176,10 @@ public void runFetcherWorker() {\n                 searchSuccesfulProperty.set(true);\n             } else if (StringUtil.isBlank(idText.getValue())) {\n                 dialogService.showWarningDialogAndWait(Localization.lang(\"Empty search ID\"), Localization.lang(\"The given search ID was empty.\"));\n+            } else if (result.isEmpty()) {\n+                String fetcher = selectedItemProperty().getValue().getName();\n+                String searchId = idText.getValue();\n+                dialogService.showErrorDialogAndWait(Localization.lang(\"Fetcher '%0' did not find an entry for id '%1'.\", fetcher, searchId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ff6968d94eea78f6f406be657effe103c275b1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1OTI1NQ==", "bodyText": "Yes, looks good so far", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510459255", "createdAt": "2020-10-22T21:10:20Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/EntryTypeViewModel.java", "diffHunk": "@@ -176,6 +176,10 @@ public void runFetcherWorker() {\n                 searchSuccesfulProperty.set(true);\n             } else if (StringUtil.isBlank(idText.getValue())) {\n                 dialogService.showWarningDialogAndWait(Localization.lang(\"Empty search ID\"), Localization.lang(\"The given search ID was empty.\"));\n+            } else if (result.isEmpty()) {\n+                String fetcher = selectedItemProperty().getValue().getName();\n+                String searchId = idText.getValue();\n+                dialogService.showErrorDialogAndWait(Localization.lang(\"Fetcher '%0' did not find an entry for id '%1'.\", fetcher, searchId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxODM2OQ=="}, "originalCommit": {"oid": "06ff6968d94eea78f6f406be657effe103c275b1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzYwNDU0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToxNTozMVrOHm0IEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToxNTozMVrOHm0IEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2MTk3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - We added an error message in the EntryTypeViewModel that gets displayed to the user if a fetched entry is empty. [#7000](https://github.com/JabRef/jabref/issues/7000)\n          \n          \n            \n            - We added an error message in the New Entry dialog that is shown in case the fetcher did not find anything . [#7000](https://github.com/JabRef/jabref/issues/7000)\n          \n      \n    \n    \n  \n\nThe changelog is more intended towards the normal end users of JabRef, so it should not be too technical.", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510461970", "createdAt": "2020-10-22T21:15:31Z", "author": {"login": "Siedlerchr"}, "path": "CHANGELOG.md", "diffHunk": "@@ -19,6 +19,7 @@ Note that this project **does not** adhere to [Semantic Versioning](http://semve\n - We added a DOI format and organization check to detect [American Physical Society](https://journals.aps.org/) journals to copy the article ID\n to the page field for cases where the page numbers are missing. [#7019](https://github.com/JabRef/jabref/issues/7019)\n - We added a new fetcher to enable users to search jstor.org [#6627](https://github.com/JabRef/jabref/issues/6627)\n+- We added an error message in the EntryTypeViewModel that gets displayed to the user if a fetched entry is empty. [#7000](https://github.com/JabRef/jabref/issues/7000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ff6968d94eea78f6f406be657effe103c275b1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2163, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}