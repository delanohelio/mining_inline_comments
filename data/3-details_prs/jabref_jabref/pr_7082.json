{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTM0OTIz", "number": 7082, "title": "Feature/enable paginated fetchers", "bodyText": "This PR adds complex search query support for paginated fetchers.\nIt additionally implements the corresponding interfaces for a couple of fetchers (arXiv, Scholar, IEEE Xplore, Springer Link).\nRefs #6236, #5507, koppor#369, koppor#347\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-11-07T13:02:51Z", "url": "https://github.com/JabRef/jabref/pull/7082", "merged": true, "mergeCommit": {"oid": "00e340919cee86159d3af587c8d3db60ccf2c94b"}, "closed": true, "closedAt": "2020-11-15T22:01:40Z", "author": {"login": "DominikVoigt"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ8qk2gH2gAyNTE3MTM0OTIzOmU1ZmNhNjcxYWIyN2E2YmJlMjM5YzQ4MGU0ZjIzYThlZTc5MzQxOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcIe1VAH2gAyNTE3MTM0OTIzOjRlNGU0MTk3ZmVjZWNlZGYxOTg0ZmUwMTZlZGY2MjQ4ZWRhMGFiZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e5fca671ab27a6bbe239c480e4f23a8ee7934191", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/e5fca671ab27a6bbe239c480e4f23a8ee7934191", "committedDate": "2020-11-06T20:06:09Z", "message": "Add paged fetchers and complex search paged fetchers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2ca2cf665fbe6fb7bb508928ce9bb030a4a727f", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/f2ca2cf665fbe6fb7bb508928ce9bb030a4a727f", "committedDate": "2020-11-07T12:54:53Z", "message": "Merge remote-tracking branch 'upstream/master' into feature/enable-paginated-fetchers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fdbc6d4f9724c4f00e26abd60c0026d9070708f", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/1fdbc6d4f9724c4f00e26abd60c0026d9070708f", "committedDate": "2020-11-07T13:08:24Z", "message": "Fix Checkstyle\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "215c1772311e6c9e004685e935013bba4f066aab", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/215c1772311e6c9e004685e935013bba4f066aab", "committedDate": "2020-11-07T13:15:10Z", "message": "Fix Checkstyle\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjUzNjc5", "url": "https://github.com/JabRef/jabref/pull/7082#pullrequestreview-525653679", "createdAt": "2020-11-07T13:38:46Z", "commit": {"oid": "215c1772311e6c9e004685e935013bba4f066aab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzozODo0NlrOHvII9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMzozODo0NlrOHvII9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3ODQ4Nw==", "bodyText": "This struck me recently, isn't there a way to check if the exception is a more specific exception so that one could check for the status code number?", "url": "https://github.com/JabRef/jabref/pull/7082#discussion_r519178487", "createdAt": "2020-11-07T13:38:46Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/GoogleScholar.java", "diffHunk": "@@ -259,4 +230,46 @@ private void obtainAndModifyCookie() throws FetcherException {\n             throw new FetcherException(\"Cookie configuration for Google Scholar failed.\", e);\n         }\n     }\n+\n+    @Override\n+    public Page<BibEntry> performSearchPaged(String query, int pageNumber) throws FetcherException {\n+        LOGGER.debug(\"Using URL {}\", query);\n+        obtainAndModifyCookie();\n+        List<BibEntry> foundEntries = new ArrayList<>(20);\n+\n+        URIBuilder uriBuilder = null;\n+        try {\n+            uriBuilder = new URIBuilder(BASIC_SEARCH_URL);\n+        } catch (URISyntaxException e) {\n+            throw new FetcherException(\"Error while fetching from \" + getName() + \" at URL \" + BASIC_SEARCH_URL, e);\n+        }\n+\n+        uriBuilder.addParameter(\"hl\", \"en\");\n+        uriBuilder.addParameter(\"start\", String.valueOf(pageNumber * getPageSize()));\n+        uriBuilder.addParameter(\"num\", String.valueOf(getPageSize()));\n+        uriBuilder.addParameter(\"btnG\", \"Search\");\n+        uriBuilder.addParameter(\"q\", query);\n+        String queryURL = uriBuilder.toString();\n+\n+        try {\n+            addHitsFromQuery(foundEntries, queryURL);\n+        } catch (IOException e) {\n+            // if there are too much requests from the same IP address google is answering with a 503 and redirecting to a captcha challenge\n+            // The caught IOException looks for example like this:\n+            // java.io.IOException: Server returned HTTP response code: 503 for URL: https://ipv4.google.com/sorry/index?continue=https://scholar.google.com/scholar%3Fhl%3Den%26btnG%3DSearch%26q%3Dbpmn&hl=en&q=CGMSBI0NBDkYuqy9wAUiGQDxp4NLQCWbIEY1HjpH5zFJhv4ANPGdWj0\n+            if (e.getMessage().contains(\"Server returned HTTP response code: 503 for URL\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "215c1772311e6c9e004685e935013bba4f066aab"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d862650dcd87cc45344770b73225d78c8dcc2d1", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/4d862650dcd87cc45344770b73225d78c8dcc2d1", "committedDate": "2020-11-07T16:04:02Z", "message": "Make method calls consistent\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTIxMDAy", "url": "https://github.com/JabRef/jabref/pull/7082#pullrequestreview-527121002", "createdAt": "2020-11-10T11:45:23Z", "commit": {"oid": "4d862650dcd87cc45344770b73225d78c8dcc2d1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo0NToyM1rOHwY2tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo0NzoyMVrOHwY6uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMDkxNw==", "bodyText": "This should be the default implementation, i.e. push to PagedSearchBasedParserFetcher", "url": "https://github.com/JabRef/jabref/pull/7082#discussion_r520500917", "createdAt": "2020-11-10T11:45:23Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/IEEE.java", "diffHunk": "@@ -234,8 +228,31 @@ public String getName() {\n \n     @Override\n     public URL getComplexQueryURL(ComplexSearchQuery complexSearchQuery) throws URISyntaxException, MalformedURLException {\n+        return getComplexQueryURL(complexSearchQuery, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d862650dcd87cc45344770b73225d78c8dcc2d1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwMTk0Nw==", "bodyText": "That is a good general test that should exist for every paged fetcher, thus I suggest to move it to the general test class (not sure about the name, maybe PagedSearchFetcherTests?)", "url": "https://github.com/JabRef/jabref/pull/7082#discussion_r520501947", "createdAt": "2020-11-10T11:47:21Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/SpringerFetcherTest.java", "diffHunk": "@@ -132,6 +134,20 @@ public void supportsBooleanANDSearch() throws Exception {\n                           .map(Optional::get).forEach(authorField -> assertTrue(authorField.contains(\"Redmiles\")));\n     }\n \n+    /**\n+     * Ensure that different page return different entries\n+     */\n+    @Test\n+    public void pageSearchReturnsUniqueResultsPerPage() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d862650dcd87cc45344770b73225d78c8dcc2d1"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a87a5e5845ed534562b2f7cbf9653ace7133a27", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/9a87a5e5845ed534562b2f7cbf9653ace7133a27", "committedDate": "2020-11-11T15:15:59Z", "message": "Add test interface for paged fetchers\nMove common methods into default implementation\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c76bf45bdb74062f6d3f3d38f43798f641e17559", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/c76bf45bdb74062f6d3f3d38f43798f641e17559", "committedDate": "2020-11-12T13:09:47Z", "message": "Remove performSearch and adapt all tests accordingly\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "189632595c3e9a612d91a00f0d3ea0f99426f1e6", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/189632595c3e9a612d91a00f0d3ea0f99426f1e6", "committedDate": "2020-11-12T14:01:43Z", "message": "Remove normal paged search\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e4e4197fececedf1984fe016edf6248eda0abfb", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/4e4e4197fececedf1984fe016edf6248eda0abfb", "committedDate": "2020-11-13T15:00:02Z", "message": "Remove the complex part from perform search\nAdapt query parser and add new tests\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4963, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}