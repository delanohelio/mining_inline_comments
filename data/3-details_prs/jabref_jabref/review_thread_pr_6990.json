{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTAzOTc1", "number": 6990, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjoyNDo1NFrOErdr_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNTowMjo0OVrOFM8Fug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDEwNjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/DoiResolution.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjoyNDo1NFrOHePmTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMDoyMjoyNlrOIQzYFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3NDg5NQ==", "bodyText": "This is not entirely correct AFAICT. The problem with getting proceedings instead of the individual paper exists only for Springer.\nOther publishers (such as IEEE) can be added here if a tailored fetcher for them exists that also fetches a PDF for a DOI. Such a tailored fetcher will run in parallel with this class here and get at least the same result, if not a better one, but with a lower TrustLevel (like for Springer DOIs). Therefore, if the DOI at hand leads to one of those publishers, we can skip the DOI search via this class here.", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501474895", "createdAt": "2020-10-08T06:24:54Z", "author": {"login": "Toromtomtom"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/DoiResolution.java", "diffHunk": "@@ -33,7 +33,10 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(DoiResolution.class);\n \n     /**\n-     * Hosts for which tailored fetchers exist, so this fetcher is not needed.\n+     * A DOI leads to the page of the paper. We assume that there is the PDF of the paper.\n+     * Thus, the DOI fetcher is ranked highest (see {@link TrustLevel}).\n+     * Some publishers do not publish the PDF of the paper, but the full proceedings on the page\n+     * of the paper. For these publishers, we need to skip the DOI search.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUwMTYwNw==", "bodyText": "We assume that the DOI fetcher returns a DOI if it is (nearly) 100% sure that a DOI is determined. We assume the custom fetchers also return something even if they are not 100% sure (right @stefan-kolb?)\nThis is what I tried to write down at https://github.com/JabRef/jabref/pull/6990/files#diff-d3fe05c852562027c0866670547c8b8a\nIf we trust in general ALL custom fetchers more, we need to switch the numbers for SOURCE and PUBLSIHER in TrustLevel (https://github.com/JabRef/jabref/pull/6990/files#diff-77f5ba02dd7375d532d9c3aee3527dfc)", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501501607", "createdAt": "2020-10-08T07:24:15Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/DoiResolution.java", "diffHunk": "@@ -33,7 +33,10 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(DoiResolution.class);\n \n     /**\n-     * Hosts for which tailored fetchers exist, so this fetcher is not needed.\n+     * A DOI leads to the page of the paper. We assume that there is the PDF of the paper.\n+     * Thus, the DOI fetcher is ranked highest (see {@link TrustLevel}).\n+     * Some publishers do not publish the PDF of the paper, but the full proceedings on the page\n+     * of the paper. For these publishers, we need to skip the DOI search.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3NDg5NQ=="}, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ4OTg3OA==", "bodyText": "We fixed a similarity problem inside the DOIResolution that REALLY caused this issue.", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r554489878", "createdAt": "2021-01-10T00:22:26Z", "author": {"login": "stefan-kolb"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/DoiResolution.java", "diffHunk": "@@ -33,7 +33,10 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(DoiResolution.class);\n \n     /**\n-     * Hosts for which tailored fetchers exist, so this fetcher is not needed.\n+     * A DOI leads to the page of the paper. We assume that there is the PDF of the paper.\n+     * Thus, the DOI fetcher is ranked highest (see {@link TrustLevel}).\n+     * Some publishers do not publish the PDF of the paper, but the full proceedings on the page\n+     * of the paper. For these publishers, we need to skip the DOI search.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3NDg5NQ=="}, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDI5ODYwOnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzoyOTozMFrOHeRZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzoyOTozMFrOHeRZgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUwNDM4NA==", "bodyText": "It would be good if these trust levels are described in more detail, i.e. what are the criteria.", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501504384", "createdAt": "2020-10-08T07:29:30Z", "author": {"login": "tobiasdiez"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel\n+- the result with the highest priority wins\n+- `InterruptedException` | `ExecutionException` | `CancellationException` are ignored\n+\n+### Trust Levels\n+\n+- SOURCE (highest)\n+- PUBLISHER", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDMwMDIyOnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzoyOTo1OVrOHeRacw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzoyOTo1OVrOHeRacw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUwNDYyNw==", "bodyText": "That may change in the future, and I wouldn't add the current levels here (one source of trust: code).", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501504627", "createdAt": "2020-10-08T07:29:59Z", "author": {"login": "tobiasdiez"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel\n+- the result with the highest priority wins\n+- `InterruptedException` | `ExecutionException` | `CancellationException` are ignored\n+\n+### Trust Levels\n+\n+- SOURCE (highest)\n+- PUBLISHER\n+- PREPRINT\n+- META_SEARCH\n+- UNKNOWN (lowest)\n+\n+### Current trust levels\n+\n+All fetchers are contained in the package `org.jabref.logic.importer.fetcher`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDMwNTY3OnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzozMTozOVrOHeRdsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNzozMTozOVrOHeRdsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUwNTQ1OQ==", "bodyText": "This only applies to download fetcher, right?", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501505459", "createdAt": "2020-10-08T07:31:39Z", "author": {"login": "tobiasdiez"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDUwNjcxOnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyNTo0MlrOHeTZCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyNTo0MlrOHeTZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzNzAzNQ==", "bodyText": "Source as the DOI is always forwarded to the correct publisher page for the paper", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501537035", "createdAt": "2020-10-08T08:25:42Z", "author": {"login": "stefan-kolb"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel\n+- the result with the highest priority wins\n+- `InterruptedException` | `ExecutionException` | `CancellationException` are ignored\n+\n+### Trust Levels\n+\n+- SOURCE (highest)\n+- PUBLISHER\n+- PREPRINT\n+- META_SEARCH\n+- UNKNOWN (lowest)\n+\n+### Current trust levels\n+\n+All fetchers are contained in the package `org.jabref.logic.importer.fetcher`.\n+Here we list the trust levels of some of them:\n+\n+- DOI: SOURCE, because it is the ultimate source", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDUxMDQ1OnYy", "diffSide": "RIGHT", "path": "docs/advanced-reading/fetchers.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyNjo0MFrOHeTbXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoyODo1OFrOHeThIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzNzYyOQ==", "bodyText": "Might be wrong publisher or might search based on string similarity not always on DOI", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501537629", "createdAt": "2020-10-08T08:26:40Z", "author": {"login": "stefan-kolb"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel\n+- the result with the highest priority wins\n+- `InterruptedException` | `ExecutionException` | `CancellationException` are ignored\n+\n+### Trust Levels\n+\n+- SOURCE (highest)\n+- PUBLISHER\n+- PREPRINT\n+- META_SEARCH\n+- UNKNOWN (lowest)\n+\n+### Current trust levels\n+\n+All fetchers are contained in the package `org.jabref.logic.importer.fetcher`.\n+Here we list the trust levels of some of them:\n+\n+- DOI: SOURCE, because it is the ultimate source\n+- ScienceDirect: Publisher\n+- Springer: Publisher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzOTEwNg==", "bodyText": "Also often requires an API_KEY and counts towards the api key usage limit", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r501539106", "createdAt": "2020-10-08T08:28:58Z", "author": {"login": "Siedlerchr"}, "path": "docs/advanced-reading/fetchers.md", "diffHunk": "@@ -14,6 +14,42 @@ Fetchers are the implementation of the [search using online services](https://do\n \n On Windows, you have to log-off and log-on to let IntelliJ know about the environment variable change. Execute the gradle task \"processResources\" in the group \"others\" within IntelliJ to ensure the values have been correctly written. Now, the fetcher tests should run without issues.\n \n+## Fetcher prioritization\n+\n+- all fetchers run in parallel\n+- the result with the highest priority wins\n+- `InterruptedException` | `ExecutionException` | `CancellationException` are ignored\n+\n+### Trust Levels\n+\n+- SOURCE (highest)\n+- PUBLISHER\n+- PREPRINT\n+- META_SEARCH\n+- UNKNOWN (lowest)\n+\n+### Current trust levels\n+\n+All fetchers are contained in the package `org.jabref.logic.importer.fetcher`.\n+Here we list the trust levels of some of them:\n+\n+- DOI: SOURCE, because it is the ultimate source\n+- ScienceDirect: Publisher\n+- Springer: Publisher", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzNzYyOQ=="}, "originalCommit": {"oid": "9c83714928a9664d0af258a52537544d2e25e2bc"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MTExNzM4OnYy", "diffSide": "LEFT", "path": "src/test/java/org/jabref/logic/importer/fetcher/DoiResolutionTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNTowMjo0OVrOIQ43Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMDoyNjoyOVrOIRl3GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU3OTc3OQ==", "bodyText": "Why was this test removed?", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r554579779", "createdAt": "2021-01-10T15:02:49Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/DoiResolutionTest.java", "diffHunk": "@@ -38,13 +38,13 @@ void linkWithPdfInTitleTag() throws IOException {\n     @Test\n     void linkWithPdfStringLeadsToFulltext() throws IOException {\n         entry.setField(StandardField.DOI, \"10.1002/acr2.11101\");\n-        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/epdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n+        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/pdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n     }\n \n     @Test\n-    void multipleLinksWithSmallEditDistanceLeadToFulltext() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a14a4721ea5388bd448eb000d4a5b6940def7f1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYzMjAyNA==", "bodyText": "Edit distance functionality was removed. Actually it was the reason for the bug.", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r554632024", "createdAt": "2021-01-10T22:26:23Z", "author": {"login": "stefan-kolb"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/DoiResolutionTest.java", "diffHunk": "@@ -38,13 +38,13 @@ void linkWithPdfInTitleTag() throws IOException {\n     @Test\n     void linkWithPdfStringLeadsToFulltext() throws IOException {\n         entry.setField(StandardField.DOI, \"10.1002/acr2.11101\");\n-        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/epdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n+        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/pdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n     }\n \n     @Test\n-    void multipleLinksWithSmallEditDistanceLeadToFulltext() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU3OTc3OQ=="}, "originalCommit": {"oid": "1a14a4721ea5388bd448eb000d4a5b6940def7f1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYzMjEyNw==", "bodyText": "The paper used at that test case is used at another test case.", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r554632127", "createdAt": "2021-01-10T22:26:55Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/DoiResolutionTest.java", "diffHunk": "@@ -38,13 +38,13 @@ void linkWithPdfInTitleTag() throws IOException {\n     @Test\n     void linkWithPdfStringLeadsToFulltext() throws IOException {\n         entry.setField(StandardField.DOI, \"10.1002/acr2.11101\");\n-        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/epdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n+        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/pdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n     }\n \n     @Test\n-    void multipleLinksWithSmallEditDistanceLeadToFulltext() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU3OTc3OQ=="}, "originalCommit": {"oid": "1a14a4721ea5388bd448eb000d4a5b6940def7f1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTMxNzAxNg==", "bodyText": "Ah ok, now I see. Thanks!", "url": "https://github.com/JabRef/jabref/pull/6990#discussion_r555317016", "createdAt": "2021-01-11T20:26:29Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/importer/fetcher/DoiResolutionTest.java", "diffHunk": "@@ -38,13 +38,13 @@ void linkWithPdfInTitleTag() throws IOException {\n     @Test\n     void linkWithPdfStringLeadsToFulltext() throws IOException {\n         entry.setField(StandardField.DOI, \"10.1002/acr2.11101\");\n-        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/epdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n+        assertEquals(Optional.of(new URL(\"https://onlinelibrary.wiley.com/doi/pdf/10.1002/acr2.11101\")), finder.findFullText(entry));\n     }\n \n     @Test\n-    void multipleLinksWithSmallEditDistanceLeadToFulltext() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU3OTc3OQ=="}, "originalCommit": {"oid": "1a14a4721ea5388bd448eb000d4a5b6940def7f1"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1608, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}