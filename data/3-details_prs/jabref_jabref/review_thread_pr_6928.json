{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTM1Njk5", "number": 6928, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODozODowNFrOEm77_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODo0MToxMFrOEm8COg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjYzMzU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/filelist/FileListEntry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODozODowNFrOHXP1vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzozNToyN1rOHYMraw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw==", "bodyText": "Be careful! This can have unintended consequences, a Linked File \"link\" can also be an online link!", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r494138813", "createdAt": "2020-09-24T08:38:04Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/filelist/FileListEntry.java", "diffHunk": "@@ -48,7 +49,7 @@ public String toString() {\n     }\n \n     public LinkedFile toParsedFileField() {\n-        return new LinkedFile(getDescription(), getLink(), getType().isPresent() ? getType().get().getName() : \"\");\n+        return new LinkedFile(getDescription(), Path.of(getLink()), getType().isPresent() ? getType().get().getName() : \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMTAxMg==", "bodyText": "I just noticed that this class isn't used anywhere, so I just delete it. \ud83e\udd23", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495121012", "createdAt": "2020-09-25T17:06:42Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/filelist/FileListEntry.java", "diffHunk": "@@ -48,7 +49,7 @@ public String toString() {\n     }\n \n     public LinkedFile toParsedFileField() {\n-        return new LinkedFile(getDescription(), getLink(), getType().isPresent() ? getType().get().getName() : \"\");\n+        return new LinkedFile(getDescription(), Path.of(getLink()), getType().isPresent() ? getType().get().getName() : \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw=="}, "originalCommit": {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTU5NQ==", "bodyText": "Probably a leftover from previous refactoring...", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495135595", "createdAt": "2020-09-25T17:35:27Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/filelist/FileListEntry.java", "diffHunk": "@@ -48,7 +49,7 @@ public String toString() {\n     }\n \n     public LinkedFile toParsedFileField() {\n-        return new LinkedFile(getDescription(), getLink(), getType().isPresent() ? getType().get().getName() : \"\");\n+        return new LinkedFile(getDescription(), Path.of(getLink()), getType().isPresent() ? getType().get().getName() : \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzODgxMw=="}, "originalCommit": {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjY0OTU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODo0MToxMFrOHXP_xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzoyODoxMVrOHYMc-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE0MTM4MQ==", "bodyText": "I doubt this change will work. You are trying to resolve a http url as local path object.\n\nThe Path is obtained by invoking the getPath method of the default FileSystem.\nhttps://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/nio/file/Path.html#of(java.lang.String,java.lang.String...)", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r494141381", "createdAt": "2020-09-24T08:41:10Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java", "diffHunk": "@@ -118,7 +119,7 @@ public static BibEntry parseSpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n                 urls.forEach(data -> {\n                     JSONObject url = (JSONObject) data;\n                     if (url.optString(\"format\").equalsIgnoreCase(\"pdf\")) {\n-                        entry.addFile(new LinkedFile(\"online\", url.optString(\"value\"), \"PDF\"));\n+                        entry.addFile(new LinkedFile(\"online\", Path.of(url.optString(\"value\")), \"PDF\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMTg5Ng==", "bodyText": "Should be fixed.", "url": "https://github.com/JabRef/jabref/pull/6928#discussion_r495131896", "createdAt": "2020-09-25T17:28:11Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/logic/importer/fetcher/SpringerFetcher.java", "diffHunk": "@@ -118,7 +119,7 @@ public static BibEntry parseSpringerJSONtoBibtex(JSONObject springerJsonEntry) {\n                 urls.forEach(data -> {\n                     JSONObject url = (JSONObject) data;\n                     if (url.optString(\"format\").equalsIgnoreCase(\"pdf\")) {\n-                        entry.addFile(new LinkedFile(\"online\", url.optString(\"value\"), \"PDF\"));\n+                        entry.addFile(new LinkedFile(\"online\", Path.of(url.optString(\"value\")), \"PDF\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE0MTM4MQ=="}, "originalCommit": {"oid": "a32e679676898b4e8dc1639dc431b920a64c4d05"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1565, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}