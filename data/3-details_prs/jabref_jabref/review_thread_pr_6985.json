{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDIxODQ3", "number": 6985, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODowODoxMlrOEruzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODowODoxMlrOEruzfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjkxMDcwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/jabref/preferences/OpenOfficeSyncWhenCitingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODowODoxMlrOHeqgfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxOToxNToyNlrOHes6wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxNTc3Mw==", "bodyText": "Thanks for thinking of a test, but you don't need one here as you are just testing that a variable is stored in the preferences which is not that critical.  In JabRef we focus on testing the important things, e.g. model/logic.\nTo sum up => Just remove the test and it's all good.\nAnd there is a general side effect you have here with the preferences in test , by using the JabRefPreferences Instance Object you are modifying the real preferences values which are also stored/persisted in the registry etc.  Therefore, if you need to test something which depends on the preferencesm you need to mock them and \"fake\" the return values.\nSee for example:\n   importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');", "url": "https://github.com/JabRef/jabref/pull/6985#discussion_r501915773", "createdAt": "2020-10-08T18:08:12Z", "author": {"login": "Siedlerchr"}, "path": "src/test/java/org/jabref/preferences/OpenOfficeSyncWhenCitingTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.jabref.preferences;\n+import org.jabref.logic.openoffice.OpenOfficePreferences;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+public class OpenOfficeSyncWhenCitingTest {\n+\n+    private static boolean previousValue;\n+    private final JabRefPreferences preferences = JabRefPreferences.getInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "952a8f263e05ca643738696928b779efc3a93cc6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk1NTI2NQ==", "bodyText": "Thanks for your feedback! I went ahead and removed that test. Thanks for your advice, I wasn't sure what would be worth testing.", "url": "https://github.com/JabRef/jabref/pull/6985#discussion_r501955265", "createdAt": "2020-10-08T19:15:26Z", "author": {"login": "IsaacRoles"}, "path": "src/test/java/org/jabref/preferences/OpenOfficeSyncWhenCitingTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.jabref.preferences;\n+import org.jabref.logic.openoffice.OpenOfficePreferences;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+public class OpenOfficeSyncWhenCitingTest {\n+\n+    private static boolean previousValue;\n+    private final JabRefPreferences preferences = JabRefPreferences.getInstance();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxNTc3Mw=="}, "originalCommit": {"oid": "952a8f263e05ca643738696928b779efc3a93cc6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}