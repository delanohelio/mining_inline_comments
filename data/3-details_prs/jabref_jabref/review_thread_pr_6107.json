{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDIxNTY5", "number": 6107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTowOTozOFrODnlz1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxMjowMlrODoAAow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODQwNTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanelViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTowOTozOFrOF1rrqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOToyNDoyMVrOF1sIFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNDUzNg==", "bodyText": "Pass state manager as Parameter, it can be injected into the view", "url": "https://github.com/JabRef/jabref/pull/6107#discussion_r391834536", "createdAt": "2020-03-12T19:09:38Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanelViewModel.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jabref.gui.commonfxcontrols;\n+\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ObjectProperty;\n+import javafx.beans.property.SimpleBooleanProperty;\n+import javafx.beans.property.SimpleListProperty;\n+import javafx.beans.property.SimpleObjectProperty;\n+import javafx.collections.FXCollections;\n+import javafx.scene.control.SelectionModel;\n+\n+import org.jabref.Globals;\n+import org.jabref.gui.util.NoSelectionModel;\n+import org.jabref.logic.cleanup.Cleanups;\n+import org.jabref.model.cleanup.FieldFormatterCleanup;\n+import org.jabref.model.cleanup.Formatter;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.entry.field.FieldFactory;\n+\n+public class FieldFormatterCleanupsPanelViewModel {\n+\n+    private final BooleanProperty cleanupsDisableProperty = new SimpleBooleanProperty();\n+    private final ListProperty<FieldFormatterCleanup> cleanupsListProperty = new SimpleListProperty<>(FXCollections.observableArrayList());\n+    private final ObjectProperty<SelectionModel<FieldFormatterCleanup>> selectedCleanupProperty = new SimpleObjectProperty<>(new NoSelectionModel<>());\n+    private final ListProperty<Field> availableFieldsProperty = new SimpleListProperty<>(FXCollections.observableArrayList(FieldFactory.getCommonFields()));\n+    private final ObjectProperty<Field> selectedFieldProperty = new SimpleObjectProperty<>();\n+    private final ListProperty<Formatter> availableFormattersProperty = new SimpleListProperty<>(FXCollections.observableArrayList(Cleanups.getBuiltInFormatters()));\n+    private final ObjectProperty<Formatter> selectedFormatterProperty = new SimpleObjectProperty<>();\n+\n+    public FieldFormatterCleanupsPanelViewModel() {\n+    }\n+\n+    public void resetToRecommended() {\n+        Globals.stateManager.getActiveDatabase().ifPresent(databaseContext -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96d18745b20c4c2d4c0971fd11d890a32bd4c932"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0MTgxMw==", "bodyText": "Overlooked that, thanks.", "url": "https://github.com/JabRef/jabref/pull/6107#discussion_r391841813", "createdAt": "2020-03-12T19:24:21Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanelViewModel.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jabref.gui.commonfxcontrols;\n+\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ObjectProperty;\n+import javafx.beans.property.SimpleBooleanProperty;\n+import javafx.beans.property.SimpleListProperty;\n+import javafx.beans.property.SimpleObjectProperty;\n+import javafx.collections.FXCollections;\n+import javafx.scene.control.SelectionModel;\n+\n+import org.jabref.Globals;\n+import org.jabref.gui.util.NoSelectionModel;\n+import org.jabref.logic.cleanup.Cleanups;\n+import org.jabref.model.cleanup.FieldFormatterCleanup;\n+import org.jabref.model.cleanup.Formatter;\n+import org.jabref.model.entry.field.Field;\n+import org.jabref.model.entry.field.FieldFactory;\n+\n+public class FieldFormatterCleanupsPanelViewModel {\n+\n+    private final BooleanProperty cleanupsDisableProperty = new SimpleBooleanProperty();\n+    private final ListProperty<FieldFormatterCleanup> cleanupsListProperty = new SimpleListProperty<>(FXCollections.observableArrayList());\n+    private final ObjectProperty<SelectionModel<FieldFormatterCleanup>> selectedCleanupProperty = new SimpleObjectProperty<>(new NoSelectionModel<>());\n+    private final ListProperty<Field> availableFieldsProperty = new SimpleListProperty<>(FXCollections.observableArrayList(FieldFactory.getCommonFields()));\n+    private final ObjectProperty<Field> selectedFieldProperty = new SimpleObjectProperty<>();\n+    private final ListProperty<Formatter> availableFormattersProperty = new SimpleListProperty<>(FXCollections.observableArrayList(Cleanups.getBuiltInFormatters()));\n+    private final ObjectProperty<Formatter> selectedFormatterProperty = new SimpleObjectProperty<>();\n+\n+    public FieldFormatterCleanupsPanelViewModel() {\n+    }\n+\n+    public void resetToRecommended() {\n+        Globals.stateManager.getActiveDatabase().ifPresent(databaseContext -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgzNDUzNg=="}, "originalCommit": {"oid": "96d18745b20c4c2d4c0971fd11d890a32bd4c932"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjY5Nzk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxMjowMlrOF2U2GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwODo1MToyM1rOF2YhsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwODk1Mw==", "bodyText": "I think it should work if you pass the stateManager as ctor parameter instead of using the injection", "url": "https://github.com/JabRef/jabref/pull/6107#discussion_r392508953", "createdAt": "2020-03-13T22:12:02Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanel.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.jabref.gui.commonfxcontrols;\n+\n+import javax.inject.Inject;\n+\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ReadOnlyObjectWrapper;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.SelectionMode;\n+import javafx.scene.control.TableColumn;\n+import javafx.scene.control.TableView;\n+import javafx.scene.input.KeyCode;\n+import javafx.scene.layout.VBox;\n+\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.icon.IconTheme;\n+import org.jabref.gui.util.FieldsUtil;\n+import org.jabref.gui.util.ValueTableCellFactory;\n+import org.jabref.gui.util.ViewModelListCellFactory;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.cleanup.FieldFormatterCleanup;\n+import org.jabref.model.cleanup.Formatter;\n+import org.jabref.model.entry.field.Field;\n+\n+import com.airhacks.afterburner.views.ViewLoader;\n+\n+public class FieldFormatterCleanupsPanel extends VBox {\n+\n+    @FXML private CheckBox cleanupsEnabled;\n+    @FXML private TableView<FieldFormatterCleanup> cleanupsList;\n+    @FXML private TableColumn<FieldFormatterCleanup, Field> fieldColumn;\n+    @FXML private TableColumn<FieldFormatterCleanup, Formatter> formatterColumn;\n+    @FXML private TableColumn<FieldFormatterCleanup, Field> actionsColumn;\n+    @FXML private ComboBox<Field> addableFields;\n+    @FXML private ComboBox<Formatter> addableFormatters;\n+\n+    @Inject private StateManager stateManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad1c739a2edc206576b506d52b797671a88d10e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2OTI2NQ==", "bodyText": "The FieldFormatterCleanupsPanel is instantiated by the fxml file. I could theoretically pass an argument here using the @NamedArg-annotation. But passing a StateManager seems to me not possible that way. So the alternative would be to hardcode this in the view.", "url": "https://github.com/JabRef/jabref/pull/6107#discussion_r392569265", "createdAt": "2020-03-14T08:51:23Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/commonfxcontrols/FieldFormatterCleanupsPanel.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package org.jabref.gui.commonfxcontrols;\n+\n+import javax.inject.Inject;\n+\n+import javafx.beans.property.BooleanProperty;\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ReadOnlyObjectWrapper;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.SelectionMode;\n+import javafx.scene.control.TableColumn;\n+import javafx.scene.control.TableView;\n+import javafx.scene.input.KeyCode;\n+import javafx.scene.layout.VBox;\n+\n+import org.jabref.gui.StateManager;\n+import org.jabref.gui.icon.IconTheme;\n+import org.jabref.gui.util.FieldsUtil;\n+import org.jabref.gui.util.ValueTableCellFactory;\n+import org.jabref.gui.util.ViewModelListCellFactory;\n+import org.jabref.logic.l10n.Localization;\n+import org.jabref.model.cleanup.FieldFormatterCleanup;\n+import org.jabref.model.cleanup.Formatter;\n+import org.jabref.model.entry.field.Field;\n+\n+import com.airhacks.afterburner.views.ViewLoader;\n+\n+public class FieldFormatterCleanupsPanel extends VBox {\n+\n+    @FXML private CheckBox cleanupsEnabled;\n+    @FXML private TableView<FieldFormatterCleanup> cleanupsList;\n+    @FXML private TableColumn<FieldFormatterCleanup, Field> fieldColumn;\n+    @FXML private TableColumn<FieldFormatterCleanup, Formatter> formatterColumn;\n+    @FXML private TableColumn<FieldFormatterCleanup, Field> actionsColumn;\n+    @FXML private ComboBox<Field> addableFields;\n+    @FXML private ComboBox<Formatter> addableFormatters;\n+\n+    @Inject private StateManager stateManager;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwODk1Mw=="}, "originalCommit": {"oid": "8ad1c739a2edc206576b506d52b797671a88d10e"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1990, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}