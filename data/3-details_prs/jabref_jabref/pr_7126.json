{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjQ1ODYy", "number": 7126, "title": "Change format for study definition to yaml", "bodyText": "This PR replaces the previous use of a .bib file for the study definition file with a .yml (YAML) file.\nAn example study definition in YAML format:\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-11-26T19:45:27Z", "url": "https://github.com/JabRef/jabref/pull/7126", "merged": true, "mergeCommit": {"oid": "7117b6197aa6f69f6b8b25f9452e875c9051046b"}, "closed": true, "closedAt": "2021-01-26T21:40:44Z", "author": {"login": "DominikVoigt"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgYQkjAH2gAyNTI4MjQ1ODYyOjU1NGYyZjZhODFmZmUzYjVhMGM4OTkyM2YyY2Q4NjIzOGRkMGEwNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd0CisSAFqTU3Njc4Mzc0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "554f2f6a81ffe3b5a0c89923f2cd86238dd0a059", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/554f2f6a81ffe3b5a0c89923f2cd86238dd0a059", "committedDate": "2020-11-26T19:38:38Z", "message": "Change format for study definition to yaml and adapt tests\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7728417467b8c48eaa428b5cb67ac6452d40577c", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/7728417467b8c48eaa428b5cb67ac6452d40577c", "committedDate": "2020-11-26T20:17:06Z", "message": "Add unversioned files\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1027de049c72868e77c63c376b4934bd02298bc", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/a1027de049c72868e77c63c376b4934bd02298bc", "committedDate": "2020-11-26T19:35:16Z", "message": "Change format for study definition to yamlm and adapt tests\nMake long queries safe\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}, "afterCommit": {"oid": "7728417467b8c48eaa428b5cb67ac6452d40577c", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/7728417467b8c48eaa428b5cb67ac6452d40577c", "committedDate": "2020-11-26T20:17:06Z", "message": "Add unversioned files\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/8ed74424402402bfc486b6048b3d610f7eb30e3d", "committedDate": "2020-11-26T20:19:19Z", "message": "Remove unneeded enabled flags\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDkxNDI0", "url": "https://github.com/JabRef/jabref/pull/7126#pullrequestreview-540491424", "createdAt": "2020-11-29T15:43:28Z", "commit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxNTo0MzoyOVrOH7kkhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxNTo1MzoxNFrOH7kpaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyNzIwNw==", "bodyText": "I think, yml convention is to use hyphen to connect words, e.g. study-name. (maybe name is already sufficient?)", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532227207", "createdAt": "2020-11-29T15:43:29Z", "author": {"login": "tobiasdiez"}, "path": "src/test/resources/org/jabref/logic/crawler/study.yml", "diffHunk": "@@ -0,0 +1,16 @@\n+authors:\n+  - Jab Ref\n+studyName: TestStudyName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyNzM4OA==", "bodyText": "Maybe databases or sources is slightly better than libraries ? Arxiv or springer for example are not really libraries.", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532227388", "createdAt": "2020-11-29T15:44:53Z", "author": {"login": "tobiasdiez"}, "path": "src/test/resources/org/jabref/logic/crawler/study.yml", "diffHunk": "@@ -0,0 +1,16 @@\n+authors:\n+  - Jab Ref\n+studyName: TestStudyName\n+lastSearchDate: 2020-11-26\n+researchQuestions:\n+  - Question1\n+  - Question2\n+queries:\n+  - query: Quantum\n+  - query: Cloud Computing\n+  - query: '\"Software Engineering\"'\n+libraries:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyNzY2MA==", "bodyText": "I'm a bit undecided about this, but what do you think about simply Query? Or StudyQuery? Entry is a bit confusing with BibEntry etc.", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532227660", "createdAt": "2020-11-29T15:46:56Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/model/study/QueryEntry.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.jabref.model.study;\n+\n+public class QueryEntry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyODIxNQ==", "bodyText": "Can you use this converter already during parsing with jackson, so that a study already contains a list of fetcher, making the class LibraryEntry obsolete?", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532228215", "createdAt": "2020-11-29T15:51:24Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/crawler/LibraryEntryToFetcherConverter.java", "diffHunk": "@@ -8,19 +8,16 @@\n import org.jabref.logic.importer.ImportFormatPreferences;\n import org.jabref.logic.importer.SearchBasedFetcher;\n import org.jabref.logic.importer.WebFetchers;\n-import org.jabref.model.entry.BibEntry;\n-import org.jabref.model.entry.field.UnknownField;\n-\n-import static org.jabref.model.entry.types.SystematicLiteratureReviewStudyEntryType.LIBRARY_ENTRY;\n+import org.jabref.model.study.LibraryEntry;\n \n /**\n  * Converts library entries from the given study into their corresponding fetchers.\n  */\n class LibraryEntryToFetcherConverter {\n-    private final List<BibEntry> libraryEntries;\n+    private final List<LibraryEntry> libraryEntries;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyODQwMA==", "bodyText": "Similarily to above, maybe one can reuse the ComplexQuery here (with jackson parser directly giving a complex query back)?", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532228400", "createdAt": "2020-11-29T15:52:38Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/model/study/QueryEntry.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package org.jabref.model.study;\n+\n+public class QueryEntry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyNzY2MA=="}, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIyODQ1OQ==", "bodyText": "Objects.hashcode is your friend ;-)", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532228459", "createdAt": "2020-11-29T15:53:14Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/model/study/Study.java", "diffHunk": "@@ -1,98 +1,133 @@\n package org.jabref.model.study;\n \n import java.time.LocalDate;\n-import java.util.ArrayList;\n import java.util.List;\n-import java.util.Optional;\n-import java.util.stream.Collectors;\n-\n-import org.jabref.model.entry.BibEntry;\n-import org.jabref.model.entry.field.UnknownField;\n \n /**\n  * This class represents a scientific study.\n  *\n  * This class defines all aspects of a scientific study relevant to the application. It is a proxy for the file based study definition.\n  */\n public class Study {\n-    private static final String SEARCH_QUERY_FIELD_NAME = \"query\";\n+    private List<String> authors;\n+    private String studyName;\n+    private LocalDate lastSearchDate;\n+    private List<String> researchQuestions;\n+    private List<QueryEntry> queries;\n+    private List<LibraryEntry> libraries;\n \n-    private final BibEntry studyEntry;\n-    private final List<BibEntry> queryEntries;\n-    private final List<BibEntry> libraryEntries;\n+    public Study(List<String> authors, String studyName, List<String> researchQuestions, List<QueryEntry> queryEntries, List<LibraryEntry> libraries) {\n+        this.authors = authors;\n+        this.studyName = studyName;\n+        this.researchQuestions = researchQuestions;\n+        this.queries = queryEntries;\n+        this.libraries = libraries;\n+    }\n \n-    public Study(BibEntry studyEntry, List<BibEntry> queryEntries, List<BibEntry> libraryEntries) {\n-        this.studyEntry = studyEntry;\n-        this.queryEntries = queryEntries;\n-        this.libraryEntries = libraryEntries;\n+    /**\n+     * Used for Jackson deserialization\n+     */\n+    public Study() {\n     }\n \n-    public List<BibEntry> getAllEntries() {\n-        List<BibEntry> allEntries = new ArrayList<>();\n-        allEntries.add(studyEntry);\n-        allEntries.addAll(queryEntries);\n-        allEntries.addAll(libraryEntries);\n-        return allEntries;\n+    public List<String> getAuthors() {\n+        return authors;\n     }\n \n-    /**\n-     * Returns all query strings\n-     *\n-     * @return List of all queries as Strings.\n-     */\n-    public List<String> getSearchQueryStrings() {\n-        return queryEntries.parallelStream()\n-                           .map(bibEntry -> bibEntry.getField(new UnknownField(SEARCH_QUERY_FIELD_NAME)))\n-                           .filter(Optional::isPresent)\n-                           .map(Optional::get)\n-                           .collect(Collectors.toList());\n+    public void setAuthors(List<String> authors) {\n+        this.authors = authors;\n     }\n \n-    /**\n-     * This method returns the SearchQuery entries.\n-     * This is required when the BibKey of the search term entry is required in combination with the search query (e.g.\n-     * for the creation of the study repository structure).\n-     */\n-    public List<BibEntry> getSearchQueryEntries() {\n-        return queryEntries;\n+    public List<QueryEntry> getQueries() {\n+        return queries;\n     }\n \n-    /**\n-     * Returns a meta data entry of the first study entry found in the study definition file of the provided type.\n-     *\n-     * @param metaDataField The type of requested meta-data\n-     * @return returns the requested meta data type of the first found study entry\n-     * @throws IllegalArgumentException If the study file does not contain a study entry.\n-     */\n-    public Optional<String> getStudyMetaDataField(StudyMetaDataField metaDataField) throws IllegalArgumentException {\n-        return studyEntry.getField(metaDataField.toField());\n+    public void setQueries(List<QueryEntry> queries) {\n+        this.queries = queries;\n+    }\n+\n+    public LocalDate getLastSearchDate() {\n+        return lastSearchDate;\n     }\n \n-    /**\n-     * Sets the lastSearchDate field of the study entry\n-     *\n-     * @param date date the last time a search was conducted\n-     */\n     public void setLastSearchDate(LocalDate date) {\n-        studyEntry.setField(StudyMetaDataField.STUDY_LAST_SEARCH.toField(), date.toString());\n+        lastSearchDate = date;\n     }\n \n-    /**\n-     * Extracts all active LibraryEntries from the BibEntries.\n-     *\n-     * @return List of BibEntries of type Library\n-     * @throws IllegalArgumentException If a transformation from Library entry to LibraryDefinition fails\n-     */\n-    public List<BibEntry> getActiveLibraryEntries() throws IllegalArgumentException {\n-        return libraryEntries\n-                .parallelStream()\n-                .filter(bibEntry -> {\n-                    // If enabled is not defined, the fetcher is active.\n-                    return bibEntry.getField(new UnknownField(\"enabled\"))\n-                                   .map(enabled -> enabled.equals(\"true\"))\n-                                   .orElse(true);\n-                })\n-                .collect(Collectors.toList());\n+    public List<LibraryEntry> getLibraries() {\n+        return libraries;\n+    }\n+\n+    public void setLibraries(List<LibraryEntry> libraries) {\n+        this.libraries = libraries;\n+    }\n+\n+    public String getStudyName() {\n+        return studyName;\n+    }\n+\n+    public void setStudyName(String studyName) {\n+        this.studyName = studyName;\n+    }\n+\n+    public List<String> getResearchQuestions() {\n+        return researchQuestions;\n+    }\n+\n+    public void setResearchQuestions(List<String> researchQuestions) {\n+        this.researchQuestions = researchQuestions;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Study{\" +\n+                \"authors=\" + authors +\n+                \", studyName='\" + studyName + '\\'' +\n+                \", lastSearchDate=\" + lastSearchDate +\n+                \", researchQuestions=\" + researchQuestions +\n+                \", queries=\" + queries +\n+                \", libraries=\" + libraries +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        Study study = (Study) o;\n+\n+        if (getAuthors() != null ? !getAuthors().equals(study.getAuthors()) : study.getAuthors() != null) {\n+            return false;\n+        }\n+        if (getStudyName() != null ? !getStudyName().equals(study.getStudyName()) : study.getStudyName() != null) {\n+            return false;\n+        }\n+        if (getLastSearchDate() != null ? !getLastSearchDate().equals(study.getLastSearchDate()) : study.getLastSearchDate() != null) {\n+            return false;\n+        }\n+        if (getResearchQuestions() != null ? !getResearchQuestions().equals(study.getResearchQuestions()) : study.getResearchQuestions() != null) {\n+            return false;\n+        }\n+        if (getQueries() != null ? !getQueries().equals(study.getQueries()) : study.getQueries() != null) {\n+            return false;\n+        }\n+        return getLibraries() != null ? getLibraries().equals(study.getLibraries()) : study.getLibraries() == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = getAuthors() != null ? getAuthors().hashCode() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed74424402402bfc486b6048b3d610f7eb30e3d"}, "originalPosition": 193}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3c6c4f5cc9b566e0e42ddb5184bd92c27e5c05", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/3b3c6c4f5cc9b566e0e42ddb5184bd92c27e5c05", "committedDate": "2020-11-29T17:24:17Z", "message": "Rename LibraryEntry.java to StudyDatabase.java and QueryEntry.java to StudyQuery.java\nUse hyphenated names in the yaml file\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b699d669f962e3cc90d4788e5cbadbabf0acfa2", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/4b699d669f962e3cc90d4788e5cbadbabf0acfa2", "committedDate": "2020-11-29T17:28:20Z", "message": "Merge remote-tracking branch 'upstream/master' into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTExODI2", "url": "https://github.com/JabRef/jabref/pull/7126#pullrequestreview-540511826", "createdAt": "2020-11-29T20:05:05Z", "commit": {"oid": "4b699d669f962e3cc90d4788e5cbadbabf0acfa2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQyMDowNTowNVrOH7mf7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQyMDowNjo1NlrOH7mg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1ODc5OQ==", "bodyText": "For the GUI, you probably need a wrapper around the study class anyway (and then it doesn't matter where the data is coming from).", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532258799", "createdAt": "2020-11-29T20:05:05Z", "author": {"login": "tobiasdiez"}, "path": "docs/adr/0019-keep-study-as-a-dto.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Keep study as a DTO\n+\n+## Context and Problem Statement\n+\n+The study holds query and library entries that could be replaced respectively with complex query and fetcher instances.\n+This poses the question: should the study remain a pure DTO object or should it contain direct object instances?\n+\n+## Considered Options\n+\n+* Keep study as DTO and use transformers\n+* Replace entries with instances\n+\n+## Decision Outcome\n+\n+Chosen option: \"Keep study as DTO and use transformators\", because comes out best (see below).\n+\n+## Pros and Cons of the Options\n+\n+### Keep study as DTO and use transformators\n+\n+* Good, because makes GUI implementation probably easier down the line", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b699d669f962e3cc90d4788e5cbadbabf0acfa2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1OTAyNw==", "bodyText": "That depends a bit on how complicated the custom serialization is. Since in the end you only need a map Fetcher <-> Name is needed, and such a conversion already exists.", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532259027", "createdAt": "2020-11-29T20:06:56Z", "author": {"login": "tobiasdiez"}, "path": "docs/adr/0019-keep-study-as-a-dto.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Keep study as a DTO\n+\n+## Context and Problem Statement\n+\n+The study holds query and library entries that could be replaced respectively with complex query and fetcher instances.\n+This poses the question: should the study remain a pure DTO object or should it contain direct object instances?\n+\n+## Considered Options\n+\n+* Keep study as DTO and use transformers\n+* Replace entries with instances\n+\n+## Decision Outcome\n+\n+Chosen option: \"Keep study as DTO and use transformators\", because comes out best (see below).\n+\n+## Pros and Cons of the Options\n+\n+### Keep study as DTO and use transformators\n+\n+* Good, because makes GUI implementation probably easier down the line\n+* Good, because no need for custom serialization\n+* Good, because deactivated fetchers can be documented (important for traceable Searching (SLRs))\n+* Bad, because Entries for databases and queries needed\n+\n+### Replace entries with instances\n+\n+* Good, because no need for database and query entries\n+* Bad, because custom de-/serializers for fetchers and complex queries needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b699d669f962e3cc90d4788e5cbadbabf0acfa2"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c99960dcfe7c41d3516b5138a93c6d1ea5e81fa", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/0c99960dcfe7c41d3516b5138a93c6d1ea5e81fa", "committedDate": "2020-11-30T15:16:09Z", "message": "Update ADR\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/e0dd2e61fda8b20e9e7eff878af28453f3a3d840", "committedDate": "2020-11-30T15:17:07Z", "message": "Merge remote-tracking branch 'upstream/master' into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMTg5MDE4", "url": "https://github.com/JabRef/jabref/pull/7126#pullrequestreview-541189018", "createdAt": "2020-11-30T18:40:07Z", "commit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo0MDowN1rOH8IiJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo0Mjo0N1rOH8In9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNjQyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * SnakeYAML Engine\n          \n          \n            \n            * [SnakeYAML Engine](https://bitbucket.org/asomov/snakeyaml)", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532816420", "createdAt": "2020-11-30T18:40:07Z", "author": {"login": "koppor"}, "path": "docs/adr/0018-use-Jackson-to-parse-study-yml.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# Use Jackson to parse study.yml\n+\n+## Context and Problem Statement\n+\n+The study definition file is formulated as a YAML document.\n+To accessed the definition within JabRef this document has to be parsed.\n+What parser should be used to parse YAML files?\n+\n+## Considered Options\n+\n+* Jackson\n+* SnakeYAML Engine", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNjU3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Jackson\n          \n          \n            \n            * [Jackson](https://github.com/FasterXML/jackson-dataformat-yaml)", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532816575", "createdAt": "2020-11-30T18:40:23Z", "author": {"login": "koppor"}, "path": "docs/adr/0018-use-Jackson-to-parse-study-yml.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# Use Jackson to parse study.yml\n+\n+## Context and Problem Statement\n+\n+The study definition file is formulated as a YAML document.\n+To accessed the definition within JabRef this document has to be parsed.\n+What parser should be used to parse YAML files?\n+\n+## Considered Options\n+\n+* Jackson", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNjY2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Own parser\n          \n          \n            \n            * Self-written parser", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532816666", "createdAt": "2020-11-30T18:40:34Z", "author": {"login": "koppor"}, "path": "docs/adr/0018-use-Jackson-to-parse-study-yml.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# Use Jackson to parse study.yml\n+\n+## Context and Problem Statement\n+\n+The study definition file is formulated as a YAML document.\n+To accessed the definition within JabRef this document has to be parsed.\n+What parser should be used to parse YAML files?\n+\n+## Considered Options\n+\n+* Jackson\n+* SnakeYAML Engine\n+* yamlbeans\n+* eo-yaml\n+* Own parser", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNzQ5OA==", "bodyText": "Please add\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Bad, because has to be tested extensively\n          \n          \n            \n            * Bad, because has to be tested extensively\n          \n          \n            \n            \n          \n          \n            \n            ## Links\n          \n          \n            \n            \n          \n          \n            \n            * [Winery's ADR-0009](https://github.com/eclipse/winery/blob/master/docs/adr/0009-manual-tosca-yaml-serialisation.md)\n          \n          \n            \n            * [Winery's ADR-0010](https://github.com/eclipse/winery/blob/master/docs/adr/0010-tosca-yaml-deserialisation-using-snakeyaml.md)", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532817498", "createdAt": "2020-11-30T18:42:02Z", "author": {"login": "koppor"}, "path": "docs/adr/0018-use-Jackson-to-parse-study-yml.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# Use Jackson to parse study.yml\n+\n+## Context and Problem Statement\n+\n+The study definition file is formulated as a YAML document.\n+To accessed the definition within JabRef this document has to be parsed.\n+What parser should be used to parse YAML files?\n+\n+## Considered Options\n+\n+* Jackson\n+* SnakeYAML Engine\n+* yamlbeans\n+* eo-yaml\n+* Own parser\n+\n+## Decision Outcome\n+\n+Chosen option: Jackson, because as it is a dedicated library for parsing YAML. yamlbeans also seem to be viable. They all offer similar functionality\n+\n+## Pros and Cons of the Options\n+\n+### Jackson\n+\n+* Good, because established YAML parser library\n+* Good, because supports YAML 1.2\n+* Good, because it can parse LocalDate\n+\n+### SnakeYAML Engine\n+\n+* Good, because established YAML parser library\n+* Good, because supports YAML 1.2\n+* Bad, because cannot parse YAML into Java DTOs\n+\n+### yamlbeans\n+\n+* Good, because established YAML parser library\n+* Good, because [nice getting started page](https://github.com/EsotericSoftware/yamlbeans)\n+* Bad, because objects need to be annotated in the yaml file to be parsed into Java objects\n+\n+### eo-yaml\n+\n+* Good, because established YAML parser library\n+* Good, because supports YAML 1.2\n+* Bad, because cannot parse YAML into Java DTOs?\n+\n+### Own parser\n+\n+* Good, because easily customizable\n+* Bad, because high effort\n+* Bad, because has to be tested extensively", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgxNzkwOQ==", "bodyText": "Can link the documentaiton what one has to todo else?", "url": "https://github.com/JabRef/jabref/pull/7126#discussion_r532817909", "createdAt": "2020-11-30T18:42:47Z", "author": {"login": "koppor"}, "path": "docs/adr/0018-use-Jackson-to-parse-study-yml.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# Use Jackson to parse study.yml\n+\n+## Context and Problem Statement\n+\n+The study definition file is formulated as a YAML document.\n+To accessed the definition within JabRef this document has to be parsed.\n+What parser should be used to parse YAML files?\n+\n+## Considered Options\n+\n+* Jackson\n+* SnakeYAML Engine\n+* yamlbeans\n+* eo-yaml\n+* Own parser\n+\n+## Decision Outcome\n+\n+Chosen option: Jackson, because as it is a dedicated library for parsing YAML. yamlbeans also seem to be viable. They all offer similar functionality\n+\n+## Pros and Cons of the Options\n+\n+### Jackson\n+\n+* Good, because established YAML parser library\n+* Good, because supports YAML 1.2\n+* Good, because it can parse LocalDate\n+\n+### SnakeYAML Engine\n+\n+* Good, because established YAML parser library\n+* Good, because supports YAML 1.2\n+* Bad, because cannot parse YAML into Java DTOs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0dd2e61fda8b20e9e7eff878af28453f3a3d840"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fdd202190105faff5c845c339387caaff491173", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/1fdd202190105faff5c845c339387caaff491173", "committedDate": "2020-12-01T07:00:43Z", "message": "Update docs/adr/0018-use-Jackson-to-parse-study-yml.md\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0e1c07221a7bda79bc80f27b95006669df7f6a5", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/a0e1c07221a7bda79bc80f27b95006669df7f6a5", "committedDate": "2020-12-01T07:00:55Z", "message": "Update docs/adr/0018-use-Jackson-to-parse-study-yml.md\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76bc7d02b7cb6e6954e65195bf0d1a9dcb1dccd4", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/76bc7d02b7cb6e6954e65195bf0d1a9dcb1dccd4", "committedDate": "2020-12-01T07:01:43Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e4f1a0a5fdc19b7024a8a1bd1f5bbc640049a6b", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/9e4f1a0a5fdc19b7024a8a1bd1f5bbc640049a6b", "committedDate": "2020-12-01T07:39:47Z", "message": "Fix crawler test\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb449f1ac49579a9d45be1fb3b9710a5aa146183", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/cb449f1ac49579a9d45be1fb3b9710a5aa146183", "committedDate": "2020-12-01T07:40:23Z", "message": "Merge branch 'replace-study-bib-with-yaml' of https://github.com/DominikVoigt/jabref into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e7e7a6e25f2f8fe7a5b98bf0c55641b18468ceb", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/0e7e7a6e25f2f8fe7a5b98bf0c55641b18468ceb", "committedDate": "2020-12-01T08:08:10Z", "message": "Fix crawler test\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d861c81fc05c44f07b804a8ca15a4cd30670220", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/0d861c81fc05c44f07b804a8ca15a4cd30670220", "committedDate": "2020-12-01T09:01:20Z", "message": "Add some links to ADR 0018\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcabebb9ba10e041af94051a4790b0eedd89ff9d", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/fcabebb9ba10e041af94051a4790b0eedd89ff9d", "committedDate": "2020-12-01T16:17:39Z", "message": "Add indent for readability\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20a80e7244961631c753aec5e5377110613c49aa", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/20a80e7244961631c753aec5e5377110613c49aa", "committedDate": "2020-12-06T20:49:42Z", "message": "Merge remote-tracking branch 'upstream/master' into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f734f0867f46c485297ddee6c12a4afca1e29a", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/c0f734f0867f46c485297ddee6c12a4afca1e29a", "committedDate": "2020-12-06T22:24:50Z", "message": "Update docs/adr/0018-use-Jackson-to-parse-study-yml.md\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2320b3a721bcc2255b638a37375ca47b309812", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/8c2320b3a721bcc2255b638a37375ca47b309812", "committedDate": "2020-12-06T22:26:55Z", "message": "Add main module to gradle build\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "832cdb69249d02d1cd3e8b228aa0c118dbc787ad", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/832cdb69249d02d1cd3e8b228aa0c118dbc787ad", "committedDate": "2020-12-06T22:27:24Z", "message": "Merge branch 'replace-study-bib-with-yaml' of https://github.com/DominikVoigt/jabref into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37bfa5269148ac39aa591dd2f4ff5cbabf75a465", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/37bfa5269148ac39aa591dd2f4ff5cbabf75a465", "committedDate": "2020-12-06T23:01:00Z", "message": "Remove duplicate links\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86a25b41fe9f75b16561412eee0bb68b4ab5f6c0", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/86a25b41fe9f75b16561412eee0bb68b4ab5f6c0", "committedDate": "2020-12-15T07:59:02Z", "message": "Merge remote-tracking branch 'upstream/master' into replace-study-bib-with-yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a92215d053d696fe7def0ff7fc0ba8b9d9394091", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/a92215d053d696fe7def0ff7fc0ba8b9d9394091", "committedDate": "2021-01-22T15:11:40Z", "message": "Merge upstream/master into current branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4736a34d245f82732fb437bab69f31f85d125492", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/4736a34d245f82732fb437bab69f31f85d125492", "committedDate": "2021-01-22T15:37:06Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a564b3694ccd396a9be1573031fe163704257bc", "author": {"user": {"login": "DominikVoigt", "name": "Dominik Voigt"}}, "url": "https://github.com/JabRef/jabref/commit/4a564b3694ccd396a9be1573031fe163704257bc", "committedDate": "2021-01-26T19:45:57Z", "message": "correct casing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2NzgzNzQ0", "url": "https://github.com/JabRef/jabref/pull/7126#pullrequestreview-576783744", "createdAt": "2021-01-26T21:39:00Z", "commit": {"oid": "4a564b3694ccd396a9be1573031fe163704257bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4869, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}