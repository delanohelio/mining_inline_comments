{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0Njg3NjU4", "number": 6960, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMTo0N1rOEtXRJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyNDoxMlrOEu_VnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyNTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/fieldeditors/TypeEditorViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMTo0N1rOHhG7_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozMDoxN1rOHhICGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODcxNg==", "bodyText": "You don't need to add it here. This class is only used for the field type in the entry editor, and there are predefined values for this field.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504478716", "createdAt": "2020-10-14T08:01:47Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/fieldeditors/TypeEditorViewModel.java", "diffHunk": "@@ -23,6 +23,7 @@ public TypeEditorViewModel(Field field, SuggestionProvider<?> suggestionProvider\n         itemMap.put(\"software\", Localization.lang(\"Software\"));\n         itemMap.put(\"datacd\", Localization.lang(\"Data CD\"));\n         itemMap.put(\"audiocd\", Localization.lang(\"Audio CD\"));\n+        itemMap.put(\"inproceedings\", Localization.lang(\"InProceedings\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NjY2NA==", "bodyText": "Ah, my fault. What code comment should go there to point to the code where this happens? \ud83d\ude07", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504496664", "createdAt": "2020-10-14T08:30:17Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/fieldeditors/TypeEditorViewModel.java", "diffHunk": "@@ -23,6 +23,7 @@ public TypeEditorViewModel(Field field, SuggestionProvider<?> suggestionProvider\n         itemMap.put(\"software\", Localization.lang(\"Software\"));\n         itemMap.put(\"datacd\", Localization.lang(\"Data CD\"));\n         itemMap.put(\"audiocd\", Localization.lang(\"Audio CD\"));\n+        itemMap.put(\"inproceedings\", Localization.lang(\"InProceedings\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODcxNg=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyNzYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjowOVrOHhG8-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyOTozMVrOHhKZAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODk3MQ==", "bodyText": "Please remove the default shortcut for techreport and inprocceedings as well.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504478971", "createdAt": "2020-10-14T08:02:09Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "diffHunk": "@@ -46,12 +46,13 @@\n     NEW_BOOK(\"New book\", Localization.lang(\"New book\"), \"ctrl+shift+B\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY(\"New entry\", Localization.lang(\"New entry\"), \"ctrl+N\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY_FROM_PLAIN_TEXT(\"New entry from plain text\", Localization.lang(\"New entry from plain text\"), \"ctrl+shift+N\", KeyBindingCategory.BIBTEX),\n-    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"ctrl+shift+I\", KeyBindingCategory.BIBTEX),\n-    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"ctrl+shift+M\", KeyBindingCategory.BIBTEX),\n-    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"ctrl+shift+T\", KeyBindingCategory.BIBTEX),\n-    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"ctrl+shift+P\", KeyBindingCategory.BIBTEX),\n-    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"ctrl+shift+U\", KeyBindingCategory.BIBTEX),\n-    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"ctrl+shift+R\", KeyBindingCategory.BIBTEX),\n+    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"alt+shift+R\", KeyBindingCategory.BIBTEX),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNTI5OQ==", "bodyText": "OK", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504535299", "createdAt": "2020-10-14T09:29:31Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "diffHunk": "@@ -46,12 +46,13 @@\n     NEW_BOOK(\"New book\", Localization.lang(\"New book\"), \"ctrl+shift+B\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY(\"New entry\", Localization.lang(\"New entry\"), \"ctrl+N\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY_FROM_PLAIN_TEXT(\"New entry from plain text\", Localization.lang(\"New entry from plain text\"), \"ctrl+shift+N\", KeyBindingCategory.BIBTEX),\n-    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"ctrl+shift+I\", KeyBindingCategory.BIBTEX),\n-    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"ctrl+shift+M\", KeyBindingCategory.BIBTEX),\n-    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"ctrl+shift+T\", KeyBindingCategory.BIBTEX),\n-    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"ctrl+shift+P\", KeyBindingCategory.BIBTEX),\n-    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"ctrl+shift+U\", KeyBindingCategory.BIBTEX),\n-    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"ctrl+shift+R\", KeyBindingCategory.BIBTEX),\n+    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"alt+shift+R\", KeyBindingCategory.BIBTEX),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3ODk3MQ=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDAyODg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowMjozMFrOHhG9xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyOTozN1rOHhKZTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3OTE3NQ==", "bodyText": "Please revert to ctrl + shrift + r", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504479175", "createdAt": "2020-10-14T08:02:30Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "diffHunk": "@@ -61,7 +62,7 @@\n     OPEN_OPEN_OFFICE_LIBRE_OFFICE_CONNECTION(\"Open OpenOffice/LibreOffice connection\", Localization.lang(\"Open OpenOffice/LibreOffice connection\"), \"alt+0\", KeyBindingCategory.TOOLS),\n     OPEN_URL_OR_DOI(\"Open URL or DOI\", Localization.lang(\"Open URL or DOI\"), \"F3\", KeyBindingCategory.TOOLS),\n     PASTE(\"Paste\", Localization.lang(\"Paste\"), \"ctrl+V\", KeyBindingCategory.EDIT),\n-    PULL_CHANGES_FROM_SHARED_DATABASE(\"Pull changes from shared database\", Localization.lang(\"Pull changes from shared database\"), \"ctrl+shift+R\", KeyBindingCategory.FILE),\n+    PULL_CHANGES_FROM_SHARED_DATABASE(\"Pull changes from shared database\", Localization.lang(\"Pull changes from shared database\"), \"alt+shift+D\", KeyBindingCategory.FILE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNTM3NQ==", "bodyText": "OK", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504535375", "createdAt": "2020-10-14T09:29:37Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "diffHunk": "@@ -61,7 +62,7 @@\n     OPEN_OPEN_OFFICE_LIBRE_OFFICE_CONNECTION(\"Open OpenOffice/LibreOffice connection\", Localization.lang(\"Open OpenOffice/LibreOffice connection\"), \"alt+0\", KeyBindingCategory.TOOLS),\n     OPEN_URL_OR_DOI(\"Open URL or DOI\", Localization.lang(\"Open URL or DOI\"), \"F3\", KeyBindingCategory.TOOLS),\n     PASTE(\"Paste\", Localization.lang(\"Paste\"), \"ctrl+V\", KeyBindingCategory.EDIT),\n-    PULL_CHANGES_FROM_SHARED_DATABASE(\"Pull changes from shared database\", Localization.lang(\"Pull changes from shared database\"), \"ctrl+shift+R\", KeyBindingCategory.FILE),\n+    PULL_CHANGES_FROM_SHARED_DATABASE(\"Pull changes from shared database\", Localization.lang(\"Pull changes from shared database\"), \"alt+shift+D\", KeyBindingCategory.FILE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3OTE3NQ=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA1MTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODowODoyMFrOHhHLcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo1NTo0M1rOHh0lPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA==", "bodyText": "Are you sure this works? I would gess getDefaultKeyBinding is always empty for NEW_INBOOK even though the user has overwritten it. On first glance, I would suggest to change the getKeyCombination method below to public Optional<KeyCombination> getKeyCombination(KeyBinding bindName) and return an empty optional if binding is empty.\nMoreover, get should probably return en empty string instead of \"Not associated\" to be consistent.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504482674", "createdAt": "2020-10-14T08:08:20Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzODE4OA==", "bodyText": "It works. If I change the next statement\nfrom public KeyCombination getKeyCombination(KeyBinding bindName)\nto Optional<KeyCombination> getKeyCombination(KeyBinding bindName)\nI have to change other parts of code. For example line 141\nfrom KeyCombination keyCombination = getKeyCombination(binding);\nto KeyCombination keyCombination = getKeyCombination(binding).get();\nIs this what you mean?", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504538188", "createdAt": "2020-10-14T09:34:18Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU0NjEzNQ==", "bodyText": "Okay, can you briefly explain why it works? I thought \"getDefaultKeyBinding\" then always returns an empty string, so this check is always false.\nYeah, there are more code changes required for my suggestion. I think it would provide a clean solution to handle the case that for a given keybinding there is not necessarily a keycombination. But I didn't had the time yet to check the code in detail. So if your solution indeed works, then it's fine with me as well.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504546135", "createdAt": "2020-10-14T09:46:58Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1NTkzNQ==", "bodyText": "I started debugger and see that it always returns shortcut from KeyBinding.java file.\n\nSolution with Optional looks more clean. I just want to confirm that if we implement it, we also change other parts of code to getKeyCombination(binding).get().", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504555935", "createdAt": "2020-10-14T10:02:55Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NTY3Mg==", "bodyText": "In case this is done, the code fragment is getKeyCombination(binding).ifpresent(combination -> ...)", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504595672", "createdAt": "2020-10-14T11:15:27Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3OTUwMg==", "bodyText": "@Gena928 Exactly! So if you change the keybinding for \"New inbook\" to something, then getDefaultKeybinding should still return an empty string, so the code never goes into the if body in this case (although it should to match the new-user defined key).", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504679502", "createdAt": "2020-10-14T13:32:30Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxMDk0Mg==", "bodyText": "@tobiasdiez\nI agree. If you change default shortcut, this code will not work.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r504710942", "createdAt": "2020-10-14T14:12:19Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNjU1Ng==", "bodyText": "I'll try to fix today.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r505226556", "createdAt": "2020-10-15T06:55:43Z", "author": {"login": "Gena928"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -113,8 +113,10 @@ public int size() {\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n         for (KeyBinding binding : KeyBinding.values()) {\n-            if (checkKeyCombinationEquality(binding, keyEvent)) {\n-                return Optional.of(binding);\n+            if (!binding.getDefaultKeyBinding().isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4MjY3NA=="}, "originalCommit": {"oid": "692b398f89070458935ff77899761e39215afeee"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA0NTc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0OTozN1rOHjsjQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0OTozN1rOHjsjQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MjEzMQ==", "bodyText": "Checkstyle issue: Put the space back between ) and {", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507192131", "createdAt": "2020-10-18T17:49:37Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -112,21 +112,23 @@ public int size() {\n     }\n \n     public Optional<KeyBinding> mapToKeyBinding(KeyEvent keyEvent) {\n-        for (KeyBinding binding : KeyBinding.values()) {\n+        for (KeyBinding binding : KeyBinding.values()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c3f91892f15c07a4990af1e7b03471b8e0f0992"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA0NzI3OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo1MToxN1rOHjskAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo1MToxN1rOHjskAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MjMyMw==", "bodyText": "Merge error?\nLine 50 seems to be duplicated further below in the changelog.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507192323", "createdAt": "2020-10-18T17:51:17Z", "author": {"login": "calixtus"}, "path": "CHANGELOG.md", "diffHunk": "@@ -45,13 +45,16 @@ inserting new citations in a OpenOffic/LibreOffice document. [#6957](https://git\n - We fixed the failure to Copy citation key and link. [#5835](https://github.com/JabRef/jabref/issues/5835)\n - We fixed an issue where the sort order of the entry table was reset after a restart of JabRef. [#6898](https://github.com/JabRef/jabref/pull/6898)\n - We fixed an issue where no longer a warning was displayed when inserting references into LibreOffice with an invalid \"ReferenceParagraphFormat\". [#6907](https://github.com/JabRef/jabref/pull/60907).\n+- We fixed an issue where a selected field was not removed after the first click in the custom entry types dialog [#6934](https://github.com/JabRef/jabref/issues/6934)\n+- We fixed an issue where a remove icon was shown for standard entry types in the custom entry types dialog [6906](https://github.com/JabRef/jabref/issues/6906)\n+- We fixed an issue, when pulling changes from shared database via shortcut caused creation a new new tech report [6867](https://github.com/JabRef/jabref/issues/6867)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c3f91892f15c07a4990af1e7b03471b8e0f0992"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA0OTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo1NDowM1rOHjslEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo1NDowM1rOHjslEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MjU5Mw==", "bodyText": "New inproceedings needs to be put in the english localization file.", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507192593", "createdAt": "2020-10-18T17:54:03Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBinding.java", "diffHunk": "@@ -46,12 +46,13 @@\n     NEW_BOOK(\"New book\", Localization.lang(\"New book\"), \"ctrl+shift+B\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY(\"New entry\", Localization.lang(\"New entry\"), \"ctrl+N\", KeyBindingCategory.BIBTEX),\n     NEW_ENTRY_FROM_PLAIN_TEXT(\"New entry from plain text\", Localization.lang(\"New entry from plain text\"), \"ctrl+shift+N\", KeyBindingCategory.BIBTEX),\n-    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"ctrl+shift+I\", KeyBindingCategory.BIBTEX),\n-    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"ctrl+shift+M\", KeyBindingCategory.BIBTEX),\n-    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"ctrl+shift+T\", KeyBindingCategory.BIBTEX),\n-    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"ctrl+shift+P\", KeyBindingCategory.BIBTEX),\n-    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"ctrl+shift+U\", KeyBindingCategory.BIBTEX),\n-    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"ctrl+shift+R\", KeyBindingCategory.BIBTEX),\n+    NEW_INBOOK(\"New inbook\", Localization.lang(\"New inbook\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_MASTERSTHESIS(\"New mastersthesis\", Localization.lang(\"New mastersthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PHDTHESIS(\"New phdthesis\", Localization.lang(\"New phdthesis\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_PROCEEDINGS(\"New proceedings\", Localization.lang(\"New proceedings\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_UNPUBLISHED(\"New unpublished\", Localization.lang(\"New unpublished\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_TECHREPORT(\"New technical report\", Localization.lang(\"New technical report\"), \"\", KeyBindingCategory.BIBTEX),\n+    NEW_INPROCEEDINGS(\"New inproceesings\", Localization.lang(\"New inproceedings\"), \"\", KeyBindingCategory.BIBTEX),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c3f91892f15c07a4990af1e7b03471b8e0f0992"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA3NDA0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyMDoyOFrOHjswzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyMDoyOFrOHjswzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTU5Nw==", "bodyText": "This line still seems to be unrelated to your changes...", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507195597", "createdAt": "2020-10-18T18:20:28Z", "author": {"login": "calixtus"}, "path": "CHANGELOG.md", "diffHunk": "@@ -49,9 +49,10 @@ inserting new citations in a OpenOffic/LibreOffice document. [#6957](https://git\n - We fixed an issue where a remove icon was shown for standard entry types in the custom entry types dialog. [#6906](https://github.com/JabRef/jabref/issues/6906)\n - We fixed an issue where it was impossible to connect to OpenOffice/LibreOffice on Mac OSX. [#6970](https://github.com/JabRef/jabref/pull/6970)\n - We fixed an issue with the python script used by browser plugins that failed to locate JabRef if not installed in its default location. [#6963](https://github.com/JabRef/jabref/pull/6963/files)\n+- We fixed an issue where spaces and newlines in an isbn would generate an exception. [#6456](https://github.com/JabRef/jabref/issues/6456)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d480045bf1c0639b84ebc84a02d3186e18cc0ae7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA3NjQzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/l10n/JabRef_en.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyMzo0OFrOHjsyAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyMzo0OFrOHjsyAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTkwNQ==", "bodyText": "This needs to be exactly identical for the consistency test.\nSee: https://github.com/JabRef/jabref/runs/1271802665?check_suite_focus=true\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            New\\ inproceedings=New article in a conference proceedings\n          \n          \n            \n            New\\ inproceedings=New inproceedings", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507195905", "createdAt": "2020-10-18T18:23:48Z", "author": {"login": "calixtus"}, "path": "src/main/resources/l10n/JabRef_en.properties", "diffHunk": "@@ -2257,6 +2257,7 @@ Previous\\ preview\\ style=Previous preview style\n \n (\\ Note\\:\\ Press\\ return\\ to\\ commit\\ changes\\ in\\ the\\ table\\!\\ )=( Note\\: Press return to commit changes in the table\\! )\n Reset=Reset\n+New\\ inproceedings=New article in a conference proceedings", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d480045bf1c0639b84ebc84a02d3186e18cc0ae7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA3Njc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyNDoxMlrOHjsyKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxODoyNDoxMlrOHjsyKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTk0Ng==", "bodyText": "Missing whitespace.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!keyCombination.isPresent()){\n          \n          \n            \n                    if (!keyCombination.isPresent()) {", "url": "https://github.com/JabRef/jabref/pull/6960#discussion_r507195946", "createdAt": "2020-10-18T18:24:12Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/gui/keyboard/KeyBindingRepository.java", "diffHunk": "@@ -137,8 +139,11 @@ public KeyCombination getKeyCombination(KeyBinding bindName) {\n      * @return true if matching, else false\n      */\n     public boolean checkKeyCombinationEquality(KeyBinding binding, KeyEvent keyEvent) {\n-        KeyCombination keyCombination = getKeyCombination(binding);\n-        return checkKeyCombinationEquality(keyCombination, keyEvent);\n+        Optional<KeyCombination> keyCombination = getKeyCombination(binding);\n+        if (!keyCombination.isPresent()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d480045bf1c0639b84ebc84a02d3186e18cc0ae7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1583, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}