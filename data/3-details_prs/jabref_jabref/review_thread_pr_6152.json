{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTA1MDgz", "number": 6152, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxODoyMDozM1rOEDLqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxODowN1rOEGILUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzcyMjYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxODoyMDozM1rOGgE_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoyMToxNlrOGgFgvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4OTQ2OQ==", "bodyText": "@tobiasdiez I followed your approach, however, sometimes the field list  on the right is not updated.\nI tried unbinding/binding again but doesn't help. Any idea  how to fix this?", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436289469", "createdAt": "2020-06-06T18:20:33Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -141,6 +141,7 @@ private void setupTable() {\n         //Here we would need to select the\n         EasyBind.subscribe(viewModel.selectedEntryTypeProperty(), type -> {\n             if (type != null) {\n+                fields.itemsProperty().unbindBidirectional(type.fields());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eb5bfc3b3cb68fd77a1a5c0c900ca455946e7b8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzkxNw==", "bodyText": "This should be fields.setItems(type.fields()) after converting all the above list properties to observable lists.\nMoreover, I would put this subscription thing in the viewModel and expose a new list viewModel.fieldsForSelectedType.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297917", "createdAt": "2020-06-06T20:21:16Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -141,6 +141,7 @@ private void setupTable() {\n         //Here we would need to select the\n         EasyBind.subscribe(viewModel.selectedEntryTypeProperty(), type -> {\n             if (type != null) {\n+                fields.itemsProperty().unbindBidirectional(type.fields());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4OTQ2OQ=="}, "originalCommit": {"oid": "5eb5bfc3b3cb68fd77a1a5c0c900ca455946e7b8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc4MTk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/DragAndDropDataFormats.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDowODo1NFrOGgFdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDowODo1NFrOGgFdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzA3NA==", "bodyText": "For this JabRef-intern drag&drops, the https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/util/CustomLocalDragboard.java is easier to use.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297074", "createdAt": "2020-06-06T20:08:54Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/DragAndDropDataFormats.java", "diffHunk": "@@ -11,6 +11,7 @@\n  */\n public class DragAndDropDataFormats {\n \n+    public static final DataFormat FIELD = new DataFormat(\"dnd/org.jabref.model.entry.field.Field\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777455aa993194412f7301e62182548aad90833"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc4Mjc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMDoxMFrOGgFd0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMDoxMFrOGgFd0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzE2OQ==", "bodyText": "Try to make this a simple ObservableList.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297169", "createdAt": "2020-06-06T20:10:10Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "diffHunk": "@@ -55,19 +51,17 @@ public Field fromString(String string) {\n         }\n     };\n \n-    private final ListProperty<BibEntryType> entryTypes;\n-    private final ListProperty<Field> fields;\n-    private final ObjectProperty<BibEntryType> selectedEntryTypes = new SimpleObjectProperty<>();\n-    private final ListProperty<FieldViewModel> fieldsForType;\n+    private final ListProperty<Field> fieldsForAdding;\n+    private final ObjectProperty<CustomEntryTypeViewModel> selectedEntryTypes = new SimpleObjectProperty<>();\n     private final ObjectProperty<Field> selectedFieldToAdd = new SimpleObjectProperty<>();\n     private final StringProperty entryTypeToAdd = new SimpleStringProperty(\"\");\n     private final ObservableList<BibEntryType> allEntryTypes;\n-    private final ObservableList<FieldViewModel> allFieldsForType = FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName(), extractor.fieldType()});\n     private final ObjectProperty<Field> newFieldToAdd = new SimpleObjectProperty<>();\n     private final BibDatabaseMode mode;\n-    private final Map<BibEntryType, List<FieldViewModel>> typesWithFields = new HashMap<>();\n     private final List<BibEntryType> typesToRemove = new ArrayList<>();\n \n+    private final ListProperty<CustomEntryTypeViewModel> entryTypesWithFields = new SimpleListProperty<>(FXCollections.observableArrayList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777455aa993194412f7301e62182548aad90833"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc4MzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMDo1N1rOGgFd-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMDo1N1rOGgFd-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzIxMQ==", "bodyText": "Here too: simply use an ObservableList", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297211", "createdAt": "2020-06-06T20:10:57Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "diffHunk": "@@ -55,19 +51,17 @@ public Field fromString(String string) {\n         }\n     };\n \n-    private final ListProperty<BibEntryType> entryTypes;\n-    private final ListProperty<Field> fields;\n-    private final ObjectProperty<BibEntryType> selectedEntryTypes = new SimpleObjectProperty<>();\n-    private final ListProperty<FieldViewModel> fieldsForType;\n+    private final ListProperty<Field> fieldsForAdding;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777455aa993194412f7301e62182548aad90833"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc4NDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMzoxNFrOGgFeqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxMzoxNFrOGgFeqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzM4NQ==", "bodyText": "again, ObservableList should suffice", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297385", "createdAt": "2020-06-06T20:13:14Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeViewModel.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.jabref.gui.customentrytypes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ObjectProperty;\n+import javafx.beans.property.SimpleListProperty;\n+import javafx.beans.property.SimpleObjectProperty;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ListChangeListener;\n+\n+import org.jabref.model.entry.BibEntryType;\n+\n+public class CustomEntryTypeViewModel {\n+\n+    private final ObjectProperty<BibEntryType> entryType = new SimpleObjectProperty<>();\n+    private final ListProperty<FieldViewModel> fields;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777455aa993194412f7301e62182548aad90833"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzc4NTMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeViewModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxNToyMFrOGgFfKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMDoxNToyMFrOGgFfKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzUxNQ==", "bodyText": "This looks a bit complicated. Why not simply compare/overwrite on-save the old list of fields with the new one?", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436297515", "createdAt": "2020-06-06T20:15:20Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeViewModel.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.jabref.gui.customentrytypes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javafx.beans.property.ListProperty;\n+import javafx.beans.property.ObjectProperty;\n+import javafx.beans.property.SimpleListProperty;\n+import javafx.beans.property.SimpleObjectProperty;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ListChangeListener;\n+\n+import org.jabref.model.entry.BibEntryType;\n+\n+public class CustomEntryTypeViewModel {\n+\n+    private final ObjectProperty<BibEntryType> entryType = new SimpleObjectProperty<>();\n+    private final ListProperty<FieldViewModel> fields;\n+    private final List<FieldViewModel> fieldsToRemove = new ArrayList<>();\n+\n+    public CustomEntryTypeViewModel(BibEntryType entryType) {\n+        this.entryType.set(entryType);\n+\n+        List<FieldViewModel> allFieldsForType = entryType.getAllFields().stream().map(bibField -> new FieldViewModel(bibField.getField(), entryType.isRequired(bibField.getField()), bibField.getPriority(), entryType)).collect(Collectors.toList());\n+\n+        fields = new SimpleListProperty<>(FXCollections.observableArrayList(allFieldsForType));\n+\n+        fields.addListener((ListChangeListener<? super FieldViewModel>) change -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2777455aa993194412f7301e62182548aad90833"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODQ4NzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODozMTo1N1rOGgLHYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0MDo0MVrOGgYRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4OTcyOQ==", "bodyText": "observable list should be sufficient here.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436389729", "createdAt": "2020-06-07T18:31:57Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "diffHunk": "@@ -55,18 +52,14 @@ public Field fromString(String string) {\n         }\n     };\n \n-    private final ListProperty<BibEntryType> entryTypes;\n-    private final ListProperty<Field> fields;\n-    private final ObjectProperty<BibEntryType> selectedEntryTypes = new SimpleObjectProperty<>();\n-    private final ListProperty<FieldViewModel> fieldsForType;\n+    private final ObservableList<Field> fieldsForAdding;\n+    private final ObjectProperty<CustomEntryTypeViewModel> selectedEntryTypes = new SimpleObjectProperty<>();\n     private final ObjectProperty<Field> selectedFieldToAdd = new SimpleObjectProperty<>();\n     private final StringProperty entryTypeToAdd = new SimpleStringProperty(\"\");\n     private final ObservableList<BibEntryType> allEntryTypes;\n-    private final ObservableList<FieldViewModel> allFieldsForType = FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName(), extractor.fieldType()});\n     private final ObjectProperty<Field> newFieldToAdd = new SimpleObjectProperty<>();\n     private final BibDatabaseMode mode;\n-    private final Map<BibEntryType, List<FieldViewModel>> typesWithFields = new HashMap<>();\n-    private final List<BibEntryType> typesToRemove = new ArrayList<>();\n+    private final ListProperty<CustomEntryTypeViewModel> entryTypesWithFields = new SimpleListProperty<>(FXCollections.observableArrayList(extractor -> new Observable[] {extractor.entryType(), extractor.fields()}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15ba840eafb9856d7413f6319ccb23c189f9e9bd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4MTM3Nw==", "bodyText": "Nope, it's used in a binding and bind() only accepts a ListProperty", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436481377", "createdAt": "2020-06-08T06:32:42Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "diffHunk": "@@ -55,18 +52,14 @@ public Field fromString(String string) {\n         }\n     };\n \n-    private final ListProperty<BibEntryType> entryTypes;\n-    private final ListProperty<Field> fields;\n-    private final ObjectProperty<BibEntryType> selectedEntryTypes = new SimpleObjectProperty<>();\n-    private final ListProperty<FieldViewModel> fieldsForType;\n+    private final ObservableList<Field> fieldsForAdding;\n+    private final ObjectProperty<CustomEntryTypeViewModel> selectedEntryTypes = new SimpleObjectProperty<>();\n     private final ObjectProperty<Field> selectedFieldToAdd = new SimpleObjectProperty<>();\n     private final StringProperty entryTypeToAdd = new SimpleStringProperty(\"\");\n     private final ObservableList<BibEntryType> allEntryTypes;\n-    private final ObservableList<FieldViewModel> allFieldsForType = FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName(), extractor.fieldType()});\n     private final ObjectProperty<Field> newFieldToAdd = new SimpleObjectProperty<>();\n     private final BibDatabaseMode mode;\n-    private final Map<BibEntryType, List<FieldViewModel>> typesWithFields = new HashMap<>();\n-    private final List<BibEntryType> typesToRemove = new ArrayList<>();\n+    private final ListProperty<CustomEntryTypeViewModel> entryTypesWithFields = new SimpleListProperty<>(FXCollections.observableArrayList(extractor -> new Observable[] {extractor.entryType(), extractor.fields()}));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4OTcyOQ=="}, "originalCommit": {"oid": "15ba840eafb9856d7413f6319ccb23c189f9e9bd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwNTM0NA==", "bodyText": "entryTypes.setItems(viewModel.entryTypes()); should work if entryTypes is an observable list. No need for the bind + property.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r436605344", "createdAt": "2020-06-08T10:40:41Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomEntryTypeDialogViewModel.java", "diffHunk": "@@ -55,18 +52,14 @@ public Field fromString(String string) {\n         }\n     };\n \n-    private final ListProperty<BibEntryType> entryTypes;\n-    private final ListProperty<Field> fields;\n-    private final ObjectProperty<BibEntryType> selectedEntryTypes = new SimpleObjectProperty<>();\n-    private final ListProperty<FieldViewModel> fieldsForType;\n+    private final ObservableList<Field> fieldsForAdding;\n+    private final ObjectProperty<CustomEntryTypeViewModel> selectedEntryTypes = new SimpleObjectProperty<>();\n     private final ObjectProperty<Field> selectedFieldToAdd = new SimpleObjectProperty<>();\n     private final StringProperty entryTypeToAdd = new SimpleStringProperty(\"\");\n     private final ObservableList<BibEntryType> allEntryTypes;\n-    private final ObservableList<FieldViewModel> allFieldsForType = FXCollections.observableArrayList(extractor -> new Observable[] {extractor.fieldName(), extractor.fieldType()});\n     private final ObjectProperty<Field> newFieldToAdd = new SimpleObjectProperty<>();\n     private final BibDatabaseMode mode;\n-    private final Map<BibEntryType, List<FieldViewModel>> typesWithFields = new HashMap<>();\n-    private final List<BibEntryType> typesToRemove = new ArrayList<>();\n+    private final ListProperty<CustomEntryTypeViewModel> entryTypesWithFields = new SimpleListProperty<>(FXCollections.observableArrayList(extractor -> new Observable[] {extractor.entryType(), extractor.fields()}));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4OTcyOQ=="}, "originalCommit": {"oid": "15ba840eafb9856d7413f6319ccb23c189f9e9bd"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU5MTM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMToyMlrOGku8Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNjoyMzowNFrOGmnRlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MDk5NQ==", "bodyText": "I don't get this comment. --> I read it as \"We do not need to select the fields and do something different, because of some idea\" \ud83d\ude07\nIt seems that this is a necessary comment. Could you maybe rephrase it?", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441170995", "createdAt": "2020-06-16T22:11:22Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -128,16 +149,88 @@ private void setupTable() {\n                 .install(fieldTypeActionColumn);\n \n         viewModel.newFieldToAddProperty().bindBidirectional(addNewField.valueProperty());\n-        fields.itemsProperty().bindBidirectional(viewModel.fieldsforTypesProperty());\n+\n+        // Here we would need to select the fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MjU1MQ==", "bodyText": "It was an obsolete comment I forgot to rmeove", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r443142551", "createdAt": "2020-06-20T16:23:04Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -128,16 +149,88 @@ private void setupTable() {\n                 .install(fieldTypeActionColumn);\n \n         viewModel.newFieldToAddProperty().bindBidirectional(addNewField.valueProperty());\n-        fields.itemsProperty().bindBidirectional(viewModel.fieldsforTypesProperty());\n+\n+        // Here we would need to select the fields", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MDk5NQ=="}, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU5NDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMjoxNFrOGku93g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMjoxNFrOGku93g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MTQyMg==", "bodyText": "Do we really need that comment? - Where is \"stop drag'n'drop\"?", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441171422", "createdAt": "2020-06-16T22:12:14Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -128,16 +149,88 @@ private void setupTable() {\n                 .install(fieldTypeActionColumn);\n \n         viewModel.newFieldToAddProperty().bindBidirectional(addNewField.valueProperty());\n-        fields.itemsProperty().bindBidirectional(viewModel.fieldsforTypesProperty());\n+\n+        // Here we would need to select the fields\n+        EasyBind.subscribe(viewModel.selectedEntryTypeProperty(), type -> {\n+            if (type != null) {\n+                var items = type.fields();\n+                fields.setItems(items);\n+            }\n+        });\n+\n+        new ViewModelTableRowFactory<FieldViewModel>()\n+              .setOnDragDetected(this::handleOnDragDetected)\n+              .setOnDragDropped(this::handleOnDragDropped)\n+              .setOnDragOver(this::handleOnDragOver)\n+              .install(fields);\n+}\n+\n+    private void handleOnDragOver(FieldViewModel originalItem, DragEvent event) {\n+        if ((event.getGestureSource() != originalItem) && event.getDragboard().hasContent(DragAndDropDataFormats.FIELD)) {\n+            event.acceptTransferModes(TransferMode.MOVE);\n+        }\n+    }\n+\n+    private void handleOnDragDetected(TableRow<FieldViewModel> row, FieldViewModel fieldViewModel, MouseEvent event) {\n+        // Start drag'n'drop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODU5NDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMjoyNVrOGku-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxMjoyNVrOGku-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MTQ4Ng==", "bodyText": "No empty line here.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441171486", "createdAt": "2020-06-16T22:12:25Z", "author": {"login": "koppor"}, "path": "src/main/java/org/jabref/gui/customentrytypes/CustomizeEntryTypeDialogView.java", "diffHunk": "@@ -128,16 +149,88 @@ private void setupTable() {\n                 .install(fieldTypeActionColumn);\n \n         viewModel.newFieldToAddProperty().bindBidirectional(addNewField.valueProperty());\n-        fields.itemsProperty().bindBidirectional(viewModel.fieldsforTypesProperty());\n+\n+        // Here we would need to select the fields\n+        EasyBind.subscribe(viewModel.selectedEntryTypeProperty(), type -> {\n+            if (type != null) {\n+                var items = type.fields();\n+                fields.setItems(items);\n+            }\n+        });\n+\n+        new ViewModelTableRowFactory<FieldViewModel>()\n+              .setOnDragDetected(this::handleOnDragDetected)\n+              .setOnDragDropped(this::handleOnDragDropped)\n+              .setOnDragOver(this::handleOnDragOver)\n+              .install(fields);\n+}\n+\n+    private void handleOnDragOver(FieldViewModel originalItem, DragEvent event) {\n+        if ((event.getGestureSource() != originalItem) && event.getDragboard().hasContent(DragAndDropDataFormats.FIELD)) {\n+            event.acceptTransferModes(TransferMode.MOVE);\n+        }\n+    }\n+\n+    private void handleOnDragDetected(TableRow<FieldViewModel> row, FieldViewModel fieldViewModel, MouseEvent event) {\n+        // Start drag'n'drop\n+        row.startFullDrag();\n+\n+        FieldViewModel field = fields.getSelectionModel().getSelectedItem();\n+\n+        ClipboardContent content = new ClipboardContent();\n+        Dragboard dragboard = fields.startDragAndDrop(TransferMode.MOVE);\n+        content.put(DragAndDropDataFormats.FIELD, \"\");\n+        localDragboard.putValue(FieldViewModel.class, field);\n+        dragboard.setContent(content);\n+        event.consume();\n+    }\n+\n+    private void handleOnDragDropped(TableRow<FieldViewModel> row, FieldViewModel originalItem, DragEvent event) {\n+        boolean success = false;\n+\n+        ObservableList<FieldViewModel> items = fields.itemsProperty().get();\n+\n+        if (localDragboard.hasType(FieldViewModel.class)) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODYwMjY5OnYy", "diffSide": "LEFT", "path": "src/test/java/org/jabref/logic/bibtex/BibEntryWriterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxNTozOFrOGkvDDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxNTozOFrOGkvDDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3Mjc1MQ==", "bodyText": "This change is OK for me. Number really belongs to a journal. More than Note", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441172751", "createdAt": "2020-06-16T22:15:38Z", "author": {"login": "koppor"}, "path": "src/test/java/org/jabref/logic/bibtex/BibEntryWriterTest.java", "diffHunk": "@@ -272,8 +273,8 @@ void roundTripWithCamelCasingInTheOriginalEntryAndResultInLowerCase() throws IOE\n         String bibtexEntry = OS.NEWLINE + \"@Article{test,\" + OS.NEWLINE +\n                 \"  Author                   = {Foo Bar},\" + OS.NEWLINE +\n                 \"  Journal                  = {International Journal of Something},\" + OS.NEWLINE +\n-                \"  Note                     = {some note},\" + OS.NEWLINE +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODYwNzk4OnYy", "diffSide": "LEFT", "path": "src/test/resources/testbib/bibWithUserComments.bib", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxNzo0NlrOGkvGHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxNzo0NlrOGkvGHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MzUzMw==", "bodyText": "Why is here the title after booktitle and in bibWithUserCommentAndEntryChange.bib, the title before booktitle (which I like)\nWe had huge debates about field ordering. I think, we agreed that author comes first and then title. Then the other metadata.", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441173533", "createdAt": "2020-06-16T22:17:46Z", "author": {"login": "koppor"}, "path": "src/test/resources/testbib/bibWithUserComments.bib", "diffHunk": "@@ -33,12 +33,12 @@ @Comment this\n @INPROCEEDINGS{1137631,\n   author = {Gustav Bostr\\\"{o}m and Jaana W\\\"{a}yrynen and Marine Bod\\'{e}n and\n \tKonstantin Beznosov and Philippe Kruchten},\n-  title = {Extending XP practices to support security requirements engineering},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODYwODgzOnYy", "diffSide": "LEFT", "path": "src/test/resources/testbib/bibWithUserComments.bib", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxODowN1rOGkvGnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjoxODowN1rOGkvGnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE3MzY2Mw==", "bodyText": "This is also inconsitent to the other file.\nIs this file broken maybe? - Can the change be reverted?", "url": "https://github.com/JabRef/jabref/pull/6152#discussion_r441173663", "createdAt": "2020-06-16T22:18:07Z", "author": {"login": "koppor"}, "path": "src/test/resources/testbib/bibWithUserComments.bib", "diffHunk": "@@ -33,12 +33,12 @@ @Comment this\n @INPROCEEDINGS{1137631,\n   author = {Gustav Bostr\\\"{o}m and Jaana W\\\"{a}yrynen and Marine Bod\\'{e}n and\n \tKonstantin Beznosov and Philippe Kruchten},\n-  title = {Extending XP practices to support security requirements engineering},\n   booktitle = {SESS '06: Proceedings of the 2006 international workshop on Software\n \tengineering for secure systems},\n+  title = {Extending XP practices to support security requirements engineering},\n   year = {2006},\n-  pages = {11--18},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc3d4da33b31193ca211a13954aaece3f0f7bac"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2020, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}