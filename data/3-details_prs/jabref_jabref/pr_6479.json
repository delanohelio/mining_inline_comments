{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTc2Mzc5", "number": 6479, "title": "Fixes generated bibtex key and display of institute authors", "bodyText": "Fixes #6459. Fixes #6465 .\nThere are two parts of this issue,\n\nA null is prepended to an abbreviated BibTeX key.\nCurly brackets are not respected (in the maintable's author column?).\n\n1. Fix to the prepended null\nWhat is going on?\nBracketedPattern.generateInstitutionKey gets called for any author enclosed in curly brackets (e.g., \"{The School of Life}\"). The method expects an institute of technology or university and appends its name to the key (e.g., null if there is no name).\nWhy is it going on?\nAcademic institutions can have long generated BibTeX keys unless abbreviated, e.g., \"Royal Institute of Technology: The School of Electrical Engineering and Computer Science\", which generateInstitutionKey shortens to RITEECS.\nFix\nReplace a null valued university with an empty string. The drawback is potentially very short BibTeX keys (e.g., The School of Life -> L).\nWhat are alternatives?\n\nRegex matching universities and technological institutions, which is hard to implement correctly. On the other hand, the drawback is an unexpected BibTeX key in a corner case. In the case of The School of Life would be abbreviated to SL instead of L.\n\n2. Fix to the author column\nWhen the list of authors gets converted to a latex-free version, all curly brackets are removed since the whole string is parsed as latex. When the latex-free string is used to create/fetch an AuthorList it will no longer contain any brackets, and the information needed to format the string is gone.\n3. What I think is left to do\n\n Find out why {The School of Life}  isn't respected in the author field of the GUI\n Attempt to match universities etc. with regex Assume that names that have comma separated parts are universities\n Update BibtexKeyGeneratorTest as it makes heavy use of deprecated methods the deprecated methods are essentially convenience methods so they have been moved inside the test file\n See if the readability of generateInstitutionKey can be improved\n Change the key generator for institution/corporate names to a Formatter? generateInstitutionKey should not be a separate Formatter, it is only called by normalize.\n\nand\n\n\n Change in CHANGELOG.md described (if applicable)\n Tests created for changes (if applicable)\n Manually tested changed features in running JabRef (always required)\n Screenshots added in PR description (for UI changes)\n Checked documentation: Is the information available and up to date? If not created an issue at https://github.com/JabRef/user-documentation/issues or, even better, submitted a pull request to the documentation repository.", "createdAt": "2020-05-14T12:52:53Z", "url": "https://github.com/JabRef/jabref/pull/6479", "merged": true, "mergeCommit": {"oid": "08eccb629d3214301d8b37862e10e2a10939b221"}, "closed": true, "closedAt": "2020-05-28T15:27:16Z", "author": {"login": "k3KAW8Pnf7mkmdSMPHz27"}, "timelineItems": {"totalCount": 71, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg6S8vgH2gAyNDE3OTc2Mzc5OmZkNDA1Y2YxNjAwYmIyZmI0MjI1YzNmZWYzNGNmZDM1ODBiMDRlNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclvkpngFqTQyMDIyODY3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd405cf1600bb2fb4225c3fef34cfd3580b04e75", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/fd405cf1600bb2fb4225c3fef34cfd3580b04e75", "committedDate": "2020-05-13T15:06:51Z", "message": "Fix Pattern.compile for frequently used regexes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6354e39e96938e731f59e166c876d9fe32432a6", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/a6354e39e96938e731f59e166c876d9fe32432a6", "committedDate": "2020-05-13T17:07:16Z", "message": "Fix one additional Pattern.compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "149ed4f18e55d451b6335f6740e9a70b84cf221b", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/149ed4f18e55d451b6335f6740e9a70b84cf221b", "committedDate": "2020-05-13T17:09:49Z", "message": "Fix style and unnecessary escape sequences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b57f1b2e970fc30f41cd6e307863f10d93e4e1f8", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b57f1b2e970fc30f41cd6e307863f10d93e4e1f8", "committedDate": "2020-05-13T17:13:16Z", "message": "Fix invalid index in call to substring\n\nThe original condition is evaluated to false.\nThe substring is shorter than \"uni\"."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fae093bb05f79ea69ffca36abf96cc237aa1931e", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/fae093bb05f79ea69ffca36abf96cc237aa1931e", "committedDate": "2020-05-13T17:34:21Z", "message": "Refactor name and javadoc of a regex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a23a9a09c485f5beefbb8607d3bcb86d3d659a3", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/5a23a9a09c485f5beefbb8607d3bcb86d3d659a3", "committedDate": "2020-05-13T17:35:52Z", "message": "Fix use of compiled regex for matching department"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af8c7e3549eca925967476c737e919a990d4f01", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/6af8c7e3549eca925967476c737e919a990d4f01", "committedDate": "2020-05-13T17:38:41Z", "message": "Fix check for uppercase letter\n\nPerhaps the assumption should be that the letters are ASCII.\nIf all letters are ASCII checking 'A' <= k.charAt(0) <= 'Z'\nmight make more sense.\nI am not convinced about doing this with a regex."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "716f885e97a49433853aeb0c73064e7d25a4faae", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/716f885e97a49433853aeb0c73064e7d25a4faae", "committedDate": "2020-05-13T19:06:24Z", "message": "Fix usage of uncompiled regex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdfd56a1b2f50f9b781e7129e45dc3d9e61c1967", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/cdfd56a1b2f50f9b781e7129e45dc3d9e61c1967", "committedDate": "2020-05-13T20:44:59Z", "message": "Fix readability?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b227edb72040f1e3b5184d35faa9bea24dd4429e", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b227edb72040f1e3b5184d35faa9bea24dd4429e", "committedDate": "2020-05-13T21:25:52Z", "message": "Add test cases\n\nBoth test cases involves an author name containing department or school\n without university or institute of technology."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef7f9798339d53f28e64c7801dab0eb0b6099724", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/ef7f9798339d53f28e64c7801dab0eb0b6099724", "committedDate": "2020-05-13T21:29:12Z", "message": "Fix `null` appearing as part of author name\n\nCorporate authors without university/institute of technology"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac3993cb84e814ef3318ab12bf79461a6c1a84b", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/9ac3993cb84e814ef3318ab12bf79461a6c1a84b", "committedDate": "2020-05-14T12:57:07Z", "message": "Refactor name of capital regex pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85c96ceecd81f2b43c2eb2480ab37ab07b97f062", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/85c96ceecd81f2b43c2eb2480ab37ab07b97f062", "committedDate": "2020-05-15T17:23:13Z", "message": "Merge branch 'master' into fix-for-issue-6459\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ded410cdfc14fd4100080face795204a07e25bd", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/6ded410cdfc14fd4100080face795204a07e25bd", "committedDate": "2020-05-15T18:50:20Z", "message": "Add debug output for reordering of names in fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c3007c7160d02e7c730683131ea57636728927", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/e8c3007c7160d02e7c730683131ea57636728927", "committedDate": "2020-05-18T18:02:38Z", "message": "Merge branch 'master' into fix-for-issue-6459"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72eb1fe361426bf5d46679ccea1330487ad49b9d", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/72eb1fe361426bf5d46679ccea1330487ad49b9d", "committedDate": "2020-05-18T19:33:11Z", "message": "Add helper methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eee8dd9768091649c7ca815beed10b161f6c6e5", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2eee8dd9768091649c7ca815beed10b161f6c6e5", "committedDate": "2020-05-18T20:31:10Z", "message": "Fix missing negation in \"uni\" matching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc540298ab5ddceb0ed3b85599817ff3cd862a2f", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/cc540298ab5ddceb0ed3b85599817ff3cd862a2f", "committedDate": "2020-05-18T20:33:54Z", "message": "Fix test cases for corporate authors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1063ae1c721def7edcf845a942c97575f825eb1e", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/1063ae1c721def7edcf845a942c97575f825eb1e", "committedDate": "2020-05-19T13:56:29Z", "message": "Fix to keep all uppercase letters in abbreviation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef94758a932e3dd171530352aa48551dbaa107cf", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/ef94758a932e3dd171530352aa48551dbaa107cf", "committedDate": "2020-05-19T14:06:52Z", "message": "Fix commented out code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e80bd8be5e8dd9f5d3f60a189b862ea7579047bb", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/e80bd8be5e8dd9f5d3f60a189b862ea7579047bb", "committedDate": "2020-05-19T14:54:30Z", "message": "Fix key for institution's name containing keyword\n\nIf the name of an institution can't be split, assume that\n\"School\"/\"Department\" is part of the name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ed455bd7d164fd37d30dcbcbd9abfe0d4f02eb", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/a0ed455bd7d164fd37d30dcbcbd9abfe0d4f02eb", "committedDate": "2020-05-19T15:10:15Z", "message": "Fix test case for short institution name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db082435d021941ada53c8091de5786dac38480", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/4db082435d021941ada53c8091de5786dac38480", "committedDate": "2020-05-19T15:11:35Z", "message": "Refactor check for institution types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "383fc14680a90c8d77e8739e60ce9f6294895812", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/383fc14680a90c8d77e8739e60ce9f6294895812", "committedDate": "2020-05-19T15:28:13Z", "message": "Refactor comments and names improving readability?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e5f097f843288a4aa38d833062c8384c2880f1", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/c3e5f097f843288a4aa38d833062c8384c2880f1", "committedDate": "2020-05-19T15:39:37Z", "message": "Refactor to improve readability and closure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5990c2a248f63283cd676449c4f89f63968baf2a", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/5990c2a248f63283cd676449c4f89f63968baf2a", "committedDate": "2020-05-19T16:00:04Z", "message": "Fix JavaDoc\n\nMinor typos and the \"rest\" part is now created differently."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0df3cdbdf6730ae2d82c8fb2c0d9e7ca3e3cd683", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/0df3cdbdf6730ae2d82c8fb2c0d9e7ca3e3cd683", "committedDate": "2020-05-19T16:02:15Z", "message": "Fix JavaDoc typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjI0NzI1", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-414624725", "createdAt": "2020-05-19T16:32:42Z", "commit": {"oid": "0df3cdbdf6730ae2d82c8fb2c0d9e7ca3e3cd683"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjozMjo0M1rOGXo1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjozMjo0M1rOGXo1lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzOTUxMQ==", "bodyText": "Maybe better to return an empty string instead of null in the orElse part", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r427439511", "createdAt": "2020-05-19T16:32:43Z", "author": {"login": "Siedlerchr"}, "path": "src/main/java/org/jabref/gui/maintable/BibEntryTableViewModel.java", "diffHunk": "@@ -119,17 +123,30 @@ public BibEntry getEntry() {\n                 boolean isName = false;\n \n                 Optional<String> content = Optional.empty();\n+                Field anEntry = null;\n                 for (Field field : fields) {\n                     content = entry.getResolvedFieldOrAliasLatexFree(field, database);\n                     if (content.isPresent()) {\n+                        anEntry = field;\n                         isName = field.getProperties().contains(FieldProperty.PERSON_NAMES);\n                         break;\n                     }\n                 }\n \n                 String result = content.orElse(null);\n                 if (isName) {\n-                    return nameFormatter.formatName(result);\n+                    String latexFreeBeforeNameFormatter = nameFormatter.formatName(result);\n+\n+                    String unformattedName = entry.getResolvedFieldOrAlias(anEntry, database).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df3cdbdf6730ae2d82c8fb2c0d9e7ca3e3cd683"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0d9601b9d479a7ec2fb72e4df5ba638f3260fb5", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/f0d9601b9d479a7ec2fb72e4df5ba638f3260fb5", "committedDate": "2020-05-19T21:04:26Z", "message": "Fix preliminary order for authors -> latexfree"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f26a736129aeb2002290cbaa1d65470b314c964", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/6f26a736129aeb2002290cbaa1d65470b314c964", "committedDate": "2020-05-19T21:12:39Z", "message": "Drop logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b717c5b448bb18f26c872bc42207a142d491453", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/9b717c5b448bb18f26c872bc42207a142d491453", "committedDate": "2020-05-20T13:45:07Z", "message": "Add convenience methods for cached latexfree names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ed9c54abbac1b632d7500e78cda8649268e6b6f", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/5ed9c54abbac1b632d7500e78cda8649268e6b6f", "committedDate": "2020-05-20T13:48:04Z", "message": "Add name format method for names containing latex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e9e7035c198199a0ca4ac7b7adf9d8679ecece", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/d6e9e7035c198199a0ca4ac7b7adf9d8679ecece", "committedDate": "2020-05-20T13:51:22Z", "message": "Add call to formatNameLatexFree"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzczODQ0", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-415373844", "createdAt": "2020-05-20T14:07:45Z", "commit": {"oid": "d6e9e7035c198199a0ca4ac7b7adf9d8679ecece"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowNzo0NVrOGYNlMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowNzo0NVrOGYNlMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0MTUyMw==", "bodyText": "The changes in AuthorList are intended to create a similar behaviour to the already existing getAsNatBib. An alternative would be to create the cache as a weakhashmap in MainTableNameFormatter (and move the functionality from model to gui if that is appropriate)", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r428041523", "createdAt": "2020-05-20T14:07:45Z", "author": {"login": "k3KAW8Pnf7mkmdSMPHz27"}, "path": "src/main/java/org/jabref/model/entry/AuthorList.java", "diffHunk": "@@ -11,6 +11,8 @@\n import java.util.WeakHashMap;\n import java.util.stream.Collectors;\n \n+import org.jabref.model.strings.LatexToUnicodeAdapter;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6e9e7035c198199a0ca4ac7b7adf9d8679ecece"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dc664de4522dd58c0e427a3c03172a9ebb22134", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2dc664de4522dd58c0e427a3c03172a9ebb22134", "committedDate": "2020-05-20T14:42:58Z", "message": "Fix unclear statement in JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0fd4f1cb84007b0cb7e490313d68b5db217519f", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/f0fd4f1cb84007b0cb7e490313d68b5db217519f", "committedDate": "2020-05-20T17:47:10Z", "message": "Fix to only keep the first character of each word\n\nThere are some examples that will turn out wrong if only capital letters\n are kept, e.g., \"iOS Developer University Program\".\n The original problem with \"The School of Life\" becoming too short is\n avoided by only removing school/department for names containing two or\n  more ',' separated strings. This will still produce an unexpected\n   result if the address of the institution is part of the authors field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feebf8152671d0d212c1fbdf0e744fbaefe3f1e9", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/feebf8152671d0d212c1fbdf0e744fbaefe3f1e9", "committedDate": "2020-05-21T22:14:36Z", "message": "Add latexfree Natbib test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4c2ce38c48e8af98ecf2a0e70dd763d540a3352", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/d4c2ce38c48e8af98ecf2a0e70dd763d540a3352", "committedDate": "2020-05-21T22:17:39Z", "message": "Fix typo in latex-free test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04abe5e45fa5d01edb2f4c358907759326fa1e14", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/04abe5e45fa5d01edb2f4c358907759326fa1e14", "committedDate": "2020-05-22T13:08:46Z", "message": "Add Natbib test with escaped brackets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f3ef6270fb4461a92a9cd3de0dc2ddfe4196e11", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/3f3ef6270fb4461a92a9cd3de0dc2ddfe4196e11", "committedDate": "2020-05-22T13:26:26Z", "message": "Add Natbib institution test with escaped brackets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4fbec134bc6de3e3dad7756df021b1b0f49e54d", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/f4fbec134bc6de3e3dad7756df021b1b0f49e54d", "committedDate": "2020-05-22T13:43:08Z", "message": "Add test for latex-free comma separated lastnames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a256fa810abc0ae03d1175a03b769c9e579fb466", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/a256fa810abc0ae03d1175a03b769c9e579fb466", "committedDate": "2020-05-22T14:08:06Z", "message": "Add test for latex-free comma separated first name\n\nFirst name first and abbreviated first name first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4961c534e9feae10a213f82a1a4a1f1c4b058078", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/4961c534e9feae10a213f82a1a4a1f1c4b058078", "committedDate": "2020-05-22T14:21:17Z", "message": "Add test for latex-free comma separated last name\n\nLast name first and abbreviated first names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a443db07282ee198365dc080fdbd3faaca603b1c", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/a443db07282ee198365dc080fdbd3faaca603b1c", "committedDate": "2020-05-22T14:46:55Z", "message": "Fix adherence to JavaDoc and readability(?)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd492e61922a89717f984e9f00d585d980ab7617", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/dd492e61922a89717f984e9f00d585d980ab7617", "committedDate": "2020-05-22T18:01:33Z", "message": "Fix readability(?)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71e45d48e9b2d4c0ffd997044fc6873094cce19d", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/71e45d48e9b2d4c0ffd997044fc6873094cce19d", "committedDate": "2020-05-22T20:12:33Z", "message": "Fix CheckStyle issues\n\nThe deprecated static methods BibtexKeyGenerator.generateKey are moved\nto the test file as a similar convenience method is required for\nthe test cases. Suppress warning has been added for some methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2748dcd5962d7cca651f9d7223e2278396cdafe7", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2748dcd5962d7cca651f9d7223e2278396cdafe7", "committedDate": "2020-05-22T20:23:27Z", "message": "Merge branch 'master' into fix-for-issue-6459"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b0dda3af6bd2d3ea90dad99f73c0377d1af603c", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/3b0dda3af6bd2d3ea90dad99f73c0377d1af603c", "committedDate": "2020-05-22T20:29:55Z", "message": "Fix CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78b66f7d9206224c7b48f70baee1219eeed7e6d4", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/78b66f7d9206224c7b48f70baee1219eeed7e6d4", "committedDate": "2020-05-22T20:45:20Z", "message": "Fix mistake in BibtexKeyGeneratorTest\n\ngenerateKey was not copy-pasted properly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/55ef8e7bede442fe2de7ab5c453d067205e0befc", "committedDate": "2020-05-24T14:40:59Z", "message": "Add test for oxford comma"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODI1NjAy", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-417825602", "createdAt": "2020-05-25T17:41:59Z", "commit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODgwNzE4", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-417880718", "createdAt": "2020-05-25T21:26:39Z", "commit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMToyNjozOVrOGaJ6ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMTo1NDozMlrOGaKMKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3ODYyNw==", "bodyText": "The old formatName method is still used?", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430078627", "createdAt": "2020-05-25T21:26:39Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/maintable/MainTableNameFormatter.java", "diffHunk": "@@ -19,6 +19,31 @@\n         abbrAuthorNames = preferences.getBoolean(JabRefPreferences.ABBR_AUTHOR_NAMES);\n     }\n \n+    /**\n+     * Format a name field for the table, according to user preferences and with latex expressions translated if\n+     * possible.\n+     *\n+     * @param nameToFormat The contents of the name field.\n+     * @return The formatted name field.\n+     */\n+    public String formatNameLatexFree(final String nameToFormat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3OTEzMQ==", "bodyText": "Enum should have normal capitalization, i.e. Institution. The same holds true for the enum values", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430079131", "createdAt": "2020-05-25T21:29:21Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/logic/bibtexkeypattern/BracketedPattern.java", "diffHunk": "@@ -41,9 +43,54 @@\n public class BracketedPattern {\n     private static final Logger LOGGER = LoggerFactory.getLogger(BracketedPattern.class);\n \n-    private static final String STARTING_CAPITAL_PATTERN = \"[^A-Z]\";\n     private static final int CHARS_OF_FIRST = 5;\n-    private static final Pattern REGEX_PATTERN = Pattern.compile(\".*\\\\(\\\\{([A-Z]+)\\\\}\\\\).*\");\n+\n+    /** Matches everything that is not an uppercase ASCII letter */\n+    private static final Pattern NOT_CAPITAL_FIRST_CHARACTER = Pattern.compile(\"[^A-Z]\");\n+    /** Matches with \"({[A-Z]}+)\", which should be used to abbreviate the name of an institution */\n+    private static final Pattern ABBREVIATIONS = Pattern.compile(\".*\\\\(\\\\{[A-Z]+}\\\\).*\");\n+    /** Matches with \"dep\"/\"dip\", case insensitive */\n+    private static final Pattern DEPARTMENTS = Pattern.compile(\"^d[ei]p.*\", Pattern.CASE_INSENSITIVE);\n+    private enum INSTITUTION {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3OTQ5NA==", "bodyText": "I'm not a big fan of the fix... methods (I know you didn't introduced them) and would propose to inline all of them. With a bit of refactoring and extracting AuthorList.parse(authors) this shouldn't introduce that much more code elsewhere.", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430079494", "createdAt": "2020-05-25T21:31:33Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/model/entry/AuthorList.java", "diffHunk": "@@ -227,6 +233,15 @@ public static String fixAuthorFirstNameFirstCommas(String authors, boolean abbr,\n         return AuthorList.parse(authors).getAsFirstLastNames(abbr, oxfordComma);\n     }\n \n+    /**\n+     * This is a convenience method for getAuthorsFirstFirstLatexFree()\n+     *\n+     * @see AuthorList#getAsFirstLastNames\n+     */\n+    public static String fixAuthorFirstNameFirstCommasLatexFree(String authors, boolean abbr, boolean oxfordComma) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MDg0Nw==", "bodyText": "Thanks for adding so many tests. This is really good. I would propose to split them a bit into two categories: tests for parsing and test for representation. The former should take a string and test against a AuthorList. The latter should take a AuthorList and test against a string. In this way, problems can be diagnosed more easily as it is clear in which part of the code the problem occurs.\n(I'm aware that the existing tests also often don't adhere to this splitting...that's the problem with legacy code :( )", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430080847", "createdAt": "2020-05-25T21:39:56Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/model/entry/AuthorListTest.java", "diffHunk": "@@ -31,6 +41,82 @@ public void testFixAuthorNatbib() {\n                         .fixAuthorNatbib(\"John von Neumann and John Smith and Black Brown, Peter\")));\n     }\n \n+    @Test\n+    public void fixAuthorNatbibLatexFreeNullAuthorStringThrowsException() {\n+        assertThrows(NullPointerException.class, () -> AuthorList.fixAuthorNatbibLatexFree(null));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeEmptyAuthorStringForEmptyInput() {\n+        assertEquals(\"\", AuthorList.fixAuthorNatbibLatexFree(\"\"));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeCachesLatexFreeString() {\n+        String cachedString = AuthorList\n+                .fixAuthorNatbibLatexFree(MUHAMMAD_ALKHWARIZMI);\n+        assertSame(cachedString, AuthorList\n+                .fixAuthorNatbibLatexFree(MUHAMMAD_ALKHWARIZMI));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeOneAuthorNameFromLatex() {\n+        assertEquals(\"al-Khw\u0101rizm\u012b\",\n+                AuthorList.fixAuthorNatbibLatexFree(MUHAMMAD_ALKHWARIZMI));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeTwoAuthorNamesFromLatex() {\n+        assertEquals(\"al-Khw\u0101rizm\u012b and B\u00f6hm\",\n+                AuthorList.fixAuthorNatbibLatexFree(MUHAMMAD_ALKHWARIZMI\n+                + \" and \" + CORRADO_BOHM));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeAuthorEtAlFromLatex() {\n+        assertEquals(\"al-Khw\u0101rizm\u012b et al.\",\n+                AuthorList.fixAuthorNatbibLatexFree(MUHAMMAD_ALKHWARIZMI\n+                        + \" and \" + CORRADO_BOHM + \" and \" + KURT_GODEL));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeOneInsitutionNameFromLatex() {\n+        assertEquals(\"The Ban\u016b M\u016bs\u0101 brothers\",\n+                AuthorList.fixAuthorNatbibLatexFree(BANU_MOSA));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeTwoInsitutionNameFromLatex() {\n+        assertEquals(\"The Ban\u016b M\u016bs\u0101 brothers and The Ban\u016b M\u016bs\u0101 brothers\",\n+                AuthorList.fixAuthorNatbibLatexFree(BANU_MOSA\n+                + \" and \" + BANU_MOSA));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeUnicodeMixedAuthorsFromLatex() {\n+        assertEquals(\"The Ban\u016b M\u016bs\u0101 brothers and B\u00f6hm\",\n+                AuthorList.fixAuthorNatbibLatexFree(BANU_MOSA\n+                + \" and \" + CORRADO_BOHM));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeOneInstitutionWithParanthesisAtStart() {\n+        assertEquals(\"\u0141ukasz Micha\u0142\",\n+                AuthorList.fixAuthorNatbibLatexFree(\"{{\\\\L{}}ukasz Micha\\\\l{}}\"));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeAuthorWithEscapedBrackets() {\n+        assertEquals(\"Mic}h{a\u0142\",\n+                AuthorList.fixAuthorNatbibLatexFree(\"{\\\\L{}}ukasz Mic\\\\}h\\\\{a\\\\l{}\"));\n+    }\n+\n+    @Test\n+    public void fixAuthorNatbibLatexFreeInstituteAuthorWithEscapedBrackets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4Mjg2Ng==", "bodyText": "This now has the problem that latex code in other fields such as the title is no longer resolved. I think the isName check needs to be used before getting the field content.", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430082866", "createdAt": "2020-05-25T21:52:53Z", "author": {"login": "tobiasdiez"}, "path": "src/main/java/org/jabref/gui/maintable/BibEntryTableViewModel.java", "diffHunk": "@@ -115,28 +115,27 @@ public BibEntry getEntry() {\n         ObservableValue<String> value = fieldValues.get(fields);\n         if (value != null) {\n             return value;\n-        } else {\n-            value = Bindings.createStringBinding(() -> {\n-                boolean isName = false;\n-\n-                Optional<String> content = Optional.empty();\n-                for (Field field : fields) {\n-                    content = entry.getResolvedFieldOrAliasLatexFree(field, database);\n-                    if (content.isPresent()) {\n-                        isName = field.getProperties().contains(FieldProperty.PERSON_NAMES);\n-                        break;\n-                    }\n-                }\n+        }\n \n-                String result = content.orElse(null);\n-                if (isName) {\n-                    return nameFormatter.formatName(result);\n-                } else {\n-                    return result;\n+        value = Bindings.createStringBinding(() -> {\n+            boolean isName = false;\n+\n+            Optional<String> content = Optional.empty();\n+            for (Field field : fields) {\n+                content = entry.getResolvedFieldOrAlias(field, database);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4MzExMg==", "bodyText": "You can safely ignore the throws Exception for tests (although the intellj warnings are there). In fact, it's good practice to add this to test methods so that the tests don't need to change if you add an exception to the method under test.", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430083112", "createdAt": "2020-05-25T21:54:32Z", "author": {"login": "tobiasdiez"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -996,105 +1042,105 @@ void testcrossrefShorttitleInitials() {\n         database.insertEntry(entry1);\n         entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n \n-        assertEquals(\"GSo\", BibtexKeyGenerator.generateKey(entry1, \"shorttitleINI\", database));\n+        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n     }\n \n     @Test\n-    void generateKeyStripsColonFromTitle() throws Exception {\n+    void generateKeyStripsColonFromTitle() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"Green Scheduling of: Whatever\");\n-        assertEquals(\"GreenSchedulingOfWhatever\", BibtexKeyGenerator.generateKey(entry, \"title\"));\n+        assertEquals(\"GreenSchedulingOfWhatever\", generateKey(entry, \"title\"));\n     }\n \n     @Test\n-    void generateKeyStripsApostropheFromTitle() throws Exception {\n+    void generateKeyStripsApostropheFromTitle() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"Green Scheduling of `Whatever`\");\n-        assertEquals(\"GreenSchedulingofWhatever\", BibtexKeyGenerator.generateKey(entry, \"title\"));\n+        assertEquals(\"GreenSchedulingofWhatever\", generateKey(entry, \"title\"));\n     }\n \n     @Test\n-    void generateKeyWithOneModifier() throws Exception {\n+    void generateKeyWithOneModifier() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"The Interesting Title\");\n-        assertEquals(\"theinterestingtitle\", BibtexKeyGenerator.generateKey(entry, \"title:lower\"));\n+        assertEquals(\"theinterestingtitle\", generateKey(entry, \"title:lower\"));\n     }\n \n     @Test\n-    void generateKeyWithTwoModifiers() throws Exception {\n+    void generateKeyWithTwoModifiers() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"The Interesting Title\");\n-        assertEquals(\"theinterestingtitle\", BibtexKeyGenerator.generateKey(entry, \"title:lower:(_)\"));\n+        assertEquals(\"theinterestingtitle\", generateKey(entry, \"title:lower:(_)\"));\n     }\n \n     @Test\n-    void generateKeyWithTitleCapitalizeModifier() throws Exception {\n+    void generateKeyWithTitleCapitalizeModifier() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"the InTeresting title longer than THREE words\");\n-        assertEquals(\"TheInterestingTitleLongerThanThreeWords\", BibtexKeyGenerator.generateKey(entry, \"title:capitalize\"));\n+        assertEquals(\"TheInterestingTitleLongerThanThreeWords\", generateKey(entry, \"title:capitalize\"));\n     }\n \n     @Test\n-    void generateKeyWithShortTitleCapitalizeModifier() throws Exception {\n+    void generateKeyWithShortTitleCapitalizeModifier() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"the InTeresting title longer than THREE words\");\n-        assertEquals(\"InterestingTitleLonger\", BibtexKeyGenerator.generateKey(entry, \"shorttitle:capitalize\"));\n+        assertEquals(\"InterestingTitleLonger\", generateKey(entry, \"shorttitle:capitalize\"));\n     }\n \n     @Test\n-    void generateKeyWithTitleTitleCaseModifier() throws Exception {\n+    void generateKeyWithTitleTitleCaseModifier() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"A title WITH some of The key words\");\n-        assertEquals(\"ATitlewithSomeoftheKeyWords\", BibtexKeyGenerator.generateKey(entry, \"title:titlecase\"));\n+        assertEquals(\"ATitlewithSomeoftheKeyWords\", generateKey(entry, \"title:titlecase\"));\n     }\n \n     @Test\n-    void generateKeyWithShortTitleTitleCaseModifier() throws Exception {\n+    void generateKeyWithShortTitleTitleCaseModifier() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.TITLE, \"the InTeresting title longer than THREE words\");\n-        assertEquals(\"InterestingTitleLonger\", BibtexKeyGenerator.generateKey(entry, \"shorttitle:titlecase\"));\n+        assertEquals(\"InterestingTitleLonger\", generateKey(entry, \"shorttitle:titlecase\"));\n     }\n \n     @Test\n-    void generateKeyWithTitleSentenceCaseModifier() throws Exception {\n+    void generateKeyWithTitleSentenceCaseModifier() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 549}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODg4NjQ5", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-417888649", "createdAt": "2020-05-25T22:14:01Z", "commit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjoxNDowMVrOGaKXZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjoxNzoyNlrOGaKZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4NTk5MA==", "bodyText": "We normally try to avoid abbreviations. How ironic... \ud83d\ude09\nBut I can see that this particular abbreviation was used before in other places in this class too, so never mind.\nIf you like, change it in all places in this class.", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430085990", "createdAt": "2020-05-25T22:14:01Z", "author": {"login": "calixtus"}, "path": "src/main/java/org/jabref/model/entry/AuthorList.java", "diffHunk": "@@ -437,6 +488,17 @@ public String getAsLastNames(boolean oxfordComma) {\n         return authorsLastOnly[abbrInt];\n     }\n \n+    public String getAsLastNamesLatexFree(boolean oxfordComma) {\n+        int abbrInt = oxfordComma ? 0 : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4NjQ4MQ==", "bodyText": "In other test cases you inline the argument for assertEquals.", "url": "https://github.com/JabRef/jabref/pull/6479#discussion_r430086481", "createdAt": "2020-05-25T22:17:26Z", "author": {"login": "calixtus"}, "path": "src/test/java/org/jabref/logic/bibtexkeypattern/BibtexKeyGeneratorTest.java", "diffHunk": "@@ -879,15 +925,15 @@ void keywordNKeywordsSeparatedBySpace() {\n         BibEntry entry = new BibEntry();\n         entry.setField(StandardField.KEYWORDS, \"w1, w2a w2b, w3\");\n \n-        String result = BibtexKeyGenerator.generateKey(entry, \"keyword1\");\n+        String result = generateKey(entry, \"keyword1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55ef8e7bede442fe2de7ab5c453d067205e0befc"}, "originalPosition": 396}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237dc35c4e4723a0c5a3df330a9c8b88503114a4", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/237dc35c4e4723a0c5a3df330a9c8b88503114a4", "committedDate": "2020-05-26T12:10:03Z", "message": "Merge branch 'master' into fix-for-issue-6459"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78fade6b39a45e537932f6ab029795193db7435d", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/78fade6b39a45e537932f6ab029795193db7435d", "committedDate": "2020-05-26T13:15:06Z", "message": "Fix miss-capitalization of enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de984dcfe2956ef77060f47946a1f007cbee3f5", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/3de984dcfe2956ef77060f47946a1f007cbee3f5", "committedDate": "2020-05-26T18:53:45Z", "message": "Fix fields not displayed latex-free"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecac6732788879ed2d2898e48af081fa7397bbfc", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/ecac6732788879ed2d2898e48af081fa7397bbfc", "committedDate": "2020-05-26T19:04:30Z", "message": "Fix in-line methods in MainTableNameFormatter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c4928bbd3b3b051943bccd54e3c88c76231b7d4", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/1c4928bbd3b3b051943bccd54e3c88c76231b7d4", "committedDate": "2020-05-26T20:24:26Z", "message": "Fix in-line of generateKey() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f3f1826287d14d73c924719f32c92ad6dde713", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/55f3f1826287d14d73c924719f32c92ad6dde713", "committedDate": "2020-05-26T21:28:40Z", "message": "Fix separating tests into parsing/representation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6cda69de72610e492f8623df8d8fd44768fe74c", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/e6cda69de72610e492f8623df8d8fd44768fe74c", "committedDate": "2020-05-26T21:32:46Z", "message": "Fix cache check and simplify expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e120fd8b242958c8da3cc6032c97c5dfc1d66d0", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2e120fd8b242958c8da3cc6032c97c5dfc1d66d0", "committedDate": "2020-05-26T21:33:35Z", "message": "Drop inlined methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cc947c23f53087b97a05265a9d735e37cabc689", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/8cc947c23f53087b97a05265a9d735e37cabc689", "committedDate": "2020-05-26T21:45:17Z", "message": "Fix most abbreviated abbreviations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fc9e169282e5f5d9d2b0d1a8b5db452521afac2", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/2fc9e169282e5f5d9d2b0d1a8b5db452521afac2", "committedDate": "2020-05-27T17:43:56Z", "message": "Drop old formatName method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4b39937134920e0adc0947d44183fa476190248", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b4b39937134920e0adc0947d44183fa476190248", "committedDate": "2020-05-27T17:45:23Z", "message": "Refactor formatNameLatexFree\n\nThe author list parsing is moved outside of the if/else statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cb62328bac5bc0dcf48de337de097aee5c54dd9", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/3cb62328bac5bc0dcf48de337de097aee5c54dd9", "committedDate": "2020-05-27T17:48:08Z", "message": "Refactor new parse tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f0d1bbecd6ec1f9de572cb2570b770cd0bd84a", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b3f0d1bbecd6ec1f9de572cb2570b770cd0bd84a", "committedDate": "2020-05-27T21:12:20Z", "message": "Add more parse tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a27bbca52dd44d563d81d876a6f7b22f3a49ad6", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/5a27bbca52dd44d563d81d876a6f7b22f3a49ad6", "committedDate": "2020-05-27T21:28:28Z", "message": "Drop all test cases containing escaped brackets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7578b37f605085afb23068d4a615435cef661b4", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/c7578b37f605085afb23068d4a615435cef661b4", "committedDate": "2020-05-27T21:31:13Z", "message": "Refactor parse with latex tests\n\nMove them close to other parse tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8bf4f374d70dedd9036b5f7ad24edf642f36fae", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/b8bf4f374d70dedd9036b5f7ad24edf642f36fae", "committedDate": "2020-05-27T21:35:08Z", "message": "Fix my own spelling mistakes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc23e29b0c205df2a0f135a80d896cfa4d8cc7ea", "author": {"user": {"login": "k3KAW8Pnf7mkmdSMPHz27", "name": "Jonatan Asketorp"}}, "url": "https://github.com/JabRef/jabref/commit/cc23e29b0c205df2a0f135a80d896cfa4d8cc7ea", "committedDate": "2020-05-28T14:14:57Z", "message": "Refactor abbreviation name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMjI4Njc4", "url": "https://github.com/JabRef/jabref/pull/6479#pullrequestreview-420228678", "createdAt": "2020-05-28T15:26:51Z", "commit": {"oid": "cc23e29b0c205df2a0f135a80d896cfa4d8cc7ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 269, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}