{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjU5MjMz", "number": 172, "title": "[Type Refactor] Move type implementations and mappers to internal package", "bodyText": "In this relatively-simple PR, I move the implementations of the typed tensors (TType) and their mapping method to the internal package as separate objects.\nWhile the reason for doing it might seem unclear at this point, it will make more sense in the next PR where the *Mapper class could be referenced from a new @TensorType annotation. In addition, segregating the implementation classes from their respective interfaces is more scalable for when we'll start supporting different categories of tensors, like sparse and ragged.\nNote that these changes has no impact on the user API and is completely backward compatible.\nCC\\ @deansher", "createdAt": "2020-12-18T03:13:55Z", "url": "https://github.com/tensorflow/java/pull/172", "merged": true, "mergeCommit": {"oid": "04f9d0d184645abda361d7dc0a1e98acb6466c98"}, "closed": true, "closedAt": "2020-12-18T19:15:04Z", "author": {"login": "karllessard"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnPYh3gH2gAyNTQyMjU5MjMzOmY0YjZmZTNmZTUzNDIxZTQxNmI1ZGQ5ZjEzMGRhODYyZjNlNmNhNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdndEEDAH2gAyNTQyMjU5MjMzOjZkZTVlZDJlYWE3MDE5NTFkYjc5MTRjYzAzZDhiNDNmNzA5M2NhZmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f", "author": {"user": {"login": "karllessard", "name": "Karl Lessard"}}, "url": "https://github.com/tensorflow/java/commit/f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f", "committedDate": "2020-12-18T03:15:39Z", "message": "Move type implementations and mappers to internal package"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50ef1576e17363f95229e0168631246794c06752", "author": {"user": {"login": "karllessard", "name": "Karl Lessard"}}, "url": "https://github.com/tensorflow/java/commit/50ef1576e17363f95229e0168631246794c06752", "committedDate": "2020-12-18T03:09:16Z", "message": "Move type implementations and mappers to internal package"}, "afterCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f", "author": {"user": {"login": "karllessard", "name": "Karl Lessard"}}, "url": "https://github.com/tensorflow/java/commit/f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f", "committedDate": "2020-12-18T03:15:39Z", "message": "Move type implementations and mappers to internal package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTQ5OTE3", "url": "https://github.com/tensorflow/java/pull/172#pullrequestreview-555149917", "createdAt": "2020-12-18T03:29:45Z", "commit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzoyOTo0NVrOIIRwRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzo0MjoyNFrOIIR9hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MDQwNA==", "bodyText": "We might want to have this in a different package as the module system operates on a package level (so when we go to 11 we could not export that package). Though it depends how the methods are used.", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545550404", "createdAt": "2020-12-18T03:29:45Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/TensorMapper.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.tensorflow;\n+\n+import org.tensorflow.internal.c_api.TF_Tensor;\n+import org.tensorflow.types.family.TType;\n+\n+/**\n+ * Maps the native memory of a {@link RawTensor} to a n-dimensional typed data space\n+ * accessible from the JVM.\n+ *\n+ * <p>Usage of this class is reserved for internal purposes only.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MTA0NA==", "bodyText": "Maybe ByteArrayProducer? ByteSequencer sounds like it can change the sequence but my reading of the iterator is that the iteration order is fixed.", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545551044", "createdAt": "2020-12-18T03:32:13Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/internal/buffer/ByteSequencer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.tensorflow.internal.buffer;\n+\n+import java.util.Iterator;\n+import java.util.function.Function;\n+import org.tensorflow.ndarray.NdArray;\n+import org.tensorflow.ndarray.NdArraySequence;\n+\n+/**\n+ * Produces sequence of bytes to be stored in a {@link ByteSequenceTensorBuffer}.\n+ *\n+ * @param <T> source of bytes (byte arrays or strings)\n+ */\n+public class ByteSequencer<T> implements Iterable<byte[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MTM2Nw==", "bodyText": "Did you mean to change the access level of mapDense here? It's protected in the super class and the other implementations.", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545551367", "createdAt": "2020-12-18T03:33:28Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/internal/types/TBfloat16Mapper.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.tensorflow.internal.types;\n+\n+import org.tensorflow.TensorMapper;\n+import org.tensorflow.DataType;\n+import org.tensorflow.RawTensor;\n+import org.tensorflow.internal.buffer.TensorBuffers;\n+import org.tensorflow.ndarray.buffer.FloatDataBuffer;\n+import org.tensorflow.ndarray.buffer.layout.DataLayouts;\n+import org.tensorflow.ndarray.impl.dense.FloatDenseNdArray;\n+import org.tensorflow.types.TBfloat16;\n+\n+/**\n+ * Maps memory of {@link org.tensorflow.proto.framework.DataType#DT_BFLOAT16} tensors\n+ * to a n-dimensional data space.\n+ */\n+public class TBfloat16Mapper extends TensorMapper<TBfloat16> {\n+\n+  @Override\n+  public TBfloat16 mapDense(RawTensor tensor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MjAxMA==", "bodyText": "Should we make this final?", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545552010", "createdAt": "2020-12-18T03:35:48Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/internal/types/TInt64Mapper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package org.tensorflow.internal.types;\n+\n+import org.tensorflow.DataType;\n+import org.tensorflow.RawTensor;\n+import org.tensorflow.TensorMapper;\n+import org.tensorflow.internal.buffer.TensorBuffers;\n+import org.tensorflow.ndarray.buffer.LongDataBuffer;\n+import org.tensorflow.ndarray.impl.dense.LongDenseNdArray;\n+import org.tensorflow.types.TInt64;\n+\n+/**\n+ * Maps memory of {@link org.tensorflow.proto.framework.DataType#DT_INT64} tensors\n+ * to a n-dimensional data space.\n+ */\n+public class TInt64Mapper extends TensorMapper<TInt64> {\n+\n+  @Override\n+  protected TInt64 mapDense(RawTensor tensor) {\n+    LongDataBuffer buffer = TensorBuffers.toLongs(nativeHandle(tensor));\n+    return new DenseTInt64(tensor, buffer);\n+  }\n+\n+  private static class DenseTInt64 extends LongDenseNdArray implements TInt64 {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MjA2OQ==", "bodyText": "Should these classes all be final?", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545552069", "createdAt": "2020-12-18T03:35:58Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/internal/types/TInt64Mapper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package org.tensorflow.internal.types;\n+\n+import org.tensorflow.DataType;\n+import org.tensorflow.RawTensor;\n+import org.tensorflow.TensorMapper;\n+import org.tensorflow.internal.buffer.TensorBuffers;\n+import org.tensorflow.ndarray.buffer.LongDataBuffer;\n+import org.tensorflow.ndarray.impl.dense.LongDenseNdArray;\n+import org.tensorflow.types.TInt64;\n+\n+/**\n+ * Maps memory of {@link org.tensorflow.proto.framework.DataType#DT_INT64} tensors\n+ * to a n-dimensional data space.\n+ */\n+public class TInt64Mapper extends TensorMapper<TInt64> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MzczMg==", "bodyText": "Should we explicitly put static final on here? The NAME field is marked as such, and I spent a while looking at this line before I remembered that fields are always static and final on interfaces.", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545553732", "createdAt": "2020-12-18T03:42:06Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/types/TBfloat16.java", "diffHunk": "@@ -54,7 +50,7 @@\n   static final String NAME = \"BFLOAT16\";\n \n   /** Type metadata */\n-  DataType<TBfloat16> DTYPE = DataType.create(NAME, 14, 2, TBfloat16Impl::mapTensor);\n+  DataType<TBfloat16> DTYPE = DataType.create(NAME, 14, 2, new TBfloat16Mapper());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1Mzc5Ng==", "bodyText": "static final?", "url": "https://github.com/tensorflow/java/pull/172#discussion_r545553796", "createdAt": "2020-12-18T03:42:24Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/tensorflow-core-api/src/main/java/org/tensorflow/types/TBool.java", "diffHunk": "@@ -45,7 +46,7 @@\n   static final String NAME = \"BOOL\";\n \n   /** Type metadata */\n-  DataType<TBool> DTYPE = DataType.create(NAME, 10, 1, TBoolImpl::mapTensor);\n+  DataType<TBool> DTYPE = DataType.create(NAME, 10, 1, new TBoolMapper());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b6fe3fe53421e416b5dd9f130da862f3e6ca4f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26fba687d775f81b936b525f2467d0ad881c53fe", "author": {"user": {"login": "karllessard", "name": "Karl Lessard"}}, "url": "https://github.com/tensorflow/java/commit/26fba687d775f81b936b525f2467d0ad881c53fe", "committedDate": "2020-12-18T14:10:14Z", "message": "Mark classes as final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NjYwODMw", "url": "https://github.com/tensorflow/java/pull/172#pullrequestreview-555660830", "createdAt": "2020-12-18T17:03:44Z", "commit": {"oid": "26fba687d775f81b936b525f2467d0ad881c53fe"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6de5ed2eaa701951db7914cc03d8b43f7093cafd", "author": {"user": {"login": "karllessard", "name": "Karl Lessard"}}, "url": "https://github.com/tensorflow/java/commit/6de5ed2eaa701951db7914cc03d8b43f7093cafd", "committedDate": "2020-12-18T19:11:58Z", "message": "Rename ByteSequencer to ByteSequenceProvider"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}