{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2ODkxMDIz", "number": 124, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxMjoyNFrOEp76aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDozNjo1MVrOEp8SWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA4NjgwOnYy", "diffSide": "RIGHT", "path": "RELEASE.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxMjoyNFrOHb6VSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxMjoyNFrOHb6VSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyOTMyMA==", "bodyText": "Incorrect link.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499029320", "createdAt": "2020-10-02T20:12:24Z", "author": {"login": "Craigacp"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA4ODk2OnYy", "diffSide": "RIGHT", "path": "RELEASE.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxMzoxM1rOHb6Wkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxMzoxM1rOHb6Wkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyOTY1MQ==", "bodyText": "Incorrect link.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499029651", "createdAt": "2020-10-02T20:13:13Z", "author": {"login": "Craigacp"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA5MzA4OnYy", "diffSide": "RIGHT", "path": "RELEASE.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxNDo0M1rOHb6ZCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwNDowNTo0N1rOHb_erw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDI4MQ==", "bodyText": "Does any commit to a release branch trigger this?", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499030281", "createdAt": "2020-10-02T20:14:43Z", "author": {"login": "Craigacp"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Switch to the release branch of the version to patch\n+    ```\n+    git checkout r1.0\n+    ```\n+3.  Patch the code with your changes. For example, changes could be merged from another branch you\n+    were working on or be applied directly to this branch when the required changes are minimal.\n+\n+4.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.1\n+    ``` \n+4.  Commit the changes and push the branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.1\"\n+    git push\n+    ```\n+\n+### Building native artifacts\n+\n+Once a release branch (i.e. a branch prefixed by `r`) is pushed on the repository, a workflow will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMjE1OQ==", "bodyText": "Yes, it is assumed that any commit to a release branch is for releasing a version. On a major/minor release, a new branch is created. On a patch release, we push changes on the existing branch for the release we are patching.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499112159", "createdAt": "2020-10-03T03:38:33Z", "author": {"login": "karllessard"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Switch to the release branch of the version to patch\n+    ```\n+    git checkout r1.0\n+    ```\n+3.  Patch the code with your changes. For example, changes could be merged from another branch you\n+    were working on or be applied directly to this branch when the required changes are minimal.\n+\n+4.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.1\n+    ``` \n+4.  Commit the changes and push the branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.1\"\n+    git push\n+    ```\n+\n+### Building native artifacts\n+\n+Once a release branch (i.e. a branch prefixed by `r`) is pushed on the repository, a workflow will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDI4MQ=="}, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzY0Nw==", "bodyText": "Ok. Might be worth explicitly noting that then.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499113647", "createdAt": "2020-10-03T04:05:47Z", "author": {"login": "Craigacp"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Switch to the release branch of the version to patch\n+    ```\n+    git checkout r1.0\n+    ```\n+3.  Patch the code with your changes. For example, changes could be merged from another branch you\n+    were working on or be applied directly to this branch when the required changes are minimal.\n+\n+4.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.1\n+    ``` \n+4.  Commit the changes and push the branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.1\"\n+    git push\n+    ```\n+\n+### Building native artifacts\n+\n+Once a release branch (i.e. a branch prefixed by `r`) is pushed on the repository, a workflow will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDI4MQ=="}, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA5NTQ1OnYy", "diffSide": "RIGHT", "path": "RELEASE.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxNTozNVrOHb6aXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMzozOToyOVrOHb_ZEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDYyMA==", "bodyText": "This link should be something like this - https://github.com/tensorflow/java/blob/master/.github/workflows/ci.yml", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499030620", "createdAt": "2020-10-02T20:15:35Z", "author": {"login": "Craigacp"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Switch to the release branch of the version to patch\n+    ```\n+    git checkout r1.0\n+    ```\n+3.  Patch the code with your changes. For example, changes could be merged from another branch you\n+    were working on or be applied directly to this branch when the required changes are minimal.\n+\n+4.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.1\n+    ``` \n+4.  Commit the changes and push the branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.1\"\n+    git push\n+    ```\n+\n+### Building native artifacts\n+\n+Once a release branch (i.e. a branch prefixed by `r`) is pushed on the repository, a workflow will\n+automatically start in GitHub Actions to build the native artifacts for all supported\n+architures/platforms and deploy them temporarily on OSSRH for staging.\n+\n+There is no user action required for this step other than watching the progress of the GitHub\n+Actions workflow and making sure that all steps have been completed successfully.\n+\n+#### Build native artifacts manually\n+\n+Some platforms cannot be build successfully on GitHub Actions, due to some limits to their resources\n+(e.g. max 6 hours for a job). For this reasons, we need to build manually some of our artifacts on\n+private servers. \n+\n+To do so, follow the same steps as the [CI build](https://github.com/tensorflow/java/.github/workflows/ci.yml) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMjIxMA==", "bodyText": "Wow, I wrote that thing to fast, all broken links are new ones :-/", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499112210", "createdAt": "2020-10-03T03:39:29Z", "author": {"login": "karllessard"}, "path": "RELEASE.md", "diffHunk": "@@ -0,0 +1,221 @@\n+# Releasing TensorFlow Java\n+\n+The\n+[TensorFlow Java API](https://github.com/tensorflow/java) is available on Maven Central and JCenter\n+through artifacts uploaded to\n+[OSS Sonatype](https://oss.sonatype.org/content/repositories/releases/org/tensorflow/) and/or\n+[Bintray](https://bintray.com/google/tensorflow/tensorflow). This\n+document describes the process of updating the release artifacts. It does _not_ describe how to use\n+the artifacts, for which the reader is referred to the\n+[TensorFlow for Java installation instructions](https://github.com/tensorflow/java/blob/master/README.md).\n+\n+## Background\n+\n+TensorFlow source (which is primarily in C++) is built using\n+[bazel](https://bazel.build) and not [maven](https://maven.apache.org/). TensorFlow Java\n+wraps over this native code and thus depends on platform (OS, architecture) specific native code.\n+\n+Hence, the process for building and uploading release artifacts is not a single\n+`mvn deploy` command.\n+\n+## Release process overview\n+\n+The process of releasing TensorFlow Java is split in two major steps:\n+* Building and deploying the native artifacts\n+* Building and deploying all artifacts consolidated\n+\n+The first step is executed on different build servers, each responsible to build the native\n+artifact for a specific architecture and platform. The second step is conducted locally in\n+a [Docker](https://www.docker.com) container for a hermetic release process.\n+\n+### Pre-requisites\n+\n+-   `docker`\n+-   An account at [oss.sonatype.org](https://oss.sonatype.org/), that has\n+    permissions to update artifacts in the `org.tensorflow` group. If your\n+    account does not have permissions, then you'll need to ask someone who does\n+    to [file a ticket](https://issues.sonatype.org/) to add to the permissions\n+    ([sample ticket](https://issues.sonatype.org/browse/MVNCENTRAL-1637)).\n+-   Optionally, an account at [bintray.com](https://bintray.com) that has permissions to\n+    update the [tensorflow repository](https://bintray.com/google/tensorflow).\n+    If your account does not have permissions, then you'll need to ask one of\n+    the [organization administrators](https://bintray.com/google) to give you\n+    permissions to update the `tensorflow` repository. Please keep the\n+    [repository option](https://bintray.com/google/tensorflow/edit?tab=general)\n+    to *\"GPG sign uploaded files using Bintray's public/private key pair\"*\n+    **unchecked**, otherwise it will conflict with locally signed artifacts.\n+-   A GPG signing key, required\n+    [to sign the release artifacts](http://central.sonatype.org/pages/apache-maven.html#gpg-signed-components).\n+\n+### Preparing a release\n+\n+#### Major or minor release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Create a new branch for the release named `r<MajorVersion>.<MinorVersion>`\n+    ```\n+    git checkout -b r1.0\n+    ```\n+3.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.0\n+    ``` \n+4.  Commit the changes and push the new branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.0\"\n+    git push --set-upstream upstream r1.0\n+    ```\n+\n+#### Patch release\n+\n+1.  Get a clean version of the source code by cloning the\n+    [TensorFlow Java GitHub repository](https://github.com/tensorflow-java)\n+    ```\n+    git clone https://github.com/tensorflow/java\n+    ```\n+2.  Switch to the release branch of the version to patch\n+    ```\n+    git checkout r1.0\n+    ```\n+3.  Patch the code with your changes. For example, changes could be merged from another branch you\n+    were working on or be applied directly to this branch when the required changes are minimal.\n+\n+4.  Update the version of the Maven artifacts to the full version of the release\n+    ```\n+    mvn versions:set -DnewVersion=1.0.1\n+    ``` \n+4.  Commit the changes and push the branch to the GitHub repository\n+    ```\n+    git add .\n+    git commit -m \"Releasing 1.0.1\"\n+    git push\n+    ```\n+\n+### Building native artifacts\n+\n+Once a release branch (i.e. a branch prefixed by `r`) is pushed on the repository, a workflow will\n+automatically start in GitHub Actions to build the native artifacts for all supported\n+architures/platforms and deploy them temporarily on OSSRH for staging.\n+\n+There is no user action required for this step other than watching the progress of the GitHub\n+Actions workflow and making sure that all steps have been completed successfully.\n+\n+#### Build native artifacts manually\n+\n+Some platforms cannot be build successfully on GitHub Actions, due to some limits to their resources\n+(e.g. max 6 hours for a job). For this reasons, we need to build manually some of our artifacts on\n+private servers. \n+\n+To do so, follow the same steps as the [CI build](https://github.com/tensorflow/java/.github/workflows/ci.yml) ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDYyMA=="}, "originalCommit": {"oid": "963cdb61129037bd466b1b0ce52134cd254a4458"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEwNDI4OnYy", "diffSide": "RIGHT", "path": "deploy.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoxODo1N1rOHb6fpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNTowOToxNFrOHcCC1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMTk3NQ==", "bodyText": "The comment says it deploys to both bintray and ossrh, but doesn't this line turn off bintray by default?", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499031975", "createdAt": "2020-10-02T20:18:57Z", "author": {"login": "Craigacp"}, "path": "deploy.sh", "diffHunk": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# This script is intended to be run inside a docker container to provide a\n+# hermetic process. See release.sh for the expected invocation.\n+\n+set -e\n+\n+# By default we deploy to both ossrh and bintray. These two\n+# environment variables can be set to skip either repository.\n+DEPLOY_OSSRH=\"${DEPLOY_OSSRH:-true}\"\n+DEPLOY_BINTRAY=\"${DEPLOY_BINTRAY:-false}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMjMxMw==", "bodyText": "I'm thinking now about removing completely support for Bintray. The deployment process I'm putting in place uses exclusively OSSRH so keeping this support for Bintray just bring noise in the scripts.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499112313", "createdAt": "2020-10-03T03:41:20Z", "author": {"login": "karllessard"}, "path": "deploy.sh", "diffHunk": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# This script is intended to be run inside a docker container to provide a\n+# hermetic process. See release.sh for the expected invocation.\n+\n+set -e\n+\n+# By default we deploy to both ossrh and bintray. These two\n+# environment variables can be set to skip either repository.\n+DEPLOY_OSSRH=\"${DEPLOY_OSSRH:-true}\"\n+DEPLOY_BINTRAY=\"${DEPLOY_BINTRAY:-false}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMTk3NQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzYwNQ==", "bodyText": "Maybe commit it with bintray then we can remove it later. That way it's in the repo history and we can get it if necessary.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499113605", "createdAt": "2020-10-03T04:05:05Z", "author": {"login": "Craigacp"}, "path": "deploy.sh", "diffHunk": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# This script is intended to be run inside a docker container to provide a\n+# hermetic process. See release.sh for the expected invocation.\n+\n+set -e\n+\n+# By default we deploy to both ossrh and bintray. These two\n+# environment variables can be set to skip either repository.\n+DEPLOY_OSSRH=\"${DEPLOY_OSSRH:-true}\"\n+DEPLOY_BINTRAY=\"${DEPLOY_BINTRAY:-false}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMTk3NQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NTY2OA==", "bodyText": "It is already there, I'll take care of not squashing the commits on merge and it will remain in history.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499155668", "createdAt": "2020-10-03T15:09:14Z", "author": {"login": "karllessard"}, "path": "deploy.sh", "diffHunk": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# This script is intended to be run inside a docker container to provide a\n+# hermetic process. See release.sh for the expected invocation.\n+\n+set -e\n+\n+# By default we deploy to both ossrh and bintray. These two\n+# environment variables can be set to skip either repository.\n+DEPLOY_OSSRH=\"${DEPLOY_OSSRH:-true}\"\n+DEPLOY_BINTRAY=\"${DEPLOY_BINTRAY:-false}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMTk3NQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEyNzU4OnYy", "diffSide": "RIGHT", "path": "release.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyODo0NVrOHb6uMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyODo0NVrOHb6uMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNTY5Ng==", "bodyText": "Fix the copyright year?", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499035696", "createdAt": "2020-10-02T20:28:45Z", "author": {"login": "Craigacp"}, "path": "release.sh", "diffHunk": "@@ -0,0 +1,55 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEyODEyOnYy", "diffSide": "RIGHT", "path": "deploy.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyODo1OFrOHb6uiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyODo1OFrOHb6uiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNTc4NQ==", "bodyText": "Fix the copyright year?", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499035785", "createdAt": "2020-10-02T20:28:58Z", "author": {"login": "Craigacp"}, "path": "deploy.sh", "diffHunk": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDEzMTUxOnYy", "diffSide": "RIGHT", "path": "tensorflow-core/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDozMDoyMVrOHb6wqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNTowOTozNVrOHcCC7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNjMzMQ==", "bodyText": "Why did this profile get commented out?", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499036331", "createdAt": "2020-10-02T20:30:21Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/pom.xml", "diffHunk": "@@ -480,7 +454,7 @@\n     </profile>\n \n     <!-- Disable platform dependency when building the artifact for the dependency itself -->\n-    <profile>\n+    <!--profile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMjk3NQ==", "bodyText": "Despite the comment, I'm not sure to understand what this profile is used for but I know that the deployment script fails when it is present and everything works fine when it is not.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499112975", "createdAt": "2020-10-03T03:53:59Z", "author": {"login": "karllessard"}, "path": "tensorflow-core/pom.xml", "diffHunk": "@@ -480,7 +454,7 @@\n     </profile>\n \n     <!-- Disable platform dependency when building the artifact for the dependency itself -->\n-    <profile>\n+    <!--profile>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNjMzMQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTExMzUyNg==", "bodyText": "Maybe we should delete it then. We can always pull it out of the history.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499113526", "createdAt": "2020-10-03T04:04:08Z", "author": {"login": "Craigacp"}, "path": "tensorflow-core/pom.xml", "diffHunk": "@@ -480,7 +454,7 @@\n     </profile>\n \n     <!-- Disable platform dependency when building the artifact for the dependency itself -->\n-    <profile>\n+    <!--profile>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNjMzMQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NTY5NQ==", "bodyText": "Yes, that is what I ended up to do.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499155695", "createdAt": "2020-10-03T15:09:35Z", "author": {"login": "karllessard"}, "path": "tensorflow-core/pom.xml", "diffHunk": "@@ -480,7 +454,7 @@\n     </profile>\n \n     <!-- Disable platform dependency when building the artifact for the dependency itself -->\n-    <profile>\n+    <!--profile>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNjMzMQ=="}, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDE0ODA5OnYy", "diffSide": "RIGHT", "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDozNjo1MVrOHb66rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDozNjo1MVrOHb66rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzODg5Mw==", "bodyText": "This comment lost a <.", "url": "https://github.com/tensorflow/java/pull/124#discussion_r499038893", "createdAt": "2020-10-02T20:36:51Z", "author": {"login": "Craigacp"}, "path": "tensorflow-framework/src/main/java/org/tensorflow/framework/data/Dataset.java", "diffHunk": "@@ -255,12 +255,12 @@ public DatasetIterator makeOneShotIterator() {\n \r\n   /**\r\n    * Creates an in-memory `Dataset` whose elements are slices of the given tensors. Each element of\r\n-   * this dataset will be a List<Operand<?>>, representing slices (e.g. batches) of the provided\r\n-   * tensors.\r\n+   * this dataset will be a {@code ListOperand<?>>}, representing slices (e.g. batches) of the\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181e0079d5fcd252efe3ae66620f2d9ca376eec7"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1639, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}