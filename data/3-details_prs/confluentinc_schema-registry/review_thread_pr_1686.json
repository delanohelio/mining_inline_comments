{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNDEwMTI1", "number": 1686, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNzoyMFrOE6uukw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNzoyMFrOE6uukw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDE4NDUxOnYy", "diffSide": "RIGHT", "path": "client/src/test/java/io/confluent/kafka/schemaregistry/client/CachedSchemaRegistryClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNzoyMFrOH1-ksQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozNTowMlrOH1-3HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MTc3Nw==", "bodyText": "Don't you want to try with a different \"value\" to actually see whether toMap mergefunction got executed and indeed replaces a new value? So maybe\nduplicateConfigs.put(\"key\", \"value1\"); duplicateConfigs.put(\"schema.registry.key\", \"value\");", "url": "https://github.com/confluentinc/schema-registry/pull/1686#discussion_r526361777", "createdAt": "2020-11-18T19:27:20Z", "author": {"login": "bhattas"}, "path": "client/src/test/java/io/confluent/kafka/schemaregistry/client/CachedSchemaRegistryClientTest.java", "diffHunk": "@@ -87,6 +87,27 @@ public void testHttpHeaderConfiguration() {\n     verify(restService);\n   }\n \n+  @Test\n+  public void testDuplicateClientNamespaceConfiguration() {\n+    Map<String, String> configs = Collections.singletonMap(\"key\", \"value\");\n+    restService.configure(configs);\n+    expectLastCall();\n+\n+    replay(restService);\n+\n+    Map<String, String> duplicateConfigs = new HashMap<>();\n+    duplicateConfigs.put(\"key\", \"value\");\n+    duplicateConfigs.put(\"schema.registry.key\", \"value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b936132fccc612c2d79eb8801e3b1179f73fcaf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NjQ5Mw==", "bodyText": "Actually the code (existing, replacement) -> replacement isn't really that meaningful, since most of the time the passed in Map will be a HashMap, and the order of traversal is non-deterministic.   I did verify that if a LinkedHashMap with different values is passed, the last value is retained.", "url": "https://github.com/confluentinc/schema-registry/pull/1686#discussion_r526366493", "createdAt": "2020-11-18T19:35:02Z", "author": {"login": "rayokota"}, "path": "client/src/test/java/io/confluent/kafka/schemaregistry/client/CachedSchemaRegistryClientTest.java", "diffHunk": "@@ -87,6 +87,27 @@ public void testHttpHeaderConfiguration() {\n     verify(restService);\n   }\n \n+  @Test\n+  public void testDuplicateClientNamespaceConfiguration() {\n+    Map<String, String> configs = Collections.singletonMap(\"key\", \"value\");\n+    restService.configure(configs);\n+    expectLastCall();\n+\n+    replay(restService);\n+\n+    Map<String, String> duplicateConfigs = new HashMap<>();\n+    duplicateConfigs.put(\"key\", \"value\");\n+    duplicateConfigs.put(\"schema.registry.key\", \"value\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MTc3Nw=="}, "originalCommit": {"oid": "9b936132fccc612c2d79eb8801e3b1179f73fcaf"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1853, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}