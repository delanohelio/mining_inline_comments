{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTI0MDgz", "number": 1532, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjowN1rOENE7nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjoyMlrOENE7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTQ3NzQwOnYy", "diffSide": "LEFT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjowN1rOGvj2yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjowN1rOGvj2yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzcyMw==", "bodyText": "Don't need to sort as keys are already pre-sorted", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523723", "createdAt": "2020-07-09T22:26:07Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1341,14 +1344,36 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n \n   private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n                                             boolean returnDeletedSchemas) {\n+    return sortSchemasByVersion(schemas, returnDeletedSchemas, false);\n+  }\n+\n+  private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n+                                            boolean returnDeletedSchemas,\n+                                            boolean returnLatestOnly) {\n     List<Schema> schemaList = new ArrayList<>();\n+    Schema previousSchema = null;\n     while (schemas.hasNext()) {\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n-      if (returnDeletedSchemas || !schemaValue.isDeleted()) {\n-        schemaList.add(getSchemaEntityFromSchemaValue(schemaValue));\n+      if (!returnDeletedSchemas && schemaValue.isDeleted()) {\n+        continue;\n+      }\n+      Schema schema = getSchemaEntityFromSchemaValue(schemaValue);\n+      if (returnLatestOnly) {\n+        if (previousSchema != null && !schema.getSubject().equals(previousSchema.getSubject())) {\n+          schemaList.add(previousSchema);\n+        }\n+      } else {\n+        schemaList.add(schema);\n+      }\n+      previousSchema = schema;\n+    }\n+    if (returnLatestOnly && previousSchema != null) {\n+      // handle last subject\n+      Schema lastSchema = schemaList.isEmpty() ? null : schemaList.get(schemaList.size() - 1);\n+      if (lastSchema == null || !lastSchema.getSubject().equals(previousSchema.getSubject())) {\n+        schemaList.add(previousSchema);\n       }\n     }\n-    Collections.sort(schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTQ3NzkwOnYy", "diffSide": "LEFT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjoyMlrOGvj3Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjoyMlrOGvj3Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzgxMA==", "bodyText": "Don't need to sort as keys are already pre-sorted", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523810", "createdAt": "2020-07-09T22:26:22Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1358,7 +1383,6 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n       schemaList.add(schemaValue);\n     }\n-    Collections.sort(schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1911, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}