{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzE4OTA4", "number": 1544, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDoxOVrOEQ0Tkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDozOVrOEQ0UAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDY5NjUxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDoxOVrOG1L3qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyODozOFrOG1MFCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ==", "bodyText": "Do we need this default ?", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422185", "createdAt": "2020-07-21T22:20:19Z", "author": {"login": "dragosvictor"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyNTQ2Mg==", "bodyText": "yes, otherwise other clients in different repo which are dependent on it will fail. Thanks to @rayokota for suggesting this approach.", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458425462", "createdAt": "2020-07-21T22:28:20Z", "author": {"login": "maverick64"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ=="}, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyNTYwOA==", "bodyText": "same for others below.", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458425608", "createdAt": "2020-07-21T22:28:38Z", "author": {"login": "maverick64"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjE4NQ=="}, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDY5Njk0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDoyN1rOG1L34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDoyN1rOG1L34g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI0Mg==", "bodyText": "Do we need this default ?", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422242", "createdAt": "2020-07-21T22:20:27Z", "author": {"login": "dragosvictor"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDY5NzM2OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDozNVrOG1L4GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDozNVrOG1L4GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI5Ng==", "bodyText": "Do we need this default ?", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422296", "createdAt": "2020-07-21T22:20:35Z", "author": {"login": "dragosvictor"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(String subject, String version)\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(subject, version, false);\n+  }\n \n-  public Integer deleteSchemaVersion(\n+  public default Integer deleteSchemaVersion(\n+          String subject,\n+          String version,\n+          boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDY5NzYzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDozOVrOG1L4OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoyMDozOVrOG1L4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjMyOA==", "bodyText": "Do we need this default ?", "url": "https://github.com/confluentinc/schema-registry/pull/1544#discussion_r458422328", "createdAt": "2020-07-21T22:20:39Z", "author": {"login": "dragosvictor"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -146,19 +146,56 @@ default int getId(String subject, org.apache.avro.Schema schema)\n \n   int getId(String subject, ParsedSchema schema) throws IOException, RestClientException;\n \n-  public List<Integer> deleteSubject(String subject) throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject) throws IOException,\n+          RestClientException {\n+    return deleteSubject(subject, false);\n+  }\n \n-  public List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n \n-  public Integer deleteSchemaVersion(String subject, String version)\n-      throws IOException, RestClientException;\n+  public default List<Integer> deleteSubject(Map<String, String> requestProperties, String subject)\n+      throws IOException, RestClientException {\n+    return deleteSubject(requestProperties, subject, false);\n+  }\n+\n+  public default List<Integer> deleteSubject(Map<String,\n+          String> requestProperties, String subject, boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(String subject, String version)\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(subject, version, false);\n+  }\n \n-  public Integer deleteSchemaVersion(\n+  public default Integer deleteSchemaVersion(\n+          String subject,\n+          String version,\n+          boolean isPermanent)\n+          throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  public default Integer deleteSchemaVersion(\n       Map<String, String> requestProperties,\n       String subject,\n       String version)\n-      throws IOException, RestClientException;\n+      throws IOException, RestClientException {\n+    return deleteSchemaVersion(requestProperties, subject, version, false);\n+  }\n+\n+  public default Integer deleteSchemaVersion(\n+      Map<String, String> requestProperties,\n+      String subject,\n+      String version,\n+      boolean isPermanent)\n+      throws IOException, RestClientException {\n+    throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60efcf7e3d55a894d3c536f9b5c51bc96b1a31a"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1914, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}