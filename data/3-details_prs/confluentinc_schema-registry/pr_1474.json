{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzQ0OTAz", "number": 1474, "title": "Add validate action for SR maven plugin", "bodyText": "This adds a validate action so that errors can be seen locally.", "createdAt": "2020-05-26T17:25:05Z", "url": "https://github.com/confluentinc/schema-registry/pull/1474", "merged": true, "mergeCommit": {"oid": "c4c5e200e9bbadec0de0c5fa697424dcf96abf16"}, "closed": true, "closedAt": "2020-05-26T18:38:24Z", "author": {"login": "rayokota"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclIDEEAH2gAyNDIzMzQ0OTAzOjZmZTNkZDUzYmQyYWE0ZGNiNzhkODJmMmY3Yzg4MTdmNTA5Yjg0ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclMVIGgFqTQxODcxNjE1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6fe3dd53bd2aa4dcb78d82f2f7c8817f509b84ea", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/6fe3dd53bd2aa4dcb78d82f2f7c8817f509b84ea", "committedDate": "2020-05-26T17:23:52Z", "message": "Add validate action for SR maven plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NTY4NzE1", "url": "https://github.com/confluentinc/schema-registry/pull/1474#pullrequestreview-418568715", "createdAt": "2020-05-26T18:31:35Z", "commit": {"oid": "6fe3dd53bd2aa4dcb78d82f2f7c8817f509b84ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzE2MTUz", "url": "https://github.com/confluentinc/schema-registry/pull/1474#pullrequestreview-418716153", "createdAt": "2020-05-26T22:14:43Z", "commit": {"oid": "6fe3dd53bd2aa4dcb78d82f2f7c8817f509b84ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjoxNToxNlrOGayIDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjoxNToxNlrOGayIDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczNzQyMA==", "bodyText": "This is a pretty simple class, is there a reason there isn't at least one basic test for it included in this PR? The other mojos seem to have tests already.", "url": "https://github.com/confluentinc/schema-registry/pull/1474#discussion_r430737420", "createdAt": "2020-05-26T22:15:16Z", "author": {"login": "ewencp"}, "path": "maven-plugin/src/main/java/io/confluent/kafka/schemaregistry/maven/ValidateSchemaRegistryMojo.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.confluent.kafka.schemaregistry.maven;\n+\n+import io.confluent.kafka.schemaregistry.ParsedSchema;\n+import io.confluent.kafka.schemaregistry.client.rest.exceptions.RestClientException;\n+import java.io.IOException;\n+import java.util.Map;\n+import org.apache.maven.plugins.annotations.Mojo;\n+\n+@Mojo(name = \"validate\", configurator = \"custom-basic\")\n+public class ValidateSchemaRegistryMojo extends UploadSchemaRegistryMojo {\n+\n+  @Override\n+  protected boolean processSchema(String subject,\n+                                  ParsedSchema schema,\n+                                  Map<String, Integer> schemaVersions)\n+      throws IOException, RestClientException {\n+\n+    if (getLog().isDebugEnabled()) {\n+      getLog().debug(\n+          String.format(\"Calling validate('%s', '%s')\", subject, schema)\n+      );\n+    }\n+\n+    schema.validate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fe3dd53bd2aa4dcb78d82f2f7c8817f509b84ea"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4479, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}