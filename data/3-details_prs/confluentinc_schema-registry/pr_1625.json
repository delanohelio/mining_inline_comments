{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NTY1NzQy", "number": 1625, "title": "DG-410 Fix doc/defaults in Avro converter", "bodyText": "Related Jira ticket: https://confluentinc.atlassian.net/browse/DG-410\nRelated Issue: #1042\nCo-authored-by: @dcsobral", "createdAt": "2020-09-11T23:38:16Z", "url": "https://github.com/confluentinc/schema-registry/pull/1625", "merged": true, "mergeCommit": {"oid": "37ba225f0f33c5552539f7807f629a7eccc9fdaf"}, "closed": true, "closedAt": "2020-09-24T21:44:42Z", "author": {"login": "xiaoyali97"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI3wWQgBqjM3NjQ4NTE3MDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdME3AtAH2gAyNDg1NTY1NzQyOmYyYzMxNjc3N2FlMmYyNWEyZmUwZDQwMmU1OTRmNjU1MzNmOTJmODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edb2b39936777559079e23a87d783cbfc9e44b35", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/edb2b39936777559079e23a87d783cbfc9e44b35", "committedDate": "2020-09-14T16:55:36Z", "message": "fix test filename typo"}, "afterCommit": {"oid": "cde07b12a51d140121294e82867682729af3213c", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/cde07b12a51d140121294e82867682729af3213c", "committedDate": "2020-09-14T18:45:53Z", "message": "fix test filename typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDYzOTk2", "url": "https://github.com/confluentinc/schema-registry/pull/1625#pullrequestreview-489063996", "createdAt": "2020-09-15T20:56:04Z", "commit": {"oid": "cde07b12a51d140121294e82867682729af3213c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMDo1NjowNFrOHSUOig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMDo1OTo1OVrOHSUWUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk2NzgxOA==", "bodyText": "We should keep the doc calls in this test and modify what we expect.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r488967818", "createdAt": "2020-09-15T20:56:04Z", "author": {"login": "rayokota"}, "path": "avro-data/src/test/java/io/confluent/connect/avro/AvroDataTest.java", "diffHunk": "@@ -503,22 +490,35 @@ public void testFromConnectComplexWithDefaults() {\n     org.apache.avro.Schema avroSchema = org.apache.avro.SchemaBuilder\n         .record(AvroData.DEFAULT_SCHEMA_NAME).namespace(AvroData.NAMESPACE) // default values\n         .fields()\n-        .name(\"int8\").doc(\"int8 field\").type(int8Schema).withDefault(2)\n-        .name(\"int16\").doc(\"int16 field\").type(int16Schema).withDefault(12)\n-        .name(\"int32\").doc(\"int32 field\").type(int32Schema).withDefault(12)\n-        .name(\"int64\").doc(\"int64 field\").type(int64Schema).withDefault(12L)\n-        .name(\"float32\").doc(\"float32 field\").type(float32Schema).withDefault(12.2f)\n-        .name(\"float64\").doc(\"float64 field\").type(float64Schema).withDefault(12.2)\n-        .name(\"boolean\").doc(\"bool field\").type(boolSchema).withDefault(true)\n-        .name(\"string\").doc(\"string field\").type(stringSchema).withDefault(\"foo\")\n-        .name(\"bytes\").doc(\"bytes field\").type(bytesSchema).withDefault(ByteBuffer.wrap(\"foo\".getBytes()))\n+        .name(\"int8\").type(int8Schema).withDefault(2)\n+        .name(\"int16\").type(int16Schema).withDefault(12)\n+        .name(\"int32\").type(int32Schema).withDefault(12)\n+        .name(\"int64\").type(int64Schema).withDefault(12L)\n+        .name(\"float32\").type(float32Schema).withDefault(12.2f)\n+        .name(\"float64\").type(float64Schema).withDefault(12.2)\n+        .name(\"boolean\").type(boolSchema).withDefault(true)\n+        .name(\"string\").type(stringSchema).withDefault(\"foo\")\n+        .name(\"bytes\").type(bytesSchema).withDefault(ByteBuffer.wrap(\"foo\".getBytes()))\n         .name(\"array\").type(arraySchema).withDefault(Arrays.asList(\"a\", \"b\", \"c\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde07b12a51d140121294e82867682729af3213c"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk2Nzg2OQ==", "bodyText": "Same", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r488967869", "createdAt": "2020-09-15T20:56:14Z", "author": {"login": "rayokota"}, "path": "avro-data/src/test/java/io/confluent/connect/avro/AvroDataTest.java", "diffHunk": "@@ -503,22 +490,35 @@ public void testFromConnectComplexWithDefaults() {\n     org.apache.avro.Schema avroSchema = org.apache.avro.SchemaBuilder\n         .record(AvroData.DEFAULT_SCHEMA_NAME).namespace(AvroData.NAMESPACE) // default values\n         .fields()\n-        .name(\"int8\").doc(\"int8 field\").type(int8Schema).withDefault(2)\n-        .name(\"int16\").doc(\"int16 field\").type(int16Schema).withDefault(12)\n-        .name(\"int32\").doc(\"int32 field\").type(int32Schema).withDefault(12)\n-        .name(\"int64\").doc(\"int64 field\").type(int64Schema).withDefault(12L)\n-        .name(\"float32\").doc(\"float32 field\").type(float32Schema).withDefault(12.2f)\n-        .name(\"float64\").doc(\"float64 field\").type(float64Schema).withDefault(12.2)\n-        .name(\"boolean\").doc(\"bool field\").type(boolSchema).withDefault(true)\n-        .name(\"string\").doc(\"string field\").type(stringSchema).withDefault(\"foo\")\n-        .name(\"bytes\").doc(\"bytes field\").type(bytesSchema).withDefault(ByteBuffer.wrap(\"foo\".getBytes()))\n+        .name(\"int8\").type(int8Schema).withDefault(2)\n+        .name(\"int16\").type(int16Schema).withDefault(12)\n+        .name(\"int32\").type(int32Schema).withDefault(12)\n+        .name(\"int64\").type(int64Schema).withDefault(12L)\n+        .name(\"float32\").type(float32Schema).withDefault(12.2f)\n+        .name(\"float64\").type(float64Schema).withDefault(12.2)\n+        .name(\"boolean\").type(boolSchema).withDefault(true)\n+        .name(\"string\").type(stringSchema).withDefault(\"foo\")\n+        .name(\"bytes\").type(bytesSchema).withDefault(ByteBuffer.wrap(\"foo\".getBytes()))\n         .name(\"array\").type(arraySchema).withDefault(Arrays.asList(\"a\", \"b\", \"c\"))\n         .name(\"map\").type(mapSchema).withDefault(Collections.singletonMap(\"field\", 1))\n-        .name(\"date\").doc(\"date field\").type(dateSchema).withDefault(dateDefVal)\n-        .name(\"time\").doc(\"time field\").type(timeSchema).withDefault(timeDefVal)\n-        .name(\"ts\").doc(\"ts field\").type(tsSchema).withDefault(tsDefVal)\n-        .name(\"decimal\").doc(\"decimal field\").type(decimalSchema).withDefault(ByteBuffer.wrap(decimalDefVal))\n+        .name(\"date\").type(dateSchema).withDefault(dateDefVal)\n+        .name(\"time\").type(timeSchema).withDefault(timeDefVal)\n+        .name(\"ts\").type(tsSchema).withDefault(tsDefVal)\n+        .name(\"decimal\").type(decimalSchema).withDefault(ByteBuffer.wrap(decimalDefVal))\n         .endRecord();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde07b12a51d140121294e82867682729af3213c"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk2OTgwOA==", "bodyText": "I think we still need tests to cover record-level docs from Connect schema to Avro schema.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r488969808", "createdAt": "2020-09-15T20:59:59Z", "author": {"login": "rayokota"}, "path": "avro-data/src/test/java/io/confluent/connect/avro/AvroDataTest.java", "diffHunk": "@@ -736,8 +735,8 @@ public void testFromConnectOptionalPrimitiveWithMetadata() {\n   @Test\n   public void testFromConnectRecordWithMetadata() {\n     Schema schema = SchemaBuilder.struct()\n-        .name(\"io.confluent.test.TestSchema\").version(12).doc(\"doc\")\n-        .field(\"int32\", Schema.INT32_SCHEMA)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde07b12a51d140121294e82867682729af3213c"}, "originalPosition": 158}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c04a7f810accc7e1a442e1663422504d3d2dc701", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/c04a7f810accc7e1a442e1663422504d3d2dc701", "committedDate": "2020-09-16T22:45:19Z", "message": "revert the fix"}, "afterCommit": {"oid": "ac0248ba551dde9fbd4cb07d9f0f22f806abce0b", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/ac0248ba551dde9fbd4cb07d9f0f22f806abce0b", "committedDate": "2020-09-17T18:42:44Z", "message": "update AvroDataTest.java to reflect change for doc handling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac0248ba551dde9fbd4cb07d9f0f22f806abce0b", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/ac0248ba551dde9fbd4cb07d9f0f22f806abce0b", "committedDate": "2020-09-17T18:42:44Z", "message": "update AvroDataTest.java to reflect change for doc handling"}, "afterCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d", "committedDate": "2020-09-22T23:23:25Z", "message": "add change for handling default value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODkxNzEw", "url": "https://github.com/confluentinc/schema-registry/pull/1625#pullrequestreview-494891710", "createdAt": "2020-09-23T17:33:10Z", "commit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzozMzoxMFrOHW5QkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMDoxMVrOHW6QGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2ODg0OQ==", "bodyText": "We don't need this null check since it is already performed a few lines above.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493768849", "createdAt": "2020-09-23T17:33:10Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -779,10 +783,18 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n               symbols.add(entry.getValue());\n             }\n           }\n+          String enumDoc = null;\n+          String enumDefault = null;\n+          if (schema.parameters() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3MTYxMA==", "bodyText": "Change to\nString fieldDoc = schema.parameters() != null ? schema.parameters().getOrDefault(AVRO_FIELD_DOC_PREFIX_PROP + field.name(), null) : null;\nWe check for != null for consistency with other parts of the code.\nPerforming get after containsKey is generally an anti-pattern.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493771610", "createdAt": "2020-09-23T17:38:01Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -871,7 +885,10 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n           }\n           List<org.apache.avro.Schema.Field> fields = new ArrayList<>();\n           for (Field field : schema.fields()) {\n-            addAvroRecordField(fields, field.name(), field.schema(), fromConnectContext);\n+            String fieldDoc = schema.parameters() == null ? null :\n+                (schema.parameters().containsKey(AVRO_FIELD_DOC_PREFIX_PROP + field.name())\n+                    ? schema.parameters().get(AVRO_FIELD_DOC_PREFIX_PROP + field.name()) : null);\n+            addAvroRecordField(fields, field.name(), field.schema(), fromConnectContext, fieldDoc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NTk3NQ==", "bodyText": "Let's switch fromConnectContext and fieldDoc so that fromConnectContext is last.  Generally we want context objects to always be the first or last parameter.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493775975", "createdAt": "2020-09-23T17:45:32Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -1020,7 +1043,8 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n   private void addAvroRecordField(\n       List<org.apache.avro.Schema.Field> fields,\n       String fieldName, Schema fieldSchema,\n-      FromConnectContext fromConnectContext) {\n+      FromConnectContext fromConnectContext,\n+      String fieldDoc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NzUyOA==", "bodyText": "Let's merge this method with parametersFromConnect by just adding the check for AVRO_FIELD_DEFAULT_FLAG_PROP to parametersFromConnect and removing this method.", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493777528", "createdAt": "2020-09-23T17:48:09Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -1169,6 +1193,16 @@ private static JsonNode defaultValueFromConnect(Schema schema, Object value) {\n     }\n   }\n \n+  private static JsonNode parametersFromConncetWithoutAvroDefaultFlag(Map<String, String> params) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MDAyOQ==", "bodyText": "Can this TODO be removed?", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493780029", "createdAt": "2020-09-23T17:52:08Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -1745,14 +1791,11 @@ private Schema toConnectSchema(org.apache.avro.Schema schema,\n                                 + schema.getType().getName() + \".\");\n     }\n \n-    String docVal = docDefaultVal != null ? docDefaultVal :\n-        (schema.getDoc() != null ? schema.getDoc() : schema.getProp(CONNECT_DOC_PROP));\n-    if (docVal != null) {\n+    String docVal = schema.getProp(CONNECT_DOC_PROP);\n+    if (connectMetaData && docVal != null) {\n       builder.doc(docVal);\n     }\n-    if (connectMetaData && schema.getDoc() != null) {\n-      builder.parameter(CONNECT_RECORD_DOC_PROP, schema.getDoc());\n-    }\n+    //todo: handle connect default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NTExMg==", "bodyText": "Simplify to\n    Object connectDefault = schema.getObjectProp(CONNECT_DEFAULT_VALUE_PROP);\n    if (fieldDefaultVal == null) {\n      fieldDefaultVal = JacksonUtils.toJsonNode(connectDefault);\n    } else if (connectDefault == null) {\n      builder.parameter(AVRO_FIELD_DEFAULT_FLAG_PROP, \"true\");\n    }", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493785112", "createdAt": "2020-09-23T18:00:11Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -1805,6 +1848,9 @@ private Schema toConnectSchema(org.apache.avro.Schema schema,\n       }\n     }\n \n+    if (fieldDefaultVal != null && schema.getObjectProp(CONNECT_DEFAULT_VALUE_PROP) == null) {\n+      builder.parameter(AVRO_FIELD_DEFAULT_FLAG_PROP, \"true\");\n+    }\n     if (fieldDefaultVal == null) {\n       fieldDefaultVal = JacksonUtils.toJsonNode(schema.getObjectProp(CONNECT_DEFAULT_VALUE_PROP));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 201}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTIzMzk0", "url": "https://github.com/confluentinc/schema-registry/pull/1625#pullrequestreview-494923394", "createdAt": "2020-09-23T18:14:44Z", "commit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxNDo0NVrOHW6xeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxNDo0NVrOHW6xeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5MzY1Ng==", "bodyText": "We should probably leave this as defaultValueFromConnect", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493793656", "createdAt": "2020-09-23T18:14:45Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -891,11 +908,17 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n                              JsonNodeFactory.instance.numberNode(schema.version()));\n         }\n         if (schema.parameters() != null) {\n-          baseSchema.addProp(CONNECT_PARAMETERS_PROP, parametersFromConnect(schema.parameters()));\n+          JsonNode params = parametersFromConncetWithoutAvroDefaultFlag(schema.parameters());\n+          if (!params.isEmpty()) {\n+            baseSchema.addProp(CONNECT_PARAMETERS_PROP, params);\n+          }\n         }\n         if (schema.defaultValue() != null) {\n-          baseSchema.addProp(CONNECT_DEFAULT_VALUE_PROP,\n-                             defaultValueFromConnect(schema, schema.defaultValue()));\n+          if (schema.parameters() == null\n+              || !schema.parameters().containsKey(AVRO_FIELD_DEFAULT_FLAG_PROP)) {\n+            baseSchema.addProp(CONNECT_DEFAULT_VALUE_PROP,\n+                defaultValueToConnect(schema, schema.defaultValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDYzMzQ5", "url": "https://github.com/confluentinc/schema-registry/pull/1625#pullrequestreview-495063349", "createdAt": "2020-09-23T21:31:07Z", "commit": {"oid": "42ed392f5ac248698ae7996cd3ce272801ba5540"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMTozMTowN1rOHXBsww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMTozNjozMVrOHXB1wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwNzEzOQ==", "bodyText": "I think this can just be get()", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493907139", "createdAt": "2020-09-23T21:31:07Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -779,10 +783,15 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n               symbols.add(entry.getValue());\n             }\n           }\n+          String enumDoc = schema.parameters()\n+              .getOrDefault(AVRO_ENUM_DOC_PREFIX_PROP + name, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42ed392f5ac248698ae7996cd3ce272801ba5540"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwNzE2NA==", "bodyText": "I think this can just be get()", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493907164", "createdAt": "2020-09-23T21:31:12Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -779,10 +783,15 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n               symbols.add(entry.getValue());\n             }\n           }\n+          String enumDoc = schema.parameters()\n+              .getOrDefault(AVRO_ENUM_DOC_PREFIX_PROP + name, null);\n+          String enumDefault = schema.parameters()\n+              .getOrDefault(AVRO_ENUM_DEFAULT_PREFIX_PROP + name, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42ed392f5ac248698ae7996cd3ce272801ba5540"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwNzM5Mw==", "bodyText": "I think this can just be get()", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493907393", "createdAt": "2020-09-23T21:31:45Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -871,7 +882,11 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n           }\n           List<org.apache.avro.Schema.Field> fields = new ArrayList<>();\n           for (Field field : schema.fields()) {\n-            addAvroRecordField(fields, field.name(), field.schema(), fromConnectContext);\n+            String fieldDoc = schema.parameters() != null\n+                ? schema.parameters()\n+                  .getOrDefault(AVRO_FIELD_DOC_PREFIX_PROP + field.name(), null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42ed392f5ac248698ae7996cd3ce272801ba5540"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTQ0MQ==", "bodyText": "todo:  remove todo :)", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r493909441", "createdAt": "2020-09-23T21:36:31Z", "author": {"login": "rayokota"}, "path": "avro-data/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -1745,14 +1791,11 @@ private Schema toConnectSchema(org.apache.avro.Schema schema,\n                                 + schema.getType().getName() + \".\");\n     }\n \n-    String docVal = docDefaultVal != null ? docDefaultVal :\n-        (schema.getDoc() != null ? schema.getDoc() : schema.getProp(CONNECT_DOC_PROP));\n-    if (docVal != null) {\n+    String docVal = schema.getProp(CONNECT_DOC_PROP);\n+    if (connectMetaData && docVal != null) {\n       builder.doc(docVal);\n     }\n-    if (connectMetaData && schema.getDoc() != null) {\n-      builder.parameter(CONNECT_RECORD_DOC_PROP, schema.getDoc());\n-    }\n+    //todo: handle connect default", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MDAyOQ=="}, "originalCommit": {"oid": "f8c7fc480670f7e6b0a7f704b5768fc8bd69af3d"}, "originalPosition": 188}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ae5cf7e99382c76afab38f7e4da48cd670a7900", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/5ae5cf7e99382c76afab38f7e4da48cd670a7900", "committedDate": "2020-09-23T23:51:27Z", "message": "AvroData.toConnectSchema(): stop propagate the schema's doc to the field's doc\nAvroData.fromConnectSchema(): stop adding schema's doc to property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fa6423deb8fd37ae544a51477a9a21fbd634c24", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/1fa6423deb8fd37ae544a51477a9a21fbd634c24", "committedDate": "2020-09-23T23:51:38Z", "message": "update test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "745dcc8620ce900fa2603dcee1aa9acf091a7174", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/745dcc8620ce900fa2603dcee1aa9acf091a7174", "committedDate": "2020-09-23T23:51:38Z", "message": "fix test filename typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4590d626239421ee83464b781c8bce70478a532", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/f4590d626239421ee83464b781c8bce70478a532", "committedDate": "2020-09-23T23:52:02Z", "message": "revert the fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4ea4723baeaf2a81b3736c27b212b4f15f76d26", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/c4ea4723baeaf2a81b3736c27b212b4f15f76d26", "committedDate": "2020-09-23T23:53:07Z", "message": "adopt tests from @dcsobral"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5810c23ee7d2337e781fbc026adf1b08cfbc1735", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/5810c23ee7d2337e781fbc026adf1b08cfbc1735", "committedDate": "2020-09-23T23:53:12Z", "message": "use avro.* properties to preserve AVRO Schema's doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29a1a639247b7912fb461a0e0be9790344557340", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/29a1a639247b7912fb461a0e0be9790344557340", "committedDate": "2020-09-23T23:53:12Z", "message": "update AvroDataTest.java to reflect change for doc handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96470430f9d493d437c5aaa93b4bddf1af01875", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/e96470430f9d493d437c5aaa93b4bddf1af01875", "committedDate": "2020-09-23T23:53:12Z", "message": "style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f3e11b067bbdf4cf9af8c27e12d5267855472c3", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/8f3e11b067bbdf4cf9af8c27e12d5267855472c3", "committedDate": "2020-09-23T23:53:13Z", "message": "change AVRO_ENUM_DOC_PROP to AVRO_ENUM_DOC_PREFIX_PROP, update related test; also add check for connectMetadata boolean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e006bcab46d43de5a9ede78526b4be076fc7ce4e", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/e006bcab46d43de5a9ede78526b4be076fc7ce4e", "committedDate": "2020-09-23T23:53:13Z", "message": "update AdditionalAvroDataTest.testRepeatedTypeWithDefault()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f9af8cc1669d791a6846736e4c94c56f25fb090", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/8f9af8cc1669d791a6846736e4c94c56f25fb090", "committedDate": "2020-09-23T23:53:13Z", "message": "update test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08eb9bf01c3c175bdd9061ad4b8b2b9c2842a3d9", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/08eb9bf01c3c175bdd9061ad4b8b2b9c2842a3d9", "committedDate": "2020-09-23T23:53:13Z", "message": "add change for handling default value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37d7f7a7e743f40040896a77971da6a3f8ecf545", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/37d7f7a7e743f40040896a77971da6a3f8ecf545", "committedDate": "2020-09-23T23:53:13Z", "message": "polishing code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65cfb6f53cea652f29bd9a229f33fa93b154bd6e", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/65cfb6f53cea652f29bd9a229f33fa93b154bd6e", "committedDate": "2020-09-23T23:53:13Z", "message": "handle type conversion in defaultValueFromConnect(), remove defaultValueToConnect() method, then update related test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dae3a4bc164d52fbf07662a986b9abef3afc995e", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/dae3a4bc164d52fbf07662a986b9abef3afc995e", "committedDate": "2020-09-23T23:53:14Z", "message": "style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0506c660a284da01a04d5f073d95c0999a6f32c", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/e0506c660a284da01a04d5f073d95c0999a6f32c", "committedDate": "2020-09-23T23:53:14Z", "message": "polishing code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f10341b0db8b0909e7a698a0ea026c7f113dad3", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/7f10341b0db8b0909e7a698a0ea026c7f113dad3", "committedDate": "2020-09-23T21:46:11Z", "message": "style fix"}, "afterCommit": {"oid": "e0506c660a284da01a04d5f073d95c0999a6f32c", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/e0506c660a284da01a04d5f073d95c0999a6f32c", "committedDate": "2020-09-23T23:53:14Z", "message": "polishing code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NzQ0MTM5", "url": "https://github.com/confluentinc/schema-registry/pull/1625#pullrequestreview-495744139", "createdAt": "2020-09-24T16:23:05Z", "commit": {"oid": "e0506c660a284da01a04d5f073d95c0999a6f32c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyMzowNVrOHXizpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjoyMzoxNlrOHXi0BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0OTU3Mg==", "bodyText": "Let's comment this property, something like \"This property is used to determine whether a default value in the Connect schema originated from an Avro field default.\"", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r494449572", "createdAt": "2020-09-24T16:23:05Z", "author": {"login": "rayokota"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -85,12 +84,15 @@\n \n   public static final String CONNECT_NAME_PROP = \"connect.name\";\n   public static final String CONNECT_DOC_PROP = \"connect.doc\";\n-  public static final String CONNECT_RECORD_DOC_PROP = \"connect.record.doc\";\n-  public static final String CONNECT_ENUM_DOC_PROP = \"connect.enum.doc\";\n   public static final String CONNECT_VERSION_PROP = \"connect.version\";\n   public static final String CONNECT_DEFAULT_VALUE_PROP = \"connect.default\";\n   public static final String CONNECT_PARAMETERS_PROP = \"connect.parameters\";\n   public static final String CONNECT_INTERNAL_TYPE_NAME = \"connect.internal.type\";\n+  public static final String AVRO_RECORD_DOC_PROP = NAMESPACE + \".record.doc\";\n+  public static final String AVRO_ENUM_DOC_PREFIX_PROP = NAMESPACE + \".enum.doc.\";\n+  public static final String AVRO_FIELD_DOC_PREFIX_PROP = NAMESPACE + \".field.doc.\";\n+  public static final String AVRO_FIELD_DEFAULT_FLAG_PROP = NAMESPACE + \".field.default\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0506c660a284da01a04d5f073d95c0999a6f32c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0OTY2OA==", "bodyText": "nit: extra line", "url": "https://github.com/confluentinc/schema-registry/pull/1625#discussion_r494449668", "createdAt": "2020-09-24T16:23:16Z", "author": {"login": "rayokota"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -100,6 +102,7 @@\n   public static final String AVRO_TYPE_UNION = NAMESPACE + \".Union\";\n   public static final String AVRO_TYPE_ENUM = NAMESPACE + \".Enum\";\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0506c660a284da01a04d5f073d95c0999a6f32c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c75f1eb1508020320837cbb938c01cb7e9bcc00", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/3c75f1eb1508020320837cbb938c01cb7e9bcc00", "committedDate": "2020-09-24T17:37:10Z", "message": "add comments and style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c316777ae2f25a2fe0d402e594f65533f92f84", "author": {"user": {"login": "xiaoyali97", "name": "Xiaoya Li"}}, "url": "https://github.com/confluentinc/schema-registry/commit/f2c316777ae2f25a2fe0d402e594f65533f92f84", "committedDate": "2020-09-24T17:44:02Z", "message": "remove unused test file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4465, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}