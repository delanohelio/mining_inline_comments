{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTU4MDk1", "number": 1508, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MTozN1rOEIN3Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1NzoxNFrOEIN6jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUxMTcxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/metrics/MetricsContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MTozN1rOGoC1fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MTozN1rOGoC1fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjY4Ng==", "bodyText": "nit:  can remove the check against true:  if (config.getBoolean(...) && ...)", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444642686", "createdAt": "2020-06-24T04:51:37Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/metrics/MetricsContainer.java", "diffHunk": "@@ -208,13 +202,10 @@ private SchemaRegistryMetric getSchemaTypeMetric(String type, boolean isRegister\n   private static List<String> getMetricReporterConfig(SchemaRegistryConfig config) {\n     List<String> classes = new ArrayList<>(config.getList(\n             ProducerConfig.METRIC_REPORTER_CLASSES_CONFIG));\n-    try {\n-      if (Boolean.TRUE.equals(config.originals().get(TELEMETRY_ENABLED_CONFIG))\n-              && !classes.contains(TELEMETRY_REPORTER_CLASS)) {\n-        classes.add(TELEMETRY_REPORTER_CLASS);\n-      }\n-    } catch (ConfigException ce) {\n-      // Ignore\n+    if (Boolean.TRUE.equals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUxMzkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MzoxMVrOGoC26w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MzoxMVrOGoC26w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MzA1MQ==", "bodyText": "Maybe change this one from private to public while we're at it?", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444643051", "createdAt": "2020-06-24T04:53:11Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -189,6 +188,8 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_CONFIG =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUyMDExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1Njo1OVrOGoC6tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1Njo1OVrOGoC6tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDAyMA==", "bodyText": "Maybe change this one from private to protected while we're at it?", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444644020", "createdAt": "2020-06-24T04:56:59Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -344,10 +345,13 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_DOC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUyMDQ1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1NzoxNFrOGoC67w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1NzoxNFrOGoC67w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NDA3OQ==", "bodyText": "nit: change to protected", "url": "https://github.com/confluentinc/schema-registry/pull/1508#discussion_r444644079", "createdAt": "2020-06-24T04:57:14Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/SchemaRegistryConfig.java", "diffHunk": "@@ -344,10 +345,13 @@\n   private static final String INTER_INSTANCE_HEADERS_WHITELIST_DOC\n       = \"A list of ``http`` headers to forward from follower to leader, \"\n       + \"in addition to ``Content-Type``, ``Accept``, ``Authorization``.\";\n+  public static final String TELEMETRY_REPORTER_ENABLED_DOC =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b9152d031a9f7e411b8f6dea4ea6e439bcd3507"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}