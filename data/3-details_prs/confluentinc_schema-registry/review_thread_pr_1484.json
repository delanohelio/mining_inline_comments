{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDE0MTM4", "number": 1484, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo0NVrOEDphzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo1NlrOEDph-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjYxNTgxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroCompatibilityChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo0NVrOGgynSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo0NVrOGgynSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAzNjg3Mg==", "bodyText": "Can we log something more? e.g schemaid or any identifier?", "url": "https://github.com/confluentinc/schema-registry/pull/1484#discussion_r437036872", "createdAt": "2020-06-08T22:30:45Z", "author": {"login": "maverick64"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroCompatibilityChecker.java", "diffHunk": "@@ -102,6 +106,9 @@ public boolean isCompatible(Schema newSchema, List<Schema> previousSchemas) {\n       validator.validate(newSchema, previousSchemasCopy);\n     } catch (SchemaValidationException e) {\n       return false;\n+    } catch (Exception e) {\n+      log.error(\"Unexpected exception during compatibility check\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec38f5b2062fe4e183ac0544d6ec95244977c89c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjYxNjI2OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo1NlrOGgynkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMjozMDo1NlrOGgynkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAzNjk0NA==", "bodyText": "Same as the other", "url": "https://github.com/confluentinc/schema-registry/pull/1484#discussion_r437036944", "createdAt": "2020-06-08T22:30:56Z", "author": {"login": "maverick64"}, "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -162,6 +166,9 @@ public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n       return true;\n     } catch (SchemaValidationException e) {\n       return false;\n+    } catch (Exception e) {\n+      log.error(\"Unexpected exception during compatibility check\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec38f5b2062fe4e183ac0544d6ec95244977c89c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1893, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}