{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTA4MjA2", "number": 1417, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzo0MzoxNFrOD1o86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzo0MzoxNFrOD1o86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTcyMDc0OnYy", "diffSide": "RIGHT", "path": "schema-serializer/src/main/java/io/confluent/kafka/formatter/SchemaMessageReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzo0MzoxNFrOGLK2_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMDowOToyOVrOGLtOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM2NTQzNg==", "bodyText": "IDK about naming on this.\nHow about\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private ParsedSchema getSchemaById(SchemaRegistryClient schemaRegistry,\n          \n          \n            \n              private ParsedSchema getSchemaId(SchemaRegistryClient schemaRegistry,", "url": "https://github.com/confluentinc/schema-registry/pull/1417#discussion_r414365436", "createdAt": "2020-04-24T07:43:14Z", "author": {"login": "OneCricketeer"}, "path": "schema-serializer/src/main/java/io/confluent/kafka/formatter/SchemaMessageReader.java", "diffHunk": "@@ -153,6 +150,38 @@ protected ParsedSchema parseSchema(\n     return provider.parseSchema(schema, references).get();\n   }\n \n+  private ParsedSchema getSchema(SchemaRegistryClient schemaRegistry,\n+                                 Properties props,\n+                                 boolean isKey) {\n+    ParsedSchema schema = getSchemaById(schemaRegistry, props, isKey);\n+    if (schema != null) {\n+      return schema;\n+    }\n+    String schemaString = getSchemaString(props, isKey);\n+    List<SchemaReference> refs = getSchemaReferences(props, isKey);\n+    return parseSchema(schemaRegistry, schemaString, refs);\n+  }\n+\n+  private ParsedSchema getSchemaById(SchemaRegistryClient schemaRegistry,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b75f1d379389d73803fdbd9378236d62bfc08764"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyODQ1OA==", "bodyText": "Thanks @cricket007 , it's short for \"get ParsedSchema by its ID\", rather than \"get the ParsedSchema's ID\"", "url": "https://github.com/confluentinc/schema-registry/pull/1417#discussion_r414928458", "createdAt": "2020-04-25T00:09:29Z", "author": {"login": "rayokota"}, "path": "schema-serializer/src/main/java/io/confluent/kafka/formatter/SchemaMessageReader.java", "diffHunk": "@@ -153,6 +150,38 @@ protected ParsedSchema parseSchema(\n     return provider.parseSchema(schema, references).get();\n   }\n \n+  private ParsedSchema getSchema(SchemaRegistryClient schemaRegistry,\n+                                 Properties props,\n+                                 boolean isKey) {\n+    ParsedSchema schema = getSchemaById(schemaRegistry, props, isKey);\n+    if (schema != null) {\n+      return schema;\n+    }\n+    String schemaString = getSchemaString(props, isKey);\n+    List<SchemaReference> refs = getSchemaReferences(props, isKey);\n+    return parseSchema(schemaRegistry, schemaString, refs);\n+  }\n+\n+  private ParsedSchema getSchemaById(SchemaRegistryClient schemaRegistry,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM2NTQzNg=="}, "originalCommit": {"oid": "b75f1d379389d73803fdbd9378236d62bfc08764"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1971, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}