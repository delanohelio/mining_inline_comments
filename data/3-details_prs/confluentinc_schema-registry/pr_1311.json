{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDAyMzU0", "number": 1311, "title": "MINOR: cleanup references to Avro in errors", "bodyText": "Clean up some references to Avro since we support other schema types.", "createdAt": "2020-02-04T19:08:44Z", "url": "https://github.com/confluentinc/schema-registry/pull/1311", "merged": true, "mergeCommit": {"oid": "8f08259cf28f7f95c2772d7baef79c28a6deee23"}, "closed": true, "closedAt": "2020-02-05T00:41:17Z", "author": {"login": "rayokota"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBGZzKgH2gAyMzcxMDAyMzU0OjIwOWM1YmFkNDc2ZDZlNGNiZTgwZDAwYTY1Y2IyODc2Y2M0ZmU2Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBKz27AFqTM1MzM5MzA1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb", "committedDate": "2020-02-04T19:07:37Z", "message": "MINOR: cleanup references to Avro in errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzA1Njgx", "url": "https://github.com/confluentinc/schema-registry/pull/1311#pullrequestreview-353305681", "createdAt": "2020-02-04T21:14:14Z", "commit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxNDoxNFrOFljrvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxNDoxNFrOFljrvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA==", "bodyText": "Why did we remove this ?", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374926270", "createdAt": "2020-02-04T21:14:14Z", "author": {"login": "dragosvictor"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzg2MjMx", "url": "https://github.com/confluentinc/schema-registry/pull/1311#pullrequestreview-353386231", "createdAt": "2020-02-04T23:56:00Z", "commit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzkzMDUz", "url": "https://github.com/confluentinc/schema-registry/pull/1311#pullrequestreview-353393053", "createdAt": "2020-02-05T00:15:32Z", "commit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDoxNTozM1rOFln-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDoxNTozM1rOFln-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk5NjcyNA==", "bodyText": "Got it !", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374996724", "createdAt": "2020-02-05T00:15:33Z", "author": {"login": "dragosvictor"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA=="}, "originalCommit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4500, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}