{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTI0MDgz", "number": 1532, "title": "DG-540 Add batch get schema API", "bodyText": "Add batch get schema API.  It can be used to get all schemas or all latest schemas.", "createdAt": "2020-07-09T22:25:22Z", "url": "https://github.com/confluentinc/schema-registry/pull/1532", "merged": true, "mergeCommit": {"oid": "2982588308ad64448eea2257e6490164dac2b20b"}, "closed": true, "closedAt": "2020-07-14T17:55:12Z", "author": {"login": "rayokota"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczWbTMgH2gAyNDQ3MTI0MDgzOjg0NzdlYTE1MTMwOTkyYzJjMjIzN2Q2ZTM5NTM2MTFkYmJlZjg3Zjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczsNa1AFqTQ0Njc0ODU2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8477ea15130992c2c2237d6e3953611dbbef87f7", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/8477ea15130992c2c2237d6e3953611dbbef87f7", "committedDate": "2020-07-09T22:03:57Z", "message": "DG-540 Add batch schema API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa28e424774123594e2313122384de3d015c64cb", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/fa28e424774123594e2313122384de3d015c64cb", "committedDate": "2020-07-09T22:22:11Z", "message": "Add unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDA5NzUw", "url": "https://github.com/confluentinc/schema-registry/pull/1532#pullrequestreview-446009750", "createdAt": "2020-07-09T22:26:06Z", "commit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjowN1rOGvj2yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjowN1rOGvj2yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzcyMw==", "bodyText": "Don't need to sort as keys are already pre-sorted", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523723", "createdAt": "2020-07-09T22:26:07Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1341,14 +1344,36 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n \n   private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n                                             boolean returnDeletedSchemas) {\n+    return sortSchemasByVersion(schemas, returnDeletedSchemas, false);\n+  }\n+\n+  private List<Schema> sortSchemasByVersion(Iterator<SchemaRegistryValue> schemas,\n+                                            boolean returnDeletedSchemas,\n+                                            boolean returnLatestOnly) {\n     List<Schema> schemaList = new ArrayList<>();\n+    Schema previousSchema = null;\n     while (schemas.hasNext()) {\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n-      if (returnDeletedSchemas || !schemaValue.isDeleted()) {\n-        schemaList.add(getSchemaEntityFromSchemaValue(schemaValue));\n+      if (!returnDeletedSchemas && schemaValue.isDeleted()) {\n+        continue;\n+      }\n+      Schema schema = getSchemaEntityFromSchemaValue(schemaValue);\n+      if (returnLatestOnly) {\n+        if (previousSchema != null && !schema.getSubject().equals(previousSchema.getSubject())) {\n+          schemaList.add(previousSchema);\n+        }\n+      } else {\n+        schemaList.add(schema);\n+      }\n+      previousSchema = schema;\n+    }\n+    if (returnLatestOnly && previousSchema != null) {\n+      // handle last subject\n+      Schema lastSchema = schemaList.isEmpty() ? null : schemaList.get(schemaList.size() - 1);\n+      if (lastSchema == null || !lastSchema.getSubject().equals(previousSchema.getSubject())) {\n+        schemaList.add(previousSchema);\n       }\n     }\n-    Collections.sort(schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDA5ODY1", "url": "https://github.com/confluentinc/schema-registry/pull/1532#pullrequestreview-446009865", "createdAt": "2020-07-09T22:26:22Z", "commit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjoyMlrOGvj3Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyNjoyMlrOGvj3Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMzgxMA==", "bodyText": "Don't need to sort as keys are already pre-sorted", "url": "https://github.com/confluentinc/schema-registry/pull/1532#discussion_r452523810", "createdAt": "2020-07-09T22:26:22Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1358,7 +1383,6 @@ public void setModeOrForward(String subject, Mode mode, Map<String, String> head\n       SchemaValue schemaValue = (SchemaValue) schemas.next();\n       schemaList.add(schemaValue);\n     }\n-    Collections.sort(schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzQ4NTY3", "url": "https://github.com/confluentinc/schema-registry/pull/1532#pullrequestreview-446748567", "createdAt": "2020-07-10T23:26:42Z", "commit": {"oid": "fa28e424774123594e2313122384de3d015c64cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4490, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}