{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODgwNzQx", "number": 1381, "title": "CC-7027: Revert to legacy serialization of Decimal logical type on incompatible scale/precision", "bodyText": "Jira\nThe changes to the Avro converter logic in #1124 cause issues with upstream producers, such as the JDBC connector, that publish data with a scale larger than its precision. Although this technically violates the Avro spec for the logical decimal type (which states that the scale must be between zero and the precision for the schema, inclusive), in practice this hasn't caused issues and has flown under the radar as values for those kinds of schemas have been correctly serialized and deserialized by the Avro converter.\nIn order to provide a fix for users of the Avro converter that may be affected by this change, I'd like to propose that we fall back on the legacy schema conversion logic we've used in the past for handling logical decimal types in the event that a schema with precision and scale incompatible with the Avro spec is encountered. This actually lines up safely with the Avro spec, which allows users to add custom annotations to their schemas in cases such as these and allows us to create our own serialization logic for the decimal type.\nValues published to Kafka with these types of schemas will still cause issues with downstream consumers such as Hive that have their own requirements for scale and precision of decimals, but that should not be made any more or less likely by the merging of #1124 or the changes in this PR.", "createdAt": "2020-03-10T00:35:27Z", "url": "https://github.com/confluentinc/schema-registry/pull/1381", "merged": true, "mergeCommit": {"oid": "67ffa43c03c59171c15e4e69764071fe5cdd78de"}, "closed": true, "closedAt": "2020-03-11T19:50:25Z", "author": {"login": "C0urante"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMHVEHgH2gAyMzg1ODgwNzQxOmQ5NWM4YjA4YmRiZWM1ZGYxZDAzMDkxYzUzNzRiZDY1ZTdhYjY3MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMsYGNgFqTM3MzA2NDg4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d95c8b08bdbec5df1d03091c5374bd65e7ab6705", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/d95c8b08bdbec5df1d03091c5374bd65e7ab6705", "committedDate": "2020-03-10T00:25:31Z", "message": "CC-7027: Revert to legacy serialization of Decimal logical type on incompatible scale/precision"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMjM2NzQ4", "url": "https://github.com/confluentinc/schema-registry/pull/1381#pullrequestreview-372236748", "createdAt": "2020-03-10T18:57:30Z", "commit": {"oid": "d95c8b08bdbec5df1d03091c5374bd65e7ab6705"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxODo1NzozMFrOF0cyQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxODo1ODoyM1rOF0c0PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU0MTg4OQ==", "bodyText": "Do we really want this as DEBUG?", "url": "https://github.com/confluentinc/schema-registry/pull/1381#discussion_r390541889", "createdAt": "2020-03-10T18:57:30Z", "author": {"login": "rhauch"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -935,7 +939,20 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n           int precision = precisionString == null ? CONNECT_AVRO_DECIMAL_PRECISION_DEFAULT :\n               Integer.parseInt(precisionString);\n           int scale = scaleString == null ? 0 : Integer.parseInt(scaleString);\n-          org.apache.avro.LogicalTypes.decimal(precision, scale).addToSchema(baseSchema);\n+          if (scale < 0 || scale > precision) {\n+            log.debug(\n+                \"Scale and precision of {} and {} cannot be serialized as native Avro logical \" \n+                    + \"decimal type; reverting to legacy serialization method\",\n+                scale,\n+                precision\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95c8b08bdbec5df1d03091c5374bd65e7ab6705"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU0MjM5Ng==", "bodyText": "How about a comment here to describe why this scenario needs special logic and how that logic deviates from using LogicalTypes.decimal(precision, scale).addToSchema(...)?", "url": "https://github.com/confluentinc/schema-registry/pull/1381#discussion_r390542396", "createdAt": "2020-03-10T18:58:23Z", "author": {"login": "rhauch"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -935,7 +939,20 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n           int precision = precisionString == null ? CONNECT_AVRO_DECIMAL_PRECISION_DEFAULT :\n               Integer.parseInt(precisionString);\n           int scale = scaleString == null ? 0 : Integer.parseInt(scaleString);\n-          org.apache.avro.LogicalTypes.decimal(precision, scale).addToSchema(baseSchema);\n+          if (scale < 0 || scale > precision) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95c8b08bdbec5df1d03091c5374bd65e7ab6705"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/dcdb9e75234e8491046ed1337c65872833f79999", "committedDate": "2020-03-10T20:09:15Z", "message": "CC-7027: Add test, address review feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a3c702dcb2247099280a235485e5d53705573f3", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/5a3c702dcb2247099280a235485e5d53705573f3", "committedDate": "2020-03-10T20:08:12Z", "message": "CC-7027: Add test, address review feedback"}, "afterCommit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/dcdb9e75234e8491046ed1337c65872833f79999", "committedDate": "2020-03-10T20:09:15Z", "message": "CC-7027: Add test, address review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDI3MzQw", "url": "https://github.com/confluentinc/schema-registry/pull/1381#pullrequestreview-373027340", "createdAt": "2020-03-11T18:38:33Z", "commit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDQ2MTMw", "url": "https://github.com/confluentinc/schema-registry/pull/1381#pullrequestreview-373046130", "createdAt": "2020-03-11T19:06:02Z", "commit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNjowM1rOF1E5Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNzowNlrOF1E7XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTAxNA==", "bodyText": "Why would we not just add CONNECT_AVRO_DECIMAL_PRECISION_PROP as a property to the schema here? Then we wouldn't need the forceLegacyDecimal variable and would not need to modify line 963 (original). Or am I missing something?", "url": "https://github.com/confluentinc/schema-registry/pull/1381#discussion_r391199014", "createdAt": "2020-03-11T19:06:03Z", "author": {"login": "rhauch"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -935,7 +940,21 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n           int precision = precisionString == null ? CONNECT_AVRO_DECIMAL_PRECISION_DEFAULT :\n               Integer.parseInt(precisionString);\n           int scale = scaleString == null ? 0 : Integer.parseInt(scaleString);\n-          org.apache.avro.LogicalTypes.decimal(precision, scale).addToSchema(baseSchema);\n+          if (scale < 0 || scale > precision) {\n+            log.debug(\n+                \"Scale and precision of {} and {} cannot be serialized as native Avro logical \" \n+                    + \"decimal type; reverting to legacy serialization method\",\n+                scale,\n+                precision\n+            );\n+            // We cannot use the Avro Java library's support for the decimal logical type when the\n+            // scale is either negative or greater than the precision as this violates the Avro spec\n+            // and causes the Avro library to throw an exception, so we fall back in this case to\n+            // using the legacy method for encoding decimal logical type information.\n+            forceLegacyDecimal = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTU4MQ==", "bodyText": "If we added CONNECT_AVRO_DECIMAL_PRECISION_PROP to the schema parameters in the block above, which only happens when Decimal.LOGICAL_NAME.equalsIgnoreCase(schema.name()), then we wouldn't need to modify this block.", "url": "https://github.com/confluentinc/schema-registry/pull/1381#discussion_r391199581", "createdAt": "2020-03-11T19:07:06Z", "author": {"login": "rhauch"}, "path": "avro-converter/src/main/java/io/confluent/connect/avro/AvroData.java", "diffHunk": "@@ -960,7 +979,8 @@ private static Object maybeWrapSchemaless(Schema schema, Object value, String ty\n       // and name().\n       if (schema.name() != null) {\n         if (Decimal.LOGICAL_NAME.equalsIgnoreCase(schema.name())\n-            && schema.parameters().containsKey(CONNECT_AVRO_DECIMAL_PRECISION_PROP)) {\n+            && (schema.parameters().containsKey(CONNECT_AVRO_DECIMAL_PRECISION_PROP)\n+                || forceLegacyDecimal)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcdb9e75234e8491046ed1337c65872833f79999"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c076e1733ecff31ed478df46a742435a8a461311", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/c076e1733ecff31ed478df46a742435a8a461311", "committedDate": "2020-03-11T19:24:16Z", "message": "CC-7027: Drop log message from DEBUG to TRACE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e759b5313520540ac9d8f1fedea436dc21207838", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/confluentinc/schema-registry/commit/e759b5313520540ac9d8f1fedea436dc21207838", "committedDate": "2020-03-11T19:31:24Z", "message": "CC-7027: Add comment about immutability of Connect schema parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDY0ODg0", "url": "https://github.com/confluentinc/schema-registry/pull/1381#pullrequestreview-373064884", "createdAt": "2020-03-11T19:35:19Z", "commit": {"oid": "e759b5313520540ac9d8f1fedea436dc21207838"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4509, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}