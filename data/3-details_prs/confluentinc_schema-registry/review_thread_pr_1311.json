{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDAyMzU0", "number": 1311, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxNDoxNFrODdIU_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxNDoxNFrODdIU_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODcxNzQwOnYy", "diffSide": "LEFT", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToxNDoxNFrOFljrvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDoxNTozM1rOFln-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA==", "bodyText": "Why did we remove this ?", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374926270", "createdAt": "2020-02-04T21:14:14Z", "author": {"login": "dragosvictor"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3ODE3Mg==", "bodyText": "This is obsolete code.  The input schemas are never null.   Previously when parsing a schema failed, we returned a null.  Now when parsing a schema fails, we throw an InvalidSchemaException in the parseSchema method.", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374978172", "createdAt": "2020-02-04T23:15:27Z", "author": {"login": "rayokota"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA=="}, "originalCommit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk5NjcyNA==", "bodyText": "Got it !", "url": "https://github.com/confluentinc/schema-registry/pull/1311#discussion_r374996724", "createdAt": "2020-02-05T00:15:33Z", "author": {"login": "dragosvictor"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1091,10 +1091,6 @@ public boolean isCompatible(String subject,\n \n     List<ParsedSchema> prevParsedSchemas = new ArrayList<>(previousSchemas.size());\n     for (Schema previousSchema : previousSchemas) {\n-      if (previousSchema == null) {\n-        throw new InvalidSchemaException(\n-            \"Existing schema \" + previousSchema + \" is not a valid Avro schema\");\n-      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNjI3MA=="}, "originalCommit": {"oid": "209c5bad476d6e4cbe80d00a65cb2876cc4fe6cb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1937, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}