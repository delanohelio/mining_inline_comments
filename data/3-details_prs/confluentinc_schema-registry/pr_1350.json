{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTYwMjk1", "number": 1350, "title": "Add REST API to get versions for id", "bodyText": "Add REST API to get versions for id\nAllow clients to modify schemas during compat checks\nAdd back some deprecations", "createdAt": "2020-02-20T20:34:00Z", "url": "https://github.com/confluentinc/schema-registry/pull/1350", "merged": true, "mergeCommit": {"oid": "d6b27989e2b5946e615bbf0b18bfc04b03e3da7d"}, "closed": true, "closedAt": "2020-02-24T20:41:42Z", "author": {"login": "rayokota"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGRNoPAH2gAyMzc3OTYwMjk1OjQ1Y2IwNzgzNDA3Njc4MDUyZTE4ODYwMzc4NGY2Y2Y5YjAwODBmZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHjuHaAFqTM2MzY4NTM1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45cb0783407678052e188603784f6cf9b0080fe7", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/45cb0783407678052e188603784f6cf9b0080fe7", "committedDate": "2020-02-20T20:32:54Z", "message": "Add REST API to get versions for id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "203eb85a949f3c2b16d4b47d19dab3f4bde6d57d", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/203eb85a949f3c2b16d4b47d19dab3f4bde6d57d", "committedDate": "2020-02-20T20:35:22Z", "message": "Fix copyright"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b6183a69a36c81f1ba48755ee5463825f243c92", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/4b6183a69a36c81f1ba48755ee5463825f243c92", "committedDate": "2020-02-24T18:27:22Z", "message": "Add default impl for getAllVersionsById\n\nAlso add back some deprecations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e69ee4bd38a17cecbe00e5f63e9434198a6018c", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/3e69ee4bd38a17cecbe00e5f63e9434198a6018c", "committedDate": "2020-02-24T18:28:58Z", "message": "Allow clients to modify schema during compat checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjMzMzcw", "url": "https://github.com/confluentinc/schema-registry/pull/1350#pullrequestreview-363633370", "createdAt": "2020-02-24T19:14:38Z", "commit": {"oid": "3e69ee4bd38a17cecbe00e5f63e9434198a6018c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToxNDozOVrOFtsjGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToxOToyMVrOFtssSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MDEyMQ==", "bodyText": "Here and below: we already throw, why the log message ?", "url": "https://github.com/confluentinc/schema-registry/pull/1350#discussion_r383460121", "createdAt": "2020-02-24T19:14:39Z", "author": {"login": "dragosvictor"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -796,14 +797,18 @@ private void forwardSetModeRequestToMaster(\n   }\n \n   private void canonicalizeSchema(Schema schema) throws InvalidSchemaException {\n-    if (schema == null || schema.getSchema().trim().isEmpty()) {\n+    if (schema == null\n+        || schema.getSchema() == null\n+        || schema.getSchema().trim().isEmpty()) {\n+      log.error(\"Empty schema\");\n       throw new InvalidSchemaException(\"Empty schema\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e69ee4bd38a17cecbe00e5f63e9434198a6018c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjQ3Mg==", "bodyText": "Do we know for sure the list has the same order as returned by the underlying map ?", "url": "https://github.com/confluentinc/schema-registry/pull/1350#discussion_r383462472", "createdAt": "2020-02-24T19:19:21Z", "author": {"login": "dragosvictor"}, "path": "core/src/test/java/io/confluent/kafka/schemaregistry/rest/RestApiTest.java", "diffHunk": "@@ -590,6 +591,21 @@ public void testGetSubjectsAssociatedWithNotFoundSchemaId() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testGetVersionsAssociatedWithSchemaId() throws Exception {\n+    String subject1 = \"testTopic1\";\n+    String subject2 = \"testTopic2\";\n+\n+    String schema = TestUtils.getRandomCanonicalAvroString(1).get(0);\n+    TestUtils.registerAndVerifySchema(restApp.restClient, schema, 1, subject1);\n+    TestUtils.registerAndVerifySchema(restApp.restClient, schema, 1, subject2);\n+\n+    List<SubjectVersion> associatedSubjects = restApp.restClient.getAllVersionsById(1);\n+    assertEquals(associatedSubjects.size(), 2);\n+    assertEquals(Arrays.asList(new SubjectVersion(subject1, 1), new SubjectVersion(subject2, 1)),\n+        associatedSubjects);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e69ee4bd38a17cecbe00e5f63e9434198a6018c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f", "author": {"user": {"login": "rayokota", "name": "Robert Yokota"}}, "url": "https://github.com/confluentinc/schema-registry/commit/c5db3b83272ab72d40fee33934ab39d3953e2c6f", "committedDate": "2020-02-24T19:31:20Z", "message": "Fix test to not rely on array order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjY1MTc2", "url": "https://github.com/confluentinc/schema-registry/pull/1350#pullrequestreview-363665176", "createdAt": "2020-02-24T20:04:57Z", "commit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowNDo1N1rOFtuHjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowNDo1N1rOFtuHjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4NTgzOQ==", "bodyText": "Should we have a copy method for Schema?", "url": "https://github.com/confluentinc/schema-registry/pull/1350#discussion_r383485839", "createdAt": "2020-02-24T20:04:57Z", "author": {"login": "tuvtran"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -970,6 +976,38 @@ public SchemaString get(\n     )).allSubjects();\n   }\n \n+  public List<SubjectVersion> listVersionsForId(int id) throws SchemaRegistryException {\n+    SchemaValue schema = null;\n+    try {\n+      SchemaKey subjectVersionKey = lookupCache.schemaKeyById(id);\n+      if (subjectVersionKey == null) {\n+        return null;\n+      }\n+      schema = (SchemaValue) kafkaStore.get(subjectVersionKey);\n+      if (schema == null) {\n+        return null;\n+      }\n+    } catch (StoreException e) {\n+      throw new SchemaRegistryStoreException(\"Error while retrieving schema with id \"\n+                                              + id + \" from the backend Kafka store\", e);\n+    }\n+\n+    return lookupCache.schemaIdAndSubjects(new Schema(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjY2NjEz", "url": "https://github.com/confluentinc/schema-registry/pull/1350#pullrequestreview-363666613", "createdAt": "2020-02-24T20:07:25Z", "commit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowNzoyNVrOFtuMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowNzoyNVrOFtuMBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4Njk4Mg==", "bodyText": "Since the function only checks compatibility should we avoid adding side effect to newSchema?", "url": "https://github.com/confluentinc/schema-registry/pull/1350#discussion_r383486982", "createdAt": "2020-02-24T20:07:25Z", "author": {"login": "tuvtran"}, "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1155,7 +1193,11 @@ public boolean isCompatible(String subject,\n       prevParsedSchemas.add(prevParsedSchema);\n     }\n \n-    return parseSchema(newSchema).isCompatible(compatibility, prevParsedSchemas);\n+    ParsedSchema parsedSchema = parseSchema(newSchema);\n+    boolean isCompatible = parsedSchema.isCompatible(compatibility, prevParsedSchemas);\n+    // Allow schema providers to modify the schema during compatibility checks\n+    newSchema.setSchema(parsedSchema.canonicalString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjY2OTI4", "url": "https://github.com/confluentinc/schema-registry/pull/1350#pullrequestreview-363666928", "createdAt": "2020-02-24T20:07:56Z", "commit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjg1MzU2", "url": "https://github.com/confluentinc/schema-registry/pull/1350#pullrequestreview-363685356", "createdAt": "2020-02-24T20:40:36Z", "commit": {"oid": "c5db3b83272ab72d40fee33934ab39d3953e2c6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4505, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}