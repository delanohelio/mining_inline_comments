{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjY0OTAz", "number": 2871, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1ODozN1rODnI5xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyMDowN1rODnw2wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzY2OTE2OnYy", "diffSide": "LEFT", "path": "java-checks/src/test/files/checks/LeastSpecificTypeCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1ODozN1rOF09l7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo1ODozN1rOF09l7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3OTQwNA==", "bodyText": "This one is interesting... it never worked. unifying the verifiers made that comment invalid, and I realized we were not raising issue here. I didn't investigated if it's expected or not.", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r391079404", "createdAt": "2020-03-11T15:58:37Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/test/files/checks/LeastSpecificTypeCheck.java", "diffHunk": "@@ -153,7 +153,7 @@ public static void visibility(Visibility vis) { // Compliant - Base has package\n \n   protected static class Visibility2 extends ProtectedBase { }\n \n-  public static void visibility(Visibility2 vis) { // // Noncompliant {{Use 'A.ProtectedBase' here; it is a more general type than 'Visibility2'.}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6b8f1359e80d9d74f9f95dcc67a621654b112ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzg5NzY0OnYy", "diffSide": "RIGHT", "path": "java-checks/src/test/files/checks/LeastSpecificTypeCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo0NDoyNFrOF1mmkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDo0MToxOFrOF2uUyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1MTMxMw==", "bodyText": "You should let a comment here to clearly state that this is a FN.", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r391751313", "createdAt": "2020-03-12T16:44:24Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/test/files/checks/LeastSpecificTypeCheck.java", "diffHunk": "@@ -153,7 +153,7 @@ public static void visibility(Visibility vis) { // Compliant - Base has package\n \n   protected static class Visibility2 extends ProtectedBase { }\n \n-  public static void visibility(Visibility2 vis) { // // Noncompliant {{Use 'A.ProtectedBase' here; it is a more general type than 'Visibility2'.}}\n+  public static void visibility(Visibility2 vis) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkyNjQxMQ==", "bodyText": "It's a FN. marked as such!", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r392926411", "createdAt": "2020-03-16T10:41:18Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/test/files/checks/LeastSpecificTypeCheck.java", "diffHunk": "@@ -153,7 +153,7 @@ public static void visibility(Visibility vis) { // Compliant - Base has package\n \n   protected static class Visibility2 extends ProtectedBase { }\n \n-  public static void visibility(Visibility2 vis) { // // Noncompliant {{Use 'A.ProtectedBase' here; it is a more general type than 'Visibility2'.}}\n+  public static void visibility(Visibility2 vis) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1MTMxMw=="}, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzk1MDczOnYy", "diffSide": "LEFT", "path": "java-checks/src/test/files/checks/AbstractClassNoFieldShouldBeInterfaceCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1NzozMVrOF1nIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1NzozMVrOF1nIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1OTk3NQ==", "bodyText": "Code after this line does not appear anywhere in the two new files, this will reduce the coverage.", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r391759975", "createdAt": "2020-03-12T16:57:31Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/test/files/checks/AbstractClassNoFieldShouldBeInterfaceCheck.java", "diffHunk": "@@ -1,82 +0,0 @@\n-import com.google.auto.value.AutoOneOf;\n-import com.google.auto.value.AutoValue;\n-import org.immutables.value.Value;\n-\n-abstract class A {\n-  private int b;\n-\n-  abstract void method();\n-}\n-abstract class B { // Noncompliant [[sc=16;ec=17]] {{Convert the abstract class \"B\" into an interface.}}\n-  int method(){\n-    return 1;\n-  }\n-  class F {}\n-}\n-class C {\n-  int method(){\n-    return 1;\n-  }\n-}\n-\n-abstract class D {\n-  protected void method() {\n-\n-  }\n-}\n-\n-abstract class E extends A {\n-}\n-\n-public abstract class F {\n-  public abstract double v();\n-\n-  @Override\n-  public String toString() {\n-    return \":\";\n-  }\n-}\n-\n-public abstract class G {\n-  public abstract double v();\n-\n-  public String toString() {\n-    return \":\";\n-  }\n-}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDA2ODQ4OnYy", "diffSide": "RIGHT", "path": "java-checks-testkit/src/main/java/org/sonar/java/checks/verifier/MultipleFilesJavaCheckVerifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwODoyODoxNlrOF17JRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwOToxNDoxOFrOF2rKEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4Nzg3OQ==", "bodyText": "No deprecation for this file?", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r392087879", "createdAt": "2020-03-13T08:28:16Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks-testkit/src/main/java/org/sonar/java/checks/verifier/MultipleFilesJavaCheckVerifier.java", "diffHunk": "@@ -39,7 +29,10 @@\n  * The main difference is that this class run a check on multiple files and verifies the results at the end of analysis.\n  */\n @Beta\n-public class MultipleFilesJavaCheckVerifier extends CheckVerifier {\n+public final class MultipleFilesJavaCheckVerifier {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg3NDUxMw==", "bodyText": "good point!", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r392874513", "createdAt": "2020-03-16T09:14:18Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-testkit/src/main/java/org/sonar/java/checks/verifier/MultipleFilesJavaCheckVerifier.java", "diffHunk": "@@ -39,7 +29,10 @@\n  * The main difference is that this class run a check on multiple files and verifies the results at the end of analysis.\n  */\n @Beta\n-public class MultipleFilesJavaCheckVerifier extends CheckVerifier {\n+public final class MultipleFilesJavaCheckVerifier {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4Nzg3OQ=="}, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDIxNTA0OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/testing/CheckVerifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyMDowN1rOF18kTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyMDowN1rOF18kTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExMTE4Mw==", "bodyText": "at least sounds strange to me here, maybe reword as:\nIt is required to provide to the verifier at least the following.", "url": "https://github.com/SonarSource/sonar-java/pull/2871#discussion_r392111183", "createdAt": "2020-03-13T09:20:07Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/testing/CheckVerifier.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.testing;\n+\n+import java.io.File;\n+import java.util.Collection;\n+import org.sonar.plugins.java.api.JavaFileScanner;\n+\n+/**\n+ * This interface defines how to use checks (rules) verifiers. It's goal is to provide all the required information\n+ * to the analyzer to verify checks' expected behavior.\n+ * <p>\n+ * The starting point to define a verifier is {@link #newVerifier()}. Then, configuration can be specified.\n+ * <p>\n+ * It is required to provide at least to the verifier the following:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e58531cdbf73a6afccf0434f0eda4e384cc2039"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4079, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}