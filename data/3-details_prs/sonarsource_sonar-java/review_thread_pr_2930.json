{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTU3NzM0", "number": 2930, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoyNDowOFrOD4TnJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoyNDowOFrOD4TnJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzY4MTY1OnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S5777_java.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoyNDowOFrOGPD4TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNzoyNDowOFrOGPD4TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0NTM4OA==", "bodyText": "This * should be an HTML list, it's a bug in rule API, I fixed the RSPEC description, in case it happens again, it's due to one space before the * in the rule description, removing it solves the problem.", "url": "https://github.com/SonarSource/sonar-java/pull/2930#discussion_r418445388", "createdAt": "2020-05-01T07:24:08Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S5777_java.html", "diffHunk": "@@ -0,0 +1,49 @@\n+<p>When testing exception via <code>@Test</code> annotation, any code after the raised exception will not be executed. It will prevent you to test the\n+state of the program after the raised exception and, at worst, make you&nbsp;misleadingly think that it is executed.</p>\n+<p>You should consider moving any assertions into a separate test method where possible, or using <a\n+href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#using-assertthrows-method\">org.junit.Assert.assertThrows</a> instead.</p>\n+<p> Alternatively, you could use <a href=\"https://github.com/junit-team/junit4/wiki/Exception-testing#trycatch-idiom\">try-catch idiom</a> for JUnit\n+version &lt; 4.13 or if your project does not support lambdas.</p>\n+<h2>Noncompliant Code Example</h2>\n+<pre>\n+@Test(expected = IndexOutOfBoundsException.class)\n+public void testShouldFail() {\n+  get();\n+  // This test pass since execution will never get past this line.\n+  Assert.assertEquals(0, 1);\n+}\n+\n+private Object get() {\n+  throw new IndexOutOfBoundsException();\n+}\n+</pre>\n+<h2>Compliant Solution</h2>\n+<p> * For JUnit &gt;= 4.13, use <a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9062b58d1c19f537e45150275d9c1726cc8e9942"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4131, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}