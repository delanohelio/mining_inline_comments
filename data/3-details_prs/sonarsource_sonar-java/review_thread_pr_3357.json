{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxODgxNjAz", "number": 3357, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0NToyOFrOFHHIfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0NToyOFrOFHHIfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDAxMjE0OnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/security/ServerCertificatesCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0NToyOVrOIIb9Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTo0NToyOVrOIIb9Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxNzU3NQ==", "bodyText": "I suppose you haven't face it yet. But each time there is a call to hasSemantic() we're removing this condition. It was useful before frontend was migrated to Eclipse now it's not actually emulating real behaviour, because Eclipse try to resolve as much as possible and put unknown in case uf incomplete semantic.\nSo now we're removing it and adding tests .withoutSemantic() (If it fails you need to review issues and understand why this is happening)", "url": "https://github.com/SonarSource/sonar-java/pull/3357#discussion_r545717575", "createdAt": "2020-12-18T09:45:29Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/security/ServerCertificatesCheck.java", "diffHunk": "@@ -38,12 +38,22 @@\n @DeprecatedRuleKey(ruleKey = \"S4424\", repositoryKey = \"java\")\n @Rule(key = \"S4830\")\n public class ServerCertificatesCheck extends IssuableSubscriptionVisitor {\n+  private static final String JAVA_LANG_STRING = \"java.lang.String\";\n+  private static final String X509_CERTIFICATE_ARRAY = \"java.security.cert.X509Certificate[]\";\n \n-  private static final MethodMatchers CHECK_MATCHER = MethodMatchers.create()\n-    .ofSubTypes(\"javax.net.ssl.X509TrustManager\")\n-    .names(\"checkClientTrusted\", \"checkServerTrusted\")\n-    .addParametersMatcher(\"java.security.cert.X509Certificate[]\", \"java.lang.String\")\n-    .build();\n+  private static final MethodMatchers TRUST_MANAGER_MATCHER = MethodMatchers.or(\n+    MethodMatchers.create()\n+      .ofSubTypes(\"javax.net.ssl.X509TrustManager\")\n+      .names(\"checkClientTrusted\", \"checkServerTrusted\")\n+      .addParametersMatcher(X509_CERTIFICATE_ARRAY, JAVA_LANG_STRING)\n+      .build(),\n+    MethodMatchers.create()\n+      .ofSubTypes(\"javax.net.ssl.X509ExtendedTrustManager\")\n+      .names(\"checkClientTrusted\", \"checkServerTrusted\")\n+      .addParametersMatcher(X509_CERTIFICATE_ARRAY, JAVA_LANG_STRING, \"java.net.Socket\")\n+      .addParametersMatcher(X509_CERTIFICATE_ARRAY, JAVA_LANG_STRING, \"javax.net.ssl.SSLEngine\")\n+      .build()\n+  );\n \n   @Override\n   public List<Tree.Kind> nodesToVisit() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a2ded81190ad40368c3eaeda95844dc41fff5c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3741, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}