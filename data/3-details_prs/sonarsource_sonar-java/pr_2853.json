{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNTE1MTI3", "number": 2853, "title": "SONARJAVA-2968 S2175 should cover more methods from \"List\" and cover \"Map\"", "bodyText": "", "createdAt": "2020-02-28T17:47:15Z", "url": "https://github.com/SonarSource/sonar-java/pull/2853", "merged": true, "mergeCommit": {"oid": "51996dcd98a19fd84153cc276dd6ca982d806029"}, "closed": true, "closedAt": "2020-03-03T09:37:14Z", "author": {"login": "alban-auzeill"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJtEH9AFqTM2NzA4MTg4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ_BcmAFqTM2NzgyNTA5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDgxODg5", "url": "https://github.com/SonarSource/sonar-java/pull/2853#pullrequestreview-367081889", "createdAt": "2020-03-02T10:12:51Z", "commit": {"oid": "bbc18597ffa87f158a6fde02eaf254c8f180c36f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoxMjo1MVrOFwaBNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDo0MDoxMlrOFwa3PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwMjI2MA==", "bodyText": "What about removeAll from Collection?", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386302260", "createdAt": "2020-03-02T10:12:51Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -39,52 +40,93 @@\n import org.sonar.plugins.java.api.tree.Tree.Kind;\n \n @Rule(key = \"S2175\")\n-public class CollectionInappropriateCallsCheck extends AbstractMethodDetection {\n+public class CollectionInappropriateCallsCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final List<TypeChecker> TYPE_CHECKERS = new TypeCheckerBuilder()\n+    .on(\"java.util.Collection\")\n+      .method(\"remove\").argument(1).outOf(1).shouldMatchParametrizedType(1)\n+      .method(\"contains\").argument(1).outOf(1).shouldMatchParametrizedType(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc18597ffa87f158a6fde02eaf254c8f180c36f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNDE1NQ==", "bodyText": "This builder is not building a single TypeChecker, but a List<TypeChecker>. You could rename it to TypeCheckerListBuilder.", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386314155", "createdAt": "2020-03-02T10:36:02Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -130,4 +171,65 @@ private static boolean autoboxing(Type argumentType, Type collectionParameterTyp\n       && JUtils.isPrimitiveWrapper(collectionParameterType)\n       && isSubtypeOf(JUtils.primitiveWrapperType(argumentType), collectionParameterType);\n   }\n+\n+  private static class TypeChecker {\n+    private final String methodOwnerType;\n+    private final MethodMatcher methodMatcher;\n+    private final int argumentIndex;\n+    private final int parametrizedTypeIndex;\n+\n+    private TypeChecker(String methodOwnerType, MethodMatcher methodMatcher, int argumentIndex, int parametrizedTypeIndex) {\n+      this.methodOwnerType = methodOwnerType;\n+      this.methodMatcher = methodMatcher;\n+      this.argumentIndex = argumentIndex;\n+      this.parametrizedTypeIndex = parametrizedTypeIndex;\n+    }\n+  }\n+\n+  private static class TypeCheckerBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc18597ffa87f158a6fde02eaf254c8f180c36f"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxNjA5Mg==", "bodyText": "It is implicit that shouldMatchParametrizedType is doing so much work, you could add an additional method add(), performing this additional work.\nOr maybe find a better name for it?\nIn any case, it should be clear at which point we build a TypeChecker and add it to the list.", "url": "https://github.com/SonarSource/sonar-java/pull/2853#discussion_r386316092", "createdAt": "2020-03-02T10:40:12Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CollectionInappropriateCallsCheck.java", "diffHunk": "@@ -130,4 +171,65 @@ private static boolean autoboxing(Type argumentType, Type collectionParameterTyp\n       && JUtils.isPrimitiveWrapper(collectionParameterType)\n       && isSubtypeOf(JUtils.primitiveWrapperType(argumentType), collectionParameterType);\n   }\n+\n+  private static class TypeChecker {\n+    private final String methodOwnerType;\n+    private final MethodMatcher methodMatcher;\n+    private final int argumentIndex;\n+    private final int parametrizedTypeIndex;\n+\n+    private TypeChecker(String methodOwnerType, MethodMatcher methodMatcher, int argumentIndex, int parametrizedTypeIndex) {\n+      this.methodOwnerType = methodOwnerType;\n+      this.methodMatcher = methodMatcher;\n+      this.argumentIndex = argumentIndex;\n+      this.parametrizedTypeIndex = parametrizedTypeIndex;\n+    }\n+  }\n+\n+  private static class TypeCheckerBuilder {\n+\n+    private final List<TypeChecker> typeCheckers = new ArrayList<>();\n+\n+    private String methodOwnerType;\n+    private String methodName;\n+    private int argumentPosition;\n+    private int argumentCount;\n+\n+    private TypeCheckerBuilder on(String methodOwnerType) {\n+      this.methodOwnerType = methodOwnerType;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder method(String methodName) {\n+      this.methodName = methodName;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder argument(int argumentPosition) {\n+      this.argumentPosition = argumentPosition;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder outOf(int argumentCount) {\n+      this.argumentCount = argumentCount;\n+      return this;\n+    }\n+\n+    private TypeCheckerBuilder shouldMatchParametrizedType(int parametrizedTypePosition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbc18597ffa87f158a6fde02eaf254c8f180c36f"}, "originalPosition": 222}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd728aa52adb1b6cfb4ebf37463cbfaafb3d8f18", "author": {"user": {"login": "alban-auzeill", "name": "Alban Auzeill"}}, "url": "https://github.com/SonarSource/sonar-java/commit/dd728aa52adb1b6cfb4ebf37463cbfaafb3d8f18", "committedDate": "2020-03-02T13:06:11Z", "message": "SONARJAVA-2968 S2175 should cover more methods from \"List\" and cover \"Map\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4f85e97649214b5423bb89901c6bf7b0659c56", "author": {"user": {"login": "alban-auzeill", "name": "Alban Auzeill"}}, "url": "https://github.com/SonarSource/sonar-java/commit/ec4f85e97649214b5423bb89901c6bf7b0659c56", "committedDate": "2020-03-02T13:40:46Z", "message": "Fix from review, rename TypeCheckerBuilder and create an \"add\" method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "955c85cbd90b05bb594147d93787027643afdb5e", "author": {"user": {"login": "alban-auzeill", "name": "Alban Auzeill"}}, "url": "https://github.com/SonarSource/sonar-java/commit/955c85cbd90b05bb594147d93787027643afdb5e", "committedDate": "2020-03-02T15:00:34Z", "message": "Fix from review, support \"removeAll\" method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbc18597ffa87f158a6fde02eaf254c8f180c36f", "author": {"user": {"login": "alban-auzeill", "name": "Alban Auzeill"}}, "url": "https://github.com/SonarSource/sonar-java/commit/bbc18597ffa87f158a6fde02eaf254c8f180c36f", "committedDate": "2020-02-28T17:45:47Z", "message": "SONARJAVA-2968 S2175 should cover more methods from \"List\" and cover \"Map\""}, "afterCommit": {"oid": "955c85cbd90b05bb594147d93787027643afdb5e", "author": {"user": {"login": "alban-auzeill", "name": "Alban Auzeill"}}, "url": "https://github.com/SonarSource/sonar-java/commit/955c85cbd90b05bb594147d93787027643afdb5e", "committedDate": "2020-03-02T15:00:34Z", "message": "Fix from review, support \"removeAll\" method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODI1MDkx", "url": "https://github.com/SonarSource/sonar-java/pull/2853#pullrequestreview-367825091", "createdAt": "2020-03-03T09:37:00Z", "commit": {"oid": "955c85cbd90b05bb594147d93787027643afdb5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1740, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}