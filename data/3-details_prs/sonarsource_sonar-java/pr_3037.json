{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NjA2NjM4", "number": 3037, "title": "Refactoring to avoid duplicated code for flags and error handling", "bodyText": "Make the result of parsing a regex contain information about which\nflags the regex was created with.\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then new MyVisitor(possibleArguments).visit(regexForLiterals);.", "createdAt": "2020-06-18T16:30:43Z", "url": "https://github.com/SonarSource/sonar-java/pull/3037", "merged": true, "mergeCommit": {"oid": "f662435946db2ba521695e75e2ea651e65918c2d"}, "closed": true, "closedAt": "2020-06-19T07:22:50Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcshOxSgBqjM0NTkwNzc1NjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcst1QhgFqTQzMzg1NzI3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4f01ee7dd92b9095014f5a1eca18222ea138650", "author": {"user": {"login": "sebastian-hungerecker-sonarsource", "name": "Sebastian Hungerecker"}}, "url": "https://github.com/SonarSource/sonar-java/commit/e4f01ee7dd92b9095014f5a1eca18222ea138650", "committedDate": "2020-06-18T16:20:25Z", "message": "Refactoring to avoid duplicated code for flags and error handling\n\nMake the result of parsing a regex contain information about which\nflags the regex was created with.\n\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\n\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then `new MyVisitor(possibleArguments).visit(regexForLiterals);`."}, "afterCommit": {"oid": "b8d33d47738fb58263056823e2b9c46968748f6a", "author": {"user": {"login": "sebastian-hungerecker-sonarsource", "name": "Sebastian Hungerecker"}}, "url": "https://github.com/SonarSource/sonar-java/commit/b8d33d47738fb58263056823e2b9c46968748f6a", "committedDate": "2020-06-18T16:41:34Z", "message": "Refactoring to avoid duplicated code for flags and error handling\n\nMake the result of parsing a regex contain information about which\nflags the regex was created with.\n\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\n\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then `new MyVisitor(possibleArguments).visit(regexForLiterals);`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDgwNTM5", "url": "https://github.com/SonarSource/sonar-java/pull/3037#pullrequestreview-433480539", "createdAt": "2020-06-18T17:03:52Z", "commit": {"oid": "b8d33d47738fb58263056823e2b9c46968748f6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzowMzo1MlrOGl4aHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzoxMDowOVrOGl4ngA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3NDY4Nw==", "bodyText": "I'm really not sure about this change. Why not returning always the RegexTree and use the other methods parseRegex(String regex) when we need to test the flags.\nWhen I look at all the tests which have been changed to call getResult() just after, I feel it reduced the readability of the test.", "url": "https://github.com/SonarSource/sonar-java/pull/3037#discussion_r442374687", "createdAt": "2020-06-18T17:03:52Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/test/java/org/sonar/java/regex/RegexParserTestUtils.java", "diffHunk": "@@ -47,22 +49,32 @@\n \n   private RegexParserTestUtils() {}\n \n-  public static RegexTree assertSuccessfulParse(String regex) {\n+  public static RegexParseResult assertSuccessfulParse(String regex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d33d47738fb58263056823e2b9c46968748f6a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3ODExMg==", "bodyText": "This one is actually not used. Do you need it for a coming rule?\nIf it's not the case I would simply drop it for the time being (less is more).", "url": "https://github.com/SonarSource/sonar-java/pull/3037#discussion_r442378112", "createdAt": "2020-06-18T17:10:09Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/regex/ast/RegexBaseVisitor.java", "diffHunk": "@@ -52,10 +47,38 @@ protected JavaCharacter getJavaCharacterForFlag(int flag) {\n     return activeFlags.getJavaCharacterForFlag(flag);\n   }\n \n+  private void visit(RegexTree tree) {\n+    tree.accept(this);\n+  }\n+\n   private void visit(List<RegexTree> trees) {\n     trees.forEach(this::visit);\n   }\n \n+  @Override\n+  public void visit(RegexParseResult regexParseResult) {\n+    if (!regexParseResult.hasSyntaxErrors()) {\n+      activeFlags = regexParseResult.getInitialFlags();\n+      before(regexParseResult);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d33d47738fb58263056823e2b9c46968748f6a"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef15c880801abf59014c53d5a6d57acf36aeff8", "author": {"user": {"login": "sebastian-hungerecker-sonarsource", "name": "Sebastian Hungerecker"}}, "url": "https://github.com/SonarSource/sonar-java/commit/3ef15c880801abf59014c53d5a6d57acf36aeff8", "committedDate": "2020-06-18T17:34:16Z", "message": "Refactoring to avoid duplicated code for flags and error handling\n\nMake the result of parsing a regex contain information about which\nflags the regex was created with.\n\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\n\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then `new MyVisitor(possibleArguments).visit(regexForLiterals);`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8d33d47738fb58263056823e2b9c46968748f6a", "author": {"user": {"login": "sebastian-hungerecker-sonarsource", "name": "Sebastian Hungerecker"}}, "url": "https://github.com/SonarSource/sonar-java/commit/b8d33d47738fb58263056823e2b9c46968748f6a", "committedDate": "2020-06-18T16:41:34Z", "message": "Refactoring to avoid duplicated code for flags and error handling\n\nMake the result of parsing a regex contain information about which\nflags the regex was created with.\n\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\n\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then `new MyVisitor(possibleArguments).visit(regexForLiterals);`."}, "afterCommit": {"oid": "3ef15c880801abf59014c53d5a6d57acf36aeff8", "author": {"user": {"login": "sebastian-hungerecker-sonarsource", "name": "Sebastian Hungerecker"}}, "url": "https://github.com/SonarSource/sonar-java/commit/3ef15c880801abf59014c53d5a6d57acf36aeff8", "committedDate": "2020-06-18T17:34:16Z", "message": "Refactoring to avoid duplicated code for flags and error handling\n\nMake the result of parsing a regex contain information about which\nflags the regex was created with.\n\nUse this information in the RegexBaseVisitor to set the initial\nflags, removing any need to call setFlags, which is now removed.\n\nAlso move the logic of checking whether the regex contains syntax\nerrors before visiting anything into the RegexBaseVisitor and the\nmethods before and after to it, so now rules should all be\nimplementable with only a suitable definition of a visitor class\nand then `new MyVisitor(possibleArguments).visit(regexForLiterals);`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODU3Mjc2", "url": "https://github.com/SonarSource/sonar-java/pull/3037#pullrequestreview-433857276", "createdAt": "2020-06-19T07:22:39Z", "commit": {"oid": "3ef15c880801abf59014c53d5a6d57acf36aeff8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1732, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}