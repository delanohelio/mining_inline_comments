{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Mzc4MzMy", "number": 3116, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjoxMDowNFrOEOp9Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjoxMDowNFrOEOp9Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODAyODgzOnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/PrintfMisuseCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjoxMDowNFrOGx7KUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjoxMDowNFrOGx7KUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAwMjcwNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/SonarSource/sonar-java/pull/3116#discussion_r455002705", "createdAt": "2020-07-15T12:10:04Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/PrintfMisuseCheck.java", "diffHunk": "@@ -260,18 +260,29 @@ private boolean checkUnbalancedQuotes(MethodInvocationTree mit, String formatStr\n         }\n       }\n     }\n-    if (lastArgumentShouldBeIgnored(mit, args, transposedArgs)) {\n+    if (lastArgumentShouldBeIgnored(mit, args, transposedArgs, indexes)) {\n       transposedArgs = transposedArgs.subList(0, transposedArgs.size() - 1);\n     }\n     return transposedArgs;\n   }\n \n-  private static boolean lastArgumentShouldBeIgnored(MethodInvocationTree mit, List<ExpressionTree> args, List<ExpressionTree> transposedArgs) {\n+  private static boolean lastArgumentShouldBeIgnored(MethodInvocationTree mit, List<ExpressionTree> args, List<ExpressionTree> transposedArgs, Set<Integer> indexes) {\n+    if (!isLoggingMethod(mit)) {\n+      return false;\n+    }\n     if (mit.symbol().owner().type().is(JAVA_UTIL_LOGGING_LOGGER)) {\n+      // Remove the last argument from the count if it's a throwable, since log(Level level, String msg, Throwable thrown) will be called.\n+      // If the argument is an array, any exception in the array will be considered as Object, behaving as any others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a228636ff079d640769be9003233c564619a58f1"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3966, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}