{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTAzMTkx", "number": 3107, "title": "SONARJAVA-3400 Handle DateFormat.getDateInstance()", "bodyText": "", "createdAt": "2020-07-10T15:27:01Z", "url": "https://github.com/SonarSource/sonar-java/pull/3107", "merged": true, "mergeCommit": {"oid": "20e5d87d4bc5b1aa9fb2407c76decbd3c7c265b1"}, "closed": true, "closedAt": "2020-07-14T08:03:24Z", "author": {"login": "m-g-sonar"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0kL3MgFqTQ0NzQxMzQyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0xZKzgFqTQ0Nzg3ODg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDEzNDIz", "url": "https://github.com/SonarSource/sonar-java/pull/3107#pullrequestreview-447413423", "createdAt": "2020-07-13T16:32:27Z", "commit": {"oid": "6a481f92a6a48f741df51e5cef02c7fd350ef7b4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMjoyN1rOGwwbEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozODowMFrOGwwoyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3ODE5Mw==", "bodyText": "The method should probably be renamed since it's no longer just about the type. Maybe just isForbidden.", "url": "https://github.com/SonarSource/sonar-java/pull/3107#discussion_r453778193", "createdAt": "2020-07-13T16:32:27Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/StaticMultithreadedUnsafeFieldsCheck.java", "diffHunk": "@@ -61,8 +68,20 @@ public void visitNode(Tree tree) {\n   }\n \n   private static boolean isForbiddenType(VariableTree variableTree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a481f92a6a48f741df51e5cef02c7fd350ef7b4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3OTM1MQ==", "bodyText": "The two ifs that return false can be combined into one:\nif (initializer == null || initializer.is(Tree.Kind.NULL_LITERAL)) {\n  return false;\n}", "url": "https://github.com/SonarSource/sonar-java/pull/3107#discussion_r453779351", "createdAt": "2020-07-13T16:34:19Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/StaticMultithreadedUnsafeFieldsCheck.java", "diffHunk": "@@ -61,8 +68,20 @@ public void visitNode(Tree tree) {\n   }\n \n   private static boolean isForbiddenType(VariableTree variableTree) {\n+    if (isForbiddenType(variableTree.type().symbolType())) {\n+      return true;\n+    }\n     ExpressionTree initializer = variableTree.initializer();\n-    return isForbiddenType(variableTree.type().symbolType()) || (initializer != null && !initializer.is(Tree.Kind.NULL_LITERAL) && isForbiddenType(initializer.symbolType()));\n+    if (initializer == null) {\n+      return false;\n+    }\n+    if (initializer.is(Tree.Kind.NULL_LITERAL)) {\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a481f92a6a48f741df51e5cef02c7fd350ef7b4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4MTcwNw==", "bodyText": "This will break the case where the initializer is a method call returning a forbidden type (which should be added as a test case since currently there are only test where a constructor is called rather than a method). The check for isForbiddenType(initializer.symbolType()) should come before this one. Or alternatively this one should only return if the method matcher matches, i.e.:\nif (initializer.is(Tree.Kind.METHOD_INVOCATION) && GET_DATE_INSTANCE.matches((MethodInvocationTree) initializer)) {\n  return true;\n}", "url": "https://github.com/SonarSource/sonar-java/pull/3107#discussion_r453781707", "createdAt": "2020-07-13T16:38:00Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/StaticMultithreadedUnsafeFieldsCheck.java", "diffHunk": "@@ -61,8 +68,20 @@ public void visitNode(Tree tree) {\n   }\n \n   private static boolean isForbiddenType(VariableTree variableTree) {\n+    if (isForbiddenType(variableTree.type().symbolType())) {\n+      return true;\n+    }\n     ExpressionTree initializer = variableTree.initializer();\n-    return isForbiddenType(variableTree.type().symbolType()) || (initializer != null && !initializer.is(Tree.Kind.NULL_LITERAL) && isForbiddenType(initializer.symbolType()));\n+    if (initializer == null) {\n+      return false;\n+    }\n+    if (initializer.is(Tree.Kind.NULL_LITERAL)) {\n+      return false;\n+    }\n+    if (initializer.is(Tree.Kind.METHOD_INVOCATION)) {\n+      return GET_DATE_INSTANCE.matches((MethodInvocationTree) initializer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a481f92a6a48f741df51e5cef02c7fd350ef7b4"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14ce1c3ead2943485b3e6f2d71d445309a99ef4b", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/14ce1c3ead2943485b3e6f2d71d445309a99ef4b", "committedDate": "2020-07-14T06:56:37Z", "message": "Move test file into compiled project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77f8afb1d08a2ce03b39f3c0186c2387cc06c597", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/77f8afb1d08a2ce03b39f3c0186c2387cc06c597", "committedDate": "2020-07-14T07:05:13Z", "message": "SONARJAVA-3400 Handle DateFormat.getDateInstance()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a481f92a6a48f741df51e5cef02c7fd350ef7b4", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/6a481f92a6a48f741df51e5cef02c7fd350ef7b4", "committedDate": "2020-07-10T15:15:57Z", "message": "SONARJAVA-3400 Handle DateFormat.getDateInstance()"}, "afterCommit": {"oid": "77f8afb1d08a2ce03b39f3c0186c2387cc06c597", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/77f8afb1d08a2ce03b39f3c0186c2387cc06c597", "committedDate": "2020-07-14T07:05:13Z", "message": "SONARJAVA-3400 Handle DateFormat.getDateInstance()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODc4ODc3", "url": "https://github.com/SonarSource/sonar-java/pull/3107#pullrequestreview-447878877", "createdAt": "2020-07-14T08:02:59Z", "commit": {"oid": "77f8afb1d08a2ce03b39f3c0186c2387cc06c597"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1661, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}