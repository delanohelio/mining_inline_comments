{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMzczNTg4", "number": 3212, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo1MDowN1rOEnXfjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzozNFrOEn9CsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NzE0ODI5OnYy", "diffSide": "LEFT", "path": "java-checks/src/main/java/org/sonar/java/checks/CheckList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo1MDowOFrOHX603w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo1MDowOFrOHX603w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0MzEwMw==", "bodyText": "As discussed this morning, we can not drop this rule directly, issues currently raised should not disappear, we should go through a deprecation period.\nAt the end:\n\nS4790 implementation will change (and it happens to be matching closely S2070), to report fewer issues. And it's perfectly fine, it's like any improvement of a rule.\nS2070 will be deprecated. The implementation will be closely related to the new S4790, and it's not a problem either.\n\n@m-g-sonar Does this solution looks good to you? You mention the possibility to use @DeprecatedRuleKey, but I'm unsure to see what it can improve.", "url": "https://github.com/SonarSource/sonar-java/pull/3212#discussion_r494843103", "createdAt": "2020-09-25T08:50:08Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CheckList.java", "diffHunk": "@@ -345,7 +344,6 @@ private CheckList() {\n       CustomUnclosedResourcesCheck.class,\n       DanglingElseStatementsCheck.class,\n       DataEncryptionCheck.class,\n-      DataHashingCheck.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b07b1fe6f8caaa325dcb6cd37c22708c7cccd69c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzMwMDMzOnYy", "diffSide": "LEFT", "path": "java-checks/src/main/java/org/sonar/java/checks/DeprecatedHashAlgorithmCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzozNFrOHYxYtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0NzoxMFrOHYyHBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzAxNQ==", "bodyText": "Importing statically in one file and using a qualified name in another feels like cheating the duplication. In my opinion, we should either accept it or organize the code to really avoid duplication.\nIn this case, isn't it possible to create an abstract class instead of a helper, and having two rules inheriting from it?", "url": "https://github.com/SonarSource/sonar-java/pull/3212#discussion_r495737015", "createdAt": "2020-09-28T07:23:34Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/DeprecatedHashAlgorithmCheck.java", "diffHunk": "@@ -39,168 +35,26 @@\n import org.sonar.plugins.java.api.tree.NewClassTree;\n import org.sonar.plugins.java.api.tree.Tree;\n \n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.MD2;\n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.MD5;\n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.SHA1;\n-import static org.sonar.plugins.java.api.semantic.MethodMatchers.ANY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0692f8fb7fbdca83f60c22eec42718387e87f97"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0ODg2OA==", "bodyText": "I thought about it, but in the future we'll remove one of the rule, so we'll have only one class. Actually I can refactor it, so we won't have duplications without this trick", "url": "https://github.com/SonarSource/sonar-java/pull/3212#discussion_r495748868", "createdAt": "2020-09-28T07:47:10Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/DeprecatedHashAlgorithmCheck.java", "diffHunk": "@@ -39,168 +35,26 @@\n import org.sonar.plugins.java.api.tree.NewClassTree;\n import org.sonar.plugins.java.api.tree.Tree;\n \n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.MD2;\n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.MD5;\n-import static org.sonar.java.checks.DeprecatedHashAlgorithmCheck.InsecureAlgorithm.SHA1;\n-import static org.sonar.plugins.java.api.semantic.MethodMatchers.ANY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzAxNQ=="}, "originalCommit": {"oid": "c0692f8fb7fbdca83f60c22eec42718387e87f97"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3760, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}