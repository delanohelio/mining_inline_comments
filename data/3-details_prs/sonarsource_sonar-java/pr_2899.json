{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjIzMzk4", "number": 2899, "title": "SONARJAVA-3325 [JSP] Remove dependency on Ant from Jasper", "bodyText": "Current size: 18709446\n6.2: 17038520\ni.e. we are at +1.7MB for JSP support", "createdAt": "2020-04-01T20:45:08Z", "url": "https://github.com/SonarSource/sonar-java/pull/2899", "merged": true, "mergeCommit": {"oid": "1a536ec5e20cd57d055e362a5c6cd2d9ee275b59"}, "closed": true, "closedAt": "2020-04-03T12:30:17Z", "author": {"login": "saberduck"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTo6_ogBqjMxOTEzNDk5MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT_KxtABqjMxOTU5OTIyNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "629f8b39d6c63ff42815368037ef5d7ce16d30ba", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/629f8b39d6c63ff42815368037ef5d7ce16d30ba", "committedDate": "2020-04-01T20:43:06Z", "message": "SONARJAVA-3325 [JSP] Remove dependency on Ant from Jasper"}, "afterCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/abba562086b4495b3ba56ab8e2dc1872dcbd2585", "committedDate": "2020-04-02T09:31:01Z", "message": "SONARJAVA-3325 [JSP] Remove dependency on Ant from Jasper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTk5ODA4", "url": "https://github.com/SonarSource/sonar-java/pull/2899#pullrequestreview-386999808", "createdAt": "2020-04-03T07:30:25Z", "commit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzozMDoyNlrOGAIMwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzozNzowM1rOGAIZhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NzUyMA==", "bodyText": "I think this operation you should rely on https://docs.oracle.com/javase/7/docs/api/java/nio/file/Path.html#relativize(java.nio.file.Path) rather than string.", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402787520", "createdAt": "2020-04-03T07:30:26Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/main/java/org/sonar/java/jsp/Jasper.java", "diffHunk": "@@ -33,38 +35,71 @@\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import java.util.stream.StreamSupport;\n-import org.apache.jasper.JspC;\n+import javax.servlet.jsp.JspFactory;\n+import org.apache.jasper.JasperException;\n+import org.apache.jasper.JspCompilationContext;\n+import org.apache.jasper.compiler.Compiler;\n+import org.apache.jasper.compiler.JspRuntimeContext;\n+import org.apache.jasper.runtime.JspFactoryImpl;\n+import org.apache.jasper.servlet.JspCServletContext;\n import org.sonar.api.batch.fs.FileSystem;\n import org.sonar.api.batch.fs.InputFile;\n import org.sonar.api.batch.sensor.SensorContext;\n import org.sonar.api.scanner.ScannerSide;\n import org.sonar.api.utils.log.Logger;\n import org.sonar.api.utils.log.Loggers;\n-import org.sonar.java.AnalysisException;\n import org.sonar.java.model.GeneratedFile;\n import org.sonar.java.model.SmapFile;\n \n-import static java.util.Arrays.asList;\n-\n @ScannerSide\n public class Jasper {\n \n   private static final Logger LOG = Loggers.get(Jasper.class);\n \n-  public Collection<GeneratedFile> generateFiles(SensorContext context, List<File> javaClasspath) {\n-    List<Path> jspFiles = jspFiles(context.fileSystem());\n+  public Collection<GeneratedFile> generateFiles(SensorContext sensorContext, List<File> javaClasspath) {\n+    List<Path> jspFiles = jspFiles(sensorContext.fileSystem());\n     LOG.debug(\"Found {} JSP files.\", jspFiles.size());\n     if (jspFiles.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    Path outputDir = outputDir(context);\n+    Path outputDir = outputDir(sensorContext);\n+    File baseDir = sensorContext.fileSystem().baseDir();\n+    // Jasper internally calls Thread#getContextClassLoader to instantiate some classes. ContextClassLoader is set by scanner\n+    // and doesn't contain plugin jar, so we need to configure ContextClassLoader with the class loader of the plugin to be able\n+    // to run Jasper. Original classloader is restored in finally.\n+    ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n     try {\n-      Jasper.compileJspFiles(jspFiles, javaClasspath, outputDir, context.fileSystem().baseDir());\n+      ClassLoader classLoader = initClassLoader(javaClasspath);\n+      Thread.currentThread().setContextClassLoader(classLoader);\n+      JspFactory.setDefaultFactory(new JspFactoryImpl());\n+      JspCServletContext servletContext = new ServletContext(toUrl(baseDir), classLoader);\n+      JasperOptions options = new JasperOptions(servletContext, outputDir);\n+      JspRuntimeContext runtimeContext = new JspRuntimeContext(servletContext, options);\n+\n+      boolean errorTranspiling = false;\n+      for (Path file : jspFiles) {\n+        LOG.debug(\"Transpiling JSP: {}\", file);\n+        try {\n+          String relativePath = file.toAbsolutePath().toString().substring(baseDir.getAbsolutePath().length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4ODc4Mg==", "bodyText": "could deserve just a (tiny) why of this can't happen.", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402788782", "createdAt": "2020-04-03T07:33:04Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/main/java/org/sonar/java/jsp/Jasper.java", "diffHunk": "@@ -74,22 +109,18 @@\n       .collect(Collectors.toList());\n   }\n \n-  private static void compileJspFiles(List<Path> jspFiles, List<File> javaClasspath, Path outputDir, File baseDir) {\n-    String classpath = javaClasspath.stream().map(File::getAbsolutePath).collect(Collectors.joining(File.pathSeparator));\n-    List<String> args = new ArrayList<>(asList(\"-v\", \"-failFast\",\n-      \"-cache\", \"false\",\n-      \"-javaEncoding\", StandardCharsets.UTF_8.toString(),\n-      \"-d\", outputDir.toString(),\n-      \"-webapp\", baseDir.getAbsolutePath(),\n-      \"-classpath\", classpath, \"-smap\", \"-dumpsmap\"));\n-    jspFiles.stream().map(Path::toString).forEach(args::add);\n+  @VisibleForTesting\n+  ClassLoader initClassLoader(List<File> classPath) {\n+    URL[] urls = classPath.stream().map(Jasper::toUrl).toArray(URL[]::new);\n+    return new URLClassLoader(urls, Jasper.class.getClassLoader());\n+  }\n+\n+  private static URL toUrl(File f) {\n     try {\n-      LOG.debug(\"Running JspC with args {} \", args);\n-      JspC jspc = new JspC();\n-      jspc.setArgs(args.toArray(new String[0]));\n-      jspc.execute();\n-    } catch (Exception e) {\n-      throw new AnalysisException(\"Error while transpiling JSP pages.\", e);\n+      return f.toURI().toURL();\n+    } catch (MalformedURLException e) {\n+      // can't happen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4OTUwMQ==", "bodyText": "cosmetic but I tend to think that this method could be made a bit more readable by extracting the core of the loop into a compileJspFile(... ) method", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402789501", "createdAt": "2020-04-03T07:34:34Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/main/java/org/sonar/java/jsp/Jasper.java", "diffHunk": "@@ -33,38 +35,71 @@\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import java.util.stream.StreamSupport;\n-import org.apache.jasper.JspC;\n+import javax.servlet.jsp.JspFactory;\n+import org.apache.jasper.JasperException;\n+import org.apache.jasper.JspCompilationContext;\n+import org.apache.jasper.compiler.Compiler;\n+import org.apache.jasper.compiler.JspRuntimeContext;\n+import org.apache.jasper.runtime.JspFactoryImpl;\n+import org.apache.jasper.servlet.JspCServletContext;\n import org.sonar.api.batch.fs.FileSystem;\n import org.sonar.api.batch.fs.InputFile;\n import org.sonar.api.batch.sensor.SensorContext;\n import org.sonar.api.scanner.ScannerSide;\n import org.sonar.api.utils.log.Logger;\n import org.sonar.api.utils.log.Loggers;\n-import org.sonar.java.AnalysisException;\n import org.sonar.java.model.GeneratedFile;\n import org.sonar.java.model.SmapFile;\n \n-import static java.util.Arrays.asList;\n-\n @ScannerSide\n public class Jasper {\n \n   private static final Logger LOG = Loggers.get(Jasper.class);\n \n-  public Collection<GeneratedFile> generateFiles(SensorContext context, List<File> javaClasspath) {\n-    List<Path> jspFiles = jspFiles(context.fileSystem());\n+  public Collection<GeneratedFile> generateFiles(SensorContext sensorContext, List<File> javaClasspath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5MDc4OA==", "bodyText": "I am wondering if in order to make that statement clearer in the code, the unused method should be implemented with a throw new UnsupportedOperationException", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402790788", "createdAt": "2020-04-03T07:37:03Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/main/java/org/sonar/java/jsp/JasperOptions.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.jsp;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Map;\n+import javax.servlet.jsp.tagext.TagLibraryInfo;\n+import org.apache.jasper.Options;\n+import org.apache.jasper.TrimSpacesOption;\n+import org.apache.jasper.compiler.JspConfig;\n+import org.apache.jasper.compiler.TagPluginManager;\n+import org.apache.jasper.compiler.TldCache;\n+import org.apache.jasper.servlet.JspCServletContext;\n+import org.apache.jasper.servlet.TldScanner;\n+import org.sonar.java.AnalysisException;\n+import org.xml.sax.SAXException;\n+\n+/**\n+ * This class is replacing {@link org.apache.jasper.JspC} to avoid dependency on Ant. Most of the initialization is\n+ * copied from JspC class which can be used as reference. Many of the methods are not actually used and are needed only\n+ * to implement the interface.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MDMyNzQ5", "url": "https://github.com/SonarSource/sonar-java/pull/2899#pullrequestreview-387032749", "createdAt": "2020-04-03T07:52:29Z", "commit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzo1MjoyOVrOGAI65g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzo1MjoyOVrOGAI65g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5OTMzNA==", "bodyText": "I am unsure about what this test actually verifies.", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402799334", "createdAt": "2020-04-03T07:52:29Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/test/java/org/sonar/java/jsp/JasperTest.java", "diffHunk": "@@ -133,10 +137,24 @@ void test_source_map() throws Exception {\n     assertThat(generatedFile.sourceMap()).isNotNull();\n   }\n \n+  @Test\n+  void test_failure_invalid_classpath() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bccf40ff876359ff055365081cd104abd2b03495", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/bccf40ff876359ff055365081cd104abd2b03495", "committedDate": "2020-04-03T08:44:27Z", "message": "SONARJAVA-3325 [JSP] Remove dependency on Ant from Jasper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abba562086b4495b3ba56ab8e2dc1872dcbd2585", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/abba562086b4495b3ba56ab8e2dc1872dcbd2585", "committedDate": "2020-04-02T09:31:01Z", "message": "SONARJAVA-3325 [JSP] Remove dependency on Ant from Jasper"}, "afterCommit": {"oid": "c7c75997ae0ad952f3868b4fcc02f538c049d667", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/c7c75997ae0ad952f3868b4fcc02f538c049d667", "committedDate": "2020-04-03T08:44:27Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7c75997ae0ad952f3868b4fcc02f538c049d667", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/c7c75997ae0ad952f3868b4fcc02f538c049d667", "committedDate": "2020-04-03T08:44:27Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}, "afterCommit": {"oid": "ca49b8ade2fb3606eb312d916ec4d53e4538a39c", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/ca49b8ade2fb3606eb312d916ec4d53e4538a39c", "committedDate": "2020-04-03T09:12:41Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca49b8ade2fb3606eb312d916ec4d53e4538a39c", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/ca49b8ade2fb3606eb312d916ec4d53e4538a39c", "committedDate": "2020-04-03T09:12:41Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}, "afterCommit": {"oid": "635d9e6b22e4d77a93ddad397e79b6811d69fa4c", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/635d9e6b22e4d77a93ddad397e79b6811d69fa4c", "committedDate": "2020-04-03T09:47:58Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MTMwNzc3", "url": "https://github.com/SonarSource/sonar-java/pull/2899#pullrequestreview-387130777", "createdAt": "2020-04-03T10:18:08Z", "commit": {"oid": "635d9e6b22e4d77a93ddad397e79b6811d69fa4c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDoxODowOFrOGAPXZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDoxODowOFrOGAPXZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNDkzNQ==", "bodyText": "Why not the interface ?", "url": "https://github.com/SonarSource/sonar-java/pull/2899#discussion_r402904935", "createdAt": "2020-04-03T10:18:08Z", "author": {"login": "benzonico"}, "path": "java-jsp/src/main/java/org/sonar/java/jsp/Jasper.java", "diffHunk": "@@ -21,50 +21,118 @@\n \n import java.io.File;\n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import java.util.stream.StreamSupport;\n-import org.apache.jasper.JspC;\n+import javax.servlet.jsp.JspFactory;\n+import org.apache.jasper.JasperException;\n+import org.apache.jasper.JspCompilationContext;\n+import org.apache.jasper.compiler.Compiler;\n+import org.apache.jasper.compiler.JspRuntimeContext;\n+import org.apache.jasper.runtime.JspFactoryImpl;\n+import org.apache.jasper.servlet.JspCServletContext;\n+import org.sonar.api.batch.fs.FilePredicates;\n import org.sonar.api.batch.fs.FileSystem;\n import org.sonar.api.batch.fs.InputFile;\n import org.sonar.api.batch.sensor.SensorContext;\n import org.sonar.api.scanner.ScannerSide;\n import org.sonar.api.utils.log.Logger;\n import org.sonar.api.utils.log.Loggers;\n-import org.sonar.java.AnalysisException;\n import org.sonar.java.model.GeneratedFile;\n import org.sonar.java.model.SmapFile;\n \n-import static java.util.Arrays.asList;\n-\n @ScannerSide\n public class Jasper {\n \n   private static final Logger LOG = Loggers.get(Jasper.class);\n \n-  public Collection<GeneratedFile> generateFiles(SensorContext context, List<File> javaClasspath) {\n-    List<Path> jspFiles = jspFiles(context.fileSystem());\n+  public Collection<GeneratedFile> generateFiles(SensorContext sensorContext, List<File> javaClasspath) {\n+    List<Path> jspFiles = jspFiles(sensorContext.fileSystem());\n     LOG.debug(\"Found {} JSP files.\", jspFiles.size());\n     if (jspFiles.isEmpty()) {\n       return Collections.emptyList();\n     }\n-    Path outputDir = outputDir(context);\n+    Path uriRoot = findWebInfParentDirectory(sensorContext.fileSystem())\n+      .orElse(sensorContext.fileSystem().baseDir().getAbsoluteFile().toPath());\n+    LOG.debug(\"Context root set to {}\", uriRoot);\n+    Path outputDir = outputDir(sensorContext);\n+    // Jasper internally calls Thread#getContextClassLoader to instantiate some classes. ContextClassLoader is set by scanner\n+    // and doesn't contain plugin jar, so we need to configure ContextClassLoader with the class loader of the plugin to be able\n+    // to run Jasper. Original classloader is restored in finally.\n+    ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader();\n     try {\n-      Jasper.compileJspFiles(jspFiles, javaClasspath, outputDir, context.fileSystem().baseDir());\n+      ClassLoader classLoader = initClassLoader(javaClasspath);\n+      Thread.currentThread().setContextClassLoader(classLoader);\n+      JspFactory.setDefaultFactory(new JspFactoryImpl());\n+      JspCServletContext servletContext = new ServletContext(uriRoot.toUri().toURL(), classLoader);\n+      JasperOptions options = getJasperOptions(outputDir, servletContext);\n+      JspRuntimeContext runtimeContext = new JspRuntimeContext(servletContext, options);\n+\n+      boolean errorTranspiling = false;\n+      for (Path jsp : jspFiles) {\n+        try {\n+          transpileJsp(jsp, uriRoot, classLoader, servletContext, options, runtimeContext);\n+        } catch (Exception e) {\n+          errorTranspiling = true;\n+          LOG.debug(\"Error transpiling \" + jsp, e);\n+        }\n+      }\n+      if (errorTranspiling) {\n+        LOG.warn(\"Some JSP pages failed to transpile. Enable debug log for details.\");\n+      }\n+      return findGeneratedFiles(outputDir, uriRoot);\n     } catch (Exception e) {\n       LOG.warn(\"Failed to transpile JSP files.\", e);\n       return Collections.emptyList();\n+    } finally {\n+      Thread.currentThread().setContextClassLoader(originalClassLoader);\n     }\n-    return findGeneratedFiles(outputDir);\n+  }\n+\n+  private static void transpileJsp(Path jsp, Path uriRoot, ClassLoader classLoader, JspCServletContext servletContext,\n+                                   JasperOptions options, JspRuntimeContext runtimeContext) throws Exception {\n+    LOG.debug(\"Transpiling JSP: {}\", jsp);\n+    String jspUri = \"/\" + uriRoot.relativize(jsp).toString();\n+    JspCompilationContext compilationContext = new JspCompilationContext(jspUri, options, servletContext, null,\n+      runtimeContext);\n+    compilationContext.setClassLoader(classLoader);\n+    Compiler compiler = compilationContext.createCompiler();\n+    compiler.compile(false, true);\n+  }\n+\n+  JasperOptions getJasperOptions(Path outputDir, JspCServletContext servletContext) {\n+    return new JasperOptions(servletContext, outputDir);\n+  }\n+\n+  private static Optional<Path> findWebInfParentDirectory(FileSystem fs) {\n+    FilePredicates predicates = fs.predicates();\n+    ArrayList<InputFile> inputFiles = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "635d9e6b22e4d77a93ddad397e79b6811d69fa4c"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0e988dc43fd11c0ed6c5eef2fb71361a105152", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/5a0e988dc43fd11c0ed6c5eef2fb71361a105152", "committedDate": "2020-04-03T11:25:56Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56a51f713f0a40dde5976e57a5aef9322ecd00e1", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/56a51f713f0a40dde5976e57a5aef9322ecd00e1", "committedDate": "2020-04-03T10:31:36Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}, "afterCommit": {"oid": "5a0e988dc43fd11c0ed6c5eef2fb71361a105152", "author": {"user": {"login": "saberduck", "name": "Tibor Blenessy"}}, "url": "https://github.com/SonarSource/sonar-java/commit/5a0e988dc43fd11c0ed6c5eef2fb71361a105152", "committedDate": "2020-04-03T11:25:56Z", "message": "[JSP] Use WEB-INF parent as context root for Jasper"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1774, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}