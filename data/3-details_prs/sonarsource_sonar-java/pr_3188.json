{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NTIxNDU1", "number": 3188, "title": "SONARJAVA-3517 Rule S5970: Spring's ModelAndViewAssert assertions should be used instead of other assertions", "bodyText": "", "createdAt": "2020-09-17T09:09:33Z", "url": "https://github.com/SonarSource/sonar-java/pull/3188", "merged": true, "mergeCommit": {"oid": "dc8abce50c5a71fbda4cec6b4cfa20dd187631b4"}, "closed": true, "closedAt": "2020-09-17T14:45:31Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJuDAMAFqTQ5MDQyOTcxOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJyGzJAFqTQ5MDY3Nzk2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDI5NzE4", "url": "https://github.com/SonarSource/sonar-java/pull/3188#pullrequestreview-490429718", "createdAt": "2020-09-17T09:53:24Z", "commit": {"oid": "4827efd38c7e637e9b01b951a2c817685ec93d99"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1MzoyNVrOHTacjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTo1OTo1NlrOHTatrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDExODI4Ng==", "bodyText": "Why not extend AbstractMethodDetection instead ?", "url": "https://github.com/SonarSource/sonar-java/pull/3188#discussion_r490118286", "createdAt": "2020-09-17T09:53:25Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/SpringAssertionsSimplificationCheck.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.tests;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import org.sonar.check.Rule;\n+import org.sonar.java.model.ExpressionUtils;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.semantic.MethodMatchers;\n+import org.sonar.plugins.java.api.tree.IdentifierTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+import static org.sonar.plugins.java.api.semantic.MethodMatchers.ANY;\n+\n+@Rule(key = \"S5970\")\n+public class SpringAssertionsSimplificationCheck extends IssuableSubscriptionVisitor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4827efd38c7e637e9b01b951a2c817685ec93d99"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyMDUwMg==", "bodyText": "I agree this was not documented, but I think we should also cover assertJ here, with calls such as:\nassertThat((Boolean) mav.getModelMap().get(\"myAttribute\")).isTrue();\nassertThat(mav.getModelMap().get(\"myAttribute\"))).isEqualTo(myObject);", "url": "https://github.com/SonarSource/sonar-java/pull/3188#discussion_r490120502", "createdAt": "2020-09-17T09:56:46Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-test-sources/src/main/java/checks/tests/SpringAssertionsSimplificationCheck.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package checks.tests;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.test.web.ModelAndViewAssert;\n+import org.springframework.ui.ModelMap;\n+import org.springframework.web.servlet.ModelAndView;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class SpringAssertionsSimplificationCheck {\n+\n+  Object myObject;\n+  ModelAndView modelAndView;\n+\n+  @Test\n+  void couldBeSimplified() {\n+    ModelAndView mav = getMyModelAndView();\n+\n+    assertEquals(\"register\", mav.getViewName()); // Noncompliant [[sc=5;ec=17]] {{Replace this assertion by \"ModelAndViewAssert.assertViewName\".}}\n+    assertTrue((Boolean) mav.getModelMap().get(\"myAttribute\")); // Noncompliant [[sc=5;ec=15]] {{Replace this assertion by \"ModelAndViewAssert.assertModelAttributeValue\".}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4827efd38c7e637e9b01b951a2c817685ec93d99"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyMjY3MQ==", "bodyText": "I don't like the way of writing this nesting test. The loop on parent is not efficient and can hit performance, while in our case we already know it will exist only in a very specific way. I would prefer a top-down approach:\n\nif getting assertThat(...)\nthen check its parameter (so its children) if it contains mav.getModelMap().get() instead of the opposite.", "url": "https://github.com/SonarSource/sonar-java/pull/3188#discussion_r490122671", "createdAt": "2020-09-17T09:59:56Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/SpringAssertionsSimplificationCheck.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.tests;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import org.sonar.check.Rule;\n+import org.sonar.java.model.ExpressionUtils;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.semantic.MethodMatchers;\n+import org.sonar.plugins.java.api.tree.IdentifierTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+import static org.sonar.plugins.java.api.semantic.MethodMatchers.ANY;\n+\n+@Rule(key = \"S5970\")\n+public class SpringAssertionsSimplificationCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final String MESSAGE_TEMPLATE = \"Replace this assertion by \\\"%s\\\".\";\n+\n+  private static final String[] ASSERTION_CLASSES = {\n+    // JUnit4\n+    \"org.junit.Assert\",\n+    \"junit.framework.TestCase\",\n+    // JUnit4 (deprecated)\n+    \"junit.framework.Assert\",\n+    // JUnit5\n+    \"org.junit.jupiter.api.Assertions\"\n+  };\n+\n+  public static final MethodMatchers ASSERT_EQUALS_MATCHER = MethodMatchers.create()\n+    .ofTypes(ASSERTION_CLASSES)\n+    .names(\"assertEquals\")\n+    .addParametersMatcher(ANY, ANY)\n+    .build();\n+\n+  public static final MethodMatchers ASSERT_TRUE_FALSE_EQUALS_MATCHER = MethodMatchers.create()\n+    .ofTypes(ASSERTION_CLASSES)\n+    .names(\"assertEquals\", \"assertTrue\", \"assertFalse\")\n+    .withAnyParameters()\n+    .build();\n+\n+  public static final MethodMatchers MODEL_VIEW_GET_VIEW_NAME = MethodMatchers.create()\n+    .ofTypes(\"org.springframework.web.servlet.ModelAndView\")\n+    .names(\"getViewName\")\n+    .addWithoutParametersMatcher()\n+    .build();\n+\n+  public static final MethodMatchers MODEL_MAP_GET = MethodMatchers.create()\n+    .ofTypes(\"org.springframework.ui.ModelMap\")\n+    .names(\"get\")\n+    .addParametersMatcher(\"java.lang.Object\")\n+    .build();\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Collections.singletonList(Tree.Kind.METHOD_INVOCATION);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    MethodInvocationTree mit = (MethodInvocationTree) tree;\n+    if (MODEL_VIEW_GET_VIEW_NAME.matches(mit)) {\n+      getNestingCall(tree, ASSERT_EQUALS_MATCHER).ifPresent(id ->\n+        reportIssue(id, String.format(MESSAGE_TEMPLATE, \"ModelAndViewAssert.assertViewName\"))\n+      );\n+    } else if (MODEL_MAP_GET.matches(mit)) {\n+      getNestingCall(tree, ASSERT_TRUE_FALSE_EQUALS_MATCHER).ifPresent(id ->\n+        reportIssue(id, String.format(MESSAGE_TEMPLATE, \"ModelAndViewAssert.assertModelAttributeValue\"))\n+      );\n+    }\n+  }\n+\n+  private static Optional<IdentifierTree> getNestingCall(Tree nestedTree, MethodMatchers enclosingCall) {\n+    Tree parent = nestedTree.parent();\n+    while (parent != null && !parent.is(Tree.Kind.METHOD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4827efd38c7e637e9b01b951a2c817685ec93d99"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda86b8444acf373e1a0939840f39d69bd967872", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/dda86b8444acf373e1a0939840f39d69bd967872", "committedDate": "2020-09-17T13:28:49Z", "message": "SONARJAVA-3517 Rule S5970: Spring's ModelAndViewAssert assertions should be used instead of other assertions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e23bb7b928b8a2b63074b4ff177f92f891701b5", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4e23bb7b928b8a2b63074b4ff177f92f891701b5", "committedDate": "2020-09-17T13:28:49Z", "message": "Support assertJ and fix from review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdf1f56062bdc376441b94b7fcddec2ce3c8ba2d", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/bdf1f56062bdc376441b94b7fcddec2ce3c8ba2d", "committedDate": "2020-09-17T13:07:46Z", "message": "Support assertJ and fix from review"}, "afterCommit": {"oid": "4e23bb7b928b8a2b63074b4ff177f92f891701b5", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4e23bb7b928b8a2b63074b4ff177f92f891701b5", "committedDate": "2020-09-17T13:28:49Z", "message": "Support assertJ and fix from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjc3OTY1", "url": "https://github.com/SonarSource/sonar-java/pull/3188#pullrequestreview-490677965", "createdAt": "2020-09-17T14:45:14Z", "commit": {"oid": "4e23bb7b928b8a2b63074b4ff177f92f891701b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1997, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}