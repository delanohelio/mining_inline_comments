{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODIwNDQ5", "number": 3205, "title": "Use ParameterizedTest instead of duplicating code", "bodyText": "Fix new code smells in our code due to the addition of a new rule: RSPEC-5976", "createdAt": "2020-09-22T09:50:47Z", "url": "https://github.com/SonarSource/sonar-java/pull/3205", "merged": true, "mergeCommit": {"oid": "3c88a09c04eff356698e8b35404089367c431906"}, "closed": true, "closedAt": "2020-09-22T14:00:01Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLUzX4gH2gAyNDkwODIwNDQ5OjQwOTNmZTQyZTgxZDJmMzA0ZmYzYjVmOTQzMTk5MjlkMmE2NzI1NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLYdACAFqTQ5MzQ5MDgzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4093fe42e81d2f304ff3b5f94319929d2a672553", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4093fe42e81d2f304ff3b5f94319929d2a672553", "committedDate": "2020-09-22T09:44:37Z", "message": "Use ParameterizedTest instead of duplicating code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjk5NzU0", "url": "https://github.com/SonarSource/sonar-java/pull/3205#pullrequestreview-493299754", "createdAt": "2020-09-22T09:56:00Z", "commit": {"oid": "4093fe42e81d2f304ff3b5f94319929d2a672553"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo1NjowMFrOHVyrWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo1NjowMFrOHVyrWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxMjQ0MQ==", "bodyText": "This is the only refactoring that went not smoothly.\nI started with a @CsvSource, and the result was kind of messy, with string on multiple lines, it was not so clear to separate the differents values.\nI then used a @MethodSource and I feel that it's much better, even with the comments that were originally present in the different tests, the result is good.", "url": "https://github.com/SonarSource/sonar-java/pull/3205#discussion_r492612441", "createdAt": "2020-09-22T09:56:00Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/test/java/org/sonar/java/cfg/VariableReadExtractorTest.java", "diffHunk": "@@ -35,13 +39,30 @@ private static MethodTree buildMethodTree(String methodCode) {\n     return (MethodTree) ((ClassTree) cut.types().get(0)).members().get(2);\n   }\n \n-  @Test\n-  void should_extract_local_vars_read() {\n-    MethodTree methodTree = buildMethodTree(\"void foo(boolean a) { new Object() { void foo() { System.out.println(a);} };  }\");\n+  @ParameterizedTest(name = \"[{index}] With includeFields={1}, {2} read variable should be extracted from method code: {0}]\")\n+  @MethodSource(\"provideExtractionTest\")\n+  void should_extract_correctly(String methodCode, boolean includeFields, int size) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4093fe42e81d2f304ff3b5f94319929d2a672553"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNDkwODM5", "url": "https://github.com/SonarSource/sonar-java/pull/3205#pullrequestreview-493490839", "createdAt": "2020-09-22T13:59:48Z", "commit": {"oid": "4093fe42e81d2f304ff3b5f94319929d2a672553"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2010, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}