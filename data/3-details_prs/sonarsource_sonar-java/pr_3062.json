{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzMzMjUy", "number": 3062, "title": "SONARJAVA-3426 Rule S5868: Unicode Grapheme Clusters should be avoided inside regex character classes", "bodyText": "", "createdAt": "2020-06-29T11:20:11Z", "url": "https://github.com/SonarSource/sonar-java/pull/3062", "merged": true, "mergeCommit": {"oid": "5341a8b1a0e5dc46f503d6897ce6acfc38d243bd"}, "closed": true, "closedAt": "2020-06-30T14:18:00Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv_1D_AFqTQzOTA3MDgwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwV-OOgBqjM0OTc4NjMwMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MDcwODAz", "url": "https://github.com/SonarSource/sonar-java/pull/3062#pullrequestreview-439070803", "createdAt": "2020-06-29T12:02:29Z", "commit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjowMjozMFrOGqNoGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMjowMjozMFrOGqNoGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkxNjYzNA==", "bodyText": "The rule description proposes a more precise message when the regex is \"simple enough\", however, I'm not sure to get what are the benefits. If you feel that it would be useful, let's discuss it!", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446916634", "createdAt": "2020-06-29T12:02:30Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/regex/GraphemeClustersInClassesCheck.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.regex;\n+\n+import java.text.Normalizer;\n+import java.util.Collections;\n+import javax.annotation.Nullable;\n+import org.sonar.check.Rule;\n+import org.sonar.java.regex.RegexParseResult;\n+import org.sonar.java.regex.ast.CharacterClassTree;\n+import org.sonar.java.regex.ast.CharacterClassUnionTree;\n+import org.sonar.java.regex.ast.JavaCharacter;\n+import org.sonar.java.regex.ast.PlainCharacterTree;\n+import org.sonar.java.regex.ast.RegexBaseVisitor;\n+import org.sonar.java.regex.ast.RegexTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+\n+@Rule(key = \"S5868\")\n+public class GraphemeClustersInClassesCheck extends AbstractRegexCheck {\n+\n+  private static final String MESSAGE = \"Extract these Grapheme Clusters from the character class.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTQ0NTU1", "url": "https://github.com/SonarSource/sonar-java/pull/3062#pullrequestreview-439144555", "createdAt": "2020-06-29T13:30:38Z", "commit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzozMDozOFrOGqRCtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo0NzowMlrOGqRwDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MjU5Nw==", "bodyText": "Not sure 'r' is before 'e'", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446972597", "createdAt": "2020-06-29T13:30:38Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CheckList.java", "diffHunk": "@@ -398,6 +399,7 @@ private CheckList() {\n       ForLoopUsedAsWhileLoopCheck.class,\n       ForLoopVariableTypeCheck.class,\n       GarbageCollectorCalledCheck.class,\n+      GraphemeClustersInClassesCheck.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3MzQxNg==", "bodyText": "The issue message is in the plural, while there is apparently only one cluster, I feel it is strange\nWhy not reporting directly on it and use a singular form?", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446973416", "createdAt": "2020-06-29T13:31:47Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-test-sources/src/main/java/checks/regex/GraphemeClustersInClassesCheck.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package checks.regex;\n+\n+import java.util.regex.Pattern;\n+\n+public class GraphemeClustersInClassesCheck {\n+\n+  void noncompliant(String str) {\n+    Pattern.compile(\"aaa[e\u0300]aaa\"); // Noncompliant [[sc=25;ec=29]] {{Extract these Grapheme Clusters from the character class.}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3NDAwNw==", "bodyText": "instead of using this, you can use a String concatenation and a different line", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446974007", "createdAt": "2020-06-29T13:32:35Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-test-sources/src/main/java/checks/regex/GraphemeClustersInClassesCheck.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package checks.regex;\n+\n+import java.util.regex.Pattern;\n+\n+public class GraphemeClustersInClassesCheck {\n+\n+  void noncompliant(String str) {\n+    Pattern.compile(\"aaa[e\u0300]aaa\"); // Noncompliant [[sc=25;ec=29]] {{Extract these Grapheme Clusters from the character class.}}\n+    Pattern.compile(\"[e\u0300a-de\u0300]\"); // Noncompliant [[sc=22;ec=31]] {{Extract these Grapheme Clusters from the character class.}}\n+    // Noncompliant@+1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk3NTMxMQ==", "bodyText": "I think it would be valuable to use at least a singular/plural form if not using the simpler case.", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446975311", "createdAt": "2020-06-29T13:34:38Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/regex/GraphemeClustersInClassesCheck.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.regex;\n+\n+import java.text.Normalizer;\n+import java.util.Collections;\n+import javax.annotation.Nullable;\n+import org.sonar.check.Rule;\n+import org.sonar.java.regex.RegexParseResult;\n+import org.sonar.java.regex.ast.CharacterClassTree;\n+import org.sonar.java.regex.ast.CharacterClassUnionTree;\n+import org.sonar.java.regex.ast.JavaCharacter;\n+import org.sonar.java.regex.ast.PlainCharacterTree;\n+import org.sonar.java.regex.ast.RegexBaseVisitor;\n+import org.sonar.java.regex.ast.RegexTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+\n+@Rule(key = \"S5868\")\n+public class GraphemeClustersInClassesCheck extends AbstractRegexCheck {\n+\n+  private static final String MESSAGE = \"Extract these Grapheme Clusters from the character class.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkxNjYzNA=="}, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk4NDIwNQ==", "bodyText": "I feel it is not enough.\nI was surprised to see that a simpler version of the test case from the Noncompliant part of the RSPEC was marked as Compliant, while it shouldn't. The following code, when executed:\n\"cc\u0308c\".replaceAll(\"[c\u0308]\", \"X\");\n\nwould print XXXX, instead of cXc, and it should be reported!", "url": "https://github.com/SonarSource/sonar-java/pull/3062#discussion_r446984205", "createdAt": "2020-06-29T13:47:02Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/regex/GraphemeClustersInClassesCheck.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.regex;\n+\n+import java.text.Normalizer;\n+import java.util.Collections;\n+import javax.annotation.Nullable;\n+import org.sonar.check.Rule;\n+import org.sonar.java.regex.RegexParseResult;\n+import org.sonar.java.regex.ast.CharacterClassTree;\n+import org.sonar.java.regex.ast.CharacterClassUnionTree;\n+import org.sonar.java.regex.ast.JavaCharacter;\n+import org.sonar.java.regex.ast.PlainCharacterTree;\n+import org.sonar.java.regex.ast.RegexBaseVisitor;\n+import org.sonar.java.regex.ast.RegexTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+\n+@Rule(key = \"S5868\")\n+public class GraphemeClustersInClassesCheck extends AbstractRegexCheck {\n+\n+  private static final String MESSAGE = \"Extract these Grapheme Clusters from the character class.\";\n+\n+  @Override\n+  public void checkRegex(RegexParseResult regexForLiterals, MethodInvocationTree mit) {\n+    new GraphemeInClassVisitor().visit(regexForLiterals);\n+  }\n+\n+  private class GraphemeInClassVisitor extends RegexBaseVisitor {\n+\n+    boolean containGrapheme = false;\n+\n+    @Override\n+    public void visitCharacterClass(CharacterClassTree tree) {\n+      super.visitCharacterClass(tree);\n+      if (containGrapheme) {\n+        reportIssue(tree, MESSAGE, null, Collections.emptyList());\n+      }\n+      containGrapheme = false;\n+    }\n+\n+    @Override\n+    public void visitCharacterClassUnion(CharacterClassUnionTree tree) {\n+      JavaCharacter previousChar = null;\n+      for (RegexTree child : tree.getCharacterClasses()) {\n+        if (child.is(RegexTree.Kind.PLAIN_CHARACTER)) {\n+          JavaCharacter currentCharacter = ((PlainCharacterTree) child).getContents();\n+          if (!currentCharacter.isEscapedUnicode()) {\n+            char currentChar = currentCharacter.getCharacter();\n+            if (canCanonicallyCombine(previousChar, currentChar)) {\n+              containGrapheme = true;\n+            }\n+            previousChar = currentCharacter;\n+            continue;\n+          }\n+        }\n+        previousChar = null;\n+      }\n+\n+      super.visitCharacterClassUnion(tree);\n+    }\n+\n+    private boolean canCanonicallyCombine(@Nullable JavaCharacter previousChar, char currentChar) {\n+      return previousChar != null\n+        && Normalizer.normalize(new StringBuilder().append(previousChar.getCharacter()).append(currentChar), Normalizer.Form.NFC).length() == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486"}, "originalPosition": 81}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af5e86ce5915c0cc2110151ce78b9d0dbef1c486", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/af5e86ce5915c0cc2110151ce78b9d0dbef1c486", "committedDate": "2020-06-29T11:18:59Z", "message": "SONARJAVA-3426 Rule S5868: Unicode Grapheme Clusters should be avoided inside regex character classes"}, "afterCommit": {"oid": "e631ecd4a745f2975529b5d2155f47ca333a39cc", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/e631ecd4a745f2975529b5d2155f47ca333a39cc", "committedDate": "2020-06-30T12:59:40Z", "message": "Increase enforced plugin size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMDI2NDk2", "url": "https://github.com/SonarSource/sonar-java/pull/3062#pullrequestreview-440026496", "createdAt": "2020-06-30T13:41:56Z", "commit": {"oid": "e631ecd4a745f2975529b5d2155f47ca333a39cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3949fe4f79469037288dc35c3b235ec8a400e33", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/a3949fe4f79469037288dc35c3b235ec8a400e33", "committedDate": "2020-06-30T13:49:50Z", "message": "SONARJAVA-3426 Rule S5868: Unicode Grapheme Clusters should be avoided inside regex character classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3cbfdeff83cb8ad73299acd424f49be4c25202", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/3b3cbfdeff83cb8ad73299acd424f49be4c25202", "committedDate": "2020-06-30T13:49:50Z", "message": "Increase enforced plugin size"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e631ecd4a745f2975529b5d2155f47ca333a39cc", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/e631ecd4a745f2975529b5d2155f47ca333a39cc", "committedDate": "2020-06-30T12:59:40Z", "message": "Increase enforced plugin size"}, "afterCommit": {"oid": "3b3cbfdeff83cb8ad73299acd424f49be4c25202", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/3b3cbfdeff83cb8ad73299acd424f49be4c25202", "committedDate": "2020-06-30T13:49:50Z", "message": "Increase enforced plugin size"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1650, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}