{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODIzNjIx", "number": 3343, "title": "SONARJAVA-2154 Remove usages of guava Sets, Iterables and AbstractIterator from java-frontend module", "bodyText": "Depends on this pr. Should be rebased", "createdAt": "2020-12-10T10:18:03Z", "url": "https://github.com/SonarSource/sonar-java/pull/3343", "merged": true, "mergeCommit": {"oid": "538b37f869066be946280fbe22f25ac3c0daf38f"}, "closed": true, "closedAt": "2020-12-10T14:58:45Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkxkvJgBqjQwOTQ1ODkzOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkz52HgBqjQwOTUyODc3MzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4374e1c1a1bf2994b85b618642275055b8ed9f68", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4374e1c1a1bf2994b85b618642275055b8ed9f68", "committedDate": "2020-12-10T10:16:39Z", "message": "SONARJAVA-2154 Remove usages of guava AbstractIterator from java-frontend module"}, "afterCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/25da64e3ba157800c90071180497b0e7573b5e2e", "committedDate": "2020-12-10T11:23:44Z", "message": "SONARJAVA-2154 Remove usages of guava AbstractIterator from java-frontend module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTc3MDYz", "url": "https://github.com/SonarSource/sonar-java/pull/3343#pullrequestreview-549177063", "createdAt": "2020-12-10T13:07:40Z", "commit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzowNzo0MFrOIDIYtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzoyMzozNlrOIDJBuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NDAzNw==", "bodyText": "I'm not sure about this implementation. According to the documentation of Guava, why not go for:\nSet<T> newSet1 = new HashSet<>(set1);\nnewSet1.removeAll(set2);\nreturn newSet1;", "url": "https://github.com/SonarSource/sonar-java/pull/3343#discussion_r540154037", "createdAt": "2020-12-10T13:07:40Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/collections/SetUtils.java", "diffHunk": "@@ -47,4 +47,18 @@ private SetUtils() {\n       .flatMap(Set::stream)\n       .collect(Collectors.toSet());\n   }\n+\n+  public static <T> Set<T> difference(Set<T> set1, Set<T> set2) {\n+    return set1.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1NDQ2OQ==", "bodyText": "this is a set, not a list", "url": "https://github.com/SonarSource/sonar-java/pull/3343#discussion_r540154469", "createdAt": "2020-12-10T13:08:27Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/collections/SetUtils.java", "diffHunk": "@@ -47,4 +47,18 @@ private SetUtils() {\n       .flatMap(Set::stream)\n       .collect(Collectors.toSet());\n   }\n+\n+  public static <T> Set<T> difference(Set<T> set1, Set<T> set2) {\n+    return set1.stream()\n+      .filter(elem -> !set2.contains(elem))\n+      .collect(Collectors.toSet());\n+  }\n+\n+  public static <T> T getOnlyElement(Set<T> set) {\n+    if (set.size() == 1) {\n+      return set.iterator().next();\n+    }\n+    throw new IllegalArgumentException(String.format(\"Expected list of size 1, but was list of size %d.\", set.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1ODA4OA==", "bodyText": "I think it might be simpler to write a new method in SymbolicExecutionMode accepting an Iterable instead of an array.", "url": "https://github.com/SonarSource/sonar-java/pull/3343#discussion_r540158088", "createdAt": "2020-12-10T13:14:03Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/model/VisitorsBridgeForTests.java", "diffHunk": "@@ -58,7 +58,8 @@ public VisitorsBridgeForTests(Iterable<? extends JavaCheck> visitors, @Nullable\n   }\n \n   public VisitorsBridgeForTests(Iterable<? extends JavaCheck> visitors, List<File> projectClasspath, @Nullable SonarComponents sonarComponents) {\n-    super(visitors, projectClasspath, sonarComponents, SymbolicExecutionMode.getMode(Iterables.toArray(visitors, JavaCheck.class)));\n+    super(visitors, projectClasspath, sonarComponents, SymbolicExecutionMode.getMode(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2MjQ2Ng==", "bodyText": "The more I read about all these changes, the more I think that having children()  returning Iterable<Tree> in the JavaTree is stupid... we should have go for a List<Tree> from day one, or a least a Collection. It does not make sense to use an Iterable anymore. If you are searching for something else to improve, go for it!", "url": "https://github.com/SonarSource/sonar-java/pull/3343#discussion_r540162466", "createdAt": "2020-12-10T13:20:33Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/model/statement/SwitchExpressionTreeImpl.java", "diffHunk": "@@ -101,7 +101,7 @@ public void accept(TreeVisitor visitor) {\n \n   @Override\n   public Iterable<Tree> children() {\n-    return Iterables.concat(\n+    return ListUtils.concat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2NDUzNg==", "bodyText": "style, can you please align it as in others?\n  Stream.of(STRONG_NULLABLE_ANNOTATIONS, WEAK_NULLABLE_ANNOTATIONS)\n    .flatMap(Set::stream)\n    .collect(Collectors.toSet()));", "url": "https://github.com/SonarSource/sonar-java/pull/3343#discussion_r540164536", "createdAt": "2020-12-10T13:23:36Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/NullableAnnotationUtils.java", "diffHunk": "@@ -65,28 +67,31 @@ private NullableAnnotationUtils() {\n     \"org.springframework.lang.Nullable\",\n     \"reactor.util.annotation.Nullable\");\n \n-  private static final Set<String> NULLABLE_ANNOTATIONS = new ImmutableSet.Builder<String>()\n-    .add(\"android.annotation.Nullable\")\n-    .add(\"android.support.annotation.Nullable\")\n-    .add(\"androidx.annotation.Nullable\")\n-    .add(\"com.sun.istack.internal.Nullable\")\n-    .add(\"edu.umd.cs.findbugs.annotations.Nullable\")\n-    .add(\"io.reactivex.annotations.Nullable\")\n-    .add(\"io.reactivex.rxjava3.annotations.Nullable\")\n-    .add(\"javax.annotation.Nullable\")\n-    .add(\"org.checkerframework.checker.nullness.compatqual.NullableDecl\")\n-    .add(\"org.checkerframework.checker.nullness.compatqual.NullableType\")\n-    .add(\"org.checkerframework.checker.nullness.qual.Nullable\")\n-    .add(\"org.eclipse.jdt.annotation.Nullable\")\n-    .add(\"org.eclipse.jgit.annotations.Nullable\")\n-    .add(\"org.jetbrains.annotations.Nullable\")\n-    .add(\"org.jmlspecs.annotation.Nullable\")\n-    .add(\"org.netbeans.api.annotations.common.NullAllowed\")\n-    .add(\"org.netbeans.api.annotations.common.NullUnknown\")\n-    .addAll(STRONG_NULLABLE_ANNOTATIONS)\n-    .build();\n-\n-  private static final Set<String> NONNULL_ANNOTATIONS = ImmutableSet.of(\n+\n+  private static final Set<String> WEAK_NULLABLE_ANNOTATIONS = SetUtils.immutableSetOf(\n+    \"android.annotation.Nullable\",\n+    \"android.support.annotation.Nullable\",\n+    \"androidx.annotation.Nullable\",\n+    \"com.sun.istack.internal.Nullable\",\n+    \"edu.umd.cs.findbugs.annotations.Nullable\",\n+    \"io.reactivex.annotations.Nullable\",\n+    \"io.reactivex.rxjava3.annotations.Nullable\",\n+    \"javax.annotation.Nullable\",\n+    \"org.checkerframework.checker.nullness.compatqual.NullableDecl\",\n+    \"org.checkerframework.checker.nullness.compatqual.NullableType\",\n+    \"org.checkerframework.checker.nullness.qual.Nullable\",\n+    \"org.eclipse.jdt.annotation.Nullable\",\n+    \"org.eclipse.jgit.annotations.Nullable\",\n+    \"org.jetbrains.annotations.Nullable\",\n+    \"org.jmlspecs.annotation.Nullable\",\n+    \"org.netbeans.api.annotations.common.NullAllowed\",\n+    \"org.netbeans.api.annotations.common.NullUnknown\");\n+\n+  private static final Set<String> NULLABLE_ANNOTATIONS = Collections.unmodifiableSet(\n+    Stream.of(STRONG_NULLABLE_ANNOTATIONS, WEAK_NULLABLE_ANNOTATIONS)\n+    .flatMap(Set::stream).collect(Collectors.toSet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f425d9aea7d0ad2debdedd432c4b0320222fb1e3", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/f425d9aea7d0ad2debdedd432c4b0320222fb1e3", "committedDate": "2020-12-10T13:34:32Z", "message": "SONARJAVA-2154 Remove usages of guava Immutable Collections from java-frontend module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8714484daabfdc045c06c3c46304f95fb7fbb387", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/8714484daabfdc045c06c3c46304f95fb7fbb387", "committedDate": "2020-12-10T13:34:32Z", "message": "SONARJAVA-2154 Remove usages of guava Sets and Multimaps from java-frontend module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fb467e1aa0e1bf8d1842457b7bbd62ea519fe74", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/6fb467e1aa0e1bf8d1842457b7bbd62ea519fe74", "committedDate": "2020-12-10T13:34:32Z", "message": "SONARJAVA-2154 Remove usages of guava Iterables from java-frontend module (WIP)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b65125c60d5a9732e092f93c5f82497f9e455f70", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/b65125c60d5a9732e092f93c5f82497f9e455f70", "committedDate": "2020-12-10T13:34:32Z", "message": "SONARJAVA-2154 Remove usages of guava AbstractIterator from java-frontend module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34b3bcbf4b8d00d944286073c3b33659e24ce6cd", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/34b3bcbf4b8d00d944286073c3b33659e24ce6cd", "committedDate": "2020-12-10T14:05:51Z", "message": "SONARJAVA-2154 Refactoring java-frontend after guava removal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25da64e3ba157800c90071180497b0e7573b5e2e", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/25da64e3ba157800c90071180497b0e7573b5e2e", "committedDate": "2020-12-10T11:23:44Z", "message": "SONARJAVA-2154 Remove usages of guava AbstractIterator from java-frontend module"}, "afterCommit": {"oid": "34b3bcbf4b8d00d944286073c3b33659e24ce6cd", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/34b3bcbf4b8d00d944286073c3b33659e24ce6cd", "committedDate": "2020-12-10T14:05:51Z", "message": "SONARJAVA-2154 Refactoring java-frontend after guava removal"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1858, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}