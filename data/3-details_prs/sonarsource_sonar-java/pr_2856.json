{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDUyODYx", "number": 2856, "title": "SONARJAVA-3296 FN for security rules using ExpressionUtils.getEnclosingMethod.", "bodyText": "I decided to not use TriggeringSecuringHelper (and to remove it), it was suiting well the needs for S2755 old implementation but was not used anymore with the new implementation based on SE.\nWe decided to keep this code since it could help to solve this ticket, but it turns out that it is not trivial, every rules that could use TriggeringSecuringHelper  has a specific behavior:\n\nS5301 the triggering tree is a new class, and it has extra-logic in the nested method visitor.\nS5527 the triggering method is a simple method call (not an assignment).\nS4426 could use it as it was, but was already implemented without it.\n\nIt is possible to adapt this helper to suit the needs of everyone, but it is not more concise nor clearer, I believe 3 different implementations (still sharing parts of the code), is better.", "createdAt": "2020-03-03T16:32:51Z", "url": "https://github.com/SonarSource/sonar-java/pull/2856", "merged": true, "mergeCommit": {"oid": "6b6d1847735786d80a66163bb2bd0e14f7aa1169"}, "closed": true, "closedAt": "2020-03-06T10:57:56Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKEVRngH2gAyMzgzMDUyODYxOmU3NmVhNWJmODU5Zjc1ZTQ3NzE2NGVjNjYwYmNlYjQzZjdmMGY1ZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK8oKlAH2gAyMzgzMDUyODYxOmZjNmM0ZTg0MGJlZjNjMzY0NGIzOWYzM2Y1OGU5MTY0MmY4ZGJlMWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e76ea5bf859f75e477164ec660bceb43f7f0f5de", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/e76ea5bf859f75e477164ec660bceb43f7f0f5de", "committedDate": "2020-03-03T15:48:11Z", "message": "SONARJAVA-3296 Remove FN for S5301"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a47f7807a196a55b4067f320d2d8de1c2ca67e0d", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/a47f7807a196a55b4067f320d2d8de1c2ca67e0d", "committedDate": "2020-03-03T16:08:59Z", "message": "SONARJAVA-3296 Remove FN for S5527"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ebb2659549e8d3b46708f190356ee3cf2e9855a", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/3ebb2659549e8d3b46708f190356ee3cf2e9855a", "committedDate": "2020-03-03T16:09:37Z", "message": "Remove TriggeringSecuringHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad780795d9044a1b3c2321c3bf8fbccc646d595", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/8ad780795d9044a1b3c2321c3bf8fbccc646d595", "committedDate": "2020-03-04T08:30:21Z", "message": "Improve coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Njc1MTg5", "url": "https://github.com/SonarSource/sonar-java/pull/2856#pullrequestreview-369675189", "createdAt": "2020-03-05T15:38:34Z", "commit": {"oid": "8ad780795d9044a1b3c2321c3bf8fbccc646d595"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTozODozNFrOFyYhYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTozODozNFrOFyYhYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM3NDg4MQ==", "bodyText": "This test condition leads to FP if we are bad at resolving the variable symbol. I would prefer to replace isInvocationOnVariable by something like isInvocationOnTheGivenVariableButReturnTrueIfYourAreUnsureAboutOnWhatThisMethodIsInvoked \ud83d\ude09", "url": "https://github.com/SonarSource/sonar-java/pull/2856#discussion_r388374881", "createdAt": "2020-03-05T15:38:34Z", "author": {"login": "alban-auzeill"}, "path": "java-checks/src/main/java/org/sonar/java/checks/security/VerifiedServerHostnamesCheck.java", "diffHunk": "@@ -179,15 +192,20 @@ private static boolean isNotFalse(ExpressionTree expression) {\n \n   private static class MethodBodyApacheVisitor extends BaseTreeVisitor {\n     private boolean isSecured = false;\n+    private Symbol variable;\n \n     private static final MethodMatcher SET_SSL_CHECK_SERVER_ID = MethodMatcher.create()\n       .typeDefinition(APACHE_EMAIL)\n       .name(\"setSSLCheckServerIdentity\")\n       .addParameter(\"boolean\");\n \n+    MethodBodyApacheVisitor(Symbol variable) {\n+      this.variable = variable;\n+    }\n+\n     @Override\n     public void visitMethodInvocation(MethodInvocationTree mit) {\n-      if (SET_SSL_CHECK_SERVER_ID.matches(mit) && isNotFalse(mit.arguments().get(0))) {\n+      if (isInvocationOnVariable(mit, variable) && SET_SSL_CHECK_SERVER_ID.matches(mit) && isNotFalse(mit.arguments().get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad780795d9044a1b3c2321c3bf8fbccc646d595"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/b0083cb65f1c087caadb803d695e20e54b30686a", "committedDate": "2020-03-06T08:08:20Z", "message": "Remove FP when symbol can not be resolved"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5fe56171a451ab7e500a92b825d39418e5891db", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/e5fe56171a451ab7e500a92b825d39418e5891db", "committedDate": "2020-03-05T16:40:53Z", "message": "Remove FP when symbol can not be resolved"}, "afterCommit": {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/b0083cb65f1c087caadb803d695e20e54b30686a", "committedDate": "2020-03-06T08:08:20Z", "message": "Remove FP when symbol can not be resolved"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTczNDIz", "url": "https://github.com/SonarSource/sonar-java/pull/2856#pullrequestreview-370173423", "createdAt": "2020-03-06T09:09:25Z", "commit": {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowOToyNVrOFyxphQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowOToyNVrOFyxphQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NjU2NQ==", "bodyText": "We could reduce the cognitive complexity by 1 using:\n  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n    ExpressionTree methodSelect = mit.methodSelect();\n    if (variable != null && methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n      return extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression())\n        .map(variable::equals)\n        .orElse(defaultReturn);\n    }\n    return defaultReturn;\n  }\n\nor\n  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n    ExpressionTree methodSelect = mit.methodSelect();\n    if (variable == null || !methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n      return defaultReturn;\n    }\n    return extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression())\n      .map(variable::equals)\n      .orElse(defaultReturn);\n  }", "url": "https://github.com/SonarSource/sonar-java/pull/2856#discussion_r388786565", "createdAt": "2020-03-06T09:09:25Z", "author": {"login": "alban-auzeill"}, "path": "java-frontend/src/main/java/org/sonar/java/model/ExpressionUtils.java", "diffHunk": "@@ -114,10 +115,21 @@ public static IdentifierTree extractIdentifier(AssignmentExpressionTree tree) {\n     return extractIdentifier(tree).map(IdentifierTree::symbol);\n   }\n \n-  public static boolean isInvocationOnVariable(MethodInvocationTree mit, Symbol variable) {\n+  /**\n+   * Return whether we are sure that the method invocation is on a given variable.\n+   *\n+   * If unsure (variable is null, or we can not extract an identifier from the method invocation),\n+   * return a default value\n+   */\n+  public static boolean isInvocationOnVariable(MethodInvocationTree mit, @Nullable Symbol variable, boolean defaultReturn) {\n     ExpressionTree methodSelect = mit.methodSelect();\n-    return methodSelect.is(Tree.Kind.MEMBER_SELECT)\n-      && extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression()).filter(s -> s.equals(variable)).isPresent();\n+    if (variable != null && methodSelect.is(Tree.Kind.MEMBER_SELECT)) {\n+      Optional<Symbol> extractedSymbol = extractIdentifierSymbol(((MemberSelectExpressionTree) methodSelect).expression());\n+      if (extractedSymbol.isPresent()) {\n+        return extractedSymbol.get().equals(variable);\n+      }\n+    }\n+    return defaultReturn;\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0083cb65f1c087caadb803d695e20e54b30686a"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc6c4e840bef3c3644b39f33f58e91642f8dbe1e", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/fc6c4e840bef3c3644b39f33f58e91642f8dbe1e", "committedDate": "2020-03-06T09:23:30Z", "message": "Fix from review: reduce cognitive complexity"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}