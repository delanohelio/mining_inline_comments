{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTM0MzU5", "number": 2787, "title": "SONARJAVA-3183 S3329 should consider the call to SecureRandom.generat\u2026", "bodyText": "", "createdAt": "2020-02-04T16:33:19Z", "url": "https://github.com/SonarSource/sonar-java/pull/2787", "merged": true, "mergeCommit": {"oid": "012e6bc6f4cec28f4528ae87f77de2d7eb8145e7"}, "closed": true, "closedAt": "2020-02-05T14:41:06Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBRiP2AH2gAyMzcwOTM0MzU5OjY4OWIxMmIzMDk4MTE1Y2RiZmNkNDA3YmFjZWM0Njk1ZThiM2Y1YzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBXLh6gFqTM1Mzc2NjYyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "689b12b3098115cdbfcd407bacec4695e8b3f5c2", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/689b12b3098115cdbfcd407bacec4695e8b3f5c2", "committedDate": "2020-02-05T08:05:48Z", "message": "SONARJAVA-3183 S3329 should consider the call to SecureRandom.generateSeed() as safe"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e65f74ea91a741f82daf5fa5dc927855421c33d", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/5e65f74ea91a741f82daf5fa5dc927855421c33d", "committedDate": "2020-02-04T16:32:26Z", "message": "SONARJAVA-3183 S3329 should consider the call to SecureRandom.generateSeed() as safe"}, "afterCommit": {"oid": "689b12b3098115cdbfcd407bacec4695e8b3f5c2", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/689b12b3098115cdbfcd407bacec4695e8b3f5c2", "committedDate": "2020-02-05T08:05:48Z", "message": "SONARJAVA-3183 S3329 should consider the call to SecureRandom.generateSeed() as safe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTU0ODU2", "url": "https://github.com/SonarSource/sonar-java/pull/2787#pullrequestreview-353554856", "createdAt": "2020-02-05T09:03:55Z", "commit": {"oid": "689b12b3098115cdbfcd407bacec4695e8b3f5c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowMzo1NlrOFlwLfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowNToyMlrOFlwN9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMTAwNA==", "bodyText": "you should reuse declaration instead of symbol.declaration() here.", "url": "https://github.com/SonarSource/sonar-java/pull/2787#discussion_r375131004", "createdAt": "2020-02-05T09:03:56Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/security/CipherBlockChainingCheck.java", "diffHunk": "@@ -56,6 +70,24 @@ protected void onConstructorFound(NewClassTree newClassTree) {\n     }\n   }\n \n+  private static boolean isDynamicallyGenerated(ExpressionTree tree) {\n+    if (tree.is(Tree.Kind.IDENTIFIER)) {\n+      Symbol symbol = ((IdentifierTree) tree).symbol();\n+      VariableTree declaration = ((Symbol.VariableSymbol) symbol).declaration();\n+      return declaration != null &&\n+        (isSecureRandomGenerateSeed(declaration.initializer()) ||\n+          getReassignments(symbol.declaration(), symbol.usages()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689b12b3098115cdbfcd407bacec4695e8b3f5c2"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMTYzOQ==", "bodyText": "ECJ can be quite tricky here. In case of strange resolution/recovery from its engine, it might assign an unknown symbol rather than a VariableSymbol. Before casting, I would check that the symbol is not unknown.", "url": "https://github.com/SonarSource/sonar-java/pull/2787#discussion_r375131639", "createdAt": "2020-02-05T09:05:22Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/security/CipherBlockChainingCheck.java", "diffHunk": "@@ -56,6 +70,24 @@ protected void onConstructorFound(NewClassTree newClassTree) {\n     }\n   }\n \n+  private static boolean isDynamicallyGenerated(ExpressionTree tree) {\n+    if (tree.is(Tree.Kind.IDENTIFIER)) {\n+      Symbol symbol = ((IdentifierTree) tree).symbol();\n+      VariableTree declaration = ((Symbol.VariableSymbol) symbol).declaration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689b12b3098115cdbfcd407bacec4695e8b3f5c2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5de98599c3ee9ed78274d0dc2801e6627810b2e0", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/5de98599c3ee9ed78274d0dc2801e6627810b2e0", "committedDate": "2020-02-05T13:22:24Z", "message": "Fix from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzY2NjI2", "url": "https://github.com/SonarSource/sonar-java/pull/2787#pullrequestreview-353766626", "createdAt": "2020-02-05T14:40:25Z", "commit": {"oid": "5de98599c3ee9ed78274d0dc2801e6627810b2e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1821, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}