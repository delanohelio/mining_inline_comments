{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTcyMjY0", "number": 2981, "title": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness", "bodyText": "", "createdAt": "2020-06-03T12:33:29Z", "url": "https://github.com/SonarSource/sonar-java/pull/2981", "merged": true, "mergeCommit": {"oid": "7c98100345a1ed9f815af5963696803be1f23ead"}, "closed": true, "closedAt": "2020-06-05T11:37:40Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnp8qpABqjM0MDIzMTkxNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoBBbVgFqTQyNDUzNDYzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcf6ff86eaa28ccc938ce7ebf48699d7a5988156", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/fcf6ff86eaa28ccc938ce7ebf48699d7a5988156", "committedDate": "2020-06-03T09:57:07Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}, "afterCommit": {"oid": "820a5a50421745c54fb0c19d3e2db5ca338a0975", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/820a5a50421745c54fb0c19d3e2db5ca338a0975", "committedDate": "2020-06-03T14:01:12Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "820a5a50421745c54fb0c19d3e2db5ca338a0975", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/820a5a50421745c54fb0c19d3e2db5ca338a0975", "committedDate": "2020-06-03T14:01:12Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}, "afterCommit": {"oid": "07a971f0d49a70407076d82e6547343be72afbe5", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/07a971f0d49a70407076d82e6547343be72afbe5", "committedDate": "2020-06-04T07:03:01Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65d48e5a65e6421224ba265701c7558c754622af", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/65d48e5a65e6421224ba265701c7558c754622af", "committedDate": "2020-06-04T08:30:25Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07a971f0d49a70407076d82e6547343be72afbe5", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/07a971f0d49a70407076d82e6547343be72afbe5", "committedDate": "2020-06-04T07:03:01Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}, "afterCommit": {"oid": "65d48e5a65e6421224ba265701c7558c754622af", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/65d48e5a65e6421224ba265701c7558c754622af", "committedDate": "2020-06-04T08:30:25Z", "message": "SONARJAVA-3395 Rule S5841: AssertJ assertions \"allMatch\" and \"doesNotContains\" should also test for emptiness"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTM0NjMw", "url": "https://github.com/SonarSource/sonar-java/pull/2981#pullrequestreview-424534630", "createdAt": "2020-06-04T14:54:21Z", "commit": {"oid": "65d48e5a65e6421224ba265701c7558c754622af"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDo1NDoyMVrOGfJ9ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDo1NDoyMVrOGfJ9ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMyMjIxMg==", "bodyText": "Is there an reason to use addParametersMatcher(MethodMatchers.ANY) over withAnyParameters()?\nEdit: Just saw that you use both further down in the file.", "url": "https://github.com/SonarSource/sonar-java/pull/2981#discussion_r435322212", "createdAt": "2020-06-04T14:54:21Z", "author": {"login": "johann-beleites-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/AssertJTestForEmptinessCheck.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.tests;\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+import org.sonar.check.Rule;\n+import org.sonar.java.checks.helpers.MethodTreeUtils;\n+import org.sonar.java.checks.methods.AbstractMethodDetection;\n+import org.sonar.java.model.ExpressionUtils;\n+import org.sonar.plugins.java.api.JavaFileScannerContext;\n+import org.sonar.plugins.java.api.semantic.MethodMatchers;\n+import org.sonar.plugins.java.api.tree.ExpressionTree;\n+import org.sonar.plugins.java.api.tree.IdentifierTree;\n+import org.sonar.plugins.java.api.tree.MemberSelectExpressionTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+import org.sonar.plugins.java.api.tree.ParenthesizedTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+import org.sonar.plugins.java.api.tree.TypeCastTree;\n+\n+@Rule(key = \"S5841\")\n+public class AssertJTestForEmptinessCheck extends AbstractMethodDetection {\n+\n+  private static final MethodMatchers ASSERTJ_NOT_TESTING_SIZE = MethodMatchers.create()\n+    .ofSubTypes(\"org.assertj.core.api.AbstractAssert\")\n+    .name(name ->\n+      \"as\".equals(name) || \"describedAs\".equals(name) || \"withFailMessage\".equals(name) || \"overridingErrorMessage\".equals(name)\n+        || \"isNotNull\".equals(name) || \"asList\".equals(name) || name.contains(\"InstanceOf\")|| name.startsWith(\"using\")\n+        || name.startsWith(\"extracting\") || name.startsWith(\"filtered\") || name.startsWith(\"doesNotContain\") || name.startsWith(\"all\")\n+    ).withAnyParameters()\n+    .build();\n+\n+  private static final MethodMatchers ASSERT_THAT_MATCHER = MethodMatchers.create()\n+    .ofSubTypes(\"org.assertj.core.api.Assertions\", \"org.assertj.core.api.AssertionsForInterfaceTypes\", \"org.assertj.core.api.AssertionsForClassTypes\")\n+    .names(\"assertThat\", \"assertThatObject\").addParametersMatcher(MethodMatchers.ANY).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65d48e5a65e6421224ba265701c7558c754622af"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1705, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}