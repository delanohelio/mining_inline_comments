{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjU2ODg3", "number": 3287, "title": "SONARJAVA-3605 FP in S3305 when field has an initializer", "bodyText": "", "createdAt": "2020-11-18T15:15:02Z", "url": "https://github.com/SonarSource/sonar-java/pull/3287", "merged": true, "mergeCommit": {"oid": "051ac5645afaccd43a909e1c7613529d5261385b"}, "closed": true, "closedAt": "2020-11-20T08:26:19Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeA4DHgFqTUzNDMxOTMyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeTCMEgFqTUzNTIwODI0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MzE5MzI1", "url": "https://github.com/SonarSource/sonar-java/pull/3287#pullrequestreview-534319325", "createdAt": "2020-11-19T11:16:00Z", "commit": {"oid": "6471935bbb58ba8fe12e54bd267c4981a77f3134"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMToxNjowMFrOH2YPfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMToxNjowNVrOH2YPrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4MjMzMg==", "bodyText": "I'd suggest adding a case @Autowired private Bar withInitializer = new Bar(); (maybe to non-compiling examples if doesn't compile) and decide what we want to do in such case.", "url": "https://github.com/SonarSource/sonar-java/pull/3287#discussion_r526782332", "createdAt": "2020-11-19T11:16:00Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks-test-sources/src/main/java/checks/spring/SpringConfigurationWithAutowiredFieldsCheck.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package checks.spring;\n+\n+import javax.inject.Inject;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+class SpringConfigurationWithAutowiredFieldsCheck {\n+  class Bar { }\n+\n+  class Foo {\n+    private final Bar bar;\n+    public Foo(Bar bar) { this.bar = bar; }\n+  }\n+\n+  @Configuration\n+  class A {\n+\n+    @Autowired private Bar singleUsage; // Noncompliant [[sc=28;ec=39]] {{Inject this field value directly into \"method\", the only method that uses it.}}\n+    @Inject private Bar jsr330; // Noncompliant [[sc=25;ec=31]] {{Inject this field value directly into \"jsr330\", the only method that uses it.}}\n+    @Autowired private Bar multipleUsage;\n+    @Autowired private Bar notUsedInBeanMethod;\n+    @Autowired private Bar notUsed;\n+    private Bar notAutowired;\n+    @Autowired(required=false) private Bar withInitializer = new Bar();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6471935bbb58ba8fe12e54bd267c4981a77f3134"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc4MjM4Mg==", "bodyText": "As far as I remember Spring. @Autowired annotation by default has required = true. So the initializer won't make sense, because the project will fail if no @Bean found (or even won't compile). Maybe it will be nice to check that required=false there. On the other hand, it's an additional check, so maybe we can leave it as it is.", "url": "https://github.com/SonarSource/sonar-java/pull/3287#discussion_r526782382", "createdAt": "2020-11-19T11:16:05Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/spring/SpringConfigurationWithAutowiredFieldsCheck.java", "diffHunk": "@@ -78,6 +78,10 @@ private static void collectAutowiredFields(Tree tree, Map<Symbol, VariableTree>\n       return;\n     }\n     VariableTree variable = (VariableTree) tree;\n+    if (variable.initializer() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6471935bbb58ba8fe12e54bd267c4981a77f3134"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27db009fafe4ec887a0f98c2d91c3d1035a1fa3a", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/27db009fafe4ec887a0f98c2d91c3d1035a1fa3a", "committedDate": "2020-11-19T16:24:26Z", "message": "Migrate test file to compiled module for S3305"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9798fc419dd652a0e409e144d2e39658ff89d79b", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/9798fc419dd652a0e409e144d2e39658ff89d79b", "committedDate": "2020-11-19T16:24:26Z", "message": "SONARJAVA-3605 FP in S3305 when field has an initializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2241d958150b63f049f374ca79a5236840e020a0", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/2241d958150b63f049f374ca79a5236840e020a0", "committedDate": "2020-11-19T16:24:26Z", "message": "Supress issue only when required is set to false"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6471935bbb58ba8fe12e54bd267c4981a77f3134", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/6471935bbb58ba8fe12e54bd267c4981a77f3134", "committedDate": "2020-11-18T15:14:42Z", "message": "SONARJAVA-3605 FP in S3305 when field has an initializer"}, "afterCommit": {"oid": "2241d958150b63f049f374ca79a5236840e020a0", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/2241d958150b63f049f374ca79a5236840e020a0", "committedDate": "2020-11-19T16:24:26Z", "message": "Supress issue only when required is set to false"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MjA4MjQ1", "url": "https://github.com/SonarSource/sonar-java/pull/3287#pullrequestreview-535208245", "createdAt": "2020-11-20T08:25:33Z", "commit": {"oid": "2241d958150b63f049f374ca79a5236840e020a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1947, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}