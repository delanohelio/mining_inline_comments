{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MzY4NTIy", "number": 3349, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0NjoyMFrOFGGazQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo1MDowM1rOFGGhqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTQwOTQxOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/classpath/ClasspathProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0NjoyMFrOIG8nJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDoxMzoxMlrOIG9v7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NTQzMQ==", "bodyText": "Unrelated, but would be great to declare those properties as multi-valued", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544155431", "createdAt": "2020-12-16T09:46:20Z", "author": {"login": "henryju"}, "path": "java-frontend/src/main/java/org/sonar/java/classpath/ClasspathProperties.java", "diffHunk": "@@ -37,25 +38,30 @@ private ClasspathProperties() {\n \n   public static List<PropertyDefinition> getProperties() {\n     List<PropertyDefinition> extensions = new ArrayList<>();\n+    extensions.add(PropertyDefinition.builder(SONAR_JAVA_JDK_HOME)\n+      .description(\"Path to jdk directory used by the project under analysis.\")\n+      .hidden()\n+      .build()\n+    );\n     extensions.add(PropertyDefinition.builder(SONAR_JAVA_BINARIES)\n-            .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")\n-            .hidden()\n-            .build()\n+      .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0f2bb94e35ebc9ffac52903e015899d8027ea0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE3NDA2MQ==", "bodyText": "since they are hidden anyway, i'm not sure it would change things, but indeed.", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544174061", "createdAt": "2020-12-16T10:13:12Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/classpath/ClasspathProperties.java", "diffHunk": "@@ -37,25 +38,30 @@ private ClasspathProperties() {\n \n   public static List<PropertyDefinition> getProperties() {\n     List<PropertyDefinition> extensions = new ArrayList<>();\n+    extensions.add(PropertyDefinition.builder(SONAR_JAVA_JDK_HOME)\n+      .description(\"Path to jdk directory used by the project under analysis.\")\n+      .hidden()\n+      .build()\n+    );\n     extensions.add(PropertyDefinition.builder(SONAR_JAVA_BINARIES)\n-            .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")\n-            .hidden()\n-            .build()\n+      .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NTQzMQ=="}, "originalCommit": {"oid": "1e0f2bb94e35ebc9ffac52903e015899d8027ea0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTQyMDkwOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0ODo0NVrOIG8t5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0ODo0NVrOIG8t5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NzE1Ng==", "bodyText": "Maybe also check if this is a directory", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544157156", "createdAt": "2020-12-16T09:48:45Z", "author": {"login": "henryju"}, "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "diffHunk": "@@ -62,18 +63,38 @@\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected List<File> binaries;\n-  protected List<File> elements;\n+  protected final List<File> binaries;\n+  protected final List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n   protected AbstractClasspath(Configuration settings, FileSystem fs, InputFile.Type fileType) {\n     this.settings = settings;\n     this.fs = fs;\n     this.fileType = fileType;\n+    this.binaries = new ArrayList<>();\n+    this.elements = new ArrayList<>();\n     initialized = false;\n   }\n \n+  protected List<File> getJdkJars() {\n+    return settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n+      .flatMap(AbstractClasspath::fileOrLog)\n+      .map(File::toPath)\n+      .map(JavaSdkUtil::getJdkClassesRoots)\n+      .orElse(Collections.emptyList());\n+  }\n+\n+  private static Optional<File> fileOrLog(String path) {\n+    File file = new File(path);\n+    if (!file.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2a857ea26dc118f7fe6a80dd220730b693df08d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTQyNjk2OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo1MDowM1rOIG8xYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo1MDowM1rOIG8xYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1ODA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static Optional<File> fileOrLog(String path) {\n          \n          \n            \n              private static Optional<File> existingDirectoryOrLog(String path) {", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544158051", "createdAt": "2020-12-16T09:50:03Z", "author": {"login": "henryju"}, "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "diffHunk": "@@ -62,18 +63,38 @@\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected List<File> binaries;\n-  protected List<File> elements;\n+  protected final List<File> binaries;\n+  protected final List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n   protected AbstractClasspath(Configuration settings, FileSystem fs, InputFile.Type fileType) {\n     this.settings = settings;\n     this.fs = fs;\n     this.fileType = fileType;\n+    this.binaries = new ArrayList<>();\n+    this.elements = new ArrayList<>();\n     initialized = false;\n   }\n \n+  protected List<File> getJdkJars() {\n+    return settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n+      .flatMap(AbstractClasspath::fileOrLog)\n+      .map(File::toPath)\n+      .map(JavaSdkUtil::getJdkClassesRoots)\n+      .orElse(Collections.emptyList());\n+  }\n+\n+  private static Optional<File> fileOrLog(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2a857ea26dc118f7fe6a80dd220730b693df08d"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3727, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}