{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NzQ0NTUy", "number": 2877, "title": "SONARJAVA-3322 S2441: handle unknown types", "bodyText": "", "createdAt": "2020-03-17T10:16:53Z", "url": "https://github.com/SonarSource/sonar-java/pull/2877", "merged": true, "mergeCommit": {"oid": "37397aac48ef24868dfa19f67110bd258cd19742"}, "closed": true, "closedAt": "2020-03-19T12:25:02Z", "author": {"login": "m-g-sonar"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO34RiAFqTM3Njg5MjkxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPLAtygFqTM3NzY2OTE5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODkyOTE3", "url": "https://github.com/SonarSource/sonar-java/pull/2877#pullrequestreview-376892917", "createdAt": "2020-03-18T14:03:45Z", "commit": {"oid": "a0fb42ff6b0451762a8f958a1474c8f8c375f962"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDowMzo0NlrOF4GZeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDowMzo0NlrOF4GZeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM2OTQwMA==", "bodyText": "So it means that an argument with unknown type is considered as not serializable?\nShould we consider making the unknown check inside isNotSerializable and provide the same behavior for all rules using it?\nI'm saying this since the other rule (S2118) using isNotSerializable is also reporting an arguable issue with a similar message if we run it against an unknown type.\n\nMake the \"!Unknown!\" class \"Serializable\" or don't write it.", "url": "https://github.com/SonarSource/sonar-java/pull/2877#discussion_r394369400", "createdAt": "2020-03-18T14:03:46Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/serialization/SerializableObjectInSessionCheck.java", "diffHunk": "@@ -44,6 +44,9 @@\n   protected void onMethodInvocationFound(MethodInvocationTree mit) {\n     ExpressionTree argument = mit.arguments().get(1);\n     Type type = argument.symbolType();\n+    if (type.isUnknown()) {\n+      return;\n+    }\n     if (ExpressionsHelper.isNotSerializable(argument)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0fb42ff6b0451762a8f958a1474c8f8c375f962"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2967ff9d500f25e93dce5a0c9d04bb3cfcc3a9a9", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/2967ff9d500f25e93dce5a0c9d04bb3cfcc3a9a9", "committedDate": "2020-03-18T15:43:59Z", "message": "SONARJAVA-3322 handle unknown types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7afe19b8826e348ffd1a06930a5ab0acfe948f94", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/7afe19b8826e348ffd1a06930a5ab0acfe948f94", "committedDate": "2020-03-18T16:00:43Z", "message": "SONARJAVA-3322 Move logic regarding unknown type into helper class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0fb42ff6b0451762a8f958a1474c8f8c375f962", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/a0fb42ff6b0451762a8f958a1474c8f8c375f962", "committedDate": "2020-03-17T10:08:02Z", "message": "SONARJAVA-3322 handle unknown types"}, "afterCommit": {"oid": "7afe19b8826e348ffd1a06930a5ab0acfe948f94", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/7afe19b8826e348ffd1a06930a5ab0acfe948f94", "committedDate": "2020-03-18T16:00:43Z", "message": "SONARJAVA-3322 Move logic regarding unknown type into helper class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NjY5MTkz", "url": "https://github.com/SonarSource/sonar-java/pull/2877#pullrequestreview-377669193", "createdAt": "2020-03-19T12:24:41Z", "commit": {"oid": "7afe19b8826e348ffd1a06930a5ab0acfe948f94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1758, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}