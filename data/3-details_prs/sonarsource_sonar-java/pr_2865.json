{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTE3MjI2", "number": 2865, "title": "SONARJAVA-3307 Migrate SonarJava custom rules tutorial to 6.2 and LTS 7.9", "bodyText": "Related PR on sonar-custom-rules-examples:\nSonarSource/sonar-custom-rules-examples#48", "createdAt": "2020-03-06T16:42:36Z", "url": "https://github.com/SonarSource/sonar-java/pull/2865", "merged": true, "mergeCommit": {"oid": "08808895c7ce9896fd69a4090a2d8b8a40ebffba"}, "closed": true, "closedAt": "2020-03-12T15:26:10Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLDKIlAH2gAyMzg0OTE3MjI2OjZmZjM5YzNjYTViNWJiNzFjZjkyNDFlMzc5NGVmYzcyMTdlMzFhODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMpkGrgH2gAyMzg0OTE3MjI2OjZkYjZjMWZkN2IwOWNiNjUyOGQ1ODA5NDg4NDUwMTAwMzVlYmQzMmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ff39c3ca5b5bb71cf9241e3794efc7217e31a82", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/6ff39c3ca5b5bb71cf9241e3794efc7217e31a82", "committedDate": "2020-03-06T17:00:02Z", "message": "SONARJAVA-3307 Migrate SonarJava custom rules tutorial to SonarJava 6.X and LTS 7.9"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c4206bcb5825b557f14327376186ea4ac9ed947", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/2c4206bcb5825b557f14327376186ea4ac9ed947", "committedDate": "2020-03-06T16:42:17Z", "message": "SONARJAVA-3307 Migrate SonarJava custom rules tutorial to SonarJava 6.X and LTS 7.9"}, "afterCommit": {"oid": "6ff39c3ca5b5bb71cf9241e3794efc7217e31a82", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/6ff39c3ca5b5bb71cf9241e3794efc7217e31a82", "committedDate": "2020-03-06T17:00:02Z", "message": "SONARJAVA-3307 Migrate SonarJava custom rules tutorial to SonarJava 6.X and LTS 7.9"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODg0MTE0", "url": "https://github.com/SonarSource/sonar-java/pull/2865#pullrequestreview-372884114", "createdAt": "2020-03-11T15:44:00Z", "commit": {"oid": "6ff39c3ca5b5bb71cf9241e3794efc7217e31a82"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo0NDowMFrOF085nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo0NDozOVrOF087cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2ODA2MQ==", "bodyText": "now that release 6.2 has been done, maybe we should use it! It should be almost transparent!", "url": "https://github.com/SonarSource/sonar-java/pull/2865#discussion_r391068061", "createdAt": "2020-03-11T15:44:00Z", "author": {"login": "m-g-sonar"}, "path": "docs/CUSTOM_RULES_101.md", "diffHunk": "@@ -40,10 +40,10 @@ This project already contains custom rules. Our goal will be to add an extra rul\n \n A custom plugin is a Maven project, and before diving into code, it is important to notice a few relevant lines related to the configuration of your soon-to-be-released custom plugin.\n \n-In the code snippet below, note the plugin API version (`<sonar.version>`) provided through the properties. It relates to the minimum version of SonarQube your plugin will support, and is generally aligned to your company's SonarQube instance. In this template, we rely on the version **7.7** (LTS version is **6.7**, but compatibility to latest release is guaranteed when packaging the plugin).\n+In the code snippet below, note the plugin API version (`<sonar.version>`) provided through the properties. It relates to the minimum version of SonarQube your plugin will support, and is generally aligned to your company's SonarQube instance. In this template, we rely on the version **8.2.0.32929** (LTS version is **7.9**, but compatibility to latest release is guaranteed when packaging the plugin).\n Note that latest released versions of the Java Analyzer are always compatible with the current LTS version of SonarQube.\n \n-The property `<java.plugin.version>` is the minimum version of the Java Analyzer that will be required to run your custom plugin in your SonarQube instance. Consequently, as we will rely on version **5.12.1.17771** of the Java plugin, the SonarQube instance which will use the custom plugin will also need version **5.12.1.17771** of the Java Plugin as well.\n+The property `<java.plugin.version>` is the minimum version of the Java Analyzer that will be required to run your custom plugin in your SonarQube instance. Consequently, as we will rely on version **6.1.0.20866** of the Java plugin, the SonarQube instance which will use the custom plugin will also need version **6.1.0.20866** of the Java Plugin as well.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ff39c3ca5b5bb71cf9241e3794efc7217e31a82"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2ODUzMA==", "bodyText": "I'm not sure that \"compilable\" is valid English, let's say \"and all code should compile\"!", "url": "https://github.com/SonarSource/sonar-java/pull/2865#discussion_r391068530", "createdAt": "2020-03-11T15:44:39Z", "author": {"login": "m-g-sonar"}, "path": "docs/CUSTOM_RULES_101.md", "diffHunk": "@@ -157,7 +158,7 @@ Of course, before going any further, we need a key element in rule writhing, a s\n \n Because we chose a TDD approach, the first thing to do is to write examples of the code our rule will target. In this file, we consider numerous cases that our rule may encounter during an analysis, and flag the lines which will require our implementation to raise issues. The flag to be used is a simple `// Noncompliant` trailing comment on the line of code where an issue should be raised. Why *Noncompliant*? Because the flagged lines do not *comply* with the rule.\n \n-Covering all the possible cases is not necessarily required, the goal of this file is to cover all the situations which may be encountered during an analysis, but also to abstract irrelevant details. For instance, in the context of our first rule, the name of method, the content of its body, and the owner of the method make no difference, whether it's an abstract class, a concrete class, or an interface. Note that this sample file does not need to be compilable, but it should be structurally correct.\n+Covering all the possible cases is not necessarily required, the goal of this file is to cover all the situations which may be encountered during an analysis, but also to abstract irrelevant details. For instance, in the context of our first rule, the name of method, the content of its body, and the owner of the method make no difference, whether it's an abstract class, a concrete class, or an interface. Note that this sample file should be structurally correct and compilable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ff39c3ca5b5bb71cf9241e3794efc7217e31a82"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db6c1fd7b09cb6528d580948845010035ebd32d", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/6db6c1fd7b09cb6528d580948845010035ebd32d", "committedDate": "2020-03-11T16:18:43Z", "message": "Fix from review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}