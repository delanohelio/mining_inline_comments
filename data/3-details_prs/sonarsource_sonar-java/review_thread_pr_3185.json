{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTc2ODYw", "number": 3185, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjozODozNVrOEkY0Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo1MzozNFrOEkZFvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTkwNzc4OnYy", "diffSide": "RIGHT", "path": "java-checks-test-sources/src/main/java/checks/NoTestsInProductionFile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjozODozNVrOHTTfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjozODozNVrOHTTfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNDI5Nw==", "bodyText": "Remove this Noncompliant message, and replace it by compliant, as we do not expect any issue here. I guess it's a copy-paste issue, but this is misleading.", "url": "https://github.com/SonarSource/sonar-java/pull/3185#discussion_r490004297", "createdAt": "2020-09-17T06:38:35Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-test-sources/src/main/java/checks/NoTestsInProductionFile.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package checks;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class NoTestsInProductionFile { // Noncompliant [[sc=14;ec=35]] {{Move this test class to a separate assembly in this solution.}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7f89b112ceb29f3a49845ed8fcb3b6c32c8761"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTkxMDI5OnYy", "diffSide": "RIGHT", "path": "java-checks-test-sources/src/main/java/checks/TestsInProductionFile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjozOToyM1rOHTTgvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjozOToyM1rOHTTgvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNDY3MA==", "bodyText": "The issue message seems to come from C# world: Move this test class to a separate assembly in this solution.. I think we should have a different one for java, as this vocabulary does not apply to our context.", "url": "https://github.com/SonarSource/sonar-java/pull/3185#discussion_r490004670", "createdAt": "2020-09-17T06:39:23Z", "author": {"login": "m-g-sonar"}, "path": "java-checks-test-sources/src/main/java/checks/TestsInProductionFile.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package checks;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class TestsInProductionFile { // Noncompliant [[sc=14;ec=35]] {{Move this test class to a separate assembly in this solution.}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7f89b112ceb29f3a49845ed8fcb3b6c32c8761"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTk1MjYzOnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/TestsInSeparateFolderCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo1MzozNFrOHTT5og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzoxNTozOFrOHTUkgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAxMTA0Mg==", "bodyText": "The message does not seem appropriate for java projects.", "url": "https://github.com/SonarSource/sonar-java/pull/3185#discussion_r490011042", "createdAt": "2020-09-17T06:53:34Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/TestsInSeparateFolderCheck.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import org.sonar.check.Rule;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.tree.ClassTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+import static org.sonar.java.checks.helpers.UnitTestUtils.isTestClass;\n+\n+@Rule(key = \"S3414\")\n+public class TestsInSeparateFolderCheck extends IssuableSubscriptionVisitor {\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Collections.singletonList(Tree.Kind.CLASS);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    ClassTree classTree = (ClassTree) tree;\n+    if (isTestClass(classTree)) {\n+      reportIssue(classTree.simpleName(), \"Move this test class to a separate assembly in this solution.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7f89b112ceb29f3a49845ed8fcb3b6c32c8761"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyMjAxOA==", "bodyText": "Maybe \"Move this test class to the test folder in current project.\" will sound better?", "url": "https://github.com/SonarSource/sonar-java/pull/3185#discussion_r490022018", "createdAt": "2020-09-17T07:15:38Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/TestsInSeparateFolderCheck.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import org.sonar.check.Rule;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.tree.ClassTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+import static org.sonar.java.checks.helpers.UnitTestUtils.isTestClass;\n+\n+@Rule(key = \"S3414\")\n+public class TestsInSeparateFolderCheck extends IssuableSubscriptionVisitor {\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Collections.singletonList(Tree.Kind.CLASS);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    ClassTree classTree = (ClassTree) tree;\n+    if (isTestClass(classTree)) {\n+      reportIssue(classTree.simpleName(), \"Move this test class to a separate assembly in this solution.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAxMTA0Mg=="}, "originalCommit": {"oid": "9e7f89b112ceb29f3a49845ed8fcb3b6c32c8761"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3903, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}