{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODcyODI5", "number": 3129, "title": "SONARJAVA-3447 FN on S2259 when a method is annotated with spring's annotation @Nullable", "bodyText": "", "createdAt": "2020-08-06T08:31:18Z", "url": "https://github.com/SonarSource/sonar-java/pull/3129", "merged": true, "mergeCommit": {"oid": "8091dfd2a11321a91fddbf21bf59320c713b143a"}, "closed": true, "closedAt": "2020-08-07T13:27:01Z", "author": {"login": "quentin-jaquier-sonarsource"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8LKbWgH2gAyNDYzODcyODI5OjFhOGEyMzEwMTUzNWY2MTQ5NWNiNzRlNTFiZGJhOGQ0N2JjNWYxM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8ghghAH2gAyNDYzODcyODI5OjhjMmE3NzVmNjI5MTNiNzVhZGRjNDVmOTU2ZjBlYmQ5ODk4NjMwNGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1a8a23101535f61495cb74e51bdba8d47bc5f13f", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/1a8a23101535f61495cb74e51bdba8d47bc5f13f", "committedDate": "2020-08-06T08:01:53Z", "message": "SONARJAVA-3447 FN on S2259 when a method is annotated with spring's annotation @Nullable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDY3MDI2", "url": "https://github.com/SonarSource/sonar-java/pull/3129#pullrequestreview-463067026", "createdAt": "2020-08-07T06:35:45Z", "commit": {"oid": "1a8a23101535f61495cb74e51bdba8d47bc5f13f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjozNTo0NVrOG9OMtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjozNTo0NVrOG9OMtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0ODk1MQ==", "bodyText": "you can avoid calling two times syntaxNode.symbol().metadata() by storing it first.", "url": "https://github.com/SonarSource/sonar-java/pull/3129#discussion_r466848951", "createdAt": "2020-08-07T06:35:45Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/checks/NullDereferenceCheck.java", "diffHunk": "@@ -222,7 +222,9 @@ public ProgramState checkPostStatement(CheckerContext context, Tree syntaxNode)\n   }\n \n   private static boolean isAnnotatedCheckForNull(MethodInvocationTree syntaxNode) {\n-    return syntaxNode.symbol().metadata().isAnnotatedWith(\"javax.annotation.CheckForNull\");\n+    return syntaxNode.symbol().metadata().isAnnotatedWith(\"javax.annotation.CheckForNull\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a8a23101535f61495cb74e51bdba8d47bc5f13f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDY5NDkw", "url": "https://github.com/SonarSource/sonar-java/pull/3129#pullrequestreview-463069490", "createdAt": "2020-08-07T06:41:19Z", "commit": {"oid": "1a8a23101535f61495cb74e51bdba8d47bc5f13f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjo0MToxOVrOG9OU0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjo0MToxOVrOG9OU0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg1MTAyNw==", "bodyText": "In fact, I think we should rather rely on the NullnessAnnotationUtils class here, and move this method there.\nThere is already a list of nullable annotations, and I believe we should do another pass on the Nullable annotations list, to check if some of them are in fact strong nullness constraints (a la javax CheckForNull), and not weak (a la javax Nullable), to be used in such context.", "url": "https://github.com/SonarSource/sonar-java/pull/3129#discussion_r466851027", "createdAt": "2020-08-07T06:41:19Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/checks/NullDereferenceCheck.java", "diffHunk": "@@ -222,7 +222,9 @@ public ProgramState checkPostStatement(CheckerContext context, Tree syntaxNode)\n   }\n \n   private static boolean isAnnotatedCheckForNull(MethodInvocationTree syntaxNode) {\n-    return syntaxNode.symbol().metadata().isAnnotatedWith(\"javax.annotation.CheckForNull\");\n+    return syntaxNode.symbol().metadata().isAnnotatedWith(\"javax.annotation.CheckForNull\")\n+      // Despite the name, Spring Nullable is meant to be used as CheckForNull\n+      || syntaxNode.symbol().metadata().isAnnotatedWith(\"org.springframework.lang.Nullable\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a8a23101535f61495cb74e51bdba8d47bc5f13f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c2a775f62913b75addc45f956f0ebd98986304c", "author": {"user": {"login": "quentin-jaquier-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/8c2a775f62913b75addc45f956f0ebd98986304c", "committedDate": "2020-08-07T08:55:06Z", "message": "Move static method to NullableAnnotationUtils"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1673, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}