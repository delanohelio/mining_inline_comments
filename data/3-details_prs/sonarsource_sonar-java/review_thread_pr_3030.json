{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODEyMzA0", "number": 3030, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDo0M1rOEGZX5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDo0M1rOEGZX5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQyNjI4OnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/tests/NoTestInTestClassCheck.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDo0M1rOGlKqNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToyODo0M1rOGlLSNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTE0Mg==", "bodyText": "What exactly are you checking for with .endsWith(\"Test\")? Would it make sense to also check for *Test, *Tests and *TestCase?", "url": "https://github.com/SonarSource/sonar-java/pull/3030#discussion_r441625142", "createdAt": "2020-06-17T15:14:43Z", "author": {"login": "johann-beleites-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/NoTestInTestClassCheck.java", "diffHunk": "@@ -81,16 +82,12 @@ private void checkClass(ClassTree classTree) {\n         checkTestNGmembers(simpleName, members);\n       } else {\n         boolean isJunit3TestClass = classSymbol.type().isSubtypeOf(\"junit.framework.TestCase\");\n-        if (isJunit3TestClass) {\n-          checkJunit3TestClass(simpleName, members);\n-        } else {\n-          if (runWitZohhak(classSymbol)) {\n-            testMethodAnnotations.add(\"com.googlecode.zohhak.api.TestWith\");\n-          } else if (isArchUnitTestClass(classSymbol)) {\n-            testMethodAnnotations.add(ARCH_UNIT_TEST);\n-            testFieldAnnotations.add(ARCH_UNIT_TEST);\n-          }\n-          checkJunit4AndAboveTestClass(simpleName, classSymbol, members);\n+        List<Symbol> membersList = members.collect(Collectors.toList());\n+        if (isJunit3TestClass && containsJUnit3Tests(membersList)) {\n+          return;\n+        }\n+        if (isJunit3TestClass || classSymbol.name().endsWith(\"Test\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "744becdc7ee83a14b3c608a910402b748614bff9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzNTM4Mg==", "bodyText": "In fact, this code is not really new, and come from old line 117.\nI agree that we could improve this rule, hovewer, I believe it deserves a new ticket.\nDoes it make sense?", "url": "https://github.com/SonarSource/sonar-java/pull/3030#discussion_r441635382", "createdAt": "2020-06-17T15:28:43Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/NoTestInTestClassCheck.java", "diffHunk": "@@ -81,16 +82,12 @@ private void checkClass(ClassTree classTree) {\n         checkTestNGmembers(simpleName, members);\n       } else {\n         boolean isJunit3TestClass = classSymbol.type().isSubtypeOf(\"junit.framework.TestCase\");\n-        if (isJunit3TestClass) {\n-          checkJunit3TestClass(simpleName, members);\n-        } else {\n-          if (runWitZohhak(classSymbol)) {\n-            testMethodAnnotations.add(\"com.googlecode.zohhak.api.TestWith\");\n-          } else if (isArchUnitTestClass(classSymbol)) {\n-            testMethodAnnotations.add(ARCH_UNIT_TEST);\n-            testFieldAnnotations.add(ARCH_UNIT_TEST);\n-          }\n-          checkJunit4AndAboveTestClass(simpleName, classSymbol, members);\n+        List<Symbol> membersList = members.collect(Collectors.toList());\n+        if (isJunit3TestClass && containsJUnit3Tests(membersList)) {\n+          return;\n+        }\n+        if (isJunit3TestClass || classSymbol.name().endsWith(\"Test\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTE0Mg=="}, "originalCommit": {"oid": "744becdc7ee83a14b3c608a910402b748614bff9"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4051, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}