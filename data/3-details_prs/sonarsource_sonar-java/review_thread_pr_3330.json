{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzYwNzA4", "number": 3330, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoyMToxNFrOFB3QJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoyMToxNFrOFB3QJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDk4MTUwOnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjoyMToxNFrOIAu1nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjozMDo0M1rOIAvTHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzODMwMQ==", "bodyText": "Why not return onlyMatchesEmptySuffix(start.continuation(), visited);?", "url": "https://github.com/SonarSource/sonar-java/pull/3330#discussion_r537638301", "createdAt": "2020-12-07T16:21:14Z", "author": {"login": "alban-auzeill"}, "path": "java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java", "diffHunk": "@@ -253,4 +253,28 @@ public static boolean isEndBoundary(AutomatonState state) {\n     }\n   }\n \n+  public static boolean onlyMatchesEmptySuffix(AutomatonState start) {\n+    return onlyMatchesEmptySuffix(start, new HashSet<>());\n+  }\n+\n+  private static boolean onlyMatchesEmptySuffix(AutomatonState start, Set<AutomatonState> visited) {\n+    if (start instanceof FinalState || visited.contains(start)) {\n+      return true;\n+    }\n+    visited.add(start);\n+    if (start instanceof LookAroundTree) {\n+      return onlyMatchesEmptySuffix(start.continuation());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f3bbc2b26fe0045f3467372beaf7536e5a83cfb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0NTg1NQ==", "bodyText": "That was a mistake, good catch.", "url": "https://github.com/SonarSource/sonar-java/pull/3330#discussion_r537645855", "createdAt": "2020-12-07T16:30:43Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java", "diffHunk": "@@ -253,4 +253,28 @@ public static boolean isEndBoundary(AutomatonState state) {\n     }\n   }\n \n+  public static boolean onlyMatchesEmptySuffix(AutomatonState start) {\n+    return onlyMatchesEmptySuffix(start, new HashSet<>());\n+  }\n+\n+  private static boolean onlyMatchesEmptySuffix(AutomatonState start, Set<AutomatonState> visited) {\n+    if (start instanceof FinalState || visited.contains(start)) {\n+      return true;\n+    }\n+    visited.add(start);\n+    if (start instanceof LookAroundTree) {\n+      return onlyMatchesEmptySuffix(start.continuation());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzODMwMQ=="}, "originalCommit": {"oid": "5f3bbc2b26fe0045f3467372beaf7536e5a83cfb"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}