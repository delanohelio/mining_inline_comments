{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTI1ODQ0", "number": 2772, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMTozNVrODbQKoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMTozNVrODbQKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTAzMDA4OnYy", "diffSide": "LEFT", "path": "java-frontend/src/main/java/org/sonar/java/model/VisitorsBridge.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMTozNVrOFioQwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMTozNVrOFioQwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1NTU1Mw==", "bodyText": "In the current situation, if you want to implement this behavior, you can remove the two try/catch in visitFile(), the CheckFailureException will be catched in JavaAstScanner::simpleScan and fail fast if needed.\nHowever:\n\nin the case of IssuableSubscriptionVisitors, it will not change anything as it is the last step of the visit.\ndo we really want to report no issue on a file who fails SymbolicExecution checks?", "url": "https://github.com/SonarSource/sonar-java/pull/2772#discussion_r371855553", "createdAt": "2020-01-28T15:01:35Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/model/VisitorsBridge.java", "diffHunk": "@@ -175,22 +175,20 @@ private void runScanner(Runnable action, JavaFileScanner scanner, AnalysisError.\n       // bad configuration of a rule parameter, we want to fail analysis fast.\n       throw new AnalysisException(\"Bad configuration of rule parameter\", e);\n     } catch (Exception e) {\n-      if (sonarComponents != null && sonarComponents.shouldFailAnalysisOnException()) {\n-        throw e;\n-      }\n       Throwable rootCause = Throwables.getRootCause(e);\n       if (rootCause instanceof InterruptedIOException || rootCause instanceof InterruptedException) {\n         throw e;\n       }\n+\n       String ruleKey = ruleKey(scanner);\n-      LOG.error(\n-        String.format(\"Unable to run check %s - %s on file '%s', To help improve SonarJava, please report this problem to SonarSource : see https://www.sonarqube.org/community/\",\n-          scanner.getClass(), ruleKey, currentFile),\n-        e);\n+      String message = String.format(\n+        \"Unable to run check %s - %s on file '%s', To help improve SonarJava, please report this problem to SonarSource : see https://www.sonarqube.org/community/\",\n+        scanner.getClass(), ruleKey, currentFile);\n+\n+      LOG.error(message, e);\n       addAnalysisError(e, currentFile, kind);\n \n-      // for IssuableSubscriptionVisitors as well as for SymbolicExecution, this should lead to changing file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b196dd6eb1009f4124d8c2871ae1ec08e1464d7b"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4143, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}