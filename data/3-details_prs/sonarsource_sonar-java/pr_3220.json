{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzA3NDcw", "number": 3220, "title": "SONARJAVA-3538 Cover custom assertions", "bodyText": "", "createdAt": "2020-09-28T17:51:12Z", "url": "https://github.com/SonarSource/sonar-java/pull/3220", "merged": true, "mergeCommit": {"oid": "97d0fbb175232e4d9127ec87c831973cd56ce184"}, "closed": true, "closedAt": "2020-09-30T08:25:16Z", "author": {"login": "m-g-sonar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNleizAFqTQ5ODMxNDI1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN3T2vgBqjM4MjI5NzE3MTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MzE0MjU3", "url": "https://github.com/SonarSource/sonar-java/pull/3220#pullrequestreview-498314257", "createdAt": "2020-09-29T10:09:31Z", "commit": {"oid": "b05d9acface3e70d6484e3f1fc67816720487faf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDowOTozMVrOHZmCJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDowOTozMVrOHZmCJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU5OTU4OA==", "bodyText": "You can use MethodTreeUtils.consecutiveMethodInvocation to do this.", "url": "https://github.com/SonarSource/sonar-java/pull/3220#discussion_r496599588", "createdAt": "2020-09-29T10:09:31Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/tests/AssertJConsecutiveAssertionCheck.java", "diffHunk": "@@ -136,26 +140,49 @@ private void reportConsecutiveAssertions(List<StatementTree> statements) {\n     return Optional.empty();\n   }\n \n-  private void reportIssueIfMultipleCalls(@Nullable AssertSubject assertSubject, List<MethodInvocationTree> equivalentAssertions) {\n+  private void reportIssueIfMultipleCalls(@Nullable AssertSubject assertSubject, List<AssertSubject> equivalentAssertions) {\n     if (assertSubject != null && !equivalentAssertions.isEmpty()) {\n-      reportIssue(ExpressionUtils.methodName(assertSubject.mit),\n+      reportIssue(assertSubject.methodName(),\n         \"Join these multiple assertions subject to one assertion chain.\",\n-        equivalentAssertions.stream().map(mit -> new JavaFileScannerContext.Location(\"Other assertThat\", ExpressionUtils.methodName(mit))).collect(Collectors.toList()),\n+        equivalentAssertions.stream().map(AssertSubject::toSecondaryLocation).collect(Collectors.toList()),\n         null);\n     }\n   }\n \n   private static class AssertSubject {\n     final MethodInvocationTree mit;\n+    final Type assertionType;\n     final ExpressionTree arg;\n \n     AssertSubject(MethodInvocationTree mit, ExpressionTree arg) {\n       this.mit = mit;\n+      this.assertionType = mit.symbolType().erasure();\n       this.arg = arg;\n     }\n \n     boolean hasEquivalentArgument(AssertSubject other) {\n-      return SyntacticEquivalence.areEquivalent(arg, other.arg);\n+      return SyntacticEquivalence.areEquivalent(arg, other.arg)\n+        && (other.assertionType.isSubtypeOf(assertionType) || couldBeChained(other));\n+    }\n+\n+    boolean couldBeChained(AssertSubject other) {\n+      Tree otherParent = other.mit\n+        // owning member select\n+        .parent()\n+        // chained method invocation\n+        .parent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05d9acface3e70d6484e3f1fc67816720487faf"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b1ca205316a8dff31126222d97254693fcedda", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/20b1ca205316a8dff31126222d97254693fcedda", "committedDate": "2020-09-30T06:56:29Z", "message": "Take advantage of using objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e959e1604c5873ac30ee290c29d9445ba572ea08", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/e959e1604c5873ac30ee290c29d9445ba572ea08", "committedDate": "2020-09-30T07:04:27Z", "message": "SONARJAVA-3538 Cover abstract assertions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b05d9acface3e70d6484e3f1fc67816720487faf", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/b05d9acface3e70d6484e3f1fc67816720487faf", "committedDate": "2020-09-28T17:40:14Z", "message": "SONARJAVA-3538 Cover abstract assertions"}, "afterCommit": {"oid": "e959e1604c5873ac30ee290c29d9445ba572ea08", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/e959e1604c5873ac30ee290c29d9445ba572ea08", "committedDate": "2020-09-30T07:04:27Z", "message": "SONARJAVA-3538 Cover abstract assertions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1899, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}