{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDA0NTE3", "number": 3319, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyNzoyMVrOFAtSBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyOTo1NFrOFAtWOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjg2MjEzOnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/regex/ReluctantQuantifierCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyNzoyMVrOH_INQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyNzoyMVrOH_INQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1NjgwMQ==", "bodyText": "Fix this bug making the rule throwing exceptions on some regex containing ^", "url": "https://github.com/SonarSource/sonar-java/pull/3319#discussion_r535956801", "createdAt": "2020-12-04T09:27:21Z", "author": {"login": "alban-auzeill"}, "path": "java-checks/src/main/java/org/sonar/java/checks/regex/ReluctantQuantifierCheck.java", "diffHunk": "@@ -64,7 +64,7 @@ public void visitSequence(SequenceTree tree) {\n           .ifPresent(negatedClass -> {\n             String newQuantifier = makePossessive(repetition.getQuantifier());\n             String message = String.format(\"Replace this use of a reluctant quantifier with \\\"%s%s\\\".\", negatedClass, newQuantifier);\n-            reportIssue(repetition, String.format(message, negatedClass), null, Collections.emptyList());\n+            reportIssue(repetition, message, null, Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996c306a148bbaff1bd47d4eafc77e105a375386"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjg2NTk4OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/regex/ast/RegexSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyODoxNlrOH_IPlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyODoxNlrOH_IPlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1NzM5OQ==", "bodyText": "Required by the export script that collects string literals", "url": "https://github.com/SonarSource/sonar-java/pull/3319#discussion_r535957399", "createdAt": "2020-12-04T09:28:16Z", "author": {"login": "alban-auzeill"}, "path": "java-frontend/src/main/java/org/sonar/java/regex/ast/RegexSource.java", "diffHunk": "@@ -61,7 +61,7 @@ public int length() {\n     return sourceText.length();\n   }\n \n-  List<LiteralTree> getStringLiterals() {\n+  public List<LiteralTree> getStringLiterals() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996c306a148bbaff1bd47d4eafc77e105a375386"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjg3Mjg4OnYy", "diffSide": "RIGHT", "path": "its/ruling/src/test/resources/regex-examples/java-S5994.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyOTo1NFrOH_ITww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzowNzo0MlrOH_QJPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1ODQ2Nw==", "bodyText": "Seems to be a false-positive, I will investigate", "url": "https://github.com/SonarSource/sonar-java/pull/3319#discussion_r535958467", "createdAt": "2020-12-04T09:29:54Z", "author": {"login": "alban-auzeill"}, "path": "its/ruling/src/test/resources/regex-examples/java-S5994.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+'org.regex-examples:regex-examples:src/main/java/org/regex/examples/RegexDatabase5.java':[\n+135,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996c306a148bbaff1bd47d4eafc77e105a375386"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4Njg0Ng==", "bodyText": "The possessive quantifier check should be changed to not apply to repetitions with a fixed upper bound.", "url": "https://github.com/SonarSource/sonar-java/pull/3319#discussion_r536086846", "createdAt": "2020-12-04T13:07:42Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "its/ruling/src/test/resources/regex-examples/java-S5994.json", "diffHunk": "@@ -0,0 +1,5 @@\n+{\n+'org.regex-examples:regex-examples:src/main/java/org/regex/examples/RegexDatabase5.java':[\n+135,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1ODQ2Nw=="}, "originalCommit": {"oid": "996c306a148bbaff1bd47d4eafc77e105a375386"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3700, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}