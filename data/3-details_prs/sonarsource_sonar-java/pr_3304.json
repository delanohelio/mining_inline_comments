{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NjIyMzIx", "number": 3304, "title": "SONARJAVA-3619 FP S2589 when Boolean variable doesn't always evaluate to TRUE/FALSE", "bodyText": "", "createdAt": "2020-11-27T13:46:02Z", "url": "https://github.com/SonarSource/sonar-java/pull/3304", "merged": true, "mergeCommit": {"oid": "88f89b3f489f6cae4d8459d17c24fc4d99fdf981"}, "closed": true, "closedAt": "2020-12-01T08:20:34Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhjCG9gH2gAyNTI4NjIyMzIxOjc4MjkzYTMzYTk1MmY2Mjg2OGU5YjdmYjMxZjMzNzJmNWM3ZDA2YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhnwQ2gBqjQwNTI3NzEwNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "78293a33a952f62868e9b7fb31f3372f5c7d06ae", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/78293a33a952f62868e9b7fb31f3372f5c7d06ae", "committedDate": "2020-11-30T10:45:43Z", "message": "SONARJAVA-3619 FP S2589 when Boolean variable doesn't always evaluate to TRUE/FALSE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f7038caea9c8c01aa50954b08a2de2bb008754", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/a2f7038caea9c8c01aa50954b08a2de2bb008754", "committedDate": "2020-11-30T10:45:43Z", "message": "SONARJAVA-3619 Move test sources to the separate module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3b8c170299c8c8d88cb7dc33ea3ca8a7cbfbe1e", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/d3b8c170299c8c8d88cb7dc33ea3ca8a7cbfbe1e", "committedDate": "2020-11-27T13:41:49Z", "message": "SONARJAVA-3619 FP S2589 when Boolean variable doesn't always evaluate to TRUE/FALSE"}, "afterCommit": {"oid": "96aaf08a4214f7d92c421d670267f5317cc7e99d", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/96aaf08a4214f7d92c421d670267f5317cc7e99d", "committedDate": "2020-11-30T10:45:43Z", "message": "SONARJAVA-3619 Refactoring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96aaf08a4214f7d92c421d670267f5317cc7e99d", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/96aaf08a4214f7d92c421d670267f5317cc7e99d", "committedDate": "2020-11-30T10:45:43Z", "message": "SONARJAVA-3619 Refactoring"}, "afterCommit": {"oid": "978bfeae1703200603fecbcc5f59e160ad741208", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/978bfeae1703200603fecbcc5f59e160ad741208", "committedDate": "2020-11-30T10:50:10Z", "message": "SONARJAVA-3619 Refactoring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "978bfeae1703200603fecbcc5f59e160ad741208", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/978bfeae1703200603fecbcc5f59e160ad741208", "committedDate": "2020-11-30T10:50:10Z", "message": "SONARJAVA-3619 Refactoring"}, "afterCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4d024622c418241c3b33d3f91c501ffa389f5223", "committedDate": "2020-11-30T11:59:51Z", "message": "SONARJAVA-3619 Refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDI5NTgz", "url": "https://github.com/SonarSource/sonar-java/pull/3304#pullrequestreview-541029583", "createdAt": "2020-11-30T15:40:04Z", "commit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTo0MDowNVrOH8A3ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNTo0OTo1OVrOH8BVHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5MDgyNg==", "bodyText": "I'm really not sure about this null test here, I think it's impossible. At worst, an unknown symbol should return an unknown type., and so your test can probably simply be if (type.is(\"java.lang.Boolean\")) { ...", "url": "https://github.com/SonarSource/sonar-java/pull/3304#discussion_r532690826", "createdAt": "2020-11-30T15:40:05Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/constraint/ConstraintManager.java", "diffHunk": "@@ -153,6 +157,14 @@ private SymbolicValue createIdentifierSymbolicValue(IdentifierTree identifier) {\n     }\n     return createDefaultSymbolicValue();\n   }\n+  \n+  private SymbolicValue createVariableSymbolicValue(VariableTree identifier) {\n+    final Type type = identifier.symbol().type();\n+    if (type != null && type.is(\"java.lang.Boolean\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5MTE0Mw==", "bodyText": "I would rename identifier into variable", "url": "https://github.com/SonarSource/sonar-java/pull/3304#discussion_r532691143", "createdAt": "2020-11-30T15:40:27Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/constraint/ConstraintManager.java", "diffHunk": "@@ -153,6 +157,14 @@ private SymbolicValue createIdentifierSymbolicValue(IdentifierTree identifier) {\n     }\n     return createDefaultSymbolicValue();\n   }\n+  \n+  private SymbolicValue createVariableSymbolicValue(VariableTree identifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5NTI2NA==", "bodyText": "Question of style, but I would really prefer to have the parenthesis on the previous line and this one starting with .collect( to align dots", "url": "https://github.com/SonarSource/sonar-java/pull/3304#discussion_r532695264", "createdAt": "2020-11-30T15:45:57Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/symbolicvalues/RelationalSymbolicValue.java", "diffHunk": "@@ -172,35 +172,64 @@ RelationalSymbolicValue inverse() {\n     return results;\n   }\n \n+  private boolean hasBooleanSymbolicValueAsOperand() {\n+    return (leftOp instanceof BooleanSymbolicValue) || (rightOp instanceof BooleanSymbolicValue);\n+  }\n+\n+  private boolean isEqualityCheck() {\n+    return Kind.METHOD_EQUALS == kind || Kind.NOT_METHOD_EQUALS == kind || Kind.EQUAL == kind || Kind.NOT_EQUAL == kind;\n+  }\n+\n   private List<ProgramState> addNullConstraintsForBooleanWrapper(ProgramState initialProgramState, List<ProgramState> copiedConstraints) {\n     BooleanConstraint leftConstraint = initialProgramState.getConstraint(leftOp, BooleanConstraint.class);\n     BooleanConstraint rightConstraint = initialProgramState.getConstraint(rightOp, BooleanConstraint.class);\n-    if (leftConstraint != null && rightConstraint == null && !isEquality()) {\n-      List<ProgramState> nullConstraints = copiedConstraints.stream()\n-        .flatMap(ps -> rightOp.setConstraint(ps, ObjectConstraint.NULL).stream())\n-        .map(ps -> ps.removeConstraintsOnDomain(rightOp, BooleanConstraint.class)\n-      ).collect(Collectors.toList());\n-      return ImmutableList.<ProgramState>builder().addAll(copiedConstraints).addAll(nullConstraints).build();\n+    \n+    if (shouldAddNullConstraint(leftConstraint, rightConstraint)) {\n+      return getProgramStatesWithNullConstraints(copiedConstraints, leftOp);\n+    }\n+    \n+    if (shouldAddNullConstraint(rightConstraint, leftConstraint)) {\n+      return getProgramStatesWithNullConstraints(copiedConstraints, rightOp);\n     }\n     return copiedConstraints;\n   }\n \n+  private boolean shouldAddNullConstraint(@Nullable BooleanConstraint constraint1, @Nullable BooleanConstraint constraint2) {\n+    return !isEquality() && constraint1 == null && constraint2 != null;\n+  }\n+\n+  private static List<ProgramState> getProgramStatesWithNullConstraints(List<ProgramState> copiedConstraints, SymbolicValue operand) {\n+    List<ProgramState> nullConstraints = copiedConstraints.stream()\n+      .flatMap(ps -> operand.setConstraint(ps, ObjectConstraint.NULL).stream())\n+      .map(ps -> ps.removeConstraintsOnDomain(operand, BooleanConstraint.class)\n+      ).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5ODM5Nw==", "bodyText": "What about:\nreturn isEquality() || Kind.NOT_METHOD_EQUALS == kind || Kind.NOT_EQUAL == kind;\n\nIn order to mark the difference with isEquality ?", "url": "https://github.com/SonarSource/sonar-java/pull/3304#discussion_r532698397", "createdAt": "2020-11-30T15:49:59Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/main/java/org/sonar/java/se/symbolicvalues/RelationalSymbolicValue.java", "diffHunk": "@@ -172,35 +172,64 @@ RelationalSymbolicValue inverse() {\n     return results;\n   }\n \n+  private boolean hasBooleanSymbolicValueAsOperand() {\n+    return (leftOp instanceof BooleanSymbolicValue) || (rightOp instanceof BooleanSymbolicValue);\n+  }\n+\n+  private boolean isEqualityCheck() {\n+    return Kind.METHOD_EQUALS == kind || Kind.NOT_METHOD_EQUALS == kind || Kind.EQUAL == kind || Kind.NOT_EQUAL == kind;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d89b9ecacbe09582bd1cdfded35a1cc01ab6b218", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/d89b9ecacbe09582bd1cdfded35a1cc01ab6b218", "committedDate": "2020-11-30T16:15:32Z", "message": "SONARJAVA-3619 Refactoring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d024622c418241c3b33d3f91c501ffa389f5223", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/4d024622c418241c3b33d3f91c501ffa389f5223", "committedDate": "2020-11-30T11:59:51Z", "message": "SONARJAVA-3619 Refactoring"}, "afterCommit": {"oid": "d89b9ecacbe09582bd1cdfded35a1cc01ab6b218", "author": {"user": {"login": "margarita-nedzelska-sonarsource", "name": null}}, "url": "https://github.com/SonarSource/sonar-java/commit/d89b9ecacbe09582bd1cdfded35a1cc01ab6b218", "committedDate": "2020-11-30T16:15:32Z", "message": "SONARJAVA-3619 Refactoring"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}