{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5Mzc0NzEx", "number": 3350, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToyNjo1M1rOFE75IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToyNjo1M1rOFE75IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzE5OTA1OnYy", "diffSide": "LEFT", "path": "java-checks/src/main/java/org/sonar/java/checks/MutableMembersUsageCheck.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMToyNjo1M1rOIFMFAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjo1ODozMVrOIGJoLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxMTY4MQ==", "bodyText": "// symbol is private, so declaration can only be null if assignment is done in static block\n\nI did not manage to reproduce a case where the declaration is null, but I still added a null check because I was not convinced by this comment.\nI think it makes sense to keep it for defensive programming.", "url": "https://github.com/SonarSource/sonar-java/pull/3350#discussion_r542311681", "createdAt": "2020-12-14T11:26:53Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/MutableMembersUsageCheck.java", "diffHunk": "@@ -149,18 +149,21 @@ private static boolean isThis(ExpressionTree expression) {\n     return expression.is(Tree.Kind.IDENTIFIER) && ((IdentifierTree) expression).name().equals(\"this\");\n   }\n \n-  private static boolean isImmutableFinalVariable(Symbol.VariableSymbol symbol) {\n-    if (symbol.isFinal()) {\n-      VariableTree declaration = symbol.declaration();\n-      // symbol is private, so declaration can only be null if assignment is done in static block", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c50d9409b57ec4b8589ba7e3bb9e948d6e8a155"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1MTk1NQ==", "bodyText": "Maybe Objects.requireNonNull will be a better option here, cause I can't imagine a situation when declaration is null for private fields. But null check is also fine for me", "url": "https://github.com/SonarSource/sonar-java/pull/3350#discussion_r543251955", "createdAt": "2020-12-15T11:08:22Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/MutableMembersUsageCheck.java", "diffHunk": "@@ -149,18 +149,21 @@ private static boolean isThis(ExpressionTree expression) {\n     return expression.is(Tree.Kind.IDENTIFIER) && ((IdentifierTree) expression).name().equals(\"this\");\n   }\n \n-  private static boolean isImmutableFinalVariable(Symbol.VariableSymbol symbol) {\n-    if (symbol.isFinal()) {\n-      VariableTree declaration = symbol.declaration();\n-      // symbol is private, so declaration can only be null if assignment is done in static block", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxMTY4MQ=="}, "originalCommit": {"oid": "9c50d9409b57ec4b8589ba7e3bb9e948d6e8a155"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMyMDExMQ==", "bodyText": "Both alternatives sound good to me aswell. The behavior when the declaration is null (for whatever reason) is to proceed with the check of the usages as if it was not initialized, so it seems fine to me to keep it as it is.", "url": "https://github.com/SonarSource/sonar-java/pull/3350#discussion_r543320111", "createdAt": "2020-12-15T12:58:31Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/java/org/sonar/java/checks/MutableMembersUsageCheck.java", "diffHunk": "@@ -149,18 +149,21 @@ private static boolean isThis(ExpressionTree expression) {\n     return expression.is(Tree.Kind.IDENTIFIER) && ((IdentifierTree) expression).name().equals(\"this\");\n   }\n \n-  private static boolean isImmutableFinalVariable(Symbol.VariableSymbol symbol) {\n-    if (symbol.isFinal()) {\n-      VariableTree declaration = symbol.declaration();\n-      // symbol is private, so declaration can only be null if assignment is done in static block", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxMTY4MQ=="}, "originalCommit": {"oid": "9c50d9409b57ec4b8589ba7e3bb9e948d6e8a155"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3729, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}