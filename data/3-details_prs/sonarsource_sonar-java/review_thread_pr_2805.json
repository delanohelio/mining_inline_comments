{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjkwODE4", "number": 2805, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDoxNVrODfEuBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0Mzo0MVrODfExGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTA5NzY3OnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/java/org/sonar/java/checks/CORSCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDoxNVrOFokRrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MDoxNVrOFokRrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MTcwOA==", "bodyText": "You can use ExpressionUtils.methodName(mit) for that.", "url": "https://github.com/SonarSource/sonar-java/pull/2805#discussion_r378081708", "createdAt": "2020-02-12T07:40:15Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/main/java/org/sonar/java/checks/CORSCheck.java", "diffHunk": "@@ -106,6 +110,15 @@ private static boolean setSpecificOrigins(Tree tree) {\n     return !isStar((LiteralTree) tree);\n   }\n \n+  private void reportTree(MethodInvocationTree mit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1dfbdf5d4773c14bb3692d98161c90fc74443f"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEwNTUyOnYy", "diffSide": "RIGHT", "path": "java-checks/src/test/files/checks/CORSCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0Mzo0MlrOFokWMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0Mzo0MlrOFokWMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4Mjg2Ng==", "bodyText": "I don't see the interest of such complicated methods to tests this. Keep the test case minimal to what we really tests.  For instance, invocations of allowedMethods, allowCredentials, etc. are not related to the behavior of the rule.", "url": "https://github.com/SonarSource/sonar-java/pull/2805#discussion_r378082866", "createdAt": "2020-02-12T07:43:42Z", "author": {"login": "m-g-sonar"}, "path": "java-checks/src/test/files/checks/CORSCheck.java", "diffHunk": "@@ -133,20 +136,40 @@ public CorsFilter corsFilter4() {\n       public CorsFilter corsFilter4() {\n         UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n         CorsConfiguration config = new CorsConfiguration();\n-        config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=137,138]]\n+        config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=140,141]]\n         config.applyPermitDefaultValues();\n         config.applyPermitDefaultValues();\n-        config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=137,138]]\n+        config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=140,141]]\n         return new CorsFilter(source);\n       }\n     }\n     UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n     CorsConfiguration config = new CorsConfiguration();\n-    config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=146,147]]\n+    config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=149,150]]\n     config.applyPermitDefaultValues();\n     config.applyPermitDefaultValues();\n-    config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=146,147]]\n+    config.addAllowedOrigin(\"*\"); // Noncompliant [[secondary=149,150]]\n     return new CorsFilter(source);\n   }\n \n+  class S5122_Insecure implements WebMvcConfigurer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1dfbdf5d4773c14bb3692d98161c90fc74443f"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4180, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}