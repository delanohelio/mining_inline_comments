{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2Nzk2MzM0", "number": 3140, "title": "SONARJAVA-3493 Drop ASM, bytecode and x-file related code in profit of hardcoded method behaviors", "bodyText": "", "createdAt": "2020-08-12T14:08:26Z", "url": "https://github.com/SonarSource/sonar-java/pull/3140", "merged": true, "mergeCommit": {"oid": "42930785ba1ade4f584461d2e21635b612cb1ddc"}, "closed": true, "closedAt": "2020-08-18T14:51:23Z", "author": {"login": "m-g-sonar"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-MymbgBqjM2NDgxNTI2NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAHusDABqjM2NjY1NzU0ODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b4529bc85290d6efe4453fa0ede52ed3ff1dc7e", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/5b4529bc85290d6efe4453fa0ede52ed3ff1dc7e", "committedDate": "2020-08-12T13:49:44Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}, "afterCommit": {"oid": "a1036695aadf98ca911976220db86b6b0baf534c", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/a1036695aadf98ca911976220db86b6b0baf534c", "committedDate": "2020-08-12T14:57:16Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1036695aadf98ca911976220db86b6b0baf534c", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/a1036695aadf98ca911976220db86b6b0baf534c", "committedDate": "2020-08-12T14:57:16Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}, "afterCommit": {"oid": "254b9a1b106f8de0ea9c96104f278da0f811fc79", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/254b9a1b106f8de0ea9c96104f278da0f811fc79", "committedDate": "2020-08-12T15:06:03Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "254b9a1b106f8de0ea9c96104f278da0f811fc79", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/254b9a1b106f8de0ea9c96104f278da0f811fc79", "committedDate": "2020-08-12T15:06:03Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}, "afterCommit": {"oid": "178bd0b8704dd3e864b7b8076361a0dae29e61c7", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/178bd0b8704dd3e864b7b8076361a0dae29e61c7", "committedDate": "2020-08-12T15:18:46Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5fc8cc46d92f322204b3184bc3dde08a80603f7", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/c5fc8cc46d92f322204b3184bc3dde08a80603f7", "committedDate": "2020-08-13T12:13:38Z", "message": "Reduce complexit\u00e9 of test file to let SE engine pass Sanity"}, "afterCommit": {"oid": "0ab4642331c20ddee609a3325682d13460189705", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/0ab4642331c20ddee609a3325682d13460189705", "committedDate": "2020-08-13T12:51:23Z", "message": "Improve coverage of serialization/deserialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ab4642331c20ddee609a3325682d13460189705", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/0ab4642331c20ddee609a3325682d13460189705", "committedDate": "2020-08-13T12:51:23Z", "message": "Improve coverage of serialization/deserialization"}, "afterCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/82a6aa484b90b0c0b5799c9f9d502be5ff001dcf", "committedDate": "2020-08-13T14:54:12Z", "message": "Reduce complexity of test file to let SE engine pass Sanity Check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTIzMDYy", "url": "https://github.com/SonarSource/sonar-java/pull/3140#pullrequestreview-467523062", "createdAt": "2020-08-14T12:06:53Z", "commit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjowNjo1M1rOHAyLTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDoyNDowMFrOHA2hJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NDE0MQ==", "bodyText": "You are expected to call toHashCode() here since you are not looking for the HashCode of the builder.\nIt will not change anything, since they anticipated such confusion and changed the behavior of this method, but it's anyway better to call the right one directly.", "url": "https://github.com/SonarSource/sonar-java/pull/3140#discussion_r470584141", "createdAt": "2020-08-14T12:06:53Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/se/xproc/MethodBehavior.java", "diffHunk": "@@ -306,4 +305,42 @@ public void setVarArgs(boolean varArgs) {\n   public void setDeclaredExceptions(List<String> declaredExceptions) {\n     this.declaredExceptions = declaredExceptions;\n   }\n+\n+  @Override\n+  public String toString() {\n+    return signature + \" [\" + yields.size() + \" yield(s)]\";\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (obj == null || getClass() != obj.getClass()) {\n+      return false;\n+    }\n+    MethodBehavior other = (MethodBehavior) obj;\n+    return new EqualsBuilder()\n+      .append(signature, other.signature)\n+      .append(arity, other.arity)\n+      .append(varArgs, other.varArgs)\n+      .append(complete, other.complete)\n+      .append(visited, other.visited)\n+      .append(declaredExceptions, other.declaredExceptions)\n+      .append(yields, other.yields)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(11, 74371)\n+      .append(signature)\n+      .append(arity)\n+      .append(varArgs)\n+      .append(complete)\n+      .append(visited)\n+      .append(declaredExceptions)\n+      .append(yields)\n+      .hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU5MjA4OA==", "bodyText": "Constructor states that:\n\nPrime numbers are preferred, especially for the multiplier.\n\nYou could use 74377.", "url": "https://github.com/SonarSource/sonar-java/pull/3140#discussion_r470592088", "createdAt": "2020-08-14T12:25:04Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/se/xproc/MethodBehavior.java", "diffHunk": "@@ -306,4 +305,42 @@ public void setVarArgs(boolean varArgs) {\n   public void setDeclaredExceptions(List<String> declaredExceptions) {\n     this.declaredExceptions = declaredExceptions;\n   }\n+\n+  @Override\n+  public String toString() {\n+    return signature + \" [\" + yields.size() + \" yield(s)]\";\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (obj == null || getClass() != obj.getClass()) {\n+      return false;\n+    }\n+    MethodBehavior other = (MethodBehavior) obj;\n+    return new EqualsBuilder()\n+      .append(signature, other.signature)\n+      .append(arity, other.arity)\n+      .append(varArgs, other.varArgs)\n+      .append(complete, other.complete)\n+      .append(visited, other.visited)\n+      .append(declaredExceptions, other.declaredExceptions)\n+      .append(yields, other.yields)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(11, 74371)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxODE4Mg==", "bodyText": "You are never using the content of this list.", "url": "https://github.com/SonarSource/sonar-java/pull/3140#discussion_r470618182", "createdAt": "2020-08-14T13:18:53Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/se/xproc/MethodBehaviorJsonAdapter.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.se.xproc;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonNull;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonSerializationContext;\n+import com.google.gson.JsonSerializer;\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.annotation.CheckForNull;\n+import javax.annotation.Nullable;\n+import org.sonar.java.model.Sema;\n+import org.sonar.java.se.constraint.BooleanConstraint;\n+import org.sonar.java.se.constraint.ConstraintsByDomain;\n+import org.sonar.java.se.constraint.ObjectConstraint;\n+\n+public class MethodBehaviorJsonAdapter implements JsonSerializer<MethodBehavior>, JsonDeserializer<MethodBehavior> {\n+\n+  private static final String JSON_CONSTRAINT_DELIMITER = \".\";\n+  private static final String JSON_IS_EXCEPTIONAL = \"isExceptional\";\n+  private static final String JSON_THROWN_EXCEPTION = \"exception\";\n+  private static final String JSON_RESULT_CONSTRAINTS = \"resultConstaint\";\n+  private static final String JSON_RESULT_INDEX = \"resultIndex\";\n+  private static final String JSON_PARAMETERS_CONSTRAINTS = \"parametersConstraints\";\n+  private static final String JSON_DECLARED_EXCEPTIONS = \"declaredExceptions\";\n+  private static final String JSON_VARARGS = \"varArgs\";\n+  private static final String JSON_ARITY = \"arity\";\n+  private static final String JSON_SIGNATURE = \"signature\";\n+  private static final String JSON_YIELDS = \"yields\";\n+\n+  private final Sema sema;\n+\n+  public MethodBehaviorJsonAdapter(Sema sema) {\n+    this.sema = sema;\n+  }\n+\n+  public static Gson gson(Sema sema) {\n+    return new GsonBuilder()\n+      .registerTypeAdapter(MethodBehavior.class, new MethodBehaviorJsonAdapter(sema))\n+      .serializeNulls()\n+      .setPrettyPrinting()\n+      .create();\n+  }\n+\n+  @Override\n+  public MethodBehavior deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {\n+    JsonObject jsonMB = (JsonObject) json;\n+    MethodBehavior mb = new MethodBehavior(\n+      jsonMB.get(JSON_SIGNATURE).getAsString(),\n+      jsonMB.get(JSON_VARARGS).getAsBoolean());\n+\n+    List<String> declaredExceptions = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY1NTI2OA==", "bodyText": "I did not remember (or was not aware) that we had this property, and I'm glad it's not there anymore!\nShould we also consider removing it from peach configuration?", "url": "https://github.com/SonarSource/sonar-java/pull/3140#discussion_r470655268", "createdAt": "2020-08-14T14:24:00Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "its/ruling/src/test/java/org/sonar/java/it/JavaRulingTest.java", "diffHunk": "@@ -244,7 +244,6 @@ private static void executeBuildWithCommonProperties(Build<?> build, String proj\n       .setProperty(\"dump.old\", effectiveDumpOldFolder.resolve(projectName).toString())\n       .setProperty(\"dump.new\", FileLocation.of(\"target/actual/\" + projectName).getFile().getAbsolutePath())\n       .setProperty(\"lits.differences\", litsDifferencesPath(projectName))\n-      .setProperty(\"sonar.java.xfile\", \"true\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82a6aa484b90b0c0b5799c9f9d502be5ff001dcf", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/82a6aa484b90b0c0b5799c9f9d502be5ff001dcf", "committedDate": "2020-08-13T14:54:12Z", "message": "Reduce complexity of test file to let SE engine pass Sanity Check"}, "afterCommit": {"oid": "2f5261949046534e2890965ba365f77b408a72fe", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/2f5261949046534e2890965ba365f77b408a72fe", "committedDate": "2020-08-18T06:46:43Z", "message": "SONARJAVA-3493 Fix missing declared exceptions when deserializing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "032adf9e5c5551760972f0ca8527d746a121808a", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/032adf9e5c5551760972f0ca8527d746a121808a", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Add ways to serialize/deserialize method behaviors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93354c884c74aa83533c6d01c7cbd156908a8975", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/93354c884c74aa83533c6d01c7cbd156908a8975", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Check that we are getting similar Method Behaviors when deserializing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8d6cb3f96856f430b9726a5d04cd9c0ea9ec91d", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/d8d6cb3f96856f430b9726a5d04cd9c0ea9ec91d", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Only rely on hardcoded behaviors instead of whitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e117d8a8db513941ff1bc2c33e9b85f3b72cfdf6", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/e117d8a8db513941ff1bc2c33e9b85f3b72cfdf6", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Disable x-file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecc10f5ab8e195ac0a5879af1d9e9b07e1b71901", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/ecc10f5ab8e195ac0a5879af1d9e9b07e1b71901", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Drop asm and bytecode related code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b8c942c39a27df7011747fbc55eba65e748061", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/72b8c942c39a27df7011747fbc55eba65e748061", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Improve coverage of serialization/deserialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9857ed51b6cf072cb5220bfe1739dbfff1c8aeb", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/a9857ed51b6cf072cb5220bfe1739dbfff1c8aeb", "committedDate": "2020-08-18T13:52:23Z", "message": "Reduce complexity of test file to let SE engine pass Sanity Check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4684544e4cd1f6bde9da7b974b8a584a3aded3f9", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/4684544e4cd1f6bde9da7b974b8a584a3aded3f9", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Fix missing declared exceptions when deserializing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NDk5MTg1", "url": "https://github.com/SonarSource/sonar-java/pull/3140#pullrequestreview-469499185", "createdAt": "2020-08-18T14:15:27Z", "commit": {"oid": "2f5261949046534e2890965ba365f77b408a72fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f5261949046534e2890965ba365f77b408a72fe", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/2f5261949046534e2890965ba365f77b408a72fe", "committedDate": "2020-08-18T06:46:43Z", "message": "SONARJAVA-3493 Fix missing declared exceptions when deserializing"}, "afterCommit": {"oid": "4684544e4cd1f6bde9da7b974b8a584a3aded3f9", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/4684544e4cd1f6bde9da7b974b8a584a3aded3f9", "committedDate": "2020-08-18T13:52:23Z", "message": "SONARJAVA-3493 Fix missing declared exceptions when deserializing"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1681, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}