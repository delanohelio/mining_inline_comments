{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTYzMjg0", "number": 2973, "title": "SONARJAVA-3428 Introduce new method to report on parts of String literal", "bodyText": "", "createdAt": "2020-05-29T08:28:52Z", "url": "https://github.com/SonarSource/sonar-java/pull/2973", "merged": true, "mergeCommit": {"oid": "94ff4b6ffdbdb6f9355b70b25631da62d07c6816"}, "closed": true, "closedAt": "2020-05-29T14:56:39Z", "author": {"login": "m-g-sonar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl-59VAFqTQyMDc4Nzc2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmDXzRgBqjMzODc0Mzc4MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzg3NzYy", "url": "https://github.com/SonarSource/sonar-java/pull/2973#pullrequestreview-420787762", "createdAt": "2020-05-29T09:18:41Z", "commit": {"oid": "fe74e012afdaeab018653d8a9ee5179838cd7495"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOToxODo0MVrOGcVNXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOToxODo0MVrOGcVNXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM2MDc5OQ==", "bodyText": "Should probably be called textSpansFromRegexSyntaxElement to fit the parameter type.", "url": "https://github.com/SonarSource/sonar-java/pull/2973#discussion_r432360799", "createdAt": "2020-05-29T09:18:41Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/regex/RegexCheck.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.regex;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.sonar.java.AnalyzerMessage;\n+import org.sonar.java.regex.ast.RegexSyntaxElement;\n+import org.sonar.plugins.java.api.JavaCheck;\n+\n+/**\n+ * Marker interface for rules targeting regexes\n+ */\n+public interface RegexCheck extends JavaCheck {\n+\n+  /**\n+   * Issue location holder, replacing regex syntax elements into text spans for reporting\n+   */\n+  public static class RegexIssueLocation {\n+\n+    private final List<AnalyzerMessage.TextSpan> locations;\n+    private final String message;\n+\n+    public RegexIssueLocation(RegexSyntaxElement tree, String message) {\n+      this.locations = textSpansFromRegexTree(tree);\n+      this.message = message;\n+    }\n+\n+    private RegexIssueLocation(AnalyzerMessage.TextSpan location, String message) {\n+      this.locations = Collections.singletonList(location);\n+      this.message = message;\n+    }\n+\n+    public List<AnalyzerMessage.TextSpan> locations() {\n+      return locations;\n+    }\n+\n+    public String message() {\n+      return message;\n+    }\n+\n+    public List<RegexIssueLocation> toSingleLocationItems() {\n+      if (locations.size() == 1) {\n+        return Collections.singletonList(this);\n+      }\n+      return locations.stream()\n+        .map(loc -> new RegexIssueLocation(loc, message))\n+        .collect(Collectors.toList());\n+    }\n+\n+    private static List<AnalyzerMessage.TextSpan> textSpansFromRegexTree(RegexSyntaxElement tree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe74e012afdaeab018653d8a9ee5179838cd7495"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8022b3f49ef7dc69235d3c11670666717a00086a", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/8022b3f49ef7dc69235d3c11670666717a00086a", "committedDate": "2020-05-29T14:30:38Z", "message": "SONARJAVA-3428 Introduce new method to report on parts of String literal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f402e54b5f06b6db37c3241d0119759336c26d9", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/0f402e54b5f06b6db37c3241d0119759336c26d9", "committedDate": "2020-05-29T14:30:38Z", "message": "Fix from review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f246d7918b573c350a0ffee2b47fffc85249d34b", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/f246d7918b573c350a0ffee2b47fffc85249d34b", "committedDate": "2020-05-29T09:35:04Z", "message": "Fix from review"}, "afterCommit": {"oid": "0f402e54b5f06b6db37c3241d0119759336c26d9", "author": {"user": {"login": "m-g-sonar", "name": "Michael Gumowski"}}, "url": "https://github.com/SonarSource/sonar-java/commit/0f402e54b5f06b6db37c3241d0119759336c26d9", "committedDate": "2020-05-29T14:30:38Z", "message": "Fix from review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1698, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}