{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5Mjg5OTE3", "number": 3057, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozOTo0N1rOEIbBVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjowMDoyNVrOEIbi_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjY2Nzc0OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/test/java/org/sonar/java/regex/ast/SequenceTreeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozOTo0N1rOGoX97g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo1MToxMVrOGoYciA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4ODkxMA==", "bodyText": "@sebastian-hungerecker-sonarsource I'm really not sure about this. Shouldn't I have 3 items here? I was expecting 2 backslashes.", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r444988910", "createdAt": "2020-06-24T15:39:47Z", "author": {"login": "m-g-sonar"}, "path": "java-frontend/src/test/java/org/sonar/java/regex/ast/SequenceTreeTest.java", "diffHunk": "@@ -34,4 +36,16 @@ void empty_string() {\n     assertKind(RegexTree.Kind.SEQUENCE, regex);\n   }\n \n+  @Test\n+  void escapedRegexEscape() {\n+    // actual regular expression catching unicode characters in strings literals: \"\\\\u+[a-fA-F0-9]{4}\"\n+    RegexTree regex = assertSuccessfulParse(\"\\\\\\\\\\\\\\\\u+\");\n+    assertKind(RegexTree.Kind.SEQUENCE, regex);\n+    List<RegexTree> items = ((SequenceTree) regex).getItems();\n+    assertThat(items).hasSize(2);\n+//    assertPlainCharacter('\\\\', items.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee5039d513076c2a78873706c759668ac5a2603"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5Njc0NA==", "bodyText": "Note that there are three levels of escaping here (because this is written as a String inside the tests instead of in its own .java file as the rule tests are): \"\\\\\\\\u+\" creates a string containing four backslashes. The JavaCharacter parser turns this into two backslashes. The RegexParser then sees those two backslashes, parses them as an escape sequence and produces a single PlainCharacterTree representing a backslash. So it's all good.", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r444996744", "createdAt": "2020-06-24T15:51:11Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-frontend/src/test/java/org/sonar/java/regex/ast/SequenceTreeTest.java", "diffHunk": "@@ -34,4 +36,16 @@ void empty_string() {\n     assertKind(RegexTree.Kind.SEQUENCE, regex);\n   }\n \n+  @Test\n+  void escapedRegexEscape() {\n+    // actual regular expression catching unicode characters in strings literals: \"\\\\u+[a-fA-F0-9]{4}\"\n+    RegexTree regex = assertSuccessfulParse(\"\\\\\\\\\\\\\\\\u+\");\n+    assertKind(RegexTree.Kind.SEQUENCE, regex);\n+    List<RegexTree> items = ((SequenceTree) regex).getItems();\n+    assertThat(items).hasSize(2);\n+//    assertPlainCharacter('\\\\', items.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4ODkxMA=="}, "originalCommit": {"oid": "bee5039d513076c2a78873706c759668ac5a2603"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjc1MzkxOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/regex/JavaUnicodeEscapeParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjowMDoyNVrOGoY1EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjowMDoyNVrOGoY1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAwMzAyNA==", "bodyText": "It looks to me as if something like \\t\\u1234 isn't going to be recognized as a Unicode escape this way because the \\t sets isEscaping to true and the backslash from \\u sets it to false.", "url": "https://github.com/SonarSource/sonar-java/pull/3057#discussion_r445003024", "createdAt": "2020-06-24T16:00:25Z", "author": {"login": "sebastian-hungerecker-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/regex/JavaUnicodeEscapeParser.java", "diffHunk": "@@ -62,7 +63,13 @@ public void moveNext() {\n     }\n     int startIndex = index;\n     char ch;\n-    if (index < sourceText.length() - 1 && sourceText.charAt(index) == '\\\\' && sourceText.charAt(index + 1) == 'u') {\n+    if (sourceText.charAt(index) == '\\\\') {\n+      isEscaping = !isEscaping;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee5039d513076c2a78873706c759668ac5a2603"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3934, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}