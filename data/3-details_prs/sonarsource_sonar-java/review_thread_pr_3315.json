{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDgxODY3", "number": 3315, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNzoxNVrOFALC9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNzoxNVrOFALC9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzI1MzAxOnYy", "diffSide": "RIGHT", "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S107_java.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTowNzoxNVrOH-Ui0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToxNzo1NFrOH-VQBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExMDM1NA==", "bodyText": "This should be an HTML list.\nIt's a ruleapi bug, you have to remove the space before the * in the description.\nI already did it, you just have to generate the metadata to solve the problem.", "url": "https://github.com/SonarSource/sonar-java/pull/3315#discussion_r535110354", "createdAt": "2020-12-03T11:07:15Z", "author": {"login": "quentin-jaquier-sonarsource"}, "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S107_java.html", "diffHunk": "@@ -14,6 +14,11 @@ <h2>Compliant Solution</h2>\n }\n </pre>\n <h2>Exceptions</h2>\n-<p>Methods annotated with Spring's <code>@RequestMapping</code> (and related shortcut annotations, like <code>@GetRequest</code>) or\n-<code>@JsonCreator</code> may have a lot of parameters, encapsulation being possible. Such methods are therefore ignored.</p>\n+<p>Methods annotated with :</p>\n+<p> * Spring's <code>@RequestMapping</code> (and related shortcut annotations, like <code>@GetRequest</code>)</p>\n+<p> * JAX-RS API annotations (like <code>@javax.ws.rs.GET</code>)</p>\n+<p> * Bean constructor injection with <code>@org.springframework.beans.factory.annotation.Autowired</code></p>\n+<p> * CDI constructor injection with <code>@javax.inject.Inject</code></p>\n+<p> * <code>@com.fasterxml.jackson.annotation.JsonCreator</code></p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48416247a49dfcf556760096c38ff42a7572a3ba"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyMTkyNA==", "bodyText": "Thanks, didn't know about it \ud83d\udc4d", "url": "https://github.com/SonarSource/sonar-java/pull/3315#discussion_r535121924", "createdAt": "2020-12-03T11:17:54Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-checks/src/main/resources/org/sonar/l10n/java/rules/java/S107_java.html", "diffHunk": "@@ -14,6 +14,11 @@ <h2>Compliant Solution</h2>\n }\n </pre>\n <h2>Exceptions</h2>\n-<p>Methods annotated with Spring's <code>@RequestMapping</code> (and related shortcut annotations, like <code>@GetRequest</code>) or\n-<code>@JsonCreator</code> may have a lot of parameters, encapsulation being possible. Such methods are therefore ignored.</p>\n+<p>Methods annotated with :</p>\n+<p> * Spring's <code>@RequestMapping</code> (and related shortcut annotations, like <code>@GetRequest</code>)</p>\n+<p> * JAX-RS API annotations (like <code>@javax.ws.rs.GET</code>)</p>\n+<p> * Bean constructor injection with <code>@org.springframework.beans.factory.annotation.Autowired</code></p>\n+<p> * CDI constructor injection with <code>@javax.inject.Inject</code></p>\n+<p> * <code>@com.fasterxml.jackson.annotation.JsonCreator</code></p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExMDM1NA=="}, "originalCommit": {"oid": "48416247a49dfcf556760096c38ff42a7572a3ba"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3698, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}