{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDk4ODY5", "number": 3363, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzozMzo0OFrOFHL31w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMDowMFrOFHMtTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDc4ODcxOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/test/java/org/sonar/java/se/xproc/BehaviorCacheTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzozMzo0OFrOIIjBaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzozMzo0OFrOIIjBaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgzMzMyMw==", "bodyText": "Maybe moving .containsOnlyOnce() to the next line and removing String concatenation will make more sense", "url": "https://github.com/SonarSource/sonar-java/pull/3363#discussion_r545833323", "createdAt": "2020-12-18T13:33:48Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/test/java/org/sonar/java/se/xproc/BehaviorCacheTest.java", "diffHunk": "@@ -99,7 +99,8 @@ void method_behavior_cache_should_be_filled_and_cleanup() {\n   void compute_behavior_only_once() throws Exception {\n     SymbolicExecutionVisitor sev = createSymbolicExecutionVisitor(\"src/test/resources/se/ComputeBehaviorOnce.java\");\n     assertThat(sev.behaviorCache.behaviors.entrySet()).hasSize(5);\n-    assertThat(logTester.logs(LoggerLevel.DEBUG)).containsOnlyOnce(\"Could not complete symbolic execution: \");\n+    assertThat(logTester.logs(LoggerLevel.DEBUG)).containsOnlyOnce(\"Could not complete symbolic execution: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a615839766e76f555f1273b66f82559a35e7e6bd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDkwOTQwOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/test/java/org/sonar/java/classpath/ClasspathForMainTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNTo1MVrOIIkHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNTo1MVrOIIkHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTI5MQ==", "bodyText": "Looks like this test and the above one are pretty similar. Will be nice if you can replace it with one parametrised.", "url": "https://github.com/SonarSource/sonar-java/pull/3363#discussion_r545851291", "createdAt": "2020-12-18T14:05:51Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/test/java/org/sonar/java/classpath/ClasspathForMainTest.java", "diffHunk": "@@ -444,6 +452,10 @@ void should_include_jdk_in_libraries_when_specified_classic() {\n     assertThat(elements)\n       .hasSize(1)\n       .allMatch(file -> file.getName().equals(\"rt.jar\"));\n+    assertThat(logTester.logs(LoggerLevel.DEBUG))\n+      .hasSize(2)\n+      .anyMatch(debug -> debug.startsWith(\"Property 'sonar.java.jdkHome' resolved with:\"))\n+      .anyMatch(debug -> debug.contains(\"rt.jar\"));\n   }\n \n   @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a615839766e76f555f1273b66f82559a35e7e6bd"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDkxMzk3OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/test/java/org/sonar/java/classpath/ClasspathForMainTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNjo1NlrOIIkKLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNjo1NlrOIIkKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1MQ==", "bodyText": "this empty line seems to be odd", "url": "https://github.com/SonarSource/sonar-java/pull/3363#discussion_r545851951", "createdAt": "2020-12-18T14:06:56Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/test/java/org/sonar/java/classpath/ClasspathForMainTest.java", "diffHunk": "@@ -211,6 +212,7 @@ void libraries_should_accept_relative_paths_with_wildcard() throws Exception {\n       \"lib\",\n       \"lib\",\n       \"oklog-1.0.1.aar\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a615839766e76f555f1273b66f82559a35e7e6bd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDkyNTU2OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMDowMFrOIIkQ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMDowMFrOIIkQ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MzY5MQ==", "bodyText": "I was just wondering, Maybe it will be still useful to report empty list to say that files weren't resolved. Wdyt?", "url": "https://github.com/SonarSource/sonar-java/pull/3363#discussion_r545853691", "createdAt": "2020-12-18T14:10:00Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "diffHunk": "@@ -78,14 +79,25 @@ protected AbstractClasspath(Configuration settings, FileSystem fs, InputFile.Typ\n   }\n \n   protected List<File> getJdkJars() {\n-    return settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n+    List<File> jdkClassesRoots = settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n       .flatMap(AbstractClasspath::existingDirectoryOrLog)\n       .map(File::toPath)\n       .map(JavaSdkUtil::getJdkClassesRoots)\n       .orElse(Collections.emptyList());\n+    logResolvedFiles(ClasspathProperties.SONAR_JAVA_JDK_HOME, jdkClassesRoots);\n+    return jdkClassesRoots;\n+  }\n+\n+  static void logResolvedFiles(String property, Collection<File> files) {\n+    if (LOG.isDebugEnabled() && !files.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a615839766e76f555f1273b66f82559a35e7e6bd"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3749, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}