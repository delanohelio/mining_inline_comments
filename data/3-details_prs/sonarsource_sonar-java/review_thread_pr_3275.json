{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzEyMzQ0", "number": 3275, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMTozN1rOE55m-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMzowMlrOE55o-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ4MTUzOnYy", "diffSide": "RIGHT", "path": "java-frontend/src/test/files/se/NullDereferenceCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMTozN1rOH0pOZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMTozN1rOH0pOZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2MzQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // as the are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.\n          \n          \n            \n              // as they are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.", "url": "https://github.com/SonarSource/sonar-java/pull/3275#discussion_r524963429", "createdAt": "2020-11-17T08:21:37Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/test/files/se/NullDereferenceCheck.java", "diffHunk": "@@ -47,10 +47,16 @@ public void testIssues() {\n     return nullableField;\n   }\n \n+  // Despite the name, some Nullable annotations are meant to be used as CheckForNull\n+  // as the are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ace3b9132f43c26ea6bc41067aa6cdeb00f7be0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTQ4NjY2OnYy", "diffSide": "RIGHT", "path": "java-frontend/src/main/java/org/sonar/java/se/NullableAnnotationUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMzowMlrOH0pRcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyMzowMlrOH0pRcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NDIwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // as the are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.\n          \n          \n            \n                // as they are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.", "url": "https://github.com/SonarSource/sonar-java/pull/3275#discussion_r524964208", "createdAt": "2020-11-17T08:23:02Z", "author": {"login": "margarita-nedzelska-sonarsource"}, "path": "java-frontend/src/main/java/org/sonar/java/se/NullableAnnotationUtils.java", "diffHunk": "@@ -60,8 +60,10 @@ private NullableAnnotationUtils() {\n     \"javax.annotation.CheckForNull\",\n     \"edu.umd.cs.findbugs.annotations.CheckForNull\",\n     \"org.netbeans.api.annotations.common.CheckForNull\",\n-    // Despite the name, Spring Nullable is meant to be used as CheckForNull\n-    \"org.springframework.lang.Nullable\");\n+    // Despite the name, some Nullable annotations are meant to be used as CheckForNull\n+    // as the are using meta-annotation from javax: @Nonnull(When.MAYBE), same as javax @CheckForNull.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ace3b9132f43c26ea6bc41067aa6cdeb00f7be0"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3817, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}