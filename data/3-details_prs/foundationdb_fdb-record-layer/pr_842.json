{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTI1MjAw", "number": 842, "title": "Resolves #841: Add a custom index queryability filter for planning.", "bodyText": "Add a new field to RecordQuery that allows a user to specify a custom filtering function that determines whether an index should be considered by the planner. This replaces the previous hard-coded check for the value of IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\nThis change does not break backwards compatibility.\nSee #841 for more discussion of why we need this filter.", "createdAt": "2020-03-04T22:14:54Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842", "merged": true, "mergeCommit": {"oid": "27b94a137437a1d88cedf8ded174ce0f653fb18f"}, "closed": true, "closedAt": "2020-03-05T00:07:54Z", "author": {"login": "nschiefer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKeiDGAFqTM2OTE2NTUzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKgE_IAFqTM2OTIxNDM5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTY1NTMw", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#pullrequestreview-369165530", "createdAt": "2020-03-04T22:17:41Z", "commit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoxNzo0MVrOFx_tfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoxODo1N1rOFx_vkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODM4MQ==", "bodyText": "I assume that this doesn't work with the new planner (so can't be a @DualPlannerTest)?", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387968381", "createdAt": "2020-03-04T22:17:41Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/query/FDBRestrictedIndexQueryTest.java", "diffHunk": "@@ -462,4 +462,53 @@ public void queryAllowedUniversalIndex() throws Exception {\n         assertFalse(plan2.hasRecordScan(), \"should not use record scan\");\n         assertEquals(-1692774119, plan2.planHash());\n     }\n+\n+    /**\n+     * Verify that the query planner uses the specified {@link com.apple.foundationdb.record.query.IndexQueryabilityFilter}.\n+     * If both allowed indexes and a queryability filter are set, verify that the planner uses the allowed indexes.\n+     */\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODkxMg==", "bodyText": "In theory, the docs for .setAllowedIndexes should also explain that they override the queryability filter. This also seems like it should link to the DEFAULT filter for completeness.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387968912", "createdAt": "2020-03-04T22:18:57Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/RecordQuery.java", "diffHunk": "@@ -228,6 +242,17 @@ public Builder setAllowedIndex(@Nullable String allowedIndex) {\n             return setAllowedIndexes(Collections.singleton(allowedIndex));\n         }\n \n+        /**\n+         * Set a function that defines whether each index should be used by the query planner.\n+         * Note that if allowed indexes are used then the queryability filter is ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 71}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/54e47d631daeffd3b84a1dbf975e17b5169d9b15", "committedDate": "2020-03-04T22:14:33Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}, "afterCommit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4ab9e5634d3742c1d4aa83290cf7f2256eed2d07", "committedDate": "2020-03-04T22:33:53Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTc1OTgz", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#pullrequestreview-369175983", "createdAt": "2020-03-04T22:37:16Z", "commit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxNlrOFyAN4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxNlrOFyAN4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NjY3NA==", "bodyText": "Oh, sorry, just realized that this should probably say \"except those with the ALLOWED_FOR_QUERY_OPTION set to false\"", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387976674", "createdAt": "2020-03-04T22:37:16Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/IndexQueryabilityFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * IndexQueryabilityFilter.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.query;\n+\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.record.metadata.Index;\n+import com.apple.foundationdb.record.metadata.IndexOptions;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * A filter used to determine whether an index should be considered when planning queries.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+@FunctionalInterface\n+public interface IndexQueryabilityFilter {\n+    /**\n+     * The default index queryability filter which uses all indexes except those with the {@link IndexOptions#ALLOWED_FOR_QUERY_OPTION}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4ab9e5634d3742c1d4aa83290cf7f2256eed2d07", "committedDate": "2020-03-04T22:33:53Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}, "afterCommit": {"oid": "8b29cfda400c2560996f6c82aa836fb880dce5a8", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/8b29cfda400c2560996f6c82aa836fb880dce5a8", "committedDate": "2020-03-04T22:43:48Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "316d42d664026b275826192649a535d2401d626c", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/316d42d664026b275826192649a535d2401d626c", "committedDate": "2020-03-04T22:55:37Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b29cfda400c2560996f6c82aa836fb880dce5a8", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/8b29cfda400c2560996f6c82aa836fb880dce5a8", "committedDate": "2020-03-04T22:43:48Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}, "afterCommit": {"oid": "316d42d664026b275826192649a535d2401d626c", "author": {"user": {"login": "nschiefer", "name": "Nicholas Schiefer"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/316d42d664026b275826192649a535d2401d626c", "committedDate": "2020-03-04T22:55:37Z", "message": "Resolves #841: Add a custom index queryability filter for planning.\n\nAdd a new field to RecordQuery that allows a user to specify a custom\nfiltering function that determines whether an index should be considered\nby the planner. This replaces the previous hard-coded check for the value\nof IndexOptions.ALLOWED_FOR_QUERY_OPTION, which remains the default.\n\nThis change does not break backwards compatibility."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTk1MjY0", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#pullrequestreview-369195264", "createdAt": "2020-03-04T23:18:03Z", "commit": {"oid": "316d42d664026b275826192649a535d2401d626c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjE0Mzk4", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#pullrequestreview-369214398", "createdAt": "2020-03-05T00:07:44Z", "commit": {"oid": "316d42d664026b275826192649a535d2401d626c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2779, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}