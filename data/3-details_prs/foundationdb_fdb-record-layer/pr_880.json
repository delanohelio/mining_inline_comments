{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Njk3ODg2", "number": 880, "title": "Fixes #876: TextIndex does not instrument BunchedMap reads and writes", "bodyText": "The problem here was that the reading and writing of keys from FDB happened far enough away from the store timer logic, etc., that the previous logic was not even trying to look within the BunchedMap. However, quite a few reads and writes could happen as a result of text indexing, so getting the right numbers is fairly important. Note that once #866 is in, this may matter less (as the total reads and writes for the transaction will be more accurate), but doing it this way allows it as well allows it to (1) include the sizes of deleted values and (2) correctly correlate those operations to index updates. For that reason, I think this has value even after that other issue is addressed.\nThe architecture of this change is as follows:\n\nThe BunchedMap class has some instrumentX methods that instrument specific FDB operations. It provides default implementations that do nothing.\nThe TextIndexMaintainer includes its own implementation that includes an FDBStoreTimer and updates the appropriate timer events.\nWhen index maintenance is performed, if the FDBRecordContext has a non-null timer, then it uses an instance of the instrumented class and provides its own timer.\n\nThis fixes #876.", "createdAt": "2020-04-01T00:49:14Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880", "merged": true, "mergeCommit": {"oid": "e70d3f9b5cec1cf37b6f540d4e673059f2a628ab"}, "closed": true, "closedAt": "2020-04-02T12:36:20Z", "author": {"login": "alecgrieser"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTZnA4gBqjMxODg1MTUzOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTrkRngFqTM4NjM4MTY5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11d312d48d4902d74cbd1a961ff75e985512806f", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/11d312d48d4902d74cbd1a961ff75e985512806f", "committedDate": "2020-04-01T00:44:20Z", "message": "Fixes #876: TextIndex does not instrument BunchedMap reads and writes\n\nThe problem here was that the reading and writing of keys from FDB happened far enough away from the store timer logic, etc., that the previous logic was not even trying to look within the BunchedMap. However, quite a few reads and writes could happen as a result of text indexing, so getting the right numbers is fairly important. Note that once #866 is in, this may matter less (as the total reads and writes for the transaction will be more accurate), but doing it this way allows it as well allows it to (1) include the sizes of deleted values and (2) correctly correlate those operations to index updates. For that reason, I think this has value even after that other issue is addressed."}, "afterCommit": {"oid": "72a041af16bd751a0a1ec58a85927a793ae4ec9a", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/72a041af16bd751a0a1ec58a85927a793ae4ec9a", "committedDate": "2020-04-01T15:40:42Z", "message": "Fixes #876: TextIndex does not instrument BunchedMap reads and writes\n\nThe problem here was that the reading and writing of keys from FDB happened far enough away from the store timer logic, etc., that the previous logic was not even trying to look within the BunchedMap. However, quite a few reads and writes could happen as a result of text indexing, so getting the right numbers is fairly important. Note that once #866 is in, this may matter less (as the total reads and writes for the transaction will be more accurate), but doing it this way allows it as well allows it to (1) include the sizes of deleted values and (2) correctly correlate those operations to index updates. For that reason, I think this has value even after that other issue is addressed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODEwODk4", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880#pullrequestreview-385810898", "createdAt": "2020-04-01T17:44:32Z", "commit": {"oid": "72a041af16bd751a0a1ec58a85927a793ae4ec9a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzo0NDozMlrOF_Lsow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzo0NjowMVrOF_Lv7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc5NjI1OQ==", "bodyText": "This should probably return a CompletableFuture<List<KeyValue>> as timer.instrument returns a future.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880#discussion_r401796259", "createdAt": "2020-04-01T17:44:32Z", "author": {"login": "scgray"}, "path": "fdb-extensions/src/main/java/com/apple/foundationdb/map/BunchedMap.java", "diffHunk": "@@ -140,6 +152,44 @@ public BunchedMap(@Nonnull BunchedSerializer<K,V> serializer, @Nonnull Comparato\n         }\n     }\n \n+    /**\n+     * Instrument a range read. The base implementation does nothing, but extenders are encouraged to\n+     * override this method with their own implementations that, for example, records the total numbers\n+     * of keys read and their sizes.\n+     *\n+     * @param readFuture a future that will complete to a list of keys and values\n+     */\n+    protected void instrumentRangeRead(@Nonnull CompletableFuture<List<KeyValue>> readFuture) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a041af16bd751a0a1ec58a85927a793ae4ec9a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc5NzEwMA==", "bodyText": "timer.instrument returns the instrumented future, so I think it probably needs to be returned here.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880#discussion_r401797100", "createdAt": "2020-04-01T17:46:01Z", "author": {"login": "scgray"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/indexes/TextIndexMaintainer.java", "diffHunk": "@@ -552,4 +559,54 @@ public boolean canDeleteWhere(@Nonnull QueryToKeyMatcher matcher, @Nonnull Key.E\n         }\n         return cursor;\n     }\n+\n+    private static class InstrumentedBunchedMap<K, V> extends BunchedMap<K, V> {\n+        @Nonnull\n+        private final FDBStoreTimer timer;\n+        @Nonnull\n+        private final Executor executor;\n+\n+        public InstrumentedBunchedMap(@Nonnull BunchedMap<K, V> model, @Nonnull FDBStoreTimer timer, @Nonnull Executor executor) {\n+            super(model);\n+            this.timer = timer;\n+            this.executor = executor;\n+        }\n+\n+        @Override\n+        protected void instrumentDelete(@Nonnull byte[] key, @Nullable byte[] oldValue) {\n+            timer.increment(FDBStoreTimer.Counts.DELETE_INDEX_KEY);\n+            timer.increment(FDBStoreTimer.Counts.DELETE_INDEX_KEY_BYTES, key.length);\n+            if (oldValue != null) {\n+                timer.increment(FDBStoreTimer.Counts.DELETE_INDEX_VALUE_BYTES, oldValue.length);\n+            }\n+        }\n+\n+        @Override\n+        protected void instrumentWrite(@Nonnull byte[] key, @Nonnull byte[] value, @Nullable byte[] oldValue) {\n+            timer.increment(FDBStoreTimer.Counts.SAVE_INDEX_KEY);\n+            timer.increment(FDBStoreTimer.Counts.SAVE_INDEX_KEY_BYTES, key.length);\n+            timer.increment(FDBStoreTimer.Counts.SAVE_INDEX_VALUE_BYTES, value.length);\n+            if (oldValue != null) {\n+                // Or should this ignore the value altogether?\n+                timer.increment(FDBStoreTimer.Counts.DELETE_INDEX_VALUE_BYTES, oldValue.length);\n+            }\n+        }\n+\n+        @Override\n+        protected void instrumentRangeRead(@Nonnull CompletableFuture<List<KeyValue>> readFuture) {\n+            timer.instrument(FDBStoreTimer.Events.SCAN_INDEX_KEYS, readFuture, executor).whenComplete((list, err) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a041af16bd751a0a1ec58a85927a793ae4ec9a"}, "originalPosition": 133}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784b396b498aff675df16494286e1ed215773daf", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/784b396b498aff675df16494286e1ed215773daf", "committedDate": "2020-04-02T00:36:57Z", "message": "Fixes #876: TextIndex does not instrument BunchedMap reads and writes\n\nThe problem here was that the reading and writing of keys from FDB happened far enough away from the store timer logic, etc., that the previous logic was not even trying to look within the BunchedMap. However, quite a few reads and writes could happen as a result of text indexing, so getting the right numbers is fairly important. Note that once #866 is in, this may matter less (as the total reads and writes for the transaction will be more accurate), but doing it this way allows it as well allows it to (1) include the sizes of deleted values and (2) correctly correlate those operations to index updates. For that reason, I think this has value even after that other issue is addressed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15b6a5a6d6ab281eb35eb628924d29b899522b26", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/15b6a5a6d6ab281eb35eb628924d29b899522b26", "committedDate": "2020-04-02T00:36:57Z", "message": "BunchedMap::instrumentRangeRead now returns an instrumented future instead of void"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a729a2104e7c7879e6046c11c872131e1733791f", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/a729a2104e7c7879e6046c11c872131e1733791f", "committedDate": "2020-04-02T00:36:21Z", "message": "BunchedMap::instrumentRangeRead now returns an instrumented future instead of void"}, "afterCommit": {"oid": "15b6a5a6d6ab281eb35eb628924d29b899522b26", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/15b6a5a6d6ab281eb35eb628924d29b899522b26", "committedDate": "2020-04-02T00:36:57Z", "message": "BunchedMap::instrumentRangeRead now returns an instrumented future instead of void"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b876dc4c9693ae0d882933a927a638099ea47b", "author": {"user": {"login": "alecgrieser", "name": "Alec Grieser"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/30b876dc4c9693ae0d882933a927a638099ea47b", "committedDate": "2020-04-02T00:38:10Z", "message": "update release notes for resolution for #876"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzgxNjk2", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880#pullrequestreview-386381696", "createdAt": "2020-04-02T12:36:05Z", "commit": {"oid": "30b876dc4c9693ae0d882933a927a638099ea47b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjozNjowNVrOF_pIhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjozNjowNVrOF_pIhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3ODUzMw==", "bodyText": "Nice catch.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/880#discussion_r402278533", "createdAt": "2020-04-02T12:36:05Z", "author": {"login": "scgray"}, "path": "docs/ReleaseNotes.md", "diffHunk": "@@ -50,7 +50,7 @@ The `FDBDatabase::getReadVersion()` method has been replaced with the `FDBRecord\n * **Performance** The `LocatableResolver::resolve` methods have overloads that allow ancillary transactions started for key space path resolution to avoid starting another read version request [(Issue #864)](https://github.com/FoundationDB/fdb-record-layer/issues/864)\n * **Performance** Improvement 2 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n * **Performance** Improvement 3 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n-* **Performance** Improvement 4 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n+* **Performance** The metrics for text indexes now contain more accurate numbers for reads and writes [(Issue #876)](https://github.com/FoundationDB/fdb-record-layer/issues/876)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30b876dc4c9693ae0d882933a927a638099ea47b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2555, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}