{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzYwMTgy", "number": 995, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1ODo0M1rOER-h2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1ODo0M1rOER-h2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjg1NzIwOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/query/plan/planning/BooleanNormalizerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1ODo0M1rOG2-1iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNTo0OFrOG2_eiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNTgwMA==", "bodyText": "Would be nice to have a test test idempotency of repeated application of this algorithm.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/995#discussion_r460305800", "createdAt": "2020-07-24T21:58:43Z", "author": {"login": "normen662"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/query/plan/planning/BooleanNormalizerTest.java", "diffHunk": "@@ -103,6 +102,18 @@ public void complex() {\n                 Query.and(P1, Query.not(Query.and(P2, Query.or(P3, P4)))));\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359866b5d4c497b38f2e29edc94f5d65a973df3d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNjI5Nw==", "bodyText": "Yeah. That actually seems like a good idea always. So I made the base assertExpectedNormalization check that the expected result is stable.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/995#discussion_r460316297", "createdAt": "2020-07-24T22:35:48Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/query/plan/planning/BooleanNormalizerTest.java", "diffHunk": "@@ -103,6 +102,18 @@ public void complex() {\n                 Query.and(P1, Query.not(Query.and(P2, Query.or(P3, P4)))));\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNTgwMA=="}, "originalCommit": {"oid": "359866b5d4c497b38f2e29edc94f5d65a973df3d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}