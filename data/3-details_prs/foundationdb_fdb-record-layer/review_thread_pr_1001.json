{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MzcyMjY1", "number": 1001, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoyNDo0OFrOERi3wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzozNDowMlrOETdtYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODMyNTc4OnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoyNDo0OFrOG2UWBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo1MzoyOVrOG5OMQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwOTYwNQ==", "bodyText": "A text index, in particular, does not have the actual indexed text in the entry.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1001#discussion_r459609605", "createdAt": "2020-07-23T17:24:48Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1351,27 +1355,44 @@ private QueryComponent normalizeAndOrForInAsOr(@Nonnull QueryComponent component\n     }\n \n     @Nonnull\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\")\n     private RecordQueryPlan tryToConvertToCoveringPlan(@Nonnull PlanContext planContext, @Nonnull RecordQueryPlan chosenPlan) {\n         if (chosenPlan instanceof RecordQueryPlanWithIndex) {\n             // Check if the index scan covers, then convert it to a covering plan.\n-            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan);\n+            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan, null);\n         } else if (chosenPlan instanceof RecordQueryUnorderedPrimaryKeyDistinctPlan) {\n             // If possible, push down the covering index transformation so that\n             // it happens before checking for distinct primary keys\n             final RecordQueryUnorderedPrimaryKeyDistinctPlan distinctPlan = (RecordQueryUnorderedPrimaryKeyDistinctPlan) chosenPlan;\n             if (distinctPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n-                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild());\n+                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild(), null);\n                 if (newChildPlan != distinctPlan.getChild()) {\n                     return new RecordQueryUnorderedPrimaryKeyDistinctPlan(newChildPlan);\n                 }\n             }\n+        } else if (chosenPlan instanceof RecordQueryFilterPlan) {\n+            final RecordQueryFilterPlan filterPlan = (RecordQueryFilterPlan)chosenPlan;\n+            if (filterPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n+                final RecordQueryPlanWithIndex filteredIndexPlan = (RecordQueryPlanWithIndex) filterPlan.getChild();\n+                final Index index = metaData.getIndex(filteredIndexPlan.getIndexName());\n+                if (indexTypes.getValueTypes().contains(index.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "922fe9a0db691901824a81016af42ee9649a73c7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0NjI5Nw==", "bodyText": "This is a great point. I think it's worth adding it as a comment here in case someone forgets this in the future.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1001#discussion_r462646297", "createdAt": "2020-07-29T23:26:31Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1351,27 +1355,44 @@ private QueryComponent normalizeAndOrForInAsOr(@Nonnull QueryComponent component\n     }\n \n     @Nonnull\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\")\n     private RecordQueryPlan tryToConvertToCoveringPlan(@Nonnull PlanContext planContext, @Nonnull RecordQueryPlan chosenPlan) {\n         if (chosenPlan instanceof RecordQueryPlanWithIndex) {\n             // Check if the index scan covers, then convert it to a covering plan.\n-            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan);\n+            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan, null);\n         } else if (chosenPlan instanceof RecordQueryUnorderedPrimaryKeyDistinctPlan) {\n             // If possible, push down the covering index transformation so that\n             // it happens before checking for distinct primary keys\n             final RecordQueryUnorderedPrimaryKeyDistinctPlan distinctPlan = (RecordQueryUnorderedPrimaryKeyDistinctPlan) chosenPlan;\n             if (distinctPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n-                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild());\n+                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild(), null);\n                 if (newChildPlan != distinctPlan.getChild()) {\n                     return new RecordQueryUnorderedPrimaryKeyDistinctPlan(newChildPlan);\n                 }\n             }\n+        } else if (chosenPlan instanceof RecordQueryFilterPlan) {\n+            final RecordQueryFilterPlan filterPlan = (RecordQueryFilterPlan)chosenPlan;\n+            if (filterPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n+                final RecordQueryPlanWithIndex filteredIndexPlan = (RecordQueryPlanWithIndex) filterPlan.getChild();\n+                final Index index = metaData.getIndex(filteredIndexPlan.getIndexName());\n+                if (indexTypes.getValueTypes().contains(index.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwOTYwNQ=="}, "originalCommit": {"oid": "922fe9a0db691901824a81016af42ee9649a73c7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1NDUyOA==", "bodyText": "Added there.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1001#discussion_r462654528", "createdAt": "2020-07-29T23:53:29Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1351,27 +1355,44 @@ private QueryComponent normalizeAndOrForInAsOr(@Nonnull QueryComponent component\n     }\n \n     @Nonnull\n+    @SuppressWarnings(\"PMD.CompareObjectsWithEquals\")\n     private RecordQueryPlan tryToConvertToCoveringPlan(@Nonnull PlanContext planContext, @Nonnull RecordQueryPlan chosenPlan) {\n         if (chosenPlan instanceof RecordQueryPlanWithIndex) {\n             // Check if the index scan covers, then convert it to a covering plan.\n-            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan);\n+            return tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) chosenPlan, null);\n         } else if (chosenPlan instanceof RecordQueryUnorderedPrimaryKeyDistinctPlan) {\n             // If possible, push down the covering index transformation so that\n             // it happens before checking for distinct primary keys\n             final RecordQueryUnorderedPrimaryKeyDistinctPlan distinctPlan = (RecordQueryUnorderedPrimaryKeyDistinctPlan) chosenPlan;\n             if (distinctPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n-                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild());\n+                final RecordQueryPlan newChildPlan = tryToConvertToCoveringPlan(planContext, (RecordQueryPlanWithIndex) distinctPlan.getChild(), null);\n                 if (newChildPlan != distinctPlan.getChild()) {\n                     return new RecordQueryUnorderedPrimaryKeyDistinctPlan(newChildPlan);\n                 }\n             }\n+        } else if (chosenPlan instanceof RecordQueryFilterPlan) {\n+            final RecordQueryFilterPlan filterPlan = (RecordQueryFilterPlan)chosenPlan;\n+            if (filterPlan.getChild() instanceof RecordQueryPlanWithIndex) {\n+                final RecordQueryPlanWithIndex filteredIndexPlan = (RecordQueryPlanWithIndex) filterPlan.getChild();\n+                final Index index = metaData.getIndex(filteredIndexPlan.getIndexName());\n+                if (indexTypes.getValueTypes().contains(index.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwOTYwNQ=="}, "originalCommit": {"oid": "922fe9a0db691901824a81016af42ee9649a73c7"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODQ1MTUyOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzozNDowMlrOG5N05Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzo1MzoyMFrOG5OMFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0ODU0OQ==", "bodyText": "I think that this part here only works because findFilterCoveredFields() ignored nested repeated fields entirely. That's fine with me, but I think it needs a comment to that effect or someone might mess this up later.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1001#discussion_r462648549", "createdAt": "2020-07-29T23:34:02Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1384,6 +1405,11 @@ private RecordQueryPlan tryToConvertToCoveringPlan(@Nonnull PlanContext context,\n         for (KeyExpression resultField : context.query.getRequiredResults()) {\n             resultFields.addAll(resultField.normalizeKeyForPositions());\n         }\n+        if (filterFields != null) {\n+            for (KeyExpression filterField : filterFields) {\n+                resultFields.addAll(filterField.normalizeKeyForPositions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e2a09be9c53b368f4fa991936cc93053628a21"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1NDQ4NQ==", "bodyText": "I put the comment on findFilterCoveredFields; I think I captured the essence of the tricky cases.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1001#discussion_r462654485", "createdAt": "2020-07-29T23:53:20Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/plan/RecordQueryPlanner.java", "diffHunk": "@@ -1384,6 +1405,11 @@ private RecordQueryPlan tryToConvertToCoveringPlan(@Nonnull PlanContext context,\n         for (KeyExpression resultField : context.query.getRequiredResults()) {\n             resultFields.addAll(resultField.normalizeKeyForPositions());\n         }\n+        if (filterFields != null) {\n+            for (KeyExpression filterField : filterFields) {\n+                resultFields.addAll(filterField.normalizeKeyForPositions());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0ODU0OQ=="}, "originalCommit": {"oid": "53e2a09be9c53b368f4fa991936cc93053628a21"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 13, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}