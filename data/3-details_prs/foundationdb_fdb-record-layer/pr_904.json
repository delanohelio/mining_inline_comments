{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzgwOTc0", "number": 904, "title": "Resolves #903 Reorganize tests", "bodyText": "This has 4 commits that do cleanup, and one that moves all the tests around", "createdAt": "2020-04-14T19:50:09Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904", "merged": true, "mergeCommit": {"oid": "955b861db25f2ac2649ef5f29a88ff311966cf55"}, "closed": true, "closedAt": "2020-04-17T21:08:55Z", "author": {"login": "ScottDugas"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXorqXAH2gAyNDAzMzgwOTc0OjgzNWVhNGYwODIxNzViOWIxNjcyNDVmODZmZmQ1NDBkYzE5ZjllN2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYnjxVAFqTM5NTc2MTY2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "835ea4f082175b9b167245f86ffd540dc19f9e7f", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/835ea4f082175b9b167245f86ffd540dc19f9e7f", "committedDate": "2020-04-14T19:30:14Z", "message": "Fix FDBRecordStoreStateCacheTest parameterized names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3925af3ca001b7399fb35d713b5ffe6a5a10d353", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/3925af3ca001b7399fb35d713b5ffe6a5a10d353", "committedDate": "2020-04-14T19:30:14Z", "message": "Test: Remove unnecessary reopening of stores"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a376cc2d229dc6169d77048cba87d600f67fef30", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/a376cc2d229dc6169d77048cba87d600f67fef30", "committedDate": "2020-04-14T21:28:38Z", "message": "Test: Don't use openStore helpers just to open something else\n\nThere's a bunch of test code that calls openStore, and then converts\nit to a builder, to change something and then re-open. Inline those,\nin part to deal with the upcoming fix to #489, and in part because\nit makes the code cleaner.\nAlso, one of the tests did not have a try around the contexts."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90f39d79244a8e400b3269bfb19a6d0bda756acc", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/90f39d79244a8e400b3269bfb19a6d0bda756acc", "committedDate": "2020-04-14T19:48:27Z", "message": "Cleanup a bunch of intelliJ warnings in test files"}, "afterCommit": {"oid": "bf404a80df2212963bc0f96ee91006942a871a1a", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/bf404a80df2212963bc0f96ee91006942a871a1a", "committedDate": "2020-04-14T21:45:51Z", "message": "Cleanup a bunch of intelliJ warnings in test files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6552084e235bd57aa5725c3045d462695cbd602", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/d6552084e235bd57aa5725c3045d462695cbd602", "committedDate": "2020-04-15T14:57:35Z", "message": "Resolves #903 Creating a bunch more fixtures\n\nThis probably isn't perfect, but better, I hope.\nThere were no code changes to any of the methods as part of this\nchange, just moving them between classes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2dec708e1b858a3d4f6bb6e0ee11e73b301d6bf", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/c2dec708e1b858a3d4f6bb6e0ee11e73b301d6bf", "committedDate": "2020-04-15T14:59:05Z", "message": "Cleanup a bunch of intelliJ warnings in test files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf404a80df2212963bc0f96ee91006942a871a1a", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/bf404a80df2212963bc0f96ee91006942a871a1a", "committedDate": "2020-04-14T21:45:51Z", "message": "Cleanup a bunch of intelliJ warnings in test files"}, "afterCommit": {"oid": "c2dec708e1b858a3d4f6bb6e0ee11e73b301d6bf", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/c2dec708e1b858a3d4f6bb6e0ee11e73b301d6bf", "committedDate": "2020-04-15T14:59:05Z", "message": "Cleanup a bunch of intelliJ warnings in test files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTU5Mzkz", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904#pullrequestreview-393959393", "createdAt": "2020-04-15T16:54:01Z", "commit": {"oid": "a376cc2d229dc6169d77048cba87d600f67fef30"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1NDowMVrOGGC1Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDozMTowM1rOGHcMYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk5MTAyMg==", "bodyText": "This is maybe a different change, but I believe this is using uncheckedOpen in order to avoid conflicting on the store header create. I suspect we could make this a \"real\" open if we opened the store in a separate, initial transaction before all of this. Then the other operations would just read the store header rather than change it.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904#discussion_r408991022", "createdAt": "2020-04-15T16:54:01Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreTest.java", "diffHunk": "@@ -2459,55 +2461,56 @@ public void testSubspaceWriteConflict() throws Exception {\n     @Test\n     public void testSubspaceReadWriteConflict() throws Exception {\n         // Double check that it works to have two contexts on same space writing different records without conflict.\n-        FDBRecordContext context1 = openContext();\n-        uncheckedOpenSimpleRecordStore(context1);\n-        FDBRecordStore recordStore1 = recordStore;\n-        recordStore1.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(1).build());\n-        try (FDBRecordContext context2 = openContext()) {\n-            uncheckedOpenSimpleRecordStore(context2);\n-            recordStore.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(2).build());\n-            commit(context2);\n+        try (FDBRecordContext context1 = openContext()) {\n+            uncheckedOpenSimpleRecordStore(context1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a376cc2d229dc6169d77048cba87d600f67fef30"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk5MTk1OA==", "bodyText": "I guess this change here is logic preserving, but we could probably also achieve more or less the same check by asserting that the exception is of type FDBStoreTransactionConflictException (or whatever it's called) instead of FDBStoreRetriableException.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904#discussion_r408991958", "createdAt": "2020-04-15T16:55:37Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreTest.java", "diffHunk": "@@ -2459,55 +2461,56 @@ public void testSubspaceWriteConflict() throws Exception {\n     @Test\n     public void testSubspaceReadWriteConflict() throws Exception {\n         // Double check that it works to have two contexts on same space writing different records without conflict.\n-        FDBRecordContext context1 = openContext();\n-        uncheckedOpenSimpleRecordStore(context1);\n-        FDBRecordStore recordStore1 = recordStore;\n-        recordStore1.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(1).build());\n-        try (FDBRecordContext context2 = openContext()) {\n-            uncheckedOpenSimpleRecordStore(context2);\n-            recordStore.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(2).build());\n-            commit(context2);\n+        try (FDBRecordContext context1 = openContext()) {\n+            uncheckedOpenSimpleRecordStore(context1);\n+            FDBRecordStore recordStore1 = recordStore;\n+            recordStore1.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(1).build());\n+            try (FDBRecordContext context2 = openContext()) {\n+                uncheckedOpenSimpleRecordStore(context2);\n+                recordStore.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(2).build());\n+                commit(context2);\n+            }\n+            commit(context1);\n         }\n-        commit(context1);\n \n         // Again with requested conflict.\n-        FDBRecordContext context3 = openContext();\n-        uncheckedOpenSimpleRecordStore(context3);\n-        FDBRecordStore recordStore3 = recordStore;\n-        recordStore3.addConflictForSubspace(false);\n-        recordStore3.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(3).build());\n-        try (FDBRecordContext context4 = openContext()) {\n-            uncheckedOpenSimpleRecordStore(context4);\n-            recordStore.addConflictForSubspace(false);\n-            recordStore.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(4).build());\n-            commit(context4);\n-        }\n-        try {\n-            commit(context3);\n-            fail(\"should have gotten failure\");\n-        } catch (FDBExceptions.FDBStoreRetriableException ex) {\n-            assertTrue(ex.getCause() instanceof FDBException);\n-            assertThat(((FDBException)ex.getCause()).getCode(), equalTo(1020)); // not_committed\n+        try (FDBRecordContext context3 = openContext()) {\n+            uncheckedOpenSimpleRecordStore(context3);\n+            FDBRecordStore recordStore3 = recordStore;\n+            recordStore3.addConflictForSubspace(false);\n+            recordStore3.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(3).build());\n+            try (FDBRecordContext context4 = openContext()) {\n+                uncheckedOpenSimpleRecordStore(context4);\n+                recordStore.addConflictForSubspace(false);\n+                recordStore.saveRecord(TestRecords1Proto.MySimpleRecord.newBuilder().setRecNo(4).build());\n+                commit(context4);\n+            }\n+            final FDBExceptions.FDBStoreRetriableException exception = assertThrows(FDBExceptions.FDBStoreRetriableException.class,\n+                    () -> commit(context3));\n+            assertThat(((FDBException)exception.getCause()).getCode(), equalTo(1020)); // not_committed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a376cc2d229dc6169d77048cba87d600f67fef30"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTEzOA==", "bodyText": "This kind of feels like it should be, like, an \"index\" test rather than a uniqueness test, in that it's really testing that behavior rather than the store's. But probably a rename that could happen later.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904#discussion_r410455138", "createdAt": "2020-04-17T20:31:03Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBRecordStoreUniquenessTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * FDBRecordStoreUniquenessTest.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.record.RecordIndexUniquenessViolation;\n+import com.apple.foundationdb.record.TestRecords1Proto;\n+import com.apple.foundationdb.record.TestRecordsBytesProto;\n+import com.apple.foundationdb.tuple.Tuple;\n+import com.apple.test.Tags;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.concurrent.CompletableFuture;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+/**\n+ * Tests of uniqueness checks.\n+ */\n+@Tag(Tags.RequiresFDB)\n+public class FDBRecordStoreUniquenessTest extends FDBRecordStoreTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6552084e235bd57aa5725c3045d462695cbd602"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b0c27c4885b781a905dba8fb371ad480f2fc86", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/b3b0c27c4885b781a905dba8fb371ad480f2fc86", "committedDate": "2020-04-17T20:38:25Z", "message": "Rename FDBRecordStoreUniquenessTest -> FDBRecordStoreUniqueIndexTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "624c5446ed7ce2e30c634890a08ac7c8b423f126", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/624c5446ed7ce2e30c634890a08ac7c8b423f126", "committedDate": "2020-04-17T20:42:42Z", "message": "Use open instead of uncheckedOpen in conflict test\n\nFDBRecordStoreTest.testSubspaceReadWriteConflict was calling\nuncheckedOpen, but only to avoid conflicting on the store creation.\nCreating the store in a separate transaction before is better."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746c82edf2e87f419d3c9dda681e7d1658a37a67", "author": {"user": {"login": "ScottDugas", "name": "Scott Dugas"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/746c82edf2e87f419d3c9dda681e7d1658a37a67", "committedDate": "2020-04-17T20:44:11Z", "message": "Catch specific exception, rather than examining fdb error code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzYxNjY4", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/904#pullrequestreview-395761668", "createdAt": "2020-04-17T20:45:38Z", "commit": {"oid": "c2dec708e1b858a3d4f6bb6e0ee11e73b301d6bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2569, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}