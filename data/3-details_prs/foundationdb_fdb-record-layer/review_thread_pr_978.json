{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTUzMzc3", "number": 978, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNjoyNVrOEGjr0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo0MzoyMVrOELBCdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzExNTcwOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNjoyNVrOGlbehw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowODozN1rOGsYSSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ==", "bodyText": "Would it make sense to cache the result of this function back inside the Index itself?\nFor most indexes, it will be the singleton, so that's not much more space and the meta-data has a reasonably long lifetime.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r441900679", "createdAt": "2020-06-18T00:16:25Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4MTYyNQ==", "bodyText": "I can take a look at @MMcM", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r443681625", "createdAt": "2020-06-22T16:26:19Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4MTk5Nw==", "bodyText": "@MMcM I can cache it back but it seems out of place (universal logic is non-existent on the Index).  Let me know if you need me to do that.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445181997", "createdAt": "2020-06-24T21:28:21Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4NzYyNw==", "bodyText": "Alternatively, instead of putting it in the index, it could go in the meta-data, constructed by the builder so that the Index doesn't need to have any notion of what types exist in the meta-data", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445187627", "createdAt": "2020-06-24T21:40:49Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MDYzNA==", "bodyText": "Yes, caching in the RecordMetaData itself work just fine. There is precedent for caching in the individual meta-data objects with things like RecordType.recordTypeKey.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r445190634", "createdAt": "2020-06-24T21:47:30Z", "author": {"login": "MMcM"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDQ0MQ==", "bodyText": "@MMcM and @alecgrieser is this still true for an Index?\n   @Override\n    public int hashCode() {\n        // Within the context of a single RecordMetaData, this should be sufficient\n        return Objects.hash(name, type);\n    }", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449184441", "createdAt": "2020-07-02T18:00:26Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4ODQyNA==", "bodyText": "That would still be true, I suppose, though in a single RecordMetaData, name.hashCode() would also be sufficient, I would think", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449188424", "createdAt": "2020-07-02T18:08:37Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,7 +372,7 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n+        if (hasUniversalIndex(index.getName())) {\n             return getRecordTypes().values();\n         }\n         List<RecordType> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDY3OQ=="}, "originalCommit": {"oid": "ce0306d56913301c679cfb646b5bce047b14b8ad"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTg0NjIwOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODozNjowOVrOGsZFPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo0MDo0NFrOGsZNkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTQ2OA==", "bodyText": "Does this need to be a ConcurrentHashMap? Alternatively, this could be populated at meta-data build time (for every index), I suppose, and then it's immutable, so concurrency doesn't matter.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449201468", "createdAt": "2020-07-02T18:36:09Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -118,6 +119,7 @@ protected RecordMetaData(@Nonnull Descriptors.FileDescriptor recordsDescriptor,\n         this.usesSubspaceKeyCounter = usesSubspaceKeyCounter;\n         this.recordCountKey = recordCountKey;\n         this.usesLocalRecordsDescriptor = usesLocalRecordsDescriptor;\n+        this.recordTypesForIndex = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efad62049bfd8f8c0039d21200662012a0a7761"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMzYwMQ==", "bodyText": "@alecgrieser Fixing...", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449203601", "createdAt": "2020-07-02T18:40:44Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -118,6 +119,7 @@ protected RecordMetaData(@Nonnull Descriptors.FileDescriptor recordsDescriptor,\n         this.usesSubspaceKeyCounter = usesSubspaceKeyCounter;\n         this.recordCountKey = recordCountKey;\n         this.usesLocalRecordsDescriptor = usesLocalRecordsDescriptor;\n+        this.recordTypesForIndex = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTQ2OA=="}, "originalCommit": {"oid": "3efad62049bfd8f8c0039d21200662012a0a7761"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTg2ODA1OnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo0MzoyMVrOGsZSfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo0ODozMVrOGsZbrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ==", "bodyText": "Should probably be MapsUtils.computeIfAbsent to avoid the lockup bug", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449204861", "createdAt": "2020-07-02T18:43:21Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,25 +375,28 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n-            return getRecordTypes().values();\n-        }\n-        List<RecordType> result = new ArrayList<>();\n-        for (RecordType recordType : getRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n-            }\n-        }\n-        for (SyntheticRecordType<?> recordType : getSyntheticRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n+        return recordTypesForIndex.computeIfAbsent(index, idx -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1964f32f2e7381a94dbf32954a018e2703054f09"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNzE2Mw==", "bodyText": "ah yes...", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449207163", "createdAt": "2020-07-02T18:48:24Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,25 +375,28 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n-            return getRecordTypes().values();\n-        }\n-        List<RecordType> result = new ArrayList<>();\n-        for (RecordType recordType : getRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n-            }\n-        }\n-        for (SyntheticRecordType<?> recordType : getSyntheticRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n+        return recordTypesForIndex.computeIfAbsent(index, idx -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ=="}, "originalCommit": {"oid": "1964f32f2e7381a94dbf32954a018e2703054f09"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNzIxNA==", "bodyText": "fixing...", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/978#discussion_r449207214", "createdAt": "2020-07-02T18:48:31Z", "author": {"login": "jleach4"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordMetaData.java", "diffHunk": "@@ -372,25 +375,28 @@ public boolean usesSubspaceKeyCounter() {\n \n     @Nonnull\n     public Collection<RecordType> recordTypesForIndex(@Nonnull Index index) {\n-        if (getUniversalIndexes().contains(index)) {\n-            return getRecordTypes().values();\n-        }\n-        List<RecordType> result = new ArrayList<>();\n-        for (RecordType recordType : getRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n-            }\n-        }\n-        for (SyntheticRecordType<?> recordType : getSyntheticRecordTypes().values()) {\n-            if (recordType.getIndexes().contains(index)) {\n-                return Collections.singletonList(recordType);\n-            } else if (recordType.getMultiTypeIndexes().contains(index)) {\n-                result.add(recordType);\n+        return recordTypesForIndex.computeIfAbsent(index, idx -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwNDg2MQ=="}, "originalCommit": {"oid": "1964f32f2e7381a94dbf32954a018e2703054f09"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4944, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}