{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTI1MjAw", "number": 842, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoxNzo0MVrODlOSVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxNlrODlOmyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzU3OTczOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/query/FDBRestrictedIndexQueryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoxNzo0MVrOFx_tfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozMToxNVrOFyAEPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODM4MQ==", "bodyText": "I assume that this doesn't work with the new planner (so can't be a @DualPlannerTest)?", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387968381", "createdAt": "2020-03-04T22:17:41Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/query/FDBRestrictedIndexQueryTest.java", "diffHunk": "@@ -462,4 +462,53 @@ public void queryAllowedUniversalIndex() throws Exception {\n         assertFalse(plan2.hasRecordScan(), \"should not use record scan\");\n         assertEquals(-1692774119, plan2.planHash());\n     }\n+\n+    /**\n+     * Verify that the query planner uses the specified {@link com.apple.foundationdb.record.query.IndexQueryabilityFilter}.\n+     * If both allowed indexes and a queryability filter are set, verify that the planner uses the allowed indexes.\n+     */\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDIwNg==", "bodyText": "I somehow thought so, but a one-line change in the new planner fixes the issue. This is now a DualPlannerTest.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387974206", "createdAt": "2020-03-04T22:31:15Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/query/FDBRestrictedIndexQueryTest.java", "diffHunk": "@@ -462,4 +462,53 @@ public void queryAllowedUniversalIndex() throws Exception {\n         assertFalse(plan2.hasRecordScan(), \"should not use record scan\");\n         assertEquals(-1692774119, plan2.planHash());\n     }\n+\n+    /**\n+     * Verify that the query planner uses the specified {@link com.apple.foundationdb.record.query.IndexQueryabilityFilter}.\n+     * If both allowed indexes and a queryability filter are set, verify that the planner uses the allowed indexes.\n+     */\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODM4MQ=="}, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzU4MzI1OnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/RecordQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoxODo1N1rOFx_vkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNDowNVrOFyAJAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODkxMg==", "bodyText": "In theory, the docs for .setAllowedIndexes should also explain that they override the queryability filter. This also seems like it should link to the DEFAULT filter for completeness.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387968912", "createdAt": "2020-03-04T22:18:57Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/RecordQuery.java", "diffHunk": "@@ -228,6 +242,17 @@ public Builder setAllowedIndex(@Nullable String allowedIndex) {\n             return setAllowedIndexes(Collections.singleton(allowedIndex));\n         }\n \n+        /**\n+         * Set a function that defines whether each index should be used by the query planner.\n+         * Note that if allowed indexes are used then the queryability filter is ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NTQyNA==", "bodyText": "Done.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387975424", "createdAt": "2020-03-04T22:34:05Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/RecordQuery.java", "diffHunk": "@@ -228,6 +242,17 @@ public Builder setAllowedIndex(@Nullable String allowedIndex) {\n             return setAllowedIndexes(Collections.singleton(allowedIndex));\n         }\n \n+        /**\n+         * Set a function that defines whether each index should be used by the query planner.\n+         * Note that if allowed indexes are used then the queryability filter is ignored.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk2ODkxMg=="}, "originalCommit": {"oid": "54e47d631daeffd3b84a1dbf975e17b5169d9b15"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzYzMjExOnYy", "diffSide": "RIGHT", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/IndexQueryabilityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozNzoxNlrOFyAN4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo0Mzo1NlrOFyAYRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NjY3NA==", "bodyText": "Oh, sorry, just realized that this should probably say \"except those with the ALLOWED_FOR_QUERY_OPTION set to false\"", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387976674", "createdAt": "2020-03-04T22:37:16Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/IndexQueryabilityFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * IndexQueryabilityFilter.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.query;\n+\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.record.metadata.Index;\n+import com.apple.foundationdb.record.metadata.IndexOptions;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * A filter used to determine whether an index should be considered when planning queries.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+@FunctionalInterface\n+public interface IndexQueryabilityFilter {\n+    /**\n+     * The default index queryability filter which uses all indexes except those with the {@link IndexOptions#ALLOWED_FOR_QUERY_OPTION}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3OTMzNQ==", "bodyText": "Fixed!", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/842#discussion_r387979335", "createdAt": "2020-03-04T22:43:56Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/query/IndexQueryabilityFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * IndexQueryabilityFilter.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.query;\n+\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.record.metadata.Index;\n+import com.apple.foundationdb.record.metadata.IndexOptions;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * A filter used to determine whether an index should be considered when planning queries.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+@FunctionalInterface\n+public interface IndexQueryabilityFilter {\n+    /**\n+     * The default index queryability filter which uses all indexes except those with the {@link IndexOptions#ALLOWED_FOR_QUERY_OPTION}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NjY3NA=="}, "originalCommit": {"oid": "4ab9e5634d3742c1d4aa83290cf7f2256eed2d07"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 90, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}