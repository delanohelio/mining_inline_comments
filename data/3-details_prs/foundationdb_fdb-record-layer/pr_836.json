{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTQ3NjQ3", "number": 836, "title": "Resolve #835: Expose bytes/records scanned through ExecuteState", "bodyText": "This includes some efforts to still allow for the use of the\nNO_LIMITS constant in fashion that should have little overhead\non execution performance.", "createdAt": "2020-02-26T22:51:39Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836", "merged": true, "mergeCommit": {"oid": "79f8d088171f9d18604ad9aaf33eb4e3b3982a02"}, "closed": true, "closedAt": "2020-03-04T22:19:10Z", "author": {"login": "scgray"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJydbkABqjMwODkyMzA4OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKegsLgFqTM2OTE2NTgwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4baddd399c8ecd0b1d10e743bb2ddc0b556c78d6", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4baddd399c8ecd0b1d10e743bb2ddc0b556c78d6", "committedDate": "2020-02-26T22:50:49Z", "message": "Resolve #835: Expose bytes/records scanned through ExecuteState\n\nThis includes some efforts to still allow for the use of the\n`NO_LIMITS` constant in fashion that should have little overhead\non execution performance."}, "afterCommit": {"oid": "adfcd9f0727d68ffd060d4af56059cdca84e10ec", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/adfcd9f0727d68ffd060d4af56059cdca84e10ec", "committedDate": "2020-03-02T18:58:37Z", "message": "Resolve #835: Expose bytes/records scanned through ExecuteState\n\nThis includes some efforts to still allow for the use of the\n`NO_LIMITS` constant in fashion that should have little overhead\non execution performance."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/521abd354d421ea2a9dc9e39209494a6c75e19bf", "committedDate": "2020-03-02T20:28:49Z", "message": "Resolve #835: Expose bytes/records scanned through ExecuteState\n\nThis includes some efforts to still allow for the use of the\n`NO_LIMITS` constant in fashion that should have little overhead\non execution performance."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "adfcd9f0727d68ffd060d4af56059cdca84e10ec", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/adfcd9f0727d68ffd060d4af56059cdca84e10ec", "committedDate": "2020-03-02T18:58:37Z", "message": "Resolve #835: Expose bytes/records scanned through ExecuteState\n\nThis includes some efforts to still allow for the use of the\n`NO_LIMITS` constant in fashion that should have little overhead\non execution performance."}, "afterCommit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/521abd354d421ea2a9dc9e39209494a6c75e19bf", "committedDate": "2020-03-02T20:28:49Z", "message": "Resolve #835: Expose bytes/records scanned through ExecuteState\n\nThis includes some efforts to still allow for the use of the\n`NO_LIMITS` constant in fashion that should have little overhead\non execution performance."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzgzNjMz", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#pullrequestreview-368383633", "createdAt": "2020-03-03T22:48:15Z", "commit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjo0ODoxNlrOFxZddA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjo1MDozMlrOFxZhFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0MTY4NA==", "bodyText": "Is there a reason (other than backwards compatibility) to have Untracked extend ByteScanLimiter, rather than making ByteScanLimiter an interface with two implementations? I guess it saves us a virtual dispatch?", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#discussion_r387341684", "createdAt": "2020-03-03T22:48:16Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/ByteScanLimiter.java", "diffHunk": "@@ -76,8 +91,54 @@ public long getLimit() {\n         return originalLimit;\n     }\n \n+    /**\n+     * Returns the number of bytes that have been scanned thus far.\n+     *\n+     * @return the number of bytes that have been scanned\n+     */\n+    public long getBytesScanned() {\n+        return originalLimit - bytesRemaining.get();\n+    }\n+\n     @Override\n     public String toString() {\n         return String.format(\"ByteScanLimiter(%d limit, %d left)\", originalLimit, bytesRemaining.get());\n     }\n+\n+    /**\n+     * A non-tracking, non-enforcing limiter.\n+     */\n+    protected static class Untracked extends ByteScanLimiter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0MjA3Mg==", "bodyText": "We should deprecate this method and create a new one with Nonnull arguments.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#discussion_r387342072", "createdAt": "2020-03-03T22:49:13Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/ExecuteState.java", "diffHunk": "@@ -35,27 +35,35 @@\n  */\n @API(API.Status.MAINTAINED)\n public class ExecuteState {\n+\n     /**\n-     * An empty execute state with no record scan limit.\n-     * @deprecated in favor of NO_LIMITS when the byte scan limit was added\n+     * An execute state with no scan limits.\n      */\n-    @API(API.Status.DEPRECATED)\n-    @Deprecated\n-    public static final ExecuteState NO_SCANNED_RECORDS_LIMIT = new ExecuteState();\n+    public static final ExecuteState NO_LIMITS = new ExecuteState(RecordScanLimiter.Untracked.INSTANCE, ByteScanLimiter.Untracked.INSTANCE);\n \n     /**\n-     * An empty execute state with no record scan limit.\n+     * An empty execute state with no scan limits.\n+     * @deprecated in favor of NO_LIMITS when the byte scan limit was added\n      */\n-    public static final ExecuteState NO_LIMITS = new ExecuteState();\n+    @API(API.Status.DEPRECATED)\n+    @Deprecated\n+    public static final ExecuteState NO_SCANNED_RECORDS_LIMIT = NO_LIMITS;\n \n-    @Nullable\n+    @Nonnull\n     private final RecordScanLimiter recordScanLimiter;\n-    @Nullable\n+    @Nonnull\n     private final ByteScanLimiter byteScanLimiter;\n \n+    /**\n+     * Creates an execute state with a supplied set of resource limiters.\n+     * @param recordScanLimiter a record scan limiter or {@code null} to indicate an unlimited\n+     *     number of records may be scanned\n+     * @param byteScanLimiter a byte scan limiter or {@code null} to indicate an unlimited\n+     *     number of bytes may be scanned\n+     */\n     public ExecuteState(@Nullable RecordScanLimiter recordScanLimiter, @Nullable ByteScanLimiter byteScanLimiter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0MjI5MQ==", "bodyText": "Same comments apply here.", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#discussion_r387342291", "createdAt": "2020-03-03T22:49:48Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/RecordScanLimiter.java", "diffHunk": "@@ -67,9 +85,45 @@ public int getLimit() {\n         return originalLimit;\n     }\n \n+    /**\n+     * Returns the number of records that have been scanned thus far.\n+     *\n+     * @return the number of records that have been scanned\n+     */\n+    public int getRecordsScanned() {\n+        return originalLimit - allowedRecordScansRemaining.get();\n+    }\n+\n     @Override\n     public String toString() {\n         return String.format(\"RecordScanLimiter(%d limit, %d left)\", originalLimit, allowedRecordScansRemaining.get());\n     }\n+\n+    /**\n+     * A non-tracking, non-enforcing limiter.\n+     */\n+    protected static class Untracked extends RecordScanLimiter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0MjYxMw==", "bodyText": "Perhaps these tests can make assertions about the # of bytes/records scanned to test the Unlimited limiters?", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#discussion_r387342613", "createdAt": "2020-03-03T22:50:32Z", "author": {"login": "nschiefer"}, "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/ExecutePropertiesTest.java", "diffHunk": "@@ -82,9 +81,9 @@ public void testSetLimitsFrom() {\n     public void testGetNoLimits() {\n         assertEquals(ExecuteProperties.UNLIMITED_TIME, ExecuteProperties.SERIAL_EXECUTE.getTimeLimit());\n         assertEquals(Integer.MAX_VALUE, ExecuteProperties.SERIAL_EXECUTE.getScannedRecordsLimit());\n-        assertNull(ExecuteProperties.SERIAL_EXECUTE.getState().getRecordScanLimiter());\n+        assertTrue(ExecuteProperties.SERIAL_EXECUTE.getState().getRecordScanLimiter().isUnlimited());\n         assertEquals(Long.MAX_VALUE, ExecuteProperties.SERIAL_EXECUTE.getScannedBytesLimit());\n-        assertNull(ExecuteProperties.SERIAL_EXECUTE.getState().getByteScanLimiter());\n+        assertTrue(ExecuteProperties.SERIAL_EXECUTE.getState().getByteScanLimiter().isUnlimited());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521abd354d421ea2a9dc9e39209494a6c75e19bf"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cbc4165617efac867a733da47baad54875c1c75", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/3cbc4165617efac867a733da47baad54875c1c75", "committedDate": "2020-03-04T16:04:30Z", "message": "Respond to comments from Nicholas"}, "afterCommit": {"oid": "441d93643eeb80ff6eac99e0b733ab94764ef984", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/441d93643eeb80ff6eac99e0b733ab94764ef984", "committedDate": "2020-03-04T16:05:58Z", "message": "Respond to comments from Nicholas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c754f05a4493e01f311621509c35c1de54f035e", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/9c754f05a4493e01f311621509c35c1de54f035e", "committedDate": "2020-03-04T16:43:02Z", "message": "Respond to comments from Nicholas"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "441d93643eeb80ff6eac99e0b733ab94764ef984", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/441d93643eeb80ff6eac99e0b733ab94764ef984", "committedDate": "2020-03-04T16:05:58Z", "message": "Respond to comments from Nicholas"}, "afterCommit": {"oid": "9c754f05a4493e01f311621509c35c1de54f035e", "author": {"user": null}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/9c754f05a4493e01f311621509c35c1de54f035e", "committedDate": "2020-03-04T16:43:02Z", "message": "Respond to comments from Nicholas"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDc1MjAz", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#pullrequestreview-369075203", "createdAt": "2020-03-04T19:51:44Z", "commit": {"oid": "9c754f05a4493e01f311621509c35c1de54f035e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1NToxM1rOFx7g2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1NToxM1rOFx7g2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg5OTYxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * **Breaking change** Change 1 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n          \n          \n            \n            * **Breaking change** `ByteScanLimiter` and `RecordScanLimiter` are now interfaces. Instances with various concrete behavior are constructed through factory classes. [(PR #836)](https://github.com/FoundationDB/fdb-record-layer/pull/836)\n          \n      \n    \n    \n  \n\nI think we should also call out the API changes for defining limiters (especially since one of them was accidentally MAINTAINED).", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#discussion_r387899610", "createdAt": "2020-03-04T19:55:13Z", "author": {"login": "nschiefer"}, "path": "docs/ReleaseNotes.md", "diffHunk": "@@ -52,7 +52,7 @@ The `FDBDatabase::getReadVersion()` method has been replaced with the `FDBRecord\n * **Performance** Improvement 5 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n * **Feature** Feature 1 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n * **Feature** Feature 2 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n-* **Feature** Feature 3 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n+* **Feature** Expose bytes/records scanned through `ExecuteState` [(Issue #835)](https://github.com/FoundationDB/fdb-record-layer/issues/835)\n * **Feature** Feature 4 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n * **Feature** Feature 5 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)\n * **Breaking change** Change 1 [(Issue #NNN)](https://github.com/FoundationDB/fdb-record-layer/issues/NNN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c754f05a4493e01f311621509c35c1de54f035e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d49dcb23ca98ed86b00e6d34df1dc717036f32", "author": {"user": {"login": "scgray", "name": "Scott Gray"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/54d49dcb23ca98ed86b00e6d34df1dc717036f32", "committedDate": "2020-03-04T21:06:47Z", "message": "Update docs/ReleaseNotes.md\n\nCo-Authored-By: Nicholas Schiefer <nicholasschiefer@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTY1ODAw", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/836#pullrequestreview-369165800", "createdAt": "2020-03-04T22:18:11Z", "commit": {"oid": "54d49dcb23ca98ed86b00e6d34df1dc717036f32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2772, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}