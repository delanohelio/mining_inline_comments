{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzc3NTgx", "number": 1044, "title": "Resolves #1043: Support checking whether or not an index is being built", "bodyText": "", "createdAt": "2020-10-15T03:33:58Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044", "merged": true, "mergeCommit": {"oid": "5407d73da8352cf0766b0defc2ed7975e97c171f"}, "closed": true, "closedAt": "2020-10-28T03:02:21Z", "author": {"login": "nblintao"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSppR0ABqjM4Nzk0NTQyMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWw_KQAFqTUxODIwNzM5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c030fb571bfd7a25bad3191b8f8eb7b0ef4a40ba", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/c030fb571bfd7a25bad3191b8f8eb7b0ef4a40ba", "committedDate": "2020-10-15T03:33:37Z", "message": "Resolves #1043: Support checking whether or not an index is being built"}, "afterCommit": {"oid": "b3bc2ddf8597c705f6252ce4c8c495f26500d5b0", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/b3bc2ddf8597c705f6252ce4c8c495f26500d5b0", "committedDate": "2020-10-15T03:58:54Z", "message": "Resolves #1043: Support checking whether or not an index is being built"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d", "committedDate": "2020-10-15T04:19:11Z", "message": "Resolves #1043: Support checking whether or not an index is being built"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3bc2ddf8597c705f6252ce4c8c495f26500d5b0", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/b3bc2ddf8597c705f6252ce4c8c495f26500d5b0", "committedDate": "2020-10-15T03:58:54Z", "message": "Resolves #1043: Support checking whether or not an index is being built"}, "afterCommit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d", "committedDate": "2020-10-15T04:19:11Z", "message": "Resolves #1043: Support checking whether or not an index is being built"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NTQ0NTIz", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#pullrequestreview-509544523", "createdAt": "2020-10-15T16:09:58Z", "commit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjowOTo1OFrOHiPbiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxNDoxOVrOHiPnFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NjQ0MQ==", "bodyText": "Bit of a nit, but something about \"any\" doesn't quite seem right here... Maybe checkActive?", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r505666441", "createdAt": "2020-10-15T16:09:58Z", "author": {"login": "alecgrieser"}, "path": "fdb-extensions/src/main/java/com/apple/foundationdb/synchronizedsession/SynchronizedSession.java", "diffHunk": "@@ -216,15 +224,48 @@ public static void endAnySession(@Nonnull Transaction tr, @Nonnull Subspace lock\n         tr.clear(lockSubspace.range());\n     }\n \n-    private CompletableFuture<UUID> getLockSessionId(@Nonnull Transaction tr) {\n-        return tr.get(lockSessionIdSubspaceKey)\n+\n+    /**\n+     * Check if there is any active session on the given lock subspace, so that a new session would not able to be initialized.\n+     * @param tr transaction to use\n+     * @param lockSubspace the lock whose active session needs to be checked\n+     * @return {@code true} if there is any active session, otherwise {@code false}\n+     */\n+    public static CompletableFuture<Boolean> checkAnySession(@Nonnull Transaction tr, @Nonnull Subspace lockSubspace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2ODk0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n          \n          \n            \n                 * Check if the index is being built by any other {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n          \n      \n    \n    \n  \n\nI think it also might make sense to break the parenthetical into its own sentence--something like \"This requires that the synchronized session feature is enabled on all indexers.\" (Probably with an @see or @link to the setUseSyncrhonizedSession method on the OnlineIndexer.Builder.)", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r505668946", "createdAt": "2020-10-15T16:13:38Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/OnlineIndexer.java", "diffHunk": "@@ -1119,15 +1119,31 @@ public static void stopOngoingOnlineIndexBuilds(@Nonnull FDBRecordStore recordSt\n         SynchronizedSession.endAnySession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));\n     }\n \n-    @VisibleForTesting\n-    CompletableFuture<Void> checkNoOngoingOnlineIndexBuildsAsync() {\n-        return runner\n-                .runAsync(context -> openRecordStore(context).thenApply(store -> indexBuildLockSubspace(store, index)))\n-                .thenCompose(lockSubspace ->\n-                        // It will throw {@link com.apple.foundationdb.synchronizedsession.SynchronizedSessionLockedException}\n-                        // if there are ongoing online index builds.\n-                        runner.startSynchronizedSessionAsync(lockSubspace, leaseLengthMills))\n-                .thenCompose(SynchronizedSessionRunner::endSessionAsync);\n+    /**\n+     * Synchronous/blocking version of {@link #checkAnyOngoingOnlineIndexBuildsAsync()}.\n+     * @return <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public boolean checkAnyOngoingOnlineIndexBuilds() {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_CHECK_ONGOING_ONLINE_INDEX_BUILD, checkAnyOngoingOnlineIndexBuildsAsync());\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2OTE1OQ==", "bodyText": "Same comments about the docs as on the other method", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r505669159", "createdAt": "2020-10-15T16:13:56Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/OnlineIndexer.java", "diffHunk": "@@ -1119,15 +1119,31 @@ public static void stopOngoingOnlineIndexBuilds(@Nonnull FDBRecordStore recordSt\n         SynchronizedSession.endAnySession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));\n     }\n \n-    @VisibleForTesting\n-    CompletableFuture<Void> checkNoOngoingOnlineIndexBuildsAsync() {\n-        return runner\n-                .runAsync(context -> openRecordStore(context).thenApply(store -> indexBuildLockSubspace(store, index)))\n-                .thenCompose(lockSubspace ->\n-                        // It will throw {@link com.apple.foundationdb.synchronizedsession.SynchronizedSessionLockedException}\n-                        // if there are ongoing online index builds.\n-                        runner.startSynchronizedSessionAsync(lockSubspace, leaseLengthMills))\n-                .thenCompose(SynchronizedSessionRunner::endSessionAsync);\n+    /**\n+     * Synchronous/blocking version of {@link #checkAnyOngoingOnlineIndexBuildsAsync()}.\n+     * @return <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public boolean checkAnyOngoingOnlineIndexBuilds() {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_CHECK_ONGOING_ONLINE_INDEX_BUILD, checkAnyOngoingOnlineIndexBuildsAsync());\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n+     * @return a future that will complete to <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public CompletableFuture<Boolean> checkAnyOngoingOnlineIndexBuildsAsync() {\n+        return runner.runAsync(context -> openRecordStore(context).thenCompose(recordStore ->\n+                checkAnyOngoingOnlineIndexBuildsAsync(recordStore, index)));\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2OTM5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param index the index whose builds need to be stopped\n          \n          \n            \n                 * @param index the index to check for ongoing index builds", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r505669398", "createdAt": "2020-10-15T16:14:19Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/OnlineIndexer.java", "diffHunk": "@@ -1119,15 +1119,31 @@ public static void stopOngoingOnlineIndexBuilds(@Nonnull FDBRecordStore recordSt\n         SynchronizedSession.endAnySession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));\n     }\n \n-    @VisibleForTesting\n-    CompletableFuture<Void> checkNoOngoingOnlineIndexBuildsAsync() {\n-        return runner\n-                .runAsync(context -> openRecordStore(context).thenApply(store -> indexBuildLockSubspace(store, index)))\n-                .thenCompose(lockSubspace ->\n-                        // It will throw {@link com.apple.foundationdb.synchronizedsession.SynchronizedSessionLockedException}\n-                        // if there are ongoing online index builds.\n-                        runner.startSynchronizedSessionAsync(lockSubspace, leaseLengthMills))\n-                .thenCompose(SynchronizedSessionRunner::endSessionAsync);\n+    /**\n+     * Synchronous/blocking version of {@link #checkAnyOngoingOnlineIndexBuildsAsync()}.\n+     * @return <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public boolean checkAnyOngoingOnlineIndexBuilds() {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_CHECK_ONGOING_ONLINE_INDEX_BUILD, checkAnyOngoingOnlineIndexBuildsAsync());\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n+     * @return a future that will complete to <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public CompletableFuture<Boolean> checkAnyOngoingOnlineIndexBuildsAsync() {\n+        return runner.runAsync(context -> openRecordStore(context).thenCompose(recordStore ->\n+                checkAnyOngoingOnlineIndexBuildsAsync(recordStore, index)));\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n+     * @param recordStore record store whose index builds need to be checked\n+     * @param index the index whose builds need to be stopped", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db3b96f1f12cfcbfdf421aac4a6a79716cc3b7d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDMzMTQ5", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#pullrequestreview-518033149", "createdAt": "2020-10-27T18:46:31Z", "commit": {"oid": "60899100c9830e70399fa45b3406a57578c0ce47"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0NjozMVrOHpLmiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0Njo0MlrOHpLm7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0Mzc1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static CompletableFuture<Boolean> checkExistActiveSession(@Nonnull Transaction tr, @Nonnull Subspace lockSubspace) {\n          \n          \n            \n                public static CompletableFuture<Boolean> checkActiveSessionExists(@Nonnull Transaction tr, @Nonnull Subspace lockSubspace) {", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r512943752", "createdAt": "2020-10-27T18:46:31Z", "author": {"login": "alecgrieser"}, "path": "fdb-extensions/src/main/java/com/apple/foundationdb/synchronizedsession/SynchronizedSession.java", "diffHunk": "@@ -216,15 +224,48 @@ public static void endAnySession(@Nonnull Transaction tr, @Nonnull Subspace lock\n         tr.clear(lockSubspace.range());\n     }\n \n-    private CompletableFuture<UUID> getLockSessionId(@Nonnull Transaction tr) {\n-        return tr.get(lockSessionIdSubspaceKey)\n+\n+    /**\n+     * Check if there is any active session on the given lock subspace, so that a new session would not able to be initialized.\n+     * @param tr transaction to use\n+     * @param lockSubspace the lock whose active session needs to be checked\n+     * @return {@code true} if there is any active session, otherwise {@code false}\n+     */\n+    public static CompletableFuture<Boolean> checkExistActiveSession(@Nonnull Transaction tr, @Nonnull Subspace lockSubspace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60899100c9830e70399fa45b3406a57578c0ce47"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0Mzg1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return SynchronizedSession.checkExistActiveSession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));\n          \n          \n            \n                    return SynchronizedSession.checkActiveSessionExists(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#discussion_r512943854", "createdAt": "2020-10-27T18:46:42Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/OnlineIndexer.java", "diffHunk": "@@ -1119,15 +1119,32 @@ public static void stopOngoingOnlineIndexBuilds(@Nonnull FDBRecordStore recordSt\n         SynchronizedSession.endAnySession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));\n     }\n \n-    @VisibleForTesting\n-    CompletableFuture<Void> checkNoOngoingOnlineIndexBuildsAsync() {\n-        return runner\n-                .runAsync(context -> openRecordStore(context).thenApply(store -> indexBuildLockSubspace(store, index)))\n-                .thenCompose(lockSubspace ->\n-                        // It will throw {@link com.apple.foundationdb.synchronizedsession.SynchronizedSessionLockedException}\n-                        // if there are ongoing online index builds.\n-                        runner.startSynchronizedSessionAsync(lockSubspace, leaseLengthMills))\n-                .thenCompose(SynchronizedSessionRunner::endSessionAsync);\n+    /**\n+     * Synchronous/blocking version of {@link #checkAnyOngoingOnlineIndexBuildsAsync()}.\n+     * @return <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public boolean checkAnyOngoingOnlineIndexBuilds() {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_CHECK_ONGOING_ONLINE_INDEX_BUILD, checkAnyOngoingOnlineIndexBuildsAsync());\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of the {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s),\n+     * including <i>this</i> {@link OnlineIndexer}.\n+     * @return a future that will complete to <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public CompletableFuture<Boolean> checkAnyOngoingOnlineIndexBuildsAsync() {\n+        return runner.runAsync(context -> openRecordStore(context).thenCompose(recordStore ->\n+                checkAnyOngoingOnlineIndexBuildsAsync(recordStore, index)));\n+    }\n+\n+    /**\n+     * Check if the index is being built by any of {@link OnlineIndexer}s (only if they use {@link SynchronizedSession}s).\n+     * @param recordStore record store whose index builds need to be checked\n+     * @param index the index to check for ongoing index builds\n+     * @return a future that will complete to <code>true</code> if the index is being built and <code>false</code> otherwise\n+     */\n+    public static CompletableFuture<Boolean> checkAnyOngoingOnlineIndexBuildsAsync(@Nonnull FDBRecordStore recordStore, @Nonnull Index index) {\n+        return SynchronizedSession.checkExistActiveSession(recordStore.ensureContextActive(), indexBuildLockSubspace(recordStore, index));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60899100c9830e70399fa45b3406a57578c0ce47"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71edb374b7597951f96c600c94b3226afeab44cf", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/71edb374b7597951f96c600c94b3226afeab44cf", "committedDate": "2020-10-27T22:37:42Z", "message": "Fix API name and JavaDoc in SynchronizedSession"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60899100c9830e70399fa45b3406a57578c0ce47", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/60899100c9830e70399fa45b3406a57578c0ce47", "committedDate": "2020-10-27T05:48:11Z", "message": "Fix API name and JavaDoc in SynchronizedSession"}, "afterCommit": {"oid": "71edb374b7597951f96c600c94b3226afeab44cf", "author": {"user": {"login": "nblintao", "name": "Tao Lin"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/71edb374b7597951f96c600c94b3226afeab44cf", "committedDate": "2020-10-27T22:37:42Z", "message": "Fix API name and JavaDoc in SynchronizedSession"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjA3Mzk2", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1044#pullrequestreview-518207396", "createdAt": "2020-10-27T22:48:00Z", "commit": {"oid": "71edb374b7597951f96c600c94b3226afeab44cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2745, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}