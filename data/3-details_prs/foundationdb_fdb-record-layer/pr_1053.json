{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MzAzNzgw", "number": 1053, "title": "Fixes #1052: Need grouping / grouped key canonical form", "bodyText": "", "createdAt": "2020-10-24T01:37:17Z", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1053", "merged": true, "mergeCommit": {"oid": "cce6b19148713dc68fce17a0f9c904352fac16d3"}, "closed": true, "closedAt": "2020-10-26T16:25:34Z", "author": {"login": "MMcM"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVhAZqgH2gAyNTA5MzAzNzgwOjcyOTc4MmFkMzZmNDNjM2ZhZTRlOTVkZDU4ZmNmNDBmMDIwYWE3ZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWW6hSAFqTUxNjk1NDQ0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "729782ad36f43c3fae4e95dd58fcf40f020aa7eb", "author": {"user": {"login": "MMcM", "name": "Mike McMahon"}}, "url": "https://github.com/FoundationDB/fdb-record-layer/commit/729782ad36f43c3fae4e95dd58fcf40f020aa7eb", "committedDate": "2020-10-24T01:36:57Z", "message": "Fixes #1052: Need grouping / grouped key canonical form"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTQ0Nzg3", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1053#pullrequestreview-516944787", "createdAt": "2020-10-26T16:15:17Z", "commit": {"oid": "729782ad36f43c3fae4e95dd58fcf40f020aa7eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoxNToxN1rOHoXSGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjoxNToxN1rOHoXSGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA4NjU1Mw==", "bodyText": "It seems like, at least in principle, that this should also recurse down, say, nesting key expressions and remove Empty expressions children... On the other hand, that might be better included in some kind of \"key canonicalization\" function that recurses down all of the various key types.\nI could also see the argument that we should fix this to make \"incremental progress\" and then add full canonicalization later (not letting the perfect be the enemy of the good, etc.)", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1053#discussion_r512086553", "createdAt": "2020-10-26T16:15:17Z", "author": {"login": "alecgrieser"}, "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/IndexFunctionHelper.java", "diffHunk": "@@ -159,15 +160,33 @@ public static KeyExpression getGroupedKey(@Nonnull KeyExpression key) {\n             return key;\n         }\n         GroupingKeyExpression grouping = (GroupingKeyExpression) key;\n-        return getSubKey(grouping.getWholeKey(), grouping.getGroupingCount(), grouping.getColumnSize());\n+        return groupKey(getSubKey(grouping.getWholeKey(), grouping.getGroupingCount(), grouping.getColumnSize()));\n     }\n \n     public static KeyExpression getGroupingKey(@Nonnull KeyExpression key) {\n         if (!(key instanceof GroupingKeyExpression)) {\n             return EmptyKeyExpression.EMPTY;\n         }\n         GroupingKeyExpression grouping = (GroupingKeyExpression) key;\n-        return getSubKey(grouping.getWholeKey(), 0, grouping.getGroupingCount());\n+        return groupKey(getSubKey(grouping.getWholeKey(), 0, grouping.getGroupingCount()));\n+    }\n+\n+    protected static KeyExpression groupKey(@Nonnull KeyExpression key) {\n+        if (key instanceof ThenKeyExpression) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729782ad36f43c3fae4e95dd58fcf40f020aa7eb"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTU0NDQ0", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/1053#pullrequestreview-516954444", "createdAt": "2020-10-26T16:25:24Z", "commit": {"oid": "729782ad36f43c3fae4e95dd58fcf40f020aa7eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2476, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}