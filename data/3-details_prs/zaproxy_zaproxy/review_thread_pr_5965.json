{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjQ3NTg1", "number": 5965, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTowMjowN1rOD4dKEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyNjozMlrOD5vIBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI0NTYzOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTowMjowN1rOGPSvow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxOTozNFrOGRKnYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4ODkzMQ==", "bodyText": "Since these are basically all the same why not extract a private method and pass the column constant?\nPrinting the stack trace should be replaced with a logger.", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418688931", "createdAt": "2020-05-01T19:02:07Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -120,6 +129,52 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n \n         alertRiskCellItem = super.getHighestAlert();\n \n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();\n+        }\n+        hostname = hostname1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4OTc1Ng==", "bodyText": "Also is the intermediate storage necessary? (var vs var1)", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418689756", "createdAt": "2020-05-01T19:04:06Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -120,6 +129,52 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n \n         alertRiskCellItem = super.getHighestAlert();\n \n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();\n+        }\n+        hostname = hostname1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4ODkzMQ=="}, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMDQwMQ==", "bodyText": "That's because they are final instance variables. Although IMO the components should be shown encoded, showing them decoded leads to data loss and misleading values (crude example, the path /%2F will be shown as // which is a completely different path).", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418720401", "createdAt": "2020-05-01T20:19:59Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -120,6 +129,52 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n \n         alertRiskCellItem = super.getHighestAlert();\n \n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();\n+        }\n+        hostname = hostname1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4ODkzMQ=="}, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzNTQ4Ng==", "bodyText": "@thc202 I also think that they should be shown encoded, I didn't notice that was happening. @kingthorin the functions I will use now don't throw exception and the code will become more clean.", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418935486", "createdAt": "2020-05-02T09:20:44Z", "author": {"login": "DiogoMRSilva"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -120,6 +129,52 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n \n         alertRiskCellItem = super.getHighestAlert();\n \n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();\n+        }\n+        hostname = hostname1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4ODkzMQ=="}, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1Mjg5Ng==", "bodyText": "The host should also be shown encoded (for same reason), e.g.:\nnew String(historyReference.getURI().getRawHost())", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r420652896", "createdAt": "2020-05-06T09:19:34Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -120,6 +129,52 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n \n         alertRiskCellItem = super.getHighestAlert();\n \n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();\n+        }\n+        hostname = hostname1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4ODkzMQ=="}, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTQ0NzQzOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/extension/history/HistoryTableModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMjo1MlrOGPUuyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMjo1MlrOGPUuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMTQ4MQ==", "bodyText": "I'd expect these to be closer/next to the URL column by default (same in the enum).", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418721481", "createdAt": "2020-05-01T20:22:52Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/history/HistoryTableModel.java", "diffHunk": "@@ -44,7 +44,11 @@ public HistoryTableModel() {\n                     Column.SIZE_RESPONSE_BODY,\n                     Column.HIGHEST_ALERT,\n                     Column.NOTE,\n-                    Column.TAGS\n+                    Column.TAGS,\n+                    Column.HOSTNAME,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTQ0ODEzOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/AbstractHistoryReferencesTableEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMzowOVrOGPUvNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMzowOVrOGPUvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMTU4OQ==", "bodyText": "Can let fall-through.", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418721589", "createdAt": "2020-05-01T20:23:09Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/AbstractHistoryReferencesTableEntry.java", "diffHunk": "@@ -267,6 +303,14 @@ public static Object getPrototypeValue(Column column) {\n                 return String.class;\n             case CUSTOM:\n                 return null;\n+            case HOSTNAME:\n+                return String.class;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTQ0ODUwOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/HistoryReferencesTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMzoyMFrOGPUvcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyMzoyMFrOGPUvcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMTY0OA==", "bodyText": "This is not necessary for these columns.", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r418721648", "createdAt": "2020-05-01T20:23:20Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/HistoryReferencesTable.java", "diffHunk": "@@ -379,6 +379,11 @@ public void configureTableColumn(final TableModel model, final TableColumnExt co\n                     columnExt, hRefModel.getColumnIndex(Column.SIZE_RESPONSE_HEADER), model);\n             installSizeBytesRenderer(\n                     columnExt, hRefModel.getColumnIndex(Column.SIZE_RESPONSE_BODY), model);\n+            installSizeBytesRenderer(columnExt, hRefModel.getColumnIndex(Column.HOSTNAME), model);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12bd272c29d017d4f3e13bfbc99c5cd55d7fbe61"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODQyODE2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMDo1OTowNVrOGPq-_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMDo1OTowNVrOGPq-_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4NjA3Ng==", "bodyText": "Should use a logger", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r419086076", "createdAt": "2020-05-03T10:59:05Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -87,6 +91,20 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n         rtt = hasColumn(sortedColumns, Column.RTT) ? historyReference.getRtt() : null;\n \n         uri = hasColumn(sortedColumns, Column.URL) ? historyReference.getURI().toString() : null;\n+        try {\n+            hostname1 =\n+                    hasColumn(sortedColumns, Column.HOSTNAME)\n+                            ? historyReference.getURI().getHost()\n+                            : null;\n+        } catch (URIException e) {\n+            hostname1 = null;\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644eb8da4f9c38297aee37fec1c060a2c393ef77"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODQ3NDUxOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMTo1MTozM1rOGPrXAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMTo1MTozM1rOGPrXAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5MjIyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        e.printStackTrace();", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r419092226", "createdAt": "2020-05-03T11:51:33Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/DefaultHistoryReferencesTableEntry.java", "diffHunk": "@@ -98,6 +101,7 @@ public DefaultHistoryReferencesTableEntry(HistoryReference historyReference, Col\n                             : null;\n         } catch (URIException e) {\n             hostname1 = null;\n+            LOGGER.error(e);\n             e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3f150d2d8a0a999523d2f2d24f80d8092de80e0"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODY3NTI3OnYy", "diffSide": "LEFT", "path": "zap/src/main/java/org/zaproxy/zap/view/table/HistoryReferencesTableModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyNjozMlrOGRK2tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToyNjozMlrOGRK2tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1NjgyMQ==", "bodyText": "This could be reverted.", "url": "https://github.com/zaproxy/zaproxy/pull/5965#discussion_r420656821", "createdAt": "2020-05-06T09:26:32Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/table/HistoryReferencesTableModel.java", "diffHunk": "@@ -58,7 +60,6 @@\n         HIGHEST_ALERT,\n         NOTE,\n         TAGS,\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08c09d25076a9569047e3453bdc5165d2aeb44e0"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 616, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}