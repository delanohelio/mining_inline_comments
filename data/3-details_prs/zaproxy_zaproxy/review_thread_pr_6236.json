{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMjAwNzE4", "number": 6236, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo0NDowN1rOEscIgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowNDozOVrOExPsQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMzNzI4OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo0NDowN1rOHfsDew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo1OTowNFrOHgM-5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4OTY5MQ==", "bodyText": "There doesn't seem to be any need for this intermediate storage and it isn't a CONSTANT.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n          \n          \n            \n                    JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n          \n          \n            \n                    JButton importButton = new JButton(Constant.messages.getString(\"context.include.import.label\"));", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r502989691", "createdAt": "2020-10-12T00:44:07Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyOTE5MA==", "bodyText": "Right, changed.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503529190", "createdAt": "2020-10-12T20:59:04Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4OTY5MQ=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDM0MjIyOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo0ODoxN1rOHfsF8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMDo1OTo0MVrOHjPp5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDMyMA==", "bodyText": "The ActionListener creation could be extracted to a new private method (getImportActionListener or something like that, create it if null, just return it if not). Then, the addition of the listener could be done with a lambda importButton.addActionListener(e -> getImportActionListener());.\nOr something like that, hopefully that gives you enough to work with. Feel free to ask questions if I haven't been clear enough.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r502990320", "createdAt": "2020-10-12T00:48:17Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);\n+                        }\n+                    }\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzcwNw==", "bodyText": "While I am not a huge fan of lambdas I can certainly change the code to use it there. I do not fully get where there is a place for getImportActionListener when using a lambda for the ActionListener.\nI would extract the actionPerformed method to a new method and then use this as lambda, so no ActionListener object needs to be created. As far as I understand that is the essence of using lambdas.\nCould look like this:\npublic void importButtonClicked(ActionEvent event) {\n    File file = selectImportFile();\n    if (file != null) {\n        List<String> regexes = regexesPanel.getRegexes();\n\n        String line = null;\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            while ((line = br.readLine()) != null) {\n                String trimmedRegex = line.trim();\n                if (!regexes.contains(trimmedRegex)) {\n                    Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n                    regexes.add(trimmedRegex);\n                }\n            }\n        } catch (IOException | PatternSyntaxException e) {\n            View.getSingleton()\n                    .showWarningDialog(\n                            Constant.messages.getString(\n                                    \"context.include.import.error\",\n                                    e.getLocalizedMessage()));\n            return;\n        }\n        regexesPanel.setRegexes(regexes);\n    }\n}\n\n\nprivate void addImportButton() {\n    JButton importButton = new JButton(Constant.messages.getString(\"context.include.import.label\"));\n    importButton.addActionListener(e -> importButtonClicked(e));\n    regexesPanel.addButton(importButton);\n}", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503517707", "createdAt": "2020-10-12T20:30:35Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);\n+                        }\n+                    }\n+                });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDMyMA=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU1MTQ0MA==", "bodyText": "Ya that\u2019s what I was envisioning even if I wasn\u2019t articulating it well \ud83e\udd2a", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503551440", "createdAt": "2020-10-12T21:47:52Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);\n+                        }\n+                    }\n+                });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDMyMA=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxODY5NQ==", "bodyText": "change to lambda (and moved all changes to MultipleRegexesOptionsPanel as per other discussion)", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r506718695", "createdAt": "2020-10-16T20:59:41Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);\n+                        }\n+                    }\n+                });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDMyMA=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDM0NTMxOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo1MTowNFrOHfsHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTo1OToyN1rOHgLg2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDcyOQ==", "bodyText": "Hmmmm I'm not sure about assuming case insensitive. Users can always designate (?i) at the start of their pattern if they wish. Unless you've checked and this behavior is assumed elsewhere in context handling.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r502990729", "createdAt": "2020-10-12T00:51:04Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNTExMg==", "bodyText": "This is the same behavior as for the add button (MultipleRegexesOptionsPanel.validateFields) and I did the same validation for consistency", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503505112", "createdAt": "2020-10-12T19:59:27Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDcyOQ=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDM0NjM0OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo1MTo1OFrOHfsICQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMTowNTozMFrOHgNJmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDg1Nw==", "bodyText": "This has bitten us before. I'd suggest including two substitutions. One that is specifically the failed pattern string, and one that's the message or localizedMessage.\nEdit: To be more specific, localizedMessage doesn't always exist, or can sometimes be null (I forget precisely if we hit null or simply empty in the past).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r502990857", "createdAt": "2020-10-12T00:51:58Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzMTkzMQ==", "bodyText": "Thanks for the hint. Changed this to get the error detail (e.getLocalizedMessage) separately. Checking for null before passing it to string replacement to avoid failure. If the message is empty it is not a big deal, in this case just the main error message is displayed without any detail.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503531931", "createdAt": "2020-10-12T21:05:30Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MDg1Nw=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDM0ODQxOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDo1NDoxN1rOHfsJJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowNDo0NVrOHgLozQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MTE0Mw==", "bodyText": "Note: I haven't tested.\nWon't this replace what is already specified? If the user has already set something or imported another file first.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r502991143", "createdAt": "2020-10-12T00:54:17Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNzE0OQ==", "bodyText": "Existing regexes are loaded in :101 and new ones from file are added (excluding duplicates).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r503507149", "createdAt": "2020-10-12T20:04:45Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextIncludePanel.java", "diffHunk": "@@ -64,6 +75,56 @@ public static String getPanelName(Context context) {\n         return getPanelName(context.getId());\n     }\n \n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());\n+        if (rc == JFileChooser.APPROVE_OPTION) {\n+            file = chooser.getSelectedFile();\n+            if (file == null || !file.exists()) {\n+                return null;\n+            }\n+            return file;\n+        }\n+        return null;\n+    }\n+\n+    private void addImportButton() {\n+        String IMPORT_BUTTON_LABEL = Constant.messages.getString(\"context.include.import.label\");\n+        JButton importButton = new JButton(IMPORT_BUTTON_LABEL);\n+        importButton.addActionListener(\n+                new ActionListener() {\n+                    @Override\n+                    public void actionPerformed(ActionEvent evt) {\n+                        File file = selectImportFile();\n+                        if (file != null) {\n+                            List<String> regexes = regexesPanel.getRegexes();\n+\n+                            String line = null;\n+                            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                                while ((line = br.readLine()) != null) {\n+                                    String trimmedRegex = line.trim();\n+                                    if (!regexes.contains(trimmedRegex)) {\n+                                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                                        regexes.add(trimmedRegex);\n+                                    }\n+                                }\n+                            } catch (IOException | PatternSyntaxException e) {\n+                                View.getSingleton()\n+                                        .showWarningDialog(\n+                                                Constant.messages.getString(\n+                                                        \"context.include.import.error\",\n+                                                        e.getLocalizedMessage()));\n+                                return;\n+                            }\n+                            regexesPanel.setRegexes(regexes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk5MTE0Mw=="}, "originalCommit": {"oid": "a9e516543a73ad60793b0751a789ba1240240cf3"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU0OTg3OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNzoyOVrOHkFlmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOToyMzoyNlrOHkePpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjMyOA==", "bodyText": "Should be at most protected, the argument could be removed.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507602328", "createdAt": "2020-10-19T09:27:29Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwNjMxMQ==", "bodyText": "changed to private", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508006311", "createdAt": "2020-10-19T19:23:26Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjMyOA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1MDQwOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNzozOFrOHkFl4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOToyMzo1M1rOHkeQrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjQwMg==", "bodyText": "This is not a copy, this will lead to partial imports in case of failure (which causes other issues as the changes to the model are not notified to the view).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507602402", "createdAt": "2020-10-19T09:27:38Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwNjU3Mw==", "bodyText": "created local copy to allow duplication checking", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508006573", "createdAt": "2020-10-19T19:23:53Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjQwMg=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1MTA5OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNzo0N1rOHkFmRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOToyNDoxNFrOHkeRcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjUwMA==", "bodyText": "Can be declared later.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507602500", "createdAt": "2020-10-19T09:27:47Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwNjc3MQ==", "bodyText": "done", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508006771", "createdAt": "2020-10-19T19:24:14Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjUwMA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1MTM2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNzo1MVrOHkFmbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoyMjozMFrOHndYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA==", "bodyText": "Should use a specific charset (e.g. UTF-8).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507602540", "createdAt": "2020-10-19T09:27:51Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTg3MA==", "bodyText": "If no charset is given, then the system default is used which should be the most appropriate one.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507969870", "createdAt": "2020-10-19T18:22:19Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMwNDk1NA==", "bodyText": "On a second thought, while the system default might be the best guess for the file encoding it would still be undefined behavior. So I changed it to use UTF-8.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508304954", "createdAt": "2020-10-20T08:23:52Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg3MTAzNg==", "bodyText": "FileReader with charset is not availble in java 8, but java 8 build is required by the autobuild. I could go with InputStreamReader which is available in both, Java 8 and Java 11, but I checked the zap code for other places where files are read while I found a couple of places where FileReader is used without giving a charset, there was no InputStreamReader solution, so I decided to revert the changes and at least be consistent with th other code.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r510871036", "createdAt": "2020-10-23T13:08:09Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0MzEwNw==", "bodyText": "Can use NIO, e.g. Files.newBufferedReader(file.toPath(), StandardCharsets.UTF_8).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r510943107", "createdAt": "2020-10-23T14:57:02Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNzk0MQ==", "bodyText": "changed to NIO", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r511137941", "createdAt": "2020-10-23T20:22:30Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU0MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1MTY5OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyNzo1N1rOHkFmng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTozNTo1OFrOHkeqgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU5MA==", "bodyText": "This should be extracted to use when importing and adding.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507602590", "createdAt": "2020-10-19T09:27:57Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxMzE4NA==", "bodyText": "Extracted duplicate checking and valid pattern checking. Using extracted function for adding and importing of regexes.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508013184", "createdAt": "2020-10-19T19:35:58Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMjU5MA=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1NDUyOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyODozNVrOHkFoUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTozNjowNVrOHkeqxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzAyNw==", "bodyText": "Can be declared later.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507603027", "createdAt": "2020-10-19T09:28:35Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxMzI1NA==", "bodyText": "done", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508013254", "createdAt": "2020-10-19T19:36:05Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzAyNw=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU1Njc3OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyOTowNFrOHkFpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTozNjozNVrOHkerrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzM0Ng==", "bodyText": "Should use owner as parent.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507603346", "createdAt": "2020-10-19T09:29:04Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxMzQ4Nw==", "bodyText": "changed parnet to owner", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508013487", "createdAt": "2020-10-19T19:36:35Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());\n+        File file = null;\n+\n+        int rc = chooser.showOpenDialog(View.getSingleton().getMainFrame());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzM0Ng=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU2NDgyOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTozMDo1OVrOHkFuZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTozNzozM1rOHketwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNDU4Mg==", "bodyText": "Not sure the contexts dir is the most appropriate, that's used for the whole contexts. Don't specify any?", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r507604582", "createdAt": "2020-10-19T09:30:59Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxNDAxOA==", "bodyText": "Removed path.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r508014018", "createdAt": "2020-10-19T19:37:33Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +83,50 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked(e));\n+        addButton(importButton);\n+    }\n+\n+    public void importButtonClicked(ActionEvent event) {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = getRegexes();\n+\n+            String line = null;\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedRegex = line.trim();\n+                    if (!regexes.contains(trimmedRegex)) {\n+                        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                        regexes.add(trimmedRegex);\n+                    }\n+                }\n+            } catch (IOException | PatternSyntaxException e) {\n+                View.getSingleton()\n+                        .showWarningDialog(\n+                                Constant.messages.getString(\n+                                        \"context.include.import.error\", e.getLocalizedMessage()));\n+                return;\n+            }\n+            setRegexes(regexes);\n+        }\n+    }\n+\n+    private File selectImportFile() {\n+        JFileChooser chooser = new JFileChooser(Constant.getContextsDir());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNDU4Mg=="}, "originalCommit": {"oid": "39ac49103748e03e66d5f0ac4a90e80c0a516a76"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDcyNTM4OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowNDowNlrOHnRykA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoxODozN1rOHndSMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0Nzk4NA==", "bodyText": "regex \u2192 trimmedRegex, or rename the parameter to regex (which has more occurrences).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r510947984", "createdAt": "2020-10-23T15:04:06Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNjMwNg==", "bodyText": "fixed documentation", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r511136306", "createdAt": "2020-10-23T20:18:37Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0Nzk4NA=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDcyNzIyOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowNDozM1rOHnRzow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxMDo1M1rOHpO_Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ==", "bodyText": "The call does not need to be qualified with the class name.\nIt would be better to add the braces to the if statement, for consistency.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r510948259", "createdAt": "2020-10-23T15:04:33Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNTQxOQ==", "bodyText": "Isn't it best practice to call static methods in a static way, i.e. by calling it via the class name?\nAdded braces to if.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r511135419", "createdAt": "2020-10-23T20:16:29Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg2NzkyMw==", "bodyText": "I'm not aware of a best practice that requires qualifying the static method calls in the same class (they are called statically regardless).", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r511867923", "createdAt": "2020-10-26T10:45:05Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwNjA2Nw==", "bodyText": "You are right, in the same class it is not required, Changed it.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r512206067", "createdAt": "2020-10-26T19:13:10Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4MTQ3OA==", "bodyText": "The call in validateFields can be changed as well, same reason.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r512581478", "createdAt": "2020-10-27T10:40:18Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk5OTE4Mg==", "bodyText": "done", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r512999182", "createdAt": "2020-10-27T20:10:53Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -76,6 +82,67 @@ public MultipleRegexesOptionsPanel(Dialog owner, RegexesTableModel model) {\n \n         this.owner = owner;\n         getTable().setSortOrder(0, SortOrder.ASCENDING);\n+        JButton importButton =\n+                new JButton(Constant.messages.getString(\"context.include.import.label\"));\n+        importButton.addActionListener(e -> importButtonClicked());\n+        addButton(importButton);\n+    }\n+\n+    /**\n+     * Checks if {@code regex} is contained in {@code regexes} and if it is a valid regex pattern.\n+     * If {@code regexes} is null, then the duplication check is omitted\n+     *\n+     * @param regex A regex as string\n+     * @param regexes List of regex strings\n+     * @return True if {@code regex} is not a duplicate and the pattern is valid.\n+     * @throws PatternSyntaxException If {@code regex} is not a valid regex pattern\n+     */\n+    private static boolean validateRegexAndCheckForDuplicates(\n+            String trimmedRegex, List<String> regexes) throws PatternSyntaxException {\n+        if (trimmedRegex == null\n+                || trimmedRegex.isEmpty()\n+                || regexes != null && regexes.contains(trimmedRegex)) {\n+            return false;\n+        }\n+        Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+        return true;\n+    }\n+\n+    private void importButtonClicked() {\n+        File file = selectImportFile();\n+        if (file != null) {\n+            List<String> regexes = new ArrayList<String>(getRegexes());\n+\n+            try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n+                String line = null;\n+                while ((line = br.readLine()) != null) {\n+                    String trimmedLine = line.trim();\n+                    if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODI1OQ=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDcyNzY4OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTowNDozOVrOHnRz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMDoxODowOFrOHndRdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODMzNA==", "bodyText": "The else is not necessary.", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r510948334", "createdAt": "2020-10-23T15:04:39Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -224,17 +291,19 @@ protected void init() {\n         @Override\n         protected boolean validateFields() {\n             String trimmedRegex = getRegexTextField().getText().trim();\n-            if (regexes != null && regexes.contains(trimmedRegex)) {\n-                JOptionPane.showMessageDialog(\n-                        this,\n-                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n-                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n-                        JOptionPane.INFORMATION_MESSAGE);\n-                getRegexTextField().requestFocusInWindow();\n-                return false;\n-            }\n             try {\n-                Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(\n+                        trimmedRegex, regexes)) {\n+                    return true;\n+                } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNjExNw==", "bodyText": "removed else", "url": "https://github.com/zaproxy/zaproxy/pull/6236#discussion_r511136117", "createdAt": "2020-10-23T20:18:08Z", "author": {"login": "ckoidl"}, "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -224,17 +291,19 @@ protected void init() {\n         @Override\n         protected boolean validateFields() {\n             String trimmedRegex = getRegexTextField().getText().trim();\n-            if (regexes != null && regexes.contains(trimmedRegex)) {\n-                JOptionPane.showMessageDialog(\n-                        this,\n-                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n-                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n-                        JOptionPane.INFORMATION_MESSAGE);\n-                getRegexTextField().requestFocusInWindow();\n-                return false;\n-            }\n             try {\n-                Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+                if (MultipleRegexesOptionsPanel.validateRegexAndCheckForDuplicates(\n+                        trimmedRegex, regexes)) {\n+                    return true;\n+                } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk0ODMzNA=="}, "originalCommit": {"oid": "f1ccd09d846c0beae90f8f212461e093f81c9dcf"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 600, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}