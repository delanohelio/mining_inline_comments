{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMDgxMjg0", "number": 6105, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzoxNFrOEUEeVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMTowNFrOEVwzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDgwMjc3OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzoxNFrOG6JvvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzoxNFrOG6JvvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDI2OQ==", "bodyText": "Add an actual description?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630269", "createdAt": "2020-07-31T14:03:14Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,6 +1658,18 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDgwMzc2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzozMlrOG6JwUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozMTozNlrOG6KtVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDQxOQ==", "bodyText": "Should these annotations have a TODO Add version ?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630419", "createdAt": "2020-07-31T14:03:32Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1639,7 +1642,9 @@ public ParameterParser getFormParamParser(String url) {\n      * @param uri\n      * @return\n      * @throws URIException\n+     * @deprecated use #getUrlParameters(String)\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0NjAzOQ==", "bodyText": "Added in the comment", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463646039", "createdAt": "2020-07-31T14:31:36Z", "author": {"login": "psiinon"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1639,7 +1642,9 @@ public ParameterParser getFormParamParser(String url) {\n      * @param uri\n      * @return\n      * @throws URIException\n+     * @deprecated use #getUrlParameters(String)\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDQxOQ=="}, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDgwNDUwOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzo0NlrOG6JwyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowMzo0NlrOG6JwyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDUzNw==", "bodyText": "Add description?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630537", "createdAt": "2020-07-31T14:03:46Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1661,11 +1678,26 @@ public ParameterParser getFormParamParser(String url) {\n      * @param formData\n      * @return\n      * @throws URIException\n+     * @deprecated use #getFormParameters(String)\n      */\n+    @Deprecated\n     public Map<String, String> getFormParams(URI uri, String formData) throws URIException {\n         return this.getFormParamParser(uri.toString()).parse(formData);\n     }\n \n+    /**\n+     * Returns the FORM parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @param formData\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDgwNzA2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowNDozM1rOG6JyVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowNDozM1rOG6JyVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDkzNQ==", "bodyText": "Version? (Below too)", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630935", "createdAt": "2020-07-31T14:04:33Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java", "diffHunk": "@@ -30,6 +30,8 @@\n \n     void init(String config);\n \n+    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDgwNzk1OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowNDo0N1rOG6Jy3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDowNDo0N1rOG6Jy3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMTA2OQ==", "bodyText": "Version? (Below too)", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463631069", "createdAt": "2020-07-31T14:04:47Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java", "diffHunk": "@@ -102,6 +102,8 @@ public String getConfig() {\n         return json.toString();\n     }\n \n+    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDMyOTg5OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjozMzozMlrOG7eT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjozMzozMlrOG7eT_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAxNTgwNg==", "bodyText": "Add `@since TODO add version\"?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r465015806", "createdAt": "2020-08-04T12:33:32Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,19 +1658,46 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return the URL parameters for the given URL\n+     * @throws URIException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "924db57639082366d2c99e1a1a545c260281f301"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDMzMDg0OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjozMzo0NlrOG7eUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjozMzo0NlrOG7eUlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAxNTk1Ng==", "bodyText": "Add `@since TODO add version\"?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r465015956", "createdAt": "2020-08-04T12:33:46Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,19 +1658,46 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return the URL parameters for the given URL\n+     * @throws URIException\n+     */\n+    public List<NameValuePair> getUrlParameters(URI uri) throws URIException {\n+        return getUrlParamParser(uri.toString()).parseParameters(uri.getEscapedQuery());\n+    }\n+\n     /**\n      * Returns the FORM parameters for the given URL based on the parser associated with the first\n      * context found that includes the URL, or the default parser if it is not in a context\n      *\n      * @param uri\n      * @param formData\n-     * @return\n+     * @return the FORM parameters for the given URL\n      * @throws URIException\n+     * @deprecated TODO add version use #getFormParameters(String)\n      */\n+    @Deprecated\n     public Map<String, String> getFormParams(URI uri, String formData) throws URIException {\n         return this.getFormParamParser(uri.toString()).parse(formData);\n     }\n \n+    /**\n+     * Returns the FORM parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @param formData\n+     * @return the FORM parameters for the given URL\n+     * @throws URIException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "924db57639082366d2c99e1a1a545c260281f301"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjU1MTA4OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo0OVrOG8s7gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo0OVrOG8s7gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzg3NQ==", "bodyText": "(TODO add version)", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303875", "createdAt": "2020-08-06T10:00:49Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1583,7 +1584,9 @@ public ParameterParser getFormParamParser(String url) {\n      * @param msg\n      * @param type\n      * @return\n+     * @deprecated use #getParameters(String) This method will lose duplicated parameter names", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjU1MTM0OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo1NFrOG8s7sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo1NFrOG8s7sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzkyMg==", "bodyText": "Remove?", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303922", "createdAt": "2020-08-06T10:00:54Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -645,24 +637,60 @@ private boolean queryEquals(HttpMessage msg) {\n      */\n     public TreeSet<String> getParamNameSet(HtmlParameter.Type type) {\n         TreeSet<String> set = new TreeSet<>();\n-        Map<String, String> paramMap = Model.getSingleton().getSession().getParams(this, type);\n+        List<NameValuePair> paramList = Model.getSingleton().getSession().getParameters(this, type);\n \n-        for (Entry<String, String> param : paramMap.entrySet()) {\n-            set.add(param.getKey());\n+        for (NameValuePair nvp : paramList) {\n+            set.add(nvp.getName());\n         }\n         return set;\n     }\n \n+    /**\n+     * Returns the names of the parameters of the given {@code type} in a List. The List can return\n+     * duplicated names.\n+     *\n+     * @param type the type of the parameters that will be extracted from the message\n+     * @return a {@code List} with the names of the parameters of the given {@code type}, never\n+     *     {@code null}\n+     * @since TODO add version\n+     */\n+    public List<String> getParameterNames(HtmlParameter.Type type) {\n+        List<String> list = new ArrayList<String>();\n+        Model.getSingleton()\n+                .getSession()\n+                .getParameters(this, type)\n+                .forEach((nvp) -> list.add(nvp.getName()));\n+        ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjU1MTUzOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo1OFrOG8s71Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMDo1OFrOG8s71Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzk1Nw==", "bodyText": "Revert? (Same comment for following change.)", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303957", "createdAt": "2020-08-06T10:00:58Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java", "diffHunk": "@@ -139,12 +139,12 @@ public int compareTo(DefaultNameValuePair other) {\n             return 1;\n         }\n \n-        int res = compareStrings(name, other.name);\n+        int res = compareStrings(name, other.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjU1MjAwOnYy", "diffSide": "LEFT", "path": "zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMTowNFrOG8s8Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDowMTowNFrOG8s8Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwNDAyNg==", "bodyText": "We should keep these and suppress the deprecations, to continue checking that they are working properly.", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466304026", "createdAt": "2020-08-06T10:01:04Z", "author": {"login": "thc202"}, "path": "zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java", "diffHunk": "@@ -51,11 +50,16 @@ public void defaultParser() {\n         assertEquals(spp.getKeyValuePairSeparators(), \"&\");\n         assertEquals(spp.getKeyValueSeparators(), \"=\");\n         assertEquals(spp.getStructuralParameters().size(), 0);\n-        Map<String, String> res = spp.parse(\"a=b&b=c&d=f\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 629, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}