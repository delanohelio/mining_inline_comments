{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTAxNzM2", "number": 5828, "title": "Add a button on the resend screen to inject a CSRF token", "bodyText": "Resolves #111", "createdAt": "2020-01-25T09:10:43Z", "url": "https://github.com/zaproxy/zaproxy/pull/5828", "merged": true, "mergeCommit": {"oid": "cde478b7b6e40464fc40b6d98f9b873cf30665d6"}, "closed": true, "closedAt": "2020-02-21T15:24:37Z", "author": {"login": "madanalogy"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9wEj2AFqTM0ODMxODE1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGhXnCgFqTM2MjcwNTYwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzE4MTU0", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-348318154", "createdAt": "2020-01-25T09:23:54Z", "commit": {"oid": "c9b9845977aa4f3c6e8f0f3eafaa55b97e0af02c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwOToyMzo1NFrOFhvYbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwOToyMzo1NFrOFhvYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzYzMA==", "bodyText": "This seems to be done", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r370923630", "createdAt": "2020-01-25T09:23:54Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -274,6 +278,22 @@ private JToggleButton getButtonUseCookies() {\n         return useCookies;\n     }\n \n+    private JToggleButton getButtonUseCsrf() {\n+        // TODO: Add resources for icon and tooltip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9b9845977aa4f3c6e8f0f3eafaa55b97e0af02c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4e1ed8c436740536d25fd73e2412bef78a75e46", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/c4e1ed8c436740536d25fd73e2412bef78a75e46", "committedDate": "2020-01-25T09:30:13Z", "message": "Setup UI\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4b8b16a7e067bfdc79962a6a72e089c93e3b72d", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/e4b8b16a7e067bfdc79962a6a72e089c93e3b72d", "committedDate": "2020-01-25T14:37:10Z", "message": "Invoke ExtensionAntiCSRF in HttpPanelSender\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9b9845977aa4f3c6e8f0f3eafaa55b97e0af02c", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/c9b9845977aa4f3c6e8f0f3eafaa55b97e0af02c", "committedDate": "2020-01-25T09:08:10Z", "message": "Setup UI"}, "afterCommit": {"oid": "e4b8b16a7e067bfdc79962a6a72e089c93e3b72d", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/e4b8b16a7e067bfdc79962a6a72e089c93e3b72d", "committedDate": "2020-01-25T14:37:10Z", "message": "Invoke ExtensionAntiCSRF in HttpPanelSender\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mzg5MDMx", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-348389031", "createdAt": "2020-01-26T16:06:52Z", "commit": {"oid": "e4b8b16a7e067bfdc79962a6a72e089c93e3b72d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxNjowNjo1MlrOFh0sFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxNjowNjo1MlrOFh0sFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxMDU4Mg==", "bodyText": "It's not necessary to change it.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r371010582", "createdAt": "2020-01-26T16:06:52Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -3,7 +3,7 @@\n  *\n  * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n  *\n- * Copyright 2012 The ZAP Development Team\n+ * Copyright 2020 The ZAP Development Team", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4b8b16a7e067bfdc79962a6a72e089c93e3b72d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57c02840d30e3412f43b4930a3a111dd9185289a", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/57c02840d30e3412f43b4930a3a111dd9185289a", "committedDate": "2020-01-27T09:51:08Z", "message": "Implement CSRF injection into HTTP message body\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTcxNDQ3", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-348571447", "createdAt": "2020-01-27T10:44:56Z", "commit": {"oid": "57c02840d30e3412f43b4930a3a111dd9185289a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NDo1NlrOFh-YsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMDo0NTozM1rOFh-Z1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE2OTQ1Ng==", "bodyText": "You ended up calling it replace*", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r371169456", "createdAt": "2020-01-27T10:44:56Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -54,6 +54,7 @@\n // ZAP: 2019/06/01 Normalise line endings.\n // ZAP: 2019/06/05 Normalise format/style.\n // ZAP: 2019/12/09 Address deprecation of getHeaders(String) Vector method.\n+// ZAP: 2020/01/27 Added injectCsrfToken method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c02840d30e3412f43b4930a3a111dd9185289a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE2OTc0OQ==", "bodyText": "replace*", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r371169749", "createdAt": "2020-01-27T10:45:33Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -1090,4 +1094,27 @@ public void setResponseFromTargetHost(final boolean responseFromTargetHost) {\n     public String getType() {\n         return MESSAGE_TYPE;\n     }\n+\n+    public static void replaceCsrfToken(\n+            HttpMessage msg,\n+            AntiCsrfToken antiCsrfToken,\n+            String tokenValue,\n+            Logger log,\n+            Encoder encoder,\n+            ExtensionAntiCSRF extAntiCSRF) {\n+        log.debug(\n+                \"regenerateAntiCsrfToken replacing \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c02840d30e3412f43b4930a3a111dd9185289a"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e762efd1e39fd2979af5af3ef479fef5370700b", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/7e762efd1e39fd2979af5af3ef479fef5370700b", "committedDate": "2020-01-27T11:55:54Z", "message": "Fix typo in comment\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODc5NjU4", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-351879658", "createdAt": "2020-02-01T11:13:27Z", "commit": {"oid": "7e762efd1e39fd2979af5af3ef479fef5370700b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/13eaefb7b457e30eface52855b8ee3ceb246ae5e", "committedDate": "2020-02-01T12:39:53Z", "message": "Move debug logging to parent methods\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzc2MzA2", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-353376306", "createdAt": "2020-02-04T23:29:48Z", "commit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzoyOTo0OFrOFlnJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMzozMDo0MlrOFlnKUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4Mjk0Mg==", "bodyText": "It's not necessary to include the class, the logger is already adding it.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r374982942", "createdAt": "2020-02-04T23:29:48Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/AbstractPlugin.java", "diffHunk": "@@ -345,22 +346,11 @@ private void regenerateAntiCsrfToken(HttpMessage msg, AntiCsrfToken antiCsrfToke\n         if (tokenValue != null) {\n             // Replace token value - only supported in the body right now\n             log.debug(\n-                    \"regenerateAntiCsrfToken replacing \"\n+                    \"regenerateAntiCsrfToken in AbstractPlugin replacing \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MzAzOQ==", "bodyText": "Needs to resend the message before attempting to get the new token value.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r374983039", "createdAt": "2020-02-04T23:30:04Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -146,6 +174,33 @@ public void run() {\n         }\n     }\n \n+    private void regenerateAntiCsrfToken(HttpMessage msg, AntiCsrfToken antiCsrfToken) {\n+        if (antiCsrfToken == null) {\n+            return;\n+        }\n+\n+        String tokenValue = null;\n+        try {\n+            HttpMessage tokenMsg = antiCsrfToken.getMsg().cloneAll();\n+            tokenValue = extAntiCSRF.getTokenValue(tokenMsg, antiCsrfToken.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MzA3Mw==", "bodyText": "I'd suggest using a toggle button with an icon, don't know which one though :)", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r374983073", "createdAt": "2020-02-04T23:30:11Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -274,6 +329,14 @@ private JToggleButton getButtonUseCookies() {\n         return useCookies;\n     }\n \n+    private JCheckBox getButtonUseCsrf() {\n+        if (useCsrf == null) {\n+            useCsrf = new JCheckBox();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MzI0OQ==", "bodyText": "This would be better in ExtensionAntiCSRF, this class does not need to know about the anti-CSRF tokens.\nIt can be extracted the whole method (regenerateAntiCsrfToken) and also some of the previous logic (starting at List<AntiCsrfToken> tokens = extAntiCSRF.getTokens(message);) it's the same for both/all.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r374983249", "createdAt": "2020-02-04T23:30:42Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -1090,4 +1094,22 @@ public void setResponseFromTargetHost(final boolean responseFromTargetHost) {\n     public String getType() {\n         return MESSAGE_TYPE;\n     }\n+\n+    public static void replaceCsrfToken(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd", "committedDate": "2020-02-06T15:29:02Z", "message": "Refactor injectCsrfToken method to ExtensionAntiCSRF\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODcyNTU4", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-354872558", "createdAt": "2020-02-07T00:51:54Z", "commit": {"oid": "b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo1MTo1NFrOFmvMhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo1ODowMlrOFmvTRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MzQ2MQ==", "bodyText": "Could add only when the extension is enabled.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r376163461", "createdAt": "2020-02-07T00:51:54Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -78,6 +81,7 @@ public HttpPanelSender(HttpPanelRequest requestPanel, HttpPanelResponse response\n         requestPanel.addOptions(getButtonUseCookies(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);\n         requestPanel.addOptions(\n                 getButtonFollowRedirects(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);\n+        requestPanel.addOptions(getButtonUseCsrf(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MzUwMw==", "bodyText": "Should be disabled by default (other options are).", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r376163503", "createdAt": "2020-02-07T00:52:00Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -274,6 +296,19 @@ private JToggleButton getButtonUseCookies() {\n         return useCookies;\n     }\n \n+    private JToggleButton getButtonUseCsrf() {\n+        if (useCsrf == null) {\n+            useCsrf =\n+                    new JToggleButton(\n+                            new ImageIcon(\n+                                    HttpPanelSender.class.getResource(\n+                                            \"/resource/icon/fugue/document-target.png\")));\n+            useCsrf.setToolTipText(Constant.messages.getString(\"manReq.checkBox.useCSRF\"));\n+            useCsrf.setSelected(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2NDY0NA==", "bodyText": "I'd suggest using the \"old\" nameregenerateAntiCsrfToken, it's not injecting (just replacing and clear with \"anti\").\nThe two methods can be merged (and feel free to clean up).", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r376164644", "createdAt": "2020-02-07T00:55:54Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/anticsrf/ExtensionAntiCSRF.java", "diffHunk": "@@ -524,4 +528,67 @@ public String generateForm(HttpMessage msg) throws UnsupportedEncodingException\n         HistoryReference createHistoryReference(int id)\n                 throws DatabaseException, HttpMalformedHeaderException;\n     }\n+\n+    public void injectCsrfToken(HttpMessage message, HttpRequestConfig config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e651c9fab6a40e496ef83f6ca6d997d5ded0dd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2NTE5MA==", "bodyText": "It's better to leave the actual send to the caller, the HttpSender might have state (e.g. user, session) which would be lost if the message is sent by the extension. The method could accept a function which sends the HttpMessage, e.g.:\npublic interface HttpMessageSender {\n    void sendAndReceive(HttpMessage message) throws IOException;\n}", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r376165190", "createdAt": "2020-02-07T00:58:02Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -1090,4 +1094,22 @@ public void setResponseFromTargetHost(final boolean responseFromTargetHost) {\n     public String getType() {\n         return MESSAGE_TYPE;\n     }\n+\n+    public static void replaceCsrfToken(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4MzI0OQ=="}, "originalCommit": {"oid": "13eaefb7b457e30eface52855b8ee3ceb246ae5e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d02e33ba2d34b503a27f1770dc6936e19f75f7ea", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/d02e33ba2d34b503a27f1770dc6936e19f75f7ea", "committedDate": "2020-02-07T03:54:48Z", "message": "Added ExtensionAntiCSRF.isEnabled() check in HttpPanelSender\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/1e028ff1d27181a919d6afb6c236fabde40c9dc7", "committedDate": "2020-02-07T05:49:33Z", "message": "Refactor regenerateAntiCsrfToken method\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzQ5MTc4", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-359349178", "createdAt": "2020-02-15T14:53:58Z", "commit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNDo1Mzo1OFrOFqPV-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxNDo1NTozMlrOFqPWNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTg5Ng==", "bodyText": "It can be sent with the correct parameters instead, e.g.:\nextAntiCSRF.regenerateAntiCsrfToken(message, tokenMsg -> sendAndReceive(tokenMsg, true, false));", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835896", "createdAt": "2020-02-15T14:53:58Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/AbstractPlugin.java", "diffHunk": "@@ -277,15 +277,11 @@ protected void sendAndReceive(\n                                 .getExtension(ExtensionAntiCSRF.class);\n             }\n             if (extAntiCSRF != null) {\n-                List<AntiCsrfToken> tokens = extAntiCSRF.getTokens(message);\n-                AntiCsrfToken antiCsrfToken = null;\n-                if (tokens.size() > 0) {\n-                    antiCsrfToken = tokens.get(0);\n-                }\n-\n-                if (antiCsrfToken != null) {\n-                    regenerateAntiCsrfToken(message, antiCsrfToken);\n+                if (!isRegenCsrfCalled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTkwMQ==", "bodyText": "extAntiCSRF != null, it's null when not enabled.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835901", "createdAt": "2020-02-15T14:54:12Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -61,23 +62,31 @@\n \n     private final HttpPanelResponse responsePanel;\n     private ExtensionHistory extension;\n+    private ExtensionAntiCSRF extAntiCSRF = null;\n \n     private HttpSender delegate;\n \n     private JToggleButton followRedirect = null;\n     private JToggleButton useTrackingSessionState = null;\n     private JToggleButton useCookies = null;\n+    private JToggleButton useCsrf = null;\n \n     private List<PersistentConnectionListener> persistentConnectionListener = new ArrayList<>();\n \n     public HttpPanelSender(HttpPanelRequest requestPanel, HttpPanelResponse responsePanel) {\n         this.responsePanel = responsePanel;\n \n+        extAntiCSRF =\n+                Control.getSingleton().getExtensionLoader().getExtension(ExtensionAntiCSRF.class);\n+\n         requestPanel.addOptions(\n                 getButtonUseTrackingSessionState(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);\n         requestPanel.addOptions(getButtonUseCookies(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);\n         requestPanel.addOptions(\n                 getButtonFollowRedirects(), HttpPanel.OptionsLocation.AFTER_COMPONENTS);\n+        if (extAntiCSRF.isEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTk0Mg==", "bodyText": "Worth swapping the operands and inline the isSelected check to avoid creating the button when the extension is disabled.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835942", "createdAt": "2020-02-15T14:55:20Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -91,7 +100,13 @@ public void handleSendMessage(Message aMessage) throws IllegalArgumentException,\n         httpMessage.setRequestingUser(null);\n         try {\n             final ModeRedirectionValidator redirectionValidator = new ModeRedirectionValidator();\n+            boolean useAntiCSRF = getButtonUseCsrf().isSelected();\n             boolean followRedirects = getButtonFollowRedirects().isSelected();\n+\n+            if (useAntiCSRF && extAntiCSRF != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTk0NQ==", "bodyText": "Can be removed, it's not selected by default.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835945", "createdAt": "2020-02-15T14:55:24Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/extension/manualrequest/http/impl/HttpPanelSender.java", "diffHunk": "@@ -274,6 +289,19 @@ private JToggleButton getButtonUseCookies() {\n         return useCookies;\n     }\n \n+    private JToggleButton getButtonUseCsrf() {\n+        if (useCsrf == null) {\n+            useCsrf =\n+                    new JToggleButton(\n+                            new ImageIcon(\n+                                    HttpPanelSender.class.getResource(\n+                                            \"/resource/icon/fugue/document-target.png\")));\n+            useCsrf.setToolTipText(Constant.messages.getString(\"manReq.checkBox.useCSRF\"));\n+            useCsrf.setSelected(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTk0Nw==", "bodyText": "I'd keep this in ExtensionAntiCSRF for now.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835947", "createdAt": "2020-02-15T14:55:27Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessageSender.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.parosproxy.paros.network;\n+\n+import java.io.IOException;\n+\n+public interface HttpMessageSender {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTk1NA==", "bodyText": "... to obtain the new anti-csrf token.?", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835954", "createdAt": "2020-02-15T14:55:30Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/anticsrf/ExtensionAntiCSRF.java", "diffHunk": "@@ -524,4 +525,55 @@ public String generateForm(HttpMessage msg) throws UnsupportedEncodingException\n         HistoryReference createHistoryReference(int id)\n                 throws DatabaseException, HttpMalformedHeaderException;\n     }\n+\n+    /**\n+     * Regenerates the Anti-CSRF Token of a HttpMessage if one exists.\n+     *\n+     * @param message The {@link HttpMessage} to be checked.\n+     * @param httpSender The {@code sendAndReceive} implementation of the caller.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgzNTk1OA==", "bodyText": "2.10.0 or TODO add version.", "url": "https://github.com/zaproxy/zaproxy/pull/5828#discussion_r379835958", "createdAt": "2020-02-15T14:55:32Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/anticsrf/ExtensionAntiCSRF.java", "diffHunk": "@@ -524,4 +525,55 @@ public String generateForm(HttpMessage msg) throws UnsupportedEncodingException\n         HistoryReference createHistoryReference(int id)\n                 throws DatabaseException, HttpMalformedHeaderException;\n     }\n+\n+    /**\n+     * Regenerates the Anti-CSRF Token of a HttpMessage if one exists.\n+     *\n+     * @param message The {@link HttpMessage} to be checked.\n+     * @param httpSender The {@code sendAndReceive} implementation of the caller.\n+     * @since 2.9.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e028ff1d27181a919d6afb6c236fabde40c9dc7"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7789710ee3818e5ddf23065f3e4e59fbd63e10d4", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/7789710ee3818e5ddf23065f3e4e59fbd63e10d4", "committedDate": "2020-02-16T02:54:41Z", "message": "Documentation Update\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d009f6fc1c69fb3b67478f098ab50a6e4f95f657", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/d009f6fc1c69fb3b67478f098ab50a6e4f95f657", "committedDate": "2020-02-16T02:57:41Z", "message": "Remove comment in AbstractPlugin\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32d9e1953b90c7b3b9c55867ad6f66590e511076", "author": {"user": {"login": "madanalogy", "name": "Ahmed Bahajjaj"}}, "url": "https://github.com/zaproxy/zaproxy/commit/32d9e1953b90c7b3b9c55867ad6f66590e511076", "committedDate": "2020-02-19T01:42:04Z", "message": "Change button icon implementation\n\nSigned-off-by: madanalogy <Ahmed_Bahajjaj@u.nus.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMzU2Nzk5", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-361356799", "createdAt": "2020-02-19T19:03:45Z", "commit": {"oid": "32d9e1953b90c7b3b9c55867ad6f66590e511076"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzA1NjA0", "url": "https://github.com/zaproxy/zaproxy/pull/5828#pullrequestreview-362705604", "createdAt": "2020-02-21T15:22:17Z", "commit": {"oid": "32d9e1953b90c7b3b9c55867ad6f66590e511076"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 226, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}