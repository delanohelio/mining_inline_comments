{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTkxODkz", "number": 6289, "title": "Add convenience methods for identifying CSS related messages", "bodyText": "HttpRequestHeader > Add isCss() method, refactor isImage() method, add private isSpecificyType(Pattern) method.\nHttpResponseHeader > Add isCss() method.\n\nRelated to #6288\nSigned-off-by: kingthorin kingthorin@users.noreply.github.com", "createdAt": "2020-11-10T16:00:14Z", "url": "https://github.com/zaproxy/zaproxy/pull/6289", "merged": true, "mergeCommit": {"oid": "29ae7e8ee6702ad56820bf204e0414d2c3790cb2"}, "closed": true, "closedAt": "2020-11-11T14:07:22Z", "author": {"login": "kingthorin"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbSm6VgBqjM5ODE1MDI1NDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbehyjgFqTUyODIwMTUzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6752129e03c8c61ed29ef39946a4d488af4e1356", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/6752129e03c8c61ed29ef39946a4d488af4e1356", "committedDate": "2020-11-10T15:59:14Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "committedDate": "2020-11-11T00:13:48Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTk0OTMx", "url": "https://github.com/zaproxy/zaproxy/pull/6289#pullrequestreview-527994931", "createdAt": "2020-11-11T09:19:01Z", "commit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwOToxOTowMVrOHxEzYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwOToxOTowMVrOHxEzYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTIyMDk2MQ==", "bodyText": "..WhenContentTypeDoesnNotIndicateCss ?", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521220961", "createdAt": "2020-11-11T09:19:01Z", "author": {"login": "psiinon"}, "path": "zap/src/test/java/org/parosproxy/paros/network/HttpResponseHeaderUnitTest.java", "diffHunk": "@@ -126,4 +130,43 @@ public void shouldSetEmptyReasonPhraseIfNull() throws Exception {\n         assertThat(header.getReasonPhrase(), is(equalTo(\"\")));\n         assertThat(header.getPrimeHeader(), is(equalTo(\"HTTP/1.1 200\")));\n     }\n+\n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"text/html\", // Text but not css\n+                \"image/png\", // Not text or css\n+                \"teXt/hTmL\", // Mixed case\n+                \"text/html; charset=UTF-8\", // Expected charset\n+                \"text/html;charset=UTF-8\", // Charset without space\n+                \"charset=UTF-8; text/html\" // Charset first\n+            })\n+    public void isCssShouldReturnFalseWhenContentTypeIndicatesCss(String contentType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDUyMTE3", "url": "https://github.com/zaproxy/zaproxy/pull/6289#pullrequestreview-528052117", "createdAt": "2020-11-11T10:34:52Z", "commit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDozNDo1MlrOHxHfsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDozNDo1MlrOHxHfsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2NTA3NQ==", "bodyText": "Can be static (same comment in the other test class).", "url": "https://github.com/zaproxy/zaproxy/pull/6289#discussion_r521265075", "createdAt": "2020-11-11T10:34:52Z", "author": {"login": "thc202"}, "path": "zap/src/test/java/org/parosproxy/paros/network/HttpRequestHeaderUnitTest.java", "diffHunk": "@@ -183,6 +188,52 @@ public void shouldReplaceAnyCookieHeaderWhenSettingCookieParams() {\n         assertThat(header.getHeaderValues(HttpHeader.COOKIE), hasSize(1));\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"http://example.org/css/file.ext\", // In directory path\n+                \"http://ericsson.com/\", // In domain name\n+                \"https://example.css\", // In domain extension (TLD)\n+                \"https://example.css/dir/file.ext\", // In domain extension (TLD)\n+                \"https://example.org/dir/file?foo=bar&thing=css\", // In parameter value\n+                \"http://example.org/css/file.ext?foo=bar&type=.css\", // In parameter value including\n+                // period\n+                \"http://example.org/css/file.ext?foo=bar&thing=styles.css\", // In parameter value,\n+                // plausible filename\n+                \"https://example.org/dir/file?foo=bar&css=file.ext\" // In parameter name\n+            })\n+    public void isCssShouldReturnFalseWhenUrlDoesNotIndicateCss(String url) {\n+        // Given\n+        HttpRequestHeader reqHeader = createRequestHeader(url);\n+        // When / Then\n+        assertFalse(reqHeader.isCss());\n+    }\n+\n+    @ParameterizedTest\n+    @ValueSource(\n+            strings = {\n+                \"http://example.org/styles.css\", // In path\n+                \"http://example.org/assets/css/styles.css\", // In deeper path\n+                \"http://example.org/css/styles.css?foo=bar\", // In path, ignoring params\n+                \"http://example.org/css/styles.css?foo=bar&thing=.css\", // In path, ignoring params\n+            })\n+    public void isCssShouldReturnTrueWhenUrlIndicatesCss(String url) {\n+        // Given\n+        HttpRequestHeader reqHeader = createRequestHeader(url);\n+        // When / Then\n+        assertTrue(reqHeader.isCss());\n+    }\n+\n+    private HttpRequestHeader createRequestHeader(String url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/705fb3d0533afd23dd4cb9e55dc6bfca1654531c", "committedDate": "2020-11-11T00:13:48Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "committedDate": "2020-11-11T12:28:44Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/0eb7835c0a25bfa20c6b75383ced6e6141506885", "committedDate": "2020-11-11T13:30:27Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/e2f77d86f84ce30451a7b1304bc0cf896ac6ff6e", "committedDate": "2020-11-11T12:28:44Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}, "afterCommit": {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885", "author": {"user": {"login": "kingthorin", "name": "Rick M"}}, "url": "https://github.com/zaproxy/zaproxy/commit/0eb7835c0a25bfa20c6b75383ced6e6141506885", "committedDate": "2020-11-11T13:30:27Z", "message": "Add convenience methods for identifying CSS related messages\n\n- HttpRequestHeader > Add isCss() method, refactor isImage() method, add\nprivate isSpecificyType(Pattern) method.\n- HttpResponseHeader > Add isCss() method.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTc3NDc5", "url": "https://github.com/zaproxy/zaproxy/pull/6289#pullrequestreview-528177479", "createdAt": "2020-11-11T13:37:50Z", "commit": {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjAxNTM5", "url": "https://github.com/zaproxy/zaproxy/pull/6289#pullrequestreview-528201539", "createdAt": "2020-11-11T14:07:15Z", "commit": {"oid": "0eb7835c0a25bfa20c6b75383ced6e6141506885"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 147, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}