{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzMwMDU3", "number": 6057, "title": "Fix bug that makes zap test same request twice", "bodyText": "resolve #6043", "createdAt": "2020-06-30T22:29:28Z", "url": "https://github.com/zaproxy/zaproxy/pull/6057", "merged": true, "mergeCommit": {"oid": "9581997a60a70a077e9b978ce01d050d0109d3c6"}, "closed": true, "closedAt": "2020-11-13T15:37:11Z", "author": {"login": "DiogoMRSilva"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwdf5YAFqTQ0MDQzMTg4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcJAuRgFqTUzMDE2NDcwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDMxODg1", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-440431885", "createdAt": "2020-06-30T22:34:24Z", "commit": {"oid": "5df2419cb049eff567bacc8363954cf254ec714f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozNDoyNFrOGrQxMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozNDoyNFrOGrQxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNjY5MA==", "bodyText": "Instead of importing and using you can simply reference it statically.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            && node.getHistoryReference().getHistoryType() == TYPE_TEMPORARY;\n          \n          \n            \n                            && node.getHistoryReference().getHistoryType() == HistoryReference.TYPE_TEMPORARY;", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r448016690", "createdAt": "2020-06-30T22:34:24Z", "author": {"login": "kingthorin"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -363,6 +367,45 @@ public void run() {\n         }\n     }\n \n+    private boolean bestNodeForUrl(StructuralNode node) {\n+\n+        if (!hasSamePropertiesAsRequestCreatedToFillSiteMap(node)) {\n+            return true;\n+        }\n+\n+        StructuralNode parentNode;\n+        try {\n+            parentNode = node.getParent();\n+        } catch (DatabaseException e) {\n+            return true;\n+        }\n+\n+        if (parentNode == null) {\n+            return true;\n+        }\n+\n+        String nodeURI = node.getURI().getEscapedURI();\n+        String nodeMethod = node.getMethod();\n+        Iterator<StructuralNode> siblingsIt = parentNode.getChildIterator();\n+        while (siblingsIt.hasNext()) {\n+            StructuralNode sibling = siblingsIt.next();\n+            String childURI = sibling.getURI().getEscapedURI();\n+            if (!sibling.isSameAs(node)\n+                    && sibling.getMethod().equals(nodeMethod)\n+                    && childURI.equals(nodeURI)\n+                    && sibling.isLeaf()\n+                    && !hasSamePropertiesAsRequestCreatedToFillSiteMap(sibling)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean hasSamePropertiesAsRequestCreatedToFillSiteMap(StructuralNode node) {\n+        return node.getMethod().equals(HttpRequestHeader.GET)\n+                && node.getHistoryReference().getHistoryType() == TYPE_TEMPORARY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5df2419cb049eff567bacc8363954cf254ec714f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODcwNTg2", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-444870586", "createdAt": "2020-07-08T15:16:15Z", "commit": {"oid": "6cc2172c8cbe4abc4a083c035dc06958b3c8ab23"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToxNjoxNVrOGus-Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToxNjo0NVrOGus_mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYyNDUzMQ==", "bodyText": "This check will not work properly for all cases, not all nodes are included by default (e.g. out of scope, filters, not recurse) so we can't discard the temporary node beforehand. Taking the example in the issue, no nodes are scanned if you select the node \"3\" and disable recurse.\nIt might be safer to de-duplicate once we have all of them.", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r451624531", "createdAt": "2020-07-08T15:16:15Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -317,7 +319,7 @@ public void run() {\n                         startNode,\n                         true,\n                         node -> {\n-                            if (canScanNode(node)) {\n+                            if (canScanNode(node) && bestNodeForUrl(node)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc2172c8cbe4abc4a083c035dc06958b3c8ab23"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYyNDgxMA==", "bodyText": "isTemporary", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r451624810", "createdAt": "2020-07-08T15:16:40Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -363,6 +365,45 @@ public void run() {\n         }\n     }\n \n+    private boolean bestNodeForUrl(StructuralNode node) {\n+\n+        if (!hasSamePropertiesAsRequestCreatedToFillSiteMap(node)) {\n+            return true;\n+        }\n+\n+        StructuralNode parentNode;\n+        try {\n+            parentNode = node.getParent();\n+        } catch (DatabaseException e) {\n+            return true;\n+        }\n+\n+        if (parentNode == null) {\n+            return true;\n+        }\n+\n+        String nodeURI = node.getURI().getEscapedURI();\n+        String nodeMethod = node.getMethod();\n+        Iterator<StructuralNode> siblingsIt = parentNode.getChildIterator();\n+        while (siblingsIt.hasNext()) {\n+            StructuralNode sibling = siblingsIt.next();\n+            String childURI = sibling.getURI().getEscapedURI();\n+            if (!sibling.isSameAs(node)\n+                    && sibling.getMethod().equals(nodeMethod)\n+                    && childURI.equals(nodeURI)\n+                    && sibling.isLeaf()\n+                    && !hasSamePropertiesAsRequestCreatedToFillSiteMap(sibling)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean hasSamePropertiesAsRequestCreatedToFillSiteMap(StructuralNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc2172c8cbe4abc4a083c035dc06958b3c8ab23"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYyNDg1OA==", "bodyText": "The type check would be enough, temporary tree nodes are all GET.", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r451624858", "createdAt": "2020-07-08T15:16:45Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -363,6 +365,45 @@ public void run() {\n         }\n     }\n \n+    private boolean bestNodeForUrl(StructuralNode node) {\n+\n+        if (!hasSamePropertiesAsRequestCreatedToFillSiteMap(node)) {\n+            return true;\n+        }\n+\n+        StructuralNode parentNode;\n+        try {\n+            parentNode = node.getParent();\n+        } catch (DatabaseException e) {\n+            return true;\n+        }\n+\n+        if (parentNode == null) {\n+            return true;\n+        }\n+\n+        String nodeURI = node.getURI().getEscapedURI();\n+        String nodeMethod = node.getMethod();\n+        Iterator<StructuralNode> siblingsIt = parentNode.getChildIterator();\n+        while (siblingsIt.hasNext()) {\n+            StructuralNode sibling = siblingsIt.next();\n+            String childURI = sibling.getURI().getEscapedURI();\n+            if (!sibling.isSameAs(node)\n+                    && sibling.getMethod().equals(nodeMethod)\n+                    && childURI.equals(nodeURI)\n+                    && sibling.isLeaf()\n+                    && !hasSamePropertiesAsRequestCreatedToFillSiteMap(sibling)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean hasSamePropertiesAsRequestCreatedToFillSiteMap(StructuralNode node) {\n+        return node.getMethod().equals(HttpRequestHeader.GET)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc2172c8cbe4abc4a083c035dc06958b3c8ab23"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTA2NTM3", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-447506537", "createdAt": "2020-07-13T18:41:47Z", "commit": {"oid": "0a07784394e6a23ee32c8de300b5cc304df9a095"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo0MTo0N1rOGw1Grg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo0MTo0N1rOGw1Grg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg1NDg5NA==", "bodyText": "The checks can be reorder instead, e.g.:\nif (index == null) {\n    if (isTemporary(node)) {\n        indexOfTemporary.put(nodeHash(node), messagesIdsToAppScan.size());\n    }\n    messagesIdsToAppScan.add(nodeHistoryId);\n} else if (!isTemporary(node)) {\n    messagesIdsToAppScan.set(index, nodeHistoryId);\n}", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r453854894", "createdAt": "2020-07-13T18:41:47Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -313,12 +314,23 @@ public void run() {\n             }\n \n             for (StructuralNode startNode : startNodes) {\n+                Map<String, Integer> indexOfTemporary = new HashMap<>();\n                 traverse(\n                         startNode,\n                         true,\n                         node -> {\n                             if (canScanNode(node)) {\n-                                messagesIdsToAppScan.add(node.getHistoryReference().getHistoryId());\n+                                Integer index = indexOfTemporary.get(nodeHash(node));\n+                                int nodeHistoryId = node.getHistoryReference().getHistoryId();\n+                                if (isTemporary(node) && index == null) {\n+                                    indexOfTemporary.put(\n+                                            nodeHash(node), messagesIdsToAppScan.size());\n+                                    messagesIdsToAppScan.add(nodeHistoryId);\n+                                } else if (!isTemporary(node) && index == null) {\n+                                    messagesIdsToAppScan.add(nodeHistoryId);\n+                                } else if (!isTemporary(node) && index != null) {\n+                                    messagesIdsToAppScan.set(index, nodeHistoryId);\n+                                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a07784394e6a23ee32c8de300b5cc304df9a095"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTEyMjk2", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-490512296", "createdAt": "2020-09-17T11:51:44Z", "commit": {"oid": "ae537ddaf65b14330d8aae4eeeec4db3d5a21292"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDk1Nzc3", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-512495777", "createdAt": "2020-10-20T09:12:09Z", "commit": {"oid": "ae537ddaf65b14330d8aae4eeeec4db3d5a21292"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjowOVrOHkygeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjowOVrOHkygeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODI5Ng==", "bodyText": "This is not working correctly when the temp node is after the non-temp node, it still scans both of them.", "url": "https://github.com/zaproxy/zaproxy/pull/6057#discussion_r508338296", "createdAt": "2020-10-20T09:12:09Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/HostProcess.java", "diffHunk": "@@ -313,12 +314,23 @@ public void run() {\n             }\n \n             for (StructuralNode startNode : startNodes) {\n+                Map<String, Integer> indexOfTemporary = new HashMap<>();\n                 traverse(\n                         startNode,\n                         true,\n                         node -> {\n                             if (canScanNode(node)) {\n-                                messagesIdsToAppScan.add(node.getHistoryReference().getHistoryId());\n+                                Integer index = indexOfTemporary.get(nodeHash(node));\n+                                int nodeHistoryId = node.getHistoryReference().getHistoryId();\n+                                if (index == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae537ddaf65b14330d8aae4eeeec4db3d5a21292"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae537ddaf65b14330d8aae4eeeec4db3d5a21292", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/ae537ddaf65b14330d8aae4eeeec4db3d5a21292", "committedDate": "2020-07-20T18:36:57Z", "message": "Refactor\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}, "afterCommit": {"oid": "86d695e8c92b264bec0e03b988526a863d10c5df", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/86d695e8c92b264bec0e03b988526a863d10c5df", "committedDate": "2020-11-12T21:17:01Z", "message": "Refactor\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86d695e8c92b264bec0e03b988526a863d10c5df", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/86d695e8c92b264bec0e03b988526a863d10c5df", "committedDate": "2020-11-12T21:17:01Z", "message": "Refactor\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}, "afterCommit": {"oid": "c1b6fe69b1b048c09e6caec48a5c7ff29c1a5dc5", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/c1b6fe69b1b048c09e6caec48a5c7ff29c1a5dc5", "committedDate": "2020-11-13T08:32:43Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1b6fe69b1b048c09e6caec48a5c7ff29c1a5dc5", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/c1b6fe69b1b048c09e6caec48a5c7ff29c1a5dc5", "committedDate": "2020-11-13T08:32:43Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}, "afterCommit": {"oid": "a794438d2947aa8f67ccce2d2f116e62c5fd6171", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/a794438d2947aa8f67ccce2d2f116e62c5fd6171", "committedDate": "2020-11-13T11:27:56Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cef4321a6b0a3266df0e1f0f607db39e14a42ca", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/0cef4321a6b0a3266df0e1f0f607db39e14a42ca", "committedDate": "2020-11-13T14:12:58Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a794438d2947aa8f67ccce2d2f116e62c5fd6171", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/a794438d2947aa8f67ccce2d2f116e62c5fd6171", "committedDate": "2020-11-13T11:27:56Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}, "afterCommit": {"oid": "0cef4321a6b0a3266df0e1f0f607db39e14a42ca", "author": {"user": null}, "url": "https://github.com/zaproxy/zaproxy/commit/0cef4321a6b0a3266df0e1f0f607db39e14a42ca", "committedDate": "2020-11-13T14:12:58Z", "message": "Fix bug that makes zap test same request twice\n\nSigned-off-by: Diogo Silva <diogo.m.r.silva@tecnico.ulisboa.pt>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTQ4NDAw", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-530148400", "createdAt": "2020-11-13T15:17:51Z", "commit": {"oid": "0cef4321a6b0a3266df0e1f0f607db39e14a42ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTY0NzA5", "url": "https://github.com/zaproxy/zaproxy/pull/6057#pullrequestreview-530164709", "createdAt": "2020-11-13T15:37:03Z", "commit": {"oid": "0cef4321a6b0a3266df0e1f0f607db39e14a42ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 186, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}