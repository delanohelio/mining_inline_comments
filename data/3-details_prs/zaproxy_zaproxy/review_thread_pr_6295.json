{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjg3MTI2", "number": 6295, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0OToxMVrOE5ftfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowMDoxNlrOE5gAjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzIzODM2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/AbstractPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0OToxMVrOHz_fgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo0OToxMVrOHz_fgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI3OTY4Mg==", "bodyText": "Paros classes should have a ZAP comment.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524279682", "createdAt": "2020-11-16T13:49:11Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/parosproxy/paros/core/scanner/AbstractPlugin.java", "diffHunk": "@@ -123,7 +123,7 @@\n \n     /** Default Constructor */\n     public AbstractPlugin() {\n-        this.techSet = TechSet.AllTech;\n+        this.techSet = TechSet.getAllTech();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI0MzU1OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/extension/ascan/CustomScanDialog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MDoxOVrOHz_ing==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNToxMzowNVrOH05qnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA==", "bodyText": "This resets the tree state, losing the previous selections.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524280478", "createdAt": "2020-11-16T13:50:19Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/ascan/CustomScanDialog.java", "diffHunk": "@@ -643,6 +643,8 @@ private JPanel getTechPanel() {\n                             javax.swing.border.EtchedBorder.RAISED));\n \n             techPanel.add(scrollPane, LayoutHelper.getGBC(0, 0, 1, 1, 1.0D, 1.0D));\n+        } else {\n+            getTechTree().refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5NzMyOA==", "bodyText": "Any idea on how I can refresh the tree including the state when a tech gets added? I always got errors in awt stuff,and I'm not so into awt.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524297328", "createdAt": "2020-11-16T14:15:09Z", "author": {"login": "t4skforce"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/ascan/CustomScanDialog.java", "diffHunk": "@@ -643,6 +643,8 @@ private JPanel getTechPanel() {\n                             javax.swing.border.EtchedBorder.RAISED));\n \n             techPanel.add(scrollPane, LayoutHelper.getGBC(0, 0, 1, 1, 1.0D, 1.0D));\n+        } else {\n+            getTechTree().refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA=="}, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMjc5OQ==", "bodyText": "Reworked and working now.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525232799", "createdAt": "2020-11-17T15:13:05Z", "author": {"login": "t4skforce"}, "path": "zap/src/main/java/org/zaproxy/zap/extension/ascan/CustomScanDialog.java", "diffHunk": "@@ -643,6 +643,8 @@ private JPanel getTechPanel() {\n                             javax.swing.border.EtchedBorder.RAISED));\n \n             techPanel.add(scrollPane, LayoutHelper.getGBC(0, 0, 1, 1, 1.0D, 1.0D));\n+        } else {\n+            getTechTree().refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDQ3OA=="}, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI0NDIwOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MDoyNlrOHz_i-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MDoyNlrOHz_i-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MDU3MA==", "bodyText": "This should be removed, the codebase should not depend on core Log4j classes unless used specifically for logging.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524280570", "createdAt": "2020-11-16T13:50:26Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -19,6 +19,9 @@\n  */\n package org.zaproxy.zap.model;\n \n+import java.util.Arrays;\n+import java.util.TreeSet;\n+import org.apache.logging.log4j.core.util.Assert;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI0NzM0OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MTowMlrOHz_ktA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNToxMzozOVrOH05sUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTAxMg==", "bodyText": "Should return a collection, rather than create a new array each time.\nShould have a since tag.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524281012", "createdAt": "2020-11-16T13:51:02Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMzIzNQ==", "bodyText": "Hope v 2.10.0 works for @SInCE", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525233235", "createdAt": "2020-11-17T15:13:39Z", "author": {"login": "t4skforce"}, "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTAxMg=="}, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI1MzI3OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MjoyM1rOHz_oUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1MjoyM1rOHz_oUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MTkzOA==", "bodyText": "Adds a new tech\nas new parent \u2192 as a top level tech.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524281938", "createdAt": "2020-11-16T13:52:23Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {\n+        return allTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Returns all top level techs\n+     *\n+     * @return top level techs\n+     */\n+    public static Tech[] getTopLevel() {\n+        return topLevelTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Adds entry from techs, if parent is omitted it is treated as new parent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI1NDk2OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1Mjo0OVrOHz_pVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1Mjo0OVrOHz_pVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MjE5OA==", "bodyText": "Should be just a null check, like done in the following statement.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524282198", "createdAt": "2020-11-16T13:52:49Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/Tech.java", "diffHunk": "@@ -195,4 +206,68 @@ public int compareTo(Tech o) {\n \n         return this.toString().compareTo(o.toString());\n     }\n+\n+    /**\n+     * Returns all techs\n+     *\n+     * @return all techs\n+     */\n+    public static Tech[] getAll() {\n+        return allTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Returns all top level techs\n+     *\n+     * @return top level techs\n+     */\n+    public static Tech[] getTopLevel() {\n+        return topLevelTech.toArray(new Tech[] {});\n+    }\n+\n+    /**\n+     * Adds entry from techs, if parent is omitted it is treated as new parent\n+     *\n+     * @param tech to add\n+     */\n+    public static void add(Tech tech) {\n+        if (Assert.isNonEmpty(tech)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI2MzY5OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/model/TechSet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1NDo0NVrOHz_ujA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1NDo0NVrOHz_ujA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzUzMg==", "bodyText": "Should have JavaDoc explaining that this returns a new TechSet each time, although it should not need to.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524283532", "createdAt": "2020-11-16T13:54:45Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/model/TechSet.java", "diffHunk": "@@ -117,4 +119,26 @@ public void print() {\n             System.out.println(\"\\tExclude: \" + tech);\n         }\n     }\n+\n+    public static TechSet getAllTech() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI2NDgwOnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/ContextTechnologyPanel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzo1NTowMVrOHz_vPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNToxNDowNVrOH05tnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA==", "bodyText": "This prevents the techs from being saved.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524283708", "createdAt": "2020-11-16T13:55:01Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextTechnologyPanel.java", "diffHunk": "@@ -73,6 +73,8 @@ private TechnologyTreePanel getTechTree() {\n             techPanel =\n                     new TechnologyTreePanel(\n                             Constant.messages.getString(\"context.technology.tree.root\"));\n+        } else {\n+            techPanel.refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5ODc3Nw==", "bodyText": "Ideas on fixing this? As stated before, awt.. is not my strong suite.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524298777", "createdAt": "2020-11-16T14:17:14Z", "author": {"login": "t4skforce"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextTechnologyPanel.java", "diffHunk": "@@ -73,6 +73,8 @@ private TechnologyTreePanel getTechTree() {\n             techPanel =\n                     new TechnologyTreePanel(\n                             Constant.messages.getString(\"context.technology.tree.root\"));\n+        } else {\n+            techPanel.refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA=="}, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIzMzU2NA==", "bodyText": "Reworked and working now.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r525233564", "createdAt": "2020-11-17T15:14:05Z", "author": {"login": "t4skforce"}, "path": "zap/src/main/java/org/zaproxy/zap/view/ContextTechnologyPanel.java", "diffHunk": "@@ -73,6 +73,8 @@ private TechnologyTreePanel getTechTree() {\n             techPanel =\n                     new TechnologyTreePanel(\n                             Constant.messages.getString(\"context.technology.tree.root\"));\n+        } else {\n+            techPanel.refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4MzcwOA=="}, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzI4NzE3OnYy", "diffSide": "RIGHT", "path": "zap/src/main/java/org/zaproxy/zap/view/TechnologyTreePanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowMDoxNlrOHz_9PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNDowMDoxNlrOHz_9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI4NzI5Mg==", "bodyText": "Typo in update.", "url": "https://github.com/zaproxy/zaproxy/pull/6295#discussion_r524287292", "createdAt": "2020-11-16T14:00:16Z", "author": {"login": "thc202"}, "path": "zap/src/main/java/org/zaproxy/zap/view/TechnologyTreePanel.java", "diffHunk": "@@ -71,16 +73,30 @@ protected void setExpandedState(TreePath path, boolean state) {\n                         }\n                     }\n                 };\n-        // Initialise the structure based on all the tech we know about\n-        TechSet ts = new TechSet(Tech.builtInTech);\n-        Iterator<Tech> iter = ts.getIncludeTech().iterator();\n \n-        DefaultMutableTreeNode root = new DefaultMutableTreeNode(nameRootNode);\n-        Tech tech;\n+        root = new DefaultMutableTreeNode(nameRootNode);\n+        refresh();\n+\n+        JScrollPane scrollPane = new JScrollPane();\n+        scrollPane.setViewportView(techTree);\n+        scrollPane.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED));\n+\n+        add(scrollPane, BorderLayout.CENTER);\n+    }\n+\n+    /**\n+     * Initialise / updats the structure based on all the tech we know about", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c663d944aa0f18024d8e331aa643a043b7d6e249"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 609, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}