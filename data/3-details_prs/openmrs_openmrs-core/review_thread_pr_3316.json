{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDIwNTE2", "number": 3316, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDozNDowNlrOEMvM1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzozMzozMFrOENILbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzkxNzAyOnYy", "diffSide": "RIGHT", "path": "api/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDozNDowNlrOGvBVAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzowMjo0NFrOGvEO_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1ODAxOQ==", "bodyText": "I believe we should add <scope>test</scope> to every junit dependency so these dependencies are not packaged into the api jar", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r451958019", "createdAt": "2020-07-09T04:34:06Z", "author": {"login": "teleivo"}, "path": "api/pom.xml", "diffHunk": "@@ -278,6 +278,21 @@\n \t\t\t<groupId>com.sun.xml.bind</groupId>\n \t\t\t<artifactId>jaxb-impl</artifactId>\n \t    </dependency>\n+\t   <dependency>\n+\t\t   <groupId>org.junit.jupiter</groupId>\n+\t\t   <artifactId>junit-jupiter-api</artifactId>\n+\t\t   <version>${junitVersion}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2663210eac1c4e9f7e4ad58c33660cbe57a1c86d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1ODM4MA==", "bodyText": "see for example https://github.com/junit-team/junit5-samples/blob/main/junit5-jupiter-starter-maven/pom.xml#L22", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r451958380", "createdAt": "2020-07-09T04:35:37Z", "author": {"login": "teleivo"}, "path": "api/pom.xml", "diffHunk": "@@ -278,6 +278,21 @@\n \t\t\t<groupId>com.sun.xml.bind</groupId>\n \t\t\t<artifactId>jaxb-impl</artifactId>\n \t    </dependency>\n+\t   <dependency>\n+\t\t   <groupId>org.junit.jupiter</groupId>\n+\t\t   <artifactId>junit-jupiter-api</artifactId>\n+\t\t   <version>${junitVersion}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1ODAxOQ=="}, "originalCommit": {"oid": "2663210eac1c4e9f7e4ad58c33660cbe57a1c86d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwNTYyOA==", "bodyText": "@teleivo updated", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452005628", "createdAt": "2020-07-09T07:02:44Z", "author": {"login": "achilep"}, "path": "api/pom.xml", "diffHunk": "@@ -278,6 +278,21 @@\n \t\t\t<groupId>com.sun.xml.bind</groupId>\n \t\t\t<artifactId>jaxb-impl</artifactId>\n \t    </dependency>\n+\t   <dependency>\n+\t\t   <groupId>org.junit.jupiter</groupId>\n+\t\t   <artifactId>junit-jupiter-api</artifactId>\n+\t\t   <version>${junitVersion}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1ODAxOQ=="}, "originalCommit": {"oid": "2663210eac1c4e9f7e4ad58c33660cbe57a1c86d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODI1NTU1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzoxMTozNFrOGvEeRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjowOTo1OVrOGvYFig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg==", "bodyText": "@achilep will you also add a Test? I believe thats a class testing whether an OpenMRS test is properly setup.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452009542", "createdAt": "2020-07-09T07:11:34Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyNTM1OQ==", "bodyText": "@teleivo I don't understand well .\n\nwill you also add a Test?", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452025359", "createdAt": "2020-07-09T07:42:22Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg=="}, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1NTkwNA==", "bodyText": "@teleivo surely I plan to increase the coverage of the tests. I plan to do it at the end of the migration.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452055904", "createdAt": "2020-07-09T08:36:39Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg=="}, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MjEyNw==", "bodyText": "This file is like a metatest, going through all test classes and checking they have a test, ...\nCan you please add another test class like ModuleFileParserUnitTest to this commit for example that is a unit test", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452062127", "createdAt": "2020-07-09T08:47:10Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg=="}, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0MDEzMw==", "bodyText": "Sorry, I have to correct myself. ModuleFileParserUnitTest extends BaseContextMockTest so we should not include this one in the commit. So any other Test class that does not extend any of these BaseContext classes. You did already migrate a few previously.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452140133", "createdAt": "2020-07-09T11:08:38Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg=="}, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzMDg5MA==", "bodyText": "thanks @teleivo . done", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452330890", "createdAt": "2020-07-09T16:09:59Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -9,7 +9,8 @@\n  */\n package org.openmrs;\n \n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAwOTU0Mg=="}, "originalCommit": {"oid": "3db98dfec629cc38442a189472b269027fb8094b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDU3MjE5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzozMTo0MVrOGvbDgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyNDozOFrOGvczkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTUyMA==", "bodyText": "Shouldnt this also be an ||?\nSince before it was setting foundATestMethod to true if there is a method with the org.junit.Test annotation. I think now it should also count the ones with the org.junit.jupiter.api.Test annotation as a test method. Both annotations will never be present so an && cannot identify a test method then.\ntherefore\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tif (method.getAnnotation(org.junit.Test.class) != null && method.getAnnotation(Test.class) != null) {\n          \n          \n            \n            \t\t\t\t\tif (method.getAnnotation(org.junit.Test.class) != null || method.getAnnotation(Test.class) != null) {", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452379520", "createdAt": "2020-07-09T17:31:41Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -111,18 +109,16 @@ public void shouldHaveClassNameEndWithTestIfContainsMethodTestAnnotations() {\n \t\tfor (Class<?> currentClass : getClasses(\"^.*(?<!Test|IT|PT)\\\\.class$\")) {\n \t\t\t\n \t\t\t// skip over classes that are @Ignore'd\n-\t\t\tif (currentClass.getAnnotation(Ignore.class) == null) {\n+\t\t\tif (currentClass.getAnnotation(Ignore.class) == null || currentClass.getAnnotation(Disabled.class) == null) {\n \t\t\t\tboolean foundATestMethod = false;\n \t\t\t\t\n \t\t\t\tfor (Method method : currentClass.getMethods()) {\n-\t\t\t\t\tif (method.getAnnotation(Test.class) != null) {\n+\t\t\t\t\tif (method.getAnnotation(org.junit.Test.class) != null && method.getAnnotation(Test.class) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0568ac43dfcd0f628a3d0a8596382120c1c4699a"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwODIxMQ==", "bodyText": "@teleivo  here is the error I got", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452408211", "createdAt": "2020-07-09T18:24:38Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -111,18 +109,16 @@ public void shouldHaveClassNameEndWithTestIfContainsMethodTestAnnotations() {\n \t\tfor (Class<?> currentClass : getClasses(\"^.*(?<!Test|IT|PT)\\\\.class$\")) {\n \t\t\t\n \t\t\t// skip over classes that are @Ignore'd\n-\t\t\tif (currentClass.getAnnotation(Ignore.class) == null) {\n+\t\t\tif (currentClass.getAnnotation(Ignore.class) == null || currentClass.getAnnotation(Disabled.class) == null) {\n \t\t\t\tboolean foundATestMethod = false;\n \t\t\t\t\n \t\t\t\tfor (Method method : currentClass.getMethods()) {\n-\t\t\t\t\tif (method.getAnnotation(Test.class) != null) {\n+\t\t\t\t\tif (method.getAnnotation(org.junit.Test.class) != null && method.getAnnotation(Test.class) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTUyMA=="}, "originalCommit": {"oid": "0568ac43dfcd0f628a3d0a8596382120c1c4699a"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDgxNjE0OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0NjowN1rOGvdgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0NzoyOFrOGvdjJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxOTYzNg==", "bodyText": "oh, now I get it. So here it says // skip over classes that are @Ignore'd. So what we have to do is skip over classes that do not have the annotation Ignore and also do not have the annotation Disabled\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (currentClass.getAnnotation(Ignore.class) == null || currentClass.getAnnotation(Disabled.class) == null) {\n          \n          \n            \n            \t\t\tif (currentClass.getAnnotation(Ignore.class) == null && currentClass.getAnnotation(Disabled.class) == null) {\n          \n      \n    \n    \n  \n\nOtherwise you are going to check CreateInitialDataSet.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452419636", "createdAt": "2020-07-09T18:46:07Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -111,18 +109,16 @@ public void shouldHaveClassNameEndWithTestIfContainsMethodTestAnnotations() {\n \t\tfor (Class<?> currentClass : getClasses(\"^.*(?<!Test|IT|PT)\\\\.class$\")) {\n \t\t\t\n \t\t\t// skip over classes that are @Ignore'd\n-\t\t\tif (currentClass.getAnnotation(Ignore.class) == null) {\n+\t\t\tif (currentClass.getAnnotation(Ignore.class) == null || currentClass.getAnnotation(Disabled.class) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0568ac43dfcd0f628a3d0a8596382120c1c4699a"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyMDM4OQ==", "bodyText": "So you get the error after my suggested change only because you are in fact checking a class that should not be checked since it is annotated with @Ignore. So you need to take both my suggestions and it should work if I am not mistaken.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452420389", "createdAt": "2020-07-09T18:47:28Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -111,18 +109,16 @@ public void shouldHaveClassNameEndWithTestIfContainsMethodTestAnnotations() {\n \t\tfor (Class<?> currentClass : getClasses(\"^.*(?<!Test|IT|PT)\\\\.class$\")) {\n \t\t\t\n \t\t\t// skip over classes that are @Ignore'd\n-\t\t\tif (currentClass.getAnnotation(Ignore.class) == null) {\n+\t\t\tif (currentClass.getAnnotation(Ignore.class) == null || currentClass.getAnnotation(Disabled.class) == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxOTYzNg=="}, "originalCommit": {"oid": "0568ac43dfcd0f628a3d0a8596382120c1c4699a"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAwOTQzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzozMzozMFrOGvowyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MjoyN1rOGvo4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNDEwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (method.getAnnotation(Test.class) != null && method.getAnnotation(org.junit.Test.class) != null) {\n          \n          \n            \n            \t\t\t\tif (method.getAnnotation(Test.class) != null || method.getAnnotation(org.junit.Test.class) != null) {", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452604107", "createdAt": "2020-07-10T03:33:30Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -61,12 +62,11 @@ public void shouldStartWithShould() {\n \t\t\t\t\n \t\t\t\t// make sure every \"test\" method (determined by having \n \t\t\t\t// the @Test annotation) starts with \"testShould\"\n-\t\t\t\tif (method.getAnnotation(Test.class) != null) {\n+\t\t\t\tif (method.getAnnotation(Test.class) != null && method.getAnnotation(org.junit.Test.class) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c749cac1f5e71e7fb43f8a5728919c0614264c85"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjA1NQ==", "bodyText": "Tests will never have Junit 4 and Junit 5 annotations. Its always a good idea to make a test fail once you assume its good. shouldStartWithShould is supposed to fail if any method annotated with a Test annotation does not start with should or have _should in its name. So you can just open any test and delete a should and _should and see if that test here fails. Since you made. a change you should test that in a Junit 4 and 5 test method. That would have told you that with the && its not checking any test method.", "url": "https://github.com/openmrs/openmrs-core/pull/3316#discussion_r452606055", "createdAt": "2020-07-10T03:42:27Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/OpenmrsTestsTest.java", "diffHunk": "@@ -61,12 +62,11 @@ public void shouldStartWithShould() {\n \t\t\t\t\n \t\t\t\t// make sure every \"test\" method (determined by having \n \t\t\t\t// the @Test annotation) starts with \"testShould\"\n-\t\t\t\tif (method.getAnnotation(Test.class) != null) {\n+\t\t\t\tif (method.getAnnotation(Test.class) != null && method.getAnnotation(org.junit.Test.class) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNDEwNw=="}, "originalCommit": {"oid": "c749cac1f5e71e7fb43f8a5728919c0614264c85"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1395, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}