{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTAxODQx", "number": 3551, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMzoxNzoyMVrOEeo3vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoxNzowM1rOEgyzZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNTYyMzY3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/context/Context.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMzoxNzoyMVrOHKaryg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMzoxNzoyMVrOHKaryg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4NTAwMg==", "bodyText": "You put four spaces here, and there should be one tab. ;)", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r480685002", "createdAt": "2020-09-01T03:17:21Z", "author": {"login": "sacull"}, "path": "api/src/main/java/org/openmrs/api/context/Context.java", "diffHunk": "@@ -185,7 +185,7 @@ public static void setDAO(ContextDAO dao) {\n \t/**\n \t * Spring init method that sets the authentication scheme.\n \t */\n-\tstatic private void setAuthenticationScheme() {\n+    private static  void setAuthenticationScheme() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNTY0NDM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMzoyMDowOVrOHKa6HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzoxNzowM1rOHOmwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA==", "bodyText": "There is also no tab here, in addition, there are probably two spaces between the words \"final\" and \"Map\". ;)", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r480688668", "createdAt": "2020-09-01T03:20:09Z", "author": {"login": "sacull"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NTUxNQ==", "bodyText": "There is also no tab here, in addition, there are probably two spaces between the words \"final\" and \"Map\". ;)\n\nhello @insookwa ,\nhave you seen these comments?", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r483955515", "createdAt": "2020-09-05T14:21:43Z", "author": {"login": "achilep"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwNzk2Mg==", "bodyText": "please @insookwa  can you squash your commit?\nThanks", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484107962", "createdAt": "2020-09-06T19:57:27Z", "author": {"login": "achilep"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODQwMA==", "bodyText": "@achilep did you get a chance to look at this? https://talk.openmrs.org/t/rfc-favour-not-squashing-commits-over-squashing-commits/28482", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484108400", "createdAt": "2020-09-06T20:02:09Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3NTg1MA==", "bodyText": "thanks @dkayiwa  i am still finding ways of squashing commits . should I just delete this pull request and commit another one with the proper changes. i don't know if it possible to squash commits with one which has been pushed already. I am trying it out and here is my error log\nInsookwa@DESKTOP-4T543HR MINGW64 ~/openmrs-core (TRUNK-5955)\n$ git commit -a -m\"TRUNK-5955:REMOVED THE SPACES AND REPLACED THEM WITH ONE TAB \"\n[TRUNK-5955 01dcf1eee9] TRUNK-5955:REMOVED THE SPACES AND REPLACED THEM WITH ONE TAB\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\nInsookwa@DESKTOP-4T543HR MINGW64 ~/openmrs-core (TRUNK-5955)\n$ git status\nOn branch TRUNK-5955\nnothing to commit, working tree clean\n\nInsookwa@DESKTOP-4T543HR MINGW64 ~/openmrs-core (TRUNK-5955)\n$ git rebase -i HEAD~2\nerror: cannot 'squash' without a previous commit\nYou can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'.\nOr you can abort the rebase with 'git rebase --abort'.", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484175850", "createdAt": "2020-09-07T04:24:16Z", "author": {"login": "insookwa"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5Mzc1OQ==", "bodyText": "Did you read the link that i shared?", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484193759", "createdAt": "2020-09-07T05:44:35Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5NTk5Mw==", "bodyText": "Actually the link discourages squashing which I've been trying to figure out. I am very sorry   . is there a way I can fix this best @dkayiwa", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484195993", "createdAt": "2020-09-07T05:52:53Z", "author": {"login": "insookwa"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwMzcxNg==", "bodyText": "Here, the tab at the beginning is still missing and there are two spaces between the words \"final\" and \"Map\". ;)\nIf we take several adjacent lines, the lack of tabs will be better seen:", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484203716", "createdAt": "2020-09-07T06:17:26Z", "author": {"login": "sacull"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3NzExOA==", "bodyText": "thanks @dkayiwa  for this information .\n\n@achilep did you get a chance to look at this? https://talk.openmrs.org/t/rfc-favour-not-squashing-commits-over-squashing-commits/28482", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r485077118", "createdAt": "2020-09-08T17:17:03Z", "author": {"login": "achilep"}, "path": "api/src/main/java/org/openmrs/util/MemoryAppender.java", "diffHunk": "@@ -44,7 +44,7 @@\n \t// we store the MemoryAppenders by name, using SoftReferences to allow them to be garbage collected\n \t// as an implementation detail, we expect this class to only have a single instance, so our map\n \t// is only allocated an initial capacity of 1\n-\tprivate final static Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);\n+private static final  Map<String, SoftReference<MemoryAppender>> APPENDERS = new HashMap<>(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY4ODY2OA=="}, "originalCommit": {"oid": "b1addc1f4946f133bfea4dda3cf0b72372c813c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODIyMjQ0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/context/Context.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoxNzowM1rOHNxcTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoxNzowM1rOHNxcTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwMzU5OA==", "bodyText": "You've fixed the spaces at the beginning of the line nicely, but I suggest you turn on whitespace visibility in your ide.\n\nDo you see the two dots between the words \"static\" and \"void\"? One dot is one space, and there are two. ;)", "url": "https://github.com/openmrs/openmrs-core/pull/3551#discussion_r484203598", "createdAt": "2020-09-07T06:17:03Z", "author": {"login": "sacull"}, "path": "api/src/main/java/org/openmrs/api/context/Context.java", "diffHunk": "@@ -185,7 +185,7 @@ public static void setDAO(ContextDAO dao) {\n \t/**\n \t * Spring init method that sets the authentication scheme.\n \t */\n-\tstatic private void setAuthenticationScheme() {\n+\tprivate static  void setAuthenticationScheme() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dcf1eee91c31534b822713b10fc55f9d036d79"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1302, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}