{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzODk0ODE2", "number": 3640, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1NDozOFrOE7F53g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1NDozOFrOE7F53g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzk4MTc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/Encounter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1NDozOFrOH2icNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1NTo1NVrOH2igfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0OTQyOA==", "bodyText": "Shouldn't we also add a 2.3.3?", "url": "https://github.com/openmrs/openmrs-core/pull/3640#discussion_r526949428", "createdAt": "2020-11-19T14:54:38Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/Encounter.java", "diffHunk": "@@ -450,18 +451,27 @@ public void setDiagnoses(Set<Diagnosis> diagnoses) {\n \t}\n \t\n \t/**\n-\t * Basic property getter for conditions\n+\t * Basic property getter for the encounter's non-voided conditions.\n \t * \n-\t * @return conditions - set of conditions\n+\t * @return all non-voided conditions\n \t * @since 2.4.0, 2.3.1\n \t */\n \tpublic Set<Condition> getConditions() {\n-\t\tif (conditions == null) {\n-\t\t\tconditions = new LinkedHashSet<>();\n-\t\t}\n-\t\treturn conditions;\n+\t\treturn getConditions(false);\n \t}\n \n+\t/**\n+\t * Returns all conditions where 'Condition.encounterId = Encounter.encounterId'.\n+\t *\n+\t * @param includeVoided - Specifies whether or not to include voided conditions.\n+\t * @return The set of conditions, or an empty set if there are no conditions to return.\n+\t * @since 2.5.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eafa2537e8611f06ceed3a61033eafca137bfd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1MDUyNQ==", "bodyText": "Good point!", "url": "https://github.com/openmrs/openmrs-core/pull/3640#discussion_r526950525", "createdAt": "2020-11-19T14:55:55Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/Encounter.java", "diffHunk": "@@ -450,18 +451,27 @@ public void setDiagnoses(Set<Diagnosis> diagnoses) {\n \t}\n \t\n \t/**\n-\t * Basic property getter for conditions\n+\t * Basic property getter for the encounter's non-voided conditions.\n \t * \n-\t * @return conditions - set of conditions\n+\t * @return all non-voided conditions\n \t * @since 2.4.0, 2.3.1\n \t */\n \tpublic Set<Condition> getConditions() {\n-\t\tif (conditions == null) {\n-\t\t\tconditions = new LinkedHashSet<>();\n-\t\t}\n-\t\treturn conditions;\n+\t\treturn getConditions(false);\n \t}\n \n+\t/**\n+\t * Returns all conditions where 'Condition.encounterId = Encounter.encounterId'.\n+\t *\n+\t * @param includeVoided - Specifies whether or not to include voided conditions.\n+\t * @return The set of conditions, or an empty set if there are no conditions to return.\n+\t * @since 2.5.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk0OTQyOA=="}, "originalCommit": {"oid": "37eafa2537e8611f06ceed3a61033eafca137bfd"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1270, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}