{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNzU5OTAw", "number": 3383, "title": "TRUNK-5817: Migrate web and webapp package tests to Junit 5 (StarupErrorFilterTest)", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/TRUNK-5817\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-07-19T20:33:05Z", "url": "https://github.com/openmrs/openmrs-core/pull/3383", "merged": true, "mergeCommit": {"oid": "ea8bbc6b819230d72585dafe678cbc13d7229efa"}, "closed": true, "closedAt": "2020-07-20T18:06:56Z", "author": {"login": "achilep"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2r--pAFqTQ1MTMzNzcwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc21NNDgFqTQ1MTgxOTc2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzM3NzA0", "url": "https://github.com/openmrs/openmrs-core/pull/3383#pullrequestreview-451337704", "createdAt": "2020-07-20T06:52:42Z", "commit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1Mjo0MlrOGz7mgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1Mjo0MlrOGz7mgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwNzA3Mw==", "bodyText": "Thanks alot @achilep  for your great , there are some failing tests that are breaking the ci ,could you first run your new changes", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457107073", "createdAt": "2020-07-20T06:52:42Z", "author": {"login": "sherrif10"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -11,41 +11,45 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n-import static org.powermock.api.mockito.PowerMockito.mockStatic;\n \n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openmrs.test.jupiter.BaseContextSensitiveTest;\n import org.openmrs.web.Listener;\n-import org.powermock.core.classloader.annotations.PowerMockIgnore;\n-import org.powermock.core.classloader.annotations.PrepareForTest;\n-import org.powermock.modules.junit4.PowerMockRunner;\n+import org.powermock.reflect.Whitebox;\n import org.springframework.mock.web.MockHttpServletRequest;\n \n /**\n  * Tests {@link StartupErrorFilter}.\n  */\n-@RunWith(PowerMockRunner.class)\n-@PrepareForTest(Listener.class)\n-@PowerMockIgnore({\"com.sun.org.apache.xerces.*\", \"javax.xml.*\", \"org.xml.*\", \"javax.management.*\", \"org.w3c.dom.*\"})\n-public class StartupErrorFilterTest {\n+public class StartupErrorFilterTest extends BaseContextSensitiveTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzQ0NjI3", "url": "https://github.com/openmrs/openmrs-core/pull/3383#pullrequestreview-451344627", "createdAt": "2020-07-20T07:05:49Z", "commit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzowNTo0OVrOGz8GQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoxMzowOVrOGz8YIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExNTIwMg==", "bodyText": "we dont need to have a field for this one", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457115202", "createdAt": "2020-07-20T07:05:49Z", "author": {"login": "teleivo"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -11,41 +11,45 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n-import static org.powermock.api.mockito.PowerMockito.mockStatic;\n \n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openmrs.test.jupiter.BaseContextSensitiveTest;\n import org.openmrs.web.Listener;\n-import org.powermock.core.classloader.annotations.PowerMockIgnore;\n-import org.powermock.core.classloader.annotations.PrepareForTest;\n-import org.powermock.modules.junit4.PowerMockRunner;\n+import org.powermock.reflect.Whitebox;\n import org.springframework.mock.web.MockHttpServletRequest;\n \n /**\n  * Tests {@link StartupErrorFilter}.\n  */\n-@RunWith(PowerMockRunner.class)\n-@PrepareForTest(Listener.class)\n-@PowerMockIgnore({\"com.sun.org.apache.xerces.*\", \"javax.xml.*\", \"org.xml.*\", \"javax.management.*\", \"org.w3c.dom.*\"})\n-public class StartupErrorFilterTest {\n+public class StartupErrorFilterTest extends BaseContextSensitiveTest {\n+\n+\tprivate StartupErrorFilter filter;\n \t\n-\t@Before\n+\tprivate Throwable errorAtStartup ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExNjA4Mg==", "bodyText": "please inline the variable", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457116082", "createdAt": "2020-07-20T07:07:13Z", "author": {"login": "teleivo"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -11,41 +11,45 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n-import static org.powermock.api.mockito.PowerMockito.mockStatic;\n \n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openmrs.test.jupiter.BaseContextSensitiveTest;\n import org.openmrs.web.Listener;\n-import org.powermock.core.classloader.annotations.PowerMockIgnore;\n-import org.powermock.core.classloader.annotations.PrepareForTest;\n-import org.powermock.modules.junit4.PowerMockRunner;\n+import org.powermock.reflect.Whitebox;\n import org.springframework.mock.web.MockHttpServletRequest;\n \n /**\n  * Tests {@link StartupErrorFilter}.\n  */\n-@RunWith(PowerMockRunner.class)\n-@PrepareForTest(Listener.class)\n-@PowerMockIgnore({\"com.sun.org.apache.xerces.*\", \"javax.xml.*\", \"org.xml.*\", \"javax.management.*\", \"org.w3c.dom.*\"})\n-public class StartupErrorFilterTest {\n+public class StartupErrorFilterTest extends BaseContextSensitiveTest {\n+\n+\tprivate StartupErrorFilter filter;\n \t\n-\t@Before\n+\tprivate Throwable errorAtStartup ;\n+\n+\t@BeforeEach\n \tpublic void setUp() {\n-\t\tmockStatic(Listener.class);\n+\t\tfilter = new StartupErrorFilter();\n+\t}\n+\t\n+\t@AfterEach\n+\tpublic void reverterrorAtStartup() {\n+\t\terrorAtStartup = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExNzI2MA==", "bodyText": "I think we don't need to mock the throwable. You can just create any Exception as they are Throwable", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457117260", "createdAt": "2020-07-20T07:09:14Z", "author": {"login": "teleivo"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -11,41 +11,45 @@\n \n import static org.hamcrest.CoreMatchers.is;\n import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n-import static org.powermock.api.mockito.PowerMockito.mockStatic;\n \n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.openmrs.test.jupiter.BaseContextSensitiveTest;\n import org.openmrs.web.Listener;\n-import org.powermock.core.classloader.annotations.PowerMockIgnore;\n-import org.powermock.core.classloader.annotations.PrepareForTest;\n-import org.powermock.modules.junit4.PowerMockRunner;\n+import org.powermock.reflect.Whitebox;\n import org.springframework.mock.web.MockHttpServletRequest;\n \n /**\n  * Tests {@link StartupErrorFilter}.\n  */\n-@RunWith(PowerMockRunner.class)\n-@PrepareForTest(Listener.class)\n-@PowerMockIgnore({\"com.sun.org.apache.xerces.*\", \"javax.xml.*\", \"org.xml.*\", \"javax.management.*\", \"org.w3c.dom.*\"})\n-public class StartupErrorFilterTest {\n+public class StartupErrorFilterTest extends BaseContextSensitiveTest {\n+\n+\tprivate StartupErrorFilter filter;\n \t\n-\t@Before\n+\tprivate Throwable errorAtStartup ;\n+\n+\t@BeforeEach\n \tpublic void setUp() {\n-\t\tmockStatic(Listener.class);\n+\t\tfilter = new StartupErrorFilter();\n+\t}\n+\t\n+\t@AfterEach\n+\tpublic void reverterrorAtStartup() {\n+\t\terrorAtStartup = null;\n+\t\tWhitebox.setInternalState(Listener.class, \"errorAtStartup\", errorAtStartup);\n+\t\t\n \t}\n \t\n \t@Test\n \tpublic void getModel_shouldReturnAStartupErrorFilterModelContainingTheStartupError() {\n \t\t\n \t\tThrowable t = mock(Throwable.class);\n-\t\twhen(Listener.getErrorAtStartup()).thenReturn(t);\n+\t\tWhitebox.setInternalState(Listener.class, \"errorAtStartup\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExODgwMw==", "bodyText": "remove this line, you are setting the errors to null in the after each , so there are no errors by default for this test. the test will then pass.", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457118803", "createdAt": "2020-07-20T07:11:37Z", "author": {"login": "teleivo"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -55,20 +59,18 @@ public void getModel_shouldReturnAStartupErrorFilterModelContainingTheStartupErr\n \t@Test\n \tpublic void skipFilter_shouldReturnTrueIfNoErrorHasOccuredOnStartup() {\n \t\t\n-\t\twhen(Listener.errorOccurredAtStartup()).thenReturn(false);\n+\t\tWhitebox.setInternalState(Listener.class, \"errorAtStartup\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzExOTc3Ng==", "bodyText": "you will need to set the errors field to a Throwable (for example an Exception) for the getter to return true", "url": "https://github.com/openmrs/openmrs-core/pull/3383#discussion_r457119776", "createdAt": "2020-07-20T07:13:09Z", "author": {"login": "teleivo"}, "path": "web/src/test/java/org/openmrs/web/filter/startuperror/StartupErrorFilterTest.java", "diffHunk": "@@ -55,20 +59,18 @@ public void getModel_shouldReturnAStartupErrorFilterModelContainingTheStartupErr\n \t@Test\n \tpublic void skipFilter_shouldReturnTrueIfNoErrorHasOccuredOnStartup() {\n \t\t\n-\t\twhen(Listener.errorOccurredAtStartup()).thenReturn(false);\n+\t\tWhitebox.setInternalState(Listener.class, \"errorAtStartup\", false);\n \t\t\n-\t\tStartupErrorFilter filter = new StartupErrorFilter();\n \t\t\n-\t\tassertTrue(\"should be true on start without error\", filter.skipFilter(new MockHttpServletRequest()));\n+\t\tassertTrue(filter.skipFilter(new MockHttpServletRequest()), \"should be true on start without error\");\n \t}\n \t\n \t@Test\n \tpublic void skipFilter_shouldReturnFalseIfAnErrorHasOccuredOnStartup() {\n \t\t\n-\t\twhen(Listener.errorOccurredAtStartup()).thenReturn(true);\n+\t\tWhitebox.setInternalState(Listener.class, \"errorAtStartup\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36"}, "originalPosition": 81}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f1f661029842328275e42cbe419d8429936dc36", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/0f1f661029842328275e42cbe419d8429936dc36", "committedDate": "2020-07-19T20:26:02Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}, "afterCommit": {"oid": "57b43e7c143312651bbb22002af960f7eb8d31b1", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/57b43e7c143312651bbb22002af960f7eb8d31b1", "committedDate": "2020-07-20T14:01:22Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57b43e7c143312651bbb22002af960f7eb8d31b1", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/57b43e7c143312651bbb22002af960f7eb8d31b1", "committedDate": "2020-07-20T14:01:22Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}, "afterCommit": {"oid": "f790b39f35c9ef951cb79129673d5a0b24875b8c", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/f790b39f35c9ef951cb79129673d5a0b24875b8c", "committedDate": "2020-07-20T14:04:31Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f790b39f35c9ef951cb79129673d5a0b24875b8c", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/f790b39f35c9ef951cb79129673d5a0b24875b8c", "committedDate": "2020-07-20T14:04:31Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}, "afterCommit": {"oid": "c9e441a7b1bca3b05c25ebdbc2c927174e514fde", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/c9e441a7b1bca3b05c25ebdbc2c927174e514fde", "committedDate": "2020-07-20T14:35:14Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9e441a7b1bca3b05c25ebdbc2c927174e514fde", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/c9e441a7b1bca3b05c25ebdbc2c927174e514fde", "committedDate": "2020-07-20T14:35:14Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}, "afterCommit": {"oid": "4411075c951e2c0bb1adaf68cfdc7f2b4dafa1c9", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/4411075c951e2c0bb1adaf68cfdc7f2b4dafa1c9", "committedDate": "2020-07-20T14:53:08Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4411075c951e2c0bb1adaf68cfdc7f2b4dafa1c9", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/4411075c951e2c0bb1adaf68cfdc7f2b4dafa1c9", "committedDate": "2020-07-20T14:53:08Z", "message": "TRUNK-5817: Migrate web and webapp package tests to Junit 5"}, "afterCommit": {"oid": "52d52377804d644607e56102c930d779a3372b41", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/52d52377804d644607e56102c930d779a3372b41", "committedDate": "2020-07-20T16:41:32Z", "message": "TRUNK-5817: Migrate web and webapp package test to Junit 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59a62347236bf433825fbb69c8dd13907011daf0", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/59a62347236bf433825fbb69c8dd13907011daf0", "committedDate": "2020-07-20T17:23:09Z", "message": "TRUNK-5817: Migrate web and webapp package test to Junit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52d52377804d644607e56102c930d779a3372b41", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/52d52377804d644607e56102c930d779a3372b41", "committedDate": "2020-07-20T16:41:32Z", "message": "TRUNK-5817: Migrate web and webapp package test to Junit 5"}, "afterCommit": {"oid": "59a62347236bf433825fbb69c8dd13907011daf0", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/59a62347236bf433825fbb69c8dd13907011daf0", "committedDate": "2020-07-20T17:23:09Z", "message": "TRUNK-5817: Migrate web and webapp package test to Junit 5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODE5NzY4", "url": "https://github.com/openmrs/openmrs-core/pull/3383#pullrequestreview-451819768", "createdAt": "2020-07-20T17:37:23Z", "commit": {"oid": "59a62347236bf433825fbb69c8dd13907011daf0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4537, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}