{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODQzNzA5", "number": 3472, "title": "TRUNK-5744 Automate manual corrections of Liquibase snapshot files", "bodyText": "Description of what I changed\nAutomate manual corrections of Liquibase snapshot files.\nA good way to test this is to run the new utility scripts in the openmrs-core/liquibase/scripts folder.\n@teleivo life without dom4j 1.6.1 was rather short, I chose to use the library when I started coding about a week ago because the main pom file contained dom4j as a dependency then.\nA more recent version of dom4j would be marginally better but the latest version is not available yet in the OpenMRS Nexus repository.\nThe ticket was a bit of time travel anyway, lots of reading and writing files not to mention the use of xpath. All of a sudden I felt 20 years younger... :)\nIssue I worked on\nsee https://issues.openmrs.org/browse/TRUNK-5744\nChecklist: I completed these to help reviewers :)\n\n\n[ x ] My IDE is configured to follow the code style of this project.\n\n\n[ x ] I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\n\n\n[ x ] I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\n\n\n[ x ] All new and existing tests passed.\n\n\n[ x ] My pull request is based on the latest changes of the master branch.", "createdAt": "2020-08-07T21:36:30Z", "url": "https://github.com/openmrs/openmrs-core/pull/3472", "merged": true, "mergeCommit": {"oid": "b875e134d6b279f1699b4e06082ee7e97b827fca"}, "closed": true, "closedAt": "2020-08-17T09:56:58Z", "author": {"login": "WolfSchlegel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8xYVcAFqTQ2MzcxNjc1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc86spgABqjM2MzU3ODA3NTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzE2NzUw", "url": "https://github.com/openmrs/openmrs-core/pull/3472#pullrequestreview-463716750", "createdAt": "2020-08-08T04:18:15Z", "commit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNDoxODoxNVrOG9tWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNDoyNTo0OFrOG9tYyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM1OTM2OQ==", "bodyText": "the PR did not run tests on Travis. Is that because this module did not have tests or do we need to set something up?\nCould you please use JUnit 5 instead of 4. We just migrated the entire openmrs-core. JUnit 4 is still around here for backwards compatibility for module devs. In core new tests should now be written in Junit 5. We still need to update the testing docs.\nI think it should be enough If you depend on jupiter-api and engine. Then in IntelliJ you can easily convert your tests with the Refactor Migrate or individually. What we learned so far is docunented at https://wiki.openmrs.org/display/docs/How+to+migrate+to+JUnit+5", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467359369", "createdAt": "2020-08-08T04:18:15Z", "author": {"login": "teleivo"}, "path": "liquibase/pom.xml", "diffHunk": "@@ -19,13 +19,42 @@\n \t<groupId>org.openmrs.liquibase</groupId>\n \t<artifactId>openmrs-liquibase</artifactId>\n \t<name>openmrs-liquibase</name>\n+\t<packaging>jar</packaging>\n \t<description>Generate  running liquibase change sets from the console</description>\n \n \t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>dom4j</groupId>\n+\t\t\t<artifactId>dom4j</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>jaxen</groupId>\n+\t\t\t<artifactId>jaxen</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM1OTk0NQ==", "bodyText": "I removed this dependency since it was unused and most importantly because its vulnerable with no fix according to dependabot. If you reintroduce it please use an up to date one like https://github.com/dom4j/dom4j/releases/tag/version-2.1.3", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467359945", "createdAt": "2020-08-08T04:25:48Z", "author": {"login": "teleivo"}, "path": "pom.xml", "diffHunk": "@@ -369,6 +369,16 @@\n \t\t\t\t<artifactId>hapi-structures-v26</artifactId>\n \t\t\t\t<version>2.1</version>\n \t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>dom4j</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzIxMTA1", "url": "https://github.com/openmrs/openmrs-core/pull/3472#pullrequestreview-463721105", "createdAt": "2020-08-08T05:51:18Z", "commit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNTo1MToxOVrOG9tzgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNTo1NDowOVrOG9t0SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2Njc4NA==", "bodyText": "this will need to be replaced with JUnit 5 https://junit.org/junit5/docs/5.4.0/api/org/junit/jupiter/api/io/TempDir.html", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467366784", "createdAt": "2020-08-08T05:51:19Z", "author": {"login": "teleivo"}, "path": "liquibase/src/test/java/org/openmrs/liquibase/AbstractSnapshotTunerTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.liquibase;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalToCompressingWhiteSpace;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public class AbstractSnapshotTunerTest {\n+\t\n+\tprivate static final String FILE_WITH_LICENSE_HEADER_MD = \"file-with-license-header.md\";\n+\t\n+\tprivate static final String FILE_WITHOUT_LICENSE_HEADER_MD = \"file-without-license-header.md\";\n+\t\n+\tprivate static final String HTTP_OPENMRS_ORG_LICENSE = \"http://openmrs.org/license\";\n+\t\n+\tprivate static String PATH_TO_TEST_RESOURCES = \"src\" + File.separator + \"test\" + File.separator + \"resources\"\n+\t        + File.separator;\n+\t\n+\t/*\n+\t * An instance of org.openmrs.liquibase.SchemaOnlyTuner is used to test behaviour implemented in the \n+\t * org.openmrs.liquibase.AbstractSnapshotTuner class.\n+\t */\n+\tprivate SchemaOnlyTuner schemaOnlyTuner;\n+\t\n+\t@Rule\n+\tpublic TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2NjkxNw==", "bodyText": "thesting exceptions is done only with assertThrows in JUnit 5", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467366917", "createdAt": "2020-08-08T05:53:03Z", "author": {"login": "teleivo"}, "path": "liquibase/src/test/java/org/openmrs/liquibase/SchemaOnlyTunerTest.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.liquibase;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.dom4j.Document;\n+import org.dom4j.DocumentException;\n+import org.dom4j.DocumentHelper;\n+import org.dom4j.Node;\n+import org.dom4j.XPath;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.mockito.Mockito;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalToCompressingWhiteSpace;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+\n+public class SchemaOnlyTunerTest {\n+\t\n+\tprivate static final String LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML = \"org\" + File.separator + \"openmrs\" + File.separator\n+\t        + \"liquibase\" + File.separator + \"snapshots\" + File.separator + \"schema-only\" + File.separator\n+\t        + \"liquibase-schema-only-SNAPSHOT.xml\";\n+\t\n+\tprivate static final String LIQUIBASE_SCHEMA_ONLY_UPDATED_SNAPSHOT_XML = \"org\" + File.separator + \"openmrs\"\n+\t        + File.separator + \"liquibase\" + File.separator + \"snapshots\" + File.separator + \"schema-only\" + File.separator\n+\t        + \"liquibase-schema-only-UPDATED-SNAPSHOT.xml\";\n+\t\n+\tprivate static String PATH_TO_TEST_RESOURCES = \"src\" + File.separator + \"test\" + File.separator + \"resources\"\n+\t        + File.separator;\n+\t\n+\tprivate Document document;\n+\t\n+\tprivate Map<String, String> namespaceUris;\n+\t\n+\tprivate SchemaOnlyTuner schemaOnlyTuner;\n+\t\n+\t@Rule\n+\tpublic TemporaryFolder tempFolder = new TemporaryFolder();\n+\t\n+\t@Before\n+\tpublic void setup() throws DocumentException {\n+\t\tschemaOnlyTuner = new SchemaOnlyTuner();\n+\t\tdocument = schemaOnlyTuner.readChangeLogResource(LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML);\n+\t\tnamespaceUris = schemaOnlyTuner.getNamespaceUris();\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldCreateUpdatedChangeLogFile() throws DocumentException, IOException {\n+\t\t// given\n+\t\tString sourcePath = PATH_TO_TEST_RESOURCES + LIQUIBASE_SCHEMA_ONLY_SNAPSHOT_XML;\n+\t\tString targetPath = tempFolder.newFile(\"liquibase-schema-only-UPDATED-SNAPSHOT.xml\").getPath();\n+\t\t\n+\t\t// when\n+\t\tschemaOnlyTuner.createUpdatedChangeLogFile(sourcePath, targetPath);\n+\t\t\n+\t\t// then\n+\t\tDocument expected = schemaOnlyTuner.readChangeLogResource(LIQUIBASE_SCHEMA_ONLY_UPDATED_SNAPSHOT_XML);\n+\t\tDocument actual = schemaOnlyTuner.readChangeLogFile(targetPath);\n+\t\t\n+\t\tassertThat(expected.asXML(), equalToCompressingWhiteSpace(actual.asXML()));\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldDetachChangeSetsForLiquibaseTables() {\n+\t\t// given\n+\t\tXPath xpathOne = DocumentHelper.createXPath(\"//dbchangelog:createTable[@tableName=\\\"liquibasechangelog\\\"]\\\"\");\n+\t\txpathOne.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tXPath xpathTwo = DocumentHelper.createXPath(\"//dbchangelog:createTable[@tableName=\\\"liquibasechangeloglock\\\"]\\\"\");\n+\t\txpathTwo.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tassertEquals(1, xpathOne.selectNodes(document).size());\n+\t\tassertEquals(1, xpathTwo.selectNodes(document).size());\n+\t\t\n+\t\t// when\n+\t\tDocument actual = schemaOnlyTuner.detachLiquibaseTables(document);\n+\t\t\n+\t\t// then\n+\t\tassertEquals(0, xpathOne.selectNodes(actual).size());\n+\t\tassertEquals(0, xpathTwo.selectNodes(actual).size());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReplaceBitTypeWithBooleanType() {\n+\t\t// given\n+\t\tXPath xpath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"BIT(1)\\\"]/attribute::type\");\n+\t\txpath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xpath.selectNodes(document);\n+\t\tassertEquals(94, nodes.size());\n+\t\t\n+\t\t// when\n+\t\tDocument actual = schemaOnlyTuner.replaceBitWithBoolean(document);\n+\t\t\n+\t\t// then\n+\t\tfor (Node node : nodes) {\n+\t\t\tassertEquals(\"BOOLEAN\", node.getParent().attributeValue(\"type\"));\n+\t\t}\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReplaceLongtextTypeWithClobType() {\n+\t\t// given\n+\t\tXPath xPath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"LONGTEXT\\\"]/attribute::type\");\n+\t\txPath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xPath.selectNodes(document);\n+\t\tassertEquals(1, nodes.size());\n+\t\t\n+\t\t// when\n+\t\tSchemaOnlyTuner schemaOnlyTunerSpy = Mockito.spy(schemaOnlyTuner);\n+\t\tDocument actual = schemaOnlyTunerSpy.replaceLongtextWithClob(document);\n+\t\t\n+\t\t// then\n+\t\tfor (Node node : nodes) {\n+\t\t\tassertEquals(\"CLOB\", node.getParent().attributeValue(\"type\"));\n+\t\t}\n+\t\t\n+\t\tMockito.verify(schemaOnlyTunerSpy).assertLongtextNodes(any());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldAssertLongtextNode() {\n+\t\t// given\n+\t\tXPath xPath = DocumentHelper.createXPath(\"//dbchangelog:column[@type=\\\"LONGTEXT\\\"]/attribute::type\");\n+\t\txPath.setNamespaceURIs(namespaceUris);\n+\t\t\n+\t\tList<Node> nodes = xPath.selectNodes(document);\n+\t\tassertEquals(1, nodes.size());\n+\t\t\n+\t\t// when and then\n+\t\tassertTrue(schemaOnlyTuner.assertLongtextNodes(nodes));\n+\t}\n+\t\n+\t@Test(expected = AssertionError.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2Njk4NQ==", "bodyText": "just commented on two things that cannot be automatically migrated to JUnit 5 with Intellijs migration tools", "url": "https://github.com/openmrs/openmrs-core/pull/3472#discussion_r467366985", "createdAt": "2020-08-08T05:54:09Z", "author": {"login": "teleivo"}, "path": "pom.xml", "diffHunk": "@@ -369,6 +369,16 @@\n \t\t\t\t<artifactId>hapi-structures-v26</artifactId>\n \t\t\t\t<version>2.1</version>\n \t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>dom4j</groupId>\n+\t\t\t\t<artifactId>dom4j</artifactId>\n+\t\t\t\t<version>1.6.1</version>\n+\t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>jaxen</groupId>\n+\t\t\t\t<artifactId>jaxen</artifactId>\n+\t\t\t\t<version>1.2.0</version>\n+\t\t\t</dependency>\n \t\t\t<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70bf5f4617a097bc66e409afdc9826953756a8a1", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/70bf5f4617a097bc66e409afdc9826953756a8a1", "committedDate": "2020-08-07T21:25:36Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}, "afterCommit": {"oid": "a043c234ad00b3028fff5f89c7153391c7ad3a26", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/a043c234ad00b3028fff5f89c7153391c7ad3a26", "committedDate": "2020-08-08T13:08:40Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a043c234ad00b3028fff5f89c7153391c7ad3a26", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/a043c234ad00b3028fff5f89c7153391c7ad3a26", "committedDate": "2020-08-08T13:08:40Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}, "afterCommit": {"oid": "ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "committedDate": "2020-08-08T13:18:27Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/ba27eb216bff6e0c4e892f679007efb5bc8a7d4e", "committedDate": "2020-08-08T13:18:27Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}, "afterCommit": {"oid": "adb8d3796ca179e5e34db270a8db2106bf167d83", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/adb8d3796ca179e5e34db270a8db2106bf167d83", "committedDate": "2020-08-08T13:49:04Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "committedDate": "2020-08-08T15:24:13Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "adb8d3796ca179e5e34db270a8db2106bf167d83", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/adb8d3796ca179e5e34db270a8db2106bf167d83", "committedDate": "2020-08-08T13:49:04Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}, "afterCommit": {"oid": "1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "author": {"user": {"login": "WolfSchlegel", "name": "Wolf Schlegel"}}, "url": "https://github.com/openmrs/openmrs-core/commit/1b8c4bd352e66679d57ebf6ab3990b8c55fd65ba", "committedDate": "2020-08-08T15:24:13Z", "message": "TRUNK-5744 automate correction of Liquibase snapshot files"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4470, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}