{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTYwNzI4", "number": 3132, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoxMDo1NFrODkB6YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowMzo1NlrODlzozA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA2NjU2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoxMDo1NFrOFwJ4Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoxMDo1NFrOFwJ4Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzNzgyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Get the task with the given UUID.\n          \n          \n            \n            \t * Get task by given UUID.", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386037823", "createdAt": "2020-02-29T16:10:54Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,14 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * Get the task with the given UUID.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA2NzczOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoxMjo1MFrOFwJ4xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoxMjo1MFrOFwJ4xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzNzk1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlog.debug(\"get task \" + uuid);\n          \n          \n            \n            \t\t\tlog.debug(\"get-task uuid:\" + uuid);", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386037956", "createdAt": "2020-02-29T16:12:50Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {\n+\t\t\tlog.debug(\"get task \" + uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA3MTgyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoyMTowNlrOFwJ60Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMzo1MjowN1rOFwgMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ==", "bodyText": "why this check is needed? log.debug(...) will only log if debug is enabled anyway. I'm just curious.", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038481", "createdAt": "2020-02-29T16:21:06Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTM2OQ==", "bodyText": "logging directly brings about string concatenation which is abit expensive for the application in terms of its performance thats why under this code snippet we only log a message when the logger's debug mode is enabled", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079369", "createdAt": "2020-03-01T05:46:56Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIzODU0NA==", "bodyText": "Do we even need to log accessing a task by uuid?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386238544", "createdAt": "2020-03-02T07:53:56Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzMzg4Mg==", "bodyText": "@dkayiwa i used logging a task by uuid because of the unique identification the uuid  brings for the task defined in the task definition but i will go ahead and remove the logging if its not appropriate here", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386333882", "createdAt": "2020-03-02T11:16:57Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMzUyOA==", "bodyText": "@dkayiwa i have removed the logger,,kindly requesting for your review\nThanks", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386403528", "createdAt": "2020-03-02T13:52:07Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA3MjQ3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoyMjo1M1rOFwJ7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNjowMDozMFrOFwMcuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU2Mg==", "bodyText": "I would also write some unhappy paths like, uuid is null and uuid is sql statement like abc' or '1' = '1", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038562", "createdAt": "2020-02-29T16:22:53Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTkzMQ==", "bodyText": "i think if there is a brief code snippet which can strike the appoint,then its worth going for and avoid unnecessary code repetition", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079931", "createdAt": "2020-03-01T06:00:30Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU2Mg=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA3Mjc3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoyMzozMFrOFwJ7RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNDoxMzoyNlrOFwTMwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {\n          \n          \n            \n            \tpublic void getTaskByUuid_shouldReturnNullWhenGetTaskByUuidDoesNotExist() throws Exception {", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038596", "createdAt": "2020-02-29T16:23:30Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODE2MA==", "bodyText": "I guess you missed this", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386098160", "createdAt": "2020-03-01T11:02:09Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE5MDUyOQ==", "bodyText": "guess it was fixed", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386190529", "createdAt": "2020-03-02T04:13:26Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTA3MzMxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNjoyNDo0NVrOFwJ7ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwNTo1MzoyNFrOFwMblw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODY2Ng==", "bodyText": "Do you think these are useful to the developer? testcase name itself has which method is under testing and class name AKA test suite has which class is under test. What do you think?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038666", "createdAt": "2020-02-29T16:24:45Z", "author": {"login": "JudeNiroshan"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTYzOQ==", "bodyText": "yes its helpful to refer to the developer to the actual service method being tested", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079639", "createdAt": "2020-03-01T05:53:24Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODY2Ng=="}, "originalCommit": {"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTU0ODI2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjoyNToxOVrOFxY3XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjoxMDoxNFrOFxhBBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzMTkzMg==", "bodyText": "This is not a service layer interface. It is a data access layer interface, which is not directly accessed by clients.", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387331932", "createdAt": "2020-03-03T22:25:19Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,17 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @since 2.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ca9ddc0258e99fde43fa6798beb0dc56cdc6162"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NTQ3Nw==", "bodyText": "@dkayiwa  i have resolved the issue", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387465477", "createdAt": "2020-03-04T06:10:14Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,17 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @since 2.3.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzMTkzMg=="}, "originalCommit": {"oid": "0ca9ddc0258e99fde43fa6798beb0dc56cdc6162"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDkzMjcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTozMzowOFrOFxl3pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0Njo0OVrOFxmWDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NDk5OQ==", "bodyText": "Isn't 2.3.0 already released?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387544999", "createdAt": "2020-03-04T09:33:08Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "758351b96bf7a96abde1e0d65184cb8906f1c5c6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1Mjc4Mg==", "bodyText": "ya sure it was released,flipped to 2.4.0", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387552782", "createdAt": "2020-03-04T09:46:49Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.3.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NDk5OQ=="}, "originalCommit": {"oid": "758351b96bf7a96abde1e0d65184cb8906f1c5c6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDk5MzA5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0OTo0OVrOFxmc5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDozODowNlrOFxoHKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NDUzMw==", "bodyText": "Can you look at the formatting. Also, take another look at the grammar used by the existing openmrs api javadocs.", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387554533", "createdAt": "2020-03-04T09:49:49Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.4.0\n+\t * \n+\t *        Get task by given UUID.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3e03319b7170a1c01dc98780531d2d3a52e79e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MTczNw==", "bodyText": "fixed it,hope its clean now", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387581737", "createdAt": "2020-03-04T10:38:06Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.4.0\n+\t * \n+\t *        Get task by given UUID.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NDUzMw=="}, "originalCommit": {"oid": "dd3e03319b7170a1c01dc98780531d2d3a52e79e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTE4MTE2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo0MzoxMlrOFxoSbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODoyOToxOVrOFyKN_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA==", "bodyText": "Instead of duplicating the same javadoc, we use see also", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387584620", "createdAt": "2020-03-04T10:43:12Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,15 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * Get task by UUID\n+\t * \n+\t * @param uuid unique task identifier\n+\t * @return task with given universal unique identifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fef6b4ff07601603cf7e2017245ef0c57e893f5b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwNDM2Ng==", "bodyText": "i have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387604366", "createdAt": "2020-03-04T11:22:52Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,15 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * Get task by UUID\n+\t * \n+\t * @param uuid unique task identifier\n+\t * @return task with given universal unique identifier", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA=="}, "originalCommit": {"oid": "fef6b4ff07601603cf7e2017245ef0c57e893f5b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0MDU0MQ==", "bodyText": "hello @dkayiwa if all is well on this issue then we can merge, so that i can start working on the dependent issue to\nThanks", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388140541", "createdAt": "2020-03-05T08:29:19Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,15 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * Get task by UUID\n+\t * \n+\t * @param uuid unique task identifier\n+\t * @return task with given universal unique identifier", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA=="}, "originalCommit": {"oid": "fef6b4ff07601603cf7e2017245ef0c57e893f5b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDkyMjI0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTozODo1MlrOFyMbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoxNToyOFrOFyRTRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng==", "bodyText": "Can you include the full package name for SchedulerService?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388176656", "createdAt": "2020-03-05T09:38:52Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzIxNQ==", "bodyText": "Same for String", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388177215", "createdAt": "2020-03-05T09:39:48Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng=="}, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1NjU4Mg==", "bodyText": "i have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388256582", "createdAt": "2020-03-05T12:15:28Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng=="}, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDkyNDQ2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTozOToyM1rOFyMcYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjowMDozMlrOFyQ43Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3Njk5Mw==", "bodyText": "Do you really throw any DAOException?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388176993", "createdAt": "2020-03-05T09:39:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t * \n+\t * @throws DAOException\n+\t */\n+\tpublic TaskDefinition getTaskByUuid(String uuid) throws DAOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0OTgyMQ==", "bodyText": "yes,also in the existing code thats how its thrown at the DAO layer", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388249821", "createdAt": "2020-03-05T12:00:32Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t * \n+\t * @throws DAOException\n+\t */\n+\tpublic TaskDefinition getTaskByUuid(String uuid) throws DAOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3Njk5Mw=="}, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDkyNzk1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwOTo0MDoyNFrOFyMekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjoxNTo0NVrOFyRT2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzU1NQ==", "bodyText": "What is this?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388177555", "createdAt": "2020-03-05T09:40:24Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the uuid of the task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1NjcyOQ==", "bodyText": "i have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388256729", "createdAt": "2020-03-05T12:15:45Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the uuid of the task.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzU1NQ=="}, "originalCommit": {"oid": "82ec602020eb120c3712791c01bcf8d676bba527"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTU5Mzg1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzowODowNFrOFySzfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNDoxNDo0N1rOFyVFfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTIxMw==", "bodyText": "Do you need the above throws clause after having the see annotation.", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388281213", "createdAt": "2020-03-05T13:08:04Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n+\t * \n+\t * @throws DAOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca658e83c3f80227d5b1422b95f69688d18e282a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMxODU4OA==", "bodyText": "ooh not really,let me remove it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388318588", "createdAt": "2020-03-05T14:14:47Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n+\t * \n+\t * @throws DAOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTIxMw=="}, "originalCommit": {"oid": "ca658e83c3f80227d5b1422b95f69688d18e282a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTU5NjQ1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzowODo0N1rOFyS05g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNDoxNToyNVrOFyVHEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTU3NA==", "bodyText": "Can we avoid duplicating this?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388281574", "createdAt": "2020-03-05T13:08:47Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the task with the given uuid.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca658e83c3f80227d5b1422b95f69688d18e282a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMxODk5Mg==", "bodyText": "sure, removed it to, requesting for review", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388318992", "createdAt": "2020-03-05T14:15:25Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the task with the given uuid.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTU3NA=="}, "originalCommit": {"oid": "ca658e83c3f80227d5b1422b95f69688d18e282a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjA0NjMyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowNjowNlrOFyXLWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzoyOTowOVrOFyc-SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Mjg1OQ==", "bodyText": "Can you include the full package?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388352859", "createdAt": "2020-03-05T15:06:06Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b01e2e9a92db09a0624158cf2f2cd41d4744c64"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NzgxNg==", "bodyText": "sure @dkayiwa , have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388447816", "createdAt": "2020-03-05T17:29:09Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Mjg1OQ=="}, "originalCommit": {"oid": "7b01e2e9a92db09a0624158cf2f2cd41d4744c64"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjY5MDIxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo0MjozNFrOFydcJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoxOTozMlrOFyepEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTQ2Mg==", "bodyText": "Can you use a full package for the String parameter?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388455462", "createdAt": "2020-03-05T17:42:34Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,12 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3NTE1Mg==", "bodyText": "@dkayiwa i have added it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388475152", "createdAt": "2020-03-05T18:19:32Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,12 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTQ2Mg=="}, "originalCommit": {"oid": "f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzI1MjAyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDoyNjoyM1rOFyi4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDo1OToxM1rOFy07Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0NDY5NA==", "bodyText": "What is the use of uuid in the above line?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388544694", "createdAt": "2020-03-05T20:26:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String uuid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af1dc6d61846b78245333d6e2229c3147618bf3a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MDIxOQ==", "bodyText": "i was trying to indicate the parameter to but i have removed it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388840219", "createdAt": "2020-03-06T10:59:13Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String uuid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0NDY5NA=="}, "originalCommit": {"oid": "af1dc6d61846b78245333d6e2229c3147618bf3a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTY5OTMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDowMzo1NlrOFy5vzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxNToxNVrOFy6HkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkxOTI0Nw==", "bodyText": "Is there any reason why you did not add @Transactional(readOnly = true) like the rest of the getters?", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388919247", "createdAt": "2020-03-06T14:03:56Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4edd95299bcdda06f65f55cfde64999ea092f387"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNTMyOA==", "bodyText": "not really,just didn't notice it but i have added it", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388925328", "createdAt": "2020-03-06T14:15:15Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkxOTI0Nw=="}, "originalCommit": {"oid": "4edd95299bcdda06f65f55cfde64999ea092f387"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1512, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}