{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzM0NTgz", "number": 3397, "title": "Trunk 5835:OrderSetAttribute Implementation ", "bodyText": "link:https://issues.openmrs.org/browse/TRUNK-5835", "createdAt": "2020-07-24T14:58:14Z", "url": "https://github.com/openmrs/openmrs-core/pull/3397", "merged": true, "mergeCommit": {"oid": "4f0eaad41b08168e11f3cddaedfa8a9934826972"}, "closed": true, "closedAt": "2020-07-30T18:54:55Z", "author": {"login": "gitcliff"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4dTWAgH2gAyNDU2MzM0NTgzOjlkYzQwNTAxMDYzODQyYTE1NmFiY2U1OTZjMGFjMDJlNDBlNzIwZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6ESEpgFqTQ1ODY3MDA1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/9dc40501063842a156abce596c0ac02e40e720de", "committedDate": "2020-07-25T18:54:13Z", "message": "TRUNK-5835:Adding tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c64920ee3ec0808d0aab72fbb09c4eb767674f04", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/c64920ee3ec0808d0aab72fbb09c4eb767674f04", "committedDate": "2020-07-24T14:54:57Z", "message": "TRUNK-5835:adding commits"}, "afterCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/9dc40501063842a156abce596c0ac02e40e720de", "committedDate": "2020-07-25T18:54:13Z", "message": "TRUNK-5835:Adding tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2MDMx", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316031", "createdAt": "2020-07-25T21:07:45Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowNzo0NVrOG3HcXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowNzo0NVrOG3HcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjgxMw==", "bodyText": "What is AllOrderSetAttributeTypes?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446813", "createdAt": "2020-07-25T21:07:45Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -120,6 +122,8 @@\n \tOrderSetAttribute getOrderSetAttributeByUuid(String uuid);\n \n \t/**\n+\t * Get AllOrderSetAttributeTypes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2MDYx", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316061", "createdAt": "2020-07-25T21:08:23Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowODoyM1rOG3Hchw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowODoyM1rOG3Hchw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0Njg1NQ==", "bodyText": "What does the above do?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446855", "createdAt": "2020-07-25T21:08:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -128,6 +132,8 @@\n \tList<OrderSetAttributeType> getAllOrderSetAttributeTypes();\n \n \t/**\n+\t * Get OrderSetAttributeType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2MDk1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316095", "createdAt": "2020-07-25T21:09:07Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowOTowN1rOG3HcuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowOTowN1rOG3HcuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjkwNA==", "bodyText": "Can you look at existing javadocs for examples?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446904", "createdAt": "2020-07-25T21:09:07Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get OrderSetAttribute by uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2MjM0", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316234", "createdAt": "2020-07-25T21:12:14Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMjoxNFrOG3Hdxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMjoxNFrOG3Hdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzE3NQ==", "bodyText": "Just incase one adds more data to the dataset, just use count and count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447175", "createdAt": "2020-07-25T21:12:14Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2Mjcx", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316271", "createdAt": "2020-07-25T21:13:05Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzowNVrOG3HeCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzowNVrOG3HeCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI0MQ==", "bodyText": "Use count and count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447241", "createdAt": "2020-07-25T21:13:05Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2MzAw", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-455316300", "createdAt": "2020-07-25T21:13:41Z", "commit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzo0MVrOG3HeNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzo0MVrOG3HeNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI4NA==", "bodyText": "What as the original name?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447284", "createdAt": "2020-07-25T21:13:41Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType lat = service.getOrderSetAttributeType(1);\n+\t\tlat.setName(\"A new name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/66cc88002971624d9cdfd5492bd4741e1357ed45", "committedDate": "2020-07-27T13:11:17Z", "message": "TRUNK-5835:fixing tests docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDk5Njkx", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-456099691", "createdAt": "2020-07-27T20:11:46Z", "commit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMTo0NlrOG3x07A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMTo0NlrOG3x07A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTIyOA==", "bodyText": "I would drop database. That is a detail of the data access layer.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141228", "createdAt": "2020-07-27T20:11:46Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid from database", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTAwMjE4", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-456100218", "createdAt": "2020-07-27T20:12:37Z", "commit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMjozN1rOG3x2ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMjozN1rOG3x2ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTY0Mg==", "bodyText": "What is oat?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141642", "createdAt": "2020-07-27T20:12:37Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(1);\n+\t\toat.setName(\"A new name\");\n+\t\tservice.saveOrderSetAttributeType(oat);\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(\"A new name\", service.getOrderSetAttributeType(1).getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#unretireOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void unretireOrderSetAttributeType_shouldUnretireARetiredOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTAwNjkx", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-456100691", "createdAt": "2020-07-27T20:13:22Z", "commit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMzoyMlrOG3x37A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMzoyMlrOG3x37A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng==", "bodyText": "What is the use of this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141996", "createdAt": "2020-07-27T20:13:22Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "871dca0af42081700248ea731f6bd8ecaea6230f", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/871dca0af42081700248ea731f6bd8ecaea6230f", "committedDate": "2020-07-28T12:38:41Z", "message": "TRUNK-5835:fixing tests docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/17d43a50654071470d6a532a3fe6e40b7ff61ebf", "committedDate": "2020-07-28T19:50:14Z", "message": "TRUNK-5835:Add formats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDUxNDE2", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457451416", "createdAt": "2020-07-29T12:00:16Z", "commit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjowMDoxN1rOG41LnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjowMDoxN1rOG41LnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA==", "bodyText": "What is the use of the above assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462244764", "createdAt": "2020-07-29T12:00:17Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/bf1ed4704afc540302f9a54ad05689610c3f4c9e", "committedDate": "2020-07-29T17:22:53Z", "message": "TRUNK-5835:fixing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODMyNjQ0", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457832644", "createdAt": "2020-07-29T19:42:11Z", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MjoxMVrOG5HaHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MjoxMVrOG5HaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MzM4OQ==", "bodyText": "previously", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543389", "createdAt": "2020-07-29T19:42:11Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -171,7 +179,7 @@\n \tOrderSetAttributeType retireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType, String reason);\n \n \t/**\n-\t * Restores a orderSet attribute type that was previous retired in the database\n+\t * Restores a orderSet attribute type that was previous retired ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODMzMTIz", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457833123", "createdAt": "2020-07-29T19:42:56Z", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0Mjo1NlrOG5HblA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0Mjo1NlrOG5HblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzc2NA==", "bodyText": "a or an?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543764", "createdAt": "2020-07-29T19:42:56Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -182,7 +190,7 @@\n \tOrderSetAttributeType unretireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType);\n \n \t/**\n-\t * Completely removes a orderSet attribute type from the database\n+\t * Completely removes a orderSet attribute type ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODMzNDA1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457833405", "createdAt": "2020-07-29T19:43:23Z", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MzoyM1rOG5HcZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MzoyM1rOG5HcZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzk3Mw==", "bodyText": "What is orderSet?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543973", "createdAt": "2020-07-29T19:43:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -148,7 +156,7 @@\n \tOrderSetAttributeType getOrderSetAttributeTypeByUuid(String uuid);\n \n \t/**\n-\t * Creates or updates the given orderSet attribute type in the database\n+\t * Creates or updates the given orderSet attribute type ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODMzOTc5", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457833979", "createdAt": "2020-07-29T19:44:18Z", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NDoxOVrOG5HeTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NDoxOVrOG5HeTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NDQ2Mg==", "bodyText": "use count - 1\nwhich will ensure that the test does not fail when the number of records in the dataset is changed.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462544462", "createdAt": "2020-07-29T19:44:19Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODM0ODY1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-457834865", "createdAt": "2020-07-29T19:45:39Z", "commit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTozOVrOG5HhPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTozOVrOG5HhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NTIxNA==", "bodyText": "use count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462545214", "createdAt": "2020-07-29T19:45:39Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "committedDate": "2020-07-30T05:48:11Z", "message": "TRUNK-5835:fixing tests cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/b5303e73476e0b4e4940642ae7dbad833162b2f0", "committedDate": "2020-07-30T05:55:05Z", "message": "TRUNK-5835:fixing tests cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzI4NDkw", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-458328490", "createdAt": "2020-07-30T11:53:42Z", "commit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1Mzo0MlrOG5fzDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1Mzo0MlrOG5fzDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Mjk4OQ==", "bodyText": "Can you also document all the params?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462942989", "createdAt": "2020-07-30T11:53:42Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid \n+\t * \n \t * @param uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzI5MTEz", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-458329113", "createdAt": "2020-07-30T11:54:49Z", "commit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NDo0OVrOG5f06g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NDo0OVrOG5f06g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng==", "bodyText": "Do we need this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462943466", "createdAt": "2020-07-30T11:54:49Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzI5Nzg0", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-458329784", "createdAt": "2020-07-30T11:56:01Z", "commit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NjowMVrOG5f3BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NjowMVrOG5f3BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ==", "bodyText": "What is the use of this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944005", "createdAt": "2020-07-30T11:56:01Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzMwNDMy", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-458330432", "createdAt": "2020-07-30T11:57:05Z", "commit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NzowNVrOG5f48w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NzowNVrOG5f48w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDQ5OQ==", "bodyText": "Problem with hard coding the number as 2 is that when the test dataset gets changed with more of less records, the test will fail.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944499", "createdAt": "2020-07-30T11:57:05Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "committedDate": "2020-07-30T13:17:19Z", "message": "TRUNK-5835:fixing tests cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5927187133c5a51662824d8b63bb23fffeac046", "author": {"user": {"login": "gitcliff", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/b5927187133c5a51662824d8b63bb23fffeac046", "committedDate": "2020-07-30T13:47:56Z", "message": "TRUNK-5835:fixing tests cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjcwMDUy", "url": "https://github.com/openmrs/openmrs-core/pull/3397#pullrequestreview-458670052", "createdAt": "2020-07-30T18:53:02Z", "commit": {"oid": "b5927187133c5a51662824d8b63bb23fffeac046"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MzowMlrOG5vtKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MzowMlrOG5vtKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwMzYyNQ==", "bodyText": "remove specifies", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r463203625", "createdAt": "2020-07-30T18:53:02Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,7 +110,9 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n-\t * @param uuid\n+\t * Get order set attribute by uuid \n+\t * \n+\t * @param uuid specifies the order set attribute uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5927187133c5a51662824d8b63bb23fffeac046"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4566, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}