{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2ODUyNTk4", "number": 3631, "title": "TRUNK-5977 - getPatientOrPromotePerson leading to stack traces under \u2026", "bodyText": "TRUNK-5977 - getPatientOrPromotePerson leading to stack traces under some conditions", "createdAt": "2020-11-06T16:28:26Z", "url": "https://github.com/openmrs/openmrs-core/pull/3631", "merged": true, "mergeCommit": {"oid": "6dcae708d566dfba4bd0c969f40cb20477e9df57"}, "closed": true, "closedAt": "2020-11-13T22:02:01Z", "author": {"login": "mseaton"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ5iE0gH2gAyNTE2ODUyNTk4OmE4OTk0MzZhZmI0Nzc3YjViOThlNTcxNDE4Yzk1NzE4NTg0N2E0NGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcOOU3AFqTUzMDQzMzU1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a899436afb4777b5b98e571418c957185847a44f", "author": {"user": {"login": "mseaton", "name": "Michael Seaton"}}, "url": "https://github.com/openmrs/openmrs-core/commit/a899436afb4777b5b98e571418c957185847a44f", "committedDate": "2020-11-06T16:27:09Z", "message": "TRUNK-5977 - getPatientOrPromotePerson leading to stack traces under some conditions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1Njg3MTMz", "url": "https://github.com/openmrs/openmrs-core/pull/3631#pullrequestreview-525687133", "createdAt": "2020-11-07T22:12:54Z", "commit": {"oid": "a899436afb4777b5b98e571418c957185847a44f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QyMjoxMjo1NFrOHvLCMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QyMjoxMjo1NFrOHvLCMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTIyNTkwNA==", "bodyText": "Just like the original exception, i would explicitly use WrongClassException instead of the generic Exception.\nSecondly, even with the changes in this pull request, you would still get an UnexpectedRollbackException because of the above call Context.getPatientService().getPatient(patientOrPersonId) which marks the transaction for rollback,  because of the exception. Therefore, you need to either change Context.getPatientService().getPatient(patientOrPersonId) to getPatient(patientOrPersonId) such that it does not run with its new transaction, or add noRollbackFor = WrongClassException.class to the transaction definition for the getPatient(Integer patientId) method.", "url": "https://github.com/openmrs/openmrs-core/pull/3631#discussion_r519225904", "createdAt": "2020-11-07T22:12:54Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java", "diffHunk": "@@ -223,7 +223,7 @@ public Patient getPatientOrPromotePerson(Integer patientOrPersonId) {\n \t\ttry {\n \t\t\tpatient = Context.getPatientService().getPatient(patientOrPersonId);\n \t\t}\n-\t\tcatch (ClassCastException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a899436afb4777b5b98e571418c957185847a44f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6d18844f0f6c66147886cd2bf0430a7d1819001", "author": {"user": {"login": "mseaton", "name": "Michael Seaton"}}, "url": "https://github.com/openmrs/openmrs-core/commit/f6d18844f0f6c66147886cd2bf0430a7d1819001", "committedDate": "2020-11-13T17:25:16Z", "message": "TRUNK-5977 - getPatientOrPromotePerson leading to stack traces under some conditions.  This changes the current approach by first loading the person with the given id, and then checking if the returned person is a patient or not.\n\nUnfortunately, none of the unit tests catch the error that this is fixing, but running the refapp with this fix + a related fix to idgen fixes the error case as described on the ticket."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjY1Njk2", "url": "https://github.com/openmrs/openmrs-core/pull/3631#pullrequestreview-530265696", "createdAt": "2020-11-13T17:29:16Z", "commit": {"oid": "f6d18844f0f6c66147886cd2bf0430a7d1819001"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoyOToxNlrOHy4GKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoyOToxNlrOHy4GKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEwOTkyOQ==", "bodyText": "@dkayiwa I was able to reproduce the issue and see the same errors that you reporting with my previous fix.  Here is my alternative solution, which fixes the issue for me.  Rather than try to load the patient, and then fall back to loading the person, this first loads the person, and checks to see if that person represents a valid patient or not.  This seems like the more correct behavior anyway, given our inheritance model.\nTo get this working in the refapp, I also needed to apply a related fix to idgen, which I raised a separate PR for, though you could also just disable the idgen module to test this standalone.\nThoughts on this approach?  This is a PR against the 2.3.x branch, which if accepted, we can up-port as needed.", "url": "https://github.com/openmrs/openmrs-core/pull/3631#discussion_r523109929", "createdAt": "2020-11-13T17:29:16Z", "author": {"login": "mseaton"}, "path": "api/src/main/java/org/openmrs/api/impl/PatientServiceImpl.java", "diffHunk": "@@ -219,21 +220,17 @@ public Patient getPatient(Integer patientId) throws APIException {\n \t@Override\n \t@Transactional(readOnly = true)\n \tpublic Patient getPatientOrPromotePerson(Integer patientOrPersonId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d18844f0f6c66147886cd2bf0430a7d1819001"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNDMzNTU5", "url": "https://github.com/openmrs/openmrs-core/pull/3631#pullrequestreview-530433559", "createdAt": "2020-11-13T21:41:26Z", "commit": {"oid": "f6d18844f0f6c66147886cd2bf0430a7d1819001"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}