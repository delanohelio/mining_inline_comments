{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MzcyNjk4", "number": 3195, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0MjozM1rOD7gsvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjoxNjoyOFrOEH8Q9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzI4MzE3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjo0MjozM1rOGT4Khw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0OTowOVrOGUaMbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NjMyNw==", "bodyText": "Is this a test or its just a class, If its a test ,could you kindly make it a full test by adding @test annotation", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r423496327", "createdAt": "2020-05-12T06:42:33Z", "author": {"login": "sherrif10"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -32,11 +46,49 @@ public void runBeforeEachTest() {\n \t * @throws Exception\n \t */\n \t@Test\n-\tpublic void shouldGetAlerts() {\n-\t\t\n-\t\tAlertService as = Context.getAlertService();\n-\t\t//System.out.println(as.getAllAlerts());\n+\tpublic void getAlert_shouldReturnSavedAlert() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d45edf51c6481564bac3cb1af1e839cd7893fa0e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MzM4Ng==", "bodyText": "hi @sherrif10   thanks for the review,the above method already has a @test annotation cc @ibacher", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r423573386", "createdAt": "2020-05-12T08:55:58Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -32,11 +46,49 @@ public void runBeforeEachTest() {\n \t * @throws Exception\n \t */\n \t@Test\n-\tpublic void shouldGetAlerts() {\n-\t\t\n-\t\tAlertService as = Context.getAlertService();\n-\t\t//System.out.println(as.getAllAlerts());\n+\tpublic void getAlert_shouldReturnSavedAlert() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NjMyNw=="}, "originalCommit": {"oid": "d45edf51c6481564bac3cb1af1e839cd7893fa0e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1Mzg2OA==", "bodyText": "So a quick thought on this. We want tests to only test a single \"unit\" of work. So, for example, the code here is basically identical to the code to test saveAlert() which tells me that something has gone wrong. I would model these tests on the tests that we have for HibernateConceptDAOTest.\nIn particular, this uses DBUnit to put the database in a known state and adds the @Autowired annotation to the dao being tested.\nThen, the test for the various get methods becomes just a matter of getting known values from the database (because they are configured using a DBUnit XML document) and so if we break the save functionality, it doesn't also break this test.\nAlso on naming conventions, the key part about the getAlert() method is that it gets the alert by the id field so I would name this something like:\npublic void getAlert_shouldGetAlertById()\nSimilarly, saveAlert() probably needs at least two tests:\npublic void saveAlert_shouldSaveAlertToDb()\n\npublic void saveAlert_shouldRaiseExceptionWhenAlertInvalid()", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r424053868", "createdAt": "2020-05-12T21:49:09Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -32,11 +46,49 @@ public void runBeforeEachTest() {\n \t * @throws Exception\n \t */\n \t@Test\n-\tpublic void shouldGetAlerts() {\n-\t\t\n-\t\tAlertService as = Context.getAlertService();\n-\t\t//System.out.println(as.getAllAlerts());\n+\tpublic void getAlert_shouldReturnSavedAlert() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5NjMyNw=="}, "originalCommit": {"oid": "d45edf51c6481564bac3cb1af1e839cd7893fa0e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDk2ODA1OnYy", "diffSide": "RIGHT", "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMDo1MToxOFrOGWjgaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoxODowNlrOGW5R_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMzU5NQ==", "bodyText": "For this,i am trying to get data from this newly created data set were i am specifying the alert with an id and its text,but i keep on getting .NoSuchTableException: alert\nas seen here,https://pastebin.com/9J6zfFsn   Any thoughts on this cc  @ibacher  @dkayiwa", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r426303595", "createdAt": "2020-05-17T20:51:18Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+\t<alert alert_Id=\"12345\" text=\"Testing the hibernate DAO\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45070ecaa31f5046975338552e2333b056b34480"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2MDM1MQ==", "bodyText": "@HerbertYiga That's because the name of the table for the Alert class is notification_alert. See the relevant Hibernate mapping file. Also not that, at a minimum, you probably need to set creator, satisfied_by_any, and alert_read and should set uuid.", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r426660351", "createdAt": "2020-05-18T14:18:06Z", "author": {"login": "ibacher"}, "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    This Source Code Form is subject to the terms of the Mozilla Public License,\n+    v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+    obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+    the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+    Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+    graphic logo is a trademark of OpenMRS Inc.\n+-->\n+<dataset>\n+\t<alert alert_Id=\"12345\" text=\"Testing the hibernate DAO\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwMzU5NQ=="}, "originalCommit": {"oid": "45070ecaa31f5046975338552e2333b056b34480"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAxMTY3OnYy", "diffSide": "RIGHT", "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0MjoxMlrOGkCAmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNToxNzozMlrOGkgaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNDg0Mw==", "bodyText": "@dkayiwa @ibacher , for this pr,i have one method which is failing locally ie the delete method whose snipet is:  @test\npublic void deleteAlert_shouldReturnNullAfterDeleting() {\nAlert savedAlert = hibernateAlertDAO.getAlert(2);\nAssert.assertNotNull(savedAlert);\nhibernateAlertDAO.deleteAlert(savedAlert);\nAssert.assertNull(savedAlert);\n}\nit returns a 2 instead of a null,on the assertNull section,any thoughts?", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r440434843", "createdAt": "2020-06-15T20:42:12Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<dataset>\n+\t<notification_alert alert_id=\"2\" creator=\"1\" text=\"Testing hibernate Dao\" date_created=\"2019-01-01 00:00:00.0\"  date_to_expire=\"2020-08-08 00:00:00.0\" satisfied_by_any=\"1\" alert_read=\"1\" uuid=\"16914264-e162-11df-9195-001e378eb69e\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db3a4d260a59f54bcc5bc62b163de7d6425b6255"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMjkxNg==", "bodyText": "You probably need to refresh the savedAlert after deleting it from the database (it isn't going to be magically rendered null).\npublic void deleteAlert_shouldReturnNullAfterDeleting() {\n\tAlert savedAlert = hibernateAlertDAO.getAlert(2);\n\tassertNotNull(savedAlert);\n\n\thibernateAlertDAO.deleteAlert(savedAlert);\n\n\tassertNull(hibernateAlertDAO.getAlert(2));\n}", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r440932916", "createdAt": "2020-06-16T15:17:32Z", "author": {"login": "ibacher"}, "path": "api/src/test/resources/org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<dataset>\n+\t<notification_alert alert_id=\"2\" creator=\"1\" text=\"Testing hibernate Dao\" date_created=\"2019-01-01 00:00:00.0\"  date_to_expire=\"2020-08-08 00:00:00.0\" satisfied_by_any=\"1\" alert_read=\"1\" uuid=\"16914264-e162-11df-9195-001e378eb69e\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNDg0Mw=="}, "originalCommit": {"oid": "db3a4d260a59f54bcc5bc62b163de7d6425b6255"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODE3NDc2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwODozOToyM1rOGmNBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo0NDozOVrOGmOvkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcxMjM3Mw==", "bodyText": "@ibacher   hi ian,i finally got the delete method working,thanks very much for the reviews.", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r442712373", "createdAt": "2020-06-19T08:39:23Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,68 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t\t\n \t}\n-\t\n \t/**\n \t * Test that you can get alerts\n \t * \n \t * @throws Exception\n \t */\n+\t\n \t@Test\n-\tpublic void shouldGetAlerts() {\n+\tpublic void saveAlert_shouldSaveAlertToDb() {\n+\t\tAlert saveAlert = hibernateAlertDAO.getAlert(2);\n+\t    hibernateAlertDAO.saveAlert(saveAlert);\n+\t    Assert.assertNotNull(saveAlert.getText());\n+\t}\n+\t\n+\t@Test\n+\tpublic void getAlert_shouldGetAlertById() {\n+\t\tAlert savedAlert = hibernateAlertDAO.getAlert(2);\n+\t\tint id=savedAlert.getAlertId();\n+\t\tAssert.assertEquals(id,2);\n \t\t\n-\t\tAlertService as = Context.getAlertService();\n-\t\t//System.out.println(as.getAllAlerts());\n+\t}\n+\t@Test\n+\tpublic void deleteAlert_shouldReturnNullAfterDeleting() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddad7287f532f3cd7c136ad9058056415f6edc03"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MDYyNQ==", "bodyText": "@ibacher could it be looking good for merging?", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r442740625", "createdAt": "2020-06-19T09:44:39Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,68 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t\t\n \t}\n-\t\n \t/**\n \t * Test that you can get alerts\n \t * \n \t * @throws Exception\n \t */\n+\t\n \t@Test\n-\tpublic void shouldGetAlerts() {\n+\tpublic void saveAlert_shouldSaveAlertToDb() {\n+\t\tAlert saveAlert = hibernateAlertDAO.getAlert(2);\n+\t    hibernateAlertDAO.saveAlert(saveAlert);\n+\t    Assert.assertNotNull(saveAlert.getText());\n+\t}\n+\t\n+\t@Test\n+\tpublic void getAlert_shouldGetAlertById() {\n+\t\tAlert savedAlert = hibernateAlertDAO.getAlert(2);\n+\t\tint id=savedAlert.getAlertId();\n+\t\tAssert.assertEquals(id,2);\n \t\t\n-\t\tAlertService as = Context.getAlertService();\n-\t\t//System.out.println(as.getAllAlerts());\n+\t}\n+\t@Test\n+\tpublic void deleteAlert_shouldReturnNullAfterDeleting() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcxMjM3Mw=="}, "originalCommit": {"oid": "ddad7287f532f3cd7c136ad9058056415f6edc03"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzkwMDI4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDowNjowNFrOGnCJ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDowNjowNFrOGnCJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4Mjk1MQ==", "bodyText": "I'm not sure what, exactly, is being tested here. Presumably, we should create a new alert (rather than loading one from the database), save it, and assert that we can call getAlert() to get the expected alert.", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r443582951", "createdAt": "2020-06-22T14:06:04Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,63 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n+\t\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t}\n+\n+\t@Test\n+\tpublic void saveAlert_shouldSaveAlertToDb() {\n+\t\tAlert saveAlert = hibernateAlertDAO.getAlert(2);\n+\t    hibernateAlertDAO.saveAlert(saveAlert);\n+\t    Assert.assertNotNull(saveAlert.getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90c1b64bfef654365d28ddcc7a7dcbf5d890fdcf"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzUxMzk2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0MjowNlrOGnlVrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMTo0MjowNlrOGnlVrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE1OTQwNg==", "bodyText": "@ibacher Hi ian,thanks for the reviews.I made the recommended changes here.cc @dkayiwa", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r444159406", "createdAt": "2020-06-23T11:42:06Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,65 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n+\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n+\t\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t}\n+\n+\t@Test\n+\tpublic void saveAlert_shouldSaveAlertToDb() {\n+\t\tAlert alert=new Alert();\n+\t\talert.setText(\"Coding time\");\n+\t\talert.setId(5);\n+\t    hibernateAlertDAO.saveAlert(alert);\n+\t    Assert.assertNull(Context.getAlertService().getAlert(5));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d7eb7e71013997bdf7909454e1f743e359fed4"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzYyODcxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMjoxNjoyOVrOGnmcCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzowMTowNlrOGq7LaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NzQxOQ==", "bodyText": "@ibacher   hi ian made a fix for this method,thanks", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r444177419", "createdAt": "2020-06-23T12:16:29Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,65 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n+\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n+\t\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t}\n+\n+\t@Test\n+\tpublic void saveAlert_shouldSaveAlertToDb() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7bacd8fada2e8d62854b263b82fa7ae4baca9af"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIwMTc5Ng==", "bodyText": "@ibacher   on squashing this, i get different commits that i never made using(git rebase -i master)", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r444201796", "createdAt": "2020-06-23T12:57:11Z", "author": {"login": "HerbertYiga"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,65 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n+\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n+\t\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t}\n+\n+\t@Test\n+\tpublic void saveAlert_shouldSaveAlertToDb() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NzQxOQ=="}, "originalCommit": {"oid": "a7bacd8fada2e8d62854b263b82fa7ae4baca9af"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY2Mjk1Mw==", "bodyText": "@HerbertYiga That's kind of expected. Those commits are probably the result of changed committed to master. You don't have to worry about squashing things, though, as GitHub will handle that for us.", "url": "https://github.com/openmrs/openmrs-core/pull/3195#discussion_r447662953", "createdAt": "2020-06-30T13:01:06Z", "author": {"login": "ibacher"}, "path": "api/src/test/java/org/openmrs/notification/db/hibernate/HibernateAlertDAOTest.java", "diffHunk": "@@ -9,34 +9,65 @@\n  */\n package org.openmrs.notification.db.hibernate;\n \n+import org.junit.Assert;\n+\n import org.junit.Before;\n import org.junit.Test;\n+import org.openmrs.User;\n import org.openmrs.api.context.Context;\n-import org.openmrs.notification.AlertService;\n+import org.openmrs.notification.Alert;\n import org.openmrs.test.BaseContextSensitiveTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n \n /**\n  * This class tests the hibernate alert data access. TODO Consider changing this and all subsequent\n  * tests to use dbunit\n  */\n public class HibernateAlertDAOTest extends BaseContextSensitiveTest {\n \t\n+\tprivate static final String DATA_XML = \"org/openmrs/api/db/hibernate/include/HibernateAlertDAOTestDataSet.xml\";\n+\t\n+\t@Autowired\n+\tprivate HibernateAlertDAO hibernateAlertDAO;\n+\t\n \t@Before\n-\tpublic void runBeforeEachTest() {\n-\t\tauthenticate();\n+\tpublic void setUp() {\n+\t\texecuteDataSet(DATA_XML);\n+\t}\n+\n+\t@Test\n+\tpublic void saveAlert_shouldSaveAlertToDb() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NzQxOQ=="}, "originalCommit": {"oid": "a7bacd8fada2e8d62854b263b82fa7ae4baca9af"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1453, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}