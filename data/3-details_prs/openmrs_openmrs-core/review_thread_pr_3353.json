{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODUyMTMy", "number": 3353, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzo1MzozM1rOEORLdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzo1MzozM1rOEORLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzk2OTgwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/util/jupiter/H2DatabaseIT.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzo1MzozM1rOGxUuGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTowNzoyOVrOGyCsdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3Mjg4OQ==", "bodyText": "@WolfSchlegel\n@achilep is working on migrating all openmrs-core tests to JUnit 5. We will need to support JUnit 4 tests for module developers for a while. That is why we sometimes have to duplicate/migrate test helpers (or base classes) like this one so we have a JUnit 4 version for module devs and a JUnit 5 version that we can directly use in openmrs-core. One day when modules have migrated over to JUnit 5 we can remove the JUnit 4 versions.\nI am wondering how this affects the H2DatabaseIT. Is that theoretically only used in openmrs-core? In what openmrs release was it added?\nI am asking so we can either move it to JUnit 5 if thats only internal.\nOr whether we have to provide a JUnit 4 and JUnit 5 version since module developers or others are interested in this class. In that case I would like to know if its ok to move it to package org.openmrs.test since this is where we have the test helpers/base classes like BaseContextSensitiveTest and so on. For JUnit 5 we created a subpackage org.openmrs.test.jupiter where the JUnit 5 versions of lets say BaseContextSensitiveTest are. This is where I would see this H2DatabaseIT in case that has to be supported in JUnit 4 & 5.\nPlease let us know what you think :)\nThanks a lot!", "url": "https://github.com/openmrs/openmrs-core/pull/3353#discussion_r454372889", "createdAt": "2020-07-14T13:53:33Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/util/jupiter/H2DatabaseIT.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.util.jupiter;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.List;\n+\n+import liquibase.Contexts;\n+import liquibase.Liquibase;\n+import liquibase.database.Database;\n+import liquibase.database.DatabaseFactory;\n+import liquibase.database.jvm.JdbcConnection;\n+import liquibase.exception.LiquibaseException;\n+import liquibase.resource.ClassLoaderResourceAccessor;\n+import org.h2.jdbc.JdbcSQLNonTransientException;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.openmrs.liquibase.LiquibaseProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class H2DatabaseIT implements LiquibaseProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a44f4be78d587042bde03719e9c1cde1534c0e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NDE3MA==", "bodyText": "Is that theoretically only used in openmrs-core? In what openmrs release was it added?\n\n\nThe test class was added in the context of https://issues.openmrs.org/browse/TRUNK-4830 and merged to master in mid May 2020.\nIt is safe to assume that this class is only used internally.\nThe class can be moved to a different package but the class name should not change as the name is used to distinguish between different kinds of integration test, please search for *DatabaseIT in openmrs-core/pom.xml", "url": "https://github.com/openmrs/openmrs-core/pull/3353#discussion_r454994170", "createdAt": "2020-07-15T11:53:21Z", "author": {"login": "WolfSchlegel"}, "path": "api/src/test/java/org/openmrs/util/jupiter/H2DatabaseIT.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.util.jupiter;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.List;\n+\n+import liquibase.Contexts;\n+import liquibase.Liquibase;\n+import liquibase.database.Database;\n+import liquibase.database.DatabaseFactory;\n+import liquibase.database.jvm.JdbcConnection;\n+import liquibase.exception.LiquibaseException;\n+import liquibase.resource.ClassLoaderResourceAccessor;\n+import org.h2.jdbc.JdbcSQLNonTransientException;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.openmrs.liquibase.LiquibaseProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class H2DatabaseIT implements LiquibaseProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3Mjg4OQ=="}, "originalCommit": {"oid": "22a44f4be78d587042bde03719e9c1cde1534c0e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyNjEzMw==", "bodyText": "thanks @WolfSchlegel", "url": "https://github.com/openmrs/openmrs-core/pull/3353#discussion_r455126133", "createdAt": "2020-07-15T15:07:29Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/util/jupiter/H2DatabaseIT.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This Source Code Form is subject to the terms of the Mozilla Public License,\n+ * v. 2.0. If a copy of the MPL was not distributed with this file, You can\n+ * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under\n+ * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.\n+ *\n+ * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS\n+ * graphic logo is a trademark of OpenMRS Inc.\n+ */\n+package org.openmrs.util.jupiter;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.List;\n+\n+import liquibase.Contexts;\n+import liquibase.Liquibase;\n+import liquibase.database.Database;\n+import liquibase.database.DatabaseFactory;\n+import liquibase.database.jvm.JdbcConnection;\n+import liquibase.exception.LiquibaseException;\n+import liquibase.resource.ClassLoaderResourceAccessor;\n+import org.h2.jdbc.JdbcSQLNonTransientException;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.openmrs.liquibase.LiquibaseProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class H2DatabaseIT implements LiquibaseProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM3Mjg4OQ=="}, "originalCommit": {"oid": "22a44f4be78d587042bde03719e9c1cde1534c0e"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1413, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}