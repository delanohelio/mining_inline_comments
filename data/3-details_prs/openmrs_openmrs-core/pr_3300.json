{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjM0OTk2", "number": 3300, "title": "    TRUNK-5813: Replace all ExpectedException Rules and the @Test(expected..)", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/TRUNK-5813\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-07-07T08:07:16Z", "url": "https://github.com/openmrs/openmrs-core/pull/3300", "merged": true, "mergeCommit": {"oid": "c9fb6a3c7190c8edd1c7fb3284b847baffdb15c0"}, "closed": true, "closedAt": "2020-07-08T03:15:46Z", "author": {"login": "achilep"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyhMMggH2gAyNDQ1MjM0OTk2OjE4NjE3NzMwNmU4Y2ViN2Y3MGFmZDU5OTkwYTFhNTVlOGQyMThhM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyxr75AFqTQ0NDM4NDAzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/186177306e8ceb7f70afd59990a1a55e8d218a3f", "committedDate": "2020-07-07T08:02:29Z", "message": "TRUNK-5813 Replace all ExpectedException Rules and the @Test(expected..3)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTEwNTAz", "url": "https://github.com/openmrs/openmrs-core/pull/3300#pullrequestreview-444110503", "createdAt": "2020-07-07T17:37:01Z", "commit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzozNzowMVrOGuI4gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzozNzowMVrOGuI4gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzIxNg==", "bodyText": "Why did you remove this line?\nFrom reading it I feel like its supposed to show that the existingConceptNameTag.getId() did not change. Thats why I believe it should stay. Unless you convince me it should not :)", "url": "https://github.com/openmrs/openmrs-core/pull/3300#discussion_r451033216", "createdAt": "2020-07-07T17:37:01Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/api/ConceptServiceTest.java", "diffHunk": "@@ -1251,13 +1246,12 @@ public void saveConceptNameTag_shouldNotSaveAConceptNameTagIfTagExists() {\n \t\tConceptNameTag secondNameTag = new ConceptNameTag();\n \t\tsecondNameTag.setTag(tag);\n \t\t\n-\t\tConceptNameTag existingConceptNameTag = conceptService.saveConceptNameTag(secondNameTag);\n-\t\t\n+\t\tassertThrows(Exception.class, () -> conceptService.saveConceptNameTag(secondNameTag));\n \t\tassertNull(secondNameTag.getId());\n-\t\tassertEquals(existingConceptNameTag.getId(), nameTag.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTUyMDY0", "url": "https://github.com/openmrs/openmrs-core/pull/3300#pullrequestreview-444152064", "createdAt": "2020-07-07T18:36:30Z", "commit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjozMVrOGuK5UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODozNjozMVrOGuK5UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2NjE5Mw==", "bodyText": "Thats right but you already wrapped the conceptService.saveConceptNameTag(secondNameTag) in an assertThrows. The assertThrows allows to do assertions after it. That is the reason why for example assertNull(secondNameTag.getId()); is even possible. So it should also be possible to keep \t\tassertEquals(existingConceptNameTag.getId(), nameTag.getId()); in.\nthis is how I expect it to look like\n\tassertThrows(Exception.class, () -> conceptService.saveConceptNameTag(secondNameTag));\n\tassertNull(secondNameTag.getId());\n\tassertEquals(existingConceptNameTag.getId(), nameTag.getId());", "url": "https://github.com/openmrs/openmrs-core/pull/3300#discussion_r451066193", "createdAt": "2020-07-07T18:36:31Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/api/ConceptServiceTest.java", "diffHunk": "@@ -1251,13 +1246,12 @@ public void saveConceptNameTag_shouldNotSaveAConceptNameTagIfTagExists() {\n \t\tConceptNameTag secondNameTag = new ConceptNameTag();\n \t\tsecondNameTag.setTag(tag);\n \t\t\n-\t\tConceptNameTag existingConceptNameTag = conceptService.saveConceptNameTag(secondNameTag);\n-\t\t\n+\t\tassertThrows(Exception.class, () -> conceptService.saveConceptNameTag(secondNameTag));\n \t\tassertNull(secondNameTag.getId());\n-\t\tassertEquals(existingConceptNameTag.getId(), nameTag.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzIxNg=="}, "originalCommit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Mzg0MDMy", "url": "https://github.com/openmrs/openmrs-core/pull/3300#pullrequestreview-444384032", "createdAt": "2020-07-08T03:15:38Z", "commit": {"oid": "186177306e8ceb7f70afd59990a1a55e8d218a3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4671, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}