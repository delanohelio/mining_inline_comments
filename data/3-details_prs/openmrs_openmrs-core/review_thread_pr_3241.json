{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTA5ODU4", "number": 3241, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMTozMTo0M1rOEROgOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxNTowOFrOEhqsmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDk4ODc0OnYy", "diffSide": "LEFT", "path": ".github/workflows/stale.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMTozMTo0M1rOG10-4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMTozMTo0M1rOG10-4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5NTc3Nw==", "bodyText": "Must have happened by git pull rebase....", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r459095777", "createdAt": "2020-07-22T21:31:43Z", "author": {"login": "fruether"}, "path": ".github/workflows/stale.yml", "diffHunk": "@@ -12,7 +12,6 @@ jobs:\n         repo-token: ${{ secrets.GITHUB_TOKEN }}\n         days-before-stale: 150\n         days-before-close: 30\n-        debug-only: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406a5a36094181617a2a080b16411c06ad0f20ba"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTczNDQyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODo1NjozMlrOG6Sw1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQyMTo0MDoyNlrOG6oCfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3ODAwNg==", "bodyText": "It seems to me we should at least run LuceneQuery.escapeQuery() on these parameters. But is there a way we could do this more cleanly, i.e., by passing these as paramters instead of a string replace operation?\nIf not, we should at least have this query stored as a constant string since we really just need to do some replacements right before it's executed.", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r463778006", "createdAt": "2020-07-31T18:56:32Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "diffHunk": "@@ -112,6 +112,28 @@ public PersonLuceneQuery(SessionFactory sessionFactory) {\n \t * @param gender the gender of the person to search  \n \t * @return the LuceneQuery that returns Persons with a soundex representation of the firstName and other defined search criteria\n \t */\n+\tpublic LuceneQuery<PersonName> getSoundexPersonNameSearchOnThreeNames(String n1, String n2, String n3,  Integer birthyear, boolean includeVoided, String gender) {\n+\t\tString threeNameQuery = \"\";\n+\t\tString givenNameMatchCondition = \"(givenNameSoundex:n1^6 OR givenNameSoundex:n2^2 OR givenNameSoundex:n3)\";\n+\t\tString middleNameMatchCondition = \"(middleNameSoundex:n1^2 OR middleNameSoundex:n2^6 OR middleNameSoundex:n3^1)\";\n+\t\tString familyNameMatchCondition = \"(familyNameSoundex:n1^1 OR familyNameSoundex:n2^2 OR familyNameSoundex:n3^6)\";\n+\t\tString familyName2MatchCondition = \"(familyName2Soundex:n1^1 OR familyName2Soundex:n2^2 OR familyName2Soundex:n3^6)\";\n+\t\t\n+\t\tthreeNameQuery = givenNameMatchCondition+ \" OR \" + middleNameMatchCondition + \" OR \" + familyNameMatchCondition + \" OR \" + familyName2MatchCondition;\n+ \t\tthreeNameQuery = \"(\" +  threeNameQuery.replace(\"n1\", n1).replace(\"n2\", n2).replace(\"n3\", n3) + \")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406a5a36094181617a2a080b16411c06ad0f20ba"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyNjU5MQ==", "bodyText": "What I could do is to directly replace in the query definition the n1, n2, n3 parameter with the correct value but this would made the code less readable I guess.\nI think I would prefer to make it a constant and then replacing the values.\nCan you elaborate a bit more on what your thoughts are on \"passing these as parameters\"?\nAnyways, the escapeQuery can be added easily. I will probably do that till next Sunday!\nThanks!", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r464126591", "createdAt": "2020-08-02T21:40:26Z", "author": {"login": "fruether"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "diffHunk": "@@ -112,6 +112,28 @@ public PersonLuceneQuery(SessionFactory sessionFactory) {\n \t * @param gender the gender of the person to search  \n \t * @return the LuceneQuery that returns Persons with a soundex representation of the firstName and other defined search criteria\n \t */\n+\tpublic LuceneQuery<PersonName> getSoundexPersonNameSearchOnThreeNames(String n1, String n2, String n3,  Integer birthyear, boolean includeVoided, String gender) {\n+\t\tString threeNameQuery = \"\";\n+\t\tString givenNameMatchCondition = \"(givenNameSoundex:n1^6 OR givenNameSoundex:n2^2 OR givenNameSoundex:n3)\";\n+\t\tString middleNameMatchCondition = \"(middleNameSoundex:n1^2 OR middleNameSoundex:n2^6 OR middleNameSoundex:n3^1)\";\n+\t\tString familyNameMatchCondition = \"(familyNameSoundex:n1^1 OR familyNameSoundex:n2^2 OR familyNameSoundex:n3^6)\";\n+\t\tString familyName2MatchCondition = \"(familyName2Soundex:n1^1 OR familyName2Soundex:n2^2 OR familyName2Soundex:n3^6)\";\n+\t\t\n+\t\tthreeNameQuery = givenNameMatchCondition+ \" OR \" + middleNameMatchCondition + \" OR \" + familyNameMatchCondition + \" OR \" + familyName2MatchCondition;\n+ \t\tthreeNameQuery = \"(\" +  threeNameQuery.replace(\"n1\", n1).replace(\"n2\", n2).replace(\"n3\", n3) + \")\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3ODAwNg=="}, "originalCommit": {"oid": "406a5a36094181617a2a080b16411c06ad0f20ba"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzM2NzU5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMjowOVrOHPGoug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjowMDoxNFrOHPOVuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5OTQxOA==", "bodyText": "The calls to replace() here are redundant aren't they? I.e., we already did this substitution above.", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r485599418", "createdAt": "2020-09-09T13:12:09Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "diffHunk": "@@ -112,6 +117,26 @@ public PersonLuceneQuery(SessionFactory sessionFactory) {\n \t * @param gender the gender of the person to search  \n \t * @return the LuceneQuery that returns Persons with a soundex representation of the firstName and other defined search criteria\n \t */\n+\tpublic LuceneQuery<PersonName> getSoundexPersonNameSearchOnThreeNames(String n1, String n2, String n3,  Integer birthyear, boolean includeVoided, String gender) {\n+\t\t\n+\t\tString threeNameQuery =  THREE_NAME_QUERY.replace(\"n1\", LuceneQuery.escapeQuery(n1))\n+\t\t\t.replace(\"n2\", LuceneQuery.escapeQuery(n2))\n+\t\t\t.replace(\"n3\", LuceneQuery.escapeQuery(n3));\n+\t\t\n+\t\tthreeNameQuery = \"(\" +  threeNameQuery.replace(\"n1\", n1).replace(\"n2\", n2).replace(\"n3\", n3) + \")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f755017582ff3757441af981a265804635241793"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNTYyNA==", "bodyText": "You are right", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r485725624", "createdAt": "2020-09-09T16:00:14Z", "author": {"login": "fruether"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/PersonLuceneQuery.java", "diffHunk": "@@ -112,6 +117,26 @@ public PersonLuceneQuery(SessionFactory sessionFactory) {\n \t * @param gender the gender of the person to search  \n \t * @return the LuceneQuery that returns Persons with a soundex representation of the firstName and other defined search criteria\n \t */\n+\tpublic LuceneQuery<PersonName> getSoundexPersonNameSearchOnThreeNames(String n1, String n2, String n3,  Integer birthyear, boolean includeVoided, String gender) {\n+\t\t\n+\t\tString threeNameQuery =  THREE_NAME_QUERY.replace(\"n1\", LuceneQuery.escapeQuery(n1))\n+\t\t\t.replace(\"n2\", LuceneQuery.escapeQuery(n2))\n+\t\t\t.replace(\"n3\", LuceneQuery.escapeQuery(n3));\n+\t\t\n+\t\tthreeNameQuery = \"(\" +  threeNameQuery.replace(\"n1\", n1).replace(\"n2\", n2).replace(\"n3\", n3) + \")\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5OTQxOA=="}, "originalCommit": {"oid": "f755017582ff3757441af981a265804635241793"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzM4MDEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/db/hibernate/HibernatePersonDAO.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxNTowOFrOHPGwhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoyOTozNFrOHPSlaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwMTQxNA==", "bodyText": "Some comments on this function now:\n\nWe seem to have eliminated the need for the result variable at all, so that should probably be removed.\nThe line StringBuilder q = ... should be moved to the final else block, since that's the only place it's necessary.\nEither the final else block should be removed or everything after the end of the final else block should be added into the final else block as that common logic only applies when we continue to support a case for multiple names.", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r485601414", "createdAt": "2020-09-09T13:15:08Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/HibernatePersonDAO.java", "diffHunk": "@@ -202,23 +226,7 @@ public void setSessionFactory(SessionFactory sessionFactory) {\n \t\t} else if (names.length == 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f755017582ff3757441af981a265804635241793"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyNjExNg==", "bodyText": "Make sense! I am planing to also refactor the else block. But for nut it should be good to move everything in it!", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r485726116", "createdAt": "2020-09-09T16:01:02Z", "author": {"login": "fruether"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/HibernatePersonDAO.java", "diffHunk": "@@ -202,23 +226,7 @@ public void setSessionFactory(SessionFactory sessionFactory) {\n \t\t} else if (names.length == 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwMTQxNA=="}, "originalCommit": {"oid": "f755017582ff3757441af981a265804635241793"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5NTE3OQ==", "bodyText": "Fixed all these issues in the new commit!", "url": "https://github.com/openmrs/openmrs-core/pull/3241#discussion_r485795179", "createdAt": "2020-09-09T17:29:34Z", "author": {"login": "fruether"}, "path": "api/src/main/java/org/openmrs/api/db/hibernate/HibernatePersonDAO.java", "diffHunk": "@@ -202,23 +226,7 @@ public void setSessionFactory(SessionFactory sessionFactory) {\n \t\t} else if (names.length == 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwMTQxNA=="}, "originalCommit": {"oid": "f755017582ff3757441af981a265804635241793"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1476, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}