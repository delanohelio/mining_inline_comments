{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDk4MDMz", "number": 3209, "title": "TRUNK-5740 | Initialize lazy properties while caching for True,False and unknown concepts.", "bodyText": "This has been tested by putting the initializeLazyPropertiesForConcept method in our module activator. After that we didn't face the issue for last two days.\nIssue Link: https://issues.openmrs.org/browse/TRUNK-5740\nOpenMRS Talk: https://talk.openmrs.org/t/random-lazy-initialization-while-making-encounter-post-with-full-representation-as-response/28427", "createdAt": "2020-05-20T04:27:19Z", "url": "https://github.com/openmrs/openmrs-core/pull/3209", "merged": true, "mergeCommit": {"oid": "23eddbdf211ad32b2f31d6dff9a9c3f741660571"}, "closed": true, "closedAt": "2020-05-21T10:36:28Z", "author": {"login": "mddubey"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjE28gAFqTQxNTEwODkyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjIjfLABqjMzNTYzMDk0MjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTA4OTI4", "url": "https://github.com/openmrs/openmrs-core/pull/3209#pullrequestreview-415108928", "createdAt": "2020-05-20T08:33:04Z", "commit": {"oid": "00c7650a39e33a9cd0dba55541aafe51ea153f0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODozMzowNFrOGYA7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODozMzowNFrOGYA7bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgzNDIyMA==", "bodyText": "You can get the lazily loaded property from Concept.hbm.xml", "url": "https://github.com/openmrs/openmrs-core/pull/3209#discussion_r427834220", "createdAt": "2020-05-20T08:33:04Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java", "diffHunk": "@@ -1225,15 +1229,30 @@ private void setBooleanConcepts() {\n \t\t\ttrueConcept = Context.getConceptService().getConcept(\n \t\t\t    Integer.parseInt(Context.getAdministrationService().getGlobalProperty(\n \t\t\t        OpenmrsConstants.GLOBAL_PROPERTY_TRUE_CONCEPT)));\n+\t\t\tinitializeLazyPropertiesForConcept(trueConcept);\n+\t\t\t\n \t\t\tfalseConcept = Context.getConceptService().getConcept(\n \t\t\t    Integer.parseInt(Context.getAdministrationService().getGlobalProperty(\n \t\t\t        OpenmrsConstants.GLOBAL_PROPERTY_FALSE_CONCEPT)));\n+\t\t\tinitializeLazyPropertiesForConcept(falseConcept);\n \t\t}\n \t\tcatch (NumberFormatException e) {\n \t\t\tlog.warn(\"Concept ids for boolean concepts should be numbers\");\n \t\t}\n \t}\n-\t\n+\n+\tprivate void initializeLazyPropertiesForConcept(Concept concept) {\n+\t\tHibernate.initialize(concept.getRetiredBy());\n+\t\tHibernate.initialize(concept.getCreator());\n+\t\tHibernate.initialize(concept.getChangedBy());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c7650a39e33a9cd0dba55541aafe51ea153f0c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTEyNDc0", "url": "https://github.com/openmrs/openmrs-core/pull/3209#pullrequestreview-415112474", "createdAt": "2020-05-20T08:37:28Z", "commit": {"oid": "00c7650a39e33a9cd0dba55541aafe51ea153f0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODozNzoyOFrOGYBGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODozNzoyOFrOGYBGpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgzNzA5Mw==", "bodyText": "Do you think there is any value in the original code, of setting the unknown concept via a new static method, instead of doing it just the same way as for the true and false concepts?", "url": "https://github.com/openmrs/openmrs-core/pull/3209#discussion_r427837093", "createdAt": "2020-05-20T08:37:28Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/impl/ConceptServiceImpl.java", "diffHunk": "@@ -1195,9 +1196,12 @@ public Concept getTrueConcept() {\n \tpublic Concept getUnknownConcept() {\n \t\tif (unknownConcept == null) {\n \t\t\ttry {\n-\t\t\t\tConceptServiceImpl.setStaticUnknownConcept(Context.getConceptService().getConcept(\n-\t\t\t\t    Integer.parseInt(Context.getAdministrationService().getGlobalProperty(\n-\t\t\t\t        OpenmrsConstants.GLOBAL_PROPERTY_UNKNOWN_CONCEPT))));\n+\t\t\t\tConcept unknownConcept = Context.getConceptService().getConcept(\n+\t\t\t\t\tInteger.parseInt(Context.getAdministrationService().getGlobalProperty(\n+\t\t\t\t\t\tOpenmrsConstants.GLOBAL_PROPERTY_UNKNOWN_CONCEPT)));\n+\t\t\t\tinitializeLazyPropertiesForConcept(unknownConcept);\n+\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c7650a39e33a9cd0dba55541aafe51ea153f0c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3e64754660037f5c21e12f39acb82829a80a892", "author": {"user": {"login": "mddubey", "name": "Mritunjay Dubey"}}, "url": "https://github.com/openmrs/openmrs-core/commit/a3e64754660037f5c21e12f39acb82829a80a892", "committedDate": "2020-05-20T12:50:31Z", "message": "TFS-5740 | Initilize lazy propeties while caching for True,False and unknown concepts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00c7650a39e33a9cd0dba55541aafe51ea153f0c", "author": {"user": {"login": "mddubey", "name": "Mritunjay Dubey"}}, "url": "https://github.com/openmrs/openmrs-core/commit/00c7650a39e33a9cd0dba55541aafe51ea153f0c", "committedDate": "2020-05-20T04:24:53Z", "message": "Initilize lazy propeties while caching for True,False and unknown concepts"}, "afterCommit": {"oid": "a3e64754660037f5c21e12f39acb82829a80a892", "author": {"user": {"login": "mddubey", "name": "Mritunjay Dubey"}}, "url": "https://github.com/openmrs/openmrs-core/commit/a3e64754660037f5c21e12f39acb82829a80a892", "committedDate": "2020-05-20T12:50:31Z", "message": "TFS-5740 | Initilize lazy propeties while caching for True,False and unknown concepts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4807, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}