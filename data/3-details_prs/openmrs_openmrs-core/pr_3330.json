{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODM1NTQ1", "number": 3330, "title": "TRUNK-5816: Migrate unit tests to Junit5", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/TRUNK-5816\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-07-12T00:54:35Z", "url": "https://github.com/openmrs/openmrs-core/pull/3330", "merged": true, "mergeCommit": {"oid": "b61e6e6699441b8fe7a804cbb7d44f84863f3a1a"}, "closed": true, "closedAt": "2020-07-12T16:55:40Z", "author": {"login": "achilep"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0CGGYgFqTQ0NjgzODE4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0Pz_7gFqTQ0Njg5NDQwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODM4MTgz", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446838183", "createdAt": "2020-07-12T00:56:36Z", "commit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwMDo1NjozNlrOGwQRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwMDo1NjozNlrOGwQRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI1MTQ4OA==", "bodyText": "the ide cancel  the static import .", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453251488", "createdAt": "2020-07-12T00:56:36Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -13,14 +13,7 @@\n import static org.hamcrest.core.Is.is;\n import static org.hamcrest.core.IsNot.not;\n import static org.hamcrest.core.IsNull.nullValue;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertThrows;\n-import static org.junit.Assert.assertTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODM4MjIz", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446838223", "createdAt": "2020-07-12T00:57:55Z", "commit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwMDo1Nzo1NVrOGwQR5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwMDo1Nzo1NVrOGwQR5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI1MTU1Nw==", "bodyText": "it does not convert assertThrows automatically .", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453251557", "createdAt": "2020-07-12T00:57:55Z", "author": {"login": "achilep"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -13,14 +13,7 @@\n import static org.hamcrest.core.Is.is;\n import static org.hamcrest.core.IsNot.not;\n import static org.hamcrest.core.IsNull.nullValue;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertThrows;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n+import static org.junit.jupiter.api.Assertions.assertThrows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODQ1MTgy", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446845182", "createdAt": "2020-07-12T04:32:16Z", "commit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDozMjoxNlrOGwRJyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDozMjoxNlrOGwRJyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTg2Ng==", "bodyText": "can you please use static imports for the assertions", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453265866", "createdAt": "2020-07-12T04:32:16Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/LocationTest.java", "diffHunk": "@@ -36,8 +36,8 @@ public void isInHierarchy_shouldShouldFindLocationInHierarchy() {\n \t\tlocationGrandParent.addChildLocation(locationParent);\n \t\tlocationParent.addChildLocation(locationChild);\n \t\t\n-\t\tassertTrue(Location.isInHierarchy(locationChild, locationParent));\n-\t\tassertTrue(Location.isInHierarchy(locationChild, locationGrandParent));\n+\t\tAssertions.assertTrue(Location.isInHierarchy(locationChild, locationParent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODQ1ODU0", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446845854", "createdAt": "2020-07-12T04:51:29Z", "commit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDo1MToyOVrOGwRO6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNDo1MToyOVrOGwRO6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NzE3Nw==", "bodyText": "did you even use the live template in here?\nor do you mean the intellij junit 4 to 5 migration tool?\nWhat can help a bit is to exclude a few packages from import suggestions by IntelliJ. So when you let IntelliJ import a method for you it will automatically choose the one from the jupiter package\nYou need to exclude these\n\ngroovy.util.GroovyTestCase.*\njunit.framework.*\norg.junit.Assert.*\nsee\n\n\nand dont forget to set the * imports to a high number like 999\n\nwhen I now migrate using IntelliJ. I can then do a search & replace of Assertions. with ``. This of course leads to compile errors which I can then fix with letting IntelliJ fix the imports (one by one; not sure if there is a fix all). WIth the excluded packages setting at the top it chooses the correct static imports :)\nI can use <F2> to jump to the compile errors and then for me on a mac its alt+enter to autofix the missing import. So that is quite quick", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453267177", "createdAt": "2020-07-12T04:51:29Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -13,14 +13,7 @@\n import static org.hamcrest.core.Is.is;\n import static org.hamcrest.core.IsNot.not;\n import static org.hamcrest.core.IsNull.nullValue;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertThrows;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n+import static org.junit.jupiter.api.Assertions.assertThrows;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI1MTU1Nw=="}, "originalCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODUxNDE3", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446851417", "createdAt": "2020-07-12T06:53:20Z", "commit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjo1MzoyMFrOGwR0ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjo1MzoyMFrOGwR0ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NjgzNQ==", "bodyText": "Please try my settings using the Migrate to Junit 5 on the single class here. That for me gives a nice diff with static imports.", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453276835", "createdAt": "2020-07-12T06:53:20Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/LocationTest.java", "diffHunk": "@@ -36,8 +36,8 @@ public void isInHierarchy_shouldShouldFindLocationInHierarchy() {\n \t\tlocationGrandParent.addChildLocation(locationParent);\n \t\tlocationParent.addChildLocation(locationChild);\n \t\t\n-\t\tassertTrue(Location.isInHierarchy(locationChild, locationParent));\n-\t\tassertTrue(Location.isInHierarchy(locationChild, locationGrandParent));\n+\t\tAssertions.assertTrue(Location.isInHierarchy(locationChild, locationParent));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NTg2Ng=="}, "originalCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c216c441c0b09064ac041e7a0b9c81854abf4fed", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/c216c441c0b09064ac041e7a0b9c81854abf4fed", "committedDate": "2020-07-12T00:47:34Z", "message": "TRUNK-5816: Migrate unit tests to Junit5"}, "afterCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/87f24fe4faa5be5966d3d686b8f5d25d9f642eec", "committedDate": "2020-07-12T14:34:55Z", "message": "TRUNK-5816: Migrate unit tests to Junit5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODg1NTY2", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446885566", "createdAt": "2020-07-12T14:55:02Z", "commit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNDo1NTowM1rOGwU2dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNDo1Njo0OFrOGwU3Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNjQ1NQ==", "bodyText": "not sure why but the arguments should not be swapped here. the signature is https://junit.org/junit5/docs/5.0.1/api/org/junit/jupiter/api/Assertions.html#assertEquals-double-double-\nexpected, then actual. in this case we expect the size to be 1\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(obsGroup.getGroupMembers().size(), 1, \"Duplicate add should not increase the grouped obs size\");\n          \n          \n            \n            \t\tassertEquals(1, obsGroup.getGroupMembers().size(), \"Duplicate add should not increase the grouped obs size\");\n          \n      \n    \n    \n  \n\nthese things matter in case of error. otherwise we get a confusing message", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453326455", "createdAt": "2020-07-12T14:55:03Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -165,14 +164,13 @@ public void shouldAddandRemoveObsToGroup() throws Exception {\n \t\t// check duplicate add. should only be one\n \t\tobsGroup.addGroupMember(obs);\n \t\tassertTrue(obsGroup.hasGroupMembers(false));\n-\t\tassertEquals(\"Duplicate add should not increase the grouped obs size\", 1, obsGroup.getGroupMembers().size());\n+\t\tassertEquals(obsGroup.getGroupMembers().size(), 1, \"Duplicate add should not increase the grouped obs size\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNjUzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(obsGroup.getGroupMembers().size(), 1, \"Removing a non existent obs should not decrease the number of grouped obs\");\n          \n          \n            \n            \t\tassertEquals(1, obsGroup.getGroupMembers().size(), \"Removing a non existent obs should not decrease the number of grouped obs\");", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453326535", "createdAt": "2020-07-12T14:55:37Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -165,14 +164,13 @@ public void shouldAddandRemoveObsToGroup() throws Exception {\n \t\t// check duplicate add. should only be one\n \t\tobsGroup.addGroupMember(obs);\n \t\tassertTrue(obsGroup.hasGroupMembers(false));\n-\t\tassertEquals(\"Duplicate add should not increase the grouped obs size\", 1, obsGroup.getGroupMembers().size());\n+\t\tassertEquals(obsGroup.getGroupMembers().size(), 1, \"Duplicate add should not increase the grouped obs size\");\n \t\t\n \t\tObs obs2 = new Obs(2);\n \t\t\n \t\tobsGroup.removeGroupMember(obs2);\n \t\tassertTrue(obsGroup.hasGroupMembers(false));\n-\t\tassertEquals(\"Removing a non existent obs should not decrease the number of grouped obs\", 1, obsGroup\n-\t\t        .getGroupMembers().size());\n+\t\tassertEquals(obsGroup.getGroupMembers().size(), 1, \"Removing a non existent obs should not decrease the number of grouped obs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNjYxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(members.size(), 3, \"set of all members should have length of 3\");\n          \n          \n            \n            \t\tassertEquals(3, members.size(), \"set of all members should have length of 3\");", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453326616", "createdAt": "2020-07-12T14:56:15Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -415,11 +413,11 @@ public void getGroupMembers_shouldGetAllGroupMembersIfPassedTrueAndNonvoidedIfPa\n \t\tmembers.add(voided);\n \t\tparent.setGroupMembers(members);\n \t\tmembers = parent.getGroupMembers(true);\n-\t\tassertEquals(\"set of all members should have length of 3\", 3, members.size());\n+\t\tassertEquals(members.size(), 3, \"set of all members should have length of 3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNjY0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(members.size(), 2, \"set of non-voided should have length of 2\");\n          \n          \n            \n            \t\tassertEquals(2, members.size(), \"set of non-voided should have length of 2\");", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453326641", "createdAt": "2020-07-12T14:56:28Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -415,11 +413,11 @@ public void getGroupMembers_shouldGetAllGroupMembersIfPassedTrueAndNonvoidedIfPa\n \t\tmembers.add(voided);\n \t\tparent.setGroupMembers(members);\n \t\tmembers = parent.getGroupMembers(true);\n-\t\tassertEquals(\"set of all members should have length of 3\", 3, members.size());\n+\t\tassertEquals(members.size(), 3, \"set of all members should have length of 3\");\n \t\tmembers = parent.getGroupMembers(false);\n-\t\tassertEquals(\"set of non-voided should have length of 2\", 2, members.size());\n+\t\tassertEquals(members.size(), 2, \"set of non-voided should have length of 2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNjY3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(members.size(), 2, \"default should return non-voided with length of 2\");\n          \n          \n            \n            \t\tassertEquals(2, members.size(), \"default should return non-voided with length of 2\");", "url": "https://github.com/openmrs/openmrs-core/pull/3330#discussion_r453326675", "createdAt": "2020-07-12T14:56:48Z", "author": {"login": "teleivo"}, "path": "api/src/test/java/org/openmrs/ObsTest.java", "diffHunk": "@@ -415,11 +413,11 @@ public void getGroupMembers_shouldGetAllGroupMembersIfPassedTrueAndNonvoidedIfPa\n \t\tmembers.add(voided);\n \t\tparent.setGroupMembers(members);\n \t\tmembers = parent.getGroupMembers(true);\n-\t\tassertEquals(\"set of all members should have length of 3\", 3, members.size());\n+\t\tassertEquals(members.size(), 3, \"set of all members should have length of 3\");\n \t\tmembers = parent.getGroupMembers(false);\n-\t\tassertEquals(\"set of non-voided should have length of 2\", 2, members.size());\n+\t\tassertEquals(members.size(), 2, \"set of non-voided should have length of 2\");\n \t\tmembers = parent.getGroupMembers(); // should be same as false\n-\t\tassertEquals(\"default should return non-voided with length of 2\", 2, members.size());\n+\t\tassertEquals(members.size(), 2, \"default should return non-voided with length of 2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8f2e88f024cf37d2f1783c353c4142518ba24a6", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/e8f2e88f024cf37d2f1783c353c4142518ba24a6", "committedDate": "2020-07-12T15:37:25Z", "message": "TRUNK-5816: Migrate unit tests to Junit5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87f24fe4faa5be5966d3d686b8f5d25d9f642eec", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/87f24fe4faa5be5966d3d686b8f5d25d9f642eec", "committedDate": "2020-07-12T14:34:55Z", "message": "TRUNK-5816: Migrate unit tests to Junit5"}, "afterCommit": {"oid": "e8f2e88f024cf37d2f1783c353c4142518ba24a6", "author": {"user": null}, "url": "https://github.com/openmrs/openmrs-core/commit/e8f2e88f024cf37d2f1783c353c4142518ba24a6", "committedDate": "2020-07-12T15:37:25Z", "message": "TRUNK-5816: Migrate unit tests to Junit5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk0NDAz", "url": "https://github.com/openmrs/openmrs-core/pull/3330#pullrequestreview-446894403", "createdAt": "2020-07-12T16:55:31Z", "commit": {"oid": "e8f2e88f024cf37d2f1783c353c4142518ba24a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4699, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}