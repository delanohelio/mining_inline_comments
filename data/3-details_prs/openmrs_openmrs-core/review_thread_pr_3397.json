{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzM0NTgz", "number": 3397, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowNzo0NVrOESFZbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MzowMlrOETzbrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4MjU1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowNzo0NVrOG3HcXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowNzo0NVrOG3HcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjgxMw==", "bodyText": "What is AllOrderSetAttributeTypes?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446813", "createdAt": "2020-07-25T21:07:45Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -120,6 +122,8 @@\n \tOrderSetAttribute getOrderSetAttributeByUuid(String uuid);\n \n \t/**\n+\t * Get AllOrderSetAttributeTypes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4MjkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowODoyM1rOG3Hchw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowODoyM1rOG3Hchw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0Njg1NQ==", "bodyText": "What does the above do?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446855", "createdAt": "2020-07-25T21:08:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -128,6 +132,8 @@\n \tList<OrderSetAttributeType> getAllOrderSetAttributeTypes();\n \n \t/**\n+\t * Get OrderSetAttributeType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4MzM3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowOTowN1rOG3HcuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTowOTowN1rOG3HcuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjkwNA==", "bodyText": "Can you look at existing javadocs for examples?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446904", "createdAt": "2020-07-25T21:09:07Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get OrderSetAttribute by uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4NTY5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMjoxNFrOG3Hdxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMjoxNFrOG3Hdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzE3NQ==", "bodyText": "Just incase one adds more data to the dataset, just use count and count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447175", "createdAt": "2020-07-25T21:12:14Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4NjIyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzowNVrOG3HeCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzowNVrOG3HeCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI0MQ==", "bodyText": "Use count and count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447241", "createdAt": "2020-07-25T21:13:05Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mzk4NjU1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzo0MVrOG3HeNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToxMzo0MVrOG3HeNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI4NA==", "bodyText": "What as the original name?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447284", "createdAt": "2020-07-25T21:13:41Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType lat = service.getOrderSetAttributeType(1);\n+\t\tlat.setName(\"A new name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc40501063842a156abce596c0ac02e40e720de"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODc2MzQyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMTo0NlrOG3x07A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MTo0OVrOG4KrHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTIyOA==", "bodyText": "I would drop database. That is a detail of the data access layer.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141228", "createdAt": "2020-07-27T20:11:46Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid from database", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0ODMxOQ==", "bodyText": "i have removed it", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461548319", "createdAt": "2020-07-28T12:41:49Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid from database", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTIyOA=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODc2NTgzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMjozN1rOG3x2ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0MToyOVrOG4KqUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTY0Mg==", "bodyText": "What is oat?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141642", "createdAt": "2020-07-27T20:12:37Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(1);\n+\t\toat.setName(\"A new name\");\n+\t\tservice.saveOrderSetAttributeType(oat);\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(\"A new name\", service.getOrderSetAttributeType(1).getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#unretireOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void unretireOrderSetAttributeType_shouldUnretireARetiredOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0ODExNQ==", "bodyText": "it was a abbreviation for orderSetAttributeType but i have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461548115", "createdAt": "2020-07-28T12:41:29Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(1);\n+\t\toat.setName(\"A new name\");\n+\t\tservice.saveOrderSetAttributeType(oat);\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(\"A new name\", service.getOrderSetAttributeType(1).getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#unretireOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void unretireOrderSetAttributeType_shouldUnretireARetiredOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTY0Mg=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODc2Nzg2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDoxMzoyMlrOG3x37A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoyNDozNlrOG4desA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng==", "bodyText": "What is the use of this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141996", "createdAt": "2020-07-27T20:13:22Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0NzI0MA==", "bodyText": "its a sanity check", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461547240", "createdAt": "2020-07-28T12:40:04Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTU5OA==", "bodyText": "A sanity check like assertEquals( x + 0, x)?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461549598", "createdAt": "2020-07-28T12:43:57Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NTU2Mg==", "bodyText": "@dkayiwa when i increment with ( x + 1, x) it goes against the real order set attributes that i have in the dataset hence throwing an assertion failure between whats actual and whats is expected", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461765562", "createdAt": "2020-07-28T17:53:05Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NzgwNw==", "bodyText": "Let me ask differently, what value does + 0 add to this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461767807", "createdAt": "2020-07-28T17:56:37Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NjQzMg==", "bodyText": "honestly nothing and have removed it", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461856432", "createdAt": "2020-07-28T20:24:36Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, "originalCommit": {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NTkwNDc1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjowMDoxN1rOG41LnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzowMDo1MFrOG43RlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA==", "bodyText": "What is the use of the above assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462244764", "createdAt": "2020-07-29T12:00:17Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3NjYyNA==", "bodyText": "@dkayiwa  is it necessary to leave out the DAOTests since they're exposed through the service layer ?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462276624", "createdAt": "2020-07-29T12:57:00Z", "author": {"login": "tendomart"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA=="}, "originalCommit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3OTA2MA==", "bodyText": "Let us include them.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462279060", "createdAt": "2020-07-29T13:00:50Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA=="}, "originalCommit": {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzc3NzE4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MjoxMVrOG5HaHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MjoxMVrOG5HaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MzM4OQ==", "bodyText": "previously", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543389", "createdAt": "2020-07-29T19:42:11Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -171,7 +179,7 @@\n \tOrderSetAttributeType retireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType, String reason);\n \n \t/**\n-\t * Restores a orderSet attribute type that was previous retired in the database\n+\t * Restores a orderSet attribute type that was previous retired ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzc3OTMzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0Mjo1NlrOG5HblA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0Mjo1NlrOG5HblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzc2NA==", "bodyText": "a or an?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543764", "createdAt": "2020-07-29T19:42:56Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -182,7 +190,7 @@\n \tOrderSetAttributeType unretireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType);\n \n \t/**\n-\t * Completely removes a orderSet attribute type from the database\n+\t * Completely removes a orderSet attribute type ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzc4MDU2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0MzoyM1rOG5HcZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjowNDo0MVrOG5UTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzk3Mw==", "bodyText": "What is orderSet?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543973", "createdAt": "2020-07-29T19:43:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -148,7 +156,7 @@\n \tOrderSetAttributeType getOrderSetAttributeTypeByUuid(String uuid);\n \n \t/**\n-\t * Creates or updates the given orderSet attribute type in the database\n+\t * Creates or updates the given orderSet attribute type ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NDYxOQ==", "bodyText": "i have fixed it", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462754619", "createdAt": "2020-07-30T06:04:41Z", "author": {"login": "gitcliff"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -148,7 +156,7 @@\n \tOrderSetAttributeType getOrderSetAttributeTypeByUuid(String uuid);\n \n \t/**\n-\t * Creates or updates the given orderSet attribute type in the database\n+\t * Creates or updates the given orderSet attribute type ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzk3Mw=="}, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzc4MzU0OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NDoxOVrOG5HeTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NDoxOVrOG5HeTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NDQ2Mg==", "bodyText": "use count - 1\nwhich will ensure that the test does not fail when the number of records in the dataset is changed.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462544462", "createdAt": "2020-07-29T19:44:19Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Nzc4ODM4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTozOVrOG5HhPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTozOVrOG5HhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NTIxNA==", "bodyText": "use count + 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462545214", "createdAt": "2020-07-29T19:45:39Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM2MzU1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1Mzo0MlrOG5fzDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1Mzo0MlrOG5fzDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Mjk4OQ==", "bodyText": "Can you also document all the params?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462942989", "createdAt": "2020-07-30T11:53:42Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid \n+\t * \n \t * @param uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM2NjQwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NDo0OVrOG5f06g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo1NjoyN1rOG5hykA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng==", "bodyText": "Do we need this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462943466", "createdAt": "2020-07-30T11:54:49Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NjI1NQ==", "bodyText": "yes ,the purpose is to first check the number of order set attribute types in the dataset before we can do the purging", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462956255", "createdAt": "2020-07-30T12:21:08Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MjY1Mw==", "bodyText": "Isn't that taken care of with? initialOrderSetAttributeTypesCount - 1", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462962653", "createdAt": "2020-07-30T12:33:23Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzI3OA==", "bodyText": "You are simply interested in purging reducing the number by one. It does not matter whether they were 2, 5, 10, or a million.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462963278", "createdAt": "2020-07-30T12:34:35Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NTYzMg==", "bodyText": "oh i see,,,thanks for the clarification", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462975632", "createdAt": "2020-07-30T12:56:27Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM2OTk2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NjowMVrOG5f3BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjozNTowOFrOG5hDrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ==", "bodyText": "What is the use of this assertion?", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944005", "createdAt": "2020-07-30T11:56:01Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NDA2MQ==", "bodyText": "@dkayiwa the use of this assertion is first to check and confirm the number of order set attribute types that we currently have in the dataset before we introduce a new one to make it 3", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462954061", "createdAt": "2020-07-30T12:17:01Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzYzMQ==", "bodyText": "Same as above.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462963631", "createdAt": "2020-07-30T12:35:08Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM3MzE2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTo1NzowNVrOG5f48w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjoxODozMVrOG5ghTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDQ5OQ==", "bodyText": "Problem with hard coding the number as 2 is that when the test dataset gets changed with more of less records, the test will fail.", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944499", "createdAt": "2020-07-30T11:57:05Z", "author": {"login": "dkayiwa"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NDgzMQ==", "bodyText": "thanks ,,,going to to fix it", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462954831", "createdAt": "2020-07-30T12:18:31Z", "author": {"login": "gitcliff"}, "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDQ5OQ=="}, "originalCommit": {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjAxMDcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MzowMlrOG5vtKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODo1MzowMlrOG5vtKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwMzYyNQ==", "bodyText": "remove specifies", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r463203625", "createdAt": "2020-07-30T18:53:02Z", "author": {"login": "dkayiwa"}, "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,7 +110,9 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n-\t * @param uuid\n+\t * Get order set attribute by uuid \n+\t * \n+\t * @param uuid specifies the order set attribute uuid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5927187133c5a51662824d8b63bb23fffeac046"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1331, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}