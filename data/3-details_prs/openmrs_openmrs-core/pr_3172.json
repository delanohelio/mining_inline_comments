{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDcxOTY0", "number": 3172, "title": "TRUNK-5726: Use Lambda expressions in UserServiceImpl#checkPrivileges(Role).", "bodyText": "Description of what I changed\n\n\nIssue I worked on\n\n\n\n\nsee https://issues.openmrs.org/browse/TRUNK-5726\nChecklist: I completed these to help reviewers :)\n\n\n\n\n My pull request only contains ONE single commit\n(the number above, next to the 'Commits' tab is 1).\nNo? -> read here on how to squash multiple commits into one\n\n\n My IDE is configured to follow the code style of this project.\nNo? Unsure? -> configure your IDE, format the code and add the changes with git add . && git commit --amend\n\n\n I have added tests to cover my changes. (If you refactored\nexisting code that was well tested you do not have to add tests)\nNo? -> write tests and add them to this commit git add . && git commit --amend\n\n\n I ran mvn clean package right before creating this pull request and\nadded all formatting changes to my commit.\nNo? -> execute above command\n\n\n All new and existing tests passed.\nNo? -> figure out why and add the fix to your commit. It is your responsibility to make sure your code works.\n\n\n My pull request is based on the latest changes of the master branch.\nNo? Unsure? -> execute command git pull --rebase upstream master", "createdAt": "2020-04-07T06:45:57Z", "url": "https://github.com/openmrs/openmrs-core/pull/3172", "merged": true, "mergeCommit": {"oid": "c7b463fa63c38b831eaf91482d839d4bbe555be3"}, "closed": true, "closedAt": "2020-04-08T13:50:05Z", "author": {"login": "sherrif10"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVTzdrAFqTM4OTE0Mzk5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVoN5-gFqTM4OTk5MjgyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTQzOTk5", "url": "https://github.com/openmrs/openmrs-core/pull/3172#pullrequestreview-389143999", "createdAt": "2020-04-07T13:59:06Z", "commit": {"oid": "6c5719745acce0a3d0f1ebc1d2fd2e78d5c8ccbc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo1OTowNlrOGCE7HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDowMjozN1rOGCFFPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMTAwNQ==", "bodyText": "This should actually be APIException, the + should be a , and the other part should be wrapped in new Object[] { } so this gets properly localised.", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404831005", "createdAt": "2020-04-07T13:59:06Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java", "diffHunk": "@@ -535,15 +535,14 @@ public void purgeUser(User user, boolean cascade) throws APIException {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\t\t\n-\t\tif (privileges != null) {\n-\t\t\tfor (Privilege p : privileges) {\n-\t\t\t\tif (!Context.hasPrivilege(p.getPrivilege())) {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Privilege required: \" + p);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+\n+\t\tOptional.ofNullable(role.getPrivileges())\n+\t\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).collect(Collectors.toSet()))\n+\t\t\t\t.ifPresent(missing -> {\n+\t\t\t\t\tthrow new APIAuthenticationException(\"Role.you.must.have.privileges: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5719745acce0a3d0f1ebc1d2fd2e78d5c8ccbc"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMzU5OA==", "bodyText": "Also the full thing can be re-written as:\nOptional.ofNullable(role.getPrivileges())\n\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n\t\t\t\t.distinct().collect(Collectors.joining(\", \")))\n\t\t\t\t.ifPresent(missing -> {\n\t\t\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n\t\t\t\t});\nWhich is preferable since we only have one call to Collectors and one call to stream() (in the streaming API, these are the expensive operations which actual result in computation being done).", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404833598", "createdAt": "2020-04-07T14:02:37Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java", "diffHunk": "@@ -535,15 +535,14 @@ public void purgeUser(User user, boolean cascade) throws APIException {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\t\t\n-\t\tif (privileges != null) {\n-\t\t\tfor (Privilege p : privileges) {\n-\t\t\t\tif (!Context.hasPrivilege(p.getPrivilege())) {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Privilege required: \" + p);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+\n+\t\tOptional.ofNullable(role.getPrivileges())\n+\t\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).collect(Collectors.toSet()))\n+\t\t\t\t.ifPresent(missing -> {\n+\t\t\t\t\tthrow new APIAuthenticationException(\"Role.you.must.have.privileges: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMTAwNQ=="}, "originalCommit": {"oid": "6c5719745acce0a3d0f1ebc1d2fd2e78d5c8ccbc"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MjQxMTQw", "url": "https://github.com/openmrs/openmrs-core/pull/3172#pullrequestreview-389241140", "createdAt": "2020-04-07T15:37:28Z", "commit": {"oid": "129d1925d4f0cc0fb4e35e6f68f50611d0e7401e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTozNzoyOFrOGCJoVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTozNzoyOFrOGCJoVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODExOQ==", "bodyText": "The indentation here is primarily spaces. Can you convert this to tabs?", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404908119", "createdAt": "2020-04-07T15:37:28Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java", "diffHunk": "@@ -535,15 +535,14 @@ public void purgeUser(User user, boolean cascade) throws APIException {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\t\t\n-\t\tif (privileges != null) {\n-\t\t\tfor (Privilege p : privileges) {\n-\t\t\t\tif (!Context.hasPrivilege(p.getPrivilege())) {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Privilege required: \" + p);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+\n+\t\tOptional.ofNullable(role.getPrivileges())\n+\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n+\t\t\t\t.distinct().collect(Collectors.joining(\", \")))\n+\t\t\t\t.ifPresent(missing -> {\n+\t\t\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n+\t\t\t\t});\n+      \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "129d1925d4f0cc0fb4e35e6f68f50611d0e7401e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Mzk2ODMw", "url": "https://github.com/openmrs/openmrs-core/pull/3172#pullrequestreview-389396830", "createdAt": "2020-04-07T18:49:06Z", "commit": {"oid": "bfce99adc011c99582caf979000bfda1d978bfac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b79ca85402f113ac9463c0306c33fce540e56364", "author": {"user": {"login": "sherrif10", "name": "MAGEMBE SHARIF"}}, "url": "https://github.com/openmrs/openmrs-core/commit/b79ca85402f113ac9463c0306c33fce540e56364", "committedDate": "2020-04-08T08:45:35Z", "message": "reverting new changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Nzg1NTk2", "url": "https://github.com/openmrs/openmrs-core/pull/3172#pullrequestreview-389785596", "createdAt": "2020-04-08T09:04:23Z", "commit": {"oid": "b79ca85402f113ac9463c0306c33fce540e56364"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTkyODI4", "url": "https://github.com/openmrs/openmrs-core/pull/3172#pullrequestreview-389992828", "createdAt": "2020-04-08T13:49:53Z", "commit": {"oid": "b79ca85402f113ac9463c0306c33fce540e56364"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4747, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}