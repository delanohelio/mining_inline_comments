{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2OTk3OTg1", "number": 3266, "title": "TRUNK-5665: User should not extend extend BaseOpenmrsMetadata", "bodyText": "Description of what I changed\nI changing User to extend BaseOpenmrsObject from BaseOpenmrsMetadata   and added the Auditable and Retireable interfaces to implement. Then added the following fields : creator, dateCreated, changedBy, dateChanged, retiredBy, retireReason, retired, and dateRetired.\nIssue I worked on\nhttps://issues.openmrs.org/browse/TRUNK-5665", "createdAt": "2020-06-19T09:38:22Z", "url": "https://github.com/openmrs/openmrs-core/pull/3266", "merged": true, "mergeCommit": {"oid": "198b7bcc00225bf288f8ef47b129cca1abf1b3f6"}, "closed": true, "closedAt": "2020-06-30T15:55:56Z", "author": {"login": "jwnasambu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct0hs-gFqTQzNTEzMzYzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwWylygH2gAyNDM2OTk3OTg1OmUwODBhMGI1NGRlMWI3MTc4OTcxMTUzZDM5NTljMTIyYzk3MjkwMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTMzNjM3", "url": "https://github.com/openmrs/openmrs-core/pull/3266#pullrequestreview-435133637", "createdAt": "2020-06-22T17:29:10Z", "commit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyOToxMFrOGnKWLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo0NDowNFrOGnK0lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzE2Nw==", "bodyText": "@jwnasambu So here, we'll want to select this version:\npublic class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n\nThis code above is a Git conflict message. If shows two different versions of this section that git cannot resolve. These sections are divided by the =======. So we can treat the top as option 1 and the part underneath as option 2. <<<<<<< is used to indicate where the conflict begins and >>>>>>> indicates where it ends, so we don't want to modify anything outside of that.\nIn this, as I said, we want to go with option 2, so we'll get rid of the text that makes up option 1 and the conflict markers:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            @Entity\n          \n          \n            \n            @Table(name = \"users\")\n          \n          \n            \n            @Cacheable\n          \n          \n            \n            @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n          \n          \n            \n            /*\n          \n          \n            \n            *User inherits name and description properties from BaseOpenmrsMetadata but they don't exist in the users table since \n          \n          \n            \n            *they are not used, because these field exist in BaseOpenmrsData and they are marked as persistent, hibernate generates \n          \n          \n            \n            *a query containing these columns which of course fails to execute because of missing columns, so we introduce this \n          \n          \n            \n            *dummy table containing these columns to 'please' hibernate until we fix the Class hierarchy see TRUNK-5665\n          \n          \n            \n            */\n          \n          \n            \n            @SecondaryTable(name = \"users_unused_fields\")\n          \n          \n            \n            @AttributeOverrides({\n          \n          \n            \n                    @AttributeOverride(name = \"name\", column = @Column(table = \"users_unused_fields\", name = \"name\", insertable = false, updatable = false)),\n          \n          \n            \n                    @AttributeOverride(name = \"description\", column = @Column(table = \"users_unused_fields\", name = \"description\", insertable = false, updatable = false)) })\n          \n          \n            \n            public class User extends BaseOpenmrsObject  implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n          \n          \n            \n            =======\n          \n          \n            \n            public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n          \n          \n            \n            public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443717167", "createdAt": "2020-06-22T17:29:10Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -35,14 +36,31 @@\n  * key-value pairs for either quick info or display specific info that needs to be persisted (like\n  * locale preferences, search options, etc)\n  */\n-public class User extends BaseChangeableOpenmrsMetadata implements java.io.Serializable, Attributable<User> {\n-\t\n-\tpublic static final long serialVersionUID = 2L;\n+<<<<<<< HEAD\n+@Entity\n+@Table(name = \"users\")\n+@Cacheable\n+@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+/*\n+*User inherits name and description properties from BaseOpenmrsMetadata but they don't exist in the users table since \n+*they are not used, because these field exist in BaseOpenmrsData and they are marked as persistent, hibernate generates \n+*a query containing these columns which of course fails to execute because of missing columns, so we introduce this \n+*dummy table containing these columns to 'please' hibernate until we fix the Class hierarchy see TRUNK-5665\n+*/\n+@SecondaryTable(name = \"users_unused_fields\")\n+@AttributeOverrides({\n+        @AttributeOverride(name = \"name\", column = @Column(table = \"users_unused_fields\", name = \"name\", insertable = false, updatable = false)),\n+        @AttributeOverride(name = \"description\", column = @Column(table = \"users_unused_fields\", name = \"description\", insertable = false, updatable = false)) })\n+public class User extends BaseOpenmrsObject  implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n+=======\n+public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMDAxMA==", "bodyText": "Here we have something similar. However, unlike the above, we don't just cleanly want option 1 or option 2. We primarily want what's in option 2, but we also want the fields (but not the annotations) defined in option 1.\nIf you want to understand why you get this conflict, it's because the version of master you were working from had this commit, but it's since been backed out; this is also why we want option 2 with some additions. While we don't want to add all the Hibernate annotations in, we do want the fields that used to be defined in BaseChangeableOpenmrsMetadata that are required to support the Auditable adn Retireable interfaces.\nSo in this case, we want to end up with something like this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t@ManyToOne(optional = false)\n          \n          \n            \n            \t@JoinColumn(name = \"creator\")\n          \n          \n            \n            \tprivate User creator;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@Column(name = \"date_created\", nullable = false)\n          \n          \n            \n            \tprivate Date dateCreated;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@ManyToOne\n          \n          \n            \n            \t@JoinColumn(name = \"changed_by\")\n          \n          \n            \n            \tprivate User changedBy;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@Column(name = \"date_changed\")\n          \n          \n            \n            \tprivate Date dateChanged;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@Column(name = \"retired\", nullable = false)\n          \n          \n            \n            \tprivate String retired;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@ManyToOne\n          \n          \n            \n            \t@JoinColumn(name = \"retired_by\")\n          \n          \n            \n            \tprivate User retiredBy;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@Column(name = \"retire_reason\", length = 255)\n          \n          \n            \n            \tprivate String retireReason;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@Column(name = \"date_retired\")\n          \n          \n            \n            \tprivate Date dateRetired;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@SuppressWarnings(\"deprecation\")\n          \n          \n            \n            \t@ManyToMany\n          \n          \n            \n            \t@JoinTable(name = \"user_role\", joinColumns = @JoinColumn(name = \"user_id\"), inverseJoinColumns = @JoinColumn(name = \"role\"))\n          \n          \n            \n            \t@LazyCollection(LazyCollectionOption.FALSE)\n          \n          \n            \n            \t@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n          \n          \n            \n            \t@Cascade({ CascadeType.SAVE_UPDATE, CascadeType.MERGE, CascadeType.EVICT })\n          \n          \n            \n            \tprivate Set<Role> roles;\n          \n          \n            \n            \t\n          \n          \n            \n            \t@SuppressWarnings(\"deprecation\")\n          \n          \n            \n            \t@ElementCollection\n          \n          \n            \n            \t@CollectionTable(name = \"user_property\", joinColumns = @JoinColumn(name = \"user_id\", nullable = false))\n          \n          \n            \n            \t@MapKeyColumn(name = \"property\", length = 100)\n          \n          \n            \n            \t@Column(name = \"property_value\")\n          \n          \n            \n            \t@Cascade({ CascadeType.SAVE_UPDATE, CascadeType.MERGE, CascadeType.EVICT })\n          \n          \n            \n            =======\n          \n          \n            \n            \tprivate Set<Role> roles;\n          \n          \n            \n            \t\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n          \n          \n            \n            \tprivate User creator;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate Date dateCreated;\n          \n          \n            \n            \n          \n          \n            \n            \tprivate User changedBy;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate Date dateChanged;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate String retired;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate User retiredBy;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate String retireReason;\n          \n          \n            \n            \t\n          \n          \n            \n            \tprivate Date dateRetired;\n          \n          \n            \n            \n          \n          \n            \n            \tprivate Set<Role> roles;", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443720010", "createdAt": "2020-06-22T17:34:42Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -53,14 +71,74 @@\n \t\n \tprivate String email;\n \t\n+<<<<<<< HEAD\n+\t@ManyToOne(optional = false)\n+\t@JoinColumn(name = \"creator\")\n+\tprivate User creator;\n+\t\n+\t@Column(name = \"date_created\", nullable = false)\n+\tprivate Date dateCreated;\n+\t\n+\t@ManyToOne\n+\t@JoinColumn(name = \"changed_by\")\n+\tprivate User changedBy;\n+\t\n+\t@Column(name = \"date_changed\")\n+\tprivate Date dateChanged;\n+\t\n+\t@Column(name = \"retired\", nullable = false)\n+\tprivate String retired;\n+\t\n+\t@ManyToOne\n+\t@JoinColumn(name = \"retired_by\")\n+\tprivate User retiredBy;\n+\t\n+\t@Column(name = \"retire_reason\", length = 255)\n+\tprivate String retireReason;\n+\t\n+\t@Column(name = \"date_retired\")\n+\tprivate Date dateRetired;\n+\t\n+\t@SuppressWarnings(\"deprecation\")\n+\t@ManyToMany\n+\t@JoinTable(name = \"user_role\", joinColumns = @JoinColumn(name = \"user_id\"), inverseJoinColumns = @JoinColumn(name = \"role\"))\n+\t@LazyCollection(LazyCollectionOption.FALSE)\n+\t@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+\t@Cascade({ CascadeType.SAVE_UPDATE, CascadeType.MERGE, CascadeType.EVICT })\n \tprivate Set<Role> roles;\n \t\n+\t@SuppressWarnings(\"deprecation\")\n+\t@ElementCollection\n+\t@CollectionTable(name = \"user_property\", joinColumns = @JoinColumn(name = \"user_id\", nullable = false))\n+\t@MapKeyColumn(name = \"property\", length = 100)\n+\t@Column(name = \"property_value\")\n+\t@Cascade({ CascadeType.SAVE_UPDATE, CascadeType.MERGE, CascadeType.EVICT })\n+=======\n+\tprivate Set<Role> roles;\n+\t\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMDY1Mg==", "bodyText": "These issues all arise because I think, of the version I committed here. Here and below, we should go with option 2.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443720652", "createdAt": "2020-06-22T17:35:54Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMDcyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443720721", "createdAt": "2020-06-22T17:36:03Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMDg1OQ==", "bodyText": "Option 2 is, indentally, leaving that space blank.", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443720859", "createdAt": "2020-06-22T17:36:19Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMDY1Mg=="}, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMTA1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443721051", "createdAt": "2020-06-22T17:36:39Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMTE0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443721142", "createdAt": "2020-06-22T17:36:49Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNDQ4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\treturn null;\n          \n          \n            \n            =======\n          \n          \n            \n            \t\treturn retired;\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n          \n          \n            \n            \t\treturn retired;", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443724486", "createdAt": "2020-06-22T17:43:09Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean isRetired() {\n+<<<<<<< HEAD\n+\t\treturn null;\n+=======\n+\t\treturn retired;\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNDU3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443724572", "createdAt": "2020-06-22T17:43:20Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean isRetired() {\n+<<<<<<< HEAD\n+\t\treturn null;\n+=======\n+\t\treturn retired;\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean getRetired() {\n+\t\treturn retired;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetired(Boolean retired) {\n+\t\tthis.retired = retired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNDcxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443724711", "createdAt": "2020-06-22T17:43:37Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean isRetired() {\n+<<<<<<< HEAD\n+\t\treturn null;\n+=======\n+\t\treturn retired;\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean getRetired() {\n+\t\treturn retired;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetired(Boolean retired) {\n+\t\tthis.retired = retired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getRetiredBy() {\n+\t\treturn retiredBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetiredBy(User retiredBy) {\n+\t\tthis.retiredBy = retiredBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNDc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            =======\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443724793", "createdAt": "2020-06-22T17:43:47Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean isRetired() {\n+<<<<<<< HEAD\n+\t\treturn null;\n+=======\n+\t\treturn retired;\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean getRetired() {\n+\t\treturn retired;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetired(Boolean retired) {\n+\t\tthis.retired = retired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getRetiredBy() {\n+\t\treturn retiredBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetiredBy(User retiredBy) {\n+\t\tthis.retiredBy = retiredBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateRetired() {\n+\t\treturn dateRetired;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateRetired(Date dateRetired) {\n+\t\tthis.dateRetired = dateRetired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 228}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNDk0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tthis.retireReason = retireReason;\n          \n          \n            \n            <<<<<<< HEAD\n          \n          \n            \n            \t\t\n          \n          \n            \n            \t}\n          \n          \n            \n            \t\n          \n          \n            \n            =======\n          \n          \n            \n            \t}\n          \n          \n            \n            >>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n          \n          \n            \n            \t\tthis.retireReason = retireReason;\n          \n          \n            \n            \t}", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443724949", "createdAt": "2020-06-22T17:44:04Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -593,5 +671,127 @@ public Integer getId() {\n \tpublic void setId(Integer id) {\n \t\tsetUserId(id);\n \t}\n+\n+\t@Override\n+\tpublic User getCreator() {\n+\t\treturn creator;\n+\t}\n+\n+\t@Override\n+\tpublic void setCreator(User creator) {\n+\t\tthis.creator = creator;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateCreated() {\n+\t\treturn dateCreated;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateCreated(Date dateCreated) {\n+\t\tthis.dateCreated = dateCreated;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getChangedBy() {\n+\t\treturn changedBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setChangedBy(User changedBy) {\n+\t\tthis.changedBy = changedBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateChanged() {\n+\t\treturn dateChanged;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateChanged(Date dateChanged) {\n+\t\tthis.dateChanged = dateChanged;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean isRetired() {\n+<<<<<<< HEAD\n+\t\treturn null;\n+=======\n+\t\treturn retired;\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Boolean getRetired() {\n+\t\treturn retired;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetired(Boolean retired) {\n+\t\tthis.retired = retired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic User getRetiredBy() {\n+\t\treturn retiredBy;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetiredBy(User retiredBy) {\n+\t\tthis.retiredBy = retiredBy;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic Date getDateRetired() {\n+\t\treturn dateRetired;\n+\t}\n+\n+\t@Override\n+\tpublic void setDateRetired(Date dateRetired) {\n+\t\tthis.dateRetired = dateRetired;\n+<<<<<<< HEAD\n+\t\t\n+=======\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238\n+\t}\n+\n+\t@Override\n+\tpublic String getRetireReason() {\n+\t\treturn retireReason;\n+\t}\n+\n+\t@Override\n+\tpublic void setRetireReason(String retireReason) {\n+\t\tthis.retireReason = retireReason;\n+<<<<<<< HEAD\n+\t\t\n+\t}\n \t\n+=======\n+\t}\n+>>>>>>> 7f1edc92d80496f5d1c86e9e0b968292c5ebf238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a78aa1d08de9a2093509cb57f9ce09f5c96efd5"}, "originalPosition": 245}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjI0MDY3", "url": "https://github.com/openmrs/openmrs-core/pull/3266#pullrequestreview-435224067", "createdAt": "2020-06-22T19:48:24Z", "commit": {"oid": "fa3f5e6de38c954444807e22662a253184e38187"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTo0ODoyNFrOGnOokg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTo0OTo0MVrOGnOq2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NzQxMA==", "bodyText": "So here we really did want to end up with replacing all of this with one line:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Entity\n          \n          \n            \n            @Table(name = \"users\")\n          \n          \n            \n            @Cacheable\n          \n          \n            \n            @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n          \n          \n            \n            /*\n          \n          \n            \n            *User inherits name and description properties from BaseOpenmrsMetadata but they don't exist in the users table since \n          \n          \n            \n            *they are not used, because these field exist in BaseOpenmrsData and they are marked as persistent, hibernate generates \n          \n          \n            \n            *a query containing these columns which of course fails to execute because of missing columns, so we introduce this \n          \n          \n            \n            *dummy table containing these columns to 'please' hibernate until we fix the Class hierarchy see TRUNK-5665\n          \n          \n            \n            */\n          \n          \n            \n            @SecondaryTable(name = \"users_unused_fields\")\n          \n          \n            \n            @AttributeOverrides({\n          \n          \n            \n                    @AttributeOverride(name = \"name\", column = @Column(table = \"users_unused_fields\", name = \"name\", insertable = false, updatable = false)),\n          \n          \n            \n                    @AttributeOverride(name = \"description\", column = @Column(table = \"users_unused_fields\", name = \"description\", insertable = false, updatable = false)) })\n          \n          \n            \n            public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {\n          \n          \n            \n            public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443787410", "createdAt": "2020-06-22T19:48:24Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -35,14 +36,27 @@\n  * key-value pairs for either quick info or display specific info that needs to be persisted (like\n  * locale preferences, search options, etc)\n  */\n-public class User extends BaseChangeableOpenmrsMetadata implements java.io.Serializable, Attributable<User> {\n-\t\n-\tpublic static final long serialVersionUID = 2L;\n+@Entity\n+@Table(name = \"users\")\n+@Cacheable\n+@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+/*\n+*User inherits name and description properties from BaseOpenmrsMetadata but they don't exist in the users table since \n+*they are not used, because these field exist in BaseOpenmrsData and they are marked as persistent, hibernate generates \n+*a query containing these columns which of course fails to execute because of missing columns, so we introduce this \n+*dummy table containing these columns to 'please' hibernate until we fix the Class hierarchy see TRUNK-5665\n+*/\n+@SecondaryTable(name = \"users_unused_fields\")\n+@AttributeOverrides({\n+        @AttributeOverride(name = \"name\", column = @Column(table = \"users_unused_fields\", name = \"name\", insertable = false, updatable = false)),\n+        @AttributeOverride(name = \"description\", column = @Column(table = \"users_unused_fields\", name = \"description\", insertable = false, updatable = false)) })\n+public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3f5e6de38c954444807e22662a253184e38187"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4Nzk5NA==", "bodyText": "Similarly, the rest of the Git merge issues really do need to be resolved before this will compile, because otherwise you end up with things like this that Java doesn't know how to process: <<<<<<< HEAD", "url": "https://github.com/openmrs/openmrs-core/pull/3266#discussion_r443787994", "createdAt": "2020-06-22T19:49:41Z", "author": {"login": "ibacher"}, "path": "api/src/main/java/org/openmrs/User.java", "diffHunk": "@@ -35,14 +36,27 @@\n  * key-value pairs for either quick info or display specific info that needs to be persisted (like\n  * locale preferences, search options, etc)\n  */\n-public class User extends BaseChangeableOpenmrsMetadata implements java.io.Serializable, Attributable<User> {\n-\t\n-\tpublic static final long serialVersionUID = 2L;\n+@Entity\n+@Table(name = \"users\")\n+@Cacheable\n+@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+/*\n+*User inherits name and description properties from BaseOpenmrsMetadata but they don't exist in the users table since \n+*they are not used, because these field exist in BaseOpenmrsData and they are marked as persistent, hibernate generates \n+*a query containing these columns which of course fails to execute because of missing columns, so we introduce this \n+*dummy table containing these columns to 'please' hibernate until we fix the Class hierarchy see TRUNK-5665\n+*/\n+@SecondaryTable(name = \"users_unused_fields\")\n+@AttributeOverrides({\n+        @AttributeOverride(name = \"name\", column = @Column(table = \"users_unused_fields\", name = \"name\", insertable = false, updatable = false)),\n+        @AttributeOverride(name = \"description\", column = @Column(table = \"users_unused_fields\", name = \"description\", insertable = false, updatable = false)) })\n+public class User extends BaseOpenmrsObject implements java.io.Serializable, Attributable<User>, Auditable, Retireable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4NzQxMA=="}, "originalCommit": {"oid": "fa3f5e6de38c954444807e22662a253184e38187"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e080a0b54de1b7178971153d3959c122c9729026", "author": {"user": {"login": "jwnasambu", "name": null}}, "url": "https://github.com/openmrs/openmrs-core/commit/e080a0b54de1b7178971153d3959c122c9729026", "committedDate": "2020-06-30T14:47:37Z", "message": "TRUNK-5665: User should not extend BaseOpenmrsMetadata"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4896, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}