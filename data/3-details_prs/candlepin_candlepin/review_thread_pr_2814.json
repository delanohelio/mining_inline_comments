{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDYwNDc3", "number": 2814, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0NDozOFrOEnfHjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0Mjo1M1rOEpCVyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODM5NzU4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0NDozOFrOHYGs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0NDozOFrOHYGs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAzNzY3OA==", "bodyText": "As per our conversation, there's more things to discuss here. The ideal solution is to not fetch the entitlement objects into memory at all (they're 60k+ after all), but instead do a batch delete by entitlement IDs like is done elsewhere.\nTo do that though, we first have to make sure we do anything else that needs to be done (revokeEntitlements does a lot of stuff, and we need to find out if we even need to do most of those in this specific use case (UndoImportsJob)).", "url": "https://github.com/candlepin/candlepin/pull/2814#discussion_r495037678", "createdAt": "2020-09-25T14:44:38Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/controller/CandlepinPoolManager.java", "diffHunk": "@@ -2114,9 +2114,13 @@ public void deletePool(Pool pool) {\n         Event event = eventFactory.poolDeleted(pool);\n \n         // Must do a full revoke for all entitlements:\n-        for (Entitlement e : poolCurator.entitlementsIn(pool)) {\n+        List<Entitlement> entitlements = poolCurator.entitlementsIn(pool);\n+        for (Entitlement e : entitlements) {\n             e.setDeletedFromPool(true);\n-            revokeEntitlement(e);\n+        }\n+\n+        for (List<Entitlement> partition : Iterables.partition(entitlements, 1000)) {\n+            revokeEntitlements(partition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57dabf3e128f0ccbfe30499428b9b666ba618417"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDY1NDE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/async/tasks/UndoImportsJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0Mjo1M1rOHaeLmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNTowMzoxNlrOHaiEdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUxOTUxMg==", "bodyText": "No need to pass another argument here, the deletePools method has an overloaded version which only accepts a single list of pools. Other than that, this looks good", "url": "https://github.com/candlepin/candlepin/pull/2814#discussion_r497519512", "createdAt": "2020-09-30T13:42:53Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/async/tasks/UndoImportsJob.java", "diffHunk": "@@ -164,11 +167,12 @@ public void execute(JobExecutionContext context) throws JobExecutionException {\n         log.info(\"Deleting all pools originating from manifests for owner/org: {}\", displayName);\n \n         List<Pool> pools = this.poolManager.listPoolsByOwner(owner).list();\n-        for (Pool pool : pools) {\n-            if (this.poolManager.isManaged(pool)) {\n-                this.poolManager.deletePool(pool);\n-            }\n-        }\n+        this.poolManager.deletePools(\n+            pools.stream()\n+                .filter(this.poolManager::isManaged)\n+                .collect(Collectors.toList()),\n+            new ArrayList<>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39e956aee83669ec3240d7c4defd71f63b4abca"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU4MzIyMw==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2814#discussion_r497583223", "createdAt": "2020-09-30T15:03:16Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/async/tasks/UndoImportsJob.java", "diffHunk": "@@ -164,11 +167,12 @@ public void execute(JobExecutionContext context) throws JobExecutionException {\n         log.info(\"Deleting all pools originating from manifests for owner/org: {}\", displayName);\n \n         List<Pool> pools = this.poolManager.listPoolsByOwner(owner).list();\n-        for (Pool pool : pools) {\n-            if (this.poolManager.isManaged(pool)) {\n-                this.poolManager.deletePool(pool);\n-            }\n-        }\n+        this.poolManager.deletePools(\n+            pools.stream()\n+                .filter(this.poolManager::isManaged)\n+                .collect(Collectors.toList()),\n+            new ArrayList<>()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUxOTUxMg=="}, "originalCommit": {"oid": "f39e956aee83669ec3240d7c4defd71f63b4abca"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4088, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}