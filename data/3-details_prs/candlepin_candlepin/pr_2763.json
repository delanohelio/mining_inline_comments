{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTE0MDIy", "number": 2763, "title": "1855830: Cannot autobind pools asynchronously", "bodyText": "", "createdAt": "2020-07-24T07:00:01Z", "url": "https://github.com/candlepin/candlepin/pull/2763", "merged": true, "mergeCommit": {"oid": "723239ddb29981362246550a35f8d7327548a435"}, "closed": true, "closedAt": "2020-07-24T20:08:51Z", "author": {"login": "Januson"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3_EYHgBqjM1ODI4OTQxMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4ECkYAFqTQ1NDg4NTIyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4eed6303061829824d6c52886f2f0aa47c3f9ca0", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/4eed6303061829824d6c52886f2f0aa47c3f9ca0", "committedDate": "2020-07-24T06:40:53Z", "message": "1855830: Cannot autobind pools asynchronously"}, "afterCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/c66fefe4570caafae16102885bbd0040c579ede9", "committedDate": "2020-07-24T07:39:20Z", "message": "1855830: Cannot autobind pools asynchronously"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NzkyOTA0", "url": "https://github.com/candlepin/candlepin/pull/2763#pullrequestreview-454792904", "createdAt": "2020-07-24T10:47:05Z", "commit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMDo0NzowNlrOG2rAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMDo1NTowNlrOG2rMUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDkxNw==", "bodyText": "This method is deprecated. We should only use @cp.create_pool (from candlepin_api.rb) from now on", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459980917", "createdAt": "2020-07-24T10:47:06Z", "author": {"login": "nikosmoum"}, "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDk3OA==", "bodyText": "same here, use create_pool", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459980978", "createdAt": "2020-07-24T10:47:15Z", "author": {"login": "nikosmoum"}, "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzE3Mw==", "bodyText": "redundant line", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983173", "createdAt": "2020-07-24T10:53:03Z", "author": {"login": "nikosmoum"}, "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true\n+\n+    status = @cp.consume_product(nil, {:uuid => consumer.uuid, :async => true})\n+    wait_for_job(status['id'], 15)\n+    entitlements = @cp.list_entitlements(:uuid => consumer.uuid)\n+    entitlements.size.should == 2\n+    # print (\"entitlements: \" + entitlements.inspect())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MzcxOA==", "bodyText": "I don't think we need all this. We only care the the consume_product resulted in a job that didn't fail, and 2 entitlements were attached", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983718", "createdAt": "2020-07-24T10:54:29Z", "author": {"login": "nikosmoum"}, "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true\n+\n+    status = @cp.consume_product(nil, {:uuid => consumer.uuid, :async => true})\n+    wait_for_job(status['id'], 15)\n+    entitlements = @cp.list_entitlements(:uuid => consumer.uuid)\n+    entitlements.size.should == 2\n+    # print (\"entitlements: \" + entitlements.inspect())\n+    status = @cp.get_purpose_compliance(consumer.uuid)\n+    status['status'].should == 'matched'\n+    status['nonCompliantAddOns'].size.should == 0\n+    status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4Mzk1NQ==", "bodyText": "Same here, no need for these checks, since we only care about the entitlement job not throwing an error and actually providing entitlements", "url": "https://github.com/candlepin/candlepin/pull/2763#discussion_r459983955", "createdAt": "2020-07-24T10:55:06Z", "author": {"login": "nikosmoum"}, "path": "server/spec/autobind_spec.rb", "diffHunk": "@@ -156,6 +156,38 @@\n     status['compliantAddOns']['addon1'][0]['pool']['id'].should == p1.id\n   end\n \n+  it 'should async attach to addon pool when product is not installed' do\n+    product1 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:attributes => {:addons => \"addon1\"},\n+                               :owner => owner_key})\n+    p1 = create_pool_and_subscription(owner_key, product1.id)\n+    product2 = create_product(random_string('product'),\n+                              random_string('product'),\n+                              {:owner => owner_key})\n+    p2 = create_pool_and_subscription(owner_key, product2.id)\n+\n+    installed = [\n+        {'productId' => product2.id, 'productName' => product2['name']}]\n+\n+    consumer = @cp.register(\n+        random_string('systempurpose'), :system, nil, {}, nil, owner_key, [], installed, nil, [],\n+        nil, [], nil, nil, nil, nil, nil, 0, nil, nil, nil, nil, ['addon1'])\n+    status = @cp.get_purpose_compliance(consumer['uuid'])\n+    status['status'].should == 'mismatched'\n+    status['nonCompliantAddOns'].include?('addon1').should == true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f29f4d0c65eca1415fa019a205a88f9403c6293f", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/f29f4d0c65eca1415fa019a205a88f9403c6293f", "committedDate": "2020-07-24T13:19:27Z", "message": "1855830: Cannot autobind pools asynchronously"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c66fefe4570caafae16102885bbd0040c579ede9", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/c66fefe4570caafae16102885bbd0040c579ede9", "committedDate": "2020-07-24T07:39:20Z", "message": "1855830: Cannot autobind pools asynchronously"}, "afterCommit": {"oid": "f29f4d0c65eca1415fa019a205a88f9403c6293f", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/f29f4d0c65eca1415fa019a205a88f9403c6293f", "committedDate": "2020-07-24T13:19:27Z", "message": "1855830: Cannot autobind pools asynchronously"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODg1MjIx", "url": "https://github.com/candlepin/candlepin/pull/2763#pullrequestreview-454885221", "createdAt": "2020-07-24T13:28:16Z", "commit": {"oid": "f29f4d0c65eca1415fa019a205a88f9403c6293f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2283, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}