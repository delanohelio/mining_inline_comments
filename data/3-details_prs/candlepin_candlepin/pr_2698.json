{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTM0NTkz", "number": 2698, "title": "[F] Removed unnecessary code and added missing refresh tests (ENT-2207)", "bodyText": "Added versioning tests for the full RefreshWorker execute\ncode path\nRemoved ContentManager.importContent, as it is entirely\nobsoleted by the RefreshWorker framework\nDeprecated the ProductManager and ContentManager classes\nas a whole", "createdAt": "2020-05-12T19:50:30Z", "url": "https://github.com/candlepin/candlepin/pull/2698", "merged": true, "mergeCommit": {"oid": "0ece950a20d365d99e496d084af3c338ffc0bcdb"}, "closed": true, "closedAt": "2020-05-14T13:59:35Z", "author": {"login": "Ceiu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgghhRAH2gAyNDE2OTM0NTkzOjg0ZjRlMWEwNmJiY2MzOThmZmI4ZjM3MmNhMzgyZjAyMDY2ZTBmZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchMEamAFqTQxMTcxNzEzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84f4e1a06bbcc398ffb8f372ca382f02066e0ffe", "author": {"user": {"login": "Ceiu", "name": "Chris \"Ceiu\" Rog"}}, "url": "https://github.com/candlepin/candlepin/commit/84f4e1a06bbcc398ffb8f372ca382f02066e0ffe", "committedDate": "2020-05-12T09:05:14Z", "message": "Removed unnecessary code and added missing refresh tests\n\n- Added versioning tests for the full RefreshWorker execute code\n  path\n- Removed ContentManager.importContent, as it is entirely\n  obsoleted by the RefreshWorker framework\n- Deprecated the ProductManager and ContentManager classes as a\n  whole\n- Added missing transactional annotation to RefreshWorker.execute\n- Updated the spec tests for the consumer resource functionality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjkxMDQ0", "url": "https://github.com/candlepin/candlepin/pull/2698#pullrequestreview-410691044", "createdAt": "2020-05-13T08:16:12Z", "commit": {"oid": "ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoxNjoxMlrOGUmfUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMToxOTo1OFrOGUs6OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1NTMxNQ==", "bodyText": "Should we be deprecating this class (and ProductManager) as a whole? It is just the import* methods used by refresh that are deprecated really, but these classes provide CRUD methods for custom Content & Products (unrelated to Refresh), so I'd not say they should be deprecated", "url": "https://github.com/candlepin/candlepin/pull/2698#discussion_r424255315", "createdAt": "2020-05-13T08:16:12Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/controller/ContentManager.java", "diffHunk": "@@ -60,7 +55,13 @@\n  * <p></p>\n  * The methods provided by this class are the prefered methods to use for CRUD operations on\n  * content, to ensure content versioning and linking is handled properly.\n+ *\n+ * @deprecated\n+ *  This class's primary purpose has been replaced by the RefreshWorker and its various components.\n+ *  New code should avoid using this class and its methods if at all possible, instead opting to\n+ *  use the RefreshWorker.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM1OTEwNg==", "bodyText": "Same question as ContentManager", "url": "https://github.com/candlepin/candlepin/pull/2698#discussion_r424359106", "createdAt": "2020-05-13T11:17:00Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/controller/ProductManager.java", "diffHunk": "@@ -62,7 +62,13 @@\n  * <p></p>\n  * The methods provided by this class are the prefered methods to use for CRUD operations on\n  * products, to ensure product versioning and linking is handled properly.\n+ *\n+ * @deprecated\n+ *  This class's primary purpose has been replaced by the RefreshWorker and its various components.\n+ *  New code should avoid using this class and its methods if at all possible, instead opting to\n+ *  use the RefreshWorker.\n  */\n+@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2MDUwNQ==", "bodyText": "This file also has commented out calls of these methods throughout many tests like the following, which should be removed:\n// this.mockProductImport(owner, product);\n// this.mockContentImport(owner, new Content[] {});", "url": "https://github.com/candlepin/candlepin/pull/2698#discussion_r424360505", "createdAt": "2020-05-13T11:19:58Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/controller/PoolManagerTest.java", "diffHunk": "@@ -579,76 +579,6 @@ public RefreshResult answer(InvocationOnMock iom) throws Throwable {\n         .when(this.refreshWorker).execute(eq(owner));\n     }\n \n-    // private void mockProductImport(Owner owner, final Map<String, Product> products) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b", "author": {"user": {"login": "Ceiu", "name": "Chris \"Ceiu\" Rog"}}, "url": "https://github.com/candlepin/candlepin/commit/ca971519bfc4af0e4e6c9a272e1e8698b09d3e3b", "committedDate": "2020-05-12T04:50:40Z", "message": "Removed unnecessary code and added missing refresh tests\n\n- Added versioning tests for the full RefreshWorker execute\n  code path\n- Removed ContentManager.importContent, as it is entirely\n  obsoleted by the RefreshWorker framework\n- Deprecated the ProductManager and ContentManager classes\n  as a whole"}, "afterCommit": {"oid": "84f4e1a06bbcc398ffb8f372ca382f02066e0ffe", "author": {"user": {"login": "Ceiu", "name": "Chris \"Ceiu\" Rog"}}, "url": "https://github.com/candlepin/candlepin/commit/84f4e1a06bbcc398ffb8f372ca382f02066e0ffe", "committedDate": "2020-05-12T09:05:14Z", "message": "Removed unnecessary code and added missing refresh tests\n\n- Added versioning tests for the full RefreshWorker execute code\n  path\n- Removed ContentManager.importContent, as it is entirely\n  obsoleted by the RefreshWorker framework\n- Deprecated the ProductManager and ContentManager classes as a\n  whole\n- Added missing transactional annotation to RefreshWorker.execute\n- Updated the spec tests for the consumer resource functionality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzE3MTMy", "url": "https://github.com/candlepin/candlepin/pull/2698#pullrequestreview-411717132", "createdAt": "2020-05-14T11:37:20Z", "commit": {"oid": "84f4e1a06bbcc398ffb8f372ca382f02066e0ffe"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTozNzoyMFrOGVYN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo0ODoyOVrOGVYkLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3MDA2Mw==", "bodyText": "This is not directly related to your changes, but rather the previous changes in this method.\nIf the initial call of productAdapter.getProductsByIds(owner.getKey(), Arrays.asList(sku)) returns the marketing product we want, I assume that when Teamnado are going to implement our current ProductInfo interface which has the new getProvidedProducts() method on it, then that means we already have the whole product hierarchy fetched (well, for now a single mkt product on level 0 and some eng products on level 1). Why do we need to call the adapter a second time for all the children of sku?", "url": "https://github.com/candlepin/candlepin/pull/2698#discussion_r425070063", "createdAt": "2020-05-14T11:37:20Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/controller/Entitler.java", "diffHunk": "@@ -376,47 +382,67 @@ private DeveloperProducts getDeveloperPoolProducts(Owner owner, String sku) {\n      *         from the adapter.\n      */\n     private DeveloperProducts getDevProductMap(Owner owner, String sku) {\n-\n         Collection<? extends ProductInfo> productsByIds = this.productAdapter\n             .getProductsByIds(owner.getKey(), Arrays.asList(sku));\n \n-        Collection<String> devProductIds = new ArrayList<>();\n-        if (productsByIds.iterator().hasNext()) {\n+        Map<String, Product> devProductMap = new HashMap<>();\n+\n+        if (productsByIds != null && !productsByIds.isEmpty()) {\n+            // We're apparently only interested in the first product returned for the given sku\n             ProductInfo devProduct = productsByIds.iterator().next();\n-            devProductIds.add(devProduct.getId());\n \n-            Collection<? extends ProductInfo> provided = devProduct.getProvidedProducts();\n+            // Collect the dev product IDs from the potential tree of products we received\n+            List<String> devProductIds = new ArrayList<>();\n+            this.collectDevProductIds(devProductIds, devProduct);\n \n-            if (provided != null) {\n-                provided.forEach(product -> {\n-                    if (product != null) {\n-                        devProductIds.add(product.getId());\n-                    }\n-                });\n-            }\n-        }\n+            // Do a refresh so we're all up to date here\n+            log.debug(\"Importing products for dev pool resolution...\");\n \n-        log.debug(\"Importing products for dev pool resolution...\");\n-        ImportedEntityCompiler compiler = new ImportedEntityCompiler();\n+            RefreshWorker refresher = this.refreshWorkerProvider.get();\n+            refresher.addProducts(this.productAdapter.getProductsByIds(owner.getKey(), devProductIds));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f4e1a06bbcc398ffb8f372ca382f02066e0ffe"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3NTc1OQ==", "bodyText": "You mentioned yesterday that because of how the RefreshWorker works, we're adding all the org's products to the devProductMap. Can we not do some filtering here, and only add the refreshed products that are part of sku (and its hierarchy below it)?", "url": "https://github.com/candlepin/candlepin/pull/2698#discussion_r425075759", "createdAt": "2020-05-14T11:48:29Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/controller/Entitler.java", "diffHunk": "@@ -376,47 +382,67 @@ private DeveloperProducts getDeveloperPoolProducts(Owner owner, String sku) {\n      *         from the adapter.\n      */\n     private DeveloperProducts getDevProductMap(Owner owner, String sku) {\n-\n         Collection<? extends ProductInfo> productsByIds = this.productAdapter\n             .getProductsByIds(owner.getKey(), Arrays.asList(sku));\n \n-        Collection<String> devProductIds = new ArrayList<>();\n-        if (productsByIds.iterator().hasNext()) {\n+        Map<String, Product> devProductMap = new HashMap<>();\n+\n+        if (productsByIds != null && !productsByIds.isEmpty()) {\n+            // We're apparently only interested in the first product returned for the given sku\n             ProductInfo devProduct = productsByIds.iterator().next();\n-            devProductIds.add(devProduct.getId());\n \n-            Collection<? extends ProductInfo> provided = devProduct.getProvidedProducts();\n+            // Collect the dev product IDs from the potential tree of products we received\n+            List<String> devProductIds = new ArrayList<>();\n+            this.collectDevProductIds(devProductIds, devProduct);\n \n-            if (provided != null) {\n-                provided.forEach(product -> {\n-                    if (product != null) {\n-                        devProductIds.add(product.getId());\n-                    }\n-                });\n-            }\n-        }\n+            // Do a refresh so we're all up to date here\n+            log.debug(\"Importing products for dev pool resolution...\");\n \n-        log.debug(\"Importing products for dev pool resolution...\");\n-        ImportedEntityCompiler compiler = new ImportedEntityCompiler();\n+            RefreshWorker refresher = this.refreshWorkerProvider.get();\n+            refresher.addProducts(this.productAdapter.getProductsByIds(owner.getKey(), devProductIds));\n+            RefreshResult refreshResult = refresher.execute(owner);\n \n-        compiler.addProducts(this.productAdapter.getProductsByIds(owner.getKey(), devProductIds));\n+            // Step through the items we refreshed and add the resulting products to our map\n+            for (String pid : refresher.getProducts().keySet()) {\n+                Product product = refreshResult.getProduct(pid);\n+                if (product != null) {\n+                    devProductMap.put(product.getId(), product);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f4e1a06bbcc398ffb8f372ca382f02066e0ffe"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2399, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}