{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDE5MzE1", "number": 2614, "title": "[M] ENT-2107: Make jobs run in parallel", "bodyText": "Currently, jobs cannot run in parallel because we synchronize on\nthe JobManager singleton object on the execute method.\nOnce an artemis thread starts running a job, no other job can run\nin parallel because the other artemis threads are waiting for the\nlock. Not only that, but we also can't queue jobs at the same\ntime that a job is running, because the queue method is also\nsynchronized. This fix removes synchronization from these two\nmethods (and a couple more that don't need it).\nAdded synchronization on ArtemisProducer & ArtemisSession to avoid\nan artemis client warning when we try to queue jobs (AMQ212051:\nInvalid concurrent session usage. Sessions are not supposed to be\nused by more than one thread concurrently). This appeared once\nthe queueJob method stopped being synchronized.", "createdAt": "2020-02-14T14:36:51Z", "url": "https://github.com/candlepin/candlepin/pull/2614", "merged": true, "mergeCommit": {"oid": "98ade3803d130716cf062dbe37d5ad899fd52913"}, "closed": true, "closedAt": "2020-02-19T10:20:20Z", "author": {"login": "nikosmoum"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFFAQ3gFqTM1OTQ3NTE0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFz2P9gFqTM2MDk5Mjc0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDc1MTQ5", "url": "https://github.com/candlepin/candlepin/pull/2614#pullrequestreview-359475149", "createdAt": "2020-02-17T03:44:48Z", "commit": {"oid": "2da0d7f8d299fdaa36ee1e5545aff13dc2818eae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMzo0NDo0OVrOFqXz1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMzo0NDo0OVrOFqXz1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NDYxNQ==", "bodyText": "@nikosmoum\nIf the same JobManager instance shared with multiple Artemis threads and\u00a0the intention is to run queueJob and executeJob methods in parallel then synchronized (this) will not help here as both blocks are synchronized over this.\nI would recommend using 2 different locks in these methods. You can try using 2 different ReentrantLock here. \u00a0\nAlso, I did not get how the synchronized block will help to run jobs in parallel.\u00a0", "url": "https://github.com/candlepin/candlepin/pull/2614#discussion_r379974615", "createdAt": "2020-02-17T03:44:49Z", "author": {"login": "abhiskum"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -982,19 +982,20 @@ public AsyncJobStatus findJob(String jobId) {\n      *  an AsyncJobStatus instance representing the queued job's status, or the status of the\n      *  existing job if it already exists\n      */\n-    public synchronized AsyncJobStatus queueJob(JobConfig config) throws JobException {\n-\n-        ManagerState state = this.getManagerState();\n-        if (state != ManagerState.RUNNING) {\n-            // Check if we're paused. If so, and if the \"queue while paused\" config is not set,\n-            // throw our usual ISE\n-            if (state != ManagerState.SUSPENDED ||\n-                !this.configuration.getBoolean(ConfigProperties.ASYNC_JOBS_QUEUE_WHILE_SUSPENDED)) {\n-\n-                String msg = String.format(\"Jobs cannot be queued while the manager is in the %s state\",\n-                    state);\n-\n-                throw new IllegalStateException(msg);\n+    public AsyncJobStatus queueJob(JobConfig config) throws JobException {\n+        synchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da0d7f8d299fdaa36ee1e5545aff13dc2818eae"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2da0d7f8d299fdaa36ee1e5545aff13dc2818eae", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/2da0d7f8d299fdaa36ee1e5545aff13dc2818eae", "committedDate": "2020-02-14T14:32:50Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method also\n  is also synchronized. This fix removes synchronization from\n  these 2 methods (and a few more that don't need it), and only\n  synchronizes blocks that attempt to check or alter the JobManager\n  state itself."}, "afterCommit": {"oid": "463f8499d24b20a83be8cd55a418496034c649b7", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/463f8499d24b20a83be8cd55a418496034c649b7", "committedDate": "2020-02-17T08:29:20Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method also\n  is also synchronized. This fix removes synchronization from\n  these 2 methods (and a couple more that don't need it)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "463f8499d24b20a83be8cd55a418496034c649b7", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/463f8499d24b20a83be8cd55a418496034c649b7", "committedDate": "2020-02-17T08:29:20Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method also\n  is also synchronized. This fix removes synchronization from\n  these 2 methods (and a couple more that don't need it)."}, "afterCommit": {"oid": "cc4e1ee3086274c2e5270a065bbb1735b81e3f81", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/cc4e1ee3086274c2e5270a065bbb1735b81e3f81", "committedDate": "2020-02-17T15:51:23Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method is also\n  synchronized. This fix removes synchronization from these two\n  methods (and a couple more that don't need it).\n- Added synchronization on the JobMessageDispatcher to avoid an\n  artemis client warning when we try to queue jobs (AMQ212051:\n  Invalid concurrent session usage. Sessions are not supposed to be\n  used by more than one thread concurrently). This appeared once\n  the queueJob method stopped being synchronized."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTQ5ODY0", "url": "https://github.com/candlepin/candlepin/pull/2614#pullrequestreview-359949864", "createdAt": "2020-02-17T20:19:04Z", "commit": {"oid": "cc4e1ee3086274c2e5270a065bbb1735b81e3f81"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoxOTowNFrOFqu7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoxOTowNFrOFqu7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MzMxNA==", "bodyText": "Since this is a restriction of Artemis, and not something we care about at this level, we should try adding the synchronized flag onto the Artemis implementations of the messaging system. In this case, ArtemisProducer.send, ArtemisSession.commit and .rollback (probably .close, too)", "url": "https://github.com/candlepin/candlepin/pull/2614#discussion_r380353314", "createdAt": "2020-02-17T20:19:04Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/async/JobMessageDispatcher.java", "diffHunk": "@@ -138,7 +138,7 @@ private synchronized CPMProducer getProducer() throws CPMException {\n      * @throws JobMessageDispatchException\n      *  if the message cannot be posted for any reason\n      */\n-    public void postJobMessage(JobMessage jobMessage) throws JobMessageDispatchException {\n+    public synchronized void postJobMessage(JobMessage jobMessage) throws JobMessageDispatchException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4e1ee3086274c2e5270a065bbb1735b81e3f81"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a612e862c1e83679ba1224f374ac3750b5ecc3f4", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/a612e862c1e83679ba1224f374ac3750b5ecc3f4", "committedDate": "2020-02-18T11:32:51Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method is also\n  synchronized. This fix removes synchronization from these two\n  methods (and a couple more that don't need it).\n- Added synchronization on ArtemisProducer & ArtemisSession to avoid\n  an artemis client warning when we try to queue jobs (AMQ212051:\n  Invalid concurrent session usage. Sessions are not supposed to be\n  used by more than one thread concurrently). This appeared once\n  the queueJob method stopped being synchronized."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc4e1ee3086274c2e5270a065bbb1735b81e3f81", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/cc4e1ee3086274c2e5270a065bbb1735b81e3f81", "committedDate": "2020-02-17T15:51:23Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method is also\n  synchronized. This fix removes synchronization from these two\n  methods (and a couple more that don't need it).\n- Added synchronization on the JobMessageDispatcher to avoid an\n  artemis client warning when we try to queue jobs (AMQ212051:\n  Invalid concurrent session usage. Sessions are not supposed to be\n  used by more than one thread concurrently). This appeared once\n  the queueJob method stopped being synchronized."}, "afterCommit": {"oid": "a612e862c1e83679ba1224f374ac3750b5ecc3f4", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/a612e862c1e83679ba1224f374ac3750b5ecc3f4", "committedDate": "2020-02-18T11:32:51Z", "message": "ENT-2107: Make jobs run in parallel\n\n- Currently, jobs cannot run in parallel because we synchronize on\n  the JobManager singleton object on the execute method.\n  Once an artemis thread starts running a job, no other job can run\n  in parallel because the other artemis threads are waiting for the\n  lock. Not only that, but we also can't queue jobs at the same\n  time that a job is running, because the queue method is also\n  synchronized. This fix removes synchronization from these two\n  methods (and a couple more that don't need it).\n- Added synchronization on ArtemisProducer & ArtemisSession to avoid\n  an artemis client warning when we try to queue jobs (AMQ212051:\n  Invalid concurrent session usage. Sessions are not supposed to be\n  used by more than one thread concurrently). This appeared once\n  the queueJob method stopped being synchronized."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMzM5NDY0", "url": "https://github.com/candlepin/candlepin/pull/2614#pullrequestreview-360339464", "createdAt": "2020-02-18T13:34:32Z", "commit": {"oid": "a612e862c1e83679ba1224f374ac3750b5ecc3f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwOTkyNzQ3", "url": "https://github.com/candlepin/candlepin/pull/2614#pullrequestreview-360992747", "createdAt": "2020-02-19T10:20:07Z", "commit": {"oid": "a612e862c1e83679ba1224f374ac3750b5ecc3f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2515, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}