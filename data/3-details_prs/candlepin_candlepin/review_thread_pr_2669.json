{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzA5MDAx", "number": 2669, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMjoxMFrODspIvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMTozNjo0N1rODvFi4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM3OTE5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMjoxMFrOF9mt2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxNzoyMFrOF_ic-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTc4Ng==", "bodyText": "The HostedTestSubscriptionResource is only used for testing, so there is no need to run validation here.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r400141786", "createdAt": "2020-03-30T12:12:10Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionResource.java", "diffHunk": "@@ -68,6 +72,12 @@\n     @Inject\n     private UniqueIdGenerator idGenerator;\n \n+    @Inject\n+    private ModelTranslator translator;\n+\n+    @Inject\n+    private DTOValidator validator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTA4Mg==", "bodyText": "Removed.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402169082", "createdAt": "2020-04-02T09:17:20Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionResource.java", "diffHunk": "@@ -68,6 +72,12 @@\n     @Inject\n     private UniqueIdGenerator idGenerator;\n \n+    @Inject\n+    private ModelTranslator translator;\n+\n+    @Inject\n+    private DTOValidator validator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTc4Ng=="}, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTQzMTc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/ContentDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNTo0MVrOF9nNog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNTo0MVrOF9nNog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0OTkyMg==", "bodyText": "Depending on what we decide to do there might not be a need for this translator (or the other two: ProductDTOTranslator, BrandingDTOTranslator). You can use the existing ProductDTOTranslator/ContentDTOTranslator which translates Product/ContentDTO to Product/ContentData, which are already implementing the *Info interfaces, and are the chosen \"dto\" structures for adapters code.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r400149922", "createdAt": "2020-03-30T12:25:41Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/ContentDTOTranslator.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Content;\n+\n+import java.util.Date;\n+\n+/**\n+ * Provides translation from ContentDTO to Content model objects\n+ */\n+public class ContentDTOTranslator implements ObjectTranslator<ContentDTO, Content> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTQzNDUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNjoyNlrOF9nPag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNjoyNlrOF9nPag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1MDM3OA==", "bodyText": "as mentioned in the other comment, unless we decide otherwise, this should be translating into ProductData instead of Product (same for other endpoints in this class, including ContentData.class instead of Content.class).", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r400150378", "createdAt": "2020-03-30T12:26:26Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionResource.java", "diffHunk": "@@ -429,7 +441,7 @@ public ProductInfo updateProduct(\n             throw new NotFoundException(\"product does not yet exist: \" + productId);\n         }\n \n-        return this.adapter.updateProduct(productId, update);\n+        return this.adapter.updateProduct(productId, this.translator.translate(update, Product.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTQ5NjQ3OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0MjozNVrOF9n1IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxNzozOVrOF_id0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDAzMw==", "bodyText": "I know this was the comment on the original DTO, but since this is not going to implement the *Info interface, it has nothing to do with adapter layers now, so the last 3 words can be removed", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r400160033", "createdAt": "2020-03-30T12:42:35Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -633,6 +633,56 @@ components:\n             manifest:\n               type: boolean\n \n+    ContentDTO:\n+      description: Represents the content data exposed to the API and adapter layers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTI5Nw==", "bodyText": "Removed.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402169297", "createdAt": "2020-04-02T09:17:39Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -633,6 +633,56 @@ components:\n             manifest:\n               type: boolean\n \n+    ContentDTO:\n+      description: Represents the content data exposed to the API and adapter layers.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDAzMw=="}, "originalCommit": {"oid": "c808610fe7c7d216f30bfe29680a93e9c8b6d0ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTA5MTYzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/ProductDTOTranslator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoyMzo1M1rOF_q-ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoyMzo1M1rOF_q-ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwODczMQ==", "bodyText": "Docs need updating here", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402308731", "createdAt": "2020-04-02T13:23:53Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/ProductDTOTranslator.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * The ProductDTOTranslator provides translation from ProductDTO to Product model objects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42f00d02a42816615027f246d8839500394c9f1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTMzMDU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/ContentDTOTranslator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNDo1NlrOF_tS5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNDo1NlrOF_tS5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0NjcyNg==", "bodyText": "I don't know if this is the best place for this. I wonder if we shouldn't use this as an opportunity to break out the translators into their own package.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402346726", "createdAt": "2020-04-02T14:14:56Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/ContentDTOTranslator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42f00d02a42816615027f246d8839500394c9f1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTM3NjIzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/service/BrandingDTO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNDo1N1rOF_twdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNDo1N1rOF_twdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NDI5NQ==", "bodyText": "We don't need the timestamped parts to implement BrandingInfo.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402354295", "createdAt": "2020-04-02T14:24:57Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/dto/service/BrandingDTO.java", "diffHunk": "@@ -0,0 +1,225 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.service;\n+\n+import org.candlepin.dto.TimestampedCandlepinDTO;\n+import org.candlepin.service.model.BrandingInfo;\n+\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+\n+import java.util.Date;\n+import java.util.Objects;\n+\n+/**\n+ * A DTO representation of the Branding used in Service Adapter Layer.\n+ */\n+public class BrandingDTO extends TimestampedCandlepinDTO<BrandingDTO> implements BrandingInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42f00d02a42816615027f246d8839500394c9f1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTM4MjY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/service/BrandingDTO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNjoyMVrOF_t0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyNjoyMVrOF_t0pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1NTM2NQ==", "bodyText": "Extraneous setter. Let's stick with the more standard set* and get*, but keep the chaining behavior.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r402355365", "createdAt": "2020-04-02T14:26:21Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/dto/service/BrandingDTO.java", "diffHunk": "@@ -0,0 +1,225 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.service;\n+\n+import org.candlepin.dto.TimestampedCandlepinDTO;\n+import org.candlepin.service.model.BrandingInfo;\n+\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+\n+import java.util.Date;\n+import java.util.Objects;\n+\n+/**\n+ * A DTO representation of the Branding used in Service Adapter Layer.\n+ */\n+public class BrandingDTO extends TimestampedCandlepinDTO<BrandingDTO> implements BrandingInfo {\n+\n+    private String productId;\n+    private String name;\n+    private String type;\n+\n+    /**\n+     * Initializes a new BrandingDTO instance with null values.\n+     */\n+    public BrandingDTO() {\n+        // Intentionally left empty\n+    }\n+\n+    /**\n+     * Initializes a new BrandingDTO instance which is a shallow copy of the provided\n+     * source entity.\n+     *\n+     * @param source\n+     *  The source entity to copy\n+     */\n+    public BrandingDTO(BrandingDTO source) {\n+        super(source);\n+    }\n+\n+    /**\n+     * Sets this branding's created date.\n+     *\n+     * @param created the created date to set on this branding DTO.\n+     *\n+     * @return this branding object\n+     */\n+    public BrandingDTO created(Date created) {\n+        this.created = created;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets this branding's updated date.\n+     *\n+     * @param updated the updated date to set on this branding DTO.\n+     *\n+     * @return this branding object\n+     */\n+    public BrandingDTO updated(Date updated) {\n+        this.updated = updated;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets this branding's product id.\n+     *\n+     * @param productId the product id to set on this branding DTO.\n+     *\n+     * @return this branding object\n+     */\n+    public BrandingDTO productId(String productId) {\n+        this.productId = productId;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns this branding's product id.\n+     *\n+     * @return this branding's product id.\n+     */\n+    @Override\n+    public String getProductId() {\n+        return productId;\n+    }\n+\n+    /**\n+     * Sets this branding's product id.\n+     *\n+     * @param productId the product id to set on this branding DTO.\n+     */\n+    public void setProductId(String productId) {\n+        this.productId = productId;\n+    }\n+\n+    /**\n+     * Sets this branding's name.\n+     *\n+     * @param name the name to set on this branding DTO.\n+     *\n+     * @return this branding object\n+     */\n+    public BrandingDTO name(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42f00d02a42816615027f246d8839500394c9f1"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzAwNTE0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMTozNjo0N1rOGBTm6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0MzozN1rOGB7i8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAyMzAxNw==", "bodyText": "Why is this changed? We want to resolve the product content on the incoming data (pinfo) not the existing product (pdata)", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r404023017", "createdAt": "2020-04-06T11:36:47Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "diffHunk": "@@ -318,7 +318,7 @@ public ProductInfo updateProduct(String productId, ProductInfo pinfo) {\n         // Apply updates...\n         // Don't allow changing the ID\n \n-        Collection<ProductContentData> pcdata = this.resolveProductContent(pinfo.getProductContent());\n+        Collection<ProductContentData> pcdata = this.resolveProductContent(pdata.getProductContent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ab2cda15114d9aa269c9bf237cac4c8ecb8a47"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1NzAzNA==", "bodyText": "This was done to pass refresh_pools specs.\nThanks for pointing it out. This is now reverted.\nThe issue was while translating ProductDTO to the Product entity model, the setters were setting collection to empty collection by default instead of null. Now updated the Getter/Setter to fulfill this requirement of the Product.", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r404557034", "createdAt": "2020-04-07T06:09:05Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "diffHunk": "@@ -318,7 +318,7 @@ public ProductInfo updateProduct(String productId, ProductInfo pinfo) {\n         // Apply updates...\n         // Don't allow changing the ID\n \n-        Collection<ProductContentData> pcdata = this.resolveProductContent(pinfo.getProductContent());\n+        Collection<ProductContentData> pcdata = this.resolveProductContent(pdata.getProductContent());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAyMzAxNw=="}, "originalCommit": {"oid": "a7ab2cda15114d9aa269c9bf237cac4c8ecb8a47"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NzM2Mw==", "bodyText": "I don't think it is a good idea to change our Product model entity to have nullable collections/maps, because it might cause unforeseen problems. I can't think of something specific, but I'm worry of changing this. (e.g. what happens if something sets the collection to null and then hibernate tries to persist the Product?). For me, it's ok to leave this as is just to get the PR merged through for now, but we'd have to create a new card to deal with this later on. I'll leave Chris to re-review/merge if he thinks this is ok temporarily.\n@sonalidhome @Ceiu This problem demonstrates why using a model entity as DTO is bad. Model entities have different requirements (non-nullable collections/maps) than DTOs (nullable collections/maps and fields in general). This is something a translation to a DTO (instead of an entity) would solve, but obviously, as Chris said, having multiple translations for the same data in one request is redundant. This is also where the *Info interfaces on the api DTOs where kind of useful as a workaround and we could just pass in the existing DTO. So if we:\n\ncan't use the entity model as a DTO because it can't have nullable collections\ncan't translate to new DTOs because that would be redundant\ncan't have the openapi-generated DTOs implement *Info\nthen what can we do? All the solutions I can think of are hacks:\n\n\nWe might be able to technically get n3 working by implementing another openapi-generator hack, but in principle I think it is wrong to use the same interfaces on two different APIs. Just because the *info interface is of help in this case as a crutch, it doesn't mean that it is not holding us back in other cases where a field is clearly not needed in one of the 2 APIs (e.g. putting a getter that always returns null on the REST DTO because that field is not needed there, just because the interface is forcing us to implement it).\nWe could do n1, but instead of using the model entity (e.g. Product), have a new entity that extends it and overrides the collection/map getters/setters to make collections nullable, but that feels like a worse hack than the other one...", "url": "https://github.com/candlepin/candlepin/pull/2669#discussion_r404677363", "createdAt": "2020-04-07T09:43:37Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/hostedtest/HostedTestSubscriptionServiceAdapter.java", "diffHunk": "@@ -318,7 +318,7 @@ public ProductInfo updateProduct(String productId, ProductInfo pinfo) {\n         // Apply updates...\n         // Don't allow changing the ID\n \n-        Collection<ProductContentData> pcdata = this.resolveProductContent(pinfo.getProductContent());\n+        Collection<ProductContentData> pcdata = this.resolveProductContent(pdata.getProductContent());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAyMzAxNw=="}, "originalCommit": {"oid": "a7ab2cda15114d9aa269c9bf237cac4c8ecb8a47"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4126, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}