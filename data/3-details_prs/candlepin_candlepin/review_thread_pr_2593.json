{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4OTIxNTAx", "number": 2593, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNzoyNTo1NFrODb0Z9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyNjo0MlrODb2N4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDk2NzU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNzoyNTo1NFrOFjhazw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToxOTowMFrOFjnjYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc5MjAxNQ==", "bodyText": "@sonalidhome Here you can use self-reference setter methods.\ndestination.id(...).key(..).name('..') ...", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372792015", "createdAt": "2020-01-30T07:25:54Z", "author": {"login": "abhiskum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "diffHunk": "@@ -58,27 +60,45 @@ public AsyncJobStatusDTO populate(AsyncJobStatus source, AsyncJobStatusDTO desti\n     public AsyncJobStatusDTO populate(ModelTranslator translator, AsyncJobStatus source,\n         AsyncJobStatusDTO destination) {\n \n-        destination = super.populate(translator, source, destination);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        Date created = source.getCreated();\n+        destination.setCreated(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        destination.setUpdated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);\n \n         destination.setId(source.getId());\n-        destination.setJobKey(source.getJobKey());\n+        destination.setKey(source.getJobKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5MjUxMg==", "bodyText": "Updated as suggested.", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372892512", "createdAt": "2020-01-30T11:19:00Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "diffHunk": "@@ -58,27 +60,45 @@ public AsyncJobStatusDTO populate(AsyncJobStatus source, AsyncJobStatusDTO desti\n     public AsyncJobStatusDTO populate(ModelTranslator translator, AsyncJobStatus source,\n         AsyncJobStatusDTO destination) {\n \n-        destination = super.populate(translator, source, destination);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        Date created = source.getCreated();\n+        destination.setCreated(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        destination.setUpdated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);\n \n         destination.setId(source.getId());\n-        destination.setJobKey(source.getJobKey());\n+        destination.setKey(source.getJobKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc5MjAxNQ=="}, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTIzMDg2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToxNToyMlrOFjj6hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToyNDowNVrOFjnrMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzMjkwMg==", "bodyText": "We should be more cautious here, checking for null, and using format instead of concatenation: source.getId() != null ? String.format(\"/jobs/%s\", source.getId()) : null", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372832902", "createdAt": "2020-01-30T09:15:22Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "diffHunk": "@@ -58,27 +60,45 @@ public AsyncJobStatusDTO populate(AsyncJobStatus source, AsyncJobStatusDTO desti\n     public AsyncJobStatusDTO populate(ModelTranslator translator, AsyncJobStatus source,\n         AsyncJobStatusDTO destination) {\n \n-        destination = super.populate(translator, source, destination);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        Date created = source.getCreated();\n+        destination.setCreated(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        destination.setUpdated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);\n \n         destination.setId(source.getId());\n-        destination.setJobKey(source.getJobKey());\n+        destination.setKey(source.getJobKey());\n         destination.setName(source.getName());\n         destination.setGroup(source.getGroup());\n         destination.setOrigin(source.getOrigin());\n         destination.setExecutor(source.getExecutor());\n         destination.setPrincipal(source.getPrincipalName());\n-        destination.setStartTime(source.getStartTime());\n-        destination.setEndTime(source.getEndTime());\n-        destination.setAttempts(source.getAttempts());\n-        destination.setMaxAttempts(source.getMaxAttempts());\n-        destination.setResult(source.getJobResult());\n \n         JobState state = source.getState();\n         destination.setState(state != null ? state.name() : null);\n \n         JobState pstate = source.getPreviousState();\n         destination.setPreviousState(pstate != null ? pstate.name() : null);\n \n+        Date startTime = source.getStartTime();\n+        destination.setStartTime(startTime != null ? startTime.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date endTime = source.getEndTime();\n+        destination.setEndTime(endTime != null ? endTime.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        destination.setAttempts(source.getAttempts());\n+        destination.setMaxAttempts(source.getMaxAttempts());\n+        destination.setStatusPath(\"/jobs/\" + source.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDUxMw==", "bodyText": "agreed, corrected.", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372894513", "createdAt": "2020-01-30T11:24:05Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/AsyncJobStatusTranslator.java", "diffHunk": "@@ -58,27 +60,45 @@ public AsyncJobStatusDTO populate(AsyncJobStatus source, AsyncJobStatusDTO desti\n     public AsyncJobStatusDTO populate(ModelTranslator translator, AsyncJobStatus source,\n         AsyncJobStatusDTO destination) {\n \n-        destination = super.populate(translator, source, destination);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        Date created = source.getCreated();\n+        destination.setCreated(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        destination.setUpdated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);\n \n         destination.setId(source.getId());\n-        destination.setJobKey(source.getJobKey());\n+        destination.setKey(source.getJobKey());\n         destination.setName(source.getName());\n         destination.setGroup(source.getGroup());\n         destination.setOrigin(source.getOrigin());\n         destination.setExecutor(source.getExecutor());\n         destination.setPrincipal(source.getPrincipalName());\n-        destination.setStartTime(source.getStartTime());\n-        destination.setEndTime(source.getEndTime());\n-        destination.setAttempts(source.getAttempts());\n-        destination.setMaxAttempts(source.getMaxAttempts());\n-        destination.setResult(source.getJobResult());\n \n         JobState state = source.getState();\n         destination.setState(state != null ? state.name() : null);\n \n         JobState pstate = source.getPreviousState();\n         destination.setPreviousState(pstate != null ? pstate.name() : null);\n \n+        Date startTime = source.getStartTime();\n+        destination.setStartTime(startTime != null ? startTime.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date endTime = source.getEndTime();\n+        destination.setEndTime(endTime != null ? endTime.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        destination.setAttempts(source.getAttempts());\n+        destination.setMaxAttempts(source.getMaxAttempts());\n+        destination.setStatusPath(\"/jobs/\" + source.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzMjkwMg=="}, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNTI2NDM1OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwOToyNjo0MlrOFjkPvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxMToyMzoyMlrOFjnqFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzODMzMg==", "bodyText": "Is this needed? From what I recall there is a conversation in another PR between @abhiskum and @Ceiu that we should not use discriminator.", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372838332", "createdAt": "2020-01-30T09:26:42Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -232,6 +232,61 @@ components:\n             manifest:\n               type: boolean\n \n+    AsyncJobStatusDTO:\n+      description: DTO representing an async job status\n+      discriminator:\n+        propertyName: type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg3NjI5NA==", "bodyText": "@nikosmoum yes, we have decided not to use 'discriminator' in DTO definition.", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372876294", "createdAt": "2020-01-30T10:43:22Z", "author": {"login": "abhiskum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -232,6 +232,61 @@ components:\n             manifest:\n               type: boolean\n \n+    AsyncJobStatusDTO:\n+      description: DTO representing an async job status\n+      discriminator:\n+        propertyName: type", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzODMzMg=="}, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg5NDIyOA==", "bodyText": "I missed PR conversion.\nAfter a discussion with @abhiskum, I understood we should not be adding this. Now eliminated it from the code.", "url": "https://github.com/candlepin/candlepin/pull/2593#discussion_r372894228", "createdAt": "2020-01-30T11:23:22Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -232,6 +232,61 @@ components:\n             manifest:\n               type: boolean\n \n+    AsyncJobStatusDTO:\n+      description: DTO representing an async job status\n+      discriminator:\n+        propertyName: type", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzODMzMg=="}, "originalCommit": {"oid": "4a8be66e069d050cc7967c8f505301183f2ad8d4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}