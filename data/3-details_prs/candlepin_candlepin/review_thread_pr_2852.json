{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMzExNTU0", "number": 2852, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NTo0OVrOE_MOrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NjoyOFrOE_MQFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njk2MTEwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NTo0OVrOH8wvcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzowNTowN1rOH9NBaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTE4Ng==", "bodyText": "jobTrigger should be plural, since it's a collection.", "url": "https://github.com/candlepin/candlepin/pull/2852#discussion_r533475186", "createdAt": "2020-12-01T14:55:49Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -912,8 +912,16 @@ private void synchronizeJobSchedule() throws SchedulerException {\n \n         // Unschedule dead/invalid jobs\n         for (JobKey key : unschedule) {\n-            this.scheduler.deleteJob(key);\n-            log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            List<Trigger> jobTrigger = (List<Trigger>) this.scheduler.getTriggersOfJob(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "084046bd64d3ecb9e47a8654e4e8857d6dabc2f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzODUzOQ==", "bodyText": "Fixed.", "url": "https://github.com/candlepin/candlepin/pull/2852#discussion_r533938539", "createdAt": "2020-12-02T07:05:07Z", "author": {"login": "wolfdale"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -912,8 +912,16 @@ private void synchronizeJobSchedule() throws SchedulerException {\n \n         // Unschedule dead/invalid jobs\n         for (JobKey key : unschedule) {\n-            this.scheduler.deleteJob(key);\n-            log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            List<Trigger> jobTrigger = (List<Trigger>) this.scheduler.getTriggersOfJob(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTE4Ng=="}, "originalCommit": {"oid": "084046bd64d3ecb9e47a8654e4e8857d6dabc2f1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Njk2NDY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo1NjoyOFrOH8wxnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzowNToxMVrOH9NBgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTc0Mw==", "bodyText": "We should have a contingency here in the event jobTriggers is empty. In such a case, we'll have a job key associated with nothing, and that should get cleaned up appropriately.", "url": "https://github.com/candlepin/candlepin/pull/2852#discussion_r533475743", "createdAt": "2020-12-01T14:56:28Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -912,8 +912,16 @@ private void synchronizeJobSchedule() throws SchedulerException {\n \n         // Unschedule dead/invalid jobs\n         for (JobKey key : unschedule) {\n-            this.scheduler.deleteJob(key);\n-            log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            List<Trigger> jobTrigger = (List<Trigger>) this.scheduler.getTriggersOfJob(key);\n+\n+            if (!jobTrigger.isEmpty()) {\n+                this.scheduler.unscheduleJobs(jobTrigger\n+                    .stream()\n+                    .map(Trigger::getKey)\n+                    .collect(Collectors.toList()));\n+                log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "084046bd64d3ecb9e47a8654e4e8857d6dabc2f1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzODU2Mg==", "bodyText": "Added case to delete the job for proper cleanup (assuming we might have stale data).\nAlthough since all Candlepin quartz jobs are non-durable, it is automatically deleted from the scheduler once there are no longer any active triggers associated with it.", "url": "https://github.com/candlepin/candlepin/pull/2852#discussion_r533938562", "createdAt": "2020-12-02T07:05:11Z", "author": {"login": "wolfdale"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -912,8 +912,16 @@ private void synchronizeJobSchedule() throws SchedulerException {\n \n         // Unschedule dead/invalid jobs\n         for (JobKey key : unschedule) {\n-            this.scheduler.deleteJob(key);\n-            log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            List<Trigger> jobTrigger = (List<Trigger>) this.scheduler.getTriggersOfJob(key);\n+\n+            if (!jobTrigger.isEmpty()) {\n+                this.scheduler.unscheduleJobs(jobTrigger\n+                    .stream()\n+                    .map(Trigger::getKey)\n+                    .collect(Collectors.toList()));\n+                log.info(\"Removed existing schedule for job: {}\", key.getName());\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ3NTc0Mw=="}, "originalCommit": {"oid": "084046bd64d3ecb9e47a8654e4e8857d6dabc2f1"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4024, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}