{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzAxOTcw", "number": 2811, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoyMzozOVrOEk9-hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoyMzozOVrOEk9-hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTk5NjIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/async/JobManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzoyMzozOVrOHUM90A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToyMTozOVrOHV1X0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk0NjAwMA==", "bodyText": "Can we change the error message to something that gives more information on the situation? Something along the lines of:\n\"Job \\\"%s\\\" (%s) is already running on host \\\"%s\\\"; ignoring execution request\"\nWe could also add a test here where if the host equals the current host, we just manually set the job state to QUEUED and continue execution as normal.", "url": "https://github.com/candlepin/candlepin/pull/2811#discussion_r490946000", "createdAt": "2020-09-18T13:23:39Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1539,6 +1539,14 @@ private AsyncJobStatus fetchJobStatus(JobMessage message)\n             log.error(errmsg);\n             throw new JobInitializationException(errmsg, true);\n         }\n+        else if (jobState == JobState.RUNNING) {\n+            String errmsg =\n+                String.format(\"Job \\\"%s\\\" (%s) is in the %s state, which is non-terminal and invalid\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39933819b6c6832edc302f8bd644f1167d88fe6c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1NjU5Mg==", "bodyText": "Done", "url": "https://github.com/candlepin/candlepin/pull/2811#discussion_r492656592", "createdAt": "2020-09-22T11:21:39Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/async/JobManager.java", "diffHunk": "@@ -1539,6 +1539,14 @@ private AsyncJobStatus fetchJobStatus(JobMessage message)\n             log.error(errmsg);\n             throw new JobInitializationException(errmsg, true);\n         }\n+        else if (jobState == JobState.RUNNING) {\n+            String errmsg =\n+                String.format(\"Job \\\"%s\\\" (%s) is in the %s state, which is non-terminal and invalid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk0NjAwMA=="}, "originalCommit": {"oid": "39933819b6c6832edc302f8bd644f1167d88fe6c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4084, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}