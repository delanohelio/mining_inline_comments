{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Mzg1MDQx", "number": 2726, "title": " Ent-1873: Port EntitlementResource to spec-first", "bodyText": "", "createdAt": "2020-06-15T08:48:38Z", "url": "https://github.com/candlepin/candlepin/pull/2726", "merged": true, "mergeCommit": {"oid": "2b5c2f45dacf3da839f8c4cdcd7071ec7b9cf823"}, "closed": true, "closedAt": "2020-06-22T09:36:16Z", "author": {"login": "Januson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrgR3TABqjM0NDQyODI5MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctsO1ZABqjM0NjcwOTM2MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7337bcd7b43af57766a5a344bec41730e8a99dbb", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/7337bcd7b43af57766a5a344bec41730e8a99dbb", "committedDate": "2020-06-15T08:47:23Z", "message": "Add tests for PageRequest"}, "afterCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/ee03cab87c77f69add0cc12da186bbba69279f37", "committedDate": "2020-06-15T13:00:24Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTU5Mzgw", "url": "https://github.com/candlepin/candlepin/pull/2726#pullrequestreview-432159380", "createdAt": "2020-06-17T08:09:41Z", "commit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjQzMzYz", "url": "https://github.com/candlepin/candlepin/pull/2726#pullrequestreview-433243363", "createdAt": "2020-06-18T12:43:45Z", "commit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMjo0Mzo0NVrOGltjtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo0ODowNlrOGly7SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5NjkxNg==", "bodyText": "I think all this work (adding all these separate args here, creating a PageRequestDTO, etc.) might not be needed at all. I think you should be able to simply remove pageRequest as an argument completely, and simply add this at the start of the method: PageRequest pageRequest = ResteasyProviderFactory.getContextData(PageRequest.class); and you should be good to go (haven't tested it, but it should work just the way we do it with all other request context data args like Principal etc.).", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442196916", "createdAt": "2020-06-18T12:43:45Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/EntitlementResource.java", "diffHunk": "@@ -152,18 +125,24 @@ public EntitlementDTO hasEntitlement(@PathParam(\"consumer_uuid\") String consumer\n                 consumerUuid, productId));\n     }\n \n-    @ApiOperation(notes = \"Retrieves list of Entitlements\", value = \"listAllForConsumer\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n+    @Override\n     public List<EntitlementDTO> listAllForConsumer(\n-        @QueryParam(\"consumer\") String consumerUuid,\n-        @QueryParam(\"matches\") String matches,\n-        @QueryParam(\"attribute\") List<KeyValueParameter> attrFilters,\n-        @Context PageRequest pageRequest) {\n+        String consumerUuid,\n+        String matches,\n+        List<KeyValueParamDTO> attrFilters,\n+        Integer page,\n+        Integer perPage,\n+        String order,\n+        String orderBy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI3NTUzMw==", "bodyText": "This also needs a 400 response for when consumer is not found using the provided consumer uuid", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442275533", "createdAt": "2020-06-18T14:35:59Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1061,6 +1061,312 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /entitlements:\n+    get:\n+      description: Retrieves list of Entitlements\n+      operationId: listAllForConsumer\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: consumer\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: matches\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: attribute\n+          in: query\n+          required: false\n+          schema:\n+            type: array\n+            items:\n+              $ref: '#/components/schemas/KeyValueParamDTO'\n+        - $ref: '#/components/parameters/Page'\n+        - $ref: '#/components/parameters/PerPage'\n+        - $ref: '#/components/parameters/Order'\n+        - $ref: '#/components/parameters/OrderBy'\n+      security: []\n+      responses:\n+        200:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI3ODIyNg==", "bodyText": "minor spell check: successfully", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442278226", "createdAt": "2020-06-18T14:39:17Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1061,6 +1061,312 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /entitlements:\n+    get:\n+      description: Retrieves list of Entitlements\n+      operationId: listAllForConsumer\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: consumer\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: matches\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: attribute\n+          in: query\n+          required: false\n+          schema:\n+            type: array\n+            items:\n+              $ref: '#/components/schemas/KeyValueParamDTO'\n+        - $ref: '#/components/parameters/Page'\n+        - $ref: '#/components/parameters/PerPage'\n+        - $ref: '#/components/parameters/Order'\n+        - $ref: '#/components/parameters/OrderBy'\n+      security: []\n+      responses:\n+        200:\n+          description: A successful operation\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/EntitlementDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/consumer/{consumer_uuid}/product/{product_id}:\n+    get:\n+      description: Checks Consumer for Product Entitlement\n+      operationId: hasEntitlement\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: consumer_uuid\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+        - name: product_id\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Entitlement successfuly found for customer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4NDg3Mw==", "bodyText": "202 is for when doing asynchronous work in the background, so the description should be more like 'An entitlement certificate is being regenerated'", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442284873", "createdAt": "2020-06-18T14:48:06Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1061,6 +1061,312 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /entitlements:\n+    get:\n+      description: Retrieves list of Entitlements\n+      operationId: listAllForConsumer\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: consumer\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: matches\n+          in: query\n+          required: false\n+          schema:\n+            type: string\n+        - name: attribute\n+          in: query\n+          required: false\n+          schema:\n+            type: array\n+            items:\n+              $ref: '#/components/schemas/KeyValueParamDTO'\n+        - $ref: '#/components/parameters/Page'\n+        - $ref: '#/components/parameters/PerPage'\n+        - $ref: '#/components/parameters/Order'\n+        - $ref: '#/components/parameters/OrderBy'\n+      security: []\n+      responses:\n+        200:\n+          description: A successful operation\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/EntitlementDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/consumer/{consumer_uuid}/product/{product_id}:\n+    get:\n+      description: Checks Consumer for Product Entitlement\n+      operationId: hasEntitlement\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: consumer_uuid\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+        - name: product_id\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Entitlement successfuly found for customer\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/EntitlementDTO'\n+        404:\n+          description: Entitlement could not be found.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Entitlement with ID \"test_uuid\" could not be found.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/{entitlement_id}:\n+    get:\n+      description: Retrieves a single Entitlement\n+      operationId: getEntitlement\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: entitlement_id\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: A successful operation\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/EntitlementDTO'\n+        404:\n+          description: Entitlement could not be found.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Entitlement with ID \"test_uuid\" could not be found.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    put:\n+      description: Updates an Entitlement. This only works for the quantity.\n+      operationId: updateEntitlement\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: entitlement_id\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      requestBody:\n+        description: Updated entitlement\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/EntitlementDTO'\n+      responses:\n+        204:\n+          description: A successful operation\n+        400:\n+          description: Quantity value must be greater than 0.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Quantity value must be greater than 0.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Entitlement could not be found.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Entitlement with ID \"test_uuid\" could not be found.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/{dbid}/upstream_cert:\n+    get:\n+      description: Retrieves a Subscription Certificate\n+      operationId: getUpstreamCert\n+      tags:\n+        - Certificates\n+        - Entitlements\n+      parameters:\n+        - name: dbid\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: A successful operation\n+          content:\n+            text/plain:\n+              schema:\n+                type: string\n+        404:\n+          description: |\n+            Entitlement could not be found.\n+            Unable to find upstream certificate for entitlement.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Entitlement with ID \"test_uuid\" could not be found.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/{dbid}:\n+    delete:\n+      description: Deletes an Entitlement\n+      operationId: unbind\n+      tags:\n+        - Entitlements\n+      parameters:\n+        - name: dbid\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        204:\n+          description: Entitlement successfuly deleted\n+        404:\n+          description: Entitlement could not be found.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Entitlement with ID \"test_uuid\" could not be found.\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /entitlements/product/{product_id}:\n+    put:\n+      description: Regenerates the Entitlement Certificates for a Product\n+      operationId: regenerateEntitlementCertificatesForProduct\n+      tags:\n+        - Certificates\n+        - Entitlements\n+      parameters:\n+        - name: product_id\n+          in: path\n+          required: true\n+          schema:\n+            type: string\n+        - name: lazy_regen\n+          in: query\n+          required: false\n+          schema:\n+            type: boolean\n+            default: true\n+      security: []\n+      responses:\n+        202:\n+          description: A successful operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37"}, "originalPosition": 242}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee03cab87c77f69add0cc12da186bbba69279f37", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/ee03cab87c77f69add0cc12da186bbba69279f37", "committedDate": "2020-06-15T13:00:24Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder"}, "afterCommit": {"oid": "93a0df84038579e8daf0a3a00f91673dbda58d73", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/93a0df84038579e8daf0a3a00f91673dbda58d73", "committedDate": "2020-06-19T11:09:12Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93a0df84038579e8daf0a3a00f91673dbda58d73", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/93a0df84038579e8daf0a3a00f91673dbda58d73", "committedDate": "2020-06-19T11:09:12Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder"}, "afterCommit": {"oid": "0efcdd0749aede68891db9ae660cbd487419790c", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/0efcdd0749aede68891db9ae660cbd487419790c", "committedDate": "2020-06-19T13:15:25Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted\n- Add pagination parameters and builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDkyNTUx", "url": "https://github.com/candlepin/candlepin/pull/2726#pullrequestreview-434092551", "createdAt": "2020-06-19T13:49:51Z", "commit": {"oid": "0efcdd0749aede68891db9ae660cbd487419790c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0OTo1MVrOGmViWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzo0OTo1MVrOGmViWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTkzMQ==", "bodyText": "One thing to keep in mind with how paging works today, is that the presence of paging info often results in at least one additional query (to get counts for the headers). So we may not want to default to the always-create behavior we have here.", "url": "https://github.com/candlepin/candlepin/pull/2726#discussion_r442851931", "createdAt": "2020-06-19T13:49:51Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/resource/EntitlementResource.java", "diffHunk": "@@ -152,18 +125,24 @@ public EntitlementDTO hasEntitlement(@PathParam(\"consumer_uuid\") String consumer\n                 consumerUuid, productId));\n     }\n \n-    @ApiOperation(notes = \"Retrieves list of Entitlements\", value = \"listAllForConsumer\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n+    @Override\n     public List<EntitlementDTO> listAllForConsumer(\n-        @QueryParam(\"consumer\") String consumerUuid,\n-        @QueryParam(\"matches\") String matches,\n-        @QueryParam(\"attribute\") List<KeyValueParameter> attrFilters,\n-        @Context PageRequest pageRequest) {\n+        String consumerUuid,\n+        String matches,\n+        List<KeyValueParamDTO> attrFilters,\n+        Integer page,\n+        Integer perPage,\n+        String order,\n+        String orderBy) {\n \n         EntitlementFilterBuilder filters = EntitlementFinderUtil.createFilter(matches, attrFilters);\n         Page<List<Entitlement>> p;\n+        PageRequest pageRequest = PageRequest.create(() -> this.i18n)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0efcdd0749aede68891db9ae660cbd487419790c"}, "originalPosition": 159}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea765758b8b7a9758de293d15b06f512a1421e2", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/cea765758b8b7a9758de293d15b06f512a1421e2", "committedDate": "2020-06-22T08:04:11Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ff9dfa298deaffb48ef2d8368f7f7c4ac67cab3", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/6ff9dfa298deaffb48ef2d8368f7f7c4ac67cab3", "committedDate": "2020-06-22T07:06:58Z", "message": "Undo paging changes."}, "afterCommit": {"oid": "cea765758b8b7a9758de293d15b06f512a1421e2", "author": {"user": {"login": "Januson", "name": null}}, "url": "https://github.com/candlepin/candlepin/commit/cea765758b8b7a9758de293d15b06f512a1421e2", "committedDate": "2020-06-22T08:04:11Z", "message": "Ent-1873: Port EntitlementResource to spec-first\n- Add endpoint definitions\n- Add definition for the KeyValueParamDto\n- Add KeyValueParamConverted"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2425, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}