{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTE5OTkz", "number": 2671, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0NDowOFrODsp5Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzoyMDo0M1rODsqzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTUwMjc1OnYy", "diffSide": "LEFT", "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0NDowOFrOF9n42A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoyNzo1MFrOF-z_Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDk4NA==", "bodyText": "Please keep and use the constant.", "url": "https://github.com/candlepin/candlepin/pull/2671#discussion_r400160984", "createdAt": "2020-03-30T12:44:08Z", "author": {"login": "wottop"}, "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "diffHunk": "@@ -46,8 +46,7 @@\n     private static Logger log = LoggerFactory.getLogger(LoggingFilter.class);\n \n     public static final String CSID_KEY = \"csid\";\n-    private static final int CSID_MAX_LENGTH = 40;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c7316dc0f76423a429a4646c85107d39c54ee0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzc4Mw==", "bodyText": "Fixed.", "url": "https://github.com/candlepin/candlepin/pull/2671#discussion_r401407783", "createdAt": "2020-04-01T07:27:50Z", "author": {"login": "abhiskum"}, "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "diffHunk": "@@ -46,8 +46,7 @@\n     private static Logger log = LoggerFactory.getLogger(LoggingFilter.class);\n \n     public static final String CSID_KEY = \"csid\";\n-    private static final int CSID_MAX_LENGTH = 40;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDk4NA=="}, "originalCommit": {"oid": "95c7316dc0f76423a429a4646c85107d39c54ee0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTY1MTc2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzoyMDo0M1rOF9pWDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0NToxOFrOF-0j0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE4NDg0NQ==", "bodyText": "I really don't feel truncating is the right approach here, but if that's what we're going to do, we should still output a log message indicating that we've truncated the original value down, and what that value was so we can at least track and figure out what happened in the event that it happens or when there's a collision caused by it.", "url": "https://github.com/candlepin/candlepin/pull/2671#discussion_r400184845", "createdAt": "2020-03-30T13:20:43Z", "author": {"login": "Ceiu"}, "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "diffHunk": "@@ -95,11 +94,11 @@ public void doFilter(ServletRequest request, ServletResponse response,\n \n             if (correlationId != null) {\n                 if (CSID_REGEX.matcher(correlationId).matches()) {\n-                    MDC.put(CSID_KEY, correlationId);\n+                    MDC.put(CSID_KEY,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c7316dc0f76423a429a4646c85107d39c54ee0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNzE2OQ==", "bodyText": "Fixed.", "url": "https://github.com/candlepin/candlepin/pull/2671#discussion_r401417169", "createdAt": "2020-04-01T07:45:18Z", "author": {"login": "abhiskum"}, "path": "common/src/main/java/org/candlepin/common/filter/LoggingFilter.java", "diffHunk": "@@ -95,11 +94,11 @@ public void doFilter(ServletRequest request, ServletResponse response,\n \n             if (correlationId != null) {\n                 if (CSID_REGEX.matcher(correlationId).matches()) {\n-                    MDC.put(CSID_KEY, correlationId);\n+                    MDC.put(CSID_KEY,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE4NDg0NQ=="}, "originalCommit": {"oid": "95c7316dc0f76423a429a4646c85107d39c54ee0"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}