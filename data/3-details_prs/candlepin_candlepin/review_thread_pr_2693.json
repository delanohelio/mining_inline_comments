{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMTg5Mzg2", "number": 2693, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozNTo1OFrOD396Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoxNToyMFrOD6ROqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDEyNTk0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozNTo1OFrOGOhgXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDoyODo1OFrOGOjTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg4MjIwNA==", "bodyText": "Not part of your changes but ownerCurator and permissionCurator are not used anymore so we could get rid of them.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r417882204", "createdAt": "2020-04-30T09:35:58Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -30,38 +30,16 @@\n \n import com.google.inject.Inject;\n \n-import io.swagger.annotations.Api;\n-import io.swagger.annotations.ApiOperation;\n-import io.swagger.annotations.ApiParam;\n-import io.swagger.annotations.ApiResponse;\n-import io.swagger.annotations.ApiResponses;\n-import io.swagger.annotations.Authorization;\n-\n-import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;\n import org.jboss.resteasy.spi.BadRequestException;\n import org.xnap.commons.i18n.I18n;\n \n import java.util.Collection;\n-import java.util.stream.Stream;\n-\n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.PUT;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-\n-\n+import java.util.stream.Collectors;\n \n /**\n- *\n+ * API implementation for Role operations\n  */\n-@Path(\"/roles\")\n-@Api(value = \"roles\", authorizations = { @Authorization(\"basic\") })\n-public class RoleResource {\n+public class RoleResource implements RolesApi {\n \n     private UserServiceAdapter userService;\n     private OwnerCurator ownerCurator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f115d098a694539a83a1ac3d2eee3e6d66de52"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkxMTYwMw==", "bodyText": "Fixed it.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r417911603", "createdAt": "2020-04-30T10:28:58Z", "author": {"login": "wolfdale"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -30,38 +30,16 @@\n \n import com.google.inject.Inject;\n \n-import io.swagger.annotations.Api;\n-import io.swagger.annotations.ApiOperation;\n-import io.swagger.annotations.ApiParam;\n-import io.swagger.annotations.ApiResponse;\n-import io.swagger.annotations.ApiResponses;\n-import io.swagger.annotations.Authorization;\n-\n-import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;\n import org.jboss.resteasy.spi.BadRequestException;\n import org.xnap.commons.i18n.I18n;\n \n import java.util.Collection;\n-import java.util.stream.Stream;\n-\n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.PUT;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-\n-\n+import java.util.stream.Collectors;\n \n /**\n- *\n+ * API implementation for Role operations\n  */\n-@Path(\"/roles\")\n-@Api(value = \"roles\", authorizations = { @Authorization(\"basic\") })\n-public class RoleResource {\n+public class RoleResource implements RolesApi {\n \n     private UserServiceAdapter userService;\n     private OwnerCurator ownerCurator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg4MjIwNA=="}, "originalCommit": {"oid": "02f115d098a694539a83a1ac3d2eee3e6d66de52"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDE3NTYxOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTo0OTo1NFrOGOh_7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDoyODozNVrOGOjSUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5MDI4Nw==", "bodyText": "We should return 204 as we are not returning any data.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r417890287", "createdAt": "2020-04-30T09:49:54Z", "author": {"login": "Januson"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1124,6 +1124,390 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /roles:\n+    get:\n+      description: Retrieves a list of Roles\n+      tags:\n+        - Roles\n+      operationId: getRoles\n+      x-java-response:\n+        type: Iterable\n+        isContainer: true\n+      security: []\n+      responses:\n+        200:\n+          description: A list of roles\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/RoleDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    post:\n+      tags:\n+        - Roles\n+      description: Creates a Role\n+      operationId: createRole\n+      security: []\n+      requestBody:\n+        description: A role to be created\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Role successfully created.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role is null or empty or role name not specified\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role is null or empty or role name not specified\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        409:\n+          description: Role already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role already exists\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}:\n+    get:\n+      description: Retrieves a single role by its name.\n+      tags:\n+        - Roles\n+      operationId: getRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Returns a role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    put:\n+      description: Updates Role. To avoid race conditions, we do not support updating the user or permission\n+        collections. Currently this call will only update the role name. See the specific nested POST/DELETE\n+        calls for modifying users and permissions.\n+      tags:\n+        - Roles\n+      operationId: updateRole\n+      security: []\n+      parameters:\n+        - name: role_name\n+          in: path\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Role\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Returns updated role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a Role\n+      tags:\n+        - Roles\n+      operationId: deleteRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f115d098a694539a83a1ac3d2eee3e6d66de52"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzkxMTM3Nw==", "bodyText": "Corrected.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r417911377", "createdAt": "2020-04-30T10:28:35Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1124,6 +1124,390 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /roles:\n+    get:\n+      description: Retrieves a list of Roles\n+      tags:\n+        - Roles\n+      operationId: getRoles\n+      x-java-response:\n+        type: Iterable\n+        isContainer: true\n+      security: []\n+      responses:\n+        200:\n+          description: A list of roles\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/RoleDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    post:\n+      tags:\n+        - Roles\n+      description: Creates a Role\n+      operationId: createRole\n+      security: []\n+      requestBody:\n+        description: A role to be created\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Role successfully created.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role is null or empty or role name not specified\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role is null or empty or role name not specified\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        409:\n+          description: Role already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role already exists\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}:\n+    get:\n+      description: Retrieves a single role by its name.\n+      tags:\n+        - Roles\n+      operationId: getRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Returns a role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    put:\n+      description: Updates Role. To avoid race conditions, we do not support updating the user or permission\n+        collections. Currently this call will only update the role name. See the specific nested POST/DELETE\n+        calls for modifying users and permissions.\n+      tags:\n+        - Roles\n+      operationId: updateRole\n+      security: []\n+      parameters:\n+        - name: role_name\n+          in: path\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Role\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Returns updated role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a Role\n+      tags:\n+        - Roles\n+      operationId: deleteRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5MDI4Nw=="}, "originalCommit": {"oid": "02f115d098a694539a83a1ac3d2eee3e6d66de52"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDIyMzAwOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDowNjo0M1rOGSAQSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDowMzo1MlrOGSYPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzMTcyMw==", "bodyText": "There is one more reason that this could return a 400: when the role_name is null or empty, so this could be: Access type NONE not supported, or role name is null or empty", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r421531723", "createdAt": "2020-05-07T14:06:43Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1124,6 +1124,390 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /roles:\n+    get:\n+      description: Retrieves a list of Roles\n+      tags:\n+        - Roles\n+      operationId: getRoles\n+      x-java-response:\n+        type: Iterable\n+        isContainer: true\n+      security: []\n+      responses:\n+        200:\n+          description: A list of roles\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/RoleDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    post:\n+      tags:\n+        - Roles\n+      description: Creates a Role\n+      operationId: createRole\n+      security: []\n+      requestBody:\n+        description: A role to be created\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Role successfully created.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role is null or empty or role name not specified\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role is null or empty or role name not specified\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        409:\n+          description: Role already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role already exists\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}:\n+    get:\n+      description: Retrieves a single role by its name.\n+      tags:\n+        - Roles\n+      operationId: getRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Returns a role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    put:\n+      description: Updates Role. To avoid race conditions, we do not support updating the user or permission\n+        collections. Currently this call will only update the role name. See the specific nested POST/DELETE\n+        calls for modifying users and permissions.\n+      tags:\n+        - Roles\n+      operationId: updateRole\n+      security: []\n+      parameters:\n+        - name: role_name\n+          in: path\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Role\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Returns updated role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a Role\n+      tags:\n+        - Roles\n+      operationId: deleteRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        204:\n+          description: Role successfully deleted.\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}/users/{username}:\n+    post:\n+      tags:\n+        - Roles\n+      description: Adds a User to a Role\n+      operationId: addUserToRole\n+      security: []\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+        - in: path\n+          name: username\n+          description: User name\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: User added to the role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Either role or username is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Either role or username is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role or Username not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role or Username not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a User from a Role\n+      tags:\n+        - Roles\n+      operationId: deleteUserFromRole\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+        - in: path\n+          name: username\n+          description: User name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: User from a role is removed\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Either role or username is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Either role or username is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role or Username not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role or Username not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}/permissions:\n+    post:\n+      tags:\n+        - Roles\n+      description: Adds a Permission to a Role\n+      operationId: addRolePermission\n+      security: []\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Permission Blueprint\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/PermissionBlueprintDTO'\n+      responses:\n+        200:\n+          description: Permission to a Role is added\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Access type NONE not supported", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72fecd242196b5604766e956629a2c92909d191e"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkyNDY4Mw==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r421924683", "createdAt": "2020-05-08T04:03:52Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1124,6 +1124,390 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /roles:\n+    get:\n+      description: Retrieves a list of Roles\n+      tags:\n+        - Roles\n+      operationId: getRoles\n+      x-java-response:\n+        type: Iterable\n+        isContainer: true\n+      security: []\n+      responses:\n+        200:\n+          description: A list of roles\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/RoleDTO'\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    post:\n+      tags:\n+        - Roles\n+      description: Creates a Role\n+      operationId: createRole\n+      security: []\n+      requestBody:\n+        description: A role to be created\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Role successfully created.\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role is null or empty or role name not specified\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role is null or empty or role name not specified\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        409:\n+          description: Role already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role already exists\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}:\n+    get:\n+      description: Retrieves a single role by its name.\n+      tags:\n+        - Roles\n+      operationId: getRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: Returns a role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    put:\n+      description: Updates Role. To avoid race conditions, we do not support updating the user or permission\n+        collections. Currently this call will only update the role name. See the specific nested POST/DELETE\n+        calls for modifying users and permissions.\n+      tags:\n+        - Roles\n+      operationId: updateRole\n+      security: []\n+      parameters:\n+        - name: role_name\n+          in: path\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Role\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/RoleDTO'\n+      responses:\n+        200:\n+          description: Returns updated role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a Role\n+      tags:\n+        - Roles\n+      operationId: deleteRoleByName\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        204:\n+          description: Role successfully deleted.\n+        400:\n+          description: Role name is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role name is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}/users/{username}:\n+    post:\n+      tags:\n+        - Roles\n+      description: Adds a User to a Role\n+      operationId: addUserToRole\n+      security: []\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+        - in: path\n+          name: username\n+          description: User name\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: User added to the role\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Either role or username is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Either role or username is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role or Username not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role or Username not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a User from a Role\n+      tags:\n+        - Roles\n+      operationId: deleteUserFromRole\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+        - in: path\n+          name: username\n+          description: User name\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: User from a role is removed\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Either role or username is null or empty\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Either role or username is null or empty\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Role or Username not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Role or Username not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /roles/{role_name}/permissions:\n+    post:\n+      tags:\n+        - Roles\n+      description: Adds a Permission to a Role\n+      operationId: addRolePermission\n+      security: []\n+      parameters:\n+        - in: path\n+          name: role_name\n+          description: Role name\n+          required: true\n+          schema:\n+            type: string\n+      requestBody:\n+        description: Permission Blueprint\n+        required: true\n+        content:\n+          application/json:\n+            schema:\n+              $ref: '#/components/schemas/PermissionBlueprintDTO'\n+      responses:\n+        200:\n+          description: Permission to a Role is added\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/RoleDTO'\n+        400:\n+          description: Access type NONE not supported", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzMTcyMw=="}, "originalCommit": {"oid": "72fecd242196b5604766e956629a2c92909d191e"}, "originalPosition": 320}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDI2MjgxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoxNToyMFrOGSApwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDowMzo1MFrOGSYPOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzODI0MQ==", "bodyText": "There's no reason to change this into returning a Set. We can still return a Stream here, by the x-java-response: type: to java.util.stream.Stream from Iterable (check other examples in the spec file)", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r421538241", "createdAt": "2020-05-07T14:15:20Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -283,14 +239,15 @@ public RoleDTO deleteUserFromRole(@PathParam(\"role_name\") String roleName,\n         return this.modelTranslator.translate(role, RoleDTO.class);\n     }\n \n-    @ApiOperation(notes = \"Retrieves a list of Roles\", value = \"getRoles\")\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    @Wrapped(element = \"roles\")\n-    public Stream<RoleDTO> getRoles() {\n+    /**\n+     * {@InheritDoc}\n+     */\n+    @Override\n+    public Iterable<RoleDTO> getRoles() {\n         // TODO: Add in filter options\n \n         Collection<? extends RoleInfo> roles = this.userService.listRoles();\n-        return roles.stream().map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class));\n+        return roles.stream().map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n+            .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72fecd242196b5604766e956629a2c92909d191e"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkyNDY2NQ==", "bodyText": "Fixed it.", "url": "https://github.com/candlepin/candlepin/pull/2693#discussion_r421924665", "createdAt": "2020-05-08T04:03:50Z", "author": {"login": "wolfdale"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -283,14 +239,15 @@ public RoleDTO deleteUserFromRole(@PathParam(\"role_name\") String roleName,\n         return this.modelTranslator.translate(role, RoleDTO.class);\n     }\n \n-    @ApiOperation(notes = \"Retrieves a list of Roles\", value = \"getRoles\")\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    @Wrapped(element = \"roles\")\n-    public Stream<RoleDTO> getRoles() {\n+    /**\n+     * {@InheritDoc}\n+     */\n+    @Override\n+    public Iterable<RoleDTO> getRoles() {\n         // TODO: Add in filter options\n \n         Collection<? extends RoleInfo> roles = this.userService.listRoles();\n-        return roles.stream().map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class));\n+        return roles.stream().map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n+            .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzODI0MQ=="}, "originalCommit": {"oid": "72fecd242196b5604766e956629a2c92909d191e"}, "originalPosition": 225}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4169, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}