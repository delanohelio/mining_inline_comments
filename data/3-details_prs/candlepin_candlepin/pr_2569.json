{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjA0MDIx", "number": 2569, "title": "[F] ENT-1911 Add method to get provided products from ProductInfo", "bodyText": "Added method to get provided products from ProductInfo.\n(Note: getProvidedProducts and getDerivedProvidedProducts will get removed from subscriptionInfo in later PR's)\n\nPS :\n\nThis is done to isolate it from refresh code flow.\nThis will help to fix rspec issues related to #2565 changes.\n\nMerge order :\nThis or #2563", "createdAt": "2020-01-16T11:47:44Z", "url": "https://github.com/candlepin/candlepin/pull/2569", "merged": true, "mergeCommit": {"oid": "f37f3cc89694ab10ba58aa9dc5e8de0ca55b9352"}, "closed": true, "closedAt": "2020-01-23T08:14:39Z", "author": {"login": "wolfdale"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb660ENAFqTM0Mzk0MDIyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb83GyvgFqTM0NjY1NTQxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzOTQwMjI1", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-343940225", "createdAt": "2020-01-16T14:13:53Z", "commit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoxMzo1M1rOFear-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoxMzo1M1rOFear-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQzODg0MQ==", "bodyText": "Would it make sense to do the validation before clearing the existing list?", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r367438841", "createdAt": "2020-01-16T14:13:53Z", "author": {"login": "barnabycourt"}, "path": "server/src/main/java/org/candlepin/dto/manifest/v1/ProductDTO.java", "diffHunk": "@@ -846,6 +847,92 @@ private boolean isNullOrIncomplete(BrandingDTO branding) {\n             branding.getType() == null || branding.getType().isEmpty();\n     }\n \n+    /**\n+     * Retrieves a view of the provided products for the product represented by this DTO.\n+     * If the provided products have not yet been defined, this method returns null.\n+     *\n+     * Note that the collection returned by this method is a view of the collection backing this\n+     * set of provided products. Elements cannot be added to the collection, but elements may be removed.\n+     * Changes made to the collection will be reflected by this product DTO instance.\n+     *\n+     * @return\n+     *  The provided products associated with this key, or null if they have not yet been defined\n+     */\n+    @JsonIgnore\n+    @Override\n+    public Set<ProductDTO> getProvidedProducts() {\n+        return this.providedProducts != null ? new SetView<>(this.providedProducts) : null;\n+    }\n+\n+    /**\n+     * Adds the collection of provided products to this Product DTO.\n+     *\n+     * @param providedProducts\n+     *  A set of provided products to attach to this DTO, or null to clear the existing ones\n+     *\n+     * @return\n+     *  A reference to this DTO\n+     */\n+    @JsonIgnore\n+    public ProductDTO setProvidedProducts(Set<ProductDTO> providedProducts) {\n+        if (providedProducts != null) {\n+            if (this.providedProducts == null) {\n+                this.providedProducts = new HashSet<>();\n+            }\n+            else {\n+                this.providedProducts.clear();\n+            }\n+\n+            for (ProductDTO dto : providedProducts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTYyMDkx", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-344562091", "createdAt": "2020-01-17T13:01:12Z", "commit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzowMToxM1rOFe4Srg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzoxNzo0NFrOFe4rTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkyMzg4Ng==", "bodyText": "I'm a bit confused by this. Why are we calling the populate method recursively here, which will overwrite all the data on the marketing ProductData (this) we're populating already? If it is in order to turn the Product into a ProductData, new ProductData(Product product) is what we should be using instead.", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r367923886", "createdAt": "2020-01-17T13:01:13Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/model/dto/ProductData.java", "diffHunk": "@@ -1118,6 +1189,12 @@ public ProductData populate(Product source) {\n         this.setDependentProductIds(source.getDependentProductIds());\n         this.setBranding(source.getBranding());\n \n+        if (source.getProvidedProducts() != null) {\n+            this.setProvidedProducts(source.getProvidedProducts().stream()\n+                .map(prod -> this.populate(prod))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzMDE5MQ==", "bodyText": "I know you've added the ignore annotations here, but the truth is that since the manifest API should not change (provided products should still stay in the manifest PoolDTO), there is no need to add this field on this DTO at all.\nI know you've added it because the ProductInfo interface dictates it, but this is another case of asking: why does this DTO need that interface??? @Ceiu since I see you added that, what was the reason? Our manifest API is clearly different than our model, our REST API, and our adapters API, so do we need that interface here?", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r367930191", "createdAt": "2020-01-17T13:17:44Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/manifest/v1/ProductDTO.java", "diffHunk": "@@ -846,6 +847,92 @@ private boolean isNullOrIncomplete(BrandingDTO branding) {\n             branding.getType() == null || branding.getType().isEmpty();\n     }\n \n+    /**\n+     * Retrieves a view of the provided products for the product represented by this DTO.\n+     * If the provided products have not yet been defined, this method returns null.\n+     *\n+     * Note that the collection returned by this method is a view of the collection backing this\n+     * set of provided products. Elements cannot be added to the collection, but elements may be removed.\n+     * Changes made to the collection will be reflected by this product DTO instance.\n+     *\n+     * @return\n+     *  The provided products associated with this key, or null if they have not yet been defined\n+     */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52ea98419facd5c9fc042e184899838138fd247e", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/52ea98419facd5c9fc042e184899838138fd247e", "committedDate": "2020-01-16T11:38:18Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}, "afterCommit": {"oid": "da58028e52847faf63fc2924831549c52861fb36", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/da58028e52847faf63fc2924831549c52861fb36", "committedDate": "2020-01-20T09:44:34Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da58028e52847faf63fc2924831549c52861fb36", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/da58028e52847faf63fc2924831549c52861fb36", "committedDate": "2020-01-20T09:44:34Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}, "afterCommit": {"oid": "21e230b48ece041f79d99531e327f5938986aba7", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/21e230b48ece041f79d99531e327f5938986aba7", "committedDate": "2020-01-20T12:07:35Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzU0NDUz", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-345354453", "createdAt": "2020-01-20T14:43:40Z", "commit": {"oid": "21e230b48ece041f79d99531e327f5938986aba7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTA4OTM5", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-345908939", "createdAt": "2020-01-21T14:17:15Z", "commit": {"oid": "21e230b48ece041f79d99531e327f5938986aba7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxNzoxNVrOFf7gvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxNzoxNVrOFf7gvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyNTIxNA==", "bodyText": "Isn't the use of the Util.collectionsAreEqual unnecessary here and on all other DTOs (manifest ProductDTO, ProductData)? @Ceiu am I right in thinking we only need to use this method in hibernate entity classes, because hibernate collections don't implement .equals properly?", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r369025214", "createdAt": "2020-01-21T14:17:15Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/ProductDTO.java", "diffHunk": "@@ -1035,6 +1035,8 @@ public boolean equals(Object obj) {\n \n             // Check product content\n             equals = equals && Util.collectionsAreEqual(this.getProductContent(), that.getProductContent());\n+            equals = equals &&\n+                Util.collectionsAreEqual(this.getProvidedProducts(), that.getProvidedProducts());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e230b48ece041f79d99531e327f5938986aba7"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21e230b48ece041f79d99531e327f5938986aba7", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/21e230b48ece041f79d99531e327f5938986aba7", "committedDate": "2020-01-20T12:07:35Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}, "afterCommit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/21f8e975856fe832e28831b07bae3a35cb6f43cf", "committedDate": "2020-01-22T14:01:31Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjIzMjM0", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-346623234", "createdAt": "2020-01-22T14:22:31Z", "commit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDoyMjozMVrOFgdz5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDoyNDoyN1rOFgd4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU4NzE3Mw==", "bodyText": "Similarly to the equals method, where we don't need to check equality in a custom way, we also don't need to calculate hashcode in a custom way. You can just add this.getProvidedProducts() in the HashCodeBuilder below.", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r369587173", "createdAt": "2020-01-22T14:22:31Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/ProductDTO.java", "diffHunk": "@@ -1055,6 +1056,15 @@ public int hashCode() {\n             }\n         }\n \n+        int ppHashCode = 0;\n+        Collection<ProductDTO> providedProducts = this.getProvidedProducts();\n+\n+        if (providedProducts != null) {\n+            for (ProductDTO dto : providedProducts) {\n+                ppHashCode = 31 * ppHashCode + (dto != null ? dto.hashCode() : 0);\n+            }\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU4NzkwMg==", "bodyText": "Same here, no need to calculate hashcode above and set it here. This line is enough: .append(this.getProvidedProducts()).", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r369587902", "createdAt": "2020-01-22T14:23:40Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/manifest/v1/ProductDTO.java", "diffHunk": "@@ -908,7 +1011,9 @@ public int hashCode() {\n             .append(this.getAttributes())\n             .append(this.getDependentProductIds())\n             .append(this.getBranding())\n-            .append(pcHashCode);\n+            .append(this.getProvidedProducts())\n+            .append(pcHashCode)\n+            .append(ppHashCode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU4ODM4OA==", "bodyText": "Same here, no need for calculating hashcode and setting it. Just append.(this.getProvidedProducts())", "url": "https://github.com/candlepin/candlepin/pull/2569#discussion_r369588388", "createdAt": "2020-01-22T14:24:27Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/model/dto/ProductData.java", "diffHunk": "@@ -1001,7 +1072,8 @@ public int hashCode() {\n             .append(this.content)\n             .append(this.dependentProductIds)\n             .append(this.branding)\n-            .append(this.locked);\n+            .append(this.locked)\n+            .append(ppHashCode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "effa8bb1c651aac2a0cbf82fbadee43fdd0e1561", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/effa8bb1c651aac2a0cbf82fbadee43fdd0e1561", "committedDate": "2020-01-22T14:58:14Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21f8e975856fe832e28831b07bae3a35cb6f43cf", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/21f8e975856fe832e28831b07bae3a35cb6f43cf", "committedDate": "2020-01-22T14:01:31Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}, "afterCommit": {"oid": "effa8bb1c651aac2a0cbf82fbadee43fdd0e1561", "author": {"user": {"login": "wolfdale", "name": "Prakhar Gupta"}}, "url": "https://github.com/candlepin/candlepin/commit/effa8bb1c651aac2a0cbf82fbadee43fdd0e1561", "committedDate": "2020-01-22T14:58:14Z", "message": "ENT-1911: added method to get provided product from productInfo interface."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjU1NDE5", "url": "https://github.com/candlepin/candlepin/pull/2569#pullrequestreview-346655419", "createdAt": "2020-01-22T15:02:35Z", "commit": {"oid": "effa8bb1c651aac2a0cbf82fbadee43fdd0e1561"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2451, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}