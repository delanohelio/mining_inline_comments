{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjAyMTcy", "number": 2633, "reviewThreads": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowMDozMFrODluPcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNzo0M1rODnY5zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODgxNTIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/UserResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowMDozMFrOFyxaBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowNDo0MFrOFy1Eyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjU5OQ==", "bodyText": "You can use ArrayList constructor instead of going through stream.\nnew ArrayList<UserDTO>(users)\nSecond point. I know it was already there, but peek is intended mainly for debugging. Map would be much clearer.\n.map(e -> e.users(new ArrayList<>(users)));", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388782599", "createdAt": "2020-03-06T09:00:30Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/resource/UserResource.java", "diffHunk": "@@ -155,7 +156,7 @@ public UserDTO getUserInfo(@PathParam(\"username\") @Verify(User.class) String use\n             // to avoid leaking role details about other users.\n             return roles.stream()\n                 .map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n-                .peek(e -> e.setUsers(users));\n+                .peek(e -> e.setUsers(users.stream().collect(Collectors.toList())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjY5OQ==", "bodyText": "Updated to Map.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842699", "createdAt": "2020-03-06T11:04:40Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/UserResource.java", "diffHunk": "@@ -155,7 +156,7 @@ public UserDTO getUserInfo(@PathParam(\"username\") @Verify(User.class) String use\n             // to avoid leaking role details about other users.\n             return roles.stream()\n                 .map(this.modelTranslator.getStreamMapper(RoleInfo.class, RoleDTO.class))\n-                .peek(e -> e.setUsers(users));\n+                .peek(e -> e.setUsers(users.stream().collect(Collectors.toList())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4MjU5OQ=="}, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODgyNzA3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowNDo0NVrOFyxheQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowNDozNVrOFy1ElA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDUwNQ==", "bodyText": "There might be a typo. Comment says that password should be allways null on the DTO but we are testing for not null.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388784505", "createdAt": "2020-03-06T09:04:45Z", "author": {"login": "Januson"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            // Under no circumstance should we be copying over the password field on translation.\n+            // This should always be null on the DTO.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjY0NA==", "bodyText": "Fixed.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842644", "createdAt": "2020-03-06T11:04:35Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            // Under no circumstance should we be copying over the password field on translation.\n+            // This should always be null on the DTO.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDUwNQ=="}, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODg0Nzk2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMjoxM1rOFyxuJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowNDozMFrOFy1Ebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Nzc1MA==", "bodyText": "There is no need to be explicit with these type arguments. JVM can infer them so they can be omited.\nCollections.emptySet()", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388787750", "createdAt": "2020-03-06T09:12:13Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override\n+    public Role translate(RoleDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public Role translate(ModelTranslator modelTranslator, RoleDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new Role()) : null;\n+    }\n+\n+    @Override\n+    public Role populate(RoleDTO source, Role destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public Role populate(ModelTranslator modelTranslator, RoleDTO source, Role destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setName(source.getName());\n+\n+        if (modelTranslator != null) {\n+            // Users\n+            List<UserDTO> users = source.getUsers();\n+\n+            if (users != null) {\n+                destination.setUsers(users.stream()\n+                    .map(modelTranslator.getStreamMapper(UserDTO.class, User.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setUsers(Collections.<User>emptySet());\n+            }\n+\n+            // Permissions\n+            List<PermissionBlueprintDTO> permissions = source.getPermissions();\n+\n+            if (permissions != null) {\n+                destination.setPermissions(permissions.stream()\n+                    .map(modelTranslator.getStreamMapper(PermissionBlueprintDTO.class,\n+                    PermissionBlueprint.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setPermissions(Collections.<PermissionBlueprint>emptySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MjYwNw==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r388842607", "createdAt": "2020-03-06T11:04:30Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override\n+    public Role translate(RoleDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public Role translate(ModelTranslator modelTranslator, RoleDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new Role()) : null;\n+    }\n+\n+    @Override\n+    public Role populate(RoleDTO source, Role destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public Role populate(ModelTranslator modelTranslator, RoleDTO source, Role destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setName(source.getName());\n+\n+        if (modelTranslator != null) {\n+            // Users\n+            List<UserDTO> users = source.getUsers();\n+\n+            if (users != null) {\n+                destination.setUsers(users.stream()\n+                    .map(modelTranslator.getStreamMapper(UserDTO.class, User.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setUsers(Collections.<User>emptySet());\n+            }\n+\n+            // Permissions\n+            List<PermissionBlueprintDTO> permissions = source.getPermissions();\n+\n+            if (permissions != null) {\n+                destination.setPermissions(permissions.stream()\n+                    .map(modelTranslator.getStreamMapper(PermissionBlueprintDTO.class,\n+                    PermissionBlueprint.class))\n+                    .collect(Collectors.toSet()));\n+            }\n+            else {\n+                destination.setPermissions(Collections.<PermissionBlueprint>emptySet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4Nzc1MA=="}, "originalCommit": {"oid": "988cf578597b7b11636cc926ff2da6c9f4e88a7b"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzkzMzU0OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyNTo0NVrOFzfxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowOToxNVrOF04htA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MjI0Mg==", "bodyText": "Double quotes are only required in JSON format of the spec. We use yaml, which does not require the use of quotes (even though it still is parsed properly, we should be consistent with how the OpenAPI specification examples do it) at all around $ref, and single quotes around the reference url. Also, the #/definitions/... url is used in OpenAPI version 2.0. We use OpenAPI 3.0, which uses the #/components/schemas/... url.\nSo with that, this line (and other references in the changes further down) would be $ref: '#/components/schemas/NestedOwnerDTO'\nI use the latest OpenApi documentation (v 3.0.3) for reference: https://swagger.io/specification/", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389542242", "createdAt": "2020-03-09T09:25:45Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5NjQwNA==", "bodyText": "Corrected.\nThanks for explaining this. My approach was, I took a DTO definition from candlepin's Swagger.JSON. I converted it into yaml. And this was ignored in the schema definition.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390996404", "createdAt": "2020-03-11T14:09:15Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MjI0Mg=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzk0MDc2OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyNzo1MlrOFzf11A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowOToyNlrOF04iIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MzM4MA==", "bodyText": "Same for descriptions: no need for double quotes in yaml", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389543380", "createdAt": "2020-03-09T09:27:52Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5NjUxMw==", "bodyText": "Corrected.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390996513", "createdAt": "2020-03-11T14:09:26Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MzM4MA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzk3OTIxOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOTozOToyNFrOFzgNRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDowOTo0OFrOF04jBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0OTM4MA==", "bodyText": "Instead of explicitly adding created/updated, you can simply make RoleDTO extend the TimestampedEntity like most other DTOs do:\n      allOf:\n        - $ref: '#/components/schemas/TimestampedEntity'\n        - type: object\n          properties:\n...", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389549380", "createdAt": "2020-03-09T09:39:24Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name\n+      properties:\n+        created:\n+          type: string\n+          format: \"date-time\"\n+        updated:\n+          type: string\n+          format: \"date-time\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5Njc0Mg==", "bodyText": "Updated.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390996742", "createdAt": "2020-03-11T14:09:48Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name\n+      properties:\n+        created:\n+          type: string\n+          format: \"date-time\"\n+        updated:\n+          type: string\n+          format: \"date-time\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0OTM4MA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDA1MDE2OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowMDoxOFrOFzg34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxMjozMFrOF04qgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MDI5MA==", "bodyText": "We could add uniqueItems: true on this array to make it generate a Set instead of a List, since I don't think having identical Users here is ever valid. (not something very important, but its good to be defensive like this on the API, instead of someone sneaking in some input like that which would cause trouble later on somewhere, like a query, in a hard-to-find way).", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389560290", "createdAt": "2020-03-09T10:00:18Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name\n+      properties:\n+        created:\n+          type: string\n+          format: \"date-time\"\n+        updated:\n+          type: string\n+          format: \"date-time\"\n+        id:\n+          type: string\n+          example: \"ff808081554a3e4101554a3e9033005d\"\n+        name:\n+          type: string\n+          example: \"admin-all\"\n+        users:\n+          type: array\n+          items:\n+            \"$ref\": \"#/definitions/UserDTO\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5ODY1Nw==", "bodyText": "Yep, there is a potential update from List to Set. Converted List to set in necessary places.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390998657", "createdAt": "2020-03-11T14:12:30Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name\n+      properties:\n+        created:\n+          type: string\n+          format: \"date-time\"\n+        updated:\n+          type: string\n+          format: \"date-time\"\n+        id:\n+          type: string\n+          example: \"ff808081554a3e4101554a3e9033005d\"\n+        name:\n+          type: string\n+          example: \"admin-all\"\n+        users:\n+          type: array\n+          items:\n+            \"$ref\": \"#/definitions/UserDTO\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MDI5MA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDA3MDAwOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDowNjowM1rOFzhDhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxMjo1MlrOF04reA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MzI2OQ==", "bodyText": "You've already extended TimestampedEntity on this object, so there's no reason to add the created/updated fields. They're already on the TimestampedEntity", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389563269", "createdAt": "2020-03-09T10:06:03Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password\n+            - superAdmin\n+          properties:\n+            created:\n+              type: string\n+              format: date-time\n+            updated:\n+              type: string\n+              format: date-time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5ODkwNA==", "bodyText": "Corrected.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390998904", "createdAt": "2020-03-11T14:12:52Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password\n+            - superAdmin\n+          properties:\n+            created:\n+              type: string\n+              format: date-time\n+            updated:\n+              type: string\n+              format: date-time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2MzI2OQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDA5ODI4OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDoxNDoxM1rOFzhUFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxMzo1NlrOF04u_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2NzUwOQ==", "bodyText": "The superAdmin field isn't required (it will default to false if it is left null)", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389567509", "createdAt": "2020-03-09T10:14:13Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password\n+            - superAdmin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk5OTgwNA==", "bodyText": "Removed the required fields.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r390999804", "createdAt": "2020-03-11T14:13:56Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password\n+            - superAdmin", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2NzUwOQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDExMDMyOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDoxNzo1NVrOFzhbSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNDoxNFrOF04wCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2OTM1NA==", "bodyText": "The id field is a database id, so it must not be required. When you do a POST request to create a new user for example, you don't need to specify the id because it doesn't have one yet", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389569354", "createdAt": "2020-03-09T10:17:55Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMDA3Mw==", "bodyText": "Removed.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391000073", "createdAt": "2020-03-11T14:14:14Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU2OTM1NA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDExNjQyOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDoxOTo1MlrOFzhfCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNDo0MFrOF04xPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3MDMxNA==", "bodyText": "The id field is a database id, so it must not be required. When you do a POST request to create a new role for example, you don't need to specify the id because it doesn't have one yet", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389570314", "createdAt": "2020-03-09T10:19:52Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMDM4Mg==", "bodyText": "Agreed, Corrected.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391000382", "createdAt": "2020-03-11T14:14:40Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU3MDMxNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDE4NTc4OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDo0MTowNVrOFziJCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxNjoyMVrOF042Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MTA2Nw==", "bodyText": "The name field is only really required when creating a role (but that is already handled by a custom check on the resource, with a user-friendly response message). It is not strictly required when updating a role, so we should probably not add it to the required list here.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389581067", "createdAt": "2020-03-09T10:41:05Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMTY1MA==", "bodyText": "Removed.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391001650", "createdAt": "2020-03-11T14:16:21Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,52 @@ components:\n               additionalProperties:\n                 type: string\n \n+    PermissionBlueprintDTO:\n+      description: \"Represents the permission blueprints exposed to the API layer\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+              example: \"ff808081554a3e4101554a3e9033005d\"\n+            owner:\n+              \"$ref\": \"#/definitions/NestedOwnerDTO\"\n+            type:\n+              type: string\n+              example: \"OWNER\"\n+            access:\n+              type: string\n+              example: \"NONE\"\n+\n+    RoleDTO:\n+      description: \"Represent the relationship between users and the permissions they have\"\n+      type: object\n+      required:\n+        - id\n+        - name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4MTA2Nw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI0MDMxOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMDo1ODoyMVrOFzip1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxODoyNVrOF048Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4OTQ2Mw==", "bodyText": "username and password are also not required. For example, in a PUT request (looking to update a user) you might only specify the superAdmin field (because that is the only field you might want to update). We only add fields to the required list if they must not be null under any circumstances (e.g. in both PUT/POST requests, or other requests where they are used as nested fields).\nGenerally, most fields on DTOs are not strictly required. The ones that usually are required are things like ids of nested entities (example: ActivationKeyDTO has a nested field called ActivationKeyPoolDTO, which refers to a Pool object. In this case, if we're specifying the ActivationKeyPoolDTO field, specifying it's pool id is never optional).\nA quick way to see if a field needs to be in the required list, is to check the current DTO (that is, ONLY the DTO which it is owned by, in this case UserDTO). If any setters or constructors check for null and throw exceptions (usually IllegalArgumentException), then that means that that field is always required, and should be added in the required list.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389589463", "createdAt": "2020-03-09T10:58:21Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzIwNg==", "bodyText": "Removed these attributes.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391003206", "createdAt": "2020-03-11T14:18:25Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -555,6 +601,38 @@ components:\n         keycloakResource:\n           type: string\n \n+    UserDTO:\n+      description: \"Represents user information for a given user\"\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          required:\n+            - id\n+            - username\n+            - password", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU4OTQ2Mw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDM3ODk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTo0ODoyOVrOFzj-TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxOTowOVrOF04-cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMTA4NQ==", "bodyText": "In addition to checking these for null, now that TimestampedEntityTranslator is not extended, we need to manually also translate the created/updated fields.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389611085", "createdAt": "2020-03-09T11:48:29Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java", "diffHunk": "@@ -60,17 +60,23 @@ public PermissionBlueprintDTO populate(PermissionBlueprint source, PermissionBlu\n     public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlueprint source,\n         PermissionBlueprintDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzc2MA==", "bodyText": "Added the steps to translate created/updated.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391003760", "createdAt": "2020-03-11T14:19:09Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintTranslator.java", "diffHunk": "@@ -60,17 +60,23 @@ public PermissionBlueprintDTO populate(PermissionBlueprint source, PermissionBlu\n     public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlueprint source,\n         PermissionBlueprintDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMTA4NQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDM4NjQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTo1MToyMlrOFzkC9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoxOToyMFrOF04-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMjI3Nw==", "bodyText": "The created/updated fields also need to be translated here", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389612277", "createdAt": "2020-03-09T11:51:22Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzg4Mg==", "bodyText": "Updated.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391003882", "createdAt": "2020-03-11T14:19:20Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxMjI3Nw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQwNzM1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTo1ODozMVrOFzkPNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MzowMFrOF1_EqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA==", "bodyText": "A newline above this would be good for readability", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389615414", "createdAt": "2020-03-09T11:58:31Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwNDAwOA==", "bodyText": "Added.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391004008", "createdAt": "2020-03-11T14:19:30Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MDcxMw==", "bodyText": "empty line should be above the @Override, not between class definition and javadoc", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391480713", "createdAt": "2020-03-12T09:03:32Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjIzMw==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152233", "createdAt": "2020-03-13T10:43:00Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTQxNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQxMDYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTo1OTozMlrOFzkREQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyNTo0OFrOF05R8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTg4OQ==", "bodyText": "If we're no longer using a translator to translate the owner, then the owner translation should move outside of the if(translator != null) block. And since there are no other entities being translated by a translator, then that block can be removed completely.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389615889", "createdAt": "2020-03-09T11:59:32Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java", "diffHunk": "@@ -72,7 +70,18 @@ public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlu\n         dest.setAccess(source.getAccessLevel());\n \n         if (translator != null) {\n-            dest.setOwner(translator.translate(source.getOwner(), OwnerDTO.class));\n+\n+            if (source.getOwner() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwODc1Mw==", "bodyText": "Agreed, PremissionBlueprintInfo returns OwnerInfo. It does return getKey(). Hence now translated the only Key from info to DTO.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391008753", "createdAt": "2020-03-11T14:25:48Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslator.java", "diffHunk": "@@ -72,7 +70,18 @@ public PermissionBlueprintDTO populate(ModelTranslator translator, PermissionBlu\n         dest.setAccess(source.getAccessLevel());\n \n         if (translator != null) {\n-            dest.setOwner(translator.translate(source.getOwner(), OwnerDTO.class));\n+\n+            if (source.getOwner() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNTg4OQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQxNDA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjowMDo0NVrOFzkTCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MzowOFrOF1_E3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw==", "bodyText": "Same here; Newline for readabiity", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389616393", "createdAt": "2020-03-09T12:00:45Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwOTkxMA==", "bodyText": "Added.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391009910", "createdAt": "2020-03-11T14:27:16Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTQ5Ng==", "bodyText": "Same here: the space needs to be between class definition and @Override, not javadoc and class definition", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391481496", "createdAt": "2020-03-12T09:05:05Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjI4Nw==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152287", "createdAt": "2020-03-13T10:43:08Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/RoleDTOTranslator.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The RoleDTOTranslator provides translation from RoleDTO to Role model objects.\n+ */\n+public class RoleDTOTranslator implements ObjectTranslator<RoleDTO, Role> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNjM5Mw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQxOTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjowMjo0M1rOFzkWNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MzoxOFrOF1_FKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA==", "bodyText": "Same here: newline above this for readability", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389617204", "createdAt": "2020-03-09T12:02:43Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMDA0Mw==", "bodyText": "Added.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391010043", "createdAt": "2020-03-11T14:27:24Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4ODMyMQ==", "bodyText": "Same here: the space needs to be between class definition and @OverRide, not javadoc and class definition", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391488321", "createdAt": "2020-03-12T09:18:10Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjM2MA==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152360", "createdAt": "2020-03-13T10:43:18Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYxNzIwNA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQzODI1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjowOToyMFrOFzkhcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyODoxNlrOF05aFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMDA4Mg==", "bodyText": "The User.setPassword method is already hashing the password, so here you're hashing it first before putting it as an argument, which means it will re-hash the hashed password. If you check the User class, both setPassword and setHashedPassword are setting the same field (one by hashing it first, the other without), so there is no need to call both setters. I'd remove the setPassword here, and leave the next call as is (setHashedPassword)", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389620082", "createdAt": "2020-03-09T12:09:20Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());\n+        destination.setPassword(source.getPassword() != null ?\n+            Util.hash(source.getPassword()) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMDgzNg==", "bodyText": "Agreed, Updated.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391010836", "createdAt": "2020-03-11T14:28:16Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());\n+        destination.setPassword(source.getPassword() != null ?\n+            Util.hash(source.getPassword()) : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMDA4Mg=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDQ1NDIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjoxNToxMlrOFzkrOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDoyODo1N1rOF05cTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMjU4Nw==", "bodyText": "The User class holds this field as a primitive boolean, while the DTO as a boxed Boolean object, so we should have a null check here, because setting the primitive boolean to null would cause an NPE. In case the source's value is null, we should default the destination value (false).", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389622587", "createdAt": "2020-03-09T12:15:12Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMTQwNw==", "bodyText": "Yep, Potential NPE corrected.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391011407", "createdAt": "2020-03-11T14:28:57Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/UserDTOTranslator.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.User;\n+import org.candlepin.util.Util;\n+\n+import java.util.Date;\n+\n+/**\n+ * The UserDTOTranslator provides translation from UserDTO to User model objects.\n+ */\n+public class UserDTOTranslator implements ObjectTranslator<UserDTO, User> {\n+    @Override\n+    public User translate(UserDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public User translate(ModelTranslator modelTranslator, UserDTO source) {\n+        return source != null ? this.populate(modelTranslator, source, new User()) : null;\n+    }\n+\n+    @Override\n+    public User populate(UserDTO source, User destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public User populate(ModelTranslator modelTranslator, UserDTO source, User destination) {\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getUpdated().toInstant().toEpochMilli()) : null);\n+        destination.setId(source.getId());\n+        destination.setUsername(source.getUsername());\n+        destination.setSuperAdmin(source.getSuperAdmin());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyMjU4Nw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDUyMTczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjozNzoxNlrOFzlTtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMDoyMFrOF05gMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMjk0OA==", "bodyText": "If you notice the current RoleDTO, it is throwing IllegalArgumentExceptions in case during setUsers or setPermissions, in case any of the elements within those collections are null. Now that we don't have control over the setters, we can't do that, so we need another way to validate the collections. This is where the DTOValidator class comes in (it was introduced in my ActivationKeyDTO PR).\nBefore translating here, you should add a call to the DTOValidator to check those two collections as such:\nvalidator.validateCollectionElementsNotNull(dto::getUsers, update::getPermissions);", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389632948", "createdAt": "2020-03-09T12:37:16Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -154,7 +156,7 @@ public RoleDTO createRole(@ApiParam(name = \"role\", required = true) RoleDTO dto)\n             throw new ConflictException(this.i18n.tr(\"Role already exists: {0}\", dto.getName()));\n         }\n \n-        RoleInfo role = this.userService.createRole(dto);\n+        RoleInfo role = this.userService.createRole(this.modelTranslator.translate(dto, Role.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjQwMA==", "bodyText": "Added.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012400", "createdAt": "2020-03-11T14:30:20Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -154,7 +156,7 @@ public RoleDTO createRole(@ApiParam(name = \"role\", required = true) RoleDTO dto)\n             throw new ConflictException(this.i18n.tr(\"Role already exists: {0}\", dto.getName()));\n         }\n \n-        RoleInfo role = this.userService.createRole(dto);\n+        RoleInfo role = this.userService.createRole(this.modelTranslator.translate(dto, Role.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMjk0OA=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDUyNDc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjozODoyNVrOFzlVpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMDozM1rOF05gxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMzQ0Ng==", "bodyText": "Same here: before translating, use the DTOValidator to validate there are no null elements in the users and permissions collections", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389633446", "createdAt": "2020-03-09T12:38:25Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -174,7 +176,8 @@ public RoleDTO updateRole(@PathParam(\"role_name\") String roleName,\n         // generation\n         this.fetchRoleByName(roleName);\n \n-        RoleInfo role = this.userService.updateRole(roleName, dto);\n+        RoleInfo role = this.userService.updateRole(roleName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjU1MA==", "bodyText": "Added.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012550", "createdAt": "2020-03-11T14:30:33Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/RoleResource.java", "diffHunk": "@@ -174,7 +176,8 @@ public RoleDTO updateRole(@PathParam(\"role_name\") String roleName,\n         // generation\n         this.fetchRoleByName(roleName);\n \n-        RoleInfo role = this.userService.updateRole(roleName, dto);\n+        RoleInfo role = this.userService.updateRole(roleName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYzMzQ0Ng=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDU4Mjk0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMjo1Njo0NlrOFzl4cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMDo0OVrOF05huQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MjM1Mw==", "bodyText": "these should all be assertEquals(<source value>, <destination value>)", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389642353", "createdAt": "2020-03-09T12:56:46Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+public class NestedOwnerDTOTranslatorTest extends\n+    AbstractTranslatorTest<NestedOwnerDTO, Owner, NestedOwnerDTOTranslator> {\n+\n+    protected NestedOwnerDTOTranslator translator = new NestedOwnerDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator,\n+            NestedOwnerDTO.class, Owner.class);\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTO initSourceObject() {\n+        NestedOwnerDTO owner = new NestedOwnerDTO();\n+\n+        owner.setId(\"owner_id\");\n+        owner.setKey(\"owner_key\");\n+        owner.setDisplayName(\"owner_name\");\n+\n+        return owner;\n+    }\n+\n+    @Override\n+    protected Owner initDestinationObject() {\n+        return new Owner();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(NestedOwnerDTO source, Owner dest,\n+        boolean childrenGenerated) {\n+\n+        if (source != null) {\n+            assertNotNull(dest.getId());\n+            assertEquals(source.getKey(), dest.getKey());\n+            assertNotNull(dest.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMjc5Mw==", "bodyText": "Updated all.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391012793", "createdAt": "2020-03-11T14:30:49Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+public class NestedOwnerDTOTranslatorTest extends\n+    AbstractTranslatorTest<NestedOwnerDTO, Owner, NestedOwnerDTOTranslator> {\n+\n+    protected NestedOwnerDTOTranslator translator = new NestedOwnerDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator,\n+            NestedOwnerDTO.class, Owner.class);\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected NestedOwnerDTO initSourceObject() {\n+        NestedOwnerDTO owner = new NestedOwnerDTO();\n+\n+        owner.setId(\"owner_id\");\n+        owner.setKey(\"owner_key\");\n+        owner.setDisplayName(\"owner_name\");\n+\n+        return owner;\n+    }\n+\n+    @Override\n+    protected Owner initDestinationObject() {\n+        return new Owner();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(NestedOwnerDTO source, Owner dest,\n+        boolean childrenGenerated) {\n+\n+        if (source != null) {\n+            assertNotNull(dest.getId());\n+            assertEquals(source.getKey(), dest.getKey());\n+            assertNotNull(dest.getDisplayName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MjM1Mw=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDYyMjk0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzowOTozNVrOFzmQhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMTo1NFrOF05k8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0ODUxOQ==", "bodyText": "We shouldn'e be creating any DTOs (or entities) in a translation verification test. In fact, since we moved to a manual translation of NestedOWner in PermissionBlueprintInfoTranslator, the verification should happen outside of the if (childrenGenerated) block, by a series of assertEquals calls (one for each field), and the ownerTranslatorTest field should be removed (as it is no longer needed).", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389648519", "createdAt": "2020-03-09T13:09:35Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java", "diffHunk": "@@ -78,7 +78,14 @@ protected void verifyOutput(PermissionBlueprintInfo source, PermissionBlueprintD\n             assertEquals(source.getAccessLevel(), dest.getAccess());\n \n             if (childrenGenerated) {\n-                this.ownerTranslatorTest.verifyOutput(source.getOwner(), dest.getOwner(), true);\n+\n+                OwnerDTO ownerDTO = new OwnerDTO();\n+                ownerDTO.setId(dest.getOwner().getId());\n+                ownerDTO.setKey(dest.getOwner().getKey());\n+                ownerDTO.setDisplayName(dest.getOwner().getDisplayName());\n+\n+                this.ownerTranslatorTest.verifyOutput(source.getOwner(),\n+                    ownerDTO, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzYxOQ==", "bodyText": "Corrected it.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013619", "createdAt": "2020-03-11T14:31:54Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintInfoTranslatorTest.java", "diffHunk": "@@ -78,7 +78,14 @@ protected void verifyOutput(PermissionBlueprintInfo source, PermissionBlueprintD\n             assertEquals(source.getAccessLevel(), dest.getAccess());\n \n             if (childrenGenerated) {\n-                this.ownerTranslatorTest.verifyOutput(source.getOwner(), dest.getOwner(), true);\n+\n+                OwnerDTO ownerDTO = new OwnerDTO();\n+                ownerDTO.setId(dest.getOwner().getId());\n+                ownerDTO.setKey(dest.getOwner().getKey());\n+                ownerDTO.setDisplayName(dest.getOwner().getDisplayName());\n+\n+                this.ownerTranslatorTest.verifyOutput(source.getOwner(),\n+                    ownerDTO, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0ODUxOQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDYzNzIxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzoxMzo1NFrOFzmZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMjowNlrOF05lhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MDcxOQ==", "bodyText": "No need to create a new Date object and then transform it into OffsetDateTime. You can use OffsetDateTime.now() directly", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389650719", "createdAt": "2020-03-09T13:13:54Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzc2NQ==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013765", "createdAt": "2020-03-11T14:32:06Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MDcxOQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDY0NTU5OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzoxNjoyM1rOFzmePw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MzozNVrOF1_Frg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ==", "bodyText": "should be assertEquals between source and dest value", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389652031", "createdAt": "2020-03-09T13:16:23Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));\n+\n+        return source;\n+    }\n+\n+    @Override\n+    protected Role initDestinationObject() {\n+        return new Role();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(RoleDTO source, Role dest, boolean childrenGenerated) {\n+        if (source != null) {\n+\n+            assertNotNull(dest.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxMzg3OA==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391013878", "createdAt": "2020-03-11T14:32:14Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));\n+\n+        return source;\n+    }\n+\n+    @Override\n+    protected Role initDestinationObject() {\n+        return new Role();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(RoleDTO source, Role dest, boolean childrenGenerated) {\n+        if (source != null) {\n+\n+            assertNotNull(dest.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMDYyNQ==", "bodyText": "This should be assertEquals(source.getId(), dest.getId());", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391500625", "createdAt": "2020-03-12T09:40:55Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));\n+\n+        return source;\n+    }\n+\n+    @Override\n+    protected Role initDestinationObject() {\n+        return new Role();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(RoleDTO source, Role dest, boolean childrenGenerated) {\n+        if (source != null) {\n+\n+            assertNotNull(dest.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjQ5NA==", "bodyText": "Updated.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152494", "createdAt": "2020-03-13T10:43:35Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/RoleDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+import org.candlepin.model.Role;\n+import org.candlepin.model.User;\n+\n+import java.time.ZoneOffset;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Test suite for the RoleDTOTranslator class.\n+ */\n+public class RoleDTOTranslatorTest extends\n+    AbstractTranslatorTest<RoleDTO, Role, RoleDTOTranslator> {\n+\n+    protected RoleDTOTranslator translator = new RoleDTOTranslator();\n+\n+    protected PermissionBlueprintDTOTranslatorTest permDTOTranslatorTest =\n+        new PermissionBlueprintDTOTranslatorTest();\n+\n+    protected UserDTOTranslatorTest userDTOTranslatorTest = new UserDTOTranslatorTest();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        this.userDTOTranslatorTest.initModelTranslator(modelTranslator);\n+        this.permDTOTranslatorTest.initModelTranslator(modelTranslator);\n+\n+        modelTranslator.registerTranslator(this.translator, RoleDTO.class, Role.class);\n+    }\n+\n+    @Override\n+    protected RoleDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected RoleDTO initSourceObject() {\n+        RoleDTO source = new RoleDTO();\n+\n+        List<UserDTO> users = new ArrayList<>();\n+        List<PermissionBlueprintDTO> permissions = new ArrayList<>();\n+\n+        for (int i = 0; i < 5; ++i) {\n+            UserDTO user = (UserDTO) this.userDTOTranslatorTest.initSourceObject();\n+            user.setId(\"test-user-\" + i);\n+\n+            PermissionBlueprintDTO permission = (PermissionBlueprintDTO)\n+                this.permDTOTranslatorTest.initSourceObject();\n+            permission.setId(\"test-perm-\" + i);\n+\n+            users.add(user);\n+            permissions.add(permission);\n+        }\n+\n+        source.id(\"test-role-id\")\n+            .name(\"test-role-name\")\n+            .users(users)\n+            .permissions(permissions)\n+            .created(new Date().toInstant().atOffset(ZoneOffset.UTC))\n+            .updated(new Date().toInstant().atOffset(ZoneOffset.UTC));\n+\n+        return source;\n+    }\n+\n+    @Override\n+    protected Role initDestinationObject() {\n+        return new Role();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(RoleDTO source, Role dest, boolean childrenGenerated) {\n+        if (source != null) {\n+\n+            assertNotNull(dest.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1MjAzMQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDY3NTU0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzoyMjo0NVrOFzmxcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDozMjozMFrOF05mxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1Njk0NQ==", "bodyText": "Even though when translating from User to UserDTO we shouldn't be translating the password, when doing the opposite, the password should get translated and hashed. So I'd expect this kind of assertion here:\nassertEquals(Util.hash(source.getPassword()), dest.getHashedPassword())", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r389656945", "createdAt": "2020-03-09T13:22:45Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            assertNotNull(source.getPassword());\n+            assertNotNull(dest.getPassword());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAxNDA4NA==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391014084", "createdAt": "2020-03-11T14:32:30Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/UserDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.User;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the UserDTOTranslator class.\n+ */\n+public class UserDTOTranslatorTest extends AbstractTranslatorTest<UserDTO, User, UserDTOTranslator> {\n+\n+    protected UserDTOTranslator translator = new UserDTOTranslator();\n+\n+    @Override\n+    protected void initModelTranslator(ModelTranslator modelTranslator) {\n+        modelTranslator.registerTranslator(this.translator, UserDTO.class, User.class);\n+    }\n+\n+    @Override\n+    protected UserDTOTranslator initObjectTranslator() {\n+        return this.translator;\n+    }\n+\n+    @Override\n+    protected UserDTO initSourceObject() {\n+        UserDTO userDTO = new UserDTO()\n+            .id(\"user_id\")\n+            .username(\"user_username\")\n+            .password(\"user_password\")\n+            .superAdmin(true);\n+\n+        return userDTO;\n+    }\n+\n+    @Override\n+    protected User initDestinationObject() {\n+        return new User();\n+    }\n+\n+    @Override\n+    protected void verifyOutput(UserDTO source, User dest, boolean childrenGenerated) {\n+        if (source != null) {\n+            // This DTO does not have any nested objects, so we don't need to worry about the\n+            // childrenGenerated flag\n+\n+            assertEquals(source.getId(), dest.getId());\n+            assertEquals(source.getUsername(), dest.getUsername());\n+            assertEquals(source.getSuperAdmin(), dest.isSuperAdmin());\n+\n+            assertNotNull(source.getPassword());\n+            assertNotNull(dest.getPassword());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY1Njk0NQ=="}, "originalCommit": {"oid": "9b3f898733bc301c6490b6e452a3eb823eb7ccd4"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjIxMzIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowNDoxOVrOF1WHFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0Mzo1N1rOF1_Gbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTEwOA==", "bodyText": "This is setting the Updated date by getting the Created", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391481108", "createdAt": "2020-03-12T09:04:19Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import java.util.Date;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjY4Nw==", "bodyText": "Corrected now.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152687", "createdAt": "2020-03-13T10:43:57Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslator.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n+import org.candlepin.model.Owner;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import java.util.Date;\n+\n+/**\n+ * The PermissionBlueprintDTOTranslator provides translation\n+ * from PermissionBlueprintDTO to PermissionBlueprint model objects.\n+ */\n+\n+public class PermissionBlueprintDTOTranslator implements\n+    ObjectTranslator<PermissionBlueprintDTO, PermissionBlueprint> {\n+    @Override\n+    public PermissionBlueprint translate(PermissionBlueprintDTO source) {\n+        return this.translate(null, source);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint translate(ModelTranslator modelTranslator, PermissionBlueprintDTO source) {\n+        return source != null ?\n+            this.populate(modelTranslator, source, new PermissionBlueprint()) : null;\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+        return this.populate(null, source, destination);\n+    }\n+\n+    @Override\n+    public PermissionBlueprint populate(ModelTranslator modelTranslator,\n+        PermissionBlueprintDTO source, PermissionBlueprint destination) {\n+\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (destination == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n+\n+        destination.setCreated(source.getCreated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);\n+        destination.setUpdated(source.getUpdated() != null ?\n+            new Date(source.getCreated().toInstant().toEpochMilli()) : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4MTEwOA=="}, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjI4NjMzOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNjoyN1rOF1W0LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0NDoxMlrOF1_G4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MjY1Mg==", "bodyText": "There shouldn't be a space between class javadoc and class definition. What I meant in the other comments was that there should be space between class definition and the next thing (in that case the @Override annotation of the first method", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391492652", "createdAt": "2020-03-12T09:26:27Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjgwMQ==", "bodyText": "Understood, done.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152801", "createdAt": "2020-03-13T10:44:12Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/NestedOwnerDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.Owner;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Test suite for the NestedOwnerDTOTranslator class.\n+ */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MjY1Mg=="}, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjI5MDY5OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNzo0M1rOF1W2-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0NDoyNlrOF1_HTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MzM2OA==", "bodyText": "Same here (and all other classes), no space between javadoc and class definition", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r391493368", "createdAt": "2020-03-12T09:27:43Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the PermissionBlueprintDTOTranslator class.\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MjkwOA==", "bodyText": "yep, removed.", "url": "https://github.com/candlepin/candlepin/pull/2633#discussion_r392152908", "createdAt": "2020-03-13T10:44:26Z", "author": {"login": "sonalidhome"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/PermissionBlueprintDTOTranslatorTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/**\n+ * Copyright (c) 2009 - 2020 Red Hat, Inc.\n+ *\n+ * This software is licensed to you under the GNU General Public License,\n+ * version 2 (GPLv2). There is NO WARRANTY for this software, express or\n+ * implied, including the implied warranties of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2\n+ * along with this software; if not, see\n+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.\n+ *\n+ * Red Hat trademarks are not licensed under GPLv2. No permission is\n+ * granted to use or replicate Red Hat trademarks that are incorporated\n+ * in this software or its documentation.\n+ */\n+\n+package org.candlepin.dto.api.v1;\n+\n+import org.candlepin.auth.Access;\n+import org.candlepin.auth.permissions.PermissionFactory;\n+import org.candlepin.dto.AbstractTranslatorTest;\n+import org.candlepin.dto.ModelTranslator;\n+import org.candlepin.model.PermissionBlueprint;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+/**\n+ * Test suite for the PermissionBlueprintDTOTranslator class.\n+ */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MzM2OA=="}, "originalCommit": {"oid": "d0bc304f781ffaa842799949b15043302cb42a86"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4321, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}