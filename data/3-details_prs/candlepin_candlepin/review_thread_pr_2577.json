{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzQwNDQ1", "number": 2577, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTozNjozM1rODaNxTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowNDoxNVrODcr1mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODE1MTgwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/DeletedConsumerResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTozNjozM1rOFhCsWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNDowMTo1M1rOFh3pCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MTQ0OA==", "bodyText": "This doesn't actually work in all cases. Since the processing of the stream occurs later, the connection backing the CPQ can close and it'll trigger an exception instead of returning the result.\nFor now, just return the CandlepinQuery object as normal, and set the container type to \"Iterable\" in the yaml.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r370191448", "createdAt": "2020-01-23T15:36:33Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/resource/DeletedConsumerResource.java", "diffHunk": "@@ -51,17 +40,11 @@ public DeletedConsumerResource(DeletedConsumerCurator deletedConsumerCurator,\n         this.translator = translator;\n     }\n \n-    @ApiOperation(\n-        notes = \"Retrieves a list of Deleted Consumers By deletion date or all. \" +\n-        \"List returned is the deleted Consumers.\",\n-        value = \"listByDate\", response = DeletedConsumerDTO.class, responseContainer = \"list\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\"), @ApiResponse(code = 404, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    public CandlepinQuery<DeletedConsumerDTO> listByDate(@QueryParam(\"date\") String dateStr) {\n-        return this.translator.translateQuery(dateStr != null ?\n+    @Override\n+    public Stream<DeletedConsumerDTO> listByDate(String dateStr) {\n+        CandlepinQuery<DeletedConsumerDTO> query = this.translator.translateQuery(dateStr != null ?\n             this.deletedConsumerCurator.findByDate(ResourceDateParser.parseDateString(dateStr)) :\n-            this.deletedConsumerCurator.listAll(),\n-            DeletedConsumerDTO.class);\n+            this.deletedConsumerCurator.listAll(), DeletedConsumerDTO.class);\n+        return StreamSupport.stream(query.spliterator(), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05f984a53754b8eb8f674d7abec596fcc5058d9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYzMzEwNw==", "bodyText": "@Ceiu\nI had tested this API locally and it was working. For now, I have updated code as per your suggestion i.e. use Iterable instead of Stream.\nIf we use Stream then would it fail in a larger response? Could you please share the scenarios in which this will throw an exception in the case of Stream.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r370633107", "createdAt": "2020-01-24T13:29:53Z", "author": {"login": "abhiskum"}, "path": "server/src/main/java/org/candlepin/resource/DeletedConsumerResource.java", "diffHunk": "@@ -51,17 +40,11 @@ public DeletedConsumerResource(DeletedConsumerCurator deletedConsumerCurator,\n         this.translator = translator;\n     }\n \n-    @ApiOperation(\n-        notes = \"Retrieves a list of Deleted Consumers By deletion date or all. \" +\n-        \"List returned is the deleted Consumers.\",\n-        value = \"listByDate\", response = DeletedConsumerDTO.class, responseContainer = \"list\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\"), @ApiResponse(code = 404, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    public CandlepinQuery<DeletedConsumerDTO> listByDate(@QueryParam(\"date\") String dateStr) {\n-        return this.translator.translateQuery(dateStr != null ?\n+    @Override\n+    public Stream<DeletedConsumerDTO> listByDate(String dateStr) {\n+        CandlepinQuery<DeletedConsumerDTO> query = this.translator.translateQuery(dateStr != null ?\n             this.deletedConsumerCurator.findByDate(ResourceDateParser.parseDateString(dateStr)) :\n-            this.deletedConsumerCurator.listAll(),\n-            DeletedConsumerDTO.class);\n+            this.deletedConsumerCurator.listAll(), DeletedConsumerDTO.class);\n+        return StreamSupport.stream(query.spliterator(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MTQ0OA=="}, "originalCommit": {"oid": "a05f984a53754b8eb8f674d7abec596fcc5058d9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzNTc5NA==", "bodyText": "The easier thing to do would be to take a look at CandlepinQueryInterceptor.\nThere are two risks to dropping the interceptor and just using a stream directly:\n\nWe give up our control over when the stream is processed vs when the connection backing it is closed. We've had issues in the past with race conditions where the connection would close and cause various exceptions when the stream is processed. I would have to dip into the git history to give you concrete examples.\nNested objects straight up fail in many cases. This was the driving feature here that caused the CandlepinQueryInterceptor to start using its own connection.\n\nI think the long-term goal is to remove CPQ entirely and start using properly designed streams, but that is not something we're willing/able to address in these PRs. For the immediate term, we can move into the spec-first world by setting the container type to be Iterable, but then returning the CandlepinQuery as-is and letting the interceptor pick it up and process it safely. We can even leverage Java's covariant return typing to let the generated API interface define it as an Iterable, but our class define it as a CandlepinQuery as it does today.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r370835794", "createdAt": "2020-01-24T20:49:31Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/resource/DeletedConsumerResource.java", "diffHunk": "@@ -51,17 +40,11 @@ public DeletedConsumerResource(DeletedConsumerCurator deletedConsumerCurator,\n         this.translator = translator;\n     }\n \n-    @ApiOperation(\n-        notes = \"Retrieves a list of Deleted Consumers By deletion date or all. \" +\n-        \"List returned is the deleted Consumers.\",\n-        value = \"listByDate\", response = DeletedConsumerDTO.class, responseContainer = \"list\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\"), @ApiResponse(code = 404, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    public CandlepinQuery<DeletedConsumerDTO> listByDate(@QueryParam(\"date\") String dateStr) {\n-        return this.translator.translateQuery(dateStr != null ?\n+    @Override\n+    public Stream<DeletedConsumerDTO> listByDate(String dateStr) {\n+        CandlepinQuery<DeletedConsumerDTO> query = this.translator.translateQuery(dateStr != null ?\n             this.deletedConsumerCurator.findByDate(ResourceDateParser.parseDateString(dateStr)) :\n-            this.deletedConsumerCurator.listAll(),\n-            DeletedConsumerDTO.class);\n+            this.deletedConsumerCurator.listAll(), DeletedConsumerDTO.class);\n+        return StreamSupport.stream(query.spliterator(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MTQ0OA=="}, "originalCommit": {"oid": "a05f984a53754b8eb8f674d7abec596fcc5058d9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1ODk1Mw==", "bodyText": "Thanks @Ceiu for details.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r371058953", "createdAt": "2020-01-27T04:01:53Z", "author": {"login": "abhiskum"}, "path": "server/src/main/java/org/candlepin/resource/DeletedConsumerResource.java", "diffHunk": "@@ -51,17 +40,11 @@ public DeletedConsumerResource(DeletedConsumerCurator deletedConsumerCurator,\n         this.translator = translator;\n     }\n \n-    @ApiOperation(\n-        notes = \"Retrieves a list of Deleted Consumers By deletion date or all. \" +\n-        \"List returned is the deleted Consumers.\",\n-        value = \"listByDate\", response = DeletedConsumerDTO.class, responseContainer = \"list\")\n-    @ApiResponses({ @ApiResponse(code = 400, message = \"\"), @ApiResponse(code = 404, message = \"\") })\n-    @GET\n-    @Produces(MediaType.APPLICATION_JSON)\n-    public CandlepinQuery<DeletedConsumerDTO> listByDate(@QueryParam(\"date\") String dateStr) {\n-        return this.translator.translateQuery(dateStr != null ?\n+    @Override\n+    public Stream<DeletedConsumerDTO> listByDate(String dateStr) {\n+        CandlepinQuery<DeletedConsumerDTO> query = this.translator.translateQuery(dateStr != null ?\n             this.deletedConsumerCurator.findByDate(ResourceDateParser.parseDateString(dateStr)) :\n-            this.deletedConsumerCurator.listAll(),\n-            DeletedConsumerDTO.class);\n+            this.deletedConsumerCurator.listAll(), DeletedConsumerDTO.class);\n+        return StreamSupport.stream(query.spliterator(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MTQ0OA=="}, "originalCommit": {"oid": "a05f984a53754b8eb8f674d7abec596fcc5058d9"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDk2MTUxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/DeletedConsumerTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzoyMjoyMlrOFhddKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDo1ODoyOFrOFhqOFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyOTkzMA==", "bodyText": "Is this the trend we're following to solve the problem of \"DeletedConsumerDTO is not within its bound; should extend org.candlepin.dto.TimestampedCandlepinDTO\"? Turning the extends TimestampedEntityTranslator to implements ObjectTranslator?\n@abhiskum @Ceiu @kahowell", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r370629930", "createdAt": "2020-01-24T13:22:22Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/DeletedConsumerTranslator.java", "diffHunk": "@@ -15,14 +15,16 @@\n package org.candlepin.dto.api.v1;\n \n import org.candlepin.dto.ModelTranslator;\n-import org.candlepin.dto.TimestampedEntityTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n import org.candlepin.model.DeletedConsumer;\n \n+import java.time.ZoneOffset;\n+import java.util.Date;\n+\n /**\n  * This translator provides translation from DeletedConsumer model objects to DeletedConsumerDTOs\n  */\n-public class DeletedConsumerTranslator extends\n-    TimestampedEntityTranslator<DeletedConsumer, DeletedConsumerDTO> {\n+public class DeletedConsumerTranslator implements ObjectTranslator<DeletedConsumer, DeletedConsumerDTO> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5db093f06a4753aa43596594a373087f3aa92d15"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgzOTA2Mw==", "bodyText": "I believe so. I've done a bit of tinkering now, and I can't get the API generation to do any kind of inheritance that's worth considering, which leaves is us with composition; and that, unfortunately, means manually doing all the shared things like timestamping.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r370839063", "createdAt": "2020-01-24T20:58:28Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/DeletedConsumerTranslator.java", "diffHunk": "@@ -15,14 +15,16 @@\n package org.candlepin.dto.api.v1;\n \n import org.candlepin.dto.ModelTranslator;\n-import org.candlepin.dto.TimestampedEntityTranslator;\n+import org.candlepin.dto.ObjectTranslator;\n import org.candlepin.model.DeletedConsumer;\n \n+import java.time.ZoneOffset;\n+import java.util.Date;\n+\n /**\n  * This translator provides translation from DeletedConsumer model objects to DeletedConsumerDTOs\n  */\n-public class DeletedConsumerTranslator extends\n-    TimestampedEntityTranslator<DeletedConsumer, DeletedConsumerDTO> {\n+public class DeletedConsumerTranslator implements ObjectTranslator<DeletedConsumer, DeletedConsumerDTO> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyOTkzMA=="}, "originalCommit": {"oid": "5db093f06a4753aa43596594a373087f3aa92d15"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDA0OTUyOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowNDoxNVrOFk2tFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNDowODowM1rOFlHkBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4OTMzNA==", "bodyText": "Maybe something like \"filter deleted consumers to those on or after this date\"?", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r374189334", "createdAt": "2020-02-03T16:04:15Z", "author": {"login": "kahowell"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -193,6 +193,50 @@ paths:\n               schema:\n                 $ref: '#/components/schemas/ExceptionMessage'\n \n+  /deleted_consumers:\n+    get:\n+      description: Retrieves a list of Deleted Consumers By deletion date or all. List returned is the deleted Consumers.\n+      tags:\n+        - Consumer\n+        - DeletedConsumer\n+      operationId: listByDate\n+      parameters:\n+        - in: query\n+          name: date\n+          schema:\n+            type: string\n+          description: ''", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c0b95f0c0daea6ca3e3cc26427bbf3fde3bf426"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ2NTU0Mg==", "bodyText": "@kahowell\nAdded description value in the spec. Please re-review.", "url": "https://github.com/candlepin/candlepin/pull/2577#discussion_r374465542", "createdAt": "2020-02-04T04:08:03Z", "author": {"login": "abhiskum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -193,6 +193,50 @@ paths:\n               schema:\n                 $ref: '#/components/schemas/ExceptionMessage'\n \n+  /deleted_consumers:\n+    get:\n+      description: Retrieves a list of Deleted Consumers By deletion date or all. List returned is the deleted Consumers.\n+      tags:\n+        - Consumer\n+        - DeletedConsumer\n+      operationId: listByDate\n+      parameters:\n+        - in: query\n+          name: date\n+          schema:\n+            type: string\n+          description: ''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4OTMzNA=="}, "originalCommit": {"oid": "9c0b95f0c0daea6ca3e3cc26427bbf3fde3bf426"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4261, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}