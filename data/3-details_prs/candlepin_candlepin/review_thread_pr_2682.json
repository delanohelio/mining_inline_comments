{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDIyMDkx", "number": 2682, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoyMDo0M1rODy4SPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowMDoxN1rODy6b_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njc3NTY3OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoyMDo0M1rOGHLufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzowNjoxMlrOGHWGIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM0Mg==", "bodyText": "I hope this will not change the API schema defination. Previously it was not unique.", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410185342", "createdAt": "2020-04-17T12:20:43Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+            name:\n+              type: string\n+            description:\n+              type: string\n+            owner:\n+              $ref: \"#/components/schemas/NestedOwnerDTO\"\n+            environmentContent:\n+              type: array\n+              uniqueItems: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMzA0Ng==", "bodyText": "It should be fine, because even thougn now it is a Collection<>, before the DTO was created we were using the Environment.java model entity, which uses a Set, so we should be fine", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410213046", "createdAt": "2020-04-17T13:13:47Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+            name:\n+              type: string\n+            description:\n+              type: string\n+            owner:\n+              $ref: \"#/components/schemas/NestedOwnerDTO\"\n+            environmentContent:\n+              type: array\n+              uniqueItems: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM0Mg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMzQ2OQ==", "bodyText": "No I don't think it will impact the APIs.\nEarlier environmentContent property was backed by a HashMap (I assume this was done to gain performance with quick equality check while adding a content), now it is changed with a Set representation, this is much more aligned with the entity class Environment which also follows a Set representation for EnvironmentContent.", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410213469", "createdAt": "2020-04-17T13:14:32Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+            name:\n+              type: string\n+            description:\n+              type: string\n+            owner:\n+              $ref: \"#/components/schemas/NestedOwnerDTO\"\n+            environmentContent:\n+              type: array\n+              uniqueItems: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM0Mg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1NTIzNA==", "bodyText": "While true, one thing we want to be careful about is adding restrictions that will inadvertently break current clients (even if they're doing silly things). When it comes to API or communication design, I like to follow Postel's law as much as possible. Basically: be conservative in what you send, be liberal in what you accept.\nI think this will be fine, but this is something where I want to make sure everyone is on the same page.", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410355234", "createdAt": "2020-04-17T17:06:12Z", "author": {"login": "Ceiu"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment\n+      allOf:\n+        - $ref: '#/components/schemas/TimestampedEntity'\n+        - type: object\n+          properties:\n+            id:\n+              type: string\n+            name:\n+              type: string\n+            description:\n+              type: string\n+            owner:\n+              $ref: \"#/components/schemas/NestedOwnerDTO\"\n+            environmentContent:\n+              type: array\n+              uniqueItems: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NTM0Mg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njk1ODI5OnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxNjozMFrOGHNg2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNToyMDoyNFrOGIDieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNDYxNg==", "bodyText": "Since we're trying to have this spec also be a good source of documentation, we should provide better descriptions.\nA good guideline for all descriptions is: Try to use information from the model entity's class javadoc comment (in this case Environment.java), instead of from the DTO, because our DTOs don't have useful documentation (it's always something like \"A DTO representation of X entity\"). Then, take that and try to distill it to not have any implementation details, and be concise. In this case it could be something like: \"Represents an environment within an org used to enable/disable/promote content in specific places\"", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410214616", "createdAt": "2020-04-17T13:16:30Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA5OTc3MA==", "bodyText": "Agreed. Added description for EnvironmentDTO & EnvironmentContentDTO", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r411099770", "createdAt": "2020-04-20T05:20:24Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -1265,6 +1265,35 @@ components:\n           type: string\n           minLength: 1\n \n+    EnvironmentDTO:\n+      description: DTO representing an environment", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNDYxNg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njk5MzQ0OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/candlepin/dto/api/v1/ConsumerDTOTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoyNjoxNVrOGHN3zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNToyMDozNVrOGIDitw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMDQ5Mg==", "bodyText": "Nitpick: No need for Arrays.asList here if only 1 element is being added, you can create empty HashSet and then add it", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410220492", "createdAt": "2020-04-17T13:26:15Z", "author": {"login": "nikosmoum"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/ConsumerDTOTest.java", "diffHunk": "@@ -92,6 +92,22 @@ public ConsumerDTOTest() {\n \n         NestedOwnerDTO owner = new NestedOwnerDTO().id(\"OwnerId\").displayName(\"Name\").key(\"12345\");\n \n+        ContentDTO cDTO = new ContentDTO()\n+            .id(\"ContentId\")\n+            .name(\"ContentName\")\n+            .modifiedProductIds(new HashSet<>(Arrays.asList(\"ID1\", \"ID2\")));\n+\n+        Set<EnvironmentContentDTO> envContentDTO = new HashSet<>(Arrays.asList(new EnvironmentContentDTO()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM2OTk3NA==", "bodyText": "There's also Collections.singleton and Util.asSet", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410369974", "createdAt": "2020-04-17T17:34:04Z", "author": {"login": "Ceiu"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/ConsumerDTOTest.java", "diffHunk": "@@ -92,6 +92,22 @@ public ConsumerDTOTest() {\n \n         NestedOwnerDTO owner = new NestedOwnerDTO().id(\"OwnerId\").displayName(\"Name\").key(\"12345\");\n \n+        ContentDTO cDTO = new ContentDTO()\n+            .id(\"ContentId\")\n+            .name(\"ContentName\")\n+            .modifiedProductIds(new HashSet<>(Arrays.asList(\"ID1\", \"ID2\")));\n+\n+        Set<EnvironmentContentDTO> envContentDTO = new HashSet<>(Arrays.asList(new EnvironmentContentDTO()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMDQ5Mg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA5OTgzMQ==", "bodyText": "Done.", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r411099831", "createdAt": "2020-04-20T05:20:35Z", "author": {"login": "wolfdale"}, "path": "server/src/test/java/org/candlepin/dto/api/v1/ConsumerDTOTest.java", "diffHunk": "@@ -92,6 +92,22 @@ public ConsumerDTOTest() {\n \n         NestedOwnerDTO owner = new NestedOwnerDTO().id(\"OwnerId\").displayName(\"Name\").key(\"12345\");\n \n+        ContentDTO cDTO = new ContentDTO()\n+            .id(\"ContentId\")\n+            .name(\"ContentName\")\n+            .modifiedProductIds(new HashSet<>(Arrays.asList(\"ID1\", \"ID2\")));\n+\n+        Set<EnvironmentContentDTO> envContentDTO = new HashSet<>(Arrays.asList(new EnvironmentContentDTO()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMDQ5Mg=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzEyODMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/dto/api/v1/EnvironmentTranslator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowMDoxN1rOGHPNiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNToyMDo1MFrOGIDjAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjQ0MQ==", "bodyText": "One more minor change, that we could apply in general from now on: Use org.candlepin.util.Util.toDateTime() to as a utility converter from Date to OffsetDateTime", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r410242441", "createdAt": "2020-04-17T14:00:17Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/EnvironmentTranslator.java", "diffHunk": "@@ -64,35 +62,48 @@ public EnvironmentDTO populate(Environment source, EnvironmentDTO dest) {\n     public EnvironmentDTO populate(ModelTranslator translator, Environment source,\n         EnvironmentDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n \n-        dest.setId(source.getId());\n-        dest.setName(source.getName());\n-        dest.setDescription(source.getDescription());\n+        Date created = source.getCreated();\n+        dest.created(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        dest.updated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA5OTkwNg==", "bodyText": "Fixed.", "url": "https://github.com/candlepin/candlepin/pull/2682#discussion_r411099906", "createdAt": "2020-04-20T05:20:50Z", "author": {"login": "wolfdale"}, "path": "server/src/main/java/org/candlepin/dto/api/v1/EnvironmentTranslator.java", "diffHunk": "@@ -64,35 +62,48 @@ public EnvironmentDTO populate(Environment source, EnvironmentDTO dest) {\n     public EnvironmentDTO populate(ModelTranslator translator, Environment source,\n         EnvironmentDTO dest) {\n \n-        dest = super.populate(translator, source, dest);\n+        if (source == null) {\n+            throw new IllegalArgumentException(\"source is null\");\n+        }\n+\n+        if (dest == null) {\n+            throw new IllegalArgumentException(\"destination is null\");\n+        }\n \n-        dest.setId(source.getId());\n-        dest.setName(source.getName());\n-        dest.setDescription(source.getDescription());\n+        Date created = source.getCreated();\n+        dest.created(created != null ? created.toInstant().atOffset(ZoneOffset.UTC) : null);\n+\n+        Date updated = source.getUpdated();\n+        dest.updated(updated != null ? updated.toInstant().atOffset(ZoneOffset.UTC) : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjQ0MQ=="}, "originalCommit": {"oid": "a90f0addd888d84307c8edc083b076b62f8ab325"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4148, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}