{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzU4NDEw", "number": 2746, "title": "ENT-1882: Port PoolResource to spec-first", "bodyText": "Added Pool reseaource specification\nUpated related files", "createdAt": "2020-07-06T12:59:01Z", "url": "https://github.com/candlepin/candlepin/pull/2746", "merged": true, "mergeCommit": {"oid": "b108d93a066a677e5dda96a1a5bda7366393697a"}, "closed": true, "closedAt": "2020-07-08T07:30:44Z", "author": {"login": "sonalidhome"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyg3WhgFqTQ0MzYxNjI2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy1VNlAFqTQ0NDQ4MDQ0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjE2MjY2", "url": "https://github.com/candlepin/candlepin/pull/2746#pullrequestreview-443616266", "createdAt": "2020-07-07T07:08:11Z", "commit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowODoxMVrOGtxtlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzowODoxOFrOGtxtug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MzU5MQ==", "bodyText": "Missing API response (HTTP 404) when \"Pool ID or cert not found\".", "url": "https://github.com/candlepin/candlepin/pull/2746#discussion_r450653591", "createdAt": "2020-07-07T07:08:11Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -2849,6 +2849,305 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /pools:\n+    get:\n+      description: Retrieves a list of pools @deprecated Use the method on /owners. This endpoint supports paging with query parameters. For more details please visit https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin.\n+      tags:\n+        - Pools\n+      operationId: list\n+      parameters:\n+        - in: query\n+          name: owner\n+          description: Owner ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: product\n+          description: Product ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: listall\n+          description: Use with consumerUuid to list all pools available to the consumer. This will include pools which would otherwise be omitted due to a rules warning. (i.e. not recommended) Pools that trigger an error however will still be omitted. (no entitlements available, consumer type mismatch, etc)\n+          required: true\n+          schema:\n+            type: boolean\n+            default: false\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: A list of pools\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/PoolDTO'\n+        400:\n+          description: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        403:\n+          description: Users cannot access either of the consumer, owner, or pools\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access either of the consumer, owner, or pools\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Specified consumer(unit) or owner is not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Specified consumer(unit) or owner is not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}:\n+    get:\n+      description: Retrieves a single pool\n+      tags:\n+        - Pools\n+      operationId: getPool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/PoolDTO'\n+        403:\n+          description: Users cannot access consumer(unit)\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access consumer(unit)\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Subscription pool or consumer(unit) not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool or consumer(unit) not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a pool\n+      tags:\n+        - Pools\n+      operationId: deletePool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID\n+        400:\n+          description: Cannot delete bonus pools, as they are auto generated\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Cannot delete bonus pools, as they are auto generated\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Subscription pool not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}/cdn:\n+    get:\n+      description: Retrieve a CDN for a Pool\n+      tags:\n+        - Pools\n+        - CDN\n+      operationId: getPoolCdn\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: CDN details for a Pool\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/CdnDTO'\n+        404:\n+          description: Subscription pool with given ID could not be found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool with given ID could not be found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}/entitlements:\n+    get:\n+      description: Retrieve a list of entitlements for a pool\n+      tags:\n+        - Pools\n+      operationId: getPoolEntitlements\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      x-java-response:\n+        type: Iterable\n+        isContainer: true\n+        security: []\n+      responses:\n+        200:\n+          description: A list of entitlements\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/EntitlementDTO'\n+        404:\n+          description: Subscription pool with given ID could not be found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool with given ID could not be found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}/entitlements/consumer_uuids:\n+    get:\n+      description: Retrieve a list of Consumer UUIDs attached to a pool. Available only to superadmins\n+      tags:\n+        - Pools\n+      operationId: listEntitledConsumerUuids\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: A list of consumer UUIDs\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  type: string\n+        404:\n+          description: Subscription pool with given ID could not be found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool with given ID could not be found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}/cert:\n+    get:\n+      description: Retrieves a Subscription Certificate\n+      tags:\n+        - Pools\n+        - Certificates\n+      operationId: getSubCert\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f"}, "originalPosition": 290}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY1MzYyNg==", "bodyText": "Incorrect description for delete API.", "url": "https://github.com/candlepin/candlepin/pull/2746#discussion_r450653626", "createdAt": "2020-07-07T07:08:18Z", "author": {"login": "wolfdale"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -2849,6 +2849,305 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /pools:\n+    get:\n+      description: Retrieves a list of pools @deprecated Use the method on /owners. This endpoint supports paging with query parameters. For more details please visit https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin.\n+      tags:\n+        - Pools\n+      operationId: list\n+      parameters:\n+        - in: query\n+          name: owner\n+          description: Owner ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: product\n+          description: Product ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: listall\n+          description: Use with consumerUuid to list all pools available to the consumer. This will include pools which would otherwise be omitted due to a rules warning. (i.e. not recommended) Pools that trigger an error however will still be omitted. (no entitlements available, consumer type mismatch, etc)\n+          required: true\n+          schema:\n+            type: boolean\n+            default: false\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: A list of pools\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/PoolDTO'\n+        400:\n+          description: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        403:\n+          description: Users cannot access either of the consumer, owner, or pools\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access either of the consumer, owner, or pools\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Specified consumer(unit) or owner is not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Specified consumer(unit) or owner is not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}:\n+    get:\n+      description: Retrieves a single pool\n+      tags:\n+        - Pools\n+      operationId: getPool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/PoolDTO'\n+        403:\n+          description: Users cannot access consumer(unit)\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access consumer(unit)\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Subscription pool or consumer(unit) not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool or consumer(unit) not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a pool\n+      tags:\n+        - Pools\n+      operationId: deletePool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f"}, "originalPosition": 149}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjU4MTcx", "url": "https://github.com/candlepin/candlepin/pull/2746#pullrequestreview-443658171", "createdAt": "2020-07-07T08:09:03Z", "commit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODowOTowM1rOGtzl1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODowOTowM1rOGtzl1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NDM3NA==", "bodyText": "Wrong description and response code should be 204.", "url": "https://github.com/candlepin/candlepin/pull/2746#discussion_r450684374", "createdAt": "2020-07-07T08:09:03Z", "author": {"login": "Januson"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -2849,6 +2849,305 @@ paths:\n         default:\n           $ref: '#/components/responses/default'\n \n+  /pools:\n+    get:\n+      description: Retrieves a list of pools @deprecated Use the method on /owners. This endpoint supports paging with query parameters. For more details please visit https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin.\n+      tags:\n+        - Pools\n+      operationId: list\n+      parameters:\n+        - in: query\n+          name: owner\n+          description: Owner ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: product\n+          description: Product ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: listall\n+          description: Use with consumerUuid to list all pools available to the consumer. This will include pools which would otherwise be omitted due to a rules warning. (i.e. not recommended) Pools that trigger an error however will still be omitted. (no entitlements available, consumer type mismatch, etc)\n+          required: true\n+          schema:\n+            type: boolean\n+            default: false\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      security: []\n+      responses:\n+        200:\n+          description: A list of pools\n+          content:\n+            application/json:\n+              schema:\n+                type: array\n+                items:\n+                  $ref: '#/components/schemas/PoolDTO'\n+        400:\n+          description: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Both consumer(unit) and owner are given, or a product id is specified without a consumer(unit) or owner\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        403:\n+          description: Users cannot access either of the consumer, owner, or pools\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access either of the consumer, owner, or pools\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Specified consumer(unit) or owner is not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Specified consumer(unit) or owner is not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+  /pools/{pool_id}:\n+    get:\n+      description: Retrieves a single pool\n+      tags:\n+        - Pools\n+      operationId: getPool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: consumer\n+          description: Consumer UUID\n+          required: true\n+          schema:\n+            type: string\n+        - in: query\n+          name: activeon\n+          description: Uses ISO 8601 format\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/PoolDTO'\n+        403:\n+          description: Users cannot access consumer(unit)\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Users cannot access consumer(unit)\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        404:\n+          description: Subscription pool or consumer(unit) not found\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ExceptionMessage'\n+              example:\n+                displayMessage: Subscription pool or consumer(unit) not found\n+                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a\n+        default:\n+          $ref: '#/components/responses/default'\n+\n+    delete:\n+      description: Removes a pool\n+      tags:\n+        - Pools\n+      operationId: deletePool\n+      parameters:\n+        - in: path\n+          name: pool_id\n+          description: Pool ID\n+          required: true\n+          schema:\n+            type: string\n+      responses:\n+        200:\n+          description: Retrives a single pool by its ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f"}, "originalPosition": 149}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9debf1b71be39400e01d1f73d68caccb9f8c45f", "author": {"user": {"login": "sonalidhome", "name": "Sonali Dhome"}}, "url": "https://github.com/candlepin/candlepin/commit/f9debf1b71be39400e01d1f73d68caccb9f8c45f", "committedDate": "2020-07-06T12:34:53Z", "message": "ENT-1882: Port PoolResource to spec-first\n - Added Pool reseaource specification\n - Upated related files"}, "afterCommit": {"oid": "13ae67a1c92c696104aa97026bc96ca6eabef270", "author": {"user": {"login": "sonalidhome", "name": "Sonali Dhome"}}, "url": "https://github.com/candlepin/candlepin/commit/13ae67a1c92c696104aa97026bc96ca6eabef270", "committedDate": "2020-07-07T10:36:32Z", "message": "ENT-1882: Port PoolResource to spec-first\n - Added Pool reseaource specification\n - Upated related files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e5eb40e4a8a5e38089d15817b06d4d5e9a97c92", "author": {"user": {"login": "sonalidhome", "name": "Sonali Dhome"}}, "url": "https://github.com/candlepin/candlepin/commit/7e5eb40e4a8a5e38089d15817b06d4d5e9a97c92", "committedDate": "2020-07-08T06:10:49Z", "message": "ENT-1882: Port PoolResource to spec-first\n - Added Pool reseaource specification\n - Upated related files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13ae67a1c92c696104aa97026bc96ca6eabef270", "author": {"user": {"login": "sonalidhome", "name": "Sonali Dhome"}}, "url": "https://github.com/candlepin/candlepin/commit/13ae67a1c92c696104aa97026bc96ca6eabef270", "committedDate": "2020-07-07T10:36:32Z", "message": "ENT-1882: Port PoolResource to spec-first\n - Added Pool reseaource specification\n - Upated related files"}, "afterCommit": {"oid": "7e5eb40e4a8a5e38089d15817b06d4d5e9a97c92", "author": {"user": {"login": "sonalidhome", "name": "Sonali Dhome"}}, "url": "https://github.com/candlepin/candlepin/commit/7e5eb40e4a8a5e38089d15817b06d4d5e9a97c92", "committedDate": "2020-07-08T06:10:49Z", "message": "ENT-1882: Port PoolResource to spec-first\n - Added Pool reseaource specification\n - Upated related files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDgwNDQ2", "url": "https://github.com/candlepin/candlepin/pull/2746#pullrequestreview-444480446", "createdAt": "2020-07-08T07:30:26Z", "commit": {"oid": "7e5eb40e4a8a5e38089d15817b06d4d5e9a97c92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2271, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}