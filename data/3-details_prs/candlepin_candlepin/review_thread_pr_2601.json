{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMjgzODY1", "number": 2601, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTo0MDowMVrODdnjlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo1NDozMFrODd99qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzgzMzgzOnYy", "diffSide": "RIGHT", "path": "api/candlepin-api-spec.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTo0MDowMVrOFmUrYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozNDoyN1rOFm1mdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODk5Mg==", "bodyText": "I know that this is what we had on the current GuestIdDTO.java, but since we're moving to spec-first, it is a good chance to improve our documentation, so it would be better to add the description found on GuestId.java, which is more descriptive (\"Represents a guest ID running on a virt host consumer\")", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r375728992", "createdAt": "2020-02-06T09:40:01Z", "author": {"login": "nikosmoum"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -316,6 +316,22 @@ components:\n             resultData:\n               type: object\n               example: \"Refresh completed successfully!\"\n+\n+    GuestIdDTO:\n+      description: Representation of guestId DTO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2ODQwNQ==", "bodyText": "Agreed, updated the description.", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376268405", "createdAt": "2020-02-07T08:34:27Z", "author": {"login": "sonalidhome"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -316,6 +316,22 @@ components:\n             resultData:\n               type: object\n               example: \"Refresh completed successfully!\"\n+\n+    GuestIdDTO:\n+      description: Representation of guestId DTO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyODk5Mg=="}, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzk5MzY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDoyODo1MFrOFmWN0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDozMTo1NVrOFmdEyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NDE5Mg==", "bodyText": "This change is altering our REST API. In this case, this is the legacy (non-async) hypervisor check-in, which is what legacy virt-who clients are probably using. I'm not certain that this will break them, but I'd be careful about it. From what I understand, the old String argument constructor was used for this legacy use case, where a guestId is sent as string, but there might be another use case where a full-fledged GuestIdDTO is sent. @wottop would be the best person to ask about it.\nIf this is something we shouldn't change, then we'd have to find a way to make this work otherwise, like this: https://stackoverflow.com/questions/45768194/how-to-generate-constructors-in-swagger-codegen", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r375754192", "createdAt": "2020-02-06T10:28:50Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "diffHunk": "@@ -142,7 +144,7 @@ public HypervisorResource(ConsumerResource consumerResource, ConsumerCurator con\n     @UpdateConsumerCheckIn\n     @SuppressWarnings(\"checkstyle:indentation\")\n     public HypervisorUpdateResultDTO hypervisorUpdate(\n-        Map<String, List<GuestIdDTO>> hostGuestDTOMap, @Context Principal principal,\n+        Map<String, List<String>> hostGuestMap, @Context Principal principal,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2NjU2OA==", "bodyText": "In API call, hypervisorUpdate()method converts the List of guestIds to List of GuestIdDTO using string argument constructor. The rspecs in hypervisor_check_in.rb are passing a List of guestIds in string format. So I am assuming, virt-who is using the same format, and this change made successful execution of rspecs.\n@wottop Can you confirm if GuestIdDTO is directly sent?", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r375866568", "createdAt": "2020-02-06T14:31:55Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "diffHunk": "@@ -142,7 +144,7 @@ public HypervisorResource(ConsumerResource consumerResource, ConsumerCurator con\n     @UpdateConsumerCheckIn\n     @SuppressWarnings(\"checkstyle:indentation\")\n     public HypervisorUpdateResultDTO hypervisorUpdate(\n-        Map<String, List<GuestIdDTO>> hostGuestDTOMap, @Context Principal principal,\n+        Map<String, List<String>> hostGuestMap, @Context Principal principal,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NDE5Mg=="}, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDAxNzc0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDozNjoxN1rOFmWcEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODozNTozMlrOFm1oDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1Nzg0Mw==", "bodyText": "In case we do want to change the API to have a list of Strings instead of GuestIdDTOs, then there is no need to do any conversion here. Instead we could update the code to process List of Strings, and change GuestIdResource.populateEntities to the conversion to a GuestId object.", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r375757843", "createdAt": "2020-02-06T10:36:17Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "diffHunk": "@@ -152,11 +154,16 @@ public HypervisorUpdateResultDTO hypervisorUpdate(\n         @QueryParam(\"create_missing\") @DefaultValue(\"true\") boolean createMissing) {\n         log.debug(\"Hypervisor check-in by principal: {}\", principal);\n \n-        if (hostGuestDTOMap == null) {\n+        Map<String, List<GuestIdDTO>> convertedHostGuestIdDTOMap;\n+\n+        if (hostGuestMap == null) {\n             log.debug(\"Host/Guest mapping provided during hypervisor checkin was null.\");\n             throw new BadRequestException(\n                 i18n.tr(\"Host to guest mapping was not provided for hypervisor check-in.\"));\n         }\n+        else {\n+            convertedHostGuestIdDTOMap = convertMapToGuestIdDTO(hostGuestMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2ODgxNQ==", "bodyText": "Updated as per suggestion.", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376268815", "createdAt": "2020-02-07T08:35:32Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/HypervisorResource.java", "diffHunk": "@@ -152,11 +154,16 @@ public HypervisorUpdateResultDTO hypervisorUpdate(\n         @QueryParam(\"create_missing\") @DefaultValue(\"true\") boolean createMissing) {\n         log.debug(\"Hypervisor check-in by principal: {}\", principal);\n \n-        if (hostGuestDTOMap == null) {\n+        Map<String, List<GuestIdDTO>> convertedHostGuestIdDTOMap;\n+\n+        if (hostGuestMap == null) {\n             log.debug(\"Host/Guest mapping provided during hypervisor checkin was null.\");\n             throw new BadRequestException(\n                 i18n.tr(\"Host to guest mapping was not provided for hypervisor check-in.\"));\n         }\n+        else {\n+            convertedHostGuestIdDTOMap = convertMapToGuestIdDTO(hostGuestMap);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1Nzg0Mw=="}, "originalCommit": {"oid": "f35d03ed26b3a4e1c60a462d45059e47d4af416b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzM1MTMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowMjoyNVrOFm2T0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo0NDoyMVrOFm3e7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MDAxNw==", "bodyText": "Now that all we have is the String guestId, there is no need to create redundant GuestIdDTO objects, or call populateEntity. We have eliminated the need for DTOs, so this is enough:\nentities.add(new GuestId(guestId));", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376280017", "createdAt": "2020-02-07T09:02:25Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "diffHunk": "@@ -154,34 +154,35 @@ protected void populateEntity(GuestId guestId, GuestIdDTO dto) {\n     }\n \n     /**\n-     * Populates the specified entities with data from the provided DTOs.\n+     * Populates the specified entities with data from the provided guestIds.\n      *\n      * @param entities\n      *  The entities instance to populate\n      *\n-     * @param dtos\n-     *  The DTO containing the data with which to populate the entity\n+     * @param guestIds\n+     *  The list of string containing the guestIds to populate the entity\n      *\n      * @throws IllegalArgumentException\n      *  if either entity or dto are null\n      */\n-    protected void populateEntities(List<GuestId> entities, List<GuestIdDTO> dtos) {\n+    protected void populateEntities(List<GuestId> entities, List<String> guestIds) {\n         if (entities == null) {\n             throw new IllegalArgumentException(\"the guestId model entity is null\");\n         }\n \n-        if (dtos == null) {\n-            throw new IllegalArgumentException(\"the guestId dto is null\");\n+        if (guestIds == null) {\n+            throw new IllegalArgumentException(\"the list of guestId is null\");\n         }\n \n-        for (GuestIdDTO dto : dtos) {\n-            if (dto == null) {\n+        for (String guestId : guestIds) {\n+            if (guestId == null) {\n                 continue;\n             }\n \n-            GuestId guestId = new GuestId();\n-            populateEntity(guestId, dto);\n-            entities.add(guestId);\n+            GuestIdDTO guestIdDTO = new GuestIdDTO().guestId(guestId);\n+            GuestId guestIdEntity = new GuestId();\n+            populateEntity(guestIdEntity, guestIdDTO);\n+            entities.add(guestIdEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b804fa9980112c5c5be22c68bf5f8aa1f5b16e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5OTI0NQ==", "bodyText": "Understood. Corrected now.", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376299245", "createdAt": "2020-02-07T09:44:21Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "diffHunk": "@@ -154,34 +154,35 @@ protected void populateEntity(GuestId guestId, GuestIdDTO dto) {\n     }\n \n     /**\n-     * Populates the specified entities with data from the provided DTOs.\n+     * Populates the specified entities with data from the provided guestIds.\n      *\n      * @param entities\n      *  The entities instance to populate\n      *\n-     * @param dtos\n-     *  The DTO containing the data with which to populate the entity\n+     * @param guestIds\n+     *  The list of string containing the guestIds to populate the entity\n      *\n      * @throws IllegalArgumentException\n      *  if either entity or dto are null\n      */\n-    protected void populateEntities(List<GuestId> entities, List<GuestIdDTO> dtos) {\n+    protected void populateEntities(List<GuestId> entities, List<String> guestIds) {\n         if (entities == null) {\n             throw new IllegalArgumentException(\"the guestId model entity is null\");\n         }\n \n-        if (dtos == null) {\n-            throw new IllegalArgumentException(\"the guestId dto is null\");\n+        if (guestIds == null) {\n+            throw new IllegalArgumentException(\"the list of guestId is null\");\n         }\n \n-        for (GuestIdDTO dto : dtos) {\n-            if (dto == null) {\n+        for (String guestId : guestIds) {\n+            if (guestId == null) {\n                 continue;\n             }\n \n-            GuestId guestId = new GuestId();\n-            populateEntity(guestId, dto);\n-            entities.add(guestId);\n+            GuestIdDTO guestIdDTO = new GuestIdDTO().guestId(guestId);\n+            GuestId guestIdEntity = new GuestId();\n+            populateEntity(guestIdEntity, guestIdDTO);\n+            entities.add(guestIdEntity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI4MDAxNw=="}, "originalCommit": {"oid": "b4b804fa9980112c5c5be22c68bf5f8aa1f5b16e"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzUwNTA0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo1NDozMFrOFm3yPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDo0NDozOFrOFm5LPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNDE4OQ==", "bodyText": "This is still creating a GuestIdDTO object, and calling populateEntity, both of which are not needed. All these 3 lines of code can be condensed into one: entities.add(new GuestId(guestId));", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376304189", "createdAt": "2020-02-07T09:54:30Z", "author": {"login": "nikosmoum"}, "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "diffHunk": "@@ -154,34 +154,34 @@ protected void populateEntity(GuestId guestId, GuestIdDTO dto) {\n     }\n \n     /**\n-     * Populates the specified entities with data from the provided DTOs.\n+     * Populates the specified entities with data from the provided guestIds.\n      *\n      * @param entities\n      *  The entities instance to populate\n      *\n-     * @param dtos\n-     *  The DTO containing the data with which to populate the entity\n+     * @param guestIds\n+     *  The list of string containing the guestIds to populate the entity\n      *\n      * @throws IllegalArgumentException\n      *  if either entity or dto are null\n      */\n-    protected void populateEntities(List<GuestId> entities, List<GuestIdDTO> dtos) {\n+    protected void populateEntities(List<GuestId> entities, List<String> guestIds) {\n         if (entities == null) {\n             throw new IllegalArgumentException(\"the guestId model entity is null\");\n         }\n \n-        if (dtos == null) {\n-            throw new IllegalArgumentException(\"the guestId dto is null\");\n+        if (guestIds == null) {\n+            throw new IllegalArgumentException(\"the list of guestId is null\");\n         }\n \n-        for (GuestIdDTO dto : dtos) {\n-            if (dto == null) {\n+        for (String guestId : guestIds) {\n+            if (guestId == null) {\n                 continue;\n             }\n \n-            GuestId guestId = new GuestId();\n-            populateEntity(guestId, dto);\n-            entities.add(guestId);\n+            GuestId guestIdEntity = new GuestId();\n+            populateEntity(guestIdEntity, new GuestIdDTO().guestId(guestId));\n+            entities.add(guestIdEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2648c0269a8c835affa4c7c3cae3ca40b26fd6c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMyNjk3Mg==", "bodyText": "Fair enough. I didn't realize that before. Thank you.", "url": "https://github.com/candlepin/candlepin/pull/2601#discussion_r376326972", "createdAt": "2020-02-07T10:44:38Z", "author": {"login": "sonalidhome"}, "path": "server/src/main/java/org/candlepin/resource/GuestIdResource.java", "diffHunk": "@@ -154,34 +154,34 @@ protected void populateEntity(GuestId guestId, GuestIdDTO dto) {\n     }\n \n     /**\n-     * Populates the specified entities with data from the provided DTOs.\n+     * Populates the specified entities with data from the provided guestIds.\n      *\n      * @param entities\n      *  The entities instance to populate\n      *\n-     * @param dtos\n-     *  The DTO containing the data with which to populate the entity\n+     * @param guestIds\n+     *  The list of string containing the guestIds to populate the entity\n      *\n      * @throws IllegalArgumentException\n      *  if either entity or dto are null\n      */\n-    protected void populateEntities(List<GuestId> entities, List<GuestIdDTO> dtos) {\n+    protected void populateEntities(List<GuestId> entities, List<String> guestIds) {\n         if (entities == null) {\n             throw new IllegalArgumentException(\"the guestId model entity is null\");\n         }\n \n-        if (dtos == null) {\n-            throw new IllegalArgumentException(\"the guestId dto is null\");\n+        if (guestIds == null) {\n+            throw new IllegalArgumentException(\"the list of guestId is null\");\n         }\n \n-        for (GuestIdDTO dto : dtos) {\n-            if (dto == null) {\n+        for (String guestId : guestIds) {\n+            if (guestId == null) {\n                 continue;\n             }\n \n-            GuestId guestId = new GuestId();\n-            populateEntity(guestId, dto);\n-            entities.add(guestId);\n+            GuestId guestIdEntity = new GuestId();\n+            populateEntity(guestIdEntity, new GuestIdDTO().guestId(guestId));\n+            entities.add(guestIdEntity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNDE4OQ=="}, "originalCommit": {"oid": "a2648c0269a8c835affa4c7c3cae3ca40b26fd6c"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4291, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}