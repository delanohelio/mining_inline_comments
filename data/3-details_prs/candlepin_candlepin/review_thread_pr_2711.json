{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzc0NDk2", "number": 2711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDoyMDo0M1rOEAHbnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0MjoyMVrOEAIOwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTU3MjE1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDoyMDo0NFrOGbMhIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo0MzozMVrOGb1s-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE2OTgyNw==", "bodyText": "There is a couple of dependencies which are no longer used. We should remove them.", "url": "https://github.com/candlepin/candlepin/pull/2711#discussion_r431169827", "createdAt": "2020-05-27T14:20:44Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "diffHunk": "@@ -51,26 +44,13 @@\n import java.util.LinkedList;\n import java.util.List;\n \n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.PUT;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-\n-\n-\n /**\n  * OwnerContentResource\n  *\n  * Manage the content that exists in an organization.\n  */\n-@Path(\"/owners/{owner_key}/content\")\n-@Api(value = \"owners\", authorizations = { @Authorization(\"basic\") })\n-public class OwnerContentResource {\n+\n+public class OwnerContentResource implements OwnersApi {\n     private static Logger log = LoggerFactory.getLogger(OwnerContentResource.class);\n \n     private ContentCurator contentCurator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00e8c0495c518db4f6060c92776c74ff6414db4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg0NDYwMA==", "bodyText": "I have removed the unused dependencies..", "url": "https://github.com/candlepin/candlepin/pull/2711#discussion_r431844600", "createdAt": "2020-05-28T13:43:31Z", "author": {"login": "AmitMandliya"}, "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "diffHunk": "@@ -51,26 +44,13 @@\n import java.util.LinkedList;\n import java.util.List;\n \n-import javax.ws.rs.Consumes;\n-import javax.ws.rs.DELETE;\n-import javax.ws.rs.GET;\n-import javax.ws.rs.POST;\n-import javax.ws.rs.PUT;\n-import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n-import javax.ws.rs.Produces;\n-import javax.ws.rs.core.MediaType;\n-\n-\n-\n /**\n  * OwnerContentResource\n  *\n  * Manage the content that exists in an organization.\n  */\n-@Path(\"/owners/{owner_key}/content\")\n-@Api(value = \"owners\", authorizations = { @Authorization(\"basic\") })\n-public class OwnerContentResource {\n+\n+public class OwnerContentResource implements OwnersApi {\n     private static Logger log = LoggerFactory.getLogger(OwnerContentResource.class);\n \n     private ContentCurator contentCurator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE2OTgyNw=="}, "originalCommit": {"oid": "d00e8c0495c518db4f6060c92776c74ff6414db4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NTcwMzA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxNDo0MjoyMVrOGbN0zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODozODo0MlrOGcByKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MTI0NA==", "bodyText": "Unfortunately our resources do not trigger validation of incoming DTOs. We should inject DTOValidator and validate the DTOs. Take a look on DistributorVersionResource for example to see how it's used.", "url": "https://github.com/candlepin/candlepin/pull/2711#discussion_r431191244", "createdAt": "2020-05-27T14:42:21Z", "author": {"login": "Januson"}, "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "diffHunk": "@@ -226,12 +199,8 @@ private Content createContentImpl(Owner owner, ContentDTO content) {\n         return entity;\n     }\n \n-    @ApiOperation(notes = \"Creates a Content\", value = \"createContent\")\n-    @POST\n-    @Produces(MediaType.APPLICATION_JSON)\n-    @Consumes(MediaType.APPLICATION_JSON)\n-    public ContentDTO createContent(@PathParam(\"owner_key\") String ownerKey,\n-        @ApiParam(name = \"content\", required = true) ContentDTO content) {\n+    @Override\n+    public ContentDTO createContent(String ownerKey, ContentDTO content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00e8c0495c518db4f6060c92776c74ff6414db4"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYwMDcyMA==", "bodyText": "I have added validations in ContentDTO, the unit tests ran fine in my machine. However, the PR is failing with unittests:\n[1BCreating network \"unit-tests-jenkins-candlepin-candlepin-pullrequest-unittests-3264_default\" with driver \"bridge\" Couldn't connect to Docker daemon at http+docker://localhost - is it running?\nI am looking into the issue.", "url": "https://github.com/candlepin/candlepin/pull/2711#discussion_r431600720", "createdAt": "2020-05-28T06:06:21Z", "author": {"login": "AmitMandliya"}, "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "diffHunk": "@@ -226,12 +199,8 @@ private Content createContentImpl(Owner owner, ContentDTO content) {\n         return entity;\n     }\n \n-    @ApiOperation(notes = \"Creates a Content\", value = \"createContent\")\n-    @POST\n-    @Produces(MediaType.APPLICATION_JSON)\n-    @Consumes(MediaType.APPLICATION_JSON)\n-    public ContentDTO createContent(@PathParam(\"owner_key\") String ownerKey,\n-        @ApiParam(name = \"content\", required = true) ContentDTO content) {\n+    @Override\n+    public ContentDTO createContent(String ownerKey, ContentDTO content) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MTI0NA=="}, "originalCommit": {"oid": "d00e8c0495c518db4f6060c92776c74ff6414db4"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0MjUzNg==", "bodyText": "Validations has been added in update and createBatchContent methods.", "url": "https://github.com/candlepin/candlepin/pull/2711#discussion_r432042536", "createdAt": "2020-05-28T18:38:42Z", "author": {"login": "AmitMandliya"}, "path": "server/src/main/java/org/candlepin/resource/OwnerContentResource.java", "diffHunk": "@@ -226,12 +199,8 @@ private Content createContentImpl(Owner owner, ContentDTO content) {\n         return entity;\n     }\n \n-    @ApiOperation(notes = \"Creates a Content\", value = \"createContent\")\n-    @POST\n-    @Produces(MediaType.APPLICATION_JSON)\n-    @Consumes(MediaType.APPLICATION_JSON)\n-    public ContentDTO createContent(@PathParam(\"owner_key\") String ownerKey,\n-        @ApiParam(name = \"content\", required = true) ContentDTO content) {\n+    @Override\n+    public ContentDTO createContent(String ownerKey, ContentDTO content) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MTI0NA=="}, "originalCommit": {"oid": "d00e8c0495c518db4f6060c92776c74ff6414db4"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4194, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}