{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODc1MTIz", "number": 2639, "title": "[F] ENT-2105: Apply dynamic property filtering to openapi DTOs", "bodyText": "Old DTOs now use the \"LegacyDTOFilter\" filter name for hateoas and\ndynamic property filtering.\nNew DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\nname for dynamic property filtering, by indirectly applying a\n@jsonfilter annotation to them using Jackson Mix-Ins.\nStop adding the following obsolete filters to all ObjectMappers,\nand remove all applied annotations for them: PoolAttributeFilter,\nProductAttributeFilter, ProvidedProductFilter.\nStop adding the following obsolete filters to RulesObjectMapper\nand remove applied annotations for them on rules DTOs:\nConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\nThe rules DTOs are already directly filtered-down versions of\ntheir entity counterparts. Delete obsolete RulesObjectMapper unit\ntests.\nRemove irrelevant annotations from manifest DTOs: OwnerFilter,\nPoolFilter.\nStop adding the EntitlementFilter to the SyncUtils ObjectMapper;\ninstead, directly remove the consumer field from the manifest\nEntitlementDTO which was being filtered anyway.\nAdd unit tests for openapi-generated DTO property filtering.\nIntroduce GuestIdDTOArrayElement & related translator, which is\na version of GuestIdDTO that does not include the attributes\nfield, used in cases where the @HateoasArrayExclude annotation\nfiltering was previously used.", "createdAt": "2020-03-13T16:41:13Z", "url": "https://github.com/candlepin/candlepin/pull/2639", "merged": true, "mergeCommit": {"oid": "6adb9e7ed91176333f5734c1a3524167f1d883cd"}, "closed": true, "closedAt": "2020-03-16T19:40:26Z", "author": {"login": "nikosmoum"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNTPyIABqjMxMjc0ODYyMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOQYdQgFqTM3NTM2MTQ1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1cf6248c5bd0a378e124271fc2e811f97ff8eb11", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/1cf6248c5bd0a378e124271fc2e811f97ff8eb11", "committedDate": "2020-03-13T16:40:18Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"OldDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce ArrayExcludeGuestIdDTO & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}, "afterCommit": {"oid": "ae0c0f11b447428323146d1e6fd8d8a23a51b42a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/ae0c0f11b447428323146d1e6fd8d8a23a51b42a", "committedDate": "2020-03-13T16:51:54Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"OldDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce ArrayExcludeGuestIdDTO & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae0c0f11b447428323146d1e6fd8d8a23a51b42a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/ae0c0f11b447428323146d1e6fd8d8a23a51b42a", "committedDate": "2020-03-13T16:51:54Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"OldDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce ArrayExcludeGuestIdDTO & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}, "afterCommit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/534e6f9f225daa4fccbad42390b9dedde251309a", "committedDate": "2020-03-16T11:30:56Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"OldDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce ArrayExcludeGuestIdDTO & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjI4ODcw", "url": "https://github.com/candlepin/candlepin/pull/2639#pullrequestreview-375228870", "createdAt": "2020-03-16T13:49:49Z", "commit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzo0OTo0OVrOF209_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzo1NzoxN1rOF21RkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNTI2Mg==", "bodyText": "For these tests where we have nested nodes, we should also verify that the children nodes have the correct amount of elements.\nApplies below as well", "url": "https://github.com/candlepin/candlepin/pull/2639#discussion_r393035262", "createdAt": "2020-03-16T13:49:49Z", "author": {"login": "Ceiu"}, "path": "server/src/test/java/org/candlepin/resteasy/JsonProviderTest.java", "diffHunk": "@@ -142,4 +148,203 @@ private boolean isEnabled(JsonProvider provider, SerializationFeature feature) {\n         return sConfig.isEnabled(feature);\n     }\n \n+    @Test\n+    public void testDynamicPropertyFilterExcludeSingleProperty() {\n+        DynamicFilterData filterData = new DynamicFilterData();\n+        filterData.excludeAttribute(\"name\");\n+        ResteasyProviderFactory.pushContext(DynamicFilterData.class, filterData);\n+\n+        ActivationKeyDTO keyDTO = new ActivationKeyDTO();\n+        String serializedKey = \"\";\n+        try {\n+            serializedKey = ourMapper.writeValueAsString(keyDTO);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Serializing ActivationKeyDTO failed!\");\n+        }\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        JsonNode akNode = null;\n+        try {\n+            akNode = mapper.readTree(serializedKey);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Parsing serialized ActivationKeyDTO failed!\");\n+        }\n+\n+        assertTrue(akNode.has(\"id\"), \"The 'id' field should NOT have been excluded!\");\n+        assertTrue(akNode.has(\"description\"), \"The 'description' field should NOT have been excluded!\");\n+        assertTrue(akNode.has(\"releaseVer\"), \"The 'releaseVer' field should NOT have been excluded!\");\n+        assertFalse(akNode.has(\"name\"), \"The 'name' field should have been excluded!\");\n+    }\n+\n+    @Test\n+    public void testDynamicPropertyFilterExcludeMultipleProperties() {\n+        DynamicFilterData filterData = new DynamicFilterData();\n+        filterData.excludeAttribute(\"name\");\n+        filterData.excludeAttribute(\"addOns\");\n+        filterData.excludeAttribute(\"serviceLevel\");\n+        ResteasyProviderFactory.pushContext(DynamicFilterData.class, filterData);\n+\n+        ActivationKeyDTO keyDTO = new ActivationKeyDTO();\n+        String serializedKey = \"\";\n+        try {\n+            serializedKey = ourMapper.writeValueAsString(keyDTO);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Serializing ActivationKeyDTO failed!\");\n+        }\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        JsonNode akNode = null;\n+        try {\n+            akNode = mapper.readTree(serializedKey);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Parsing serialized ActivationKeyDTO failed!\");\n+        }\n+\n+        assertTrue(akNode.has(\"id\"), \"The 'id' field should NOT have been excluded!\");\n+        assertTrue(akNode.has(\"description\"), \"The 'description' field should NOT have been excluded!\");\n+        assertTrue(akNode.has(\"releaseVer\"), \"The 'releaseVer' field should NOT have been excluded!\");\n+        assertFalse(akNode.has(\"name\"), \"The 'name' field should have been excluded!\");\n+        assertFalse(akNode.has(\"addOns\"), \"The 'addOns' field should have been excluded!\");\n+        assertFalse(akNode.has(\"serviceLevel\"), \"The 'serviceLevel' field should have been excluded!\");\n+    }\n+\n+    @Test\n+    public void testDynamicPropertyFilterIncludeSingleProperty() {\n+        DynamicFilterData filterData = new DynamicFilterData();\n+        filterData.includeAttribute(\"name\");\n+        filterData.setWhitelistMode(true); // When only includes are set, we should be in whitelist mode\n+        ResteasyProviderFactory.pushContext(DynamicFilterData.class, filterData);\n+\n+        ActivationKeyDTO keyDTO = new ActivationKeyDTO();\n+        String serializedKey = \"\";\n+        try {\n+            serializedKey = ourMapper.writeValueAsString(keyDTO);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Serializing ActivationKeyDTO failed!\");\n+        }\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        JsonNode akNode = null;\n+        try {\n+            akNode = mapper.readTree(serializedKey);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Parsing serialized ActivationKeyDTO failed!\");\n+        }\n+        assertEquals(1, akNode.size());\n+        assertTrue(akNode.has(\"name\"), \"The 'name' field should have been included!\");\n+    }\n+\n+    @Test\n+    public void testDynamicPropertyFilterIncludeMultipleProperties() {\n+        DynamicFilterData filterData = new DynamicFilterData();\n+        filterData.includeAttribute(\"name\");\n+        filterData.includeAttribute(\"releaseVer\");\n+        filterData.includeAttribute(\"addOns\");\n+        filterData.setWhitelistMode(true); // When only includes are set, we should be in whitelist mode\n+        ResteasyProviderFactory.pushContext(DynamicFilterData.class, filterData);\n+\n+        ActivationKeyDTO keyDTO = new ActivationKeyDTO();\n+        String serializedKey = \"\";\n+        try {\n+            serializedKey = ourMapper.writeValueAsString(keyDTO);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Serializing ActivationKeyDTO failed!\");\n+        }\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        JsonNode akNode = null;\n+        try {\n+            akNode = mapper.readTree(serializedKey);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Parsing serialized ActivationKeyDTO failed!\");\n+        }\n+        assertEquals(3, akNode.size());\n+        assertTrue(akNode.has(\"name\"), \"The 'name' field should have been included!\");\n+        assertTrue(akNode.has(\"releaseVer\"), \"The 'releaseVer' field should have been included!\");\n+        assertTrue(akNode.has(\"addOns\"), \"The 'addOns' field should have been included!\");\n+    }\n+\n+    @Test\n+    public void testDynamicPropertyFilterIncludeNestedProperty() {\n+        DynamicFilterData filterData = new DynamicFilterData();\n+        filterData.includeAttribute(\"owner.id\");\n+        filterData.setWhitelistMode(true); // When only includes are set, we should be in whitelist mode\n+        ResteasyProviderFactory.pushContext(DynamicFilterData.class, filterData);\n+\n+        ActivationKeyDTO keyDTO = new ActivationKeyDTO();\n+        NestedOwnerDTO ownerDTO = new NestedOwnerDTO()\n+            .key(\"owner_key\")\n+            .id(\"owner_id\");\n+        keyDTO.setOwner(ownerDTO);\n+\n+        String serializedKey = \"\";\n+        try {\n+            serializedKey = ourMapper.writeValueAsString(keyDTO);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Serializing ActivationKeyDTO failed!\");\n+        }\n+\n+        ObjectMapper mapper = new ObjectMapper();\n+        JsonNode akNode = null;\n+        try {\n+            akNode = mapper.readTree(serializedKey);\n+        }\n+        catch (JsonProcessingException e) {\n+            fail(\"Parsing serialized ActivationKeyDTO failed!\");\n+        }\n+        assertEquals(1, akNode.size());\n+        assertTrue(akNode.has(\"owner\"), \"The 'owner' field should have been included!\");\n+        assertTrue(akNode.get(\"owner\").has(\"id\"), \"The 'owner.id' field should have been included!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a"}, "originalPosition": 262}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNzYxNA==", "bodyText": "This is probably the lowest priority thing I've ever requested, but could we call this LegacyDTOFilter rather than Old? I don't know why, but \"old\" feels very rough to me.", "url": "https://github.com/candlepin/candlepin/pull/2639#discussion_r393037614", "createdAt": "2020-03-16T13:53:14Z", "author": {"login": "Ceiu"}, "path": "server/src/main/java/org/candlepin/resteasy/JsonProvider.java", "diffHunk": "@@ -107,6 +124,11 @@ private void configureHateoasObjectMapper(ObjectMapper mapper, boolean indentJso\n         }\n \n         SimpleFilterProvider filterProvider = new SimpleFilterProvider();\n+        filterProvider = filterProvider.addFilter(\"DTOFilter\", new DynamicPropertyFilter());\n+\n+        // TODO: Once all DTOs are ported to the openapi spec, stop adding the following\n+        //  filters: OldDTOFilter, ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n+        filterProvider = filterProvider.addFilter(\"OldDTOFilter\", new DynamicPropertyFilter());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDI3Mg==", "bodyText": "The name seems odd to me, and probably more references the original HATEOAS usage rather than what the DTO itself is. I feel that something like AttributelessGuestIdDTO would be clearer going forward; assuming we also have a GuestIdDTO that does have the attributes associated with it.", "url": "https://github.com/candlepin/candlepin/pull/2639#discussion_r393040272", "createdAt": "2020-03-16T13:57:17Z", "author": {"login": "Ceiu"}, "path": "api/candlepin-api-spec.yaml", "diffHunk": "@@ -515,6 +515,17 @@ components:\n               additionalProperties:\n                 type: string\n \n+    ArrayExcludeGuestIdDTO:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139ee9953506430bcf0f76bb2446ee2a7c26ee6a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/139ee9953506430bcf0f76bb2446ee2a7c26ee6a", "committedDate": "2020-03-16T16:01:31Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"LegacyDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce GuestIdDTOArrayElement & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "534e6f9f225daa4fccbad42390b9dedde251309a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/534e6f9f225daa4fccbad42390b9dedde251309a", "committedDate": "2020-03-16T11:30:56Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"OldDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce ArrayExcludeGuestIdDTO & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}, "afterCommit": {"oid": "139ee9953506430bcf0f76bb2446ee2a7c26ee6a", "author": {"user": {"login": "nikosmoum", "name": "Nikos Moumoulidis"}}, "url": "https://github.com/candlepin/candlepin/commit/139ee9953506430bcf0f76bb2446ee2a7c26ee6a", "committedDate": "2020-03-16T16:01:31Z", "message": "ENT-2105: Apply dynamic property filtering to openapi DTOs\n\n- Old DTOs now use the \"LegacyDTOFilter\" filter name for hateoas and\n  dynamic property filtering.\n- New DTOs (ported to openapi spec) now use the \"DTOFilter\" filter\n  name for dynamic property filtering, by indirectly applying a\n  @JsonFilter annotation to them using Jackson Mix-Ins.\n- Stop adding the following obsolete filters to all ObjectMappers,\n  and remove all applied annotations for them: PoolAttributeFilter,\n  ProductAttributeFilter, ProvidedProductFilter.\n- Stop adding the following obsolete filters to RulesObjectMapper\n  and remove applied annotations for them on rules DTOs:\n  ConsumerFilter, EntitlementFilter, OwnerFilter, GuestFilter.\n  The rules DTOs are already directly filtered-down versions of\n  their entity counterparts. Delete obsolete RulesObjectMapper unit\n  tests.\n- Remove irrelevant annotations from manifest DTOs: OwnerFilter,\n  PoolFilter.\n- Stop adding the EntitlementFilter to the SyncUtils ObjectMapper;\n  instead, directly remove the consumer field from the manifest\n  EntitlementDTO which was being filtered anyway.\n- Add unit tests for openapi-generated DTO property filtering.\n- Introduce GuestIdDTOArrayElement & related translator, which is\n  a version of GuestIdDTO that does not include the attributes\n  field, used in cases where the @HateoasArrayExclude annotation\n  filtering was previously used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzYxNDUz", "url": "https://github.com/candlepin/candlepin/pull/2639#pullrequestreview-375361453", "createdAt": "2020-03-16T16:06:13Z", "commit": {"oid": "139ee9953506430bcf0f76bb2446ee2a7c26ee6a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2340, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}