{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTgyMjA2", "number": 1642, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToxODoxNFrODl8fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTozMDo1NVrODl8sYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE1MDUxOnYy", "diffSide": "LEFT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToxODoxNFrOFzHwdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMzozODoxNFrOFzn1uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0ODc4OA==", "bodyText": "I think we should probably keep these for rendering these types (except, 'Pairtree').\nIs there a reason why you believe they should go away?", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389148788", "createdAt": "2020-03-06T21:18:14Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -164,10 +164,6 @@ void init() throws IOException {\n \n         templatesMap = templatesMapBuilder\n             .put(REPOSITORY_NAMESPACE + \"RepositoryRoot\", velocity.getTemplate(getTemplateLocation(\"root\")))\n-            .put(REPOSITORY_NAMESPACE + \"Binary\", velocity.getTemplate(getTemplateLocation(\"binary\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NDQyNw==", "bodyText": "Seemingly a fedora:Binary will always also have a ldp:NonRDFSource type and therefore will get the template using that type. Same with fedora:Container and ldp:RDFSource. So having these seemed redundant.", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389674427", "createdAt": "2020-03-09T13:38:14Z", "author": {"login": "whikloj"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -164,10 +164,6 @@ void init() throws IOException {\n \n         templatesMap = templatesMapBuilder\n             .put(REPOSITORY_NAMESPACE + \"RepositoryRoot\", velocity.getTemplate(getTemplateLocation(\"root\")))\n-            .put(REPOSITORY_NAMESPACE + \"Binary\", velocity.getTemplate(getTemplateLocation(\"binary\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0ODc4OA=="}, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE3MzAyOnYy", "diffSide": "LEFT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNzoxOVrOFzH-sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1Njo1MVrOF0oflw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA==", "bodyText": "I suspect this was put in-place to prioritize the \"RepositoryRoot\" template... did your observations indicate otherwise?", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389152434", "createdAt": "2020-03-06T21:27:19Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -257,9 +253,6 @@ private Template getTemplate(final Model rdf, final Node subject,\n             .map(x -> ((HtmlTemplate) x).value()).filter(templatesMap::containsKey).findFirst()\n             .orElseGet(() -> {\n                 final List<String> types = multiValueURI(rdf.getResource(subject.getURI()), type);\n-                if (types.contains(REPOSITORY_NAMESPACE + \"RepositoryRoot\")) {\n-                    return REPOSITORY_NAMESPACE + \"RepositoryRoot\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3OTUwNA==", "bodyText": "I did not do a lot of research into the reason for this. But RepositoryRoot is the first entry in the templateMap and so if this types.contains() is going to match then it should also match in the following types.stream()... and the findFirst() should return the first match, which should be RepositoryRoot.", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389679504", "createdAt": "2020-03-09T13:42:34Z", "author": {"login": "whikloj"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -257,9 +253,6 @@ private Template getTemplate(final Model rdf, final Node subject,\n             .map(x -> ((HtmlTemplate) x).value()).filter(templatesMap::containsKey).findFirst()\n             .orElseGet(() -> {\n                 final List<String> types = multiValueURI(rdf.getResource(subject.getURI()), type);\n-                if (types.contains(REPOSITORY_NAMESPACE + \"RepositoryRoot\")) {\n-                    return REPOSITORY_NAMESPACE + \"RepositoryRoot\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA=="}, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMzcxOQ==", "bodyText": "Now the test required me to re-add this. Remove it and it works, rebase and it fails. \ud83e\udd37\u200d\u2642", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r390733719", "createdAt": "2020-03-11T03:56:51Z", "author": {"login": "whikloj"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -257,9 +253,6 @@ private Template getTemplate(final Model rdf, final Node subject,\n             .map(x -> ((HtmlTemplate) x).value()).filter(templatesMap::containsKey).findFirst()\n             .orElseGet(() -> {\n                 final List<String> types = multiValueURI(rdf.getResource(subject.getURI()), type);\n-                if (types.contains(REPOSITORY_NAMESPACE + \"RepositoryRoot\")) {\n-                    return REPOSITORY_NAMESPACE + \"RepositoryRoot\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA=="}, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE4MzA3OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTozMDo1NVrOFzIErQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTozMDo1NVrOFzIErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1Mzk2NQ==", "bodyText": "This comment can probably now be removed.", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389153965", "createdAt": "2020-03-06T21:30:55Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java", "diffHunk": "@@ -47,6 +58,20 @@ public NonRdfSourceDescriptionImpl(final String id,\n     @Override\n     public FedoraResource getDescribedResource() {\n         // TODO must return the described binary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b20ee79759ef702fac83be5e9965515096b9c63"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1954, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}