{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNTA3ODM5", "number": 1812, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo0MjoxOFrOE6z_5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo0MjoxOFrOE6z_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTA0ODA2OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo0MjoxOFrOH2GxFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo0MjoxOFrOH2GxFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NjAyMw==", "bodyText": "Haven't looked at this PR in depth. Was just browsing and noticed this. binary.getContent() should be called in a try-with block so that it is closed.", "url": "https://github.com/fcrepo/fcrepo/pull/1812#discussion_r526496023", "createdAt": "2020-11-18T23:42:18Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java", "diffHunk": "@@ -49,8 +73,37 @@\n     }\n \n     @Override\n-    public Collection<URI> checkFixity(final Binary binary, final Collection<String> algorithms)\n-            throws UnsupportedAlgorithmException {\n-        return null;\n+    public RdfStream checkFixity(final Binary binary)\n+            throws InvalidChecksumException {\n+        final Model model = createDefaultModel();\n+        final Resource subject = model.createResource(binary.getId());\n+        final Resource fixityResult = model.createResource(\n+                binary.getFedoraId().resolve(\"#\" + UUID.randomUUID().toString()).getFullId());\n+        model.add(subject, HAS_FIXITY_RESULT, fixityResult);\n+        model.add(fixityResult, type, PREMIS_FIXITY);\n+        model.add(fixityResult, type, PREMIS_EVENT_OUTCOME_DETAIL);\n+        model.add(fixityResult, HAS_SIZE, createTypedLiteral(binary.getContentSize()));\n+\n+        // Built for more than one digest in anticipation of FCREPO-3419\n+        final List<URI> existingDigestList = new ArrayList<>();\n+        existingDigestList.add(binary.getContentDigest());\n+\n+        final var digestAlgs = existingDigestList.stream()\n+                .map(URI::toString)\n+                .map(a -> a.replace(\"urn:\", \"\").split(\":\")[0])\n+                .map(DIGEST_ALGORITHM::fromAlgorithm)\n+                .collect(Collectors.toList());\n+\n+        final MultiDigestInputStreamWrapper digestWrapper = new MultiDigestInputStreamWrapper(\n+                binary.getContent(), existingDigestList, digestAlgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0277fc4bff6672f99cf930e3ae7caafd5ea517a1"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1731, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}