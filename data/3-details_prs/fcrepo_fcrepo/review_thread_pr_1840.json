{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTk4Mzkw", "number": 1840, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo0MDo0OFrOFKGUDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo0Mzo1OVrOFKGWqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTMzNTE5OnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraVersioningIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo0MDo0OFrOIMulHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo0MDo0OFrOIMulHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxNjk4OQ==", "bodyText": "Given the number of times the following is implemented in this test class:\nfinal String versionUri = createMemento(uri);\n\n..it is conceivable that pulling this new logic into a new private method could be useful.", "url": "https://github.com/fcrepo/fcrepo/pull/1840#discussion_r550216989", "createdAt": "2020-12-30T14:40:48Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraVersioningIT.java", "diffHunk": "@@ -1021,9 +1021,15 @@ public void testDatetimeNegotiationLDPRv() throws Exception {\n \n         final CloseableHttpClient customClient = createClient(true);\n \n-        final String uri = createVersionedContainer(id);\n+        createVersionedContainer(id);\n+\n+        final String version1Uri;\n \n-        final String version1Uri = createMemento(uri);\n+        try (final CloseableDataset dataset = getDataset(getObjMethod(id + \"/\" + FCR_VERSIONS))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cecf69e3f91f44888fe9fe6aef81c56ab8d34"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MTM0MTg3OnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/TestIsolationExecutionListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNDo0Mzo1OVrOIMupJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNjo0Njo1NVrOIMxE3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxODAyMA==", "bodyText": "Did you forget to toggle hasError when catching an exception?", "url": "https://github.com/fcrepo/fcrepo/pull/1840#discussion_r550218020", "createdAt": "2020-12-30T14:43:59Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/TestIsolationExecutionListener.java", "diffHunk": "@@ -32,7 +38,24 @@\n     @Override\n     public void beforeTestMethod(final TestContext testContext) throws Exception {\n         final var ocflRepo = getBean(testContext, MutableOcflRepository.class);\n-        ocflRepo.listObjectIds().forEach(ocflRepo::purgeObject);\n+        final var ocflConfig = getBean(testContext, OcflPropsConfig.class);\n+\n+        final var hasError = new AtomicBoolean(false);\n+\n+        ocflRepo.listObjectIds().forEach(object -> {\n+            try {\n+                ocflRepo.purgeObject(object);\n+            } catch (RuntimeException e) {\n+                // Recursive deletes don't behave well on Windows and it's possible for the above to error out.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638cecf69e3f91f44888fe9fe6aef81c56ab8d34"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI1Nzg4NQ==", "bodyText": "whoops", "url": "https://github.com/fcrepo/fcrepo/pull/1840#discussion_r550257885", "createdAt": "2020-12-30T16:46:55Z", "author": {"login": "pwinckles"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/TestIsolationExecutionListener.java", "diffHunk": "@@ -32,7 +38,24 @@\n     @Override\n     public void beforeTestMethod(final TestContext testContext) throws Exception {\n         final var ocflRepo = getBean(testContext, MutableOcflRepository.class);\n-        ocflRepo.listObjectIds().forEach(ocflRepo::purgeObject);\n+        final var ocflConfig = getBean(testContext, OcflPropsConfig.class);\n+\n+        final var hasError = new AtomicBoolean(false);\n+\n+        ocflRepo.listObjectIds().forEach(object -> {\n+            try {\n+                ocflRepo.purgeObject(object);\n+            } catch (RuntimeException e) {\n+                // Recursive deletes don't behave well on Windows and it's possible for the above to error out.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIxODAyMA=="}, "originalCommit": {"oid": "638cecf69e3f91f44888fe9fe6aef81c56ab8d34"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1759, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}