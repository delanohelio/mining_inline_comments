{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODI4MzQ2", "number": 1658, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxNTo1MVrODwELRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxNTo1MVrODwELRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzI2NjYyOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/Transactions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxNTo1MVrOGC2rpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxNjoyN1rOGC2tJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0NjI0Ng==", "bodyText": "Do we want to return  a text message as well such as \"Transaction does not exist: {txId}\"", "url": "https://github.com/fcrepo/fcrepo/pull/1658#discussion_r405646246", "createdAt": "2020-04-08T16:15:51Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/Transactions.java", "diffHunk": "@@ -84,19 +151,20 @@ public Response createTransaction() throws URISyntaxException {\n      * @return 204\n      */\n     @PUT\n-    @Path(\"/fcr:tx/{transactionId}/commit\")\n+    @Path(\"{transactionId}/commit\")\n     public Response commit(@PathParam(\"transactionId\") final String txId) {\n         try {\n             final Transaction transaction = txManager.get(txId);\n-            LOGGER.info(\"Commit transaction '{}'\", transaction.getId());\n+            LOGGER.info(\"Committing transaction '{}'\", transaction.getId());\n             transaction.commit();\n             return noContent().build();\n-        } catch(Exception e) {\n-            if (e.getMessage().matches(\"No Transaction found with transactionId\")) {\n-                return status(BAD_REQUEST).entity(e.getMessage()).type(TEXT_PLAIN_WITH_CHARSET).build();\n-            } else {\n-                throw new RuntimeException(e);\n-            }\n+        } catch (final TransactionNotFoundException e) {\n+            return Response.status(Status.BAD_REQUEST).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e955647cd6e0ce3ec8cdc46ef29b9eb20248454c"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0NjYyOA==", "bodyText": "Or at least pass e.getMessage()", "url": "https://github.com/fcrepo/fcrepo/pull/1658#discussion_r405646628", "createdAt": "2020-04-08T16:16:27Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/Transactions.java", "diffHunk": "@@ -84,19 +151,20 @@ public Response createTransaction() throws URISyntaxException {\n      * @return 204\n      */\n     @PUT\n-    @Path(\"/fcr:tx/{transactionId}/commit\")\n+    @Path(\"{transactionId}/commit\")\n     public Response commit(@PathParam(\"transactionId\") final String txId) {\n         try {\n             final Transaction transaction = txManager.get(txId);\n-            LOGGER.info(\"Commit transaction '{}'\", transaction.getId());\n+            LOGGER.info(\"Committing transaction '{}'\", transaction.getId());\n             transaction.commit();\n             return noContent().build();\n-        } catch(Exception e) {\n-            if (e.getMessage().matches(\"No Transaction found with transactionId\")) {\n-                return status(BAD_REQUEST).entity(e.getMessage()).type(TEXT_PLAIN_WITH_CHARSET).build();\n-            } else {\n-                throw new RuntimeException(e);\n-            }\n+        } catch (final TransactionNotFoundException e) {\n+            return Response.status(Status.BAD_REQUEST).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0NjI0Ng=="}, "originalCommit": {"oid": "e955647cd6e0ce3ec8cdc46ef29b9eb20248454c"}, "originalPosition": 139}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1786, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}