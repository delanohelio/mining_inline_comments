{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNDA2NDQ2", "number": 1836, "title": "FCREPO-3541 - Etags reflect membership and other request preferences", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3541\nWhat does this Pull Request do?\n\nDetermines last updated timestamp of membership for a resource\nEtags and state tokens now diverge for RDF sources, as etags now reflect\n\nState token\nRequested mimetype\nPrefer headers that affect the included triples\nLast updated from containment index\nLast updated from membership index\n\n\nAdds a service for calculating etags\nRemoves inclusion of containment last updated from state token calculation, as it is happening at request time now\n\nHow should this be tested?\nYou can see a few other examples of DirectContainer operations that could be used for testing in:\n#1781\n# Create the membership resource\ncurl -XPUT http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin\n\n# Create a DirectContainer using hasMember relation\necho \"\n<http://localhost:8080/rest/dc_hm> <http://www.w3.org/ns/ldp#membershipResource> <http://localhost:8080/rest/mem_resc1> .\n<http://localhost:8080/rest/dc_hm> <http://www.w3.org/ns/ldp#hasMemberRelation> <http://example.com/hasMember> .\n\" | curl -XPUT http://localhost:8080/rest/dc_hm -ufedoraAdmin:fedoraAdmin -H'Link: <http://www.w3.org/ns/ldp#DirectContainer>;rel=\"type\"' -H\"Content-Type: application/n-triples\" --data-binary \"@-\"\n\n# Etag for GET and HEAD requests should be the same\n\ncurl -I http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin\n\n    ETag: W/\"E1F2B178018FD97465BC14AD84826960\"\n  \ncurl http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin -v\n\n    < ETag: W/\"E1F2B178018FD97465BC14AD84826960\"\n\n# Check etag without membership, should be the same at this point\ncurl http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin -v -H 'Prefer: return=representation; omit=\"http://www.w3.org/ns/ldp#PreferMembership\"'\n\n    < ETag: W/\"E1F2B178018FD97465BC14AD84826960\"\n\n\n# Now add a member\ncurl -XPUT http://localhost:8080/rest/dc_hm/memb1 -ufedoraAdmin:fedoraAdmin\n\n# Etag in HEAD and GET should have changed from before, but match each other\ncurl -I http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin\n\n    ETag: W/\"8C2E7DFF1429384C8D97E0F35A02E49A\"\n    \ncurl http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin -v\n\n    < ETag: W/\"8C2E7DFF1429384C8D97E0F35A02E49A\"\n\n# ETag without membership should match from before membership added\ncurl http://localhost:8080/rest/mem_resc1 -ufedoraAdmin:fedoraAdmin -v -H 'Prefer: return=representation; omit=\"http://www.w3.org/ns/ldp#PreferMembership\"'\n\n    < ETag: W/\"E1F2B178018FD97465BC14AD84826960\"\n    \n\n\n# Verify that excluding containment impacts etag\ncurl -XPUT http://localhost:8080/rest/parent_resc -ufedoraAdmin:fedoraAdmin\n\n# Etag of resc before children\ncurl -I http://localhost:8080/rest/parent_resc -ufedoraAdmin:fedoraAdmin\n\n    ETag: W/\"A3CFA72A1C75348BC44B463F7F98BE86\"\n\n# Add child\ncurl -XPUT http://localhost:8080/rest/parent_resc/child_resc -ufedoraAdmin:fedoraAdmin\n\n# Etag of parent should have changed\ncurl -I http://localhost:8080/rest/parent_resc -ufedoraAdmin:fedoraAdmin\n\n    ETag: W/\"B3CC7929EA643EC9BA83E5C32F2ECDE7\"\n\n# Excluding containment should match etag before children\ncurl http://localhost:8080/rest/parent_resc -ufedoraAdmin:fedoraAdmin -v -H 'Prefer: return=representation; omit=\"http://www.w3.org/ns/ldp#PreferContainment\"'\n\n    < ETag: W/\"A3CFA72A1C75348BC44B463F7F98BE86\"", "createdAt": "2020-12-15T16:54:05Z", "url": "https://github.com/fcrepo/fcrepo/pull/1836", "merged": true, "mergeCommit": {"oid": "6167051fd9e4646da2a15736366f5e64026c66f2"}, "closed": true, "closedAt": "2020-12-16T14:41:43Z", "author": {"login": "bbpennel"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmerDUAFqTU1MjczNzc5Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmv8EBAFqTU1Mzc0NzU4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzM3Nzk3", "url": "https://github.com/fcrepo/fcrepo/pull/1836#pullrequestreview-552737797", "createdAt": "2020-12-15T18:15:48Z", "commit": {"oid": "ad4f35a0e946407638254247bedc3bae62500f93"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODoxNTo0OFrOIGZO6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODoxNjozNlrOIGZQ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NTc4Nw==", "bodyText": "TransactionUtils.openTxId()", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543575787", "createdAt": "2020-12-15T18:15:48Z", "author": {"login": "pwinckles"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -715,7 +725,9 @@ void evaluateRequestPreconditions(final Request request,\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a strong ETag for the LDP-RS when validating If-(None)-Match headers\n-            etag = new EntityTag(resource.getEtagValue());\n+            final String txId = transaction == null ? null : transaction.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4f35a0e946407638254247bedc3bae62500f93"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NjMxNg==", "bodyText": "TransactionUtils.openTxId()", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543576316", "createdAt": "2020-12-15T18:16:36Z", "author": {"login": "pwinckles"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -655,7 +663,9 @@ protected void addCacheControlHeaders(final HttpServletResponse servletResponse,\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a weak ETag for the LDP-RS\n-            etag = new EntityTag(resource.getEtagValue(), true);\n+            final String txId = transaction == null ? null : transaction.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad4f35a0e946407638254247bedc3bae62500f93"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58185e749b0882bdc2a46f82e34e9407b601daa4", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/58185e749b0882bdc2a46f82e34e9407b601daa4", "committedDate": "2020-12-15T21:22:22Z", "message": "Compute RDF etags based on state token, serialization, prefer headers, last modified timestamps for containment and membership. Store last updated timestamps for membership relations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64fa32aadee958a759e59233674a15fac8cf35dd", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/64fa32aadee958a759e59233674a15fac8cf35dd", "committedDate": "2020-12-15T21:22:22Z", "message": "Add integration tests. Handle last_updated for mementos."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "827346dac38d747dfd73c52ef08bbf679a6dcf83", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/827346dac38d747dfd73c52ef08bbf679a6dcf83", "committedDate": "2020-12-15T21:22:22Z", "message": "Remove baking of containment last_updated into state token since its now being included during etag calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6fac6b2392d8b9ed815c7cd76e31090afce7d1d", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/b6fac6b2392d8b9ed815c7cd76e31090afce7d1d", "committedDate": "2020-12-15T21:22:22Z", "message": "Add more etag testing, move some DirectContainer tests, enable one of them and update it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/01d6b09302464e66885f66a8b01ed8fc404ce780", "committedDate": "2020-12-15T21:23:45Z", "message": "Use TransactionUtils.openTxId"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad4f35a0e946407638254247bedc3bae62500f93", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/ad4f35a0e946407638254247bedc3bae62500f93", "committedDate": "2020-12-15T16:51:46Z", "message": "Add more etag testing, move some DirectContainer tests, enable one of them and update it"}, "afterCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/01d6b09302464e66885f66a8b01ed8fc404ce780", "committedDate": "2020-12-15T21:23:45Z", "message": "Use TransactionUtils.openTxId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTMwMzIz", "url": "https://github.com/fcrepo/fcrepo/pull/1836#pullrequestreview-552930323", "createdAt": "2020-12-15T21:44:32Z", "commit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTo0NDozMlrOIGhUlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxOTo1NVrOIGikUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwODMwOQ==", "bodyText": "typo: 'reosurce'", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543708309", "createdAt": "2020-12-15T21:44:32Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.api.services;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.fcrepo.kernel.api.ContainmentIndex;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+import org.fcrepo.kernel.api.rdf.LdpTriplePreferences;\n+import org.fcrepo.kernel.api.services.MembershipService;\n+\n+import org.apache.commons.codec.digest.DigestUtils;\n+import org.slf4j.Logger;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Service for computing etags for request responses\n+ *\n+ * @author bbpennel\n+ */\n+@Component\n+public class EtagService {\n+    private static final Logger LOGGER = getLogger(EtagService.class);\n+\n+    @Inject\n+    private ContainmentIndex containmentIndex;\n+\n+    @Inject\n+    private MembershipService membershipService;\n+\n+    /**\n+     * Produces etag for a request for an RDF resource. It is based on factors related to the\n+     * current state of the resource, as well as request options which change the\n+     * representation of the reosurce.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTg2OQ==", "bodyText": "Would we expect initialEtag to match the etag returned with an \"omit=\"http://www.w3.org/ns/ldp#PreferMembership\\\"\" response?", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543721869", "createdAt": "2020-12-15T22:07:26Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -2420,9 +2355,15 @@ public void testGetObjectOmitContainment() throws IOException {\n         assertTrue(getLinkHeaders(getObjMethod(id + \"/a\")).contains(DIRECT_CONTAINER_LINK_HEADER));\n         createObject(id + \"/a/1\");\n \n+        final String withMemberEtag = getEtag(serverAddress + id);\n+        assertNotEquals(initialEtag, withMemberEtag);\n+\n         final HttpGet getObjMethod = getObjMethod(id);\n         getObjMethod\n                 .addHeader(\"Prefer\", \"return=representation; omit=\\\"http://www.w3.org/ns/ldp#PreferContainment\\\"\");\n+        final String omitEtag = getEtag(getObjMethod);\n+        assertNotEquals(\"Should not match initial because of membership\", initialEtag, omitEtag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTY3Mw==", "bodyText": "Should this annotation be instead referring to: https://jira.lyrasis.org/browse/FCREPO-3410 ?", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543725673", "createdAt": "2020-12-15T22:14:24Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODA1Ng==", "bodyText": "Any reason not to use \"AbstractResourceIT.getEtag()\"?", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543728056", "createdAt": "2020-12-15T22:18:43Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n+        final String id = getRandomUniqueId();\n+        final String members = id + \"/members\";\n+        final String child = members + \"/child\";\n+\n+        createObjectAndClose(id);\n+\n+        // Create the IndirectContainer\n+        final HttpPut createContainer = new HttpPut(serverAddress + members);\n+        createContainer.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        createContainer.addHeader(LINK, INDIRECT_CONTAINER_LINK_HEADER);\n+        final String membersRDF = \"<> <http://www.w3.org/ns/ldp#hasMemberRelation> <info:fedora/test/hasTitle> ; \"\n+            + \"<http://www.w3.org/ns/ldp#insertedContentRelation> <http://www.w3.org/2004/02/skos/core#prefLabel>; \"\n+            + \"<http://www.w3.org/ns/ldp#membershipResource> <\" + serverAddress + id + \"> . \";\n+        createContainer.setEntity(new StringEntity(membersRDF));\n+        assertEquals(\"Membership container not created!\", CREATED.getStatusCode(), getStatus(createContainer));\n+\n+        // Create a child with the appropriate property\n+        final HttpPut createChild = new HttpPut(serverAddress + child);\n+        createChild.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        final String childRDF = \"<> <http://www.w3.org/2004/02/skos/core#prefLabel> \\\"A title\\\".\";\n+        createChild.setEntity(new StringEntity(childRDF));\n+        assertEquals(\"Child container not created!\", CREATED.getStatusCode(), getStatus(createChild));\n+\n+        final HttpGet get = new HttpGet(serverAddress + id);\n+        final String etag1;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag1 = response.getFirstHeader(\"ETag\").getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODcyMg==", "bodyText": "Any reason not to use \"AbstractResourceIT.getEtag()\"?", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543728722", "createdAt": "2020-12-15T22:19:55Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n+        final String id = getRandomUniqueId();\n+        final String members = id + \"/members\";\n+        final String child = members + \"/child\";\n+\n+        createObjectAndClose(id);\n+\n+        // Create the IndirectContainer\n+        final HttpPut createContainer = new HttpPut(serverAddress + members);\n+        createContainer.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        createContainer.addHeader(LINK, INDIRECT_CONTAINER_LINK_HEADER);\n+        final String membersRDF = \"<> <http://www.w3.org/ns/ldp#hasMemberRelation> <info:fedora/test/hasTitle> ; \"\n+            + \"<http://www.w3.org/ns/ldp#insertedContentRelation> <http://www.w3.org/2004/02/skos/core#prefLabel>; \"\n+            + \"<http://www.w3.org/ns/ldp#membershipResource> <\" + serverAddress + id + \"> . \";\n+        createContainer.setEntity(new StringEntity(membersRDF));\n+        assertEquals(\"Membership container not created!\", CREATED.getStatusCode(), getStatus(createContainer));\n+\n+        // Create a child with the appropriate property\n+        final HttpPut createChild = new HttpPut(serverAddress + child);\n+        createChild.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        final String childRDF = \"<> <http://www.w3.org/2004/02/skos/core#prefLabel> \\\"A title\\\".\";\n+        createChild.setEntity(new StringEntity(childRDF));\n+        assertEquals(\"Child container not created!\", CREATED.getStatusCode(), getStatus(createChild));\n+\n+        final HttpGet get = new HttpGet(serverAddress + id);\n+        final String etag1;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag1 = response.getFirstHeader(\"ETag\").getValue();\n+            IOUtils.toString(response.getEntity().getContent(), UTF_8);\n+        }\n+\n+        assertEquals(\"Child resource not deleted!\", NO_CONTENT.getStatusCode(),\n+                getStatus(new HttpDelete(serverAddress + child)));\n+\n+        final String etag2;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag2 = response.getFirstHeader(\"ETag\").getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c738044240d8a3679718283a4e8671e173d0fa52", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/c738044240d8a3679718283a4e8671e173d0fa52", "committedDate": "2020-12-16T14:09:57Z", "message": "Tidying up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzQ3NTgw", "url": "https://github.com/fcrepo/fcrepo/pull/1836#pullrequestreview-553747580", "createdAt": "2020-12-16T14:37:30Z", "commit": {"oid": "c738044240d8a3679718283a4e8671e173d0fa52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3051, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}