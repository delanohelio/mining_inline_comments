{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjI2NDY4", "number": 1716, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Mzo0MVrOEMnKjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo1MjozNFrOEMppWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjYwMDQ3OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Mzo0MVrOGu00mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTozODozNVrOGu6ImQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzExMw==", "bodyText": "For consistency with the other methods on this interface... potentially change from tx to txId.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451753113", "createdAt": "2020-07-08T18:43:41Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -39,7 +38,7 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContains(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(String tx, FedoraResource fedoraResource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MDE1Mw==", "bodyText": "Will do. Renamed the implementation, but forgot the interface.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451840153", "createdAt": "2020-07-08T21:38:35Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -39,7 +38,7 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContains(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(String tx, FedoraResource fedoraResource);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzExMw=="}, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjYwMDg1OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Mzo0OFrOGu002w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Mzo0OFrOGu002w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzE3OQ==", "bodyText": "For consistency with the other methods on this interface... potentially change from tx to txId.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451753179", "createdAt": "2020-07-08T18:43:48Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -49,7 +48,7 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContainsDeleted(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContainsDeleted(String tx, FedoraResource fedoraResource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjYxMzk0OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/observer/EventAccumulatorImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Nzo1M1rOGu09iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0Nzo1M1rOGu09iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NTQwMw==", "bodyText": "Thank you.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451755403", "createdAt": "2020-07-08T18:47:53Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/observer/EventAccumulatorImpl.java", "diffHunk": "@@ -71,7 +71,7 @@ public void recordEventForOperation(final String transactionId, final FedoraId f\n \n     @Override\n     public void emitEvents(final String transactionId, final String baseUrl, final String userAgent) {\n-        LOG.info(\"Emitting events for transaction {}\", transactionId);\n+        LOG.debug(\"Emitting events for transaction {}\", transactionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjk3NDcyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0MjoxNlrOGu4gXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTo0NjoxMFrOGu6VBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA==", "bodyText": "For clarity around the use of this pseudo-transaction, can we make this method (rebuild()) private, and remove it from the IndexBuilder interface?", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451813470", "createdAt": "2020-07-08T20:42:16Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -89,80 +97,92 @@ public void rebuild() {\n         containmentIndex.reset();\n         searchIndex.reset();\n \n+        final var txId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MTU2NA==", "bodyText": "Hmm... I'm not sure I understand. The whole point of the this class is the rebuild method, and there are tests that use it. rebuildIfNecessary is just a wrapper that tries to make a guess as to whether or not rebuild should be called.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451841564", "createdAt": "2020-07-08T21:41:59Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -89,80 +97,92 @@ public void rebuild() {\n         containmentIndex.reset();\n         searchIndex.reset();\n \n+        final var txId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MTk5NA==", "bodyText": "rebuild() is never called outside of this class.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451841994", "createdAt": "2020-07-08T21:43:02Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -89,80 +97,92 @@ public void rebuild() {\n         containmentIndex.reset();\n         searchIndex.reset();\n \n+        final var txId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MzMzMw==", "bodyText": "Ah, you're right. It used to be called by RebuildIT, but I changed that earlier this week. Sure, I can remove it from the interface. Presumably we might want it add it back later if we add the ability to force a rebuild?", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451843333", "createdAt": "2020-07-08T21:46:10Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -89,80 +97,92 @@ public void rebuild() {\n         containmentIndex.reset();\n         searchIndex.reset();\n \n+        final var txId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzAwNjk3OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo1MjozNVrOGu40Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTozNzoyMFrOGu6GqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxODU0Nw==", "bodyText": "I believe slf4j sees a miniscule performance benefit from the non-concatenating syntax (\"Failed to cleanup staging directory: {}\", stagingDir)... but no big deal.", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451818547", "createdAt": "2020-07-08T20:52:35Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -190,4 +210,32 @@ private boolean repoContainsObjects() {\n         return ocflRepository.listObjectIds().findFirst().isPresent();\n     }\n \n+    private Path createStagingDir(final String txId) {\n+        try {\n+            return Files.createDirectories(sessionStagingRoot.resolve(txId));\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private void cleanupStaging(final Path stagingDir) {\n+        if (!FileUtils.deleteQuietly(stagingDir.toFile())) {\n+            LOGGER.warn(\"Failed to cleanup staging directory: \" + stagingDir);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzOTY1Ng==", "bodyText": "Yup. I'll fix those", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451839656", "createdAt": "2020-07-08T21:37:20Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -190,4 +210,32 @@ private boolean repoContainsObjects() {\n         return ocflRepository.listObjectIds().findFirst().isPresent();\n     }\n \n+    private Path createStagingDir(final String txId) {\n+        try {\n+            return Files.createDirectories(sessionStagingRoot.resolve(txId));\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private void cleanupStaging(final Path stagingDir) {\n+        if (!FileUtils.deleteQuietly(stagingDir.toFile())) {\n+            LOGGER.warn(\"Failed to cleanup staging directory: \" + stagingDir);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxODU0Nw=="}, "originalCommit": {"oid": "58662ef117917eb2af87d8b658796bd19078b554"}, "originalPosition": 213}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1866, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}