{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODk3NjI5", "number": 1747, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1NjoxOVrOEiNWTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1NjoxOVrOEiNWTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzA1NzQxOnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ManagedPropertiesServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1NjoxOVrOHP9QXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo1NjoxOVrOHP9QXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NDMwMw==", "bodyText": "I see that we currently only support retrieval of one content digest, it would be ideal if they could all be returned.\nNew ticket: https://jira.lyrasis.org/browse/FCREPO-3419", "url": "https://github.com/fcrepo/fcrepo/pull/1747#discussion_r486494303", "createdAt": "2020-09-10T16:56:19Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ManagedPropertiesServiceImpl.java", "diffHunk": "@@ -52,10 +60,29 @@\n                 createLiteral(resource.getCreatedDate().toString(), XSDdateTime)));\n         triples.add(Triple.create(subject, LAST_MODIFIED_DATE.asNode(),\n                 createLiteral(resource.getLastModifiedDate().toString(), XSDdateTime)));\n+        if (resource.getCreatedBy() != null) {\n+            triples.add(Triple.create(subject, CREATED_BY.asNode(), createLiteral(resource.getCreatedBy())));\n+        }\n+        if (resource.getLastModifiedBy() != null) {\n+            triples.add(Triple.create(subject, LAST_MODIFIED_BY.asNode(), createLiteral(resource.getLastModifiedBy())));\n+        }\n \n         resource.getDescribedResource().getSystemTypes(true).forEach(triple -> {\n             triples.add(Triple.create(subject, type.asNode(), createURI(triple.toString())));\n         });\n+        if (resource instanceof NonRdfSourceDescription) {\n+            final Binary binary = (Binary) resource.getDescribedResource();\n+\n+            triples.add(Triple.create(subject, HAS_SIZE.asNode(),\n+                    createLiteral(String.valueOf(binary.getContentSize()), XSDlong)));\n+            if (binary.getMimeType() != null) {\n+                triples.add(Triple.create(subject, HAS_MIME_TYPE.asNode(), createLiteral(binary.getMimeType())));\n+            }\n+            if (binary.getContentDigest() != null) {\n+                triples.add(Triple.create(subject, HAS_MESSAGE_DIGEST.asNode(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "608ae2f6343e05b240b88b8cd46bbe001e80bc80"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1646, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}