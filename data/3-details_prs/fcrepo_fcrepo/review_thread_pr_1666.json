{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjIwMzA5", "number": 1666, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo0Mzo0OFrOD11lpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjo0Mjo1MVrOD2qVGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzc5MTA5OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/exception/TombstoneException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo0Mzo0OFrOGLdy-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo0Mzo0OFrOGLdy-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY3NTcwNA==", "bodyText": "For whatever reason, Java hid what you're looking for at ZoneOffset.UTC.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414675704", "createdAt": "2020-04-24T15:43:48Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/exception/TombstoneException.java", "diffHunk": "@@ -32,22 +38,26 @@\n \n     private final String uri;\n \n+    private static DateTimeFormatter isoFormatter = ISO_INSTANT.withZone(ZoneId.of(\"UTC\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzg1NzMxOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo1ODowMFrOGLeaPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODozNzoxNFrOGLkYmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NTc1Ng==", "bodyText": "Not a problem with this PR, but making changes to the headers file was on the back of my mind recently. Should this file be versioned or do we expect it to never really change once F6 is released? What is the impact of adding/removing properties later?", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414685756", "createdAt": "2020-04-24T15:58:00Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "diffHunk": "@@ -62,6 +62,8 @@\n \n     private boolean objectRoot;\n \n+    private boolean deleted;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4MzY0MQ==", "bodyText": "As long as you set a sensible default in the ResourceHeadersImpl then I think we are good. For instance, in this case if you stand up a F6 create an object. Then stop F6, build this PR and stand it up again the headers for those existing objects (not having the key) should be \"delete\":false. As for removing properties, that would probably require us to list them as an ignored property.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414783641", "createdAt": "2020-04-24T18:37:14Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "diffHunk": "@@ -62,6 +62,8 @@\n \n     private boolean objectRoot;\n \n+    private boolean deleted;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NTc1Ng=="}, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzg2Nzg1OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjowMDoxNlrOGLegrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODozNzo0MFrOGLkZag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NzQwNQ==", "bodyText": "Why are you rethrowing the exception message without its stacktrace? It makes debugging much harder.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414687405", "createdAt": "2020-04-24T16:00:16Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4Mzg1MA==", "bodyText": "fair point", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414783850", "createdAt": "2020-04-24T18:37:40Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NzQwNQ=="}, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODE1NTEyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzoxMDozNlrOGLhNTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoxNzozMFrOGLns6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDczMTU5OQ==", "bodyText": "Is it possible for a path to have a . that is unrelated to a file extension?", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414731599", "createdAt": "2020-04-24T17:10:36Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);\n+                deletePath(descPath, objectSession);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Simple utility to delete a path's files and mark them as deleted in the headers file.\n+     * @param path Path to delete\n+     * @param session Session to delete the path in.\n+     */\n+    private void deletePath(final String path, final OCFLObjectSession session) throws PersistentStorageException{\n+        // readHeaders and writeHeaders need the subpath where as delete needs the file name. So remove any extensions.\n+        final var no_extension = (path.contains(\".\") ? path.substring(0, path.indexOf(\".\")) : path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4OTUzNg==", "bodyText": "unsure, we could have something that removes only specific extensions?", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414789536", "createdAt": "2020-04-24T18:47:14Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);\n+                deletePath(descPath, objectSession);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Simple utility to delete a path's files and mark them as deleted in the headers file.\n+     * @param path Path to delete\n+     * @param session Session to delete the path in.\n+     */\n+    private void deletePath(final String path, final OCFLObjectSession session) throws PersistentStorageException{\n+        // readHeaders and writeHeaders need the subpath where as delete needs the file name. So remove any extensions.\n+        final var no_extension = (path.contains(\".\") ? path.substring(0, path.indexOf(\".\")) : path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDczMTU5OQ=="}, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNzk5Mw==", "bodyText": "I would suggest creating a JIRA to address this issue separately.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414837993", "createdAt": "2020-04-24T20:17:30Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);\n+                deletePath(descPath, objectSession);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Simple utility to delete a path's files and mark them as deleted in the headers file.\n+     * @param path Path to delete\n+     * @param session Session to delete the path in.\n+     */\n+    private void deletePath(final String path, final OCFLObjectSession session) throws PersistentStorageException{\n+        // readHeaders and writeHeaders need the subpath where as delete needs the file name. So remove any extensions.\n+        final var no_extension = (path.contains(\".\") ? path.substring(0, path.indexOf(\".\")) : path);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDczMTU5OQ=="}, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODI0MjY5OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzozMjoyNFrOGLiCDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo0OToxOFrOGLkz_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0NTEwMA==", "bodyText": "Would acls need to be deleted here too? I know we aren't writing any yet. Just asking out of curiosity.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414745100", "createdAt": "2020-04-24T17:32:24Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc5MDY1Mw==", "bodyText": "Yes, I think that would need to be checked for. As an ACL is not required we'd need to check for its existence and delete.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r414790653", "createdAt": "2020-04-24T18:49:18Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc.getCause().getMessage());\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0NTEwMA=="}, "originalCommit": {"oid": "1d062a1a746f79fe5e4c391be1a6332c35fa85a0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjQzMjI3OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjo0Mjo1MVrOGMhITA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjo0Mjo1MVrOGMhITA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc3ODg5Mg==", "bodyText": "I think you might want to call ResourceHeadersUtil.touchModificationHeaders() here instead of directly setting the lastModifiedDate.", "url": "https://github.com/fcrepo/fcrepo/pull/1666#discussion_r415778892", "createdAt": "2020-04-27T12:42:51Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -52,16 +57,68 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n-            // We are at the root of the object.\n-            objectSession.deleteObject();\n+            // We are at the root of the object, so delete all the data files.\n+            try {\n+                objectSession.listHeadSubpaths().filter(p -> !isSidecarSubpath(p)).forEach(\n+                        p -> deletePathWrapped(p, objectSession));\n+            } catch (final PersistentStorageRuntimeException exc) {\n+                // Rethrow the exception as a checked exception\n+                throw new PersistentStorageException(exc);\n+            }\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n             final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n-            final var headers = readHeaders(objectSession, ocflSubPath);\n-            final var filePath = resolveExtensions(ocflSubPath,\n-                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n-            );\n-            objectSession.delete(filePath);\n+            final var headers = (ResourceHeadersImpl) readHeaders(objectSession, ocflSubPath);\n+            final boolean isRdf = !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel());\n+            final var filePath = resolveExtensions(ocflSubPath, isRdf);\n+            deletePath(filePath, objectSession, headers);\n+            if (!isRdf) {\n+                // Delete the description too.\n+                final var descPath = resolveExtensions(ocflSubPath + \"-description\", true);\n+                deletePath(descPath, objectSession);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Simple utility to delete a path's files and mark them as deleted in the headers file.\n+     * @param path Path to delete\n+     * @param session Session to delete the path in.\n+     */\n+    private void deletePath(final String path, final OCFLObjectSession session) throws PersistentStorageException{\n+        // readHeaders and writeHeaders need the subpath where as delete needs the file name. So remove any extensions.\n+        final var no_extension = (path.contains(\".\") ? path.substring(0, path.indexOf(\".\")) : path);\n+        final var headers = (ResourceHeadersImpl) readHeaders(session, no_extension);\n+        deletePath(path, session, headers);\n+    }\n+\n+    /**\n+     * Simple utility to delete a path's files and mark them as deleted in the headers file.\n+     * @param path Path to delete\n+     * @param session Session to delete the path in.\n+     * @param headers The headers for the file.\n+     * @throws PersistentStorageException if can't read, write or delete a file.\n+     */\n+    private void deletePath(final String path, final OCFLObjectSession session, final ResourceHeadersImpl headers)\n+        throws PersistentStorageException {\n+        session.delete(path);\n+        headers.setDeleted(true);\n+        headers.setLastModifiedDate(Instant.now());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37caf788372ac9608dc3dfa95e5145488d13fd9d"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1805, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}