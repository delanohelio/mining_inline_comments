{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjcxMjc2", "number": 1611, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNDozNlrODbAbGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDoyMjoyNlrODbAvQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQ1MDgxOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNDozNlrOFiPzEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozMDo1NVrOFiSJhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NDczOA==", "bodyText": "Should probably have this on two lines rather than going to three, or one line per parameter.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371454738", "createdAt": "2020-01-27T20:04:36Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -436,15 +441,17 @@ public Response createOrReplaceObjectRdf(\n                         .toString(),\n                     model);\n             } else {\n-                createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null, false, links,\n+                fedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2NTM4MA==", "bodyText": "will fix", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371465380", "createdAt": "2020-01-27T20:28:32Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -436,15 +441,17 @@ public Response createOrReplaceObjectRdf(\n                         .toString(),\n                     model);\n             } else {\n-                createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null, false, links,\n+                fedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NDczOA=="}, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MzI1Mw==", "bodyText": "This is fixed.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371493253", "createdAt": "2020-01-27T21:30:55Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -436,15 +441,17 @@ public Response createOrReplaceObjectRdf(\n                         .toString(),\n                     model);\n             } else {\n-                createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null, false, links,\n+                fedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NDczOA=="}, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQ1NjY2OnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNjozNVrOFiP2iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozMTowNlrOFiSJ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NTYyNA==", "bodyText": "While this is important, I think this is only the default content type for rdf sources. For non-rdf sources it should be application/octet-stream I would think?", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371455624", "createdAt": "2020-01-27T20:06:35Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -135,6 +136,7 @@\n     private static final String WANT_DIGEST = \"Want-Digest\";\n \n     private static final String DIGEST = \"Digest\";\n+    public static final MediaType DEFAULT_CONTENT_TYPE = RDFMediaType.TURTLE_TYPE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2NTQ2NQ==", "bodyText": "will fix.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371465465", "createdAt": "2020-01-27T20:28:43Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -135,6 +136,7 @@\n     private static final String WANT_DIGEST = \"Want-Digest\";\n \n     private static final String DIGEST = \"Digest\";\n+    public static final MediaType DEFAULT_CONTENT_TYPE = RDFMediaType.TURTLE_TYPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NTYyNA=="}, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MzMyOQ==", "bodyText": "done", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371493329", "createdAt": "2020-01-27T21:31:06Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -135,6 +136,7 @@\n     private static final String WANT_DIGEST = \"Want-Digest\";\n \n     private static final String DIGEST = \"Digest\";\n+    public static final MediaType DEFAULT_CONTENT_TYPE = RDFMediaType.TURTLE_TYPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NTYyNA=="}, "originalCommit": {"oid": "7701db8c259ddce467325b6c5b87856e57b84daf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjUwMjQzOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDoyMjoyNlrOFiQSLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozMToxMVrOFiSKAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MjcwMA==", "bodyText": "I see you ran into this commit order issue too. I'll just add that it should be commitIfShortLived so that it won't end a multi-transaction commit prematurely. That holds true for all the commit in this class actually.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371462700", "createdAt": "2020-01-27T20:22:26Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -548,41 +555,39 @@ public Response createObject(@HeaderParam(CONTENT_DISPOSITION) final ContentDisp\n             return status(METHOD_NOT_ALLOWED).build();\n         }\n \n+        final var contentType = requestContentType != null ? requestContentType : DEFAULT_CONTENT_TYPE;\n         // If request is an external binary, verify link header before proceeding\n         final ExternalContent extContent = extContentHandlerFactory.createFromLinks(links);\n-\n-        final String contentType = extContent == null ? requestContentType.toString() : extContent.getContentType();\n+        final String contentTypeStr = extContent == null ? contentType.toString() : extContent.getContentType();\n \n         final String interactionModel = checkInteractionModel(links);\n \n         final String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath()));\n-\n         final String newFedoraId;\n-        if (isBinary(interactionModel, requestContentType.toString(), requestContentType != null,\n+\n+        if (isBinary(interactionModel, contentType.toString(), requestContentType != null,\n                 extContent != null)) {\n             final Collection<String> checksums = parseDigestHeader(digest);\n             final String originalFileName = contentDisposition != null ? contentDisposition.getFileName() : \"\";\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    contentType, originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream,\n-                    extContent);\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, contentTypeStr,\n+                    originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream, extContent);\n         } else {\n             final Model model = httpRdfService.bodyToInternalModel(externalPath(), requestBodyStream,\n-                    requestContentType, identifierConverter());\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    links, model);\n+                    contentType, identifierConverter());\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, links,\n+                    model);\n         }\n-        // TODO: How to generate a response.\n-        LOGGER.debug(\"Finished creating resource with path: {}\", externalPath());\n \n-        final FedoraResource resource;\n+        LOGGER.debug(\"Finished creating resource: {}\", newFedoraId);\n+        transaction.commit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8704f56a036d507df91b1762afd7ab00d7a90d19"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2NTMzOA==", "bodyText": "will fix.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371465338", "createdAt": "2020-01-27T20:28:25Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -548,41 +555,39 @@ public Response createObject(@HeaderParam(CONTENT_DISPOSITION) final ContentDisp\n             return status(METHOD_NOT_ALLOWED).build();\n         }\n \n+        final var contentType = requestContentType != null ? requestContentType : DEFAULT_CONTENT_TYPE;\n         // If request is an external binary, verify link header before proceeding\n         final ExternalContent extContent = extContentHandlerFactory.createFromLinks(links);\n-\n-        final String contentType = extContent == null ? requestContentType.toString() : extContent.getContentType();\n+        final String contentTypeStr = extContent == null ? contentType.toString() : extContent.getContentType();\n \n         final String interactionModel = checkInteractionModel(links);\n \n         final String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath()));\n-\n         final String newFedoraId;\n-        if (isBinary(interactionModel, requestContentType.toString(), requestContentType != null,\n+\n+        if (isBinary(interactionModel, contentType.toString(), requestContentType != null,\n                 extContent != null)) {\n             final Collection<String> checksums = parseDigestHeader(digest);\n             final String originalFileName = contentDisposition != null ? contentDisposition.getFileName() : \"\";\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    contentType, originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream,\n-                    extContent);\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, contentTypeStr,\n+                    originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream, extContent);\n         } else {\n             final Model model = httpRdfService.bodyToInternalModel(externalPath(), requestBodyStream,\n-                    requestContentType, identifierConverter());\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    links, model);\n+                    contentType, identifierConverter());\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, links,\n+                    model);\n         }\n-        // TODO: How to generate a response.\n-        LOGGER.debug(\"Finished creating resource with path: {}\", externalPath());\n \n-        final FedoraResource resource;\n+        LOGGER.debug(\"Finished creating resource: {}\", newFedoraId);\n+        transaction.commit();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MjcwMA=="}, "originalCommit": {"oid": "8704f56a036d507df91b1762afd7ab00d7a90d19"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MzM3OA==", "bodyText": "done.", "url": "https://github.com/fcrepo/fcrepo/pull/1611#discussion_r371493378", "createdAt": "2020-01-27T21:31:11Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -548,41 +555,39 @@ public Response createObject(@HeaderParam(CONTENT_DISPOSITION) final ContentDisp\n             return status(METHOD_NOT_ALLOWED).build();\n         }\n \n+        final var contentType = requestContentType != null ? requestContentType : DEFAULT_CONTENT_TYPE;\n         // If request is an external binary, verify link header before proceeding\n         final ExternalContent extContent = extContentHandlerFactory.createFromLinks(links);\n-\n-        final String contentType = extContent == null ? requestContentType.toString() : extContent.getContentType();\n+        final String contentTypeStr = extContent == null ? contentType.toString() : extContent.getContentType();\n \n         final String interactionModel = checkInteractionModel(links);\n \n         final String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath()));\n-\n         final String newFedoraId;\n-        if (isBinary(interactionModel, requestContentType.toString(), requestContentType != null,\n+\n+        if (isBinary(interactionModel, contentType.toString(), requestContentType != null,\n                 extContent != null)) {\n             final Collection<String> checksums = parseDigestHeader(digest);\n             final String originalFileName = contentDisposition != null ? contentDisposition.getFileName() : \"\";\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    contentType, originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream,\n-                    extContent);\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, contentTypeStr,\n+                    originalFileName, contentDisposition.getSize(), links, checksums, requestBodyStream, extContent);\n         } else {\n             final Model model = httpRdfService.bodyToInternalModel(externalPath(), requestBodyStream,\n-                    requestContentType, identifierConverter());\n-            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug, true,\n-                    links, model);\n+                    contentType, identifierConverter());\n+            newFedoraId = createResourceService.perform(transaction.getId(), getUserPrincipal(), fedoraId, slug,\n+                    true, links,\n+                    model);\n         }\n-        // TODO: How to generate a response.\n-        LOGGER.debug(\"Finished creating resource with path: {}\", externalPath());\n \n-        final FedoraResource resource;\n+        LOGGER.debug(\"Finished creating resource: {}\", newFedoraId);\n+        transaction.commit();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MjcwMA=="}, "originalCommit": {"oid": "8704f56a036d507df91b1762afd7ab00d7a90d19"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1919, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}