{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjYyODE3", "number": 1681, "title": "Fix WebAC and enable integration tests", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3294\nWhat does this Pull Request do?\nFixes WebAC to use new ResourceFactory and HttpIdentifierConverter to load resources and find ACLs to check permissions.\nHow should this be tested?\n\nTry creating a resource as admin.\ncurl -ufedoraAdmin:fedoraAdmin -i -H\"Slug: box\" -XPOST http://localhost:8080/rest\n\n\nAdd an ACL (box_acl.ttl)\n @prefix acl: <http://www.w3.org/ns/auth/acl#> .\n\n<#authorization> a acl:Authorization ;\n   acl:agent \"testuser\" ;\n   acl:mode acl:Read, acl:Write ;\n   acl:default </rest/box> ;\n   acl:accessTo </rest/box> .\n\n(edited to add acl:default to enforce on descendants)\ncurl -ufedoraAdmin:fedoraAdmin -i -XPUT -H\"Content-type: text/turtle\" --data \"@box_acl.ttl\" http://localhost:8080/rest/box/fcr:acl\n\n\nTry to access as testuser\ncurl -utestuser:testpass -i http://localhost:8080/rest/box\n\nHTTP/1.1 200 OK\n\n\nTry to update as testuser\ncurl -utestuser:testpass -i -XPATCH -H\"Content-type: application/sparql-update\" --data \"prefix dc: <http://purl.org/dc/elements/1.1/> INSERT { <> dc:title \\\"My title\\\" } WHERE {}\" http://localhost:8080/rest/box\n\nHTTP/1.1 204 No Content\n\n\nTry to access as testuser2\n curl -utestuser2:testpass -i http://localhost:8080/rest/box\n\n HTTP/1.1 403 Forbidden\n\n\n\nThere are a couple of integration tests not enabled, they have been labelled with the JIRA tickets (I think are) required to get them working.\nInterested parties\n@fcrepo4/committers", "createdAt": "2020-05-10T03:31:13Z", "url": "https://github.com/fcrepo/fcrepo/pull/1681", "merged": true, "mergeCommit": {"oid": "613924264a8b57c1d16d7cb454ad147d32d65fa8"}, "closed": true, "closedAt": "2020-05-22T18:12:28Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfxg8cAH2gAyNDE1NjYyODE3OjhkZTFlZTVkMDNjZmYxZmMzMDdiZjdjZGMyMTBhM2ZkMTJhOGQyZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjKyvJAH2gAyNDE1NjYyODE3OmZiMjBiODg4YWNhMjgyMTdhMTE3ODY0M2NlZDdkZmVkNjM5OTA2MWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8de1ee5d03cff1fc307bf7cdc210a3fd12a8d2f1", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/8de1ee5d03cff1fc307bf7cdc210a3fd12a8d2f1", "committedDate": "2020-05-10T02:19:04Z", "message": "Fix up WebACFilter and associated auth stuff."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/595f42dbd1ed68ef222c392d813c6a91f23f8a3b", "committedDate": "2020-05-10T02:51:48Z", "message": "Fix auth-common test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjY3NzQz", "url": "https://github.com/fcrepo/fcrepo/pull/1681#pullrequestreview-409267743", "createdAt": "2020-05-11T15:12:33Z", "commit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxMjozM1rOGTgv_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozNDowOFrOGThsuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMjcwMw==", "bodyText": "It seems odd to me that a ResourceFactory would be used for looking up a container id. I see that when this method is actually used, you're still ultimately loading the container FedoraResource. Can this method be FedoraResource getContainer(final Transaction transaction, final FedoraId resourceId) instead?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r423112703", "createdAt": "2020-05-11T15:12:33Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/ResourceFactory.java", "diffHunk": "@@ -82,4 +82,12 @@ public FedoraResource getResource(final Transaction transaction, final FedoraId\n      * @return True if the identifier resolves to a resource.\n      */\n     public boolean doesResourceExist(final Transaction transaction, final FedoraId fedoraId);\n+\n+    /**\n+     * Get the containing resource ID (if exists).\n+     * @param transaction The current transaction or null if read-only.\n+     * @param resourceId The internal identifer\n+     * @return The string id of the containing resource or null if none.\n+     */\n+    public String getContainerId(final Transaction transaction, final FedoraId resourceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExMzg0NA==", "bodyText": "Will resolve not prepend a slash as necessary? This is the expectation with Java's Path::resolve().", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r423113844", "createdAt": "2020-05-11T15:14:04Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -174,8 +178,15 @@ public FedoraResource findMementoByDatetime(final Instant mementoDatetime) {\n \n     @Override\n     public FedoraResource getAcl() {\n-        // TODO Auto-generated method stub\n-        return null;\n+        if (isAcl()) {\n+            return this;\n+        }\n+        try {\n+            final var aclId = fedoraID.resolve(\"/\" + FCR_ACL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMzA3NQ==", "bodyText": "Isn't there code somewhere else that also walks up id containment like this? Perhaps related to looking for AGs? It seems like it might be a useful thing to have extracted somewhere. What if FedoraId itself had a method for creating a new FedoraId of its parent?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r423123075", "createdAt": "2020-05-11T15:26:56Z", "author": {"login": "pwinckles"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACAuthorizingRealm.java", "diffHunk": "@@ -230,24 +230,26 @@ public boolean supports(final AuthenticationToken token) {\n         return false;\n     }\n \n-    private FedoraResource getResourceOrParentFromPath(final String path) {\n+    private FedoraResource getResourceOrParentFromPath(final FedoraId fedoraId) {\n         FedoraResource resource = null;\n-        log.debug(\"Attempting to get FedoraResource for {}\", path);\n+        log.debug(\"Attempting to get FedoraResource for {}\", fedoraId.getFullIdPath());\n         try {\n-            resource = translator().convert(translator().toDomain(path));\n-            log.debug(\"Got FedoraResource for {}\", path);\n-        } catch (final RepositoryRuntimeException e) {\n-            if (e.getCause() instanceof PathNotFoundRuntimeException) {\n-                log.debug(\"Path {} does not exist\", path);\n-                // go up the path looking for a node that exists\n-                if (path.length() > 1) {\n-                    final int lastSlash = path.lastIndexOf(\"/\");\n-                    final int end = lastSlash > 0 ? lastSlash : lastSlash + 1;\n-                    resource = getResourceOrParentFromPath(path.substring(0, end));\n-                }\n+            resource = resource(fedoraId);\n+            log.debug(\"Got FedoraResource for {}\", fedoraId.getFullIdPath());\n+        } catch (final PathNotFoundException e) {\n+            log.debug(\"Path {} does not exist\", fedoraId.getFullIdPath());\n+            // go up the path looking for a node that exists\n+            if (fedoraId.getFullId().length() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyODI1MQ==", "bodyText": "Out of curiosity, why implement this as a predicate rather than a simple private method?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r423128251", "createdAt": "2020-05-11T15:34:08Z", "author": {"login": "pwinckles"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -134,20 +136,14 @@ public String toString() {\n     @Inject\n     private TransactionManager transactionManager;\n \n-    private static Set<URI> directOrIndirect = new HashSet<>();\n-\n-    private static Set<String> rdfContentTypes = new HashSet<>();\n+    private static Set<URI> directOrIndirect = Set.of(INDIRECT_CONTAINER, DIRECT_CONTAINER).stream()\n+            .map(Resource::toString).map(URI::create).collect(Collectors.toSet());\n \n-    static {\n-        directOrIndirect.add(URI.create(INDIRECT_CONTAINER.toString()));\n-        directOrIndirect.add(URI.create(DIRECT_CONTAINER.toString()));\n+    private static Set<String> rdfContentTypes = Set.of(contentTypeTurtle, contentTypeJSONLD, contentTypeN3,\n+            contentTypeRDFXML, contentTypeNTriples);\n \n-        rdfContentTypes.add(contentTypeTurtle);\n-        rdfContentTypes.add(contentTypeJSONLD);\n-        rdfContentTypes.add(contentTypeN3);\n-        rdfContentTypes.add(contentTypeRDFXML);\n-        rdfContentTypes.add(contentTypeNTriples);\n-    }\n+    private static Predicate<FedoraResource> isBinaryOrDescription = r -> r.getTypes().stream().map(URI::toString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "595f42dbd1ed68ef222c392d813c6a91f23f8a3b"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f", "committedDate": "2020-05-12T01:45:21Z", "message": "Code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5OTk5MDY5", "url": "https://github.com/fcrepo/fcrepo/pull/1681#pullrequestreview-409999069", "createdAt": "2020-05-12T12:41:36Z", "commit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo0MTozNlrOGUEo-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo0MTozNlrOGUEo-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwMDczMQ==", "bodyText": "Not something that should be addressed here, but I've seen this transaction code everywhere. Perhaps it would be cleaner if transaction() returned Optional<Transaction>?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r423700731", "createdAt": "2020-05-12T12:41:36Z", "author": {"login": "pwinckles"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACAuthorizingRealm.java", "diffHunk": "@@ -231,25 +235,22 @@ public boolean supports(final AuthenticationToken token) {\n     }\n \n     private FedoraResource getResourceOrParentFromPath(final FedoraId fedoraId) {\n-        FedoraResource resource = null;\n-        log.debug(\"Attempting to get FedoraResource for {}\", fedoraId.getFullIdPath());\n         try {\n-            resource = resource(fedoraId);\n-            log.debug(\"Got FedoraResource for {}\", fedoraId.getFullIdPath());\n-        } catch (final PathNotFoundException e) {\n-            log.debug(\"Path {} does not exist\", fedoraId.getFullIdPath());\n-            // go up the path looking for a node that exists\n-            if (fedoraId.getFullId().length() > 1) {\n-                final int lastSlash = fedoraId.getFullId().lastIndexOf(\"/\");\n-                final int end = lastSlash > 0 ? lastSlash : lastSlash + 1;\n-                resource = getResourceOrParentFromPath(FedoraId.create(fedoraId.getFullId().substring(0, end)));\n+            log.debug(\"Testing FedoraResource for {}\", fedoraId.getFullIdPath());\n+            return this.resourceFactory.getResource(transaction(), fedoraId);\n+        } catch (final PathNotFoundException exc) {\n+            log.debug(\"Resource {} not found getting container\", fedoraId.getFullIdPath());\n+            final String txID = transaction() == null ? null : transaction().getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjY5NzM3", "url": "https://github.com/fcrepo/fcrepo/pull/1681#pullrequestreview-412269737", "createdAt": "2020-05-15T00:22:57Z", "commit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoyMjo1N1rOGVydFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoyMjo1N1rOGVydFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5OTkyNQ==", "bodyText": "Thank you.", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425499925", "createdAt": "2020-05-15T00:22:57Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-common/src/test/resources/web.xml", "diffHunk": "@@ -5,7 +5,7 @@\n \t xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n \t version=\"3.0\" metadata-complete=\"false\">\n     \n-    <display-name>Fedora-on-ModeShape</display-name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjcwMzc0", "url": "https://github.com/fcrepo/fcrepo/pull/1681#pullrequestreview-412270374", "createdAt": "2020-05-15T00:24:58Z", "commit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDoyNDo1OFrOGVyfHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo1MjoyOVrOGWKfIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMDQ0Ng==", "bodyText": "Probably should use ${project.version}.", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425500446", "createdAt": "2020-05-15T00:24:58Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/pom.xml", "diffHunk": "@@ -53,6 +53,18 @@\n       <version>6.0.0-SNAPSHOT</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.fcrepo</groupId>\n+      <artifactId>fcrepo-http-api</artifactId>\n+      <version>6.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMDQ4OQ==", "bodyText": "Probably should use ${project.version}", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425500489", "createdAt": "2020-05-15T00:25:05Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/pom.xml", "diffHunk": "@@ -53,6 +53,18 @@\n       <version>6.0.0-SNAPSHOT</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.fcrepo</groupId>\n+      <artifactId>fcrepo-http-api</artifactId>\n+      <version>6.0.0-SNAPSHOT</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.fcrepo</groupId>\n+      <artifactId>fcrepo-persistence-api</artifactId>\n+      <version>6.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMDU5OQ==", "bodyText": "Probably should use ${project.version}", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425500599", "createdAt": "2020-05-15T00:25:21Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-common/pom.xml", "diffHunk": "@@ -94,6 +94,23 @@\n       <scope>test</scope>\n       <type>test-jar</type>\n     </dependency>\n+    <dependency>\n+      <groupId>org.fcrepo</groupId>\n+      <artifactId>fcrepo-kernel-impl</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.fcrepo</groupId>\n+      <artifactId>fcrepo-persistence-ocfl</artifactId>\n+      <version>6.0.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwMjQ3OA==", "bodyText": "Since this class (URIConstants) heretonow contains... constants, I wonder if there is a more suitable utility class in which this method to live.", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425502478", "createdAt": "2020-05-15T00:31:55Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/URIConstants.java", "diffHunk": "@@ -155,6 +160,20 @@\n      */\n     public static final String VCARD_MEMBER_VALUE = VCARD_NAMESPACE_VALUE + \"hasMember\";\n \n+    public static HttpIdentifierConverter identifierConverter(final HttpServletRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUwNTYyNQ==", "bodyText": "Normally, when a variable is named iterator, it is of type Iterator. Could you rename this to something that avoids this confusion... maybe fullId?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425505625", "createdAt": "2020-05-15T00:43:29Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -407,6 +408,30 @@ public boolean resourceExists(final String txID, final FedoraId fedoraID) {\n         return exists;\n     }\n \n+    @Override\n+    public FedoraId getContainerIdByPath(final String txID, final FedoraId fedoraId) {\n+        if (fedoraId.isRepositoryRoot()) {\n+            // If we are root then we are the top.\n+            return fedoraId;\n+        }\n+        final String parent = getContainedBy(txID, fedoraId);\n+        if (parent != null) {\n+            return FedoraId.create(parent);\n+        }\n+        String idIterator = fedoraId.getFullId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxOTY5NA==", "bodyText": "Should we take this opportunity to name this method more accurately? ..something like: getInternalId() or getFedoraId()?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425819694", "createdAt": "2020-05-15T13:56:52Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -264,29 +242,21 @@ private FedoraResource resource(final HttpServletRequest servletRequest) {\n         return resource(servletRequest, getRepoPath(servletRequest));\n     }\n \n-    private FedoraResource resource(final HttpServletRequest servletRequest, final String path) {\n+    private FedoraResource resource(final HttpServletRequest servletRequest, final FedoraId resourceId) {\n         try {\n-            return this.resourceFactory.getResource(transaction(servletRequest), FedoraId.create(path));\n-        } catch (PathNotFoundException e) {\n+            return this.resourceFactory.getResource(transaction(servletRequest), resourceId);\n+        } catch (final PathNotFoundException e) {\n             return null;\n         }\n     }\n \n-    private IdentifierConverter<Resource, FedoraResource> translator(final HttpServletRequest servletRequest) {\n-        final UriBuilder uriBuilder = UriBuilder.fromUri(getBaseURL(servletRequest)).path(FedoraLdp.class);\n-        return new HttpResourceConverter(transaction(servletRequest), uriBuilder);\n-    }\n-\n-    private String getRepoPath(final HttpServletRequest servletRequest) {\n+    private FedoraId getRepoPath(final HttpServletRequest servletRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxOTc2OA==", "bodyText": "Should we take this opportunity to name this method more accurately? ..something like: getInternalId() or getFedoraId()?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425819768", "createdAt": "2020-05-15T13:56:58Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -264,29 +242,21 @@ private FedoraResource resource(final HttpServletRequest servletRequest) {\n         return resource(servletRequest, getRepoPath(servletRequest));\n     }\n \n-    private FedoraResource resource(final HttpServletRequest servletRequest, final String path) {\n+    private FedoraResource resource(final HttpServletRequest servletRequest, final FedoraId resourceId) {\n         try {\n-            return this.resourceFactory.getResource(transaction(servletRequest), FedoraId.create(path));\n-        } catch (PathNotFoundException e) {\n+            return this.resourceFactory.getResource(transaction(servletRequest), resourceId);\n+        } catch (final PathNotFoundException e) {\n             return null;\n         }\n     }\n \n-    private IdentifierConverter<Resource, FedoraResource> translator(final HttpServletRequest servletRequest) {\n-        final UriBuilder uriBuilder = UriBuilder.fromUri(getBaseURL(servletRequest)).path(FedoraLdp.class);\n-        return new HttpResourceConverter(transaction(servletRequest), uriBuilder);\n-    }\n-\n-    private String getRepoPath(final HttpServletRequest servletRequest) {\n+    private FedoraId getRepoPath(final HttpServletRequest servletRequest) {\n         final String httpURI = servletRequest.getRequestURL().toString();\n         return getRepoPath(servletRequest, httpURI);\n     }\n \n-    private String getRepoPath(final HttpServletRequest servletRequest, final String httpURI) {\n-        final Resource resource = ModelFactory.createDefaultModel().createResource(httpURI);\n-        final String repoPath = translator(servletRequest).asString(resource);\n-        log.debug(\"Converted request URI {} to repo path {}\", httpURI, repoPath);\n-        return repoPath;\n+    private FedoraId getRepoPath(final HttpServletRequest request, final String httpURI) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg4Mzc3NA==", "bodyText": "Are we no longer supporting requests to hash resources?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425883774", "createdAt": "2020-05-15T15:35:41Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -705,28 +711,11 @@ public void testAccessToBinary() throws IOException {\n         assertEquals(HttpStatus.SC_OK, getStatus(requestGet2));\n     }\n \n+    @Ignore(\"Access to class - FCREPO-3279\")\n     @Test\n-    @Ignore(\"FAILING\")\n-    public void testAccessToHashResource() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5Mjg1MQ==", "bodyText": "Is it possible that there are multiple / characters? If so, maybe \"while (realpath.startsWith(\"/\"))\"?", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425892851", "createdAt": "2020-05-15T15:51:07Z", "author": {"login": "awoods"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/api/rdf/HttpIdentifierConverter.java", "diffHunk": "@@ -221,4 +223,24 @@ private boolean isRootWithoutTrailingSlash(final String httpUri) {\n             values.get(\"path\").isEmpty();\n     }\n \n+    /**\n+     * Takes internal URIs starting with info:/rest and makes full URLs to convert. These URIs come when RDF contains\n+     * a URI like </rest/someResource>. This gets converted to info:/rest/someResource as it is a URI but with no\n+     * scheme.\n+     * @param httpUri the partial URI\n+     * @return the path part of the url\n+     */\n+    private String mapInternalRestUri(final String httpUri) {\n+        // This uri started with </rest...> and is an internal URI.\n+        if (httpUri.startsWith(\"info:/rest\")) {\n+            String realpath = httpUri.substring(10);\n+            if (realpath.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5MzY2Nw==", "bodyText": "To avoid the \"magic number\" question, may change to:\n... = httpUri.substring(\"info:/rest\".length());", "url": "https://github.com/fcrepo/fcrepo/pull/1681#discussion_r425893667", "createdAt": "2020-05-15T15:52:29Z", "author": {"login": "awoods"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/api/rdf/HttpIdentifierConverter.java", "diffHunk": "@@ -221,4 +223,24 @@ private boolean isRootWithoutTrailingSlash(final String httpUri) {\n             values.get(\"path\").isEmpty();\n     }\n \n+    /**\n+     * Takes internal URIs starting with info:/rest and makes full URLs to convert. These URIs come when RDF contains\n+     * a URI like </rest/someResource>. This gets converted to info:/rest/someResource as it is a URI but with no\n+     * scheme.\n+     * @param httpUri the partial URI\n+     * @return the path part of the url\n+     */\n+    private String mapInternalRestUri(final String httpUri) {\n+        // This uri started with </rest...> and is an internal URI.\n+        if (httpUri.startsWith(\"info:/rest\")) {\n+            String realpath = httpUri.substring(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyODgwNDcz", "url": "https://github.com/fcrepo/fcrepo/pull/1681#pullrequestreview-412880473", "createdAt": "2020-05-15T18:37:40Z", "commit": {"oid": "d1cd003bd502c8b63b4b2fdeb05bb8ab9562134f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ede968620c0c73fe8f7495f4276498b3798c8d5a", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/ede968620c0c73fe8f7495f4276498b3798c8d5a", "committedDate": "2020-05-20T15:23:42Z", "message": "Code review and new test for issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb20b888aca28217a1178643ced7dfed6399061b", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/fb20b888aca28217a1178643ced7dfed6399061b", "committedDate": "2020-05-20T15:27:54Z", "message": "fix pom in auth common"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3121, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}