{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjE0NDk0", "number": 1647, "title": "Implement containment triples service", "bodyText": "and wire index into Create/Delete services.\nJIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3164\nWhat does this Pull Request do?\nCreates a Containment Triples service to get the containment.\nWires the containment index into the CreateResourceService and DeleteResourceService to add/remove relationships.\nAlters the ContainmentIndex API to add some necessary methods and moves some from using Transaction and FedoraResource to using their String ids.\nHow should this be tested?\n\nStart it up and add a new resource\nCheck root to see the ldp:contains triple\nTry adding children using compound Slugs (ie. Slug: A then Slug: A/B)\nTry deleting children and see that the containment triple disappears from the parent.\n\nInterested parties\n@fcrepo4/committers @pwinckles", "createdAt": "2020-03-18T19:06:50Z", "url": "https://github.com/fcrepo/fcrepo/pull/1647", "merged": true, "mergeCommit": {"oid": "68578d34266c9dfab3d910976affcdf5d7dfe659"}, "closed": true, "closedAt": "2020-03-20T15:08:33Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO793uAH2gAyMzkwNjE0NDk0OmY5MmQ5ZjhmOTQxMWU5YjQ3NWNiZTg4ZDM1N2M4NzFiMDE0MWQyNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPh8hPgFqTM3ODU2NTQzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/f92d9f8f9411e9b475cbe88d357c871b0141d24a", "committedDate": "2020-03-18T18:53:00Z", "message": "Implement containment triples service and wire index into Create/Delete services."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDIzNTc2", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-377423576", "createdAt": "2020-03-19T04:53:52Z", "commit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3Njg3MjQy", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-377687242", "createdAt": "2020-03-19T12:50:32Z", "commit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMjo1MDozM1rOF4s8_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzowNzo0MVrOF4tjEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMTA4NQ==", "bodyText": "ensurePrefix() doesn't need to be called three times here and on L149-L152, does it?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395001085", "createdAt": "2020-03-19T12:50:33Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -81,14 +82,20 @@ public String perform(final String txId, final String userPrincipal, final Strin\n                         final boolean isContained, final String contentType, final String filename,\n                         final Long contentSize, final List<String> linkHeaders, final Collection<URI> digest,\n                         final InputStream requestBody, final ExternalContent externalContent) {\n+        final String[] parts = splitSlug(txId, ensurePrefix(fedoraId), slug);\n+        // If we found an existing resource in the Slug, then that is our parent.\n+        final String normalizedFedoraId = (parts[0] != null) ? addToIdentifier(ensurePrefix(fedoraId), parts[0]) :\n+                    ensurePrefix(fedoraId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwNDE5NA==", "bodyText": "This is similar logic to the AbstractService.findExistingAncestor(), yeah?\nThis is just a comment, and should definitely not be addressed in this PR, but the code base just keeps piling up more and more code that manipulates fedora ids as strings (checking prefixes, splitting on /, checking suffixes, etc). Ideally, all of this code would go away, and there would just be a single object that represents a fedora resource id. Then, if you needed to iterate its parts for some reason, you could just ask it for an iterator. And there would no longer be a need for the constant verification of what state the string is in. Does it have a prefix? Does it have a suffix? Does it have a trailing slash?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395004194", "createdAt": "2020-03-19T12:56:19Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -253,4 +260,37 @@ private String getResourcePath(final PersistentStorageSession pSession, final St\n     private List<Link> getLinkHeaders(final List<String> headers) {\n         return headers == null ? null : headers.stream().map(p -> Link.valueOf(p)).collect(Collectors.toList());\n     }\n+\n+    /**\n+     * Add this pairing to the containment index.\n+     * @param txId The transaction ID or null if no transaction.\n+     * @param parentId The parent ID or null if repository root.\n+     * @param id The child ID.\n+     */\n+    private void addToContainmentIndex(final String txId, final String parentId, final String id) {\n+        containmentIndex.addContainedBy(txId, ensurePrefix(parentId), ensurePrefix(id));\n+    }\n+\n+    /**\n+     * If the Slug has a forward slash then check that part of it is not an existing resource.\n+     * @param txID The current transaction id.\n+     * @param parent The fedora ID passed in with the slug.\n+     * @param slug The slug.\n+     * @return Array with the parent and slug.\n+     */\n+    private String[] splitSlug(final String txID, final String parent, final String slug) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAxMDgzNQ==", "bodyText": "Isn't this removing the resource from the actual containment index, rather than staging it to be removed with the transaction is committed? Is this what we want?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395010835", "createdAt": "2020-03-19T13:07:41Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -278,24 +313,55 @@ public void removeContainedBy(final Transaction tx, final FedoraResource parent,\n         }\n     }\n \n+    @Override\n+    public void removeResource(final String txID, final String resourceID) {\n+        final MapSqlParameterSource parameterSource = new MapSqlParameterSource();\n+        parameterSource.addValue(\"child\", resourceID);\n+        if (txID != null) {\n+            parameterSource.addValue(\"transactionId\", txID);\n+            final boolean addedInTxn = !jdbcTemplate.queryForList(IS_CHILD_ADDED_IN_TRANSACTION_NO_PARENT,\n+                    parameterSource).isEmpty();\n+            if (addedInTxn) {\n+                jdbcTemplate.update(UNDO_INSERT_CHILD_IN_TRANSACTION_NO_PARENT, parameterSource);\n+            } else {\n+                final String parent = getContainedBy(txID, resourceID);\n+                if (parent != null) {\n+                    LOGGER.debug(\"Removing containment relationship between parent ({}) and child ({})\", parent,\n+                            resourceID);\n+                    parameterSource.addValue(\"parent\", parent);\n+                    jdbcTemplate.update(DELETE_CHILD_IN_TRANSACTION, parameterSource);\n+                }\n+            }\n+        } else {\n+            jdbcTemplate.update(DELETE_ALL_RESOURCE, parameterSource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 164}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTI2OTQ0", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-377926944", "createdAt": "2020-03-19T17:12:06Z", "commit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxMjowNlrOF44VHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxMjowNlrOF44VHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NzQ4Nw==", "bodyText": "Can probably remove this file from the pull-request.", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395187487", "createdAt": "2020-03-19T17:12:06Z", "author": {"login": "awoods"}, "path": "fcrepo-webapp/src/main/resources/spring/fcrepo-config.xml", "diffHunk": "@@ -233,4 +233,4 @@\n         <property name=\"url\" value=\"jdbc:h2:mem:index;DB_CLOSE_DELAY=-1\" />\n     </bean>\n \n-</beans>\n\\ No newline at end of file\n+</beans>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82668e2b057b8fc1a92343109cb49f7c1f431db0", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/82668e2b057b8fc1a92343109cb49f7c1f431db0", "committedDate": "2020-03-19T20:03:19Z", "message": "Expand column sizes, clean up slug handling and ancestor searching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab3fe8dde1737c3e76fb742cae7e5f2b0a1a24d8", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/ab3fe8dde1737c3e76fb742cae7e5f2b0a1a24d8", "committedDate": "2020-03-19T20:05:18Z", "message": "Remove addition of newline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MDYyMjMw", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-378062230", "createdAt": "2020-03-19T20:17:46Z", "commit": {"oid": "ab3fe8dde1737c3e76fb742cae7e5f2b0a1a24d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTI5MDk1", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-377929095", "createdAt": "2020-03-19T17:14:37Z", "commit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoxNDozN1rOF44btw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjoyNzo1OVrOF5Ch0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4OTE3NQ==", "bodyText": "@param resource The fedora container resource in which children resources are contained", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395189175", "createdAt": "2020-03-19T17:14:37Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/services/ContainmentTriplesService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.api.services;\n+\n+import java.util.stream.Stream;\n+\n+import org.apache.jena.graph.Triple;\n+import org.fcrepo.kernel.api.Transaction;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+\n+/**\n+ * Provides containment triples.\n+ *\n+ * @author whikloj\n+ * @since 6.0.0\n+ */\n+public interface ContainmentTriplesService {\n+\n+    /**\n+     * Retrieve the containment triples.\n+     *\n+     * @param tx The transaction or null if none.\n+     * @param resource The fedora resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NjA5Mw==", "bodyText": "No change requested here, but I have created the following JIRA: https://jira.lyrasis.org/browse/FCREPO-3254", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395196093", "createdAt": "2020-03-19T17:25:01Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -36,25 +36,31 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContainedBy(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(Transaction tx, FedoraResource fedoraResource);\n+\n+    /**\n+     * Return the ID of the containing resource for resourceID.\n+     * @param txID The transaction. If no transaction, null is okay.\n+     * @param resourceID The resource to find the containing resource.\n+     * @return The id of the containing resource or null if none found.\n+     */\n+    String getContainedBy(String txID, final String resourceID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzgxNQ==", "bodyText": "Is there any risk that this method would be called with an external ID (http://localhost...)?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395197815", "createdAt": "2020-03-19T17:27:34Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/functions/FedoraIdUtils.java", "diffHunk": "@@ -36,6 +38,18 @@ public static String addToIdentifier(final String oldId, final String newIdPart)\n         return oldId + (oldId.endsWith(\"/\") ? \"\" : \"/\") + newIdPart;\n     }\n \n+    /**\n+     * Ensure the ID has the info:fedora/ prefix.\n+     * @param id the identifier, if null assume repository root (info:fedora/)\n+     * @return the identifier with the info:fedora/ prefix.\n+     */\n+    public static String ensurePrefix(final String id) {\n+        if (id == null) {\n+            return FEDORA_ID_PREFIX;\n+        }\n+        return id.startsWith(FEDORA_ID_PREFIX) ? id : FEDORA_ID_PREFIX + id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwMTUxNA==", "bodyText": "Can we remove testParent and just use idIterator in lines 123 and 124 below?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395201514", "createdAt": "2020-03-19T17:33:00Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/AbstractService.java", "diffHunk": "@@ -102,14 +107,22 @@ protected String determineInteractionModel(final List<String> linkTypes,\n \n     /**\n      * Find the closest ancestor using a Fedora ID.\n+     * @param txID The current transaction or null if none.\n      * @param fedoraId The fedora ID to check\n      * @return The ancestor ID or null if root\n      */\n-    protected String findExistingAncestor(final String fedoraId) {\n-        // Remove the ID prefix as it can include a /\n-        final String removePrefix = fedoraId.substring(FEDORA_ID_PREFIX.length());\n-        if (removePrefix.contains(\"/\")) {\n-            return FEDORA_ID_PREFIX + removePrefix.substring(0, removePrefix.lastIndexOf(\"/\"));\n+    protected String findExistingAncestor(final String txID, final String fedoraId) {\n+        final String parent = containmentIndex.getContainedBy(txID, fedoraId);\n+        if (parent != null) {\n+            return parent;\n+        }\n+        String idIterator = fedoraId;\n+        while (idIterator.contains(\"/\")) {\n+            final String testParent = fedoraId.substring(0, idIterator.lastIndexOf(\"/\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwNjM3Ng==", "bodyText": "Can we remove testParent and just use slugIterator in lines 287 and 288 below?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395206376", "createdAt": "2020-03-19T17:40:25Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -253,4 +260,37 @@ private String getResourcePath(final PersistentStorageSession pSession, final St\n     private List<Link> getLinkHeaders(final List<String> headers) {\n         return headers == null ? null : headers.stream().map(p -> Link.valueOf(p)).collect(Collectors.toList());\n     }\n+\n+    /**\n+     * Add this pairing to the containment index.\n+     * @param txId The transaction ID or null if no transaction.\n+     * @param parentId The parent ID or null if repository root.\n+     * @param id The child ID.\n+     */\n+    private void addToContainmentIndex(final String txId, final String parentId, final String id) {\n+        containmentIndex.addContainedBy(txId, ensurePrefix(parentId), ensurePrefix(id));\n+    }\n+\n+    /**\n+     * If the Slug has a forward slash then check that part of it is not an existing resource.\n+     * @param txID The current transaction id.\n+     * @param parent The fedora ID passed in with the slug.\n+     * @param slug The slug.\n+     * @return Array with the parent and slug.\n+     */\n+    private String[] splitSlug(final String txID, final String parent, final String slug) {\n+        if (slug != null && slug.contains(\"/\")) {\n+            String slugIterator = slug;\n+            while (slugIterator.contains(\"/\")) {\n+                final String testParent = slug.substring(0, slugIterator.lastIndexOf(\"/\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwODU1MQ==", "bodyText": "Can we change the variable name from normalizedFedoraId? ..maybe something like closestAncestorFedoraId?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395208551", "createdAt": "2020-03-19T17:43:41Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -81,14 +82,20 @@ public String perform(final String txId, final String userPrincipal, final Strin\n                         final boolean isContained, final String contentType, final String filename,\n                         final Long contentSize, final List<String> linkHeaders, final Collection<URI> digest,\n                         final InputStream requestBody, final ExternalContent externalContent) {\n+        final String[] parts = splitSlug(txId, ensurePrefix(fedoraId), slug);\n+        // If we found an existing resource in the Slug, then that is our parent.\n+        final String normalizedFedoraId = (parts[0] != null) ? addToIdentifier(ensurePrefix(fedoraId), parts[0]) :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwODc1Nw==", "bodyText": "Can we change the variable name from normalizedFedoraId? ..maybe something like closestAncestorFedoraId?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395208757", "createdAt": "2020-03-19T17:44:00Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -138,13 +146,19 @@ private String createDescription(final PersistentStorageSession pSession, final\n     @Override\n     public String perform(final String txId, final String userPrincipal, final String fedoraId, final String slug,\n             final boolean isContained, final List<String> linkHeaders, final Model model) {\n+        final String[] parts = splitSlug(txId, ensurePrefix(fedoraId), slug);\n+        // If we found an existing resource in the Slug, then that is our parent.\n+        final String normalizedFedoraId = (parts[0] != null) ? addToIdentifier(ensurePrefix(fedoraId), parts[0]) :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyMTMxNw==", "bodyText": "As a meta-comment, mixing PUT and POST in this method makes for convoluted logic. I would suggest that we split out the two scenarios... as a follow-on ticket.", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395221317", "createdAt": "2020-03-19T18:04:36Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -81,14 +82,20 @@ public String perform(final String txId, final String userPrincipal, final Strin\n                         final boolean isContained, final String contentType, final String filename,\n                         final Long contentSize, final List<String> linkHeaders, final Collection<URI> digest,\n                         final InputStream requestBody, final ExternalContent externalContent) {\n+        final String[] parts = splitSlug(txId, ensurePrefix(fedoraId), slug);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4MzUxMQ==", "bodyText": "Does the order matter here? For example, if the deletion takes place before the addition?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395283511", "createdAt": "2020-03-19T19:55:21Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -224,19 +247,32 @@ private NamedParameterJdbcTemplate getNamedParameterJdbcTemplate() {\n             // not in a transaction\n             children = jdbcTemplate.queryForList(SELECT_CHILDREN, parameterSource, String.class);\n         }\n+        LOGGER.debug(\"getChildren for {} in transaction {} found {} children\", fedoraId, transactionId,\n+                children.size());\n         return children.stream();\n     }\n \n     @Override\n-    public Stream<String> getContainedBy(final Transaction tx, final FedoraResource fedoraResource) {\n+    public Stream<String> getContains(final Transaction tx, final FedoraResource fedoraResource) {\n         final String txId = (tx != null) ? tx.getId() : null;\n         return getChildren(fedoraResource.getId(), txId);\n     }\n \n     @Override\n-    public void addContainedBy(final Transaction tx, final FedoraResource parent, final FedoraResource child) {\n-        final String txID = tx != null ? tx.getId() : null;\n-        addContainedBy(txID, parent.getId(), child.getId());\n+    public String getContainedBy(final String txID, final String resourceID) {\n+        final MapSqlParameterSource parameterSource = new MapSqlParameterSource();\n+        parameterSource.addValue(\"child\", resourceID);\n+        final List<String> parentID;\n+        if (txID != null) {\n+            parameterSource.addValue(\"transactionId\", txID);\n+            final String currentResourceQuery = PARENT_EXISTS +\n+                    \" UNION \" + PARENT_EXISTS_ADDITIONS +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4NjkyOQ==", "bodyText": "It may be helpful to include the txId in the log message.", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395286929", "createdAt": "2020-03-19T20:01:45Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -278,24 +313,55 @@ public void removeContainedBy(final Transaction tx, final FedoraResource parent,\n         }\n     }\n \n+    @Override\n+    public void removeResource(final String txID, final String resourceID) {\n+        final MapSqlParameterSource parameterSource = new MapSqlParameterSource();\n+        parameterSource.addValue(\"child\", resourceID);\n+        if (txID != null) {\n+            parameterSource.addValue(\"transactionId\", txID);\n+            final boolean addedInTxn = !jdbcTemplate.queryForList(IS_CHILD_ADDED_IN_TRANSACTION_NO_PARENT,\n+                    parameterSource).isEmpty();\n+            if (addedInTxn) {\n+                jdbcTemplate.update(UNDO_INSERT_CHILD_IN_TRANSACTION_NO_PARENT, parameterSource);\n+            } else {\n+                final String parent = getContainedBy(txID, resourceID);\n+                if (parent != null) {\n+                    LOGGER.debug(\"Removing containment relationship between parent ({}) and child ({})\", parent,\n+                            resourceID);\n+                    parameterSource.addValue(\"parent\", parent);\n+                    jdbcTemplate.update(DELETE_CHILD_IN_TRANSACTION, parameterSource);\n+                }\n+            }\n+        } else {\n+            jdbcTemplate.update(DELETE_ALL_RESOURCE, parameterSource);\n+        }\n+    }\n+\n     @Override\n     public void commitTransaction(final Transaction tx) {\n         if (tx != null) {\n             final String txId = tx.getId();\n+            final TransactionTemplate transactionTemplate = new TransactionTemplate(platformTransactionManager);\n             final MapSqlParameterSource parameterSource = new MapSqlParameterSource();\n             parameterSource.addValue(\"transactionId\", txId);\n-            final DefaultTransactionDefinition paramTransactionDefinition = new DefaultTransactionDefinition();\n-            final TransactionStatus status = platformTransactionManager.getTransaction(paramTransactionDefinition);\n-            try {\n-                jdbcTemplate.update(COMMIT_ADD_RECORDS, parameterSource);\n-                jdbcTemplate.update(COMMIT_DELETE_RECORDS, parameterSource);\n-                jdbcTemplate.update(COMMIT_CLEANUP, parameterSource);\n-                platformTransactionManager.commit(status);\n-            } catch (Exception e) {\n-                platformTransactionManager.rollback(status);\n-                LOGGER.warn(\"Unable to commit containment index transaction: {}\", e.getMessage());\n-                throw new RepositoryRuntimeException(\"Unable to commit containment index transaction\", e);\n-            }\n+            // Seemingly setting the name ensures that we don't re-use a transaction.\n+            transactionTemplate.setName(\"tx-\" + txId);\n+            transactionTemplate.setPropagationBehavior(TransactionTemplate.PROPAGATION_REQUIRED);\n+            transactionTemplate.execute(\n+                new TransactionCallbackWithoutResult() {\n+                    protected void doInTransactionWithoutResult(final TransactionStatus status) {\n+                        try {\n+                            jdbcTemplate.update(COMMIT_DELETE_RECORDS, parameterSource);\n+                            jdbcTemplate.update(COMMIT_ADD_RECORDS, parameterSource);\n+                            jdbcTemplate.update(COMMIT_CLEANUP, parameterSource);\n+                        } catch (Exception e) {\n+                            status.setRollbackOnly();\n+                            LOGGER.warn(\"Unable to commit containment index transaction: {}\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM1MzIyNQ==", "bodyText": "Minor: so we keep the code in line with basic Java conventions, please change to: cleanupList", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395353225", "createdAt": "2020-03-19T22:24:21Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImplTest.java", "diffHunk": "@@ -140,47 +162,70 @@\n \n     private static final Collection<URI> DIGESTS = singleton(URI.create(\"urn:sha1:12345abced\"));\n \n+    private static final List<String> cleanup_list = new ArrayList<>() ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM1NDU3Nw==", "bodyText": "Any reason to keep these commented lines around?", "url": "https://github.com/fcrepo/fcrepo/pull/1647#discussion_r395354577", "createdAt": "2020-03-19T22:27:59Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImplTest.java", "diffHunk": "@@ -365,35 +430,40 @@ public void testWithSlugExistsBinary() throws Exception {\n \n         final var descOperation = getOperation(operations, CreateRdfSourceOperation.class);\n         assertEquals(persistedId + \"/fcr:metadata\", descOperation.getResourceId());\n+        when(fedoraResource.getId()).thenReturn(fedoraId);\n+        assertEquals(2, containmentIndex.getContains(transaction, fedoraResource).count());\n     }\n \n     @Test\n     public void testWithSlugDoesntExistsRdf() throws Exception {\n-        final String fedoraId = UUID.randomUUID().toString();\n+        final String fedoraId = ensurePrefix(UUID.randomUUID().toString());\n         final String childId = addToIdentifier(fedoraId, \"testSlug\");\n         when(psSession.getHeaders(fedoraId, null)).thenReturn(resourceHeaders);\n         when(psSession.getHeaders(childId, null)).thenThrow(PersistentItemNotFoundException.class);\n         when(resourceHeaders.getInteractionModel()).thenReturn(BASIC_CONTAINER.toString());\n         final String newID = createResourceService.perform(TX_ID, USER_PRINCIPAL, fedoraId, \"testSlug\", true, null,\n                 model);\n-\n+        cleanup_list.add(fedoraId);\n         verify(psSession).persist(operationCaptor.capture());\n         final var operation = (CreateRdfSourceOperation) operationCaptor.getValue();\n         assertEquals(childId, operation.getResourceId());\n         assertEquals(fedoraId, operation.getParentId());\n         assertEquals(childId, newID);\n+        when(fedoraResource.getId()).thenReturn(fedoraId);\n+        assertEquals(1, containmentIndex.getContains(transaction, fedoraResource).count());\n     }\n \n     @Test\n     public void testWithSlugDoesntExistsBinary() throws Exception {\n-        final String fedoraId = UUID.randomUUID().toString();\n+        final String fedoraId = ensurePrefix(UUID.randomUUID().toString());\n         final var childId = addToIdentifier(fedoraId, \"testSlug\");\n         when(psSession.getHeaders(fedoraId, null)).thenReturn(resourceHeaders);\n-        when(psSession.getHeaders(childId, null)).thenThrow(PersistentItemNotFoundException.class);\n+        //containmentIndex.addContainedBy(null, ensurePrefix(fedoraId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92d9f8f9411e9b475cbe88d357c871b0141d24a"}, "originalPosition": 365}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e33f9273faab8499b0c3d93071a19eb3cde84b8", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/5e33f9273faab8499b0c3d93071a19eb3cde84b8", "committedDate": "2020-03-20T14:17:29Z", "message": "Code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NTY1NDM5", "url": "https://github.com/fcrepo/fcrepo/pull/1647#pullrequestreview-378565439", "createdAt": "2020-03-20T15:07:55Z", "commit": {"oid": "5e33f9273faab8499b0c3d93071a19eb3cde84b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3061, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}