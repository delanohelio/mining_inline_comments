{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2ODUxNDE2", "number": 1704, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTowNjo1MVrOEHTT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTowNjo1MVrOEHTT7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDkxODg0OnYy", "diffSide": "RIGHT", "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTowNjo1MVrOGmm-mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToxNDozNFrOGoW4AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNzY4OA==", "bodyText": "This is better than a stacktrace... I am fine with 403 for the 5.1.1 patch release.", "url": "https://github.com/fcrepo/fcrepo/pull/1704#discussion_r443137688", "createdAt": "2020-06-20T15:06:51Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -1888,6 +1893,70 @@ public void testDirectRelationshipsOk() throws IOException {\n         testCanWrite(writeableResource, username);\n     }\n \n+    @Test\n+    public void testRequestWithEmptyPath() throws Exception {\n+        final String username = \"testUser92\";\n+        final String parent = getRandomUniqueId();\n+        final HttpPost postParent = postObjMethod();\n+        postParent.setHeader(\"Slug\", parent);\n+        setAuth(postParent, \"fedoraAdmin\");\n+        final String parentUri;\n+        try (final CloseableHttpResponse response = execute(postParent)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            parentUri = getLocation(response);\n+        }\n+        // Make parent only accessible to fedoraAdmin\n+        final String parentAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"fedoraAdmin\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + parentUri + \"> .\";\n+        ingestAclString(parentUri, parentAcl, \"fedoraAdmin\");\n+        // Admin can see parent\n+        final HttpGet getAdminParent = getObjMethod(parent);\n+        setAuth(getAdminParent, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminParent));\n+        final HttpGet getParent = getObjMethod(parent);\n+        setAuth(getParent, username);\n+        // testUser92 cannot see parent.\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getParent));\n+\n+        final String child = getRandomUniqueId();\n+        final HttpPost postChild = postObjMethod(parent);\n+        postChild.setHeader(\"Slug\", child);\n+        setAuth(postChild, \"fedoraAdmin\");\n+        final String childUri;\n+        try (final CloseableHttpResponse response = execute(postChild)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            childUri = getLocation(response);\n+        }\n+        // Make child accessible to testUser92\n+        final String childAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + childUri + \"> .\";\n+        ingestAclString(childUri, childAcl, \"fedoraAdmin\");\n+        // Admin can see child.\n+        final HttpGet getAdminChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getAdminChild, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+\n+        // testUser92 can see child.\n+        final HttpGet getChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getChild, username);\n+        assertEquals(OK.getStatusCode(), getStatus(getChild));\n+\n+        // Admin bypasses ACL resolution gets 409.\n+        final HttpGet getAdminRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getAdminRequest, \"fedoraAdmin\");\n+        assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getAdminRequest));\n+        // User can't access the URL (because the path is not correct).\n+        final HttpGet getUserRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getUserRequest, username);\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getUserRequest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb6848549ef3b019d3047af182f2dd7ada24c54"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NTE3MA==", "bodyText": "Yeah, I didn't look to closely to figure out where the empty path exception comes from, but I feel like it comes from Modeshape. I was able to perform the matching with this\n    private boolean hasEmptyPathSegments(final HttpServletRequest httpRequest) {\n        final String requestPath = httpRequest.getContextPath() + httpRequest.getServletPath() +\n                httpRequest.getRequestURI();\n        final String finalTestPath;\n        if (requestPath.startsWith(\"/\") && requestPath.endsWith(\"/\") && requestPath.length() > 1) {\n            finalTestPath = requestPath.substring(1, requestPath.length() - 2);\n        } else if (requestPath.startsWith(\"/\")) {\n            finalTestPath = requestPath.substring(1);\n        } else if (requestPath.endsWith(\"/\")) {\n            finalTestPath = requestPath.substring(0, requestPath.length() - 1);\n        } else {\n            finalTestPath = requestPath;\n        }\n        if (finalTestPath.contains(\"/\")) {\n            final String[] paths = finalTestPath.split(\"/\");\n            if (Arrays.stream(paths).anyMatch(String::isEmpty)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\nI'm not sure how fragile that is, but if you want I can add a commit here to return the appropriate 400 Bad Request. I'd probably add more test cases here than in the 6.0.0 location.", "url": "https://github.com/fcrepo/fcrepo/pull/1704#discussion_r443245170", "createdAt": "2020-06-21T18:36:40Z", "author": {"login": "whikloj"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -1888,6 +1893,70 @@ public void testDirectRelationshipsOk() throws IOException {\n         testCanWrite(writeableResource, username);\n     }\n \n+    @Test\n+    public void testRequestWithEmptyPath() throws Exception {\n+        final String username = \"testUser92\";\n+        final String parent = getRandomUniqueId();\n+        final HttpPost postParent = postObjMethod();\n+        postParent.setHeader(\"Slug\", parent);\n+        setAuth(postParent, \"fedoraAdmin\");\n+        final String parentUri;\n+        try (final CloseableHttpResponse response = execute(postParent)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            parentUri = getLocation(response);\n+        }\n+        // Make parent only accessible to fedoraAdmin\n+        final String parentAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"fedoraAdmin\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + parentUri + \"> .\";\n+        ingestAclString(parentUri, parentAcl, \"fedoraAdmin\");\n+        // Admin can see parent\n+        final HttpGet getAdminParent = getObjMethod(parent);\n+        setAuth(getAdminParent, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminParent));\n+        final HttpGet getParent = getObjMethod(parent);\n+        setAuth(getParent, username);\n+        // testUser92 cannot see parent.\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getParent));\n+\n+        final String child = getRandomUniqueId();\n+        final HttpPost postChild = postObjMethod(parent);\n+        postChild.setHeader(\"Slug\", child);\n+        setAuth(postChild, \"fedoraAdmin\");\n+        final String childUri;\n+        try (final CloseableHttpResponse response = execute(postChild)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            childUri = getLocation(response);\n+        }\n+        // Make child accessible to testUser92\n+        final String childAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + childUri + \"> .\";\n+        ingestAclString(childUri, childAcl, \"fedoraAdmin\");\n+        // Admin can see child.\n+        final HttpGet getAdminChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getAdminChild, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+\n+        // testUser92 can see child.\n+        final HttpGet getChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getChild, username);\n+        assertEquals(OK.getStatusCode(), getStatus(getChild));\n+\n+        // Admin bypasses ACL resolution gets 409.\n+        final HttpGet getAdminRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getAdminRequest, \"fedoraAdmin\");\n+        assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getAdminRequest));\n+        // User can't access the URL (because the path is not correct).\n+        final HttpGet getUserRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getUserRequest, username);\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getUserRequest));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNzY4OA=="}, "originalCommit": {"oid": "8cb6848549ef3b019d3047af182f2dd7ada24c54"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2ODcxMA==", "bodyText": "Thanks, @whikloj . However, I am inclined to move forward with this PR as it stands.\n...nevermind, I see you added the improvement.", "url": "https://github.com/fcrepo/fcrepo/pull/1704#discussion_r444968710", "createdAt": "2020-06-24T15:11:24Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -1888,6 +1893,70 @@ public void testDirectRelationshipsOk() throws IOException {\n         testCanWrite(writeableResource, username);\n     }\n \n+    @Test\n+    public void testRequestWithEmptyPath() throws Exception {\n+        final String username = \"testUser92\";\n+        final String parent = getRandomUniqueId();\n+        final HttpPost postParent = postObjMethod();\n+        postParent.setHeader(\"Slug\", parent);\n+        setAuth(postParent, \"fedoraAdmin\");\n+        final String parentUri;\n+        try (final CloseableHttpResponse response = execute(postParent)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            parentUri = getLocation(response);\n+        }\n+        // Make parent only accessible to fedoraAdmin\n+        final String parentAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"fedoraAdmin\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + parentUri + \"> .\";\n+        ingestAclString(parentUri, parentAcl, \"fedoraAdmin\");\n+        // Admin can see parent\n+        final HttpGet getAdminParent = getObjMethod(parent);\n+        setAuth(getAdminParent, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminParent));\n+        final HttpGet getParent = getObjMethod(parent);\n+        setAuth(getParent, username);\n+        // testUser92 cannot see parent.\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getParent));\n+\n+        final String child = getRandomUniqueId();\n+        final HttpPost postChild = postObjMethod(parent);\n+        postChild.setHeader(\"Slug\", child);\n+        setAuth(postChild, \"fedoraAdmin\");\n+        final String childUri;\n+        try (final CloseableHttpResponse response = execute(postChild)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            childUri = getLocation(response);\n+        }\n+        // Make child accessible to testUser92\n+        final String childAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + childUri + \"> .\";\n+        ingestAclString(childUri, childAcl, \"fedoraAdmin\");\n+        // Admin can see child.\n+        final HttpGet getAdminChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getAdminChild, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+\n+        // testUser92 can see child.\n+        final HttpGet getChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getChild, username);\n+        assertEquals(OK.getStatusCode(), getStatus(getChild));\n+\n+        // Admin bypasses ACL resolution gets 409.\n+        final HttpGet getAdminRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getAdminRequest, \"fedoraAdmin\");\n+        assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getAdminRequest));\n+        // User can't access the URL (because the path is not correct).\n+        final HttpGet getUserRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getUserRequest, username);\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getUserRequest));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNzY4OA=="}, "originalCommit": {"oid": "8cb6848549ef3b019d3047af182f2dd7ada24c54"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3MDM5OQ==", "bodyText": "Okay, do you want me to revert the last commit?", "url": "https://github.com/fcrepo/fcrepo/pull/1704#discussion_r444970399", "createdAt": "2020-06-24T15:13:46Z", "author": {"login": "whikloj"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -1888,6 +1893,70 @@ public void testDirectRelationshipsOk() throws IOException {\n         testCanWrite(writeableResource, username);\n     }\n \n+    @Test\n+    public void testRequestWithEmptyPath() throws Exception {\n+        final String username = \"testUser92\";\n+        final String parent = getRandomUniqueId();\n+        final HttpPost postParent = postObjMethod();\n+        postParent.setHeader(\"Slug\", parent);\n+        setAuth(postParent, \"fedoraAdmin\");\n+        final String parentUri;\n+        try (final CloseableHttpResponse response = execute(postParent)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            parentUri = getLocation(response);\n+        }\n+        // Make parent only accessible to fedoraAdmin\n+        final String parentAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"fedoraAdmin\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + parentUri + \"> .\";\n+        ingestAclString(parentUri, parentAcl, \"fedoraAdmin\");\n+        // Admin can see parent\n+        final HttpGet getAdminParent = getObjMethod(parent);\n+        setAuth(getAdminParent, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminParent));\n+        final HttpGet getParent = getObjMethod(parent);\n+        setAuth(getParent, username);\n+        // testUser92 cannot see parent.\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getParent));\n+\n+        final String child = getRandomUniqueId();\n+        final HttpPost postChild = postObjMethod(parent);\n+        postChild.setHeader(\"Slug\", child);\n+        setAuth(postChild, \"fedoraAdmin\");\n+        final String childUri;\n+        try (final CloseableHttpResponse response = execute(postChild)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            childUri = getLocation(response);\n+        }\n+        // Make child accessible to testUser92\n+        final String childAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + childUri + \"> .\";\n+        ingestAclString(childUri, childAcl, \"fedoraAdmin\");\n+        // Admin can see child.\n+        final HttpGet getAdminChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getAdminChild, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+\n+        // testUser92 can see child.\n+        final HttpGet getChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getChild, username);\n+        assertEquals(OK.getStatusCode(), getStatus(getChild));\n+\n+        // Admin bypasses ACL resolution gets 409.\n+        final HttpGet getAdminRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getAdminRequest, \"fedoraAdmin\");\n+        assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getAdminRequest));\n+        // User can't access the URL (because the path is not correct).\n+        final HttpGet getUserRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getUserRequest, username);\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getUserRequest));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNzY4OA=="}, "originalCommit": {"oid": "8cb6848549ef3b019d3047af182f2dd7ada24c54"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3MTAwOA==", "bodyText": "No... it is an improvement. Thanks.", "url": "https://github.com/fcrepo/fcrepo/pull/1704#discussion_r444971008", "createdAt": "2020-06-24T15:14:34Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -1888,6 +1893,70 @@ public void testDirectRelationshipsOk() throws IOException {\n         testCanWrite(writeableResource, username);\n     }\n \n+    @Test\n+    public void testRequestWithEmptyPath() throws Exception {\n+        final String username = \"testUser92\";\n+        final String parent = getRandomUniqueId();\n+        final HttpPost postParent = postObjMethod();\n+        postParent.setHeader(\"Slug\", parent);\n+        setAuth(postParent, \"fedoraAdmin\");\n+        final String parentUri;\n+        try (final CloseableHttpResponse response = execute(postParent)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            parentUri = getLocation(response);\n+        }\n+        // Make parent only accessible to fedoraAdmin\n+        final String parentAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"fedoraAdmin\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + parentUri + \"> .\";\n+        ingestAclString(parentUri, parentAcl, \"fedoraAdmin\");\n+        // Admin can see parent\n+        final HttpGet getAdminParent = getObjMethod(parent);\n+        setAuth(getAdminParent, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminParent));\n+        final HttpGet getParent = getObjMethod(parent);\n+        setAuth(getParent, username);\n+        // testUser92 cannot see parent.\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getParent));\n+\n+        final String child = getRandomUniqueId();\n+        final HttpPost postChild = postObjMethod(parent);\n+        postChild.setHeader(\"Slug\", child);\n+        setAuth(postChild, \"fedoraAdmin\");\n+        final String childUri;\n+        try (final CloseableHttpResponse response = execute(postChild)) {\n+            assertEquals(CREATED.getStatusCode(), getStatus(response));\n+            childUri = getLocation(response);\n+        }\n+        // Make child accessible to testUser92\n+        final String childAcl = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:accessTo <\" + childUri + \"> .\";\n+        ingestAclString(childUri, childAcl, \"fedoraAdmin\");\n+        // Admin can see child.\n+        final HttpGet getAdminChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getAdminChild, \"fedoraAdmin\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+\n+        // testUser92 can see child.\n+        final HttpGet getChild = getObjMethod(parent + \"/\" + child);\n+        setAuth(getChild, username);\n+        assertEquals(OK.getStatusCode(), getStatus(getChild));\n+\n+        // Admin bypasses ACL resolution gets 409.\n+        final HttpGet getAdminRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getAdminRequest, \"fedoraAdmin\");\n+        assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getAdminRequest));\n+        // User can't access the URL (because the path is not correct).\n+        final HttpGet getUserRequest = getObjMethod(parent + \"//\" + child);\n+        setAuth(getUserRequest, username);\n+        assertEquals(FORBIDDEN.getStatusCode(), getStatus(getUserRequest));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNzY4OA=="}, "originalCommit": {"oid": "8cb6848549ef3b019d3047af182f2dd7ada24c54"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1857, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}