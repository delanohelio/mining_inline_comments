{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MTM5MzIz", "number": 1616, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToyNzoyMlrODcCG2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToyOToyOFrODcCJVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzIxMjQzOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToyNzoyMlrOFj3IAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDoyODo0MlrOFj454Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NzY0OQ==", "bodyText": "space after ,", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373147649", "createdAt": "2020-01-30T19:27:22Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE3NjgwMQ==", "bodyText": "completed", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373176801", "createdAt": "2020-01-30T20:28:42Z", "author": {"login": "robyj"}, "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NzY0OQ=="}, "originalCommit": {"oid": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzIxODc5OnYy", "diffSide": "RIGHT", "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOToyOToyOFrOFj3MIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDoyOToyMlrOFj47IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0ODcwNQ==", "bodyText": "Line 51 is checking that actual.getStatus() equals 404, so i don't think its possible for this line to ever receive 500, since line 51 would have failed in that case.", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373148705", "createdAt": "2020-01-30T19:29:28Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");\n+        assertNotEquals(INTERNAL_SERVER_ERROR.getStatusCode(), actual.getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE3NzEyMA==", "bodyText": "the check against INTERNAL_SERVER_ERROR and the imports used for that check have been removed", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373177120", "createdAt": "2020-01-30T20:29:22Z", "author": {"login": "robyj"}, "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");\n+        assertNotEquals(INTERNAL_SERVER_ERROR.getStatusCode(), actual.getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0ODcwNQ=="}, "originalCommit": {"oid": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1932, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}