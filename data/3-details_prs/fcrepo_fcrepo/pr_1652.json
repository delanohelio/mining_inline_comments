{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NDM4MDM3", "number": 1652, "title": "Switch codebase to use FedoraIDs", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3254\nAlso https://jira.lyrasis.org/browse/FCREPO-3246 seems to be resolved.\nWhat does this Pull Request do?\nWires use of the FedoraID class into the various FedoraResource implementations and the Create/Update/Delete services.\nThere are other places that the FedoraID could be extended to be used for the Persistence layer, but I wasn't sure if that was a good idea or even necessary. Could be done later.\nHow should this be tested?\nThis should have no impact, it should work the same before as after but have removed some code pieces\nInterested parties\n@fcrepo4/committers", "createdAt": "2020-03-31T16:08:55Z", "url": "https://github.com/fcrepo/fcrepo/pull/1652", "merged": true, "mergeCommit": {"oid": "d13e9c2a0c5f4e866a75f48619c19d8427025ba0"}, "closed": true, "closedAt": "2020-04-08T23:16:37Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTJvvWAH2gAyMzk2NDM4MDM3OmIxN2IwZmRiNzk4MTEyNGY2YmNmZjhhYTFkNWQ2OTBmNTdiNDg0ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVvNlWAFqTM5MDM2MTU0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/b17b0fdb7981124f6bcff8aa1d5d690f57b48482", "committedDate": "2020-03-31T21:11:56Z", "message": "Switch entire codebase to use FedoraID"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f41dc04d370861934dfa628144c4a70890dbac2", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/7f41dc04d370861934dfa628144c4a70890dbac2", "committedDate": "2020-03-31T16:05:07Z", "message": "Switch entire codebase to use FedoraID"}, "afterCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/b17b0fdb7981124f6bcff8aa1d5d690f57b48482", "committedDate": "2020-03-31T21:11:56Z", "message": "Switch entire codebase to use FedoraID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f89628c603bf56e77d992f4e359e3e571b94d7", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/42f89628c603bf56e77d992f4e359e3e571b94d7", "committedDate": "2020-04-01T13:42:24Z", "message": "Remove unnecessary FedoraID generation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTk2Mzg1", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-385596385", "createdAt": "2020-04-01T13:41:45Z", "commit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0MTo0NlrOF_BMEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoyMDo0OFrOF_C8_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNDA4Mg==", "bodyText": "This may as well be private since you have a public static builder.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401624082", "createdAt": "2020-04-01T13:41:46Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +53,45 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n     public FedoraID(final String fullId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNDYxOA==", "bodyText": "It would be nice if the javadoc gave examples of the types of id strings this method is expecting.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401624618", "createdAt": "2020-04-01T13:42:27Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +53,45 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n     public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.\n             this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         }\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());\n \n         processIdentifier();\n     }\n \n+    /**\n+     * Basic constructor for repository root ID.\n+     */\n+    private FedoraID() {\n+        this(\"\");\n+    }\n+\n+    /**\n+     * Static create method\n+     * @param fullId The ID to use for the FedoraID.\n+     * @return The FedoraID.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNTkzNg==", "bodyText": "Why is this needed? The getRoot static builder could just pass \"\" to the standard constructor.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401625936", "createdAt": "2020-04-01T13:44:15Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +53,45 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n     public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.\n             this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         }\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());\n \n         processIdentifier();\n     }\n \n+    /**\n+     * Basic constructor for repository root ID.\n+     */\n+    private FedoraID() {\n+        this(\"\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzNjQ5MQ==", "bodyText": "Maybe there should be a version of FedoarID.create() like the following:\npublic static FedoraID create(String part, String... parts) {\n    // enforce part not blank\n\n    if (parts != null && parts.length > 0) {\n        final var sb = new StringBuilder(part);\n        Arrays.asList(parts).forEach(p -> {\n            appendSlash(sb).append(p);\n        });\n    }\n\n    // Check for trailing slash?\n    // create FedoraID\n}\n\nprivate StringBuilder appendSlash(final StringBuilder sb) {\n    if (sb.charAt(sb.count() - 1) != '/') {\n        sb.append(\"/\");\n    }\n    return sb;\n}\n\n(I wrote that in browser. Probably does not compile.)", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401636491", "createdAt": "2020-04-01T13:58:12Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +180,56 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Add a part onto this identifier.\n+     * @param addition The additional string.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String addition) {\n+        return FedoraID.create(this.getResourceId() + (this.getResourceId().endsWith(\"/\") ? \"\" : \"/\") + addition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYzNzg5NQ==", "bodyText": "Generally, using Objects.equals() is safer. In this case, it's probably impossible for fullId to be null?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401637895", "createdAt": "2020-04-01T14:00:03Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +180,56 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Add a part onto this identifier.\n+     * @param addition The additional string.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String addition) {\n+        return FedoraID.create(this.getResourceId() + (this.getResourceId().endsWith(\"/\") ? \"\" : \"/\") + addition);\n+    }\n+\n+    /**\n+     * Add a part onto this identifier.\n+     * @param addition The additional string.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToFullId(final String addition) {\n+        return FedoraID.create(this.getFullId() + (this.getFullId().endsWith(\"/\") ? \"\" : \"/\") + addition);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof FedoraID)) {\n+            return false;\n+        }\n+\n+        final var testObj = (FedoraID) obj;\n+        return testObj.getFullId().equals(this.getFullId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f89628c603bf56e77d992f4e359e3e571b94d7"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0MDAyMA==", "bodyText": "Is this safe? I would have expect a resource id to have been decoded somewhere in the HTTP layer if it needed to be.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401640020", "createdAt": "2020-04-01T14:02:58Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +180,56 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Add a part onto this identifier.\n+     * @param addition The additional string.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String addition) {\n+        return FedoraID.create(this.getResourceId() + (this.getResourceId().endsWith(\"/\") ? \"\" : \"/\") + addition);\n+    }\n+\n+    /**\n+     * Add a part onto this identifier.\n+     * @param addition The additional string.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToFullId(final String addition) {\n+        return FedoraID.create(this.getFullId() + (this.getFullId().endsWith(\"/\") ? \"\" : \"/\") + addition);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof FedoraID)) {\n+            return false;\n+        }\n+\n+        final var testObj = (FedoraID) obj;\n+        return testObj.getFullId().equals(this.getFullId());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return (int) getFullId().hashCode();\n+    }\n+\n+    /**\n+     * Ensure the ID has the info:fedora/ prefix.\n+     * @param id the identifier, if null assume repository root (info:fedora/)\n+     * @return the identifier with the info:fedora/ prefix.\n+     */\n+    private static String ensurePrefix(final String id) {\n+        if (id == null) {\n+            return FEDORA_ID_PREFIX;\n+        }\n+        final String decodedId = URLDecoder.decode(id, UTF_8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f89628c603bf56e77d992f4e359e3e571b94d7"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0OTY4NA==", "bodyText": "Additionally, because I can't figure out how to leave comments on unchanged lines, I think it'd be nice if distinction between \"fullId\" and \"resourceId\" was documented more clearly (with id examples) in the javadocs for getResourceId and getFullId. Maybe in the addTo methods to? How are they related and why would I use one over the other?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401649684", "createdAt": "2020-04-01T14:16:14Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +53,45 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n     public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.\n             this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         }\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());\n \n         processIdentifier();\n     }\n \n+    /**\n+     * Basic constructor for repository root ID.\n+     */\n+    private FedoraID() {\n+        this(\"\");\n+    }\n+\n+    /**\n+     * Static create method\n+     * @param fullId The ID to use for the FedoraID.\n+     * @return The FedoraID.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyNDYxOA=="}, "originalCommit": {"oid": "b17b0fdb7981124f6bcff8aa1d5d690f57b48482"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1Mjk5MQ==", "bodyText": "The addTo methods could also be changed to have signatures like FedoarId addTo...(String part, String... parts)", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401652991", "createdAt": "2020-04-01T14:20:48Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/BinaryImpl.java", "diffHunk": "@@ -135,7 +137,11 @@ public String getFilename() {\n     @Override\n     public FedoraResource getDescription() {\n         try {\n-            final var descId = getId() + \"/\" + FCR_METADATA;\n+            final FedoraID descId = getFedoraId().addToResourceId(FCR_METADATA);\n+            if (this.isMemento()) {\n+                return resourceFactory.getResource(tx, descId.addToFullId(FCR_VERSIONS + \"/\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f89628c603bf56e77d992f4e359e3e571b94d7"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "814bdd59dedff996c19f1a0c4af6fd95c6658c91", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/814bdd59dedff996c19f1a0c4af6fd95c6658c91", "committedDate": "2020-04-01T17:59:22Z", "message": "Code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODI3NDI1", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-385827425", "createdAt": "2020-04-01T18:06:57Z", "commit": {"oid": "814bdd59dedff996c19f1a0c4af6fd95c6658c91"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODowNjo1N1rOF_MhNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODowNjo1N1rOF_MhNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgwOTcxNw==", "bodyText": "Isn't this the same as return FedoraID.create(this.getResourceId(), addition)?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r401809717", "createdAt": "2020-04-01T18:06:57Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -181,21 +189,23 @@ public String getMementoString() {\n     }\n \n     /**\n-     * Add a part onto this identifier.\n-     * @param addition The additional string.\n+     * Create a new FedoraID using the resource ID as the base\n+     * @param addition One or more additional strings.\n      * @return new FedoraID for the new identifier.\n      */\n-    public FedoraID addToResourceId(final String addition) {\n-        return FedoraID.create(this.getResourceId() + (this.getResourceId().endsWith(\"/\") ? \"\" : \"/\") + addition);\n+    public FedoraID addToResourceId(final String... addition) {\n+        final var newId = idBuilder(this.getResourceId(), addition);\n+        return new FedoraID(newId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "814bdd59dedff996c19f1a0c4af6fd95c6658c91"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/4279d79c3ad1a69ed43538566b0c3a52b009b198", "committedDate": "2020-04-01T20:28:44Z", "message": "Reuse FedoraID.create()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzUyMTEz", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-386752113", "createdAt": "2020-04-02T19:59:36Z", "commit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzU4MDQy", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-386758042", "createdAt": "2020-04-02T20:08:39Z", "commit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDowODozOVrOF_7l5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyMTo1MVrOF_8-HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MDk2Nw==", "bodyText": "If we have the FedoraResource, aclResource, why not just call aclResource.getFedoraId()?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402580967", "createdAt": "2020-04-02T20:08:39Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraAcl.java", "diffHunk": "@@ -138,6 +139,7 @@ public Response createFedoraWebacAcl(@HeaderParam(CONTENT_TYPE) final MediaType\n \n         aclResource = webacAclService.findOrCreate(transaction, path);\n         created = aclResource.isNew();\n+        final FedoraID aclId = FedoraID.create(aclResource.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzI0NQ==", "bodyText": "I would suggest we add a helper method. Seeing how the identifierConverter is making the sausage seems fragile and complex.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402583245", "createdAt": "2020-04-02T20:13:34Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraBaseResource.java", "diffHunk": "@@ -148,11 +144,11 @@ protected Node asNode(final FedoraResource resource) {\n      */\n     @VisibleForTesting\n     public FedoraResource getResourceFromPath(final String externalPath) {\n-        final String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath));\n-        final Instant memento = extractMemento(externalPath);\n+        final FedoraID fedoraId = FedoraID.create(identifierConverter().toInternalId(identifierConverter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4ODk5Ng==", "bodyText": "Can also remove the private \"MEMENTO_LABEL_FORMATTER\" at the top of this class:\nhttps://github.com/fcrepo4/fcrepo4/pull/1652/files#diff-3f238be750488e3730daa409a69174b6R64", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402588996", "createdAt": "2020-04-02T20:26:42Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraBaseResource.java", "diffHunk": "@@ -208,18 +204,6 @@ private String getBaseUrlProperty(final UriInfo uriInfo) {\n         return \"\";\n     }\n \n-    private Instant extractMemento(final String externalPath) {\n-        final var matcher = MEMENTO_PATH_PATTERN.matcher(externalPath);\n-        if (matcher.matches()) {\n-            try {\n-                return Instant.from(VersionService.MEMENTO_LABEL_FORMATTER.parse(matcher.group(1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5MzA2MQ==", "bodyText": "I think we should be able to remove this pre-FedoraID method.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402593061", "createdAt": "2020-04-02T20:42:30Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -91,4 +92,13 @@\n      * @return True if it is in the index.\n      */\n     boolean resourceExists(final String txID, final String resourceID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5MzUxOA==", "bodyText": "I would be inclined to revisit the method signatures in this interface... lots of String identifiers.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402593518", "createdAt": "2020-04-02T20:43:56Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n import java.util.stream.Stream;\n \n+import org.fcrepo.kernel.api.identifiers.FedoraID;\n import org.fcrepo.kernel.api.models.FedoraResource;\n \n /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMzU0OA==", "bodyText": "It would be nice (in the future) if the parentId were also a FedoraID.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r402603548", "createdAt": "2020-04-02T21:21:51Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -275,7 +281,7 @@ protected PersistentStorageSession getSession() {\n \n     @Override\n     public FedoraResource getParent() throws PathNotFoundException {\n-        return resourceFactory.getResource(parentId);\n+        return resourceFactory.getResource(FedoraID.create(parentId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4279d79c3ad1a69ed43538566b0c3a52b009b198"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67b6cddf170831f95963f2fc2b3b06ce0622ff82", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/67b6cddf170831f95963f2fc2b3b06ce0622ff82", "committedDate": "2020-04-04T15:44:26Z", "message": "Code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/87f07e941e288ae2c9fba556eb107e9faf8e9738", "committedDate": "2020-04-04T20:58:57Z", "message": "Helper to go from external uri path to internal ID"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzUxMDA2", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-388351006", "createdAt": "2020-04-06T15:14:15Z", "commit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNToxNDoxNlrOGBcpnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxMDoyNFrOGBj6SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE3MTE2NA==", "bodyText": "I wonder if we could rename this method to make it a bit clearer that this is a factory method. createRootID or getRepositoryRootID maybe? On my initial skim i was thinking this was a getter method for retrieving the \"root\" portion of an ID, even though its obviously a static method.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404171164", "createdAt": "2020-04-06T15:14:16Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +67,39 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n-    public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+    private FedoraID(final String fullId) {\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.\n             this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         }\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());\n \n         processIdentifier();\n     }\n \n+    /**\n+     * Static create method\n+     * @param fullId The ID to use for the FedoraID.\n+     * @return The FedoraID.\n+     */\n+    public static FedoraID create(final String fullId, final String... additions) {\n+        final var newId = idBuilder(fullId, additions);\n+        return new FedoraID(newId);\n+    }\n+\n+    /**\n+     * Get a FedoraID for repository root.\n+     * @return The FedoraID for repository root.\n+     */\n+    public static FedoraID getRoot() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE4MDQzMw==", "bodyText": "mockFedoraID and mockFedoraMementoID don't actually appear to be a mocks, might be good to remove the mock part to avoid confusion.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404180433", "createdAt": "2020-04-06T15:26:08Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -92,25 +104,45 @@\n \n     private ResourceHeadersImpl resourceHeaders;\n \n-    private ResourceFactoryImpl factory;\n-\n     private String fedoraId;\n \n     private String sessionId;\n \n+    private FedoraID rootId = FedoraID.getRoot();\n+\n+    private FedoraID mockFedoraID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5MjUyMg==", "bodyText": "It seems possible that the parts could start/end with more than one slash. Could consolidate this into a regex to trim both ends, something like .replaceAll(\"(^/+|/+$)\", \"\").\nAlternatively, if you want to go into apache commons land, there is  StringUtils.strip(s, \"/\"):\nhttp://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/StringUtils.html#strip-java.lang.String-java.lang.String-", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404192522", "createdAt": "2020-04-06T15:42:10Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +188,88 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Create a new FedoraID using the resource ID as the base\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String... addition) {\n+        return FedoraID.create(this.getResourceId(), addition);\n+    }\n+\n+    /**\n+     * Create a new FedoraID using the full ID as the base.\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToFullId(final String... addition) {\n+        return FedoraID.create(this.getFullId(), addition);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof FedoraID)) {\n+            return false;\n+        }\n+\n+        final var testObj = (FedoraID) obj;\n+        return Objects.equals(testObj.getFullId(), this.getFullId());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return getFullId().hashCode();\n+    }\n+\n+    /**\n+     * Takes one or more strings and combines them with /s\n+     * @param firstPart The first part of the id, if blank return a zero length string.\n+     * @param parts Zero or more additional string.\n+     * @return A string of all parts with combined with /s\n+     */\n+    private static String idBuilder(final String firstPart, final String... parts) {\n+        if (firstPart == null) {\n+            return \"\";\n+        }\n+        final String[] allParts = Stream.of(new String[]{firstPart}, parts).flatMap(Stream::of).toArray(String[]::new);\n+        return idBuilder(allParts);\n+    }\n+\n+    /**\n+     * Concatenates all the parts with slashes\n+     * @param parts array of strings\n+     * @return the concatenated string.\n+     */\n+    private static String idBuilder(final String... parts) {\n+        if (parts != null && parts.length > 0) {\n+            final String id = Arrays.stream(parts).map(s -> s.startsWith(\"/\") ? s.substring(1) : s)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIwMjQ2Mg==", "bodyText": "A minor thing, but I'm trying to get a sense of the standard in this project for capitalization of acronyms in class names. For the most part, I am seeing camel case used, such as FedoraLdp, FedoraAcl, DefaultRdfStream. The only exception appears to be fcrepo-persistence-ocfl which has a mixture. Camel case is also used for all variable/method names in this class. I'm wondering if it might be most consistent to name the class FedoraId. Just a suggestion though.\nOne other thing, does the parameter need to be the fullId? It seems like we are passing the resource id in some cases.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404202462", "createdAt": "2020-04-06T15:55:25Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +67,39 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n-    public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+    private FedoraID(final String fullId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIwNTgzNA==", "bodyText": "Only strip trailing slashes if the ID", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404205834", "createdAt": "2020-04-06T15:59:54Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +67,39 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n-    public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+    private FedoraID(final String fullId) {\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIxNTc1Mg==", "bodyText": "I'm wondering about the need for both addToResourceId and addToFullId. The former seems to exclusively be used for adding fcr:metadata to the end of an id at the moment. If its predictable/practical, maybe we could have one method which knows when to start from each variation of the id, rather than leaving it to the rest of the code base to reason it?\nIf it did end up just being addToId, it might be clearer to use language like resolve or resolveId instead. We're using that verb in many other places for specialized concatenation methods, and its also used by core java classes, like Path.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404215752", "createdAt": "2020-04-06T16:13:44Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +188,88 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Create a new FedoraID using the resource ID as the base\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String... addition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIyMTkxMQ==", "bodyText": "this is the only usage of idBuilder(String... parts), it might make sense to merge these methods. In which case you could also skip over the intermediate array, keeping things streaming through the joining", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404221911", "createdAt": "2020-04-06T16:22:48Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +188,88 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Create a new FedoraID using the resource ID as the base\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String... addition) {\n+        return FedoraID.create(this.getResourceId(), addition);\n+    }\n+\n+    /**\n+     * Create a new FedoraID using the full ID as the base.\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToFullId(final String... addition) {\n+        return FedoraID.create(this.getFullId(), addition);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof FedoraID)) {\n+            return false;\n+        }\n+\n+        final var testObj = (FedoraID) obj;\n+        return Objects.equals(testObj.getFullId(), this.getFullId());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return getFullId().hashCode();\n+    }\n+\n+    /**\n+     * Takes one or more strings and combines them with /s\n+     * @param firstPart The first part of the id, if blank return a zero length string.\n+     * @param parts Zero or more additional string.\n+     * @return A string of all parts with combined with /s\n+     */\n+    private static String idBuilder(final String firstPart, final String... parts) {\n+        if (firstPart == null) {\n+            return \"\";\n+        }\n+        final String[] allParts = Stream.of(new String[]{firstPart}, parts).flatMap(Stream::of).toArray(String[]::new);\n+        return idBuilder(allParts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIyMzYyMg==", "bodyText": "it'd be nice if there was a constant for this prefix somewhere, maybe either here or in FedoraTypes before FEDORA_ID_PREFIX", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404223622", "createdAt": "2020-04-06T16:25:20Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -156,6 +188,88 @@ public String getMementoString() {\n         return mementoDatetimeStr;\n     }\n \n+    /**\n+     * Create a new FedoraID using the resource ID as the base\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToResourceId(final String... addition) {\n+        return FedoraID.create(this.getResourceId(), addition);\n+    }\n+\n+    /**\n+     * Create a new FedoraID using the full ID as the base.\n+     * @param addition One or more additional strings.\n+     * @return new FedoraID for the new identifier.\n+     */\n+    public FedoraID addToFullId(final String... addition) {\n+        return FedoraID.create(this.getFullId(), addition);\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (obj == this) {\n+            return true;\n+        }\n+\n+        if (!(obj instanceof FedoraID)) {\n+            return false;\n+        }\n+\n+        final var testObj = (FedoraID) obj;\n+        return Objects.equals(testObj.getFullId(), this.getFullId());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return getFullId().hashCode();\n+    }\n+\n+    /**\n+     * Takes one or more strings and combines them with /s\n+     * @param firstPart The first part of the id, if blank return a zero length string.\n+     * @param parts Zero or more additional string.\n+     * @return A string of all parts with combined with /s\n+     */\n+    private static String idBuilder(final String firstPart, final String... parts) {\n+        if (firstPart == null) {\n+            return \"\";\n+        }\n+        final String[] allParts = Stream.of(new String[]{firstPart}, parts).flatMap(Stream::of).toArray(String[]::new);\n+        return idBuilder(allParts);\n+    }\n+\n+    /**\n+     * Concatenates all the parts with slashes\n+     * @param parts array of strings\n+     * @return the concatenated string.\n+     */\n+    private static String idBuilder(final String... parts) {\n+        if (parts != null && parts.length > 0) {\n+            final String id = Arrays.stream(parts).map(s -> s.startsWith(\"/\") ? s.substring(1) : s)\n+                    .map(s -> s.endsWith(\"/\") ? s.substring(0, s.length() -1 ) : s)\n+                    .collect(Collectors.joining(\"/\"));\n+            if (id.equals(\"info:fedora\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMzgxNA==", "bodyText": "I'm a little confused what externalPath is. Seems like its just used for presenting ids in exception messages, but also is not the same as an externalId? Maybe displayId or unprefixId would be clearer?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404233814", "createdAt": "2020-04-06T16:40:24Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraID.java", "diffHunk": "@@ -50,24 +67,39 @@\n \n     /**\n      * Basic constructor.\n-     * @param fullId The full identifier.\n+     * @param fullId The full identifier or null if root.\n      * @throws IllegalArgumentException If ID does not start with expected prefix.\n      */\n-    public FedoraID(final String fullId) {\n-        if (!fullId.startsWith(FEDORA_ID_PREFIX)) {\n-            throw new IllegalArgumentException(String.format(\"ID must begin with %s\", FEDORA_ID_PREFIX));\n-        }\n-        this.fullId = fullId;\n+    private FedoraID(final String fullId) {\n+        this.fullId = ensurePrefix(fullId);\n         if (!this.fullId.equals(FEDORA_ID_PREFIX)) {\n             // Only strip trailing slashes the ID is more than the info:fedora/ prefix.\n             this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         }\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNDM5NA==", "bodyText": "Maybe its out of scope for this PR, but might make sense for the identifier converter to be able to take FedoraIds?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404234394", "createdAt": "2020-04-06T16:41:17Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -428,7 +427,7 @@ private RdfStream getTriples(final FedoraResource resource, final TripleCategory\n     protected URI getUri(final FedoraResource resource) {\n         try {\n             final String uri = identifierConverter()\n-                    .toExternalId(FedoraResourceIdConverter.resolveFedoraId(resource));\n+                    .toExternalId(resource.getFedoraId().getFullId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzNDk3Mw==", "bodyText": "Similarly, perhaps the converter should be able to directly produce FedoraId", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404234973", "createdAt": "2020-04-06T16:42:08Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraBaseResource.java", "diffHunk": "@@ -148,11 +140,10 @@ protected Node asNode(final FedoraResource resource) {\n      */\n     @VisibleForTesting\n     public FedoraResource getResourceFromPath(final String externalPath) {\n-        final String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath));\n-        final Instant memento = extractMemento(externalPath);\n+        final FedoraID fedoraId = FedoraID.create(identifierConverter().pathToInternalId(externalPath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0Mjc1Ng==", "bodyText": "It might make sense to add a reasonable toString method to FedoraId so that we don't need to call a method explicitly during log statements like this", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404242756", "createdAt": "2020-04-06T16:53:58Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -824,28 +825,14 @@ private String mintNewPid(final String fedoraId, final String slug) {\n             pid = defaultPidMinter.get();\n         }\n \n-        String fullTestPath = addToIdentifier(fedoraId, pid);\n-        fullTestPath = URLDecoder.decode(fullTestPath, UTF_8);\n+        final FedoraID fullTestPath = fedoraId.addToFullId(pid);\n \n         if (doesResourceExist(transaction, fullTestPath)) {\n-            LOGGER.trace(\"Resource with path {} already exists; minting new path instead\", fullTestPath);\n+            LOGGER.trace(\"Resource with path {} already exists; minting new path instead\", fullTestPath.getFullId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI0NzQyNQ==", "bodyText": "I guess these tests are disabled anyways so maybe there's not much point on fixing this, but mockContainer.getId() isn't mocked, so it just returns null. Maybe it should be initialized with path which seems to be the id used in these tests? Or maybe you were saving updating this for later?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404247425", "createdAt": "2020-04-06T17:00:59Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/http/api/FedoraLdpTest.java", "diffHunk": "@@ -285,10 +288,13 @@ public void setUp() {\n         when(mockServletContext.getContextPath()).thenReturn(\"/\");\n \n         when(prefer.getReturn()).thenReturn(preferTag);\n-                doAnswer((Answer<HttpServletResponse>) invocation -> {\n-                    mockResponse.addHeader(\"Preference-Applied\", \"return=representation\");\n-                    return null;\n-                }).when(preferTag).addResponseHeaders(mockResponse);\n+\n+        doAnswer((Answer<HttpServletResponse>) invocation -> {\n+            mockResponse.addHeader(\"Preference-Applied\", \"return=representation\");\n+            return null;\n+        }).when(preferTag).addResponseHeaders(mockResponse);\n+\n+        fedoraID = FedoraID.create(mockContainer.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1MjIwNA==", "bodyText": "Should we be trying to deprecate this method in favor of using getFedoraId everywhere?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404252204", "createdAt": "2020-04-06T17:08:32Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/FedoraResource.java", "diffHunk": "@@ -41,6 +42,12 @@\n      */\n     String getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI2ODA3OA==", "bodyText": "Maybe pass in either the FedoraId or the FedoraResource to getChildren and let it decide what info it needs?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404268078", "createdAt": "2020-04-06T17:33:57Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -255,11 +257,12 @@ private NamedParameterJdbcTemplate getNamedParameterJdbcTemplate() {\n     @Override\n     public Stream<String> getContains(final Transaction tx, final FedoraResource fedoraResource) {\n         final String txId = (tx != null) ? tx.getId() : null;\n-        return getChildren(fedoraResource.getId(), txId);\n+        return getChildren(fedoraResource.getFedoraId().getFullId(), txId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3OTgwMw==", "bodyText": "The fcr:metadata comes and goes a lot. Would it make sense to have a getter method in FedoraId like getDescriptionId, and then have the fcr:metadata bit get stripped off like all the other suffixes?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404279803", "createdAt": "2020-04-06T17:53:06Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/ResourceFactoryImpl.java", "diffHunk": "@@ -57,64 +60,75 @@\n     @Inject\n     private PersistentStorageSessionManager persistentStorageSessionManager;\n \n-    @Override\n-    public FedoraResource getResource(final String identifier)\n-            throws PathNotFoundException {\n-        return getResource(null, identifier);\n-    }\n+    @Inject\n+    private ContainmentIndex containmentIndex;\n \n     @Override\n-    public FedoraResource getResource(final Transaction transaction, final String identifier)\n+    public FedoraResource getResource(final FedoraID fedoraID)\n             throws PathNotFoundException {\n-        return getResource(transaction, identifier, (Instant) null);\n+        return getResource(null, fedoraID);\n     }\n \n     @Override\n-    public FedoraResource getResource(final Transaction transaction, final String identifier, final Instant version)\n+    public FedoraResource getResource(final Transaction transaction, final FedoraID fedoraID)\n             throws PathNotFoundException {\n-        return instantiateResource(transaction, identifier, version);\n+        final FedoraResource resource = instantiateResource(transaction, fedoraID);\n+        if (fedoraID.isTimemap()) {\n+            return resource.getTimeMap();\n+        }\n+        return resource;\n     }\n \n     @Override\n-    public <T extends FedoraResource> T getResource(final String identifier, final Class<T> clazz)\n-            throws PathNotFoundException {\n+    public <T extends FedoraResource> T getResource(final FedoraID identifier,\n+                                                    final Class<T> clazz) throws PathNotFoundException {\n         return clazz.cast(getResource(null, identifier));\n     }\n \n     @Override\n-    public <T extends FedoraResource> T getResource(final Transaction transaction, final String identifier,\n+    public <T extends FedoraResource> T getResource(final Transaction transaction, final FedoraID identifier,\n             final Class<T> clazz) throws PathNotFoundException {\n         return clazz.cast(getResource(transaction, identifier));\n     }\n \n     @Override\n-    public <T extends FedoraResource> T getResource(final Transaction transaction, final String identifier,\n-            final Instant version, final Class<T> clazz) throws PathNotFoundException {\n-        return clazz.cast(getResource(transaction, identifier, version));\n-    }\n-\n-    @Override\n-    public boolean doesResourceExist(final Transaction transaction, final String fedoraId, final Instant version) {\n-        // TODO: Check the index first.\n-\n-        final PersistentStorageSession psSession = getSession(transaction);\n-\n-        try {\n-            psSession.getHeaders(fedoraId, version);\n+    public boolean doesResourceExist(final Transaction transaction, final FedoraID fedoraId) {\n+        if (fedoraId.isRepositoryRoot()) {\n+            // Root always exists.\n             return true;\n-        } catch (final PersistentItemNotFoundException e) {\n-            // Object doesn't exist.\n-            return false;\n-        } catch (final PersistentStorageException e) {\n-            // Other error, pass along.\n-            throw new RepositoryRuntimeException(e);\n-        } finally {\n-            if (transaction == null) {\n-                // Commit session (if read-only) so it doesn't hang around.\n-                try {\n-                    psSession.commit();\n-                } catch (final PersistentStorageException e) {\n-                    LOGGER.error(\"Error committing session, message: {}\", e.getMessage());\n+        }\n+        final FedoraID actualId;\n+        if (fedoraId.isDescription()) {\n+            // Descriptions are actually part of the binary, so use its ID.\n+            actualId = FedoraID.create(fedoraId.getResourceId().replace(\"/\" + FCR_METADATA, \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NDkwMg==", "bodyText": "A constants for just the prefix would be helpful here too", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404284902", "createdAt": "2020-04-06T18:01:20Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/AbstractService.java", "diffHunk": "@@ -109,21 +111,30 @@ protected String determineInteractionModel(final List<String> linkTypes,\n      * Find the closest ancestor using a Fedora ID.\n      * @param txID The current transaction or null if none.\n      * @param fedoraId The fedora ID to check\n-     * @return The ancestor ID or null if root\n+     * @return The ancestor or root FedoraID object.\n      */\n-    protected String findExistingAncestor(final String txID, final String fedoraId) {\n+    protected FedoraID findExistingAncestor(final String txID, final FedoraID fedoraId) {\n+        if (fedoraId.isRepositoryRoot()) {\n+            // If we are root then we are the top.\n+            return fedoraId;\n+        }\n         final String parent = containmentIndex.getContainedBy(txID, fedoraId);\n         if (parent != null) {\n-            return parent;\n+            return FedoraID.create(parent);\n         }\n-        String idIterator = fedoraId;\n+        String idIterator = fedoraId.getFullId();\n         while (idIterator.contains(\"/\")) {\n-            idIterator = fedoraId.substring(0, idIterator.lastIndexOf(\"/\"));\n-            if (containmentIndex.resourceExists(txID, idIterator)) {\n-                return idIterator;\n+            idIterator = fedoraId.getResourceId().substring(0, idIterator.lastIndexOf(\"/\"));\n+            if (idIterator.equals(FEDORA_ID_PREFIX.substring(0, FEDORA_ID_PREFIX.length()-1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4NjQzMw==", "bodyText": "I'm guessing these builder interfaces are one of the examples of places where you were thinking we might switch over to using fedoraIds? That seems like a good idea, although i can understand doing that in a followup ticket to keep down the scope of this PR", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404286433", "createdAt": "2020-04-06T18:04:04Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -90,16 +90,16 @@ public void perform(final String txId, final String userPrincipal, final String\n         final CreateNonRdfSourceOperationBuilder builder;\n         String mimeType = contentType;\n         if (externalContent == null) {\n-            builder = nonRdfSourceOperationFactory.createInternalBinaryBuilder(fedoraId, requestBody);\n+            builder = nonRdfSourceOperationFactory.createInternalBinaryBuilder(fedoraId.getFullId(), requestBody);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDEyMA==", "bodyText": "Seems pretty weird to me to mock the resource to return different identifiers depending on if getId or getFedoraId is called. Is that necessary?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r404290120", "createdAt": "2020-04-06T18:10:24Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -121,32 +153,41 @@ public void setup() throws Exception {\n         when(psSession.getHeaders(eq(fedoraId), nullable(Instant.class))).thenReturn(resourceHeaders);\n     }\n \n+    @After\n+    public void cleanUp() {\n+        when(mockResource.getId()).thenReturn(FEDORA_ID_PREFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "194765c0d0f892a74858ccc8c0442393366efa8a", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/194765c0d0f892a74858ccc8c0442393366efa8a", "committedDate": "2020-04-07T18:11:55Z", "message": "Some code review and remove slash from repository root id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e1a3a544a071edd9f552f07a5243c5616672b7", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/e4e1a3a544a071edd9f552f07a5243c5616672b7", "committedDate": "2020-04-07T21:01:49Z", "message": "Only want resourceId for resourceExists"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTAwMjkz", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-389500293", "createdAt": "2020-04-07T21:22:24Z", "commit": {"oid": "e4e1a3a544a071edd9f552f07a5243c5616672b7"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMToyMjoyNVrOGCWoVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTo1ODozMFrOGCXrOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyMTEwOA==", "bodyText": "Are all these .substring(1) necessary? I tried removing them all and the tests still passed", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r405121108", "createdAt": "2020-04-07T21:22:25Z", "author": {"login": "bbpennel"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/auth/webac/WebACFilterTest.java", "diffHunk": "@@ -159,9 +160,10 @@ public void setupRequest() throws Exception{\n \n         when(mockTransactionManager.get(\"tx-id\")).thenReturn(mockTransaction);\n \n-        when(mockResourceFactory.getResource(mockTransaction, testChildPath)).thenReturn(null);\n+        when(mockResourceFactory.getResource(mockTransaction, FedoraId.create(testChildPath.substring(1))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e1a3a544a071edd9f552f07a5243c5616672b7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyMzA4Mg==", "bodyText": "Similarly, are the substring(1)'s necessary here? Seems to pass either way, just trying to keep down clutter if it makes sense.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r405123082", "createdAt": "2020-04-07T21:26:10Z", "author": {"login": "bbpennel"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/auth/webac/WebACRolesProviderTest.java", "diffHunk": "@@ -367,13 +372,13 @@ public void acl04Test() throws RepositoryException, PathNotFoundException {\n         final String acl = \"/acls/04/acl.ttl\";\n \n         when(mockResource.getAcl()).thenReturn(mockAclResource);\n-        when(mockResourceFactory.getResource(mockTransaction, acl)).thenReturn(mockAclResource);\n-        when(mockAclResource.getPath()).thenReturn(acl);\n+        when(mockResourceFactory.getResource(mockTransaction, FedoraId.create(acl.substring(1)))).thenReturn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e1a3a544a071edd9f552f07a5243c5616672b7"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNjE2Mw==", "bodyText": "is this a special case where fcr:metadata has to be added to the full id, or could this just as easily be addToResourceId?", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r405136163", "createdAt": "2020-04-07T21:53:51Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -116,10 +116,12 @@ public void perform(final String txId, final String userPrincipal, final String\n     }\n \n     private void createDescription(final PersistentStorageSession pSession, final String userPrincipal,\n-            final String binaryId) {\n-        final var descId = binaryId + \"/\" + FCR_METADATA;\n-        final var createOp = rdfSourceOperationFactory.createBuilder(descId, FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI)\n-                .userPrincipal(userPrincipal)\n+            final FedoraId binaryId) {\n+        final var descId = binaryId.addToFullId(FCR_METADATA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e1a3a544a071edd9f552f07a5243c5616672b7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzODIzMg==", "bodyText": "I understand, in this case i'm commenting on the fact that getId() is returning info:fedora while getFedoraId() is returning a FedoraId with the value info:fedora/<uuid>", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r405138232", "createdAt": "2020-04-07T21:58:30Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -121,32 +153,41 @@ public void setup() throws Exception {\n         when(psSession.getHeaders(eq(fedoraId), nullable(Instant.class))).thenReturn(resourceHeaders);\n     }\n \n+    @After\n+    public void cleanUp() {\n+        when(mockResource.getId()).thenReturn(FEDORA_ID_PREFIX);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MDEyMA=="}, "originalCommit": {"oid": "87f07e941e288ae2c9fba556eb107e9faf8e9738"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fdd114aa8b6fef03c6d00b63f98088f119061ab", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/0fdd114aa8b6fef03c6d00b63f98088f119061ab", "committedDate": "2020-04-08T15:50:17Z", "message": "Replace addTo with resolve"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d5f95c3353d900d914f4b3a24f7106a96740255", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/8d5f95c3353d900d914f4b3a24f7106a96740255", "committedDate": "2020-04-08T16:45:42Z", "message": "Add some tests and refactor repository root check in containment index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTc2NDA4", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-390176408", "createdAt": "2020-04-08T17:19:15Z", "commit": {"oid": "8d5f95c3353d900d914f4b3a24f7106a96740255"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa04a8b8450a2514642bde1b43b61272673884b7", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/fa04a8b8450a2514642bde1b43b61272673884b7", "committedDate": "2020-04-08T18:14:12Z", "message": "Switch name of path only variable in FedoraId and remove idBuilder(String, String...)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzM3OTI1", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-390337925", "createdAt": "2020-04-08T21:15:57Z", "commit": {"oid": "fa04a8b8450a2514642bde1b43b61272673884b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxNTo1N1rOGDBRcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMToxNTo1N1rOGDBRcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxOTc2MQ==", "bodyText": "I guess you could have left this constructor as it was and moved the array concatenation from resolve into this constructor. But this is fine too.", "url": "https://github.com/fcrepo/fcrepo/pull/1652#discussion_r405819761", "createdAt": "2020-04-08T21:15:57Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/identifiers/FedoraId.java", "diffHunk": "@@ -69,18 +69,18 @@ private FedoraId(final String fullId) {\n         this.fullId = ensurePrefix(fullId);\n         this.fullId = this.fullId.replaceAll(\"/+$\", \"\");\n         // Carry the path of the request for any exceptions.\n-        this.externalPath = this.fullId.substring(FEDORA_ID_PREFIX.length());\n+        this.pathOnly = this.fullId.substring(FEDORA_ID_PREFIX.length());\n \n         processIdentifier();\n     }\n \n     /**\n      * Static create method\n-     * @param fullId The ID to use for the FedoraId.\n+     * @param additions One or more strings to build an ID.\n      * @return The FedoraId.\n      */\n-    public static FedoraId create(final String fullId, final String... additions) {\n-        final var newId = idBuilder(fullId, additions);\n+    public static FedoraId create(final String... additions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa04a8b8450a2514642bde1b43b61272673884b7"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzYxNTQ4", "url": "https://github.com/fcrepo/fcrepo/pull/1652#pullrequestreview-390361548", "createdAt": "2020-04-08T21:58:52Z", "commit": {"oid": "fa04a8b8450a2514642bde1b43b61272673884b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3071, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}