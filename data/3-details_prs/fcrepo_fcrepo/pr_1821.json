{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTkyMTY2", "number": 1821, "title": "Search page in HTML UI", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3351\nWhat does this Pull Request do?\nMakes a page that builds a search tool, gives you a select box with fields and operators and a text box to enter your value.\nDoes not but is built to allow us to add more sets of query boxes to make compound queries.\nParses the URL to populate the query boxes.\nFormats the results into a table.\nHow should this be tested?\nBuild it, add some objects. Try using the search.\nInterested parties\nTag (@ mention) interested parties or, if unsure, @fcrepo/committers", "createdAt": "2020-12-01T21:40:37Z", "url": "https://github.com/fcrepo/fcrepo/pull/1821", "merged": true, "mergeCommit": {"oid": "233f91314baa74dcf4c86d02a7765a54c3959ba7"}, "closed": true, "closedAt": "2020-12-02T14:50:03Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhp-7tgH2gAyNTMwNTkyMTY2OjdiMGQyNmFjMGNiODdlNjI4ZmUyNmQ4NTdiNjllOGZhYzg1MjFlMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiPtrqAFqTU0MjkxMDU0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b0d26ac0cb87e628fe26d857b69e8fac8521e2f", "author": {"user": null}, "url": "https://github.com/fcrepo/fcrepo/commit/7b0d26ac0cb87e628fe26d857b69e8fac8521e2f", "committedDate": "2020-11-30T18:51:35Z", "message": "Initial updates for Search UI\n\nRelated to: https://jira.lyrasis.org/browse/FCREPO-3351"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af95ddf689e1adf30f52fb2a9bbf68e07f02e95", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/9af95ddf689e1adf30f52fb2a9bbf68e07f02e95", "committedDate": "2020-12-01T21:37:04Z", "message": "Make search page format results"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzg3NzE4", "url": "https://github.com/fcrepo/fcrepo/pull/1821#pullrequestreview-542387718", "createdAt": "2020-12-01T23:40:36Z", "commit": {"oid": "9af95ddf689e1adf30f52fb2a9bbf68e07f02e95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0MDozNlrOH9EU-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0MDo0OVrOH9EVQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NjA5MA==", "bodyText": "Can be private.", "url": "https://github.com/fcrepo/fcrepo/pull/1821#discussion_r533796090", "createdAt": "2020-12-01T23:40:36Z", "author": {"login": "awoods"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/responses/ViewHelpers.java", "diffHunk": "@@ -468,4 +468,51 @@ public static String parameterize(final String source) {\n     public static boolean isManagedProperty(final Node property) {\n         return property.isURI() && isManagedPredicate.test(createProperty(property.getURI()));\n     }\n+\n+    /**\n+     * Find a key in a map and format it as a string\n+     * @param input map of objects.\n+     * @param key the key to locate in the map.\n+     * @return the result string.\n+     */\n+    public static String getString(final Map<String, Object> input, final String key) {\n+        if (input.get(key) == null) {\n+            return \"\";\n+        }\n+        final var value = input.get(key);\n+        final var clazz = value.getClass();\n+        final String output;\n+        if (clazz == String.class) {\n+            output = formatAsString((String) value);\n+        } else if (clazz == String[].class) {\n+            output = formatAsString((String[]) value);\n+        } else if (clazz == Long.class) {\n+            output = formatAsString((Long) value);\n+        } else {\n+            output = \"\";\n+        }\n+        return output;\n+    }\n+\n+    /**\n+     * Format to a string and check for null values\n+     * @param input a string array or null\n+     * @return a string.\n+     */\n+    public static String formatAsString(final String[] input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af95ddf689e1adf30f52fb2a9bbf68e07f02e95"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NjEzMg==", "bodyText": "Can be private.", "url": "https://github.com/fcrepo/fcrepo/pull/1821#discussion_r533796132", "createdAt": "2020-12-01T23:40:42Z", "author": {"login": "awoods"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/responses/ViewHelpers.java", "diffHunk": "@@ -468,4 +468,51 @@ public static String parameterize(final String source) {\n     public static boolean isManagedProperty(final Node property) {\n         return property.isURI() && isManagedPredicate.test(createProperty(property.getURI()));\n     }\n+\n+    /**\n+     * Find a key in a map and format it as a string\n+     * @param input map of objects.\n+     * @param key the key to locate in the map.\n+     * @return the result string.\n+     */\n+    public static String getString(final Map<String, Object> input, final String key) {\n+        if (input.get(key) == null) {\n+            return \"\";\n+        }\n+        final var value = input.get(key);\n+        final var clazz = value.getClass();\n+        final String output;\n+        if (clazz == String.class) {\n+            output = formatAsString((String) value);\n+        } else if (clazz == String[].class) {\n+            output = formatAsString((String[]) value);\n+        } else if (clazz == Long.class) {\n+            output = formatAsString((Long) value);\n+        } else {\n+            output = \"\";\n+        }\n+        return output;\n+    }\n+\n+    /**\n+     * Format to a string and check for null values\n+     * @param input a string array or null\n+     * @return a string.\n+     */\n+    public static String formatAsString(final String[] input) {\n+        return (input == null || input.length == 0 ? \"\" :  String.join(\", \", input));\n+    }\n+\n+    /**\n+     * Format a string to check for null values\n+     * @param input a string or null\n+     * @return a string.\n+     */\n+    public static String formatAsString(final String input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af95ddf689e1adf30f52fb2a9bbf68e07f02e95"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NjE2Mg==", "bodyText": "Can be private.", "url": "https://github.com/fcrepo/fcrepo/pull/1821#discussion_r533796162", "createdAt": "2020-12-01T23:40:49Z", "author": {"login": "awoods"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/responses/ViewHelpers.java", "diffHunk": "@@ -468,4 +468,51 @@ public static String parameterize(final String source) {\n     public static boolean isManagedProperty(final Node property) {\n         return property.isURI() && isManagedPredicate.test(createProperty(property.getURI()));\n     }\n+\n+    /**\n+     * Find a key in a map and format it as a string\n+     * @param input map of objects.\n+     * @param key the key to locate in the map.\n+     * @return the result string.\n+     */\n+    public static String getString(final Map<String, Object> input, final String key) {\n+        if (input.get(key) == null) {\n+            return \"\";\n+        }\n+        final var value = input.get(key);\n+        final var clazz = value.getClass();\n+        final String output;\n+        if (clazz == String.class) {\n+            output = formatAsString((String) value);\n+        } else if (clazz == String[].class) {\n+            output = formatAsString((String[]) value);\n+        } else if (clazz == Long.class) {\n+            output = formatAsString((Long) value);\n+        } else {\n+            output = \"\";\n+        }\n+        return output;\n+    }\n+\n+    /**\n+     * Format to a string and check for null values\n+     * @param input a string array or null\n+     * @return a string.\n+     */\n+    public static String formatAsString(final String[] input) {\n+        return (input == null || input.length == 0 ? \"\" :  String.join(\", \", input));\n+    }\n+\n+    /**\n+     * Format a string to check for null values\n+     * @param input a string or null\n+     * @return a string.\n+     */\n+    public static String formatAsString(final String input) {\n+        return (input == null ? \"\" : input);\n+    }\n+\n+    public static String formatAsString(final Long input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af95ddf689e1adf30f52fb2a9bbf68e07f02e95"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dcf805507b52bdfb5ef1812d52b071ff049aaf0", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/2dcf805507b52bdfb5ef1812d52b071ff049aaf0", "committedDate": "2020-12-02T05:17:43Z", "message": "Code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTEwNTQ0", "url": "https://github.com/fcrepo/fcrepo/pull/1821#pullrequestreview-542910544", "createdAt": "2020-12-02T14:49:08Z", "commit": {"oid": "2dcf805507b52bdfb5ef1812d52b071ff049aaf0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3042, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}