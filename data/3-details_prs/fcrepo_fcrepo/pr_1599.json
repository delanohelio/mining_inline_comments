{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTY5MzA3", "number": 1599, "title": "Fedora 6 Demo 1", "bodyText": "**Make all fixes necessary to be able to perform the first Fedora 6 demo **\n\nJIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3159\n\nOther Relevant Links (Mailing list discussion, related pull requests, etc.)\n\nWhat does this Pull Request do?\n\nGET the repository root\nPUT a basic container\nGET a basic container\n\nWhat's new?\nRepositoryInitializer  automatically  populates the FedoraToOCFLIndex with the root  repository node.\nHow should this be tested?\nmvn clean install -Pone-click\n\njava  -Dfcrepo.ocfl.staging.dir=target/fcrepo-data/staging \\ \n-Dfcrepo.ocfl.storage.root.dir=target/fcrepo-data/ocfl-root \\ \n-Dfcrepo.ocfl.work.dir=target/fcrepo-data/work  \\ \n-jar fcrepo-webapp/target/fcrepo-webapp-6.0.0-SNAPSHOT-jetty-console.jar --headless\n\n# GET repo root\ncurl -u fedoraAdmin:fedoraAdmin http://localhost:8080/rest -i\n# PUT a basic container\ncurl -u fedoraAdmin:fedoraAdmin http://localhost:8080/rest/test -v  -H \"Content-Type: text/turtle\"  -X PUT --data \"<> <http://purl.org/dc/elements/1.1/title> 'My Test RDF'\"\n# GET a basic container\ncurl -u fedoraAdmin:fedoraAdmin http://localhost:8080/rest/test -i\n\nAdditional Notes:\nIt is no longer necessary to delete the ./fcrepo-data  and ./fcrepo-http-api/fcrepo-data directories between runs.  However you should specify your ocfl directories in the commandline as I have indicated above when running the one-click.  Additionally you should delete the ./target/fcrepo-data directory in between runs of the one-click.\nInterested parties\nTag (@ mention) interested parties or, if unsure, @fcrepo4/committers", "createdAt": "2020-01-04T01:14:05Z", "url": "https://github.com/fcrepo/fcrepo/pull/1599", "merged": true, "mergeCommit": {"oid": "621740af40bec70beec2c9717f4875799f50ebb6"}, "closed": true, "closedAt": "2020-01-10T22:21:13Z", "author": {"login": "dbernstein"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3y3JRgFqTMzODgyNjQxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5GLY8gFqTM0MTQ1MzI1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4ODI2NDE1", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-338826415", "createdAt": "2020-01-06T18:54:52Z", "commit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxODo1NDo1MlrOFamFng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToxMToyOFrOFapWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMTMyNg==", "bodyText": "There is already org.apache.jena.vocabulary.RDF.type, so we probably don't need to declare our own constant.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363431326", "createdAt": "2020-01-06T18:54:52Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/RdfLexicon.java", "diffHunk": "@@ -131,6 +134,9 @@\n     public static final Resource FEDORA_PAIR_TREE =\n             createResource(REPOSITORY_NAMESPACE + \"Pairtree\");\n \n+    //RDF\n+    public static final Node RDF_TYPE = createURI(RDF_NAMESPACE + \"type\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3NDAzNw==", "bodyText": "I believe the intent of getTriples is to return user supplied triples, since whether to include managed properties will need to be decided based on prefer headers. Perhaps https://github.com/fcrepo4/fcrepo4/blob/c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java#L291 could be updated to always concat in the managed properties for the purposes of this demo?\nWe probably can actually drop OCFLPersistentStorageSession.getManagedProperties, it is leftover from when we thought we would store managed properties as RDF. getHeaders returns all the pertinent info from the persistence layer. The properties that constitute managed properties are largely available as getters from FedoraResource. Some of the indexes that populate them aren't present yet unfortunately (like getTypes, which I suppose could temporarily just return the interaction model). I think we had talked about there being services for pulling together each of the chunks of triples for responses, perhaps we could add the one that puts together the managed properties now, which would produce roughly what getManagedProperties does currently.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363474037", "createdAt": "2020-01-06T20:43:32Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -178,7 +181,10 @@ public boolean hasType(final String type) {\n     @Override\n     public RdfStream getTriples() {\n         try {\n-            return getSession().getTriples(id, getMementoDatetime());\n+            final var triples = Stream.concat(getSession().getTriples(id, getMementoDatetime()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3ODEwNQ==", "bodyText": "Not sure why checkstyles isn't complaining, but lines 54 and 58 are over 120 characters long.\nI'd also line to suggest logging something when the initializer finds the root missing so that logs will indicate that its starting from an empty repo, in case that's surprising.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363478105", "createdAt": "2020-01-06T20:53:47Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl;\n+\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperationFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSession;\n+import org.fcrepo.persistence.api.exceptions.PersistentItemNotFoundException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+\n+/**\n+ * This class is responsible for initializing the repository on start-up.\n+ *\n+ * @author dbernstein\n+ */\n+@Component\n+public class RepositoryInitializer {\n+\n+    @Inject\n+    private OCFLPersistentSessionManager sessionManager;\n+\n+    @Inject\n+    private RdfSourceOperationFactory operationFactory;\n+\n+    /**\n+     * Initializes the repository\n+     */\n+    @PostConstruct\n+    public void initialize() {\n+        //check that the root is initialized\n+        final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" + System.currentTimeMillis());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTUyNg==", "bodyText": "I think the duplicate catch can be refactored into one:\ntry {\n        try {\n            session.getHeaders(FEDORA_ID_PREFIX, null);\n        } catch (PersistentItemNotFoundException e) {\n            final RdfSourceOperation operation = this.operationFactory.createBuilder(FEDORA_ID_PREFIX, \"http://www.w3.org/ns/ldp#BasicContainer\")\n                    .parentId(FEDORA_ID_PREFIX).build();\n\n            session.persist(operation);\n            session.commit();\n        }\n} catch (PersistentStorageException ex) {\n    throw new RepositoryRuntimeException(e);\n}", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363479526", "createdAt": "2020-01-06T20:57:33Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl;\n+\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperationFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSession;\n+import org.fcrepo.persistence.api.exceptions.PersistentItemNotFoundException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+\n+/**\n+ * This class is responsible for initializing the repository on start-up.\n+ *\n+ * @author dbernstein\n+ */\n+@Component\n+public class RepositoryInitializer {\n+\n+    @Inject\n+    private OCFLPersistentSessionManager sessionManager;\n+\n+    @Inject\n+    private RdfSourceOperationFactory operationFactory;\n+\n+    /**\n+     * Initializes the repository\n+     */\n+    @PostConstruct\n+    public void initialize() {\n+        //check that the root is initialized\n+        final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" + System.currentTimeMillis());\n+        try {\n+            session.getHeaders(FEDORA_ID_PREFIX, null);\n+        } catch (PersistentItemNotFoundException e) {\n+            final RdfSourceOperation operation = this.operationFactory.createBuilder(FEDORA_ID_PREFIX, \"http://www.w3.org/ns/ldp#BasicContainer\")\n+                    .parentId(FEDORA_ID_PREFIX).build();\n+            try {\n+                session.persist(operation);\n+                session.commit();\n+            } catch (PersistentStorageException ex) {\n+                throw new RepositoryRuntimeException(e);\n+            }\n+        } catch (PersistentStorageException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ3OTc0NQ==", "bodyText": "the paragraphs are back", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363479745", "createdAt": "2020-01-06T20:58:05Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndex.java", "diffHunk": "@@ -31,10 +31,10 @@\n      * as an OCFL object and returns its identifiers.\n      *\n      * If you pass fedora identifier that is not part of an archival group such as\n-     * \"my/fedora/binary/fcr:metadata\"  the parent fedora resource returned in the mapping will be \"my/fedora/binary\".\n-     *\n+     * \"my/fedora/binary/fcr:metadata\"  the  fedora resource returned in the mapping will be \"my/fedora/binary\".\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw==", "bodyText": "Guessing we'll eventually want a more permanent location for this, probably from config? Maybe its not worthwhile to make a constant yet, hmm.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363484673", "createdAt": "2020-01-06T21:11:00Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -55,7 +54,7 @@ private static final File resolveDir(final String systemPropertyKey, final Strin\n             return new File(path);\n         } else {\n             //return default\n-            return Paths.get(getProperty(JAVA_IO_TMPDIR), defaultDirectoryName).toFile();\n+            return Paths.get(\"fcrepo-data\", defaultDirectoryName).toFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA==", "bodyText": "space.\nIs this covering the case where a client provides an empty body for a rdf source?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363484830", "createdAt": "2020-01-06T21:11:28Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java", "diffHunk": "@@ -173,7 +173,9 @@ public static WriteOutcome writeRDF(final OCFLObjectSession session, final RdfSt\n         try (final var os = new ByteArrayOutputStream()) {\n             final StreamRDF streamRDF = getWriterStream(os, getRdfFormat());\n             streamRDF.start();\n-            triples.forEach(streamRDF::triple);\n+            if(triples != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MTM4MTYy", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339138162", "createdAt": "2020-01-07T10:03:06Z", "commit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDowMzowNlrOFa038g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMTo0Nzo0OFrOFa3PzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3MzU4Ng==", "bodyText": "May as well remove these.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363673586", "createdAt": "2020-01-07T10:03:06Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -74,10 +74,10 @@\n import static org.fcrepo.kernel.api.RdfLexicon.VERSIONING_TIMEMAP_TYPE;\n import static org.fcrepo.kernel.api.RdfLexicon.isManagedNamespace;\n import static org.fcrepo.kernel.api.RdfLexicon.isManagedPredicate;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.EMBED_RESOURCES;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.INBOUND_REFERENCES;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.LDP_CONTAINMENT;\n-import static org.fcrepo.kernel.api.RequiredRdfContext.LDP_MEMBERSHIP;\n+//import static org.fcrepo.kernel.api.RequiredRdfContext.EMBED_RESOURCES;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3NDQ2Ng==", "bodyText": "An explanation for why these are being commented out would be helpful. I assume this is a temporary hack?\nShould there be an added TODO linking to a ticket to bring them back?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363674466", "createdAt": "2020-01-07T10:05:17Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -330,32 +322,32 @@ private RdfStream getResourceTriples(final int limit, final FedoraResource resou\n             // Additional server-managed triples about this resource\n             // Mementos already have the server managed properties in the PROPERTIES category\n             // since mementos are immutable and these triples are no longer managed\n-             if (ldpPreferences.prefersServerManaged() && !resource.isMemento()) {\n-                streams.add(getTriples(resource, SERVER_MANAGED));\n+            if (ldpPreferences.prefersServerManaged() && !resource.isMemento()) {\n+                //streams.add(getTriples(resource, SERVER_MANAGED));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5NzgzOQ==", "bodyText": "It seems safer to use identifierConverter() getter... instead of the this.identifierConverter directly.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363697839", "createdAt": "2020-01-07T11:04:36Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -447,7 +439,7 @@ private RdfStream getTriples(final FedoraResource resource, final TripleCategory\n \n     protected URI getUri(final FedoraResource resource) {\n         try {\n-            final String uri = translator().reverse().convert(resource).getURI();\n+            final String uri = this.identifierConverter.toExternalId(resource.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5ODExMQ==", "bodyText": "As a separate issue, should we go ahead and purge all usage of translator()?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363698111", "createdAt": "2020-01-07T11:05:25Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -447,7 +439,7 @@ private RdfStream getTriples(final FedoraResource resource, final TripleCategory\n \n     protected URI getUri(final FedoraResource resource) {\n         try {\n-            final String uri = translator().reverse().convert(resource).getURI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNjQ2OQ==", "bodyText": "For consistency and safety, probably best to use the identifierConverter() method.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363706469", "createdAt": "2020-01-07T11:29:47Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -425,8 +428,8 @@ public Response createOrReplaceObjectRdf(\n                         links, checksums, requestBodyStream, extContent);\n             }\n         } else {\n-            final Model model = httpRdfService.bodyToInternalModel(externalPath(), requestBodyStream,\n-                requestContentType);\n+            final Model model = httpRdfService.bodyToInternalModel(externalUri, requestBodyStream,\n+                requestContentType, identifierConverter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcxMjQ2MQ==", "bodyText": "Actually, I have an update that puts the OCFL storage in the tmp-dir... as intended.\nhttps://jira.lyrasis.org/browse/FCREPO-3162\nThe \"more permanent location\" can currently be defined by the system properties: https://github.com/fcrepo4/fcrepo4/pull/1599/files#diff-f2c25ea789161a21300d5fa03b8a3965R43-R45", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363712461", "createdAt": "2020-01-07T11:47:48Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -55,7 +54,7 @@ private static final File resolveDir(final String systemPropertyKey, final Strin\n             return new File(path);\n         } else {\n             //return default\n-            return Paths.get(getProperty(JAVA_IO_TMPDIR), defaultDirectoryName).toFile();\n+            return Paths.get(\"fcrepo-data\", defaultDirectoryName).toFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDY3Mw=="}, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5Mzk4Njky", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339398692", "createdAt": "2020-01-07T17:46:25Z", "commit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo0NjoyNVrOFbA0rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo0NjoyNVrOFbA0rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg2OTM1OA==", "bodyText": "Just noting that we get the externalPath from the @PathParam so adding the host and context back on is why I added the toDomain() method to the HttpIdentifierConverter. So these two lines could be\nfinal String fedoraId = identifierConverter().toInternalId(identifierConverter().toDomain(externalPath()));\n\nOtherwise we could remove the externalPath() setup and make either externalUri and/or fedoraId into a class variable as this will probably be needed.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363869358", "createdAt": "2020-01-07T17:46:25Z", "author": {"login": "whikloj"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/FedoraLdp.java", "diffHunk": "@@ -409,7 +411,8 @@ public Response createOrReplaceObjectRdf(\n             //}\n         }\n \n-        final String fedoraId = identifierConverter().toInternalId(externalPath());\n+        final String externalUri = this.uriInfo.getRequestUri().toString();\n+        final String fedoraId = identifierConverter().toInternalId(externalUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDAwNDQ2", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339400446", "createdAt": "2020-01-07T17:49:50Z", "commit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo0OTo1MFrOFbA5yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo0OTo1MFrOFbA5yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MDY2NA==", "bodyText": "This class has been replaced by the HttpIdentifierConverter perhaps adding a @deprecated to this is now necessary?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363870664", "createdAt": "2020-01-07T17:49:50Z", "author": {"login": "whikloj"}, "path": "fcrepo-http-commons/src/main/java/org/fcrepo/http/commons/api/rdf/HttpResourceConverter.java", "diffHunk": "@@ -96,8 +97,7 @@ protected FedoraResource doForward(final Resource resource) {\n \n     @Override\n     protected Resource doBackward(final FedoraResource resource) {\n-            //@TODO Implement this\n-            return null;\n+        return ResourceFactory.createResource(resource.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDAyMTky", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339402192", "createdAt": "2020-01-07T17:53:06Z", "commit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo1MzowNlrOFbA_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzo1MzowNlrOFbA_Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw==", "bodyText": "I'm not 100% sure, but if this is casting the long to a String I think\nfinal String stateToken = DigestUtils.md5Hex(String.valueOf(instant.toEpochMilli())).toUpperCase();\n\nwould be clearer...unless it doesn't work as expected?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r363872047", "createdAt": "2020-01-07T17:53:06Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeaderUtils.java", "diffHunk": "@@ -111,6 +113,9 @@ public static void touchModificationHeaders(final ResourceHeadersImpl headers, f\n         }\n         headers.setLastModifiedDate(instant);\n         headers.setLastModifiedBy(userPrincipal);\n+\n+        final String stateToken = DigestUtils.md5Hex(instant.toEpochMilli() + \"\").toUpperCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e0453af293576cb1b2109dd653cdaf038dafcb", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/c9e0453af293576cb1b2109dd653cdaf038dafcb", "committedDate": "2020-01-07T20:31:08Z", "message": "Adds repository initializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6af5bc5d9feeccd05247f42f82ebd0d0bc4f7bc", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/a6af5bc5d9feeccd05247f42f82ebd0d0bc4f7bc", "committedDate": "2020-01-07T20:45:12Z", "message": "Fixes GET repository root resource, PUT basic container and GET basic container."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "025ff0426598c930f81600e38b97543312b5f94d", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/025ff0426598c930f81600e38b97543312b5f94d", "committedDate": "2020-01-07T20:45:12Z", "message": "Enables two integration tests for HEAD on the repository root and\nPUT and GET a direct container."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "185a407b53f7b688ab415b6d7019b4a6cfd53004", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/185a407b53f7b688ab415b6d7019b4a6cfd53004", "committedDate": "2020-01-07T20:17:59Z", "message": "Address PR feedback."}, "afterCommit": {"oid": "2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "committedDate": "2020-01-08T00:41:07Z", "message": "Address PR feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "committedDate": "2020-01-08T00:44:49Z", "message": "Address PR feedback."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/2e801551083d36b5fbcbe3f49dd1ddb60b1e7e49", "committedDate": "2020-01-08T00:41:07Z", "message": "Address PR feedback."}, "afterCommit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4", "committedDate": "2020-01-08T00:44:49Z", "message": "Address PR feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjI5NjM5", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339629639", "createdAt": "2020-01-08T03:25:16Z", "commit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMzoyNToxNlrOFbL3fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMzoyNToxNlrOFbL3fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA1MDMwMQ==", "bodyText": "Minor: space after if and between ){", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364050301", "createdAt": "2020-01-08T03:25:16Z", "author": {"login": "awoods"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/FedoraResourceImpl.java", "diffHunk": "@@ -175,14 +176,25 @@ public boolean hasType(final String type) {\n \n     @Override\n     public List<URI> getTypes() {\n+        if(types == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjMzNjk2", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339633696", "createdAt": "2020-01-08T03:46:46Z", "commit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjQxNjc4", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-339641678", "createdAt": "2020-01-08T04:31:43Z", "commit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDozMTo0M1rOFbMd_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDozMTo0M1rOFbMd_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MDE1OA==", "bodyText": "@Component is for Spring creation/scanning. @Provider is for jax-rs resources. Was this change intentional? ...it appears to have broken the auto-injection functionality.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364060158", "createdAt": "2020-01-08T04:31:43Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/LinkHeaderProvider.java", "diffHunk": "@@ -49,18 +49,18 @@\n  * @author whikloj\n  * @since 2015-10-30\n  */\n-@Component\n+@Provider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6349568dfadc8a1a87757fc8b5ee4e8fbe06ba4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac006721bba09e15844f3c3c516081d598878bde", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/ac006721bba09e15844f3c3c516081d598878bde", "committedDate": "2020-01-08T17:23:40Z", "message": "Minor update to address previously overlooked PR comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/18611709b6b51bf76a161c6e152caa9c7ae392c6", "committedDate": "2020-01-08T17:32:18Z", "message": "Formatting."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTI3Mjcx", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-340127271", "createdAt": "2020-01-08T20:32:51Z", "commit": {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDozMjo1MlrOFbjCrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDoxMzowMlrOFb3GsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQyOTk5Ng==", "bodyText": "The tripleFilter thing might not be necessary here anymore since SMTs are being generated elsewhere. I think our conclusion was that we would silently ignore SMTs supplied by clients on POST/PUT. Or maybe i'm being overly optimistic", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364429996", "createdAt": "2020-01-08T20:32:52Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -315,47 +303,54 @@ private RdfStream getResourceTriples(final int limit, final FedoraResource resou\n \n         final List<Stream<Triple>> streams = new ArrayList<>();\n \n-\n         if (returnPreference.getValue().equals(\"minimal\")) {\n-            streams.add(getTriples(resource, of(PROPERTIES, MINIMAL)).filter(tripleFilter));\n-\n+            streams.add(resource.getTriples().filter(tripleFilter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0MzQ1MQ==", "bodyText": "i don't think this is the right description", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364743451", "createdAt": "2020-01-09T13:42:25Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/services/ManagedPropertiesService.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.api.services;\n+\n+import org.apache.jena.graph.Triple;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+\n+import java.util.stream.Stream;\n+\n+/**\n+ * Interface for a service to create a new resource via a POST request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MjQ1MA==", "bodyText": "Either String.valueOf or Long.toString would be fine and not add commas, but they might not matter at this point", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364752450", "createdAt": "2020-01-09T14:00:09Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeaderUtils.java", "diffHunk": "@@ -111,6 +113,9 @@ public static void touchModificationHeaders(final ResourceHeadersImpl headers, f\n         }\n         headers.setLastModifiedDate(instant);\n         headers.setLastModifiedBy(userPrincipal);\n+\n+        final String stateToken = DigestUtils.md5Hex(instant.toEpochMilli() + \"\").toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MjA0Nw=="}, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1NjYwNg==", "bodyText": "is \"read-only\" going to be referenced again in the future or is it just for the sake of having a string here? Wondering if it should be a constant.", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364756606", "createdAt": "2020-01-09T14:08:41Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -98,7 +99,9 @@ public DefaultOCFLObjectSessionFactory(final File ocflStagingDir, final File ocf\n \n     @Override\n     public OCFLObjectSession create(final String ocflId, final String persistentStorageSessionId) {\n-        final File stagingDirectory = new File(this.ocflStagingDir, persistentStorageSessionId);\n+\n+        final File stagingDirectory = new File(this.ocflStagingDir,\n+                persistentStorageSessionId == null ? \"read-only\" : persistentStorageSessionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18611709b6b51bf76a161c6e152caa9c7ae392c6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1ODcwNA==", "bodyText": "Okay, what scenario do you get an null triples stream in a call to writeRDF?", "url": "https://github.com/fcrepo/fcrepo/pull/1599#discussion_r364758704", "createdAt": "2020-01-09T14:13:02Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java", "diffHunk": "@@ -173,7 +173,9 @@ public static WriteOutcome writeRDF(final OCFLObjectSession session, final RdfSt\n         try (final var os = new ByteArrayOutputStream()) {\n             final StreamRDF streamRDF = getWriterStream(os, getRdfFormat());\n             streamRDF.start();\n-            triples.forEach(streamRDF::triple);\n+            if(triples != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4NDgzMA=="}, "originalCommit": {"oid": "c26e0f84c20f2f2f460b5dfc0d92d9e12afa9c96"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185a35d23a1dac356a91aaa80ae9fb8b39b12a16", "author": {"user": null}, "url": "https://github.com/fcrepo/fcrepo/commit/185a35d23a1dac356a91aaa80ae9fb8b39b12a16", "committedDate": "2020-01-09T17:20:35Z", "message": "Resolves issues with transaction injection\n\nRelated to: https://jira.lyrasis.org/browse/FCREPO-3159\n\nAlso resolves: https://jira.lyrasis.org/browse/FCREPO-3160"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec054b1238962fd0cecfa7f1789d395e77ae800b", "author": {"user": {"login": "dbernstein", "name": "dbernstein"}}, "url": "https://github.com/fcrepo/fcrepo/commit/ec054b1238962fd0cecfa7f1789d395e77ae800b", "committedDate": "2020-01-09T17:37:49Z", "message": "* Use String.valueOf() for converting long to String\n* Remove tripleFilter in getResourceTriples().\n* Update javadoc on ManagedPropertiesService."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODc5MDY0", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-340879064", "createdAt": "2020-01-09T23:28:59Z", "commit": {"oid": "ec054b1238962fd0cecfa7f1789d395e77ae800b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDUzMjU2", "url": "https://github.com/fcrepo/fcrepo/pull/1599#pullrequestreview-341453256", "createdAt": "2020-01-10T22:20:29Z", "commit": {"oid": "ec054b1238962fd0cecfa7f1789d395e77ae800b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3195, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}